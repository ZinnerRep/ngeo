{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/goog.asserts.prod.js","webpack:///./src/GeometryType.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/format/AttributeType.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/rule/Rule.js","webpack:///./src/datasource/OGC.js","webpack:///./contribs/gmf/src/index.js","webpack:///./src/misc/FeatureHelper.js","webpack:///./src/misc/ToolActivate.js","webpack:///./src/utils.js","webpack:///./src/message/Message.js","webpack:///./src/CustomEvent.js","webpack:///./src/rule/Geometry.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/map/LayerHelper.js","webpack:///./src/layertree/Controller.js","webpack:///./src/interaction/Measure.js","webpack:///./src/query/MapQuerent.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/misc/WMSTime.js","webpack:///./src/misc/filters.js","webpack:///./src/misc/decorate.js","webpack:///./src/misc/EventHelper.js","webpack:///./contribs/gmf/src/layertree/SyncLayertreeMap.js","webpack:///./src/filter/Condition.js","webpack:///./src/rule/Date.js","webpack:///./src/rule/Text.js","webpack:///./src/filter/RuleHelper.js","webpack:///./src/datasource/File.js","webpack:///./src/datasource/FileGroup.js","webpack:///./src/datasource/OGCGroup.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./contribs/gmf/src/datasource/ExternalDataSourcesManager.js","webpack:///./src/datasource/DataSources.js","webpack:///./contribs/gmf/src/editing/editFeatureComponent.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/rule/Select.js","webpack:///./src/misc/debounce.js","webpack:///./src/misc/ToolActivateMgr.js","webpack:///./src/misc/btnComponent.js","webpack:///./src/statemanager/Service.js","webpack:///./src/interaction/common.js","webpack:///./contribs/gmf/src/authentication/Service.js","webpack:///./src/misc/Time.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./src/message/popupComponent.js","webpack:///./src/message/Popup.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/format/XSDAttribute.js","webpack:///./src/datasource/Group.js","webpack:///./src/format/WFSAttribute.js","webpack:///./src/datasource/Helper.js","webpack:///./src/WFSDescribeFeatureType.js","webpack:///./src/query/Querent.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./src/interaction/Translate.js","webpack:///./src/interaction/Rotate.js","webpack:///./src/draw/features.js","webpack:///./src/Menu.js","webpack:///./src/statemanager/Location.js","webpack:///./src/download/service.js","webpack:///./contribs/gmf/src/datasource/DataSourceBeingFiltered.js","webpack:///./src/message/modalComponent.js","webpack:///./src/message/Notification.js","webpack:///./src/misc/php-date-formatter.js","webpack:///./contribs/gmf/src/permalink/ShareService.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/interaction/MeasureLength.js","webpack:///./src/interaction/MeasureArea.js","webpack:///./contribs/gmf/src/authentication/component.js","webpack:///./contribs/gmf/src/authentication/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./contribs/gmf/src/backgroundlayerselector/component.js","webpack:///./contribs/gmf/src/datasource/Helper.js","webpack:///./contribs/gmf/src/datasource/OGC.js","webpack:///./contribs/gmf/src/datasource/WFSAliases.js","webpack:///./contribs/gmf/src/datasource/Manager.js","webpack:///./contribs/gmf/src/datasource/module.js","webpack:///./src/message/Disclaimer.js","webpack:///./contribs/gmf/src/disclaimer/component.js","webpack:///./contribs/gmf/src/filters/SavedFilters.js","webpack:///./src/filter/ruleComponent.js","webpack:///./src/filter/component.js","webpack:///./contribs/gmf/src/filters/filterselectorComponent.js","webpack:///./contribs/gmf/src/filters/module.js","webpack:///./contribs/gmf/src/layertree/timeSliderComponent.js","webpack:///./contribs/gmf/src/layertree/module.js","webpack:///./contribs/gmf/src/permalink/module.js","webpack:///./src/map/component.js","webpack:///./src/map/scaleselector.js","webpack:///./src/map/module.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./contribs/gmf/src/map/mousepositionComponent.js","webpack:///./contribs/gmf/src/map/module.js","webpack:///./src/grid/Config.js","webpack:///./src/grid/component.js","webpack:///./contribs/gmf/src/query/gridComponent.js","webpack:///./src/misc/swipe.js","webpack:///./contribs/gmf/src/query/windowComponent.js","webpack:///./contribs/gmf/src/query/extraModule.js","webpack:///./contribs/gmf/src/search/module.js","webpack:///./contribs/gmf/src/theme/selectorComponent.js","webpack:///./contribs/gmf/src/theme/module.js","webpack:///./src/message/displaywindowComponent.js","webpack:///./src/misc/controlComponent.js","webpack:///./src/misc/filereaderComponent.js","webpack:///./src/misc/getBrowserLanguage.js","webpack:///./src/misc/extraModule.js","webpack:///./src/query/mapQueryComponent.js","webpack:///./src/statemanager/WfsPermalink.js","webpack:///./contribs/gmf/src/controllers/AbstractAppController.js","webpack:///./src/interaction/ModifyCircle.js","webpack:///./src/interaction/ModifyRectangle.js","webpack:///./src/interaction/Modify.js","webpack:///./src/draw/Controller.js","webpack:///./src/draw/point.js","webpack:///./src/draw/rectangle.js","webpack:///./src/draw/text.js","webpack:///./src/measure/area.js","webpack:///./src/measure/azimut.js","webpack:///./src/measure/length.js","webpack:///./src/draw/component.js","webpack:///./contribs/gmf/src/editing/XSDAttributes.js","webpack:///./contribs/gmf/src/editing/EditFeature.js","webpack:///./contribs/gmf/src/raster/RasterService.js","webpack:///./src/proj/somerc.js","webpack:///./src/misc/colorpickerComponent.js","webpack:///./src/misc/AutoProjection.js","webpack:///./contribs/gmf/src/search/FulltextSearch.js","webpack:///./src/download/Csv.js","webpack:///./src/map/resizemap.js","webpack:///./contribs/gmf/src/permalink/shareComponent.js","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.js","webpack:///./src/statemanager/module.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/misc/datepickerComponent.js","webpack:///./src/format/Attribute.js","webpack:///./contribs/gmf/src/editing/EnumerateAttribute.js","webpack:///./src/misc/File.js","webpack:///./contribs/gmf/src/controllers/AbstractDesktopController.js","webpack:///./contribs/gmf/src/editing/editFeatureSelectorComponent.js","webpack:///./contribs/gmf/src/editing/module.js","webpack:///./contribs/gmf/src/contextualdata/component.js","webpack:///./contribs/gmf/src/contextualdata/module.js","webpack:///./src/print/VectorEncoder.js","webpack:///./src/print/Service.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/format/FeatureHash.js","webpack:///./contribs/gmf/src/drawing/featureStyleComponent.js","webpack:///./contribs/gmf/src/drawing/drawFeatureComponent.js","webpack:///./contribs/gmf/src/drawing/module.js","webpack:///./contribs/gmf/src/import/wmsCapabilityLayertreeComponent.js","webpack:///./contribs/gmf/src/import/wmtsCapabilityLayertreeComponent.js","webpack:///./contribs/gmf/src/import/importdatasourceComponent.js","webpack:///./contribs/gmf/src/import/module.js","webpack:///./src/search/searchDirective.js","webpack:///./src/search/createGeoJSONBloodhound.js","webpack:///./src/search/createLocationSearchBloodhound.js","webpack:///./src/search/module.js","webpack:///./src/profile/d3Elevation.js","webpack:///./src/profile/elevationComponent.js","webpack:///./contribs/gmf/src/profile/component.js","webpack:///./contribs/gmf/src/profile/drawLineComponent.js","webpack:///./contribs/gmf/src/profile/module.js","webpack:///./src/query/bboxQueryComponent.js","webpack:///./contribs/gmf/src/raster/component.js","webpack:///./src/print/Utils.js","webpack:///./contribs/gmf/src/print/component.js","webpack:///./src/editing/createfeatureComponent.js","webpack:///./src/misc/datetimepickerComponent.js","webpack:///./src/editing/attributesComponent.js","webpack:///./src/editing/exportfeaturesComponent.js","webpack:///./src/misc/sortableComponent.js","webpack:///./src/message/popoverComponent.js","webpack:///./contribs/gmf/src/search/component.js","webpack:///./src/map/recenter.js","webpack:///./src/misc/syncArrays.js","webpack:///./src/layertree/component.js","webpack:///./src/olcs/constants.js","webpack:///./src/Popover.js","webpack:///./contribs/gmf/src/layertree/component.js","webpack:///./contribs/gmf/apps/appmodule.js","webpack:///./src/proj/EPSG2056.js","webpack:///./contribs/gmf/apps/desktop/Controller.js","webpack:///./contribs/gmf/apps/desktop/contextualdata.html","webpack:///./contribs/gmf/src/import/importdatasourceComponent.html","webpack:///./contribs/gmf/src/import/wmtsCapabilityLayertreeComponent.html","webpack:///./contribs/gmf/src/import/wmsCapabilityLayertreeComponent.html","webpack:///./contribs/gmf/src/raster/widgetComponent.html","webpack:///./contribs/gmf/src/profile/component.html","webpack:///./contribs/gmf/src/print/component.html","webpack:///./contribs/gmf/src/editing/editFeatureSelectorComponent.html","webpack:///./contribs/gmf/src/editing/editFeatureComponent.html","webpack:///./src/editing/attributescomponent.html","webpack:///./contribs/gmf/src/drawing/drawFeatureComponent.html","webpack:///./contribs/gmf/src/drawing/featureStyleComponent.html","webpack:///./src/message/displaywindowComponent.html","webpack:///./contribs/gmf/src/theme/selectorComponent.html","webpack:///./contribs/gmf/src/search/component.html","webpack:///./src/misc/colorpickerComponent.html","webpack:///./contribs/gmf/src/query/windowComponent.html","webpack:///./contribs/gmf/src/query/gridComponent.html","webpack:///./src/grid/component.html","webpack:///./contribs/gmf/src/map/mousepositionComponent.html","webpack:///./contribs/gmf/src/map/component.html","webpack:///./src/map/scaleselector.html","webpack:///./contribs/gmf/src/permalink/shareComponent.html","webpack:///./contribs/gmf/src/layertree/timesliderComponent.html","webpack:///./contribs/gmf/src/layertree/component.html","webpack:///./src/layertree/component.html","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.html","webpack:///./contribs/gmf/src/filters/filterselectorcomponent.html","webpack:///./src/filter/component.html","webpack:///./src/filter/rulecomponent.html","webpack:///./src/misc/datepickerComponent.html","webpack:///./src/message/popupcomponent.html","webpack:///./contribs/gmf/src/backgroundlayerselector/component.html","webpack:///./contribs/gmf/src/authentication/component.html"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","p","jsonpArray","window","oldJsonpFunction","bind","slice","condition","opt_message","var_args","type","__webpack_exports__","CIRCLE","LINE_STRING","MULTI_LINE_STRING","MULTI_POINT","MULTI_POLYGON","POINT","POLYGON","RECTANGLE","TEXT","ANGLE","COLOR","IS_CIRCLE","IS_RECTANGLE","IS_TEXT","NAME","SHOW_LABEL","OPACITY","AZIMUT","SHOW_MEASURE","SIZE","STROKE","BOOLEAN","DATE","DATETIME","TIME","GEOMETRY","NUMBER","SELECT","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_6__","$http","$injector","$q","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","ol_events_EventTarget_js__WEBPACK_IMPORTED_MODULE_5__","this","addBlankBackgroundLayer_","undefined","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","defer","promise_","promise","loaded","bgLayerPromise_","ol_index_js__WEBPACK_IMPORTED_MODULE_2__","findGroupByLayerNodeName","themes","ii","theme","jj","children","group","childNodes","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","ol_array_js__WEBPACK_IMPORTED_MODULE_3__","findThemeByName","themeName","node","nodes","getBgLayers","_this","layerHelper","callback","item","layer","set","metadata","dimensions","ids","getIds","array","forEach","child","layerLayerCreationFn","ogcServers","gmfLayer","gmfLayerWMTS","goog_asserts_js__WEBPACK_IMPORTED_MODULE_0__","assert","url","createWMTSLayerFromCapabilitites","matrixSet","then","response","message","console","error","resolve","gmfLayerWMS","ogcServer","server","imageType","createBasicWMSLayer","layers","credential","fail","promiseSuccessFn","promises","background_layers","map","itemType","x","reverse","all","collection","filter","ol_Collection_js__WEBPACK_IMPORTED_MODULE_4__","createBasicGroup","layerGroupCreationFn","values","getString","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","getOgcServersObject","hasEditableLayers","hasEditableLayers_","_this2","some","hasNodeEditableLayers_","editable","getSnappingConfig","snappingConfig","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","params","role","cache_version","cache","withCredentials","errors","join","hasParam","alert","dispatchEvent","reject","NodeType","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","WMS","angular","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_1__","service","options","_classCallCheck","active_","active","expression","lowerBoundary_","lowerBoundary","operator_","operator","upperBoundary_","upperBoundary","isCustom_","isCustom","name_","operators_","operators","propertyName_","propertyName","type_","listenerKeys","getExpression","setExpression","reset","destroy","ol_events_js__WEBPACK_IMPORTED_MODULE_1__","_createClass","key","OperatorType","BETWEEN","TemporalOperatorType","DURING","EQUAL_TO","GREATER_THAN","GREATER_THAN_OR_EQUAL_TO","LESSER_THAN","LESSER_THAN_OR_EQUAL_TO","LIKE","NOT_EQUAL_TO","SpatialOperatorType","CONTAINS","INTERSECTS","WITHIN","BEGINS","ENDS","EQUALS","_possibleConstructorReturn","_ngeoDatasourceDataSo","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","ngeo_filter_Condition_js__WEBPACK_IMPORTED_MODULE_2__","AND","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","geometryName","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","queryable","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref","next","done","ogcLayer","wfsFormat","supportsWFS","format","ol_format_GML3_js__WEBPACK_IMPORTED_MODULE_5__","GML2","ol_format_GML2_js__WEBPACK_IMPORTED_MODULE_4__","ol_format_WFS_js__WEBPACK_IMPORTED_MODULE_6__","featureNS","featureType","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","ol_format_WMSGetFeatureInfo_js__WEBPACK_IMPORTED_MODULE_7__","wmsFormat_","_inherits","getAttributes","attributes","setAttributes","updateGeometryNameFromAttributes_","combinableWithDataSourceForWFS","dataSource","combinableForWFS","haveTheSameActiveDimensions","combinableWithDataSourceForWMS","combinableForWMS","isAnyOGCLayerInRange","res","queryableOnly","arguments","getInRangeOGCLayerNames","layerNames","_iterator2","_isArray2","_i2","_ref2","maxRes","minRes","getOGCLayerNames","_iterator3","_isArray3","_i3","_ref3","getFiltrableOGCLayerName","_iterator4","_isArray4","_i4","_ref4","attribute","ngeo_format_AttributeType_js__WEBPACK_IMPORTED_MODULE_3__","share","myActive","activeDimensions","itsActive","time","range","lower","upper","end","start","config","timeRangeValue","_iterator5","_isArray5","_i5","_ref5","ngeo_datasource_DataSource_js__WEBPACK_IMPORTED_MODULE_1__","guessServiceTypeByUrl","test","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BG_LAYER","EXTERNAL_DATASOURCES_NAMES","EXTERNAL_DATASOURCES_URLS","FEATURES","MAP_CROSSHAIR","MAP_TOOLTIP","MAP_X","MAP_Y","MAP_Z","TREE_GROUPS","WFS_LAYER","WFS_NGROUPS","WFS_SHOW_FEATURES","ol_style_Text_js__WEBPACK_IMPORTED_MODULE_24__","$filter","$filter_","decimals_","precision_","numberFormat_","unitPrefixFormat_","ngeoNumberCoordinates_","pointFilterFn_","pointFilterArgs_","filterElements","split","filterName","assertFunction","projection_","download_","setProjection","projection","setStyle","feature","opt_select","styles","getStyle","supportsVertex_","getVertexStyle","unshift","getHaloStyle_","style","getType","ngeo_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__","getLineStringStyle_","getPointStyle_","getPolygonStyle_","getTextStyle_","constructor","strokeWidth","getStrokeProperty","showLabel","getShowLabelProperty","showMeasure","getShowMeasureProperty","color","getRGBAColorProperty","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_23__","stroke","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_22__","width","textLabelValues","getMeasure","getNameProperty","textLabelValue","text","createTextStyle_","size","getSizeProperty","image","ol_style_Circle_js__WEBPACK_IMPORTED_MODULE_19__","radius","fill","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_20__","offsetY","font_size","optNumber","attrib","assertNumber","getNumber","opacity","getOpacityProperty","fillColor","azimut","ngeo_format_FeatureProperties_js__WEBPACK_IMPORTED_MODULE_3__","line","getRadiusLine","ngeo_interaction_Measure_js__WEBPACK_IMPORTED_MODULE_5__","getFormattedLength","geometry","angle","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_14__","getLastCoordinate","offsetX","Math","cos","PI","sin","exceedLength","getAngleProperty","createEditingStyles","white","blue","geom","getGeometry","zIndex","Infinity","opt_incGeomFunc","incGeomFunc","ol_style_RegularShape_js__WEBPACK_IMPORTED_MODULE_21__","points","innerMultiCoordinates","multiCoordinates","coordinates","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_11__","getCoordinates","ol_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_12__","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_15__","ol_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_16__","concat","ol_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_13__","supported","ol_array_js__WEBPACK_IMPORTED_MODULE_7__","haloSize","getFilteredFeatureValues","properties","getProperties","getGeometryName","getColorProperty","assertString","ol_color_js__WEBPACK_IMPORTED_MODULE_8__","assertBoolean","export","features","formatType","FormatType","GPX","exportGPX","KML","exportKML","ol_format_GPX_js__WEBPACK_IMPORTED_MODULE_17__","export_","ol_format_KML_js__WEBPACK_IMPORTED_MODULE_18__","fileName","opt_mimeType","mimeType","clones","clone","ol_Feature_js__WEBPACK_IMPORTED_MODULE_10__","writeOptions","dataProjection","featureProjection","writeFeatures","rotation","font","measure","ngeo_interaction_MeasureAzimut_js__WEBPACK_IMPORTED_MODULE_6__","getFormattedAzimutRadius","getFormattedArea","getFormattedPoint","args","panMapToFeature","opt_panDuration","panDuration","getSize","assertArray","view","getView","extent","calculateExtent","intersectsExtent","mapCenter","getCenter","featureCenter","getCoordinateAt","getInteriorPoint","ol_extent_js__WEBPACK_IMPORTED_MODULE_9__","getExtent","animate","center","duration","y","endPoint","getNonSpatialProperties","nonSpatialProperties","clearNonSpatialProperties","ngeo_download_service_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_misc_filters_js__WEBPACK_IMPORTED_MODULE_1__","toolContext","activePropertyName","getActive","setActive","newVal","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_6__","multiGeom","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_5__","ol_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_2__","appendPoint","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_1__","ol_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_3__","appendLineString","ol_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_4__","appendPolygon","navigator","userAgent","indexOf","hex","rgb","g","b","Error","colorZeroPadding","toString","queryString","queryData","substring","pair","indexOfEquals","decodeURIComponent","queryItem","encodeURIComponent","event","ol_events_condition_js__WEBPACK_IMPORTED_MODULE_0__","showMessage","show","getMessageObjects","ERROR","info","INFORMATION","success","SUCCESS","warn","WARNING","opt_type","msgObjects","msgObject","defaultType","msg","ol_events_Event_js__WEBPACK_IMPORTED_MODULE_1__","detail","ol_index_js__WEBPACK_IMPORTED_MODULE_0__","ngeo_format_AttributeType_js__WEBPACK_IMPORTED_MODULE_1__","_ngeoRuleRule","featureProperties","feature_","ol_Feature_js__WEBPACK_IMPORTED_MODULE_4__","format_","ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_5__","updatingExpression_","updatingGeometry_","geometryChangeListenerKey_","ol_events_js__WEBPACK_IMPORTED_MODULE_3__","handleFeatureGeometryChange_","setGeometryFromExpression_","registerGeometryChange_","writeGeometry","handleGeometryChange_","evt","assertInstanceof","target","ol_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_6__","readGeometry","setGeometry","ngeo_rule_Rule_js__WEBPACK_IMPORTED_MODULE_2__","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_6__","featureUidToGroupIndex_","groups_","source_","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_5__","useSpatialIndex","layer_","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_3__","source","styleFunction_","updateWhileAnimating","updateWhileInteracting","addFeature","groupIndex","featureUid","removeFeature","clear","ol_obj_js__WEBPACK_IMPORTED_MODULE_4__","getLayer","getFeatureOverlay","styleFunction","ngeo_map_FeatureOverlay_js__WEBPACK_IMPORTED_MODULE_1__","init","setMap","defaultFunction","resolution","ol_uri_js__WEBPACK_IMPORTED_MODULE_10__","ngeoTilesPreloadingLimit","tilesPreloadingLimit_","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","LAYERS","olServerType","replace","ol_source_ImageWMS_js__WEBPACK_IMPORTED_MODULE_7__","serverType","crossOrigin","updateParams","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_4__","createBasicWMSLayerFromDataSource","setVisible","visible","id","capabilitiesURL","layerName","opt_matrixSet","opt_dimensions","parser","ol_format_WMTSCapabilities_js__WEBPACK_IMPORTED_MODULE_2__","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_5__","preload","read","ol_source_WMTS_js__WEBPACK_IMPORTED_MODULE_9__","ol_obj_js__WEBPACK_IMPORTED_MODULE_6__","updateDimensions","setSource","ol_array_js__WEBPACK_IMPORTED_MODULE_1__","elt","index","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_3__","setLayers","getGroupFromMap","groupName","getLayerGroup","getLayers","getArray","existingGroup","addLayer","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","opt_legendWidth","opt_legendHeight","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","isLayerVisible","getVisible","currentResolution","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","getSource","ol_source_TileWMS_js__WEBPACK_IMPORTED_MODULE_8__","getParams","random","setZIndexToFirstLevelChildren","element","ZIndex","innerLayer","setZIndex","updateWMSLayerState","names","getQuerySourceIds","ol_layer_Layer_js__WEBPACK_IMPORTED_MODULE_5__","$scope","$rootScope","$attrs","isRoot","nodeExpr","rootScope_","state_","$watch","oldVal","$eval","mapExpr","parent","$parent","$on","uid","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","treeCtrl","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_4__","dataSource_","ngeo_misc_decorate_js__WEBPACK_IMPORTED_MODULE_1__","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","getState","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","getFirstParentTree","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","val","removeLayer","getDataSource","setDataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","traverseDepthFirst","visitor","controller","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_13__","ol_interaction_Interaction_js__WEBPACK_IMPORTED_MODULE_8__","handleEvent","handleEvent_","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","sketchFeature","continueMsg","decimals","precision","displayHelpTooltip_","displayHelpTooltip","startMsg","document","createElement","textContent","changeEventKey_","postcomposeEventKey_","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_11__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_12__","vectorLayer_","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_9__","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_10__","drawInteraction_","createDrawInteraction","sketchStyle","shouldHandleDrawInteractionActiveChange_","ol_events_js__WEBPACK_IMPORTED_MODULE_7__","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","updateState_","polygon","transform","abs","ol_sphere_js__WEBPACK_IMPORTED_MODULE_6__","getFormattedCircleArea","circle","pow","getRadius","lineString","c1","ol_proj_js__WEBPACK_IMPORTED_MODULE_4__","c2","point","opt_template","dragging","helpMsg","ol_dom_js__WEBPACK_IMPORTED_MODULE_3__","appendChild","setPosition","coordinate","getDrawInteraction","prevMap","getMap","removeInteraction","addInteraction","createMeasureTooltip_","handleMeasure","coord","innerHTML","classList","add","setOffset","ngeo_CustomEvent_js__WEBPACK_IMPORTED_MODULE_1__","unlistenerEvent_","createHelpTooltip_","removeHelpTooltip_","ol_Overlay_js__WEBPACK_IMPORTED_MODULE_5__","offset","positioning","addOverlay","removeOverlay","parentNode","removeChild","removeMeasureTooltip_","stopEvent","getTooltipElement","ngeoDataSources","ngeoDataSourcesHelper","ngeoQuerent","ngeoQueryResult","dataSources_","ngeoDataSourcesHelper_","ngeoQuerent_","result_","limit_","limit","queryCountFirst_","queryCountFirst","tolerancePx_","tolerance","dataSourceNames_","$inject","issue","queryableDataSources","dataSources","getQueryableDataSources","tolerancePx","wfsCount","pending","handleResult_","total","sources","queried","tooManyResults","totalFeatureCount","_loop","idStr","Number","querentResultItem","tooManyFeatures","typeSeparatedFeatures","filteredProperties","alias","unset","setProperties","featuresByType","ngeo_datasource_DataSources_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_datasource_Helper_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_query_Querent_js__WEBPACK_IMPORTED_MODULE_1__","ol_obj_js__WEBPACK_IMPORTED_MODULE_9__","$timeout","ngeoNotification","gmfThemes","ngeoStateManager","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","gmfThemes_","root","rootCtrl","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","ngeoStateManager_","ogcServers_","ol_events_js__WEBPACK_IMPORTED_MODULE_8__","handleThemesChange_","refreshFirstLevelGroups_","setFirstLevelGroups","firstLevelGroups","deleteParam","gmf_index_js__WEBPACK_IMPORTED_MODULE_0__","PermalinkParam","addFirstLevelGroups","opt_add","opt_silent","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","groups","treeGroupsParam","updateState","cleanParams","alreadyAdded","groupID","rootChild","grp","cancel","addGroupByName","_this4","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_1__","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_3__","removeGroup","removeAll","cloneGroupNode_","toggleNodeCheck_","_this6","childNode","isChecked","notify","ngeo_message_Message_js__WEBPACK_IMPORTED_MODULE_4__","correspondingTreeCtrl","getOgcServer","mixed","goog_asserts_js__WEBPACK_IMPORTED_MODULE_2__","firstLevelGroupCtrl","gmfGroup","_this7","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this8","isExpanded","isLegendExpanded","nodeElement","$","hasClass","legendElement","is","_this9","ngeo_message_Notification_js__WEBPACK_IMPORTED_MODULE_5__","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_6__","ngeo_misc_Time_js__WEBPACK_IMPORTED_MODULE_1__","formatTimeValue","opt_useISOFormat","opt_toUTC","date","Date","utc","yearResolution","monthResolution","dayResolution","toISOString","formatWMSTimeParam","wmsTimeProperty","times","mode","ol_string_js__WEBPACK_IMPORTED_MODULE_1__","Scalify","numberFilter","filterFn","scale","$locale","formats","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","sign","nb_decimal","floor","log","factor","round","decimal","unit","str_number","str_unit","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","divisor","prefix","index_max","postfix","space","NumberCoordinates","opt_fractionDigits","template","fractionDigits","parseInt","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","ol_math_js__WEBPACK_IMPORTED_MODULE_0__","dms","charAt","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","Duration","TimeUnits","freeze","SECONDS","MINUTES","HOURS","DAYS","pluralize","amount","formattedUnit","getPlural","output","remainder","ol_source_Tile_js__WEBPACK_IMPORTED_MODULE_6__","interaction","ol_interaction_Interaction_js__WEBPACK_IMPORTED_MODULE_1__","ol_layer_Base_js__WEBPACK_IMPORTED_MODULE_2__","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","on","olEvent","ol_layer_Layer_js__WEBPACK_IMPORTED_MODULE_4__","ol_source_Image_js__WEBPACK_IMPORTED_MODULE_5__","$applyAsync","ol_events_js__WEBPACK_IMPORTED_MODULE_0__","listenerKeys_","addListenerKey","initListenerKey_","clearListenerKey","ngeoWMSTime","ngeoWMSTime_","ogcServersObject_","ogcServersObject","sync_","createLayer","dataLayerGroup","opt_position","createGroup_","createLeafInAMixedGroup_","initGmfLayerInANotMixedGroup_","updateLayerState_","goog_asserts_js__WEBPACK_IMPORTED_MODULE_1__","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_5__","groupNode","isFirstLevelGroup","printNativeAngle","createLayerFromGroup_","position","insertAt","isOneParentNotMixed_","timeParam","getTimeParam_","hasActiveChildren","ctrl","updateLayerReferences_","createWMTSLayer_","checked","leafNode","firstLevelGroup","getFirstLevelGroupCtrl_","newLayer","ol_index_js__WEBPACK_IMPORTED_MODULE_4__","querySourceIds","disclaimer","disclaimers","wmsTime","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_2__","timeValues","getOptions","isOneParentNotMix","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_0__","ngeo_misc_WMSTime_js__WEBPACK_IMPORTED_MODULE_3__","NOT","OR","rule_Date","AttributeType","Rule","Text","Text_classCallCheck","Text_possibleConstructorReturn","Text_inherits","RuleHelper_exports","ngeoFeatureHelper","RuleHelper_classCallCheck","ngeoFeatureHelper_","createRulesFromAttributes","opt_isCustom","rules","createRuleFromAttribute","rule","Geometry","Select","choices","goog_asserts_prod","createRules","optionsList","createRule","selectOptions","cloneRule","extendRule","sourceRule","destRule","serializeRules","serializeRule","obj","createFilter","mainFilter","conditions","createFilterFromRule_","srsName","Condition","format_filter","incTime","timeFilter","createTimeFilterFromDataSource_","createFilterString","filterString","filterNode","WFS","XMLSerializer","serializeToString","opt_srsName","rot","rsot","rtot","spatialTypes","numericTypes","beginValue","endValue","moment","subtract","selectedChoices","selectedChoice","numericExpression","stringExpression","String","momentEnd","startValue","FeatureHelper","WMSTime","datasource_File","featuresCollection_","Collection","source_Vector","wrapX","Vector","DataSource","FileGroup","FileGroup_classCallCheck","FileGroup_possibleConstructorReturn","_ngeoDatasourceGroup","injector","unregister_","FileGroup_inherits","addDataSource","registerDataSource_","handleDataSourceVisibleChange_","oldValue","removeDataSource","unregisterDataSource_","Group","OGCGroup","OGCGroup_classCallCheck","OGCGroup_possibleConstructorReturn","url_","OGCGroup_inherits","OGCGroup_createClass","WMSGroup","WMSGroup_classCallCheck","WMSGroup_possibleConstructorReturn","_ngeoDatasourceOGCGro","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","WMSGroup_inherits","OGC","updateLayer_","unregister","WMSGroup_createClass","ExternalDataSourcesManager_exports","ngeoFile","ExternalDataSourcesManager_classCallCheck","injector_","q_","ngeoFile_","extDataSources_","files_","map_","fileGroup_","title","wmsGroupsCollection_","wmtsGroupsCollection_","wmtsCache_","events","handleDataSourcesRemove_","addWMSGroup_","wmsGroup","wmsGroupsCollection","removeWMSGroup_","remove","getWMSGroup","wmsGroups","addWMTSGroup_","wmtsGroup","wmtsGroupsCollection","removeWMTSGroup_","getWMTSGroup","wmtsGroups","isExternalDataSource","addLayer_","layerGroup","removeLayer_","createAndAddDataSourceFromWMSCapability","getId","req","includes","createAndAddDataSourceFromWMTSCapability","layerObj","handleWMTSDataSourceVisibleChange_","createAndAddDataSourceFromFile","file","getFileDataSource_","fileGroup","fit","rejections","content","readOptions","getProjection","isKml","readFeatures","isGpx","removeFileDataSource_","removeOGCDataSource_","ExternalDataSourcesManager_createClass","src","EXTERNALLAYERGROUP_NAME","ol","LayerHelper","File","DataSources","collection_","ol_Collection_js__WEBPACK_IMPORTED_MODULE_2__","handleDataSourcesAdd_","bindMap_","handleViewResolutionChange_","syncDataSourcesToResolution_","unbindMap_","ol_View_js__WEBPACK_IMPORTED_MODULE_4__","syncDataSourceToResolution_","supportsDynamicInRange","inRange","ol_style_Text_js__WEBPACK_IMPORTED_MODULE_36__","gmf_editing_EditFeature_js__WEBPACK_IMPORTED_MODULE_0__","gmf_editing_Snapping_js__WEBPACK_IMPORTED_MODULE_1__","gmf_editing_XSDAttributes_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_editing_attributesComponent_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_editing_createfeatureComponent_js__WEBPACK_IMPORTED_MODULE_9__","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_15__","ngeo_message_modalComponent_js__WEBPACK_IMPORTED_MODULE_17__","ngeo_misc_btnComponent_js__WEBPACK_IMPORTED_MODULE_18__","ngeo_misc_EventHelper_js__WEBPACK_IMPORTED_MODULE_20__","ngeo_misc_FeatureHelper_js__WEBPACK_IMPORTED_MODULE_21__","ngeo_misc_ToolActivateMgr_js__WEBPACK_IMPORTED_MODULE_23__","run","$templateCache","put","component_","scope","dirty","editableTreeCtrl","vectorLayer","bindToController","templateUrl","directive","Controller_","$element","gmfEditFeature","gmfSnapping","gmfXSDAttributes","ngeoEventHelper","ngeoToolActivateMgr","element_","scope_","timeout_","gmfEditFeature_","gmfSnapping_","gmfXSDAttributes_","ngeoEventHelper_","ngeoToolActivateMgr_","editableNode_","editableWMSLayer_","confirmDeferred_","unsavedModificationsModalShown","createActive","createToolActivate","ngeo_misc_ToolActivate_js__WEBPACK_IMPORTED_MODULE_22__","mapSelectActive","mapSelectToolActivate","handleFeatureChange_","featureId","interactions_","ol_Collection_js__WEBPACK_IMPORTED_MODULE_26__","modify_","modifyToolActivate","menu_","ngeo_Menu_js__WEBPACK_IMPORTED_MODULE_16__","actions","cls","translate_","rotate_","rotateToolActivate","translateToolActivate","geomType","showServerError","serverErrorMessage","serverErrorType","$onInit","lang","getCurrentLanguage","datetimepicker","setLocale","setDateFormatter","ngeo_misc_php_date_formatter_js__WEBPACK_IMPORTED_MODULE_5__","getFeaturesCollection","gmf_layertree_SyncLayertreeMap_js__WEBPACK_IMPORTED_MODULE_3__","goog_asserts_js__WEBPACK_IMPORTED_MODULE_4__","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_32__","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_33__","ol_interaction_Modify_js__WEBPACK_IMPORTED_MODULE_31__","deleteCondition","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_10__","ngeo_interaction_Rotate_js__WEBPACK_IMPORTED_MODULE_13__","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_35__","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_34__","ngeo_interaction_Translate_js__WEBPACK_IMPORTED_MODULE_14__","initializeInteractions_","ensureSnapInteractionsOnTop","handleDestroy_","ol_index_js__WEBPACK_IMPORTED_MODULE_24__","ol_events_js__WEBPACK_IMPORTED_MODULE_27__","handleFeatureAdd_","handleMapSelectActiveChange_","newValue","State","STOP_EDITING_PENDING","confirmCancel","STOP_EDITING_EXECUTE","DEACTIVATE_PENDING","DEACTIVATE_EXECUTE","IDLE","setAttributes_","toggle_","save","setId","dateFormatter","parseDate","jsonFormat","setMinutes","getMinutes","getTimezoneOffset","formatDate","updateFeature","insertFeatures","handleEditFeature_","close","checkForModifications_","scopeApply","$apply","continueWithoutSaving","delete","confirm","deleteFeature","submit","find","click","resp","ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_30__","mask","geomAttr","ngeo_format_XSDAttribute_js__WEBPACK_IMPORTED_MODULE_11__","getGeometryAttribute","ol_Feature_js__WEBPACK_IMPORTED_MODULE_29__","keys","createUid","otherUid","toolMgr","handleMenuActionClick_","handleTranslateEnd_","handleRotateEnd_","registerTool","unregisterTool","mapDiv","getViewport","assertElement","handleMapClick_","handleMapContextMenu_","pixel","forEachFeatureAtPixel","ret","ol_array_js__WEBPACK_IMPORTED_MODULE_25__","hitTolerance","buffer","ol_extent_js__WEBPACK_IMPORTED_MODULE_28__","getFeaturesInExtent","handleGetFeatures_","getEventPixel","getCoordinateFromPixel","ngeo_GeometryType_js__WEBPACK_IMPORTED_MODULE_12__","open","preventDefault","stopPropagation","_this10","ngeo_misc_decorate_js__WEBPACK_IMPORTED_MODULE_19__","registerInteractions_","_this11","unregisterInteractions_","_this12","newFeature","oldFeature","_this13","handleFeaturePropertyChange_","action","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_2__","gmfTreeManagerModeFlush","gmfTreeManager","$rootScope_","modeFlush","gmfTreeManager_","themeName_","addTheme","setThemeName","getThemeName","isLoading","$emit","EventType","THEME_NAME_SET","gmf_layertree_TreeManager_js__WEBPACK_IMPORTED_MODULE_0__","inRange_","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","ngeo_rule_Rule_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_format_AttributeType_js__WEBPACK_IMPORTED_MODULE_0__","choices_","factory_","func","wait","invokeApply","timeout","_len","_key","context","factory","tool","opt_defaultActivate","entries","unlisten","deactivateTools_","activateDefault_","defaultTool","ENABLE_ASSERTS","defaultTools","entry","unregisterGroup","activateTool","deactivateTool","hasActiveTool","btnGroupComponent_","$parse","restrict","link","attrs","assign","buttons_","buttonModel","BtnGroupController","activate","expressionFn","addButton","btnComponent_","require","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","$setViewValue","$viewValue","$render","toggleClass","ngeo_statemanager_Location_js__WEBPACK_IMPORTED_MODULE_1__","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","keyRegexp","match","localStorage","getParam","err","getInitialValue","getInitialStringValue","getInitialNumberValue","parseFloat","getInitialBooleanValue","RegExp","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_0__","authenticationBaseUrl","gmfUser","_olEventsEventTarget","baseUrl_","user_","noReloadRole_","load_","RouteSuffix","IS_LOGGED_IN","handleLogin_","changePassword","oldPwd","newPwd","confPwd","CHANGE_PASSWORD","post","param","oldPassword","newPassword","confirmNewPassword","headers","Content-Type","is_password_changed","$digest","login","pwd","LOGIN","password","logout","noReload","LOGOUT","resetUser_","resetPassword","RESET_PASSWORD","successFn","getFunctionalities","functionalities","getRoleId","role_id","checkingLoginStatus","respData","setUser_","ngeo_CustomEvent_js__WEBPACK_IMPORTED_MODULE_0__","user","emitEvent","username","role_name","createDate","defaultValue","getTime","minDate","minValue","maxDate","maxValue","minDefaultDate","minDefValue","maxDefaultDate","maxDefValue","defaultValues","getUTCDate","localDate","getUTCFullYear","getUTCMonth","DrawAzimut_exports","Pointer","handleDownEvent","handleDownEvent_","handleUpEvent","handleUpEvent_","downPx_","started_","sketchFeature_","sketchPoint_","squaredClickTolerance_","sketchLayer_","common","getDefaultDrawStyleFunction","downPx","clickPx","dx","dy","pass","handlePointerMove_","finishDrawing_","startDrawing_","mapBrowserEvent","modifyDrawing_","createOrUpdateSketchPoint_","Feature","Point","updateSketchFeatures_","sketchPointGeom","setCoordinates","sketchFeatures","addFeatures","LineString","Circle","GeometryCollection","CustomEvent","geometries","getGeometriesArray","last","setRadius","getLength","abortDrawing_","shouldStopEvent","functions","DrawAzimut","MeasureAzimut_exports","unitPrefixFormat","numberFormat","Measure","getGeometries","Projection","formatLength","formatAzimut","getFormattedAzimut","getAzimut","coords","rad","acos","sqrt","popupComponent_exports","directive_","ngeoPopupTemplateUrl","addClass","css","popupComponent","Popup_exports","$compile","$new","autoDestroy_","sce_","body","append","getOpen","setOpen","$destroy","setTitle","trustedTitle","setContent","opt_trusted","setUrl","setWidth","setHeight","height","setSize","setAutoDestroy","autoDestroy","Factory","manager","manager_","features_","index_","setFeatures","handleFeatureRemove_","ol_format_XML_js__WEBPACK_IMPORTED_MODULE_4__","ol_index_js__WEBPACK_IMPORTED_MODULE_3__","readFromDocument","doc","nodeType","Node","DOCUMENT_NODE","firstChild","nextSibling","ELEMENT_NODE","readFromNode","localName","elements","getElementsByTagName","readFromElementNode_","getAttribute","nillable","required","ngeo_format_Attribute_js__WEBPACK_IMPORTED_MODULE_1__","setGeometryType","setAttributeByXsdType_","enumerations","ngeo_format_AttributeType_js__WEBPACK_IMPORTED_MODULE_2__","restrictions","restrictionNode","maxLengths","maxLength","numType","NumberType","FLOAT","INTEGER","geomAttribute","dataSourcesCollection_","ol_Collection_js__WEBPACK_IMPORTED_MODULE_1__","title_","getDataSourceState","VisibilityState","ON","OFF","toggleVisibilityState","visibleToSet","visibilityState","INDETERMINATE","WFSAttribute","complexTypeElements","readFromComplexTypeElement_","Attribute","XSDAttribute","Helper_exports","Helper_classCallCheck","cache_","getDataSourceAttributes","wfsDescribeFeatureTypeDefer","wfsDescribeFeatureType","ogcLayerName","complexType","complexContent","Querent","WFSDescribeFeatureType_exports","XML","xml","PARSERS_","readElement_","objectStack","len","pop","readComplexType_","COMPLEX_TYPE_PARSERS_","readComplexContent_","COMPLEX_CONTENT_PARSERS_","readExtension_","EXTENSION_PARSERS_","readSequence_","SEQUENCE_PARSERS_","NAMESPACE_URIS_","extension","sequence","WFSDescribeFeatureType","Querent_exports","ngeoRuleHelper","http_","ngeoRuleHelper_","requestCancelers_","wmsGetCapabilitiesPromises_","wmtsGetCapabilitiesPromises_","cancelStillRunningRequests_","combinedWFSDataSources","getCombinableWFSDataSources_","wfs","issueCombinedWFS_","combinedWMSDataSources","getCombinableWMSDataSources_","wms","issueCombinedWMS_","handleCombinedQueryResult_","isDataSourceQueryable_","supportsAttributes","ogcLayerNames","uri","TYPENAME","wmsFindLayerCapability","layerCapabilities","layerCapability","wmsGetCapabilities","baseUrl","opt_cache","WMSCapabilities","wmtsFindLayerCapability","wmtsGetCapabilities","WMTSCapabilities","combinedHash","hash","dataSourceIdStr","dataSourceId","handleQueryResult_","readAndTypeFeatures_","setUniqueIds_","featureTypes","getSetOlFormatTypes_","opt_types","types","setFeatureType","getFeatureType","combinedDataSources","maxFeatures","getCode","bbox","xmlSerializer","getFeatureCommonOptions","_iterator7","_isArray7","_i7","_ref7","featurePrefix","outputFormat","getFeatureDefer","countPromise","getCountOptions","resultType","featureCountXml","writeGetFeature","featureCountRequest","canceler","registerCanceler_","readFeatureCollectionMetadata","numberOfFeatures","getFeatureOptions","featureRequestXml","featureRequest","_iterator6","_isArray6","_i6","_ref6","FEATURE_COUNT","projCode","_iterator8","_isArray8","_i8","_ref8","INFO_FORMAT","activeDimensionsSet","filtrableLayerName","_iterator9","_isArray9","_i9","_ref9","filterParamValue","filterParamValues","wmsSource","ImageWMS","wmsGetFeatureInfoUrl","getGetFeatureInfoUrl","combinableDataSources","notCombinableDataSources","_iterator10","_isArray10","_i10","_ref10","combined","_iterator11","_isArray11","_i11","_ref11","combinableDataSource","_iterator12","_isArray12","_i12","_ref12","_iterator13","_isArray13","_i13","_ref13","ds","_iterator14","_isArray14","_i14","_ref14","CombinedDataSources","RuleHelper","ol_interaction_Snap_js__WEBPACK_IMPORTED_MODULE_8__","mapViewChangePromise_","treeCtrlsUnregister_","unregisterAllTreeCtrl_","ol_events_js__WEBPACK_IMPORTED_MODULE_5__","$watchCollection","registerTreeCtrl_","handleMapMoveEnd_","wfsConfig","getWFSConfig_","stateWatcherUnregister","handleTreeCtrlStateChange_","ol_Collection_js__WEBPACK_IMPORTED_MODULE_6__","requestDeferred","deactivateItem_","childLayers","ogcServerName","wfsSupport","urlWfs","activateItem_","edge","pixelTolerance","vertex","loadItemFeatures_","loadAllItems_","ol_format_WFS_js__WEBPACK_IMPORTED_MODULE_7__","extend","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_11__","featureListenerKeys_","keyPressListenerKey_","myFeatures_","vectorSource_","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_10__","centerFeatures_","ol_interaction_Translate_js__WEBPACK_IMPORTED_MODULE_9__","ol_index_js__WEBPACK_IMPORTED_MODULE_1__","ol_events_js__WEBPACK_IMPORTED_MODULE_4__","handleKeyUp_","setState_","addFeature_","handleFeaturesAdd_","handleFeaturesRemove_","getTargetElement","cursor","removeFeature_","ol_Feature_js__WEBPACK_IMPORTED_MODULE_3__","ol_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_5__","getGeometryCenterPoint_","centerFeature","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_8__","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_6__","ol_extent_js__WEBPACK_IMPORTED_MODULE_2__","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_7__","keyCode","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_13__","modified_","changingFeature_","pixelTolerance_","coordinate_","centerCoordinate_","overlay_","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_12__","ngeo_interaction_common_js__WEBPACK_IMPORTED_MODULE_1__","getDefaultModifyStyleFunction","ol_interaction_Pointer_js__WEBPACK_IMPORTED_MODULE_7__","handleDown_","handleDragEvent","handleDrag_","handleUp_","ol_events_js__WEBPACK_IMPORTED_MODULE_6__","ol_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_8__","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_9__","getCenterCoordinate_","ol_Feature_js__WEBPACK_IMPORTED_MODULE_5__","willModifyFeatures_","ngeo_CustomEvent_js__WEBPACK_IMPORTED_MODULE_2__","f","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_10__","getFlatMidpoint","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_11__","getFlatInteriorPoint","ol_extent_js__WEBPACK_IMPORTED_MODULE_4__","oldX","oldY","centerX","centerY","dx1","dy1","dx0","dy0","a0","atan2","rotate","ol_Collection_js__WEBPACK_IMPORTED_MODULE_0__","ol_OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_5__","menuOptions","opt_overlayOptions","TOP_LEFT","clickOutListenerKey_","contentEl","class","autoClose_","autoClose","headerEl","appendTo","actionsEl","actions_","data-name","prepend","ol_Overlay_js__WEBPACK_IMPORTED_MODULE_4__","handleActionClick_","handleMapPointerMove_","documentElement","handleClickOut_","getElement","closest","originalEvent","Element","contains","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_1__","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","isNaN","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","$window","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","file_saver__WEBPACK_IMPORTED_MODULE_1__","opt_fileType","fileType","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_0__","isSafari","blob","Blob","ngModel","transclude","bindings","resizable","closable","component","_class","$element_","$scope_","modal_","attr","dialog","draggable","modal","e","$onDestroy","ngeo_message_Message_js__WEBPACK_IMPORTED_MODULE_2__","container","container_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","el","html","delay","_compare","str1","str2","toLowerCase","_lpad","char","chr","_indexOf","arr","defaultSettings","dateSettings","days","daysShort","months","monthsShort","meridiem","ordinal","suffixes","2","3","separators","validParts","intParts","tzParts","tzClip","DateFormatter","_extend","_typeof","getMonth","vDate","vFormat","year","month","day","hour","min","sec","vSettings","vDateFlag","vTimeFlag","vDatePart","iDatePart","vMonth","vMeriIndex","vMeriOffset","mer","vFormatParts","vDateParts","guessDate","vDateStr","vParts","iPart","iSec","vYear","vDigit","substr","setMonth","setDate","getFullYear","setFullYear","setHours","setSeconds","parseFormat","vChar","fmt","self","backslash","doFormat","t","D","w","getDate","N","getDay","z","a","Y","W","F","M","L","A","G","B","H","getUTCHours","getUTCMinutes","getUTCSeconds","getHours","h","getSeconds","u","getMilliseconds","exec","I","UTC","O","tzo","P","T","Z","U","str","gmfShortenerCreateUrl","gmfShortenerCreateUrl_","getShortUrl","postShortUrl_","short_url","status","sendShortUrl","shortUrl","email","URL_MAX_LEN","URL_PATH_MAX_LEN","proj4__WEBPACK_IMPORTED_MODULE_3__","epsg21781def","ngeo_proj_somerc_js__WEBPACK_IMPORTED_MODULE_2__","defs","ol_proj_proj4_js__WEBPACK_IMPORTED_MODULE_1__","ol_proj_js__WEBPACK_IMPORTED_MODULE_0__","setExtent","ol_interaction_Draw_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_interaction_Measure_js__WEBPACK_IMPORTED_MODULE_1__","br","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_3__","proj","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_3__","component_exports","Service","Notification","modalComponent","gmfAuthenticationTemplateUrl","gmfAuthenticationTemplateUrl_","allowPasswordReset","allowPasswordChange","passwordValidator","forcePasswordChange","AuthenticationController_","gmfAuthenticationService","gmfAuthenticationService_","notification_","changingPassword","changePasswordModalShown","resetPasswordModalShown","loginVal","pwdVal","oldPwdVal","newPwdVal","newPwdConfVal","setError_","isPasswordValid","notValidMessage","changePasswordReset","resetError_","resetPasswordSuccessFn","userMustChangeItsPassword","Message","authentication_module","BackgroundLayerMgr_exports","Observable","mapUids_","BACKGROUNDLAYERGROUP_NAME","mapUid","previous","bgGroup","setAt","removeAt","current","getOpacityBgLayer","setOpacityBgLayer","baseBgLayer","Layer","hasUpdates","updatedDimensions","TileWMS","BackgroundLayerMgr","backgroundlayerselector_component_exports","Themes","gmfBackgroundlayerselectorTemplateUrl","opacityOptions","select","ngeoBackgroundLayerMgr","bgLayer","bgLayers","opacityLayer","backgroundLayerMgr_","indexOpa","findIndex","getSetBgLayerOpacity","setLayer","backgroundlayerselector_component","gmfEnumerateAttribute","gmfEnumerateAttribute_","prepareFiltrableDataSource","prepareFiltrableDataSourceDefer","enumAttributes","enumeratedAttributes","getAttributeValues","choice","Helper","EnumerateAttribute","datasource_Helper","datasource_OGC","OGC_classCallCheck","_ngeoDatasourceOGC","gmfLayer_","OGC_createClass","WFSAliases_exports","WFSAliases_classCallCheck","describe","WFSAliases","Manager_exports","gmfWFSAliases","Manager_classCallCheck","ngeoBackgroundLayerMgr_","ngeoDataSources_","gmfWFSAliases_","dataSourcesCache_","treeCtrlCache_","handleNgeoBackgroundLayerChange_","setDatasourceMap","setDimensions","clearDataSources_","clearTreeCtrlCache_","promiseThemes","createDataSource_","promiseBgLayers","backgroundLayers","backgroundLayer","handleTreeManagerRootChildrenChange_","newTreeCtrls","treeCtrls","newTreeCtrl","getTreeCtrlCacheItem_","addTreeCtrlToCache_","removeTreeCtrlCacheItem_","ol_obj","meta","queryLayers","wmsLayers","childLayer","isSingleTile","identifierAttributeField","timeAttribute","filterRulesWatcherUnregister","hasFilters","isVisible","handleDataSourceFilterRulesChange_","timeLowerValueWatcherUnregister","timeUpperValueWatcherUnregister","wmsLayer","handleDataSourceTimeValueChange_","SyncLayertreeMap","Image","treeDataSource","siblingDataSourceIds","_source$updateParams","Tile","layersList","previousBackgroundLayer","currentBackgroundLayer","TreeManager","Manager","datasource_module","DataSourceBeingFiltered","ExternalDataSourcesManager","Disclaimer_exports","ngeoCreatePopup","createPopup_","messages_","closeMessage_","getMessageUid_","popup","button","Popup","Disclaimer","disclaimer_component_exports","EventHelper","ngeoDisclaimer","external","visibility","msgs_","disclaimer_","eventHelper_","dataLayerGroup_","DATALAYERGROUP_NAME","registerLayer_","handleLayersAdd_","Base","handleLayersRemove_","unregisterLayer_","layerUid","showDisclaimerMessage_","closeDisclaimerMessage_","disclaimer_component","SavedFilters_exports","SavedFilters_classCallCheck","currentDataSourceId_","currentDataSourceItems_","localStorageKey_","items_","items","rePopulateCurrentDataSourceItems_","loadItemsFromLocalStorage_","JSON","parse","indexOfItem","idx","saveItemsInLocalStorage_","stringify","SavedFilters_createClass","Item","customRules","directedRules","SavedFilters","ruleComponent_exports","draw_component","FeatureOverlay","datepickerComponent","ToolActivateMgr","ngeoRuleTemplateUrl","RuleController_","_operators","_operatorsShortFormat","ruleComponent_classCallCheck","featureOverlay","toolGroup","operatorType","spatialOperatorType","temporalOperatorType","operatorsShortFormat","timeRangeMode","widget","createDate_","createWeekAgoDate_","interval","timeValueMode","toolActivate_","unlisteners_","drawActive","drawToolActivate","ToolActivate","drawnFeatures","selectedFeatures","Modify","Rotate","Style","Fill","Translate","handleActiveChange_","supportedTypes","GeometryType","hasExpression","isActive","editToolIsActive","toggle","toggleChoiceSelection","onDateSelected","onDateRangeSelected","opt_timeDelta","setTime","timeToDate","toLocaleDateString","oldActive","ruleFeature","cloneFeature","decorate","drawnFeature","geom_Geometry","getRuleGeometryType","removeMenu_","Menu","ruleComponent","filter_component_exports","MapQuerent","ngeoFilterTemplateUrl","aRuleIsActive","datasource","FilterController_","ngeoMapQuerent","component_classCallCheck","ngeoMapQuerent_","geometryAttributes","otherAttributes","ruleUnlisteners_","handleARuleIsActiveChange_","registerRule_","hasARule","getRulesWithValue_","getData","createAndAddCustomRule","setCondition","removeCustomRule","unregisterRule_","handleRuleActiveChange_","unlistener","filter_component","filterselectorComponent_exports","FeatureOverlayMgr","gmfFilterselectorTemplateUrl","gmfDataSourceBeingFiltered","gmfDataSourcesHelper","gmfSavedFilters","ngeoFeatureOverlayMgr","filterselectorComponent_classCallCheck","handleSelectedDataSourceChange_","gmfDataSourcesHelper_","currentDataSourceItems","saveFilterManageModalShown","gmfUser_","handleGmfUserFunctionalitiesChange_","filtrableDataSources","filtrableLayerNodeNames_","gmfDataSources_","readyDataSource","ruleCache_","saveFilterSaveModalShown","saveFilterName","enableDataSourceRegistration_","handleEnableDataSourceRegistrationChange_","defaultFiltrableDataSourceName_","toggleDataSourceRegistration_","usrFunc","newDataSourceRegistration","register","isDataSourceFiltrable_","opt_notify","gettext","msgs","p1","p2","p3","currentDataSourceId","getRuleCacheItem_","setRuleCacheItem_","directedFilterAttributes","directedAttributes","saveFilterShowModal","saveFilterSave","alreadyExist","saveFilterLoadItem","filterItem","cacheItem","saveFilterManage","saveFilterRemoveItem","RuleCache","RuleCacheItem","filterselectorComponent","filters_module","timeSliderComponent_exports","pre","computeDates_","sliderUi","sDate","eDate","wmstime","getClosestValue_","dates","sliderOptions","isModeRange","timeValueList","getTimeValueList_","initialOptions_","max","endDate","nextDate","timestamp","leftIndex","rightIndex","leftDistance","rightDistance","targetDate","startDate","bestDate","bestDistance","distance","getLocalizedDate","timeSliderComponent","layertree_module","layertree_component","datasourceGroupTreeComponent","permalink_module","Permalink","ShareService","shareComponent","map_component_exports","prop","Map","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","map_component","scaleselector_exports","ngeoScaleselectorTemplateUrl","scaleselector_ScaleselectorController","ScaleselectorController","scalesExpr","scales","zoomLevels","newLength","sort","optionsExpr","getOptions_","resolutionChangeKey_","currentScale","currentZoom","getZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","zoom","changeZoom","setZoom","handleResolutionChange_","scaleselector","map_module","recenter","resizemap","src_map_component_exports","Snapping","manageResize","gmfPermalink","ngeoFeatureOverlayMgr_","gmfPermalink_","src_map_component","mousepositionComponent_exports","misc_filters","gmfMapMousepositionTemplateUrl","projections","control_","initOlControl_","removeControl","MousePosition","className","coordinateFormat","filterAndArgs","undefinedHTML","addControl","code","mousepositionComponent","src_map_module","Config_exports","columnDefs","selectedRows","getRowUid","isRowSelected","getSelectedCount","getSelectedRows","row","selectRow","toggleRow","selectAll","unselectAll","rowId","invertSelection","Config","grid_component_exports","ngeoGridTemplateUrl","configuration","sortedBy","sortAscending","floatTheadConfig","scrollContainer","$table","columnName","asc","attributes1","attributes2","clickRow","shiftKey","isShiftKeyOnly_","platformModifierKey","isPlatformModifierKeyOnly_","clickRow_","selectRange_","isSelected","targetUid","posClickedRow","posSelectedRows","currentRow","posClosestRow","currentPos","currentDistance","rangeEnd","preventTextSelection","altKey","metaKey","ctrlKey","grid_component","gridComponent_exports","Csv","gmfDisplayquerygridTemplateUrl","featuresStyleFn","selectedFeatureStyleFn","getMapFn","removeEmptyColumnsFn","maxResultsFn","maxRecenterZoomFn","mergeTabs","ngeoCsvDownload","queryOptions","ngeoCsvDownload_","maxResults","gridSources","loadedGridSources","selectedTab","removeEmptyColumns_","maxRecenterZoom","featuresForSources_","highlightFeatures_","filename_","newQueryResult","oldQueryResult","updateData_","unregisterSelectWatcher_","featuresOverlay","featuresStyle","highlightFeaturesOverlay","highlightFeatureStyle","Stroke","mapFn","getGridSources","sourceLabel","hasOneWithTooManyResults_","getMergedSources_","makeGrid_","escapeValue","collectData_","firstSourceId","selectTab","isInteger","toEscape","gridSource","allSources","mergedSources","mergedSourceId","getMergedSource_","mergeSourceId","currentMergeSourceId","mergeSource","allProperties","featureGeometriesNames","featuresForSource","featureGeometryName","cleanProperties_","removeEmptyColumnsFn_","keysToKeep","keyToRemove","gridConfig","getGridConfiguration_","ol_uid","column","newSelected","oldSelectedRows","onSelectionChanged_","updateFeatures_","reflowGrid_","activePane","removeClass","getActiveGridSource","isOneSelected","getSelectedRowCount","zoomToSelection","ol_extent","maxZoom","downloadCsv","startDownload","gridComponent","swipe_exports","POINTER_EVENTS","mouse","move","touch","pointer","touches","changedTouches","clientX","clientY","getEvents","pointerTypes","eventType","pointerType","eventName","eventHandlers","totalX","totalY","startCoords","lastPos","makeSwipeDirective_","directiveName","direction","$verticalSwipe","MAX_HORIZONTAL_DISTANCE","MAX_HORIZONTAL_RATIO","MIN_VERTICAL_DISTANCE","swipeHandler","valid","isDefined","deltaY","deltaX","validSwipe","triggerHandler","$event","swipe","windowComponent_exports","gmfDisplayquerywindowTemplateUrl","$animateProvider","classNameFilter","draggableContainment","defaultCollapsedFn","desktop","showUnqueriedLayers","collapsed","showUnqueriedLayers_","sourcesFilter","selectedSource","currentResult","isNext","updateQueryResult_","containment","minHeight","minWidth","setCurrentResult_","collectFeatures_","highlightCurrentFeature_","setHighlight","hasChanged","lastFeature","getResultLength","animate_","queryResult","isFirst","isLast","getFeatureValues","opt_lastFeature","setSelectedSource","windowComponent","extraModule","search_module","search_component","FulltextSearch","selectorComponent_exports","theme_Manager","gmfThemeSelectorTemplateUrl","gmfThemeManager","setThemes_","setTheme","selectorComponent","theme_module","displaywindowComponent_exports","ngeoMessageDisplaywindowTemplateUrl","displaywindowComponent_classCallCheck","clearOnClose","contentTemplate","contentScope","compile_","handle","compiled","clear_","displaywindowComponent_createClass","trustAsResourceUrl","displaywindowComponent","controlComponent_exports","control","Control","controlComponent","filereaderComponent_exports","fileContent","changeEvent","fileReader","FileReader","onload","readAsText","files","filereaderComponent","getBrowserLanguage_exports","availableLanguages","nav","browserLanguages","languages","language","browserLanguage","systemLanguage","userLanguage","getBrowserLanguage","misc_extraModule","AutoProjection","btnComponent","debounce","sortableComponent","Time","mapQueryComponent_exports","elem","clickEventKey_","pointerMoveEventKey_","hit","forEachLayerAtPixel","sourceids","cursorHover","mapQueryComponent","WfsPermalink_WfsPermalinkService","ngeoWfsPermalinkOptions","maxFeatures_","wfsTypes_","wfsTypes","wfsType","defaultFeatureNS_","defaultFeatureNS","defaultFeaturePrefix_","defaultFeaturePrefix","pointRecenterZoom_","pointRecenterZoom","clearResult_","typeName","filters","createFilters_","filterGroups","issueRequest_","showFeatures","getExtent_","padding","resultSource","reduce","or_","filterGroup","filterDef","cond","equalTo","and_","joinFilters_","joinFn","combinedFilters","currentFilter","WfsPermalink","AbstractAppController_exports","permalink_","gmfAuthentication","updateHasEditableLayers_","userChange","roleId","open_panel","filterSelectorActive","previousThemeName","updateCurrentTheme_","searchDatasources","labelKey","groupValues","groupActions","srid","gmfDataSourcesManager","defaultDimensions","dim","leftNavVisible","rightNavVisible","queryFill","queryStroke","queryFeatureStyle","queryActive","queryAutoClear","printPanelActive","printActive","measurePointActive","measureLengthActive","drawFeatureActive","drawProfilePanelActive","stateManager","tmhDynamicLocale","defaultLang","langUrls","initLanguage","mapToolsGroup","queryToolActivate","measurePointActivate","measureLengthActivate","drawFeatureActivate","drawProfilePanelActivate","printPanelActivate","$root","setDefaultBackground_","updateCurrentBackgroundLayer_","skipPermalink","background","getBackgroundLayer","defaultBasemapArray","default_basemap","defaultBasemapLabel","gmfx","openIframePopup","opt_width","opt_height","opt_apply","displaywindowUrl","openPopup_","openTextPopup","displaywindowContent","displaywindowTitle","displaywindowOpen","displaywindowWidth","displaywindowHeight","cgxp","tools","openInfoWindow","displaywindowDraggableContainment","getLayerByLabels","labels","switchLanguage","setCurrentLanguage","loadRemote","urlLanguage","fallbackThemeName","defaultThemeNameFromFunctionalities","getLocationIcon","arrow","arrowWrapper","statemanager_module","tmhDynamicLocaleProvider","angularLocaleScript","localeLocationPattern","ModifyCircle_exports","handleDragEvent_","vertexFeature_","lastPixel_","rBush_","RBush","snappedToVertex_","dragSegments_","FeatureProperties","writeCircleGeometry_","handlePointerAtPixel_","removeFeatureSegmentData_","rBush","nodesToRemove","rings","segment","segmentData","insert","createOrUpdateVertexFeature_","vertexFeature","compareIndexes_","vertexExtent","segmentDataMatches","getInExtent","componentSegments","segmentDataMatch","Polygon","setGeometryCoordinates_","MeasureAzimut","MapBrowserPointerEvent","getInteracting","handlingDownUpSequence","pixelCoordinate","lowerLeft","upperRight","box","closestSegment","vertexPixel","getPixelFromCoordinate","pixel1","pixel2","squaredDist1","squaredDist2","dist","vertexSegments","ModifyCircle","ModifyRectangle_exports","vectorPoints_","params_","featureGeom","pointSource","corners","pointFeatures","cornerPoint","cornerFeature","corner","siblingX","siblingY","boxFeature","previousFeature","nextFeature","initializeParams_","origin","originPoint","originCoordinate","originPixel","siblingXPoint","siblingXCoordinate","siblingXPixel","vectorX","vectorXMagnitude","siblingYPoint","siblingYCoordinate","siblingYPixel","vectorY","vectorYMagnitude","destinationPixel","b2Pixel","calculateNewPixel_","b2Coordinate","c2Pixel","c2Coordinate","destination","vector","aVector","abScalarProduct","deltaVector","ModifyRectangle","Modify_exports","otherFeatures_","utils","circleFeatures_","rectangleFeatures_","Interaction","interactions","currentMap","getFeatureCollection_","isCircle","isRectangle","Controller_exports","ngeoFeatures","featureHelper_","ngeoFeatures_","drawPoint","measureLength","measureArea","measureAzimut","drawRectangle","drawText","registerInteraction","handleActiveChange","handleDrawEnd","sketch","draw_features","Controller","point_exports","drawFeatureCtrl","Draw","rectangle_exports","geometryFunction","maxPoints","rectangle","text_exports","draw_text","area_exports","contMsg","MeasureArea","measure_area","azimut_exports","measure_azimut","length_exports","MeasureLength","measure_length","ngeo_format_XSDAttribute_js__WEBPACK_IMPORTED_MODULE_0__","gmfLayersUrl","promises_","handleGetAttributes_","ol_uri_js__WEBPACK_IMPORTED_MODULE_1__","layerIds","getFeaturesWithComparisonFilters","ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_0__","layerId","geoJSON","writeFeature","gmfRasterUrl","getRaster","Param","X","handleGetRaster_","proj4_projections_somerc_js__WEBPACK_IMPORTED_MODULE_1__","proj4__WEBPACK_IMPORTED_MODULE_0__","Proj","ngeoColorpickerTemplateUrl","colors","DEFAULT_COLORS","setColor","ol_extent_js__WEBPACK_IMPORTED_MODULE_1__","stringToCoordinates","getProjectionList","projectionsCodes","toUpperCase","tryProjections","viewProjection","opt_projections","tryProjectionsWithInversion","defaultParams_","query","queryParams","Promise","catch","ngeo_download_service_js__WEBPACK_IMPORTED_MODULE_0__","encoding_","extension_","includeHeader_","quote_","separator_","generateCsv","translatedColumnHeaders","columnHeader","header","getRow_","dataRows","rowValues","matchAllQuotesRegex","doubleQuote","ol_Map_js__WEBPACK_IMPORTED_MODULE_1__","stateExpr","animationDelayKey","animationDelay","cancelAnimationFrame","gmf_permalink_ShareService_js__WEBPACK_IMPORTED_MODULE_0__","gmfPermalinkShareTemplateUrl","enableEmail","ShareComponentController","gmfShareService","gmfShareService_","shortLink","showLengthWarning","successfullySent","errorOnsend","errorOnGetShortUrl","when","permalink","$valid","ngeo_datasource_DataSources_js__WEBPACK_IMPORTED_MODULE_0__","gmfLayertreeDatasourceGroupTreeTemplateUrl","getGroupUid","toggleDataSource","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_statemanager_Location_js__WEBPACK_IMPORTED_MODULE_0__","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_24__","ngeoDebounce","mapViewPropertyChangeEventKey_","ngeoDebounce_","featureOverlay_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","ngeoAutoProjection_","sourceProjections_","projectionCodes","crosshairFeature_","crosshairStyle_","crosshairStyle","ol_style_RegularShape_js__WEBPACK_IMPORTED_MODULE_22__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_21__","radius2","mapTooltip_","featureHashFormat_","ngeo_format_FeatureHash_js__WEBPACK_IMPORTED_MODULE_8__","encodeStyles","propertiesType","ngeo_format_FeatureProperties_js__WEBPACK_IMPORTED_MODULE_9__","fillOpacity","fontColor","fontSize","isBox","isLabel","pointRadius","strokeColor","ol_events_js__WEBPACK_IMPORTED_MODULE_18__","handleBackgroundLayerManagerChange_","goog_asserts_js__WEBPACK_IMPORTED_MODULE_15__","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","TREE_OPACITY","TREE_GROUP_OPACITY","getFeatures","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","gmf_theme_Manager_js__WEBPACK_IMPORTED_MODULE_1__","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","registerExternalDSGroup_","initLayers_","getMapCenter","targetProjection","reprojectedCenter","getMapZoom","getMapCrosshair","crosshair","setMapCrosshair","opt_center","crosshairCoordinate","ol_Feature_js__WEBPACK_IMPORTED_MODULE_19__","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_20__","getMapTooltip","setMapTooltip","tooltipText","tooltipPosition","div","ngeo_Popover_js__WEBPACK_IMPORTED_MODULE_3__","DIMENSIONS","unregisterMap_","getFeature","registerMap_","oeFeature","ngeo_olcs_constants_js__WEBPACK_IMPORTED_MODULE_7__","Permalink3dParam","ENABLED","setCenter","wfsPermalinkData","getWfsPermalinkData_","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","decodeURI","tn","defaultTheme","default_theme","groupsNames","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_2__","enable","groupLayers","groupLayersArray","ol_array_js__WEBPACK_IMPORTED_MODULE_17__","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_14__","removeNgeoFeature_","ol_index_js__WEBPACK_IMPORTED_MODULE_16__","handleNgeoFeaturesChange_","wfsLayer","numGroups","createFilterGroup_","showFeaturesParam","paramKey","gmfExtDSManager","layerNamesString","urlsString","ExtDSSeparator","LIST","urls","groupLayerNamesString","groupLayerNames","NAMES","serviceType","ngeo_datasource_OGC_js__WEBPACK_IMPORTED_MODULE_6__","getCapabilitiesDefer","responses","ngeo_datasource_Group_js__WEBPACK_IMPORTED_MODULE_5__","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","unregisterExternalDSGroup_","_this8$ngeoStateManag","wmsGroupLayerNames","wmsDataSource","wmtsGroupLayerNames","wmtsDataSource","startsWith","_iterator15","_isArray15","_i15","_ref15","ngeo_draw_features_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_misc_debounce_js__WEBPACK_IMPORTED_MODULE_10__","ngeo_misc_EventHelper_js__WEBPACK_IMPORTED_MODULE_11__","ngeo_statemanager_module_js__WEBPACK_IMPORTED_MODULE_12__","OpenLayersLayerProperties","regexp","key1","key2","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_13__","ngeoDatePickerTemplateUrl","sdateOptions","initialMinDate","initialMaxDate","onClose","selectedDate","datepicker","edateOptions","dp","ngeoTime","ngeoTime_","changeMonth","changeYear","sdate","edate","$watchGroup","newDates","oldDates","isDate","promiseId","handleGetAttributeValues_","isValidFileSize","fileSize","isWmsGetCap","isWmtsGetCap","readyState","LOADING","abort","onerror","reason","onprogress","load","opt_cancelP","ol_style_Text_js__WEBPACK_IMPORTED_MODULE_28__","viewConfig","ol_proj_js__WEBPACK_IMPORTED_MODULE_14__","ol_obj_js__WEBPACK_IMPORTED_MODULE_15__","mapViewConfig","gmf_controllers_AbstractAppController_js__WEBPACK_IMPORTED_MODULE_0__","ol_Map_js__WEBPACK_IMPORTED_MODULE_17__","pixelRatio","mapPixelRatio","ol_View_js__WEBPACK_IMPORTED_MODULE_18__","controls","mapControls","ol_control_ScaleLine_js__WEBPACK_IMPORTED_MODULE_19__","getElementById","ol_control_Zoom_js__WEBPACK_IMPORTED_MODULE_20__","zoomInTipLabel","zoomOutTipLabel","ol_control_Rotate_js__WEBPACK_IMPORTED_MODULE_21__","tipLabel","mapInteractions","ol_interaction_js__WEBPACK_IMPORTED_MODULE_22__","pinchRotate","altShiftDragRotate","loadTilesWhileAnimating","loadTilesWhileInteracting","loginActive","toolsActive","modalShareShown","editFeatureActive","routingfeatureActive","googleStreetViewActive","googleStreetViewStyle","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_27__","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_25__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_26__","importDataSourceActive","tooltip","trigger","selector","off","drawFeatureLayer","editFeatureVectorLayer","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_23__","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_24__","ol_Collection_js__WEBPACK_IMPORTED_MODULE_16__","editFeatureActivate","ngeo_misc_ToolActivate_js__WEBPACK_IMPORTED_MODULE_10__","googleStreetViewActivate","scaleSelectorOptions","profileLine","ol_index_js__WEBPACK_IMPORTED_MODULE_13__","gmf_contextualdata_module_js__WEBPACK_IMPORTED_MODULE_1__","gmf_drawing_module_js__WEBPACK_IMPORTED_MODULE_2__","gmf_editing_module_js__WEBPACK_IMPORTED_MODULE_3__","gmf_permalink_shareComponent_js__WEBPACK_IMPORTED_MODULE_4__","gmf_print_component_js__WEBPACK_IMPORTED_MODULE_5__","gmf_profile_module_js__WEBPACK_IMPORTED_MODULE_6__","gmf_raster_component_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_draw_features_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_map_resizemap_js__WEBPACK_IMPORTED_MODULE_9__","ngeo_query_bboxQueryComponent_js__WEBPACK_IMPORTED_MODULE_11__","gmf_import_module_js__WEBPACK_IMPORTED_MODULE_12__","editFeatureSelectorComponent_exports","editFeatureComponent","treeCtrlsWatcherUnregister_","editables","editableTreeCtrls","selectedEditableTreeCtrl","stopEditing","editFeatureSelectorComponent","module_exports","EditFeature","XSDAttributes","RasterService","gmfRaster","$compile_","gmfRaster_","hidePopover","preparePopover_","setContent_","showPopover","content_","mapProjection","ol_proj","getRasterSuccess","setAttribute","Overlay","autoPan","autoPanAnimation","contentDirective_","gmfContextualdatacontentTemplateUrl","VectorEncoder_exports","geojsonFormat","GeoJSON","PrintStyleTypes_","PrintStyleType","MultiLineString","MultiPoint","MultiPolygon","encodeVectorLayer","geojsonFeatures","mapfishStyleObject","version","originalFeature","styleData","getStyleFunction","origGeojsonFeature","writeFeatureObject","isOriginalFeatureAdded","geojsonFeature","styledFeature","geometryType","featureStyleProp","styleId","encodeVectorStyle","geoJson","styleType","styleObject","symbolizers","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeVectorStylePolygon","encodeVectorStyleLine","encodeVectorStylePoint","encodeTextStyle","encodeVectorStyleFill","symbolizer","getColor","rgbArrayToHex","encodeVectorStyleStroke","Icon","getSrc","externalGraphic","graphicOpacity","graphicWidth","graphicHeight","getRotation","math","RegularShape","getPoints","graphicName","sizeShape","rotationShape","opacityShape","strokeShape","fillShape","strokeColorRgba","strokeOpacity","strokeDashstyle","getLineDash","getWidth","getLineCap","strokeLinecap","xAlign","yAlign","olTextAlign","getTextAlign","olTextBaseline","getTextBaseline","labelAlign","labelRotation","fontStyle","getFont","fontWeight","fontFamily","haloColor","haloOpacity","haloRadius","fillColorRgba","labelXOffset","getOffsetX","labelYOffset","getOffsetY","VectorEncoder","Service_exports","vectorEncoder_","printNativeAngle_","ref","opt_httpConfig","httpConfig","createSpec","dpi","layout","customAttributes","specMap","encodeMap_","currentLanguage","viewCenter","viewResolution","viewRotation","mapLayerGroup","layer_a","layer_b","getZIndex","encodeLayer","encodeImageLayer_","encodeTileLayer_","layer_Vector","encodeImageWmsLayer_","getUrl","encodeWmsLayer_","url_url","URL","customParams","searchParams","baseURL","getAbsoluteUrl_","imageFormat","useNativeAngle","href","encodeURI","encodeTileWmtsLayer_","encodeTileWmsLayer_","tileGrid","getTileGrid","tilegrid_WMTS","matrixIds","getMatrixIds","matrices","tileRange","getFullTileRange","identifier","scaleDenominator","getMetersPerUnit","tileSize","ol_size","getTileSize","topLeftCorner","getOrigin","matrixSize","maxX","minX","maxY","minY","getDimensions","dimensionKeys","getWmtsUrl_","dimensionParams","getFormat","getMatrixSet","requestEncoding","getRequestEncoding","getVersion","getUrls","createReport","printSpec","getStatus","getReportUrl","getCapabilities","createPrintServiceFactory","FeatureHashStyleType","FeatureHash_exports","opt_options","TextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","propertiesFunction_","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","StyleTypes_","readFeature","CHAR64_","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","encodedStyles","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","encodeStyleFill_","opt_propertyName","fillColorHex","strokeColorHex","readLineStringGeometry_","flatCoordinates","decodeCoordinates_","setFlatCoordinates","GeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","readPointGeometry_","readMultiPointGeometry_","multiPoint","readPolygonGeometry_","readMultiPolygonGeometry_","endss","polygons","multipolygon","setStyleInFeature_","getStyleProperties_","setStyleProperties_","castValue_","numProperties","boolProperties","parts","keyVal","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","GEOMETRY_WRITERS_","opt_flatCoordinates","encodedCoordinates","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","attributesAndStylesText","attributesText","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","encoded","writeFeaturesText","geometryWriter","transformedGeometry","format_Feature","featureStyleComponent_exports","colorpickerComponent","handleColorSet_","handleFeatureSet_","propName","newColor","getSetAngle","getSetProperty_","getSetName","getSetShowLabel","getSetOpacity","getSetShowMeasure","getSetSize","getSetStroke","featureStyleComponent","drawFeatureComponent_exports","exportfeaturesComponent","longPressTimeout_","selectedFeature","listSelectionInProgress_","nameProperty","drawUid","selectFeatureFromList","getFeaturesArray","clearFeatures","handleMapTouchStart_","handleMapTouchEnd_","setTimeout","clearTimeout","drawFeatureComponent","wmsCapabilityLayertreeComponent_exports","gmfWmscapabilitylayertreenodeTemplateUrl","gmfExternalDataSourcesManager","createAndAddDataSource","getUid","wmsCapabilityLayertreeComponent","wmtsCapabilityLayertreeComponent_exports","gmfWmtscapabilitylayertreTemplateUrl","wmtsCapabilityLayertreeComponent_classCallCheck","wmtsCapabilityLayertreeComponent","importdatasourceComponent_exports","gmfImportdatasourceTemplateUrl","importdatasourceComponent_classCallCheck","fileInput_","hasError","hasErrorPromise_","Mode","ONLINE","modes","LOCAL","wmsCapabilities","wmtsCapabilities","serversEngine_","servers","serverUrls","Bloodhound","datumTokenizer","datum","originalDatumTokenizers","tokenizers","whitespace","datumTokenizers","originalDatumTokenizer","queryTokenizer","identify","local","$urlInput","$connectBtn","typeahead","hint","highlight","minLength","ttAdapter","ev","suggestion","focus","browse","connect","startWorking_","stopWorking_","opt_hasError","nameAndSize","importdatasourceComponent","searchDirective_exports","typeaheadOptionsExpr","typeaheadOptions","typeaheadDatasetsExpr","typeaheadListenersExpr","typeaheadListeners_","typeaheadListeners","adaptListeners_","dataset","cursorchange","autocomplete","empty","datasetsempty","searchDirective","createGeoJSONBloodhound_exports","opt_filter","opt_featureProjection","opt_dataProjection","opt_remoteOptions","bloodhoundOptions","remote","prepare","settings","parsedResponse","featureCollection","remoteOptions","createGeoJSONBloodhound","createLocationSearchBloodhound_exports","sourceProjection","EPSG21781","origins","results","parseBbox","geom_st_box2d","removeHtmlTags","extractName","bhOptions","createLocationSearchBloodhound","d3","bisector","d3_array","axisBottom","d3_axis","axisLeft","scaleLinear","d3_scale","d3_selection","area","d3_shape","d3Elevation","light","margin","top","right","bottom","left","hoverCallback","outCallback","distanceExtractor","linesConfiguration","numberOfLines","bisectDistance","poiExtractor","styleDefs","poiLabelAngle","i18n","xAxisLabel","xAxis","yAxisLabel","yAxis","formatter","xhover","units","toPrecision","yhover","ele","xtick","ytick","lightXAxis","svg","scaleModifier","xFactor","xUnits","xDomain","profile","selection","each","clientWidth","clientHeight","y0","y1","firstLineName","zExtractor","svgEnter","enter","gEnter","clearPois","xHover","domain","yDomain","elevationsValues","transition","yHover","tickFormat","tickValues","ticks","tickSize","clearHighlight","mouseX","x0","invert","showPois","elevation","elevations","elevationsRef","lineName","xtranslate","pois","pe","profileData","poiEnterG","exit","elevationComponent_d3","elevationComponent_exports","optionsAttr","elevationData","poiData","refreshData","origHoverCallback","origOutCallback","elevationComponent","gmfProfileTemplateUrl","getLinesConfigurationFn","getHoverPointStyleFn","getNbPointsFn","getOptionsFn","gmfProfileJsonUrl","pointHoverOverlay_","gmfProfileJsonUrl_","linesConfiguration_","layersNames_","nbPoints_","currentPoint","yUnits","profileHighlight","measureTooltip_","snappedPoint_","profileLabels_","profileOptions","pointerMoveKey_","isErrored","updateEventsListening_","newLine","oldLine","update_","hoverPointStyle","hoverPointStyleFn","getZFactory_","getDist_","hoverCallback_","outCallback_","optionsFn","assertObject","getJsonProfile_","onPointerMove_","getEventCoordinate","closestPoint","getClosestPoint","pixelDist","getDistanceOnALine_","pointOnLine","distOnLine","fakeExtent","forEachSegment","firstPoint","lastPoint","getTooltipHTML_","elevationName","translatedElevationName","DistDecimal","lineConfiguration","getLayersNames","nbPoints","method","paramSerializer","getProfileDataSuccess_","getProfileDataError_","hasDistance","rows","drawLineComponent_exports","getStyleFn","overlay","styleFn","drawLineComponent","ol_events_condition_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_query_MapQuerent_js__WEBPACK_IMPORTED_MODULE_0__","ol_interaction_DragBox_js__WEBPACK_IMPORTED_MODULE_1__","gmf_raster_RasterService_js__WEBPACK_IMPORTED_MODULE_0__","ngeo_misc_debounce_js__WEBPACK_IMPORTED_MODULE_2__","gmfElevationwidgetTemplateUrl","loading","toggleActive_","inViewport_","pointerStop_","getRasterSuccess_","getRasterError_","widgetComponent_","WidgetController_","selectedElevationLayer","ol_math_js__WEBPACK_IMPORTED_MODULE_1__","extentHalfHorizontalDistance_","extentHalfVerticalDistance_","INCHES_PER_METER_","DOTS_PER_INCH_","createPrintMaskPostcompose","opt_rotation","frameState","viewState","viewportWidth","viewportHeight","ol_has_js__WEBPACK_IMPORTED_MODULE_0__","ppi","ipm","extentHalfWidth","extentHalfHeight","beginPath","moveTo","lineTo","closePath","drawPrintZoneWithRotation_","drawPrintZone_","minx","miny","maxx","maxy","diagonal","gamma","atan","omega","x1","x2","y2","x3","y3","x4","y4","getOptimalScale","mapSize","mapResolution","printMapSize","printMapScales","mapWidth","mapHeight","scaleWidth","scaleHeight","optimal","getOptimalResolution","printMapScale","dotsPerMeter","resolutionX","resolutionY","getBottomLeftCorner","getBottomRightCorner","getUpLeftCorner","getUpRightCorner","gmf_authentication_Service_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_map_FeatureOverlayMgr_js__WEBPACK_IMPORTED_MODULE_5__","ngeo_misc_FeatureHelper_js__WEBPACK_IMPORTED_MODULE_6__","ngeo_print_Service_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_print_Utils_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_query_MapQuerent_js__WEBPACK_IMPORTED_MODULE_9__","gmfPrintTemplateUrl","PrintStateEnum","NOT_IN_USE","PRINTING","ERROR_ON_REPORT","CAPABILITIES_NOT_LOADED","ERROR_ON_GETCAPABILITIES","rotateMask","fieldValues","hiddenAttributeNames","attributesOut","ngeoPrintUtils","ngeoCreatePrint","gmfPrintUrl","gmfPrintState","gmfPrintState_","featureOverlayLayer_","ngeoPrintUtils_","ngeoPrint_","ngeoQueryResult_","scaleInput","requestCanceler_","statusTimeoutPromise_","onDragPreviousMousePosition_","rotationTimeoutPromise_","postComposeListenerKey_","pointerDragListenerKey_","mapViewResolutionChangeKey_","curRef_","formats_","layouts_","layout_","paperSize_","layoutInfo","scaleManuallySelected_","rotationInput_","setRotation","postcomposeListener_","capabilities_","currentThemes_","togglePrintPanel_","print","currentThemes","getRotationFn","getScaleFn","goog_asserts_js__WEBPACK_IMPORTED_MODULE_3__","ol_array_js__WEBPACK_IMPORTED_MODULE_10__","getOptimalScale_","getCapabilities_","parseCapabilities_","ol_events_js__WEBPACK_IMPORTED_MODULE_11__","onPointerDrag_","render","layouts","updateFields_","mapInfo","isAttributeInCurrentLayout_","clientInfo","updateCustomFields_","legend","dpis","rawType","simpleAttributes","previousAttributes","default","ol_math_js__WEBPACK_IMPORTED_MODULE_16__","p0x","p0y","p1x","p1y","centerToP0","centerToP1","boost","increment","getDataSource_","field","getLegend_","ol_Map_js__WEBPACK_IMPORTED_MODULE_15__","setView","ol_layers","new_ol_layers","print_native_angle","server_name","layer_names","printLayers","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_12__","setLayerGroup","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_14__","spec","handleCreateReportSuccess_","handleCreateReportError_","resetPrintStates_","opt_printState","datasourceObj","columns","datasourceArr","table","getStatus_","handleGetStatusSuccess_","mfResp","classes","icons","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_13__","getMetadataLegendImage_","legendImage","setLayout","layoutName","getSetScale","contrainRes","constrainResolution","setResolution","setDpi","isState","stateEnumKey","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_12__","ngeo_misc_EventHelper_js__WEBPACK_IMPORTED_MODULE_5__","filter_","interaction_","ngeo_GeometryType_js__WEBPACK_IMPORTED_MODULE_2__","ol_interaction_Draw_js__WEBPACK_IMPORTED_MODULE_11__","ngeo_interaction_MeasureLength_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_interaction_MeasureArea_js__WEBPACK_IMPORTED_MODULE_3__","ol_index_js__WEBPACK_IMPORTED_MODULE_7__","ol_events_js__WEBPACK_IMPORTED_MODULE_9__","handleDrawEnd_","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_6__","toMulti","ol_Collection_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_misc_php_date_formatter_js__WEBPACK_IMPORTED_MODULE_0__","fromJson","ngeo_misc_datetimepickerComponent_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_misc_EventHelper_js__WEBPACK_IMPORTED_MODULE_2__","ngeoAttributesTemplateUrl","disabled","form","updating_","handleInputChange","ngeo_misc_FeatureHelper_js__WEBPACK_IMPORTED_MODULE_0__","$menu","aria-labelledby","$item","handleMenuItemClick_","handleElementClick_","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_2__","parentElement","sortable","resetUpDragDrop","handleClassName","callbackFn","callbackCtx","sortableElement","sortableOptions","axis","ui-sortable-helper","ui","oldIndex","newIndex","Function","ngeoPopoverCtrl","anchorElm","bodyElm","shown","popover","placement","dismissPopover","unbind","anchorComponent","contentComponent","hide","PopoverController_","onMouseDown","clickEvent","gmf_layertree_TreeManager_js__WEBPACK_IMPORTED_MODULE_1__","gmf_search_FulltextSearch_js__WEBPACK_IMPORTED_MODULE_2__","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_misc_AutoProjection_js__WEBPACK_IMPORTED_MODULE_6__","ngeo_misc_colorpickerComponent_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_search_module_js__WEBPACK_IMPORTED_MODULE_9__","ngeo_message_popoverComponent_js__WEBPACK_IMPORTED_MODULE_8__","gmfSearchTemplateUrl","gmfSearchTemplateUrl_","inputValue","placeholder","datasources","featuresStyles","clearButton","colorChooser","coordinatesProjections","additionalListeners","onInitCallback","SearchController_","ngeoAutoProjection","ngeoSearchCreateGeoJSONBloodhound","gmfSearchFulltextSearch","fullTextSearch_","ngeoSearchCreateGeoJSONBloodhound_","styles_","datasets","displayColorPicker","listeners","coordProj","initStyles_","getSearchStyle_","ol_obj_js__WEBPACK_IMPORTED_MODULE_13__","initDatasets_","setStyleColor","mergeListeners_","select_","close_","datasetsempty_","searchQuery","resultIndex","mapZoom","fulltextsearch_","filterLayername_","filterAction_","createDataset_","datasetTitle","groupsKey","typeaheadDatasetOptions","createSearchCoordinates_","display","templates","componentScope","compile","typeaheadDataset","createAndInitBloodhound_","act","opt_layerName","featureLayerName","mapProjectionCode","getBloodhoudRemoteOptions_","bloodhound","ol_proj_js__WEBPACK_IMPORTED_MODULE_15__","initialize","rateLimitWait","xhrFields","ol_uri_js__WEBPACK_IMPORTED_MODULE_21__","interface","suggestions","tt_source","COORDINATES_LAYER_NAME","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_20__","ol_style_RegularShape_js__WEBPACK_IMPORTED_MODULE_18__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_19__","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_17__","ol_style_Circle_js__WEBPACK_IMPORTED_MODULE_16__","customStyles","ol_color_js__WEBPACK_IMPORTED_MODULE_11__","setImage","changed","setTTDropdownVisibility_","ttDropdown","onClearButton","ttmenu","inputs","blur","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_12__","layer_name","leaveSearch_","selectFromGMF_","featureGeometry","_loop2","actionName","actionData","datasourcesActionsHaveAddLayer","groupAction","silent","fitArray","menu","opt_zoom","ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_14__","fitOptions","selected","selectedIndex","arr1","arr2","dereg1","dereg2","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_0__","ngeoLayertreeTemplateUrl","ol_Overlay_js__WEBPACK_IMPORTED_MODULE_1__","originalEl","closeEl_","contentEl_","one","gmf_datasource_DataSourceBeingFiltered_js__WEBPACK_IMPORTED_MODULE_1__","gmf_datasource_ExternalDataSourcesManager_js__WEBPACK_IMPORTED_MODULE_2__","gmf_permalink_Permalink_js__WEBPACK_IMPORTED_MODULE_3__","gmf_layertree_datasourceGroupTreeComponent_js__WEBPACK_IMPORTED_MODULE_4__","gmf_layertree_SyncLayertreeMap_js__WEBPACK_IMPORTED_MODULE_5__","gmf_layertree_TreeManager_js__WEBPACK_IMPORTED_MODULE_6__","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_layertree_component_js__WEBPACK_IMPORTED_MODULE_10__","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_11__","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_12__","ngeo_misc_WMSTime_js__WEBPACK_IMPORTED_MODULE_14__","gmfLayertreeTemplate","openLinksInNewWindow","gmfSyncLayertreeMap","goog_asserts_js__WEBPACK_IMPORTED_MODULE_8__","gmfSyncLayertreeMap_","groupNodeStates_","ngeo_misc_syncArrays_js__WEBPACK_IMPORTED_MODULE_13__","updateDimensions_","ol_layer_Layer_js__WEBPACK_IMPORTED_MODULE_16__","updateLayerDimensions_","ol_obj_js__WEBPACK_IMPORTED_MODULE_17__","ol_source_WMTS_js__WEBPACK_IMPORTED_MODULE_20__","ol_source_TileWMS_js__WEBPACK_IMPORTED_MODULE_19__","ol_source_ImageWMS_js__WEBPACK_IMPORTED_MODULE_18__","once","toggleActive","getNodeState","updateWMSTimeLayerState","layertreeCtrl","ngeo_datasource_OGC_js__WEBPACK_IMPORTED_MODULE_9__","getLegendIconURL","iconUrl","legendRule","gmfOgcServer","getLegendsObject","legendsObject","gmfLayerDefaultName","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_15__","wmtsLegendURL","layersNames","getScale_","getNumberOfLegendsObject","displayMetadata","metadataURL","afterReorder","groupNodes","currentTreeCtrls","removeNode","removeAllNodes","nodesCount","getResolutionStyle","zoomToResolution","toggleNodeLegend","legendNodeId","toggleFiltrableDataSource","isNodeLegendVisible","supportsCustomization","supportsLegend","supportsOpacityChange","appmodule_exports","$compileProvider","debugInfoEnabled","appmodule","epsg2056def","somerc","lib","proj4","AbstractDesktopController","resolutions","searchCoordinatesProjections","scaleSelectorValues","elevationLayers","profileLinesconfiguration","aster","srtm","mousePositionProjections","raven_default","addPlugin","angular_default","install"],"mappings":"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HA5B,EAAAD,QAAA,ouBCAAC,EAAAD,QAAA,gzECAAC,EAAAD,QAAA,mjDCAAC,EAAAD,QAAA,m0ECAAC,EAAAD,QAAA,otCCAAC,EAAAD,QAAA,ypCCAAC,EAAAD,QAAA,0jKCAAC,EAAAD,QAAA,ipCCAAC,EAAAD,QAAA,q6GCAAC,EAAAD,QAAA,i+GCAAC,EAAAD,QAAA,8pHCAAC,EAAAD,QAAA,qoGCAAC,EAAAD,QAAA,snBCAAC,EAAAD,QAAA,wUCAAC,EAAAD,QAAA,kxBCAAC,EAAAD,QAAA,+SCAAC,EAAAD,QAAA,m3FCAAC,EAAAD,QAAA,i+FCAAC,EAAAD,QAAA,4mCCAAC,EAAAD,QAAA,6jBCAAC,EAAAD,QAAA,2ICAAC,EAAAD,QAAA,4mBCAAC,EAAAD,QAAA,kxECAAC,EAAAD,QAAA,svBCAAC,EAAAD,QAAA,osRCAAC,EAAAD,QAAA,2iBCAAC,EAAAD,QAAA,guCCAAC,EAAAD,QAAA,82GCAAC,EAAAD,QAAA,q8ECAAC,EAAAD,QAAA,kjOCAAC,EAAAD,QAAA,wsBCAAC,EAAAD,QAAA,2OCAAC,EAAAD,QAAA,+uBCAAC,EAAAD,QAAA","file":"desktop.8c9427.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([351,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","const exports = {};\n\nexports.assert = function(condition, opt_message, var_args) {\n  return condition;\n};\n\nexports.assertNumber = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertString = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertFunction = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertObject = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertArray = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertBoolean = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertElement = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertInstanceof = function(value, type, opt_message, var_args) {\n  return value;\n};\n\nexports.assertObjectPrototypeIsIntact = function() {};\n\nexport default exports;\n","/**\n * @module ngeo.GeometryType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  CIRCLE: 'Circle',\n  /**\n   * @type {string}\n   * @export\n   */\n  LINE_STRING: 'LineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_LINE_STRING: 'MultiLineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POINT: 'MultiPoint',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POLYGON: 'MultiPolygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  POINT: 'Point',\n  /**\n   * @type {string}\n   * @export\n   */\n  POLYGON: 'Polygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  RECTANGLE: 'Rectangle',\n  /**\n   * @type {string}\n   * @export\n   */\n  TEXT: 'Text'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function() {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayerWMTS.matrixSet,\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Rule\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @implements {ngeox.rule.Rule}\n */\nconst exports = class {\n\n  /**\n   * The abstract class for all filter rules.\n   *\n   * Rules are used to define filters that can be applied on data sources.\n   * A rule is usually a combination of 3 things:\n   *\n   * - a property name, for example 'city_name'\n   * - an operator, for example 'is equal to'\n   * - and an expression, for example 'Chicoutimi'.\n   *\n   * A rule is useful to hold those properties and change them on the fly.\n   * For example, changing an operator from 'is equal to' to 'like'.\n   *\n   * Also, a rule is especially useful for its `value` getter, which returns\n   * the combination of properties described above or `null` if there are some\n   * missing.  The `value` getter can be watched and used when the value is\n   * not null.\n   *\n   * When the operator is `between`, the `lowerBoundary` and `upperBoundary`\n   * properties are used instead of `expression`.\n   *\n   * @struct\n   * @param {!ngeox.rule.RuleOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * Whether the rule is active or not. Used by the `ngeo-rule` component.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.active_ = options.active === true;\n\n    /**\n     * The expression of the rule. The expression and boundaries are mutually\n     * exclusives.\n     *\n     * Note: exported (instead of private) due to the problem with the\n     * compiler. See the getter/setter methods below...  As a setter, the\n     * `expression` property would support being bond to an `ng-model`. Without\n     * it, it can't unless we expose the property directly.\n     *\n     * @type {?number|string}\n     * @export\n     */\n    this.expression = options.expression !== undefined ?\n      options.expression : null;\n\n    /**\n     * The lower boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.lowerBoundary_ = options. lowerBoundary !== undefined ?\n      options.lowerBoundary : null;\n\n    /**\n     * The rule operator.\n     * @type {?string}\n     * @private\n     */\n    this.operator_ = options.operator || null;\n\n    /**\n     * The upper boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.upperBoundary_ = options. upperBoundary !== undefined ?\n      options.upperBoundary : null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the rule is a custom one or not.\n     * @type {boolean}\n     * @private\n     */\n    this.isCustom_ = options.isCustom !== false;\n\n    /**\n     * The human-readable name of the rule.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n\n    /**\n     * A list of rule operators.\n     * @type {?Array.<string>}\n     * @private\n     */\n    this.operators_ = options.operators || null;\n\n    /**\n     * The property name (a.k.a. the attribute name).\n     * @type {string}\n     * @private\n     */\n    this.propertyName_ = options.propertyName;\n\n    /**\n     * The type of rule.\n     * @type {string}\n     * @private\n     */\n    this.type_ = googAsserts.assert(options.type);\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Array.<!ol.EventsKey>}\n     * @protected\n     */\n    this.listenerKeys = [];\n\n  }\n\n  // === Dynamic property getters/setters ===\n\n  /**\n   * @return {boolean} Active\n   * @export\n   */\n  get active() {\n    return this.active_;\n  }\n\n  /**\n   * @param {boolean} active Active\n   * @export\n   */\n  set active(active) {\n    this.active_ = active;\n  }\n\n  /**\n   * The `expression` property does not have conventionnal getter/setters\n   * method because of a limitation of the compiler. It doesn't support\n   * yet having such methods being extended in child classes.\n   *\n   * See: https://github.com/google/closure-compiler/issues/1089\n   *\n   * @return {?number|string} Expression\n   * @export\n   */\n  getExpression() {\n    return this.expression;\n  }\n\n  /**\n   * @param {?number|string} expression Expression\n   * @export\n   */\n  setExpression(expression) {\n    this.expression = expression;\n  }\n\n  /**\n   * @return {?number} Lower boundary\n   * @export\n   */\n  get lowerBoundary() {\n    return this.lowerBoundary_;\n  }\n\n  /**\n   * @param {?number} lowerBoundary Lower boundary\n   * @export\n   */\n  set lowerBoundary(lowerBoundary) {\n    this.lowerBoundary_ = lowerBoundary;\n  }\n\n  /**\n   * @return {?string} Operator\n   * @export\n   */\n  get operator() {\n    return this.operator_;\n  }\n\n  /**\n   * @param {?string} operator Operator\n   * @export\n   */\n  set operator(operator) {\n    this.operator_ = operator;\n  }\n\n  /**\n   * @return {?number} Upper boundary\n   * @export\n   */\n  get upperBoundary() {\n    return this.upperBoundary_;\n  }\n\n  /**\n   * @param {?number} upperBoundary Upper boundary\n   * @export\n   */\n  set upperBoundary(upperBoundary) {\n    this.upperBoundary_ = upperBoundary;\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {boolean} Is custom.\n   * @export\n   */\n  get isCustom() {\n    return this.isCustom_;\n  }\n\n  /**\n   * @return {string} name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n  /**\n   * @return {?Array.<string>} Operators\n   * @export\n   */\n  get operators() {\n    return this.operators_;\n  }\n\n  /**\n   * @return {string} Property name\n   * @export\n   */\n  get propertyName() {\n    return this.propertyName_;\n  }\n\n  /**\n   * @return {string} Type\n   * @export\n   */\n  get type() {\n    return this.type_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {?ngeox.rule.RuleSimpleValue|ngeox.rule.RuleRangeValue} Value.\n   * @export\n   */\n  get value() {\n    let value = null;\n\n    const expression = this.getExpression();\n    const lowerBoundary = this.lowerBoundary;\n    const operator = this.operator;\n    const propertyName = this.propertyName;\n    const upperBoundary = this.upperBoundary;\n\n    if (operator) {\n      if (operator === exports.OperatorType.BETWEEN ||\n          operator === exports.TemporalOperatorType.DURING) {\n        if (lowerBoundary !== null && upperBoundary !== null) {\n          value = {\n            operator,\n            lowerBoundary,\n            propertyName,\n            upperBoundary\n          };\n        }\n      } else {\n        if (expression !== null) {\n          value = {\n            expression,\n            operator,\n            propertyName\n          };\n        }\n      }\n    }\n\n    return value;\n  }\n\n  // === Other utility methods ===\n\n  /**\n   * Reset the following properties to `null`: expression, lowerBoundary,\n   * upperBoundary.\n   * @export\n   */\n  reset() {\n    if (this.getExpression() !== null) {\n      this.setExpression(null);\n    }\n    if (this.lowerBoundary !== null) {\n      this.lowerBoundary = null;\n    }\n    if (this.upperBoundary !== null) {\n      this.upperBoundary = null;\n    }\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.listenerKeys.forEach(olEvents.unlistenByKey);\n    this.listenerKeys.length = 0;\n  }\n\n};\n\n\n/**\n * @enum {string}\n */\nexports.OperatorType = {\n  BETWEEN: '..',\n  EQUAL_TO: '=',\n  GREATER_THAN: '>',\n  GREATER_THAN_OR_EQUAL_TO: '>=',\n  LESSER_THAN: '<',\n  LESSER_THAN_OR_EQUAL_TO: '<=',\n  LIKE: '~',\n  NOT_EQUAL_TO: '!='\n};\n\n\n/**\n * @enum {string}\n */\nexports.SpatialOperatorType = {\n  CONTAINS: 'contains',\n  INTERSECTS: 'intersects',\n  WITHIN: 'within'\n};\n\n\n/**\n * @enum {string}\n */\nexports.TemporalOperatorType = {\n  BEGINS: 'time_start',\n  DURING: 'time_during',\n  ENDS: 'time_end',\n  EQUALS: 'time_equal'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Several OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n","/**\n * @module gmf\n */\nconst exports = {};\n\n/**\n * The default template base URL for modules, used as-is by the template cache.\n * @type {string}\n */\n\n/**\n * @const\n * @export\n */\nexports.DATALAYERGROUP_NAME = 'data';\n\n/**\n * @const\n * @export\n */\nexports.EXTERNALLAYERGROUP_NAME = 'external';\n\n/**\n * @const\n * @export\n */\nexports.COORDINATES_LAYER_NAME = 'gmfCoordinatesLayerName';\n\n\n/**\n * @enum {string}\n */\nexports.PermalinkParam = {\n  BG_LAYER: 'baselayer_ref',\n  EXTERNAL_DATASOURCES_NAMES: 'eds_n',\n  EXTERNAL_DATASOURCES_URLS: 'eds_u',\n  FEATURES: 'rl_features',\n  MAP_CROSSHAIR: 'map_crosshair',\n  MAP_TOOLTIP: 'map_tooltip',\n  MAP_X: 'map_x',\n  MAP_Y: 'map_y',\n  MAP_Z: 'map_zoom',\n  TREE_GROUPS: 'tree_groups',\n  WFS_LAYER: 'wfs_layer',\n  WFS_NGROUPS: 'wfs_ngroups',\n  WFS_SHOW_FEATURES: 'wfs_showFeatures'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.FeatureHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olArray from 'ol/array.js';\nimport * as olColor from 'ol/color.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Provides methods for features, such as:\n *  - style setting / getting\n *  - measurement\n *  - export\n *\n * @constructor\n * @struct\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.$filter} $filter Angular filter.\n * @ngdoc service\n * @ngname ngeoFeatureHelper\n * @ngInject\n */\nconst exports = function($injector, $filter) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.decimals_ = undefined;\n  if ($injector.has('ngeoMeasureDecimals')) {\n    this.decimals_ = $injector.get('ngeoMeasureDecimals');\n  }\n\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.precision_ = undefined;\n  if ($injector.has('ngeoMeasurePrecision')) {\n    this.precision_ = $injector.get('ngeoMeasurePrecision');\n  }\n\n  /**\n   * @type {!ngeox.number}\n   */\n  this.numberFormat_ = /** @type {ngeox.number} */ ($filter('number'));\n\n  /**\n   * @type {!ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ ($filter('ngeoUnitPrefix'));\n\n  /**\n   * @type {!ngeox.numberCoordinates}\n   */\n  this.ngeoNumberCoordinates_ = /** @type {ngeox.numberCoordinates} */ ($filter('ngeoNumberCoordinates'));\n\n  /**\n   * Filter function to display point coordinates or null to don't use any filter.\n   * @type {function(*):string|null}\n   * @private\n   */\n  this.pointFilterFn_ = null;\n\n  /**\n   * Arguments to apply to the point filter function.\n   * @type {Array.<*>}\n   * @private\n   */\n  this.pointFilterArgs_ = [];\n\n  if ($injector.has('ngeoPointfilter')) {\n    const filterElements = $injector.get('ngeoPointfilter').split(':');\n    const filterName = filterElements.shift();\n    const filter = this.$filter_(filterName);\n    googAsserts.assertFunction(filter);\n    this.pointFilterFn_ = filter;\n    this.pointFilterArgs_ = filterElements;\n  } else {\n    this.pointFilterFn_ = null;\n  }\n\n  /**\n   * @type {!ol.proj.Projection}\n   * @private\n   */\n  this.projection_;\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n\n};\n\n\n/**\n * @param {!ol.proj.Projection} projection Projection.\n * @export\n */\nexports.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n// === STYLE METHODS ===\n\n\n/**\n * Set the style of a feature using its inner properties and depending on\n * its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @param {boolean=} opt_select Whether the feature should be rendered as\n *     selected, which includes additional vertex and halo styles.\n * @export\n */\nexports.prototype.setStyle = function(feature, opt_select) {\n  const styles = this.getStyle(feature);\n  if (opt_select) {\n    if (this.supportsVertex_(feature)) {\n      styles.push(this.getVertexStyle());\n    }\n    styles.unshift(this.getHaloStyle_(feature));\n  }\n  feature.setStyle(styles);\n};\n\n\n/**\n * Create and return a style object from a given feature using its inner\n * properties and depending on its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @return {!Array.<!ol.style.Style>} The style object.\n * @export\n */\nexports.prototype.getStyle = function(feature) {\n  const type = this.getType(feature);\n  let style;\n\n  switch (type) {\n    case ngeoGeometryType.LINE_STRING:\n      style = this.getLineStringStyle_(feature);\n      break;\n    case ngeoGeometryType.POINT:\n      style = this.getPointStyle_(feature);\n      break;\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      style = this.getPolygonStyle_(feature);\n      break;\n    case ngeoGeometryType.TEXT:\n      style = this.getTextStyle_(feature);\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  let styles;\n  if (style.constructor === Array) {\n    styles = /** @type {!Array.<!ol.style.Style>}*/ (style);\n  } else {\n    styles = [style];\n  }\n\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with linestring geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getLineStringStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n\n  const styles = [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPointStyle_ = function(feature) {\n  const size = this.getSizeProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const styles = [new olStyleStyle({\n    image: new olStyleCircle({\n      radius: size,\n      fill: new olStyleFill({\n        color: color\n      })\n    })\n  })];\n  // Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    const font_size = 10;\n    // https://reeddesign.co.uk/test/points-pixels.html\n    const point_to_px = 1.3;\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue,\n        size: font_size,\n        offsetY: -(size + (font_size / 2) * textLabelValues.length * point_to_px + 4)\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * Get an optional number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number|undefined}, The attribute value\n */\nexports.prototype.optNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (value !== undefined) {\n    if (typeof value == 'string') {\n      return +value;\n    } else {\n      return googAsserts.assertNumber(value);\n    }\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Get a number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number}, The attribute value\n */\nexports.prototype.getNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (typeof value == 'string') {\n    return +value;\n  } else {\n    return googAsserts.assertNumber(value);\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with polygon geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPolygonStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const opacity = this.getOpacityProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n\n  // fill color with opacity\n  const fillColor = color.slice();\n  fillColor[3] = opacity;\n\n  const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n\n  const styles = [new olStyleStyle({\n    fill: new olStyleFill({\n      color: fillColor\n    }),\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  if (showMeasure || showLabel) {\n    if (showMeasure && azimut !== undefined) {\n      // Radius style:\n      const line = this.getRadiusLine(feature, azimut);\n      const length = ngeoInteractionMeasure.getFormattedLength(\n        line, this.projection_, this.precision_, this.unitPrefixFormat_);\n\n      styles.push(new olStyleStyle({\n        geometry: line,\n        fill: new olStyleFill({\n          color: fillColor\n        }),\n        stroke: new olStyleStroke({\n          color: color,\n          width: strokeWidth\n        }),\n        text: this.createTextStyle_({\n          text: length,\n          angle: ((azimut % 180) + 180) % 180 - 90\n        })\n      }));\n\n      // Azimut style\n      styles.push(new olStyleStyle({\n        geometry: new olGeomPoint(line.getLastCoordinate()),\n        text: this.createTextStyle_({\n          text: `${this.numberFormat_(azimut, this.decimals_)}°`,\n          size: 10,\n          offsetX: Math.cos((azimut - 90) * Math.PI / 180) * 20,\n          offsetY: Math.sin((azimut - 90) * Math.PI / 180) * 20\n        })\n      }));\n\n      //Label Style\n      if (showLabel) {\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: this.getNameProperty(feature),\n            offsetY: -8,\n            exceedLength: true\n          })\n        }));\n      }\n    } else {\n      //Label Style\n      const textLabelValues = [];\n      if (showMeasure) {\n        textLabelValues.push(this.getMeasure(feature));\n      }\n      if (showLabel) {\n        textLabelValues.push(this.getNameProperty(feature));\n      }\n      if (showLabel ||  showMeasure) {\n        // display both label using  \\n\n        const textLabelValue = textLabelValues.join('\\n');\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: textLabelValue,\n            exceedLength: true\n          })\n        }));\n      }\n    }\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry, rendered as text.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getTextStyle_ = function(feature) {\n\n  return new olStyleStyle({\n    text: this.createTextStyle_({\n      text: this.getNameProperty(feature),\n      size: this.getSizeProperty(feature),\n      angle: this.getAngleProperty(feature),\n      color: this.getRGBAColorProperty(feature),\n      width: this.getStrokeProperty(feature)\n    })\n  });\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature to create the editing styles with.\n * @return {!Array.<!ol.style.Style>} List of style.\n * @export\n */\nexports.prototype.createEditingStyles = function(feature) {\n  // (1) Style definition depends on geometry type\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  const styles = [];\n\n  const geom = feature.getGeometry();\n  console.assert(geom);\n  const type = geom.getType();\n\n  if (type === 'Point') {\n    styles.push(\n      new olStyleStyle({\n        image: new olStyleCircle({\n          radius: width * 2,\n          fill: new olStyleFill({\n            color: blue\n          }),\n          stroke: new olStyleStroke({\n            color: white,\n            width: width / 2\n          })\n        }),\n        zIndex: Infinity\n      })\n    );\n  } else {\n    if (type === 'LineString') {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: white,\n            width: width + 2\n          })\n        })\n      );\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width\n          })\n        })\n      );\n    } else {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width / 2\n          }),\n          fill: new olStyleFill({\n            color: [255, 255, 255, 0.5]\n          })\n        })\n      );\n    }\n\n    // (2) Anything else than 'Point' requires the vertex style as well\n    styles.push(this.getVertexStyle(true));\n  }\n\n  return styles;\n};\n\n\n/**\n * Create and return a style object to be used for vertex.\n * @param {boolean=} opt_incGeomFunc Whether to include the geometry function\n *     or not. One wants to use the geometry function when you want to draw\n *     the vertex of features that don't have point geometries. One doesn't\n *     want to include the geometry function if you just want to have the\n *     style object itself to be used to draw features that have point\n *     geometries. Defaults to `true`.\n * @return {!ol.style.Style} Style.\n * @export\n */\nexports.prototype.getVertexStyle = function(opt_incGeomFunc) {\n  const incGeomFunc = opt_incGeomFunc !== undefined ? opt_incGeomFunc : true;\n\n  const options = {\n    image: new olStyleRegularShape({\n      radius: 6,\n      points: 4,\n      angle: Math.PI / 4,\n      fill: new olStyleFill({\n        color: [255, 255, 255, 0.5]\n      }),\n      stroke: new olStyleStroke({\n        color: [0, 0, 0, 1]\n      })\n    })\n  };\n\n  if (incGeomFunc) {\n    options.geometry = function(feature) {\n      const geom = feature.getGeometry();\n\n      if (geom.getType() == 'Point') {\n        return;\n      }\n\n      let innerMultiCoordinates;\n      let multiCoordinates = [];\n      let coordinates = [];\n      let i, ii;\n      if (geom instanceof olGeomLineString) {\n        coordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomMultiLineString) {\n        multiCoordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomPolygon) {\n        coordinates = geom.getCoordinates()[0];\n      } else if (geom instanceof olGeomMultiPolygon) {\n        innerMultiCoordinates = geom.getCoordinates();\n      }\n\n      if (innerMultiCoordinates) {\n        for (i = 0, ii = innerMultiCoordinates.length; i < ii; i++) {\n          multiCoordinates = multiCoordinates.concat(innerMultiCoordinates[i]);\n        }\n      }\n      for (i = 0, ii = multiCoordinates.length; i < ii; i++) {\n        coordinates = coordinates.concat(multiCoordinates[i]);\n      }\n\n      if (coordinates.length) {\n        return new olGeomMultiPoint(coordinates);\n      } else {\n        return geom;\n      }\n    };\n  }\n\n  return new olStyleStyle(options);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Whether the feature supports vertex or not.\n * @private\n */\nexports.prototype.supportsVertex_ = function(feature) {\n  const supported = [\n    ngeoGeometryType.LINE_STRING,\n    ngeoGeometryType.POLYGON,\n    ngeoGeometryType.RECTANGLE\n  ];\n  const type = this.getType(feature);\n  return olArray.includes(supported, type);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getHaloStyle_ = function(feature) {\n  const type = this.getType(feature);\n  let style;\n  const haloSize = 3;\n\n  switch (type) {\n    case ngeoGeometryType.POINT:\n      const size = this.getSizeProperty(feature);\n      style = new olStyleStyle({\n        image: new olStyleCircle({\n          radius: size + haloSize,\n          fill: new olStyleFill({\n            color: [255, 255, 255, 1]\n          })\n        })\n      });\n      break;\n    case ngeoGeometryType.LINE_STRING:\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      const strokeWidth = this.getStrokeProperty(feature);\n      style = new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: strokeWidth + haloSize * 2\n        })\n      });\n      break;\n    case ngeoGeometryType.TEXT:\n      style = new olStyleStyle({\n        text: this.createTextStyle_({\n          text: this.getNameProperty(feature),\n          size: this.getSizeProperty(feature),\n          angle: this.getAngleProperty(feature),\n          width: haloSize * 3\n        })\n      });\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  return style;\n};\n\n\n// === PROPERTY GETTERS ===\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * Also delete the 'ngeo_feature_type_' from the ngeo query system.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Filtered properties of the current feature.\n * @export\n */\nexports.getFilteredFeatureValues = function(feature) {\n  const properties = feature.getProperties();\n  delete properties['boundedBy'];\n  delete properties[feature.getGeometryName()];\n  delete properties['ngeo_feature_type_'];\n  return properties;\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {number} Angle.\n * @export\n */\nexports.prototype.getAngleProperty = function(feature) {\n  const angle = +(/** @type {string} */ (\n    feature.get(ngeoFormatFeatureProperties.ANGLE)));\n  googAsserts.assertNumber(angle);\n  return angle;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Color.\n * @export\n */\nexports.prototype.getColorProperty = function(feature) {\n\n  const color = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.COLOR));\n\n  googAsserts.assertString(color);\n\n  return color;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {ol.Color} Color.\n * @export\n */\nexports.prototype.getRGBAColorProperty = function(feature) {\n  return olColor.fromString(this.getColorProperty(feature));\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Name.\n * @export\n */\nexports.prototype.getNameProperty = function(feature) {\n  const name = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.NAME));\n  googAsserts.assertString(name);\n  return name;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Opacity.\n * @export\n */\nexports.prototype.getOpacityProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.OPACITY);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show measure.\n * @export\n */\nexports.prototype.getShowMeasureProperty = function(feature) {\n  let showMeasure = feature.get(ngeoFormatFeatureProperties.SHOW_MEASURE);\n  if (showMeasure === undefined) {\n    showMeasure = false;\n  } else if (typeof showMeasure === 'string') {\n    showMeasure = (showMeasure === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showMeasure);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show feature label.\n * @export\n */\nexports.prototype.getShowLabelProperty = function(feature) {\n  let showLabel = feature.get(ngeoFormatFeatureProperties.SHOW_LABEL);\n  if (showLabel === undefined) {\n    showLabel = false;\n  } else if (typeof showLabel === 'string') {\n    showLabel = (showLabel === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showLabel);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Size.\n * @export\n */\nexports.prototype.getSizeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.SIZE);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Stroke.\n * @export\n */\nexports.prototype.getStrokeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.STROKE);\n};\n\n\n// === EXPORT ===\n\n\n/**\n * Export features in the given format. The projection of the exported features\n * is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {string} formatType Format type to export the features.\n * @export\n */\nexports.prototype.export = function(features, formatType) {\n  switch (formatType) {\n    case exports.FormatType.GPX:\n      this.exportGPX(features);\n      break;\n    case exports.FormatType.KML:\n      this.exportKML(features);\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * Export features in GPX and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportGPX = function(features) {\n  const format = new olFormatGPX();\n  const mimeType = 'application/gpx+xml';\n  const fileName = 'export.gpx';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features in KML and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportKML = function(features) {\n  const format = new olFormatKML();\n  const mimeType = 'application/vnd.google-earth.kml+xml';\n  const fileName = 'export.kml';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features using a given format to a specific filename and download\n * the result to the browser. The projection of the exported features is:\n * `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {!ol.format.Feature} format Format\n * @param {string} fileName Name of the file.\n * @param {string=} opt_mimeType Mime type. Defaults to 'text/plain'.\n * @private\n */\nexports.prototype.export_ = function(features, format, fileName, opt_mimeType) {\n  const mimeType = opt_mimeType !== undefined ? opt_mimeType : 'text/plain';\n\n  // clone the features to apply the original style to the clone\n  // (the original may have select style active)\n  const clones = [];\n  let clone;\n  features.forEach((feature) => {\n    clone = new olFeature(feature.getProperties());\n    this.setStyle(clone, false);\n    clones.push(clone);\n  });\n\n  const writeOptions = this.projection_ ? {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.projection_\n  } : {};\n\n  const data = format.writeFeatures(clones, writeOptions);\n  this.download_(\n    data, fileName, `${mimeType};charset=utf-8`);\n};\n\n\n// === OTHER UTILITY METHODS ===\n\n\n/**\n * @param {!ngeox.style.TextOptions} options Options.\n * @return {!ol.style.Text} Style.\n * @private\n */\nexports.prototype.createTextStyle_ = function(options) {\n  if (options.angle) {\n    const angle = options.angle !== undefined ? options.angle : 0;\n    const rotation = angle * Math.PI / 180;\n    options.rotation = rotation;\n    delete options.angle;\n  }\n\n  options.font = ['normal', `${options.size || 10}pt`, 'Arial'].join(' ');\n\n  if (options.color) {\n    options.fill = new olStyleFill({color: options.color || [0, 0, 0, 1]});\n    delete options.color;\n  }\n\n  options.stroke = new olStyleStroke({\n    color: [255, 255, 255, 1],\n    width: options.width || 3\n  });\n  delete options.width;\n\n  return new olStyleText(options);\n};\n\n\n/**\n * Get the measure of the given feature as a string. For points, you can format\n * the result by setting a filter to apply on the coordinate with the function\n * {@link ngeo.misc.FeatureHelper.prototype.setPointFilterFn}.\n * @param {!ol.Feature} feature Feature.\n * @return {string} Measure.\n * @export\n */\nexports.prototype.getMeasure = function(feature) {\n\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be truthy');\n\n  let measure = '';\n\n  if (geometry instanceof olGeomPolygon) {\n    if (this.getType(feature) === ngeoGeometryType.CIRCLE) {\n      const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n      googAsserts.assertNumber(azimut);\n      const line = this.getRadiusLine(feature, azimut);\n\n      measure = ngeoInteractionMeasureAzimut.getFormattedAzimutRadius(\n        line, this.projection_, this.decimals_, this.precision_, this.unitPrefixFormat_, this.numberFormat_);\n    } else {\n      measure = ngeoInteractionMeasure.getFormattedArea(\n        geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n    }\n  } else if (geometry instanceof olGeomLineString) {\n    measure = ngeoInteractionMeasure.getFormattedLength(\n      geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n  } else if (geometry instanceof olGeomPoint) {\n    if (this.pointFilterFn_ === null) {\n      measure = ngeoInteractionMeasure.getFormattedPoint(\n        geometry, this.decimals_, this.ngeoNumberCoordinates_);\n    } else {\n      const coordinates = geometry.getCoordinates();\n      const args = this.pointFilterArgs_.slice(0);\n      args.unshift(coordinates);\n      measure = this.pointFilterFn_(...args);\n    }\n  }\n\n  return measure;\n};\n\n\n/**\n * Return the type of geometry of a feature using its geometry property and\n * some inner properties.\n * @param {!ol.Feature} feature Feature.\n * @return {string} The type of geometry.\n * @export\n */\nexports.prototype.getType = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n  let type;\n\n  if (geometry instanceof olGeomPoint) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_TEXT)) {\n      type = ngeoGeometryType.TEXT;\n    } else {\n      type = ngeoGeometryType.POINT;\n    }\n  } else if (geometry instanceof olGeomMultiPoint) {\n    type = ngeoGeometryType.MULTI_POINT;\n  } else if (geometry instanceof olGeomPolygon) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n      type = ngeoGeometryType.CIRCLE;\n    } else if (feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE)) {\n      type = ngeoGeometryType.RECTANGLE;\n    } else {\n      type = ngeoGeometryType.POLYGON;\n    }\n  } else if (geometry instanceof olGeomMultiPolygon) {\n    type = ngeoGeometryType.MULTI_POLYGON;\n  } else if (geometry instanceof olGeomLineString) {\n    type = ngeoGeometryType.LINE_STRING;\n  } else if (geometry instanceof olGeomMultiLineString) {\n    type = ngeoGeometryType.MULTI_LINE_STRING;\n  }\n\n  googAsserts.assert(type, 'Type should be thruthy');\n\n  return type;\n};\n\n\n/**\n * This method first checks if a feature's extent intersects with the map view\n * extent. If it doesn't, then the view gets recentered with an animation to\n * the center of the feature.\n * @param {!ol.Feature} feature Feature.\n * @param {!ol.Map} map Map.\n * @param {number=} opt_panDuration Pan animation duration. Defaults to `250`.\n * @export\n */\nexports.prototype.panMapToFeature = function(feature, map,\n  opt_panDuration) {\n\n  const panDuration = opt_panDuration !== undefined ? opt_panDuration : 250;\n  const size = map.getSize();\n  googAsserts.assertArray(size);\n  const view = map.getView();\n  const extent = view.calculateExtent(size);\n  const geometry = feature.getGeometry();\n\n  if (!geometry.intersectsExtent(extent)) {\n    const mapCenter = view.getCenter();\n    googAsserts.assertArray(mapCenter);\n\n    let featureCenter;\n    if (geometry instanceof olGeomLineString) {\n      featureCenter = geometry.getCoordinateAt(0.5);\n    } else if (geometry instanceof olGeomPolygon) {\n      featureCenter = geometry.getInteriorPoint().getCoordinates();\n    } else if (geometry instanceof olGeomPoint) {\n      featureCenter = geometry.getCoordinates();\n    } else {\n      featureCenter = olExtent.getCenter(geometry.getExtent());\n    }\n\n    view.animate({\n      center: mapCenter,\n      duration: panDuration\n    }, {\n      center: featureCenter,\n      duration: panDuration\n    });\n  }\n};\n\n\n/**\n * This method generates a line string geometry that represents the radius for\n * a given azimut. It expects the input geometry to be a circle.\n * @param {!ol.Feature} feature Feature.\n * @param {number} azimut Azimut in degrees.\n * @return {!ol.geom.LineString} The line geometry.\n */\nexports.prototype.getRadiusLine = function(feature, azimut) {\n  const geometry = feature.getGeometry();\n  // Determine the radius for the circle\n  const extent = geometry.getExtent();\n  const radius = (extent[3] - extent[1]) / 2;\n\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const x = Math.cos((azimut - 90) * Math.PI / 180) * radius;\n  const y = -Math.sin((azimut - 90) * Math.PI / 180) * radius;\n  const endPoint = [x + center[0], y + center[1]];\n  return new olGeomLineString([center, endPoint]);\n};\n\n\n/**\n * Return the properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Object.\n * @export\n */\nexports.prototype.getNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const nonSpatialProperties = {};\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      nonSpatialProperties[key] = properties[key];\n    }\n  }\n  return nonSpatialProperties;\n};\n\n\n/**\n * Clear all properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @export\n */\nexports.prototype.clearNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      feature.set(key, undefined);\n    }\n  }\n};\n\n\n// === FORMAT TYPES ===\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.FormatType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GPX: 'GPX',\n  /**\n   * @type {string}\n   * @export\n   */\n  KML: 'KML'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureHelper', [\n  ngeoDownloadService.name,\n  ngeoMiscFilters.name,\n]);\nexports.module.service('ngeoFeatureHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.ToolActivate\n */\n/**\n * A simple object that can be managed by `ngeo.misc.ToolActivateMgr`.\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {Object} toolContext An object which acts as the context for the tool.\n * @param {string} activePropertyName The name of a boolean property on\n *      `toolContext` which represents the active state of the tool.\n * @constructor\n * @struct\n * @ngname ngeoToolActivate\n * @export\n */\nconst exports = function(toolContext, activePropertyName) {\n\n  /**\n   * A getter function to get the active state of the tool.\n   * @return {boolean} Is active.\n   * @export\n   */\n  this.getActive = function() {\n    return toolContext[activePropertyName];\n  };\n\n  /**\n   * A setter function to set the active state of the tool.\n   * @param {boolean} newVal New active state.\n   * @export\n   */\n  this.setActive = function(newVal) {\n    toolContext[activePropertyName] = newVal;\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport * as olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.CustomEvent\n */\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Geometry\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A rule bound to the geometry of a `ol.Feature` object. Changes made\n   * to the geometry are applied to the `expression` property of the rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.GeometryOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = ngeoFormatAttributeType.GEOMETRY;\n\n    super(options);\n\n    // === STATIC properties ===\n\n    const properties = options.featureProperties || {};\n\n    /**\n     * @type {!ol.Feature}\n     * @private\n     */\n    this.feature_ = new olFeature(properties);\n\n    /**\n     * @type {!ol.format.GeoJSON}\n     * @private\n     */\n    this.format_ = new olFormatGeoJSON();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingExpression_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingGeometry_ = false;\n\n    /**\n     * @type {?ol.EventsKey}\n     * @private\n     */\n    this.geometryChangeListenerKey_ = null;\n\n    this.listenerKeys.push(\n      olEvents.listen(\n        this.feature_,\n        `change:${this.feature.getGeometryName()}`,\n        this.handleFeatureGeometryChange_,\n        this\n      )\n    );\n\n    this.setGeometryFromExpression_();\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {!ol.Feature} Feature.\n   * @export\n   */\n  get feature() {\n    return this.feature_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setExpression(expression) {\n    this.updatingExpression_ = true;\n    super.setExpression(expression);\n\n    if (!this.updatingGeometry_) {\n      this.setGeometryFromExpression_();\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingExpression_ = false;\n  }\n\n  // === Calculated property getters/setters ===\n\n  /**\n   * @return {?ol.geom.Geometry} Geometry\n   * @export\n   */\n  get geometry() {\n    return this.feature_.getGeometry() || null;\n  }\n\n  /**\n   * @param {?ol.geom.Geometry} geometry Geometry\n   * @export\n   */\n  set geometry(geometry) {\n    this.feature_.setGeometry(geometry);\n  }\n\n  // === Other methods ===\n\n  /**\n   * Called when the geometry property in the feature changes. Update the\n   * expression accordingly.\n   * @private\n   */\n  handleFeatureGeometryChange_() {\n    if (this.updatingExpression_) {\n      return;\n    }\n\n    this.updatingGeometry_ = true;\n\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.expression = this.format_.writeGeometry(geometry);\n    } else {\n      this.expression = null;\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Called when the geometry of the features changes. Update the expression\n   * accordingly.\n   * @param {ol.Object.Event} evt Event\n   * @private\n   */\n  handleGeometryChange_(evt) {\n    const geometry = googAsserts.assertInstanceof(\n      evt.target, olGeomGeometry\n    );\n    this.updatingGeometry_ = true;\n    this.expression = this.format_.writeGeometry(geometry);\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Set geometry property using the expression property.\n   * @private\n   */\n  setGeometryFromExpression_() {\n    let geometry = null;\n    if (this.expression) {\n      // An expression can only have a string value with a geometry rule.\n      const expression = googAsserts.assertString(this.expression);\n      geometry = this.format_.readGeometry(expression);\n    }\n    this.geometry = geometry;\n  }\n\n  /**\n   * Unlisten the feature geometry change event, then listen to it if the\n   * feature has a geometry.\n   * @private\n   */\n  registerGeometryChange_() {\n\n    // (1) Unlisten\n    if (this.geometryChangeListenerKey_ !== null) {\n      olEvents.unlistenByKey(this.geometryChangeListenerKey_);\n      this.geometryChangeListenerKey_ = null;\n    }\n\n    // (2) Listen, if geom\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.geometryChangeListenerKey_ = olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      );\n    }\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle, {toFunction as toStyleFunction, createDefaultStyle as olStyleDefaultFunction} from 'ol/style/Style.js';\n\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleDefaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : toStyleFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS, {optionsFromCapabilities} from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @param {number} ngeoTilesPreloadingLimit Load tiles up to preload levels. By default preload is Infinity,\n *     which means load all tiles on the top of the visible level. See also preload value\n *     in documentation for ol.Layer.Tile.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http, ngeoTilesPreloadingLimit) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * The Tiles Preloading Limit value\n   * @type {number}\n   * @private\n   */\n  this.tilesPreloadingLimit_ = ngeoTilesPreloadingLimit;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {string=} opt_matrixSet Optional WMTS matrix set.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_matrixSet, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: this.tilesPreloadingLimit_\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = optionsFromCapabilities(result, {\n        matrixSet: opt_matrixSet,\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach((l) => {\n      this.getFlatLayers_(l, array);\n    });\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some((layer) => {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  });\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @param {number=} opt_legendWidth the legend width.\n * @param {number=} opt_legendHeight the legend height.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule, opt_legendWidth, opt_legendHeight) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n    if (opt_legendWidth !== undefined) {\n      queryString['WIDTH'] = opt_legendWidth;\n    }\n    if (opt_legendHeight !== undefined) {\n      queryString['HEIGHT'] = opt_legendHeight;\n    }\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Set ZIndex property to first level children elements\n * @param {ol.layer.Group|ol.layer.Base} element The group of layer with first level children layers.\n * @param {number} ZIndex The ZIndex for children element.\n */\nexports.prototype.setZIndexToFirstLevelChildren = function(element, ZIndex) {\n  if (!(element instanceof olLayerGroup)) {\n    return;\n  }\n  const innerGroupLayers = element.getLayers();\n  innerGroupLayers.forEach(innerLayer => innerLayer.setZIndex(ZIndex));\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', [])\n  .service('ngeoLayerHelper', exports)\n  .value('ngeoTilesPreloadingLimit', Infinity);\n\n\nexport default exports;\n","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach((child) => {\n    child.setStateInternal_(this.state_);\n  });\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Measure\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olDom from 'ol/dom.js';\nimport * as olProj from 'ol/proj.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olSphere from 'ol/sphere.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} options Options\n */\nconst exports = function(options = /** @type {ngeo.interaction.MeasureBaseOptions} */ ({})) {\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ? options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (polygon.clone().transform(projection, 'EPSG:4326'));\n  const area = Math.abs(olSphere.getArea(geom, {'projection': 'EPSG:4326'}));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection, precision, format) {\n  let length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = olProj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = olProj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n    length += olSphere.getDistance(c1, c2);\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  const helpMsg = this.sketchFeature === null ? this.startMsg : this.continueMsg;\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event|ngeox.DrawEvent} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature || evt.detail.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event|ngeox.DrawEvent} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  this.unlistenerEvent_();\n};\n\n/**\n * Handle unlistener events for 'end of drawing' interaction\n * @private\n */\nexports.prototype.unlistenerEvent_ = function() {\n  if (this.changeEventKey_ !== null && this.postcomposeEventKey_ !== null) {\n    olEvents.unlistenByKey(this.changeEventKey_);\n    olEvents.unlistenByKey(this.postcomposeEventKey_);\n    this.changeEventKey_ = null;\n    this.postcomposeEventKey_ = null;\n  }\n};\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n    this.unlistenerEvent_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.query.MapQuerent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport * as olObj from 'ol/obj.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Map Querent is the service bound to a map that issues\n   * queries using the Querent service. The result is stored inside this\n   * service.\n   *\n   * @struct\n   * @param {angular.$injector} $injector Main injector.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     sources helper service.\n   * @param {ngeo.query.Querent} ngeoQuerent The ngeo querent service.\n   * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($injector, ngeoDataSources, ngeoDataSourcesHelper, ngeoQuerent,\n    ngeoQueryResult) {\n\n    const options = /** @type {ngeox.QueryOptions} */ (\n      $injector.has('ngeoQueryOptions') ?\n        $injector.get('ngeoQueryOptions') : {});\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n    /**\n     * @type {ngeox.QueryResult}\n     * @private\n     */\n    this.result_ = ngeoQueryResult;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.limit_ = options.limit !== undefined ? options.limit : 50;\n\n    /**\n     * When set, before making WFS GetFeature requests to fetch features,\n     * WFS GetFeature requests with `resultType = 'hits'` are made first. If\n     * the number of records for the request would exceed the limit, then\n     * no features are returned.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.queryCountFirst_ = options.queryCountFirst !== undefined ?\n      options.queryCountFirst : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.tolerancePx_ = options.tolerance !== undefined ?\n      options.tolerance : 3;\n\n    /**\n     * A hash of data source names classified by ids.\n     * @type {Object.<number, string>}\n     * @private\n     */\n    this.dataSourceNames_ = {};\n  }\n\n  /**\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @export\n   */\n  issue(options) {\n    // (1) Clear previous result\n    this.clear();\n\n    // (2) Get queryable data sources, unless they are already set\n    let queryableDataSources;\n    if (options.dataSources === undefined &&\n        options.queryableDataSources === undefined\n    ) {\n      queryableDataSources = this.ngeoQuerent_.getQueryableDataSources(\n        this.dataSources_.getArray(),\n        options.map\n      );\n    }\n\n    // (3) Update query options, update the pending property and issue the\n    //     request.\n    const limit = options.limit !== undefined ? options.limit : this.limit_;\n    olObj.assign(options, {\n      queryableDataSources: queryableDataSources,\n      limit: limit,\n      tolerancePx: this.tolerancePx_,\n      wfsCount: this.queryCountFirst_\n    });\n    this.result_.pending = true;\n    this.ngeoQuerent_.issue(options).then(this.handleResult_.bind(this));\n  }\n\n  /**\n   * Clear result, i.e. clear all 'result source' from their features and other\n   * information.\n   * @export\n   */\n  clear() {\n    this.result_.total = 0;\n    for (const source of this.result_.sources) {\n      source.features.length = 0;\n      source.pending = false;\n      source.queried = false;\n      source.tooManyResults = false;\n      source.totalFeatureCount = undefined;\n    }\n    this.result_.sources.length = 0; // Clear previous result sources\n    this.result_.pending = false;\n  }\n\n  /**\n   * Called after a request to the querent service. Update the result.\n   *\n   * @param {ngeox.QuerentResult} response Response\n   * @private\n   */\n  handleResult_(response) {\n    let total = 0;\n\n    // (1) Update result sources, i.e. add them\n    for (const idStr in response) {\n      const id = Number(idStr);\n      const dataSource = this.ngeoDataSourcesHelper_.getDataSource(id);\n      let label = dataSource.name;\n      googAsserts.assert(dataSource);\n\n      const querentResultItem = response[id];\n      const features = querentResultItem.features;\n      const limit = querentResultItem.limit;\n      const tooManyResults = querentResultItem.tooManyFeatures === true;\n      const totalFeatureCount = querentResultItem.totalFeatureCount;\n\n      const typeSeparatedFeatures = {};\n      features.forEach((feature) => {\n        const type = googAsserts.assertString(feature.get('ngeo_feature_type_'));\n        if (!typeSeparatedFeatures[type]) {\n          typeSeparatedFeatures[type] = [];\n        }\n        // Use properties aliases if any\n        if (dataSource.attributes && dataSource.attributes.length) {\n          const properties = feature.getProperties();\n          const filteredProperties = {};\n          dataSource.attributes.forEach((attribute) => {\n            if (attribute.alias) {\n              filteredProperties[attribute.alias] = properties[attribute.name];\n              feature.unset(attribute.name, /* silent */ true);\n            } else {\n              // No alias is available => use the attribute as is.\n              filteredProperties[attribute.name] = properties[attribute.name];\n            }\n          });\n          feature.setProperties(filteredProperties, /* silent */ true);\n        }\n        typeSeparatedFeatures[type].push(feature);\n      });\n\n      for (const type in typeSeparatedFeatures) {\n        label = type ? type : label;\n        const featuresByType = typeSeparatedFeatures[type];\n        this.result_.sources.push({\n          features: featuresByType,\n          id: id,\n          label: label,\n          limit: limit,\n          pending: false,\n          queried: true,\n          tooManyResults: tooManyResults,\n          totalFeatureCount: totalFeatureCount\n        });\n        total += features.length;\n      }\n    }\n\n    // (2) Update total & pending\n    this.result_.total = total;\n    this.result_.pending = false;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoMapQuerent', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoDatasourceHelper.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoMapQuerent', exports);\n\n\n/**\n * The `ngeoQueryResult` is the value service where the features of the query\n * result are added.\n */\nexports.module.value('ngeoQueryResult', /** @type {ngeox.QueryResult} */ ({\n  sources: [],\n  total: 0,\n  pending: false\n}));\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is available through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach((grp) => {\n      this.root.children.unshift(grp);\n    });\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach((childNode) => {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  });\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object information.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.WMSTime\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * ngeo - WMS time service\n * @extends {ngeo.misc.Time}\n * @param {angular.$filter} $filter angular filter service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoWMSTime\n */\nconst exports = function($filter, gettextCatalog) {\n\n  /**\n   * @private\n   * @type {angular.$filter}\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  ngeoMiscTime.call(this);\n};\n\nolBase.inherits(exports, ngeoMiscTime);\n\n\n/**\n * Format time regarding a resolution\n * @param  {number} time (in ms format) timestamp to format\n * @param  {(ngeox.TimePropertyResolutionEnum|undefined)} resolution resolution to use\n * @param  {boolean=} opt_useISOFormat True to a ISO-8601 date string that can be used\n *     as a WMS-T Parameter. Otherwise, use a localized date format.\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} Date string regarding the resolution.\n */\nexports.prototype.formatTimeValue = function(time, resolution, opt_useISOFormat, opt_toUTC) {\n  const date = new Date(time);\n  const utc = opt_toUTC ? 'UTC' : undefined;\n\n  // ISO-8601 format to use date as a WMS-T Parameter.\n  let yearResolution = 'yyyy';\n  let monthResolution = 'yyyy-MM';\n  let dayResolution = 'yyyy-MM-dd';\n\n  // Localized format.\n  if (!opt_useISOFormat) {\n    const gettextCatalog = this.gettextCatalog_;\n    yearResolution = gettextCatalog.getString('yyyy');\n    monthResolution = gettextCatalog.getString('M/yyyy');\n    dayResolution = gettextCatalog.getString('M/d/yyyy');\n  }\n\n  switch (resolution) {\n    case 'year':\n      return this.$filter_('date')(date, yearResolution, utc);\n    case 'month':\n      return this.$filter_('date')(date, monthResolution, utc);\n    case 'day':\n      return this.$filter_('date')(date, dayResolution, utc);\n    default:\n      //case \"second\":\n      return date.toISOString().replace(/\\.\\d{3}/, '');\n  }\n};\n\n\n/**\n * Format time to be used as a WMS Time query parameter\n * @param  {ngeox.TimeProperty} wmsTimeProperty a wmstime property from a node\n * @param  {{start : number, end : (number|undefined)}} times start & end time selected (in ms format)\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} ISO-8601 date string ready to be used as a query parameter for a\n * WMS request\n * @export\n */\nexports.prototype.formatWMSTimeParam = function(wmsTimeProperty, times, opt_toUTC) {\n  googAsserts.assert(wmsTimeProperty.resolution !== undefined);\n  if (wmsTimeProperty.mode === 'range') {\n    googAsserts.assert(times.end !== undefined);\n    return (\n      `${this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC)}/${\n        this.formatTimeValue(times.end, wmsTimeProperty.resolution, true, opt_toUTC)}`\n    );\n  } else {\n    return this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC);\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoWMSTime', [\n  ngeoMiscTime.module.name,\n]);\nexports.module.service('ngeoWMSTime', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.filters\n */\nimport * as olMath from 'ol/math.js';\nimport * as olString from 'ol/string.js';\nconst exports = angular.module('ngeoAngularFilters', []);\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nexports.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nexports.filter('ngeoScalify', exports.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nexports.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nexports.filter('ngeoNumber', exports.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nexports.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nexports.filter('ngeoUnitPrefix', exports.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nexports.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nexports.filter('ngeoNumberCoordinates', exports.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nexports.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nexports.filter('ngeoDMSCoordinates', exports.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * If you use it, you don't require the \"ngSanitize\".\n * @return {function(?):string} The filter function.\n * @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nexports.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nexports.filter('ngeoTrustHtml', exports.trustHtmlFilter);\n\n\n/**\n * A filter used to format a time duration in seconds into a more\n * readable form.\n * Only the two largest units will be shown.\n *\n * Examples:\n *      {{42 | ngeoDuration}} => 42 seconds\n *      {{132 | ngeoDuration}} => 2 minutes 12 seconds\n *      {{3910 | ngeoDuration}} => 1 hour 5 minutes\n *        -> Note: the remaining 10 seconds will be dropped\n *\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @return {ngeox.duration} Function used to format a time duration in seconds into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDuration\n */\nexports.Duration = function(gettextCatalog) {\n  // time unit enum\n  const TimeUnits = Object.freeze({\n    SECONDS: Symbol('seconds'),\n    MINUTES: Symbol('minutes'),\n    HOURS: Symbol('hours'),\n    DAYS: Symbol('days')\n  });\n\n  /**\n   * @param {number} amount Amount of time.\n   * @param {symbol} unit Unit of time.\n   * @return {string} formatted and translated string\n   */\n  const pluralize = function(amount, unit) {\n    let formattedUnit = '';\n    switch (unit) {\n      case TimeUnits.SECONDS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'second', 'seconds');\n        break;\n      case TimeUnits.MINUTES:\n        formattedUnit = gettextCatalog.getPlural(amount, 'minute', 'minutes');\n        break;\n      case TimeUnits.HOURS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'hour', 'hours');\n        break;\n      case TimeUnits.DAYS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'day', 'days');\n        break;\n      default:\n        break;\n    }\n    return `${amount} ${formattedUnit}`;\n  };\n\n  /**\n   * @param {number} duration The duration in seconds.\n   * @return {string} The formatted string.\n   */\n  const result = function(duration) {\n    // round to next integer\n    duration = Math.round(duration);\n\n    // just seconds\n    let output;\n    if (duration < 60) {\n      return pluralize(duration, TimeUnits.SECONDS);\n    }\n\n    // minutes (+ seconds)\n    let remainder = duration % 60; // seconds\n    duration = Math.floor(duration / 60); // minutes\n    if (duration < 60) { // less than an hour\n      output = pluralize(duration, TimeUnits.MINUTES);\n      if (remainder > 0) {\n        output += ` ${pluralize(remainder, TimeUnits.SECONDS)}`;\n      }\n      return output;\n    }\n\n    // hours (+ minutes)\n    remainder = duration % 60; // minutes\n    duration = Math.floor(duration / 60); // hours\n    if (duration < 24) { // less than a day\n      output = pluralize(duration, TimeUnits.HOURS);\n      if (remainder > 0) {\n        output += ` ${pluralize(remainder, TimeUnits.MINUTES)}`;\n      }\n      return output;\n    }\n\n    // days (+ hours)\n    remainder = duration % 24; // hours\n    duration = Math.floor(duration / 24); // days\n    output = pluralize(duration, TimeUnits.DAYS);\n    if (remainder > 0) {\n      output += ` ${pluralize(remainder, TimeUnits.HOURS)}`;\n    }\n    return output;\n  };\n\n  return result;\n};\n\nexports.filter('ngeoDuration', exports.Duration);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.EventHelper\n */\nimport * as olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.SyncLayertreeMap\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * Service to create layer based on a ngeo.layertree.Controller with a\n * GMFThemesGroup or a GMFThemesLeaf as node object.\n * This layer is also used to synchronise a state of ngeo.layertree.Controller\n * and its corresponding layer in the map.\n *\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSyncLayertreeMap\n */\nconst exports = function($rootScope, ngeoLayerHelper, ngeoWMSTime,\n  gmfThemes) {\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {gmfThemes.GmfOgcServers}\n   * @private\n   */\n  this.ogcServersObject_;\n\n  gmfThemes.getOgcServersObject().then((ogcServersObject) => {\n    this.ogcServersObject_ = ogcServersObject;\n  });\n\n  $rootScope.$on('ngeo-layertree-state', (map, treeCtrl, firstParent) => {\n    this.sync_(/** @type ol.Map */ (map), firstParent);\n  });\n};\n\n\n/**\n * Create, insert (or update) and return a layer from the GmfGroup or the\n * GmfLayer of the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Base|ol.layer.Group} a new layer.\n * @public\n */\nexports.prototype.createLayer = function(treeCtrl, map, dataLayerGroup, opt_position) {\n  /**\n   * @type {ol.layer.Base|ol.layer.Group}\n   */\n  let layer = null;\n  if (treeCtrl.node.children !== undefined && treeCtrl.node.mixed) {\n    // Mixed groups\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  } else if (treeCtrl.node.children === undefined && treeCtrl.parent.node.mixed) {\n    // Layers in a mixed group\n    layer = this.createLeafInAMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.node.children === undefined) {\n    // Layers in a non mixed group\n    this.initGmfLayerInANotMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.depth === 1 && !treeCtrl.node.mixed) {\n    // First level group non mix\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  }\n\n  if (layer && treeCtrl.node.metadata.opacity) {\n    layer.setOpacity(treeCtrl.node.metadata.opacity);\n  }\n\n  return layer;\n};\n\n\n/**\n * Synchronise the state of each layers corresponding to the given tree and\n * all its children.\n * @param {ol.Map} map A map that contains the layers.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.sync_ = function(map, treeCtrl) {\n  treeCtrl.traverseDepthFirst((treeCtrl) => {\n    if (treeCtrl.layer && !treeCtrl.node.mixed) {\n      this.updateLayerState_(/** @type ol.layer.Image|ol.layer.Tile */ (treeCtrl.layer), treeCtrl);\n    }\n  });\n};\n\n\n/**\n * Set the active state of a layer based on its treeCtrl state.\n * @param {ol.layer.Tile|ol.layer.Image} layer A layer.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.updateLayerState_ = function(layer, treeCtrl) {\n  const active = treeCtrl.getState() === 'on';\n  if (treeCtrl.node.type === 'WMTS') {\n    layer.setVisible(active);\n  } else if (!treeCtrl.node.mixed && treeCtrl.depth === 1) {\n    // First level non mixed group\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    const names = [];\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.getState() === 'on') {\n        names.push(treeCtrl.node.layers);\n      }\n    });\n    if (names.length === 0) {\n      layer.setVisible(false);\n    }\n    /** @type {ol.source.ImageWMS} */ (layer.getSource()).updateParams({\n      'LAYERS': names.reverse().join(',')\n    });\n    if (names.length !== 0) {\n      layer.setVisible(true);\n    }\n  } else {\n    // WMS mixed layer\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    layer.setVisible(active);\n  }\n};\n\n\n/**\n * Create insert and return a layer group (for not mixed case) or a wmsLayer (for\n * mixed case). Take care about the insertion order in the map in case of first\n * level group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createGroup_ = function(treeCtrl, map,\n  dataLayerGroup, opt_position) {\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  let layer = null;\n  const isFirstLevelGroup = treeCtrl.parent.isRoot;\n\n  let printNativeAngle = true;\n  if (groupNode.metadata.printNativeAngle !== undefined) {\n    printNativeAngle = groupNode.metadata.printNativeAngle;\n  }\n\n  if (isFirstLevelGroup) { // First level group\n    layer = this.createLayerFromGroup_(treeCtrl, !!groupNode.mixed);\n    // Insert the layer at the right place\n    const position = opt_position | 0;\n    dataLayerGroup.getLayers().insertAt(position, layer);\n\n  } else { // Other Groups, create a group layer only in mixed groups\n    const inAMixedGroup = !this.isOneParentNotMixed_(treeCtrl);\n    if (inAMixedGroup) {\n      layer = this.createLayerFromGroup_(treeCtrl, true);\n      const layerGroup = /** @type {ol.layer.Group} */ (\n        exports.getLayer(treeCtrl.parent));\n      layerGroup.getLayers().insertAt(0, layer);\n    }\n  }\n\n  layer.set('printNativeAngle', printNativeAngle);\n  return layer;\n};\n\n\n/**\n * Create, insert and return a layer group (for not mixed case) or a wmsLayer\n * for mixed case).\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {boolean} mixed True for a group layer, false for a WMS layer.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createLayerFromGroup_ = function(treeCtrl,\n  mixed) {\n  let layer;\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  if (mixed) { // Will be one ol.layer per each node.\n    layer = this.layerHelper_.createBasicGroup();\n  } else { // Will be one ol.layer for multiple WMS nodes.\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[groupNode.ogcServer || ''];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      '',\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n    let hasActiveChildren = false;\n    treeCtrl.traverseDepthFirst((ctrl) => {\n      // Update layer information and tree state.\n      this.updateLayerReferences_(/** @type gmfThemes.GmfLayer */ (ctrl.node), layer);\n      if (ctrl.node.metadata.isChecked) {\n        ctrl.setState('on', false);\n        this.updateLayerState_(/** @type {ol.layer.Image} */ (layer), ctrl);\n        hasActiveChildren = true;\n      }\n    });\n    layer.setVisible(hasActiveChildren);\n    layer.set('layerNodeName', groupNode.name); //Really useful ?\n  }\n  return layer;\n};\n\n\n/**\n * Create and insert a layer from a leaf in a mixed group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the layer.\n * @return {ol.layer.Tile|ol.layer.Image} a new layer.\n * @private\n */\nexports.prototype.createLeafInAMixedGroup_ = function(treeCtrl, map) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  let layer;\n  // Make layer.\n  if (gmfLayer.type === 'WMTS') {\n    layer = this.createWMTSLayer_(/** @type gmfThemes.GmfLayerWMTS */ (gmfLayer));\n  } else {\n    const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[/** @type string */ (gmfLayerWMS.ogcServer)];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(gmfLayerWMS.layers);\n    googAsserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      gmfLayerWMS.layers,\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n  }\n  // Update layer information and tree state.\n  layer.set('layerNodeName', gmfLayer.name); // Really useful ?\n  this.updateLayerReferences_(gmfLayer, layer);\n  const checked = gmfLayer.metadata.isChecked === true;\n  if (checked) {\n    treeCtrl.setState('on', false);\n  }\n  layer.setVisible(checked);\n  // Insert layer in the map.\n  const layerGroup = /** @type {ol.layer.Group} */ (\n    exports.getLayer(treeCtrl.parent));\n  layerGroup.getLayers().insertAt(0, layer);\n  return layer;\n};\n\n\n/**\n * Update a WMS layer with the given treeCtrl node information. Assumes that\n * the first parent with ogcServer information is linked to the layer to update\n * and that this treeCtrl node is a leafNode.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the layer to update.\n * @private\n */\nexports.prototype.initGmfLayerInANotMixedGroup_ = function(treeCtrl, map) {\n  const leafNode = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const firstLevelGroup = this.getFirstLevelGroupCtrl_(treeCtrl);\n  googAsserts.assert(firstLevelGroup);\n  const layer = /** @type {ol.layer.Image} */ (firstLevelGroup.layer);\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  // Update layer information and tree state.\n  this.updateLayerReferences_(leafNode, layer);\n  if (leafNode.metadata.isChecked) {\n    treeCtrl.setState('on', false);\n    this.updateLayerState_(layer, firstLevelGroup);\n  } else {\n    treeCtrl.parent.refreshState();\n  }\n};\n\n\n/**\n * Create and return a Tile layer.\n * @param {gmfThemes.GmfLayerWMTS} gmfLayerWMTS A leaf node.\n * @return {ol.layer.Tile} a Tile WMTS layer. (Source and capabilities can come\n *     later).\n * @private\n */\nexports.prototype.createWMTSLayer_ = function(gmfLayerWMTS) {\n  const newLayer = new olLayerTile();\n  googAsserts.assert(gmfLayerWMTS.url);\n  googAsserts.assert(gmfLayerWMTS.layer);\n  this.layerHelper_.createWMTSLayerFromCapabilitites(gmfLayerWMTS.url,\n    gmfLayerWMTS.layer, gmfLayerWMTS.matrixSet, gmfLayerWMTS.dimensions).then((layer) => {\n    newLayer.setSource(layer.getSource());\n    newLayer.set('capabilitiesStyles', layer.get('capabilitiesStyles'));\n  });\n  return newLayer;\n};\n\n\n/**\n * Update properties of a layer with the node of a given leafNode.\n * @param {gmfThemes.GmfLayer} leafNode a leaf node.\n * @param {ol.layer.Base} layer A layer.\n * @private\n */\nexports.prototype.updateLayerReferences_ = function(leafNode, layer) {\n  const id = olBase.getUid(leafNode);\n  const querySourceIds = layer.get('querySourceIds') || [];\n  querySourceIds.push(id);\n  layer.set('querySourceIds', querySourceIds);\n\n  const disclaimer = leafNode.metadata.disclaimer;\n  if (disclaimer) {\n    const disclaimers = layer.get('disclaimers') || [];\n    disclaimers.push(leafNode.metadata.disclaimer);\n    layer.set('disclaimers', disclaimers);\n  }\n};\n\n\n/**\n * Get the time parameter for a WMS Layer. If it's a group and it doesn't have\n * time, get the first time parameter available in any child.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {string|undefined} A wms time param.\n * @private\n */\nexports.prototype.getTimeParam_ = function(treeCtrl) {\n  let wmsTime;\n  let timeParam;\n  const node = treeCtrl.node;\n  if (node.time) {\n    wmsTime = node.time;\n  } else if (node.children) {\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.node.time) {\n        wmsTime = treeCtrl.node.time;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  if (wmsTime) {\n    const timeValues = this.ngeoWMSTime_.getOptions(wmsTime)['values'];\n    timeParam = this.ngeoWMSTime_.formatWMSTimeParam(wmsTime, {\n      start: timeValues[0] || timeValues,\n      end: timeValues[1]\n    });\n  }\n  return timeParam;\n};\n\n\n/**\n * Return true if a parent tree is mixed, based on its node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {boolean} True is any parent is mixed. False Otherwise.\n * @private\n */\nexports.prototype.isOneParentNotMixed_ = function(treeCtrl) {\n  let tree = treeCtrl.parent;\n  let isOneParentNotMix = false;\n  do {\n    isOneParentNotMix = tree.node.mixed === false;\n    tree = tree.parent;\n  }\n  while (tree.parent && !isOneParentNotMix);\n  return isOneParentNotMix;\n};\n\n\n/**\n * Return the first parent, from the root parent, that is not mixed.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} The first not mixed parent.\n * @private\n */\nexports.prototype.getFirstLevelGroupCtrl_ = function(\n  treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * Return the layer used by the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ol.layer.Base} The layer.\n * @public\n */\nexports.getLayer = function(treeCtrl) {\n  let tree = treeCtrl;\n  let layer = null;\n  while (!tree.isRoot && layer === null) {\n    if (tree.layer) {\n      layer = tree.layer;\n    }\n    tree = tree.parent;\n  }\n  return layer;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSyncLayertreeMap', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfSyncLayertreeMap', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Date\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A date rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.DateOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = options.type || ngeoFormatAttributeType.DATE;\n\n    super(options);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Text\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A text rule, which always compares the value with the LIKE operator, by\n   * default.\n   *\n   * @struct\n   * @param {!ngeox.rule.TextOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = options.operator || ngeoRuleRule.OperatorType.LIKE;\n    options.type = ngeoFormatAttributeType.TEXT;\n\n    super(options);\n\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.RuleHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport ngeoRuleDate from 'ngeo/rule/Date.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport ngeoRuleText from 'ngeo/rule/Text.js';\nimport {writeFilter} from 'ol/format/WFS.js';\nimport * as olFormatFilter from 'ol/format/filter.js';\nimport * as olArray from 'ol/array.js';\n\nimport moment from 'moment';\n\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to create `ngeo.rule.Rule`\n   * objects.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoRuleHelper\n   * @ngInject\n   */\n  constructor(gettextCatalog, ngeoFeatureHelper, ngeoWMSTime) {\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.Attribute>} attributes Attributes.\n   * @param {boolean=} opt_isCustom Whether the created rules should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRulesFromAttributes(attributes, opt_isCustom) {\n    const rules = [];\n    for (const attribute of attributes) {\n      rules.push(this.createRuleFromAttribute(attribute, opt_isCustom));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.Attribute} attribute Attribute.\n   * @param {boolean=} opt_isCustom Whether the created rule should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRuleFromAttribute(attribute, opt_isCustom) {\n\n    let rule;\n    const isCustom = opt_isCustom === true;\n\n    /**\n     * @type {string}\n     */\n    const name = this.gettextCatalog_.getString(attribute.name);\n\n    // Todo: support geometry\n\n    switch (attribute.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        if (isCustom) {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.EQUALS,\n            operators: [\n              ngeoRuleRule.TemporalOperatorType.EQUALS,\n              ngeoRuleRule.TemporalOperatorType.BEGINS,\n              ngeoRuleRule.TemporalOperatorType.ENDS\n            ],\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        } else {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.DURING,\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry({\n          name: name,\n          operator: ngeoRuleRule.SpatialOperatorType.WITHIN,\n          operators: [\n            ngeoRuleRule.SpatialOperatorType.CONTAINS,\n            ngeoRuleRule.SpatialOperatorType.INTERSECTS,\n            ngeoRuleRule.SpatialOperatorType.WITHIN\n          ],\n          propertyName: attribute.name,\n          type: attribute.type\n        });\n        break;\n      case ngeoFormatAttributeType.NUMBER:\n        if (isCustom) {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.EQUAL_TO,\n            operators: [\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.GREATER_THAN,\n              ngeoRuleRule.OperatorType.GREATER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.LESSER_THAN,\n              ngeoRuleRule.OperatorType.LESSER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        } else {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.BETWEEN,\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        rule = new ngeoRuleSelect({\n          choices: googAsserts.assert(attribute.choices),\n          name: name,\n          propertyName: attribute.name\n        });\n        break;\n      default:\n        if (isCustom) {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            operators: [\n              ngeoRuleRule.OperatorType.LIKE,\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name\n          });\n        } else {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            propertyName: attribute.name\n          });\n        }\n        break;\n    }\n\n    return rule;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions>} optionsList List of options\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRules(optionsList) {\n    const rules = [];\n    for (const options of optionsList) {\n      rules.push(this.createRule(options));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions} options Options\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRule(options) {\n    let rule;\n    switch (options.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        rule = new ngeoRuleDate(options);\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry(options);\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        const selectOptions = /** @type {!ngeox.rule.SelectOptions} */ (\n          options);\n        googAsserts.assert(selectOptions.choices);\n        rule = new ngeoRuleSelect(selectOptions);\n        break;\n      default:\n        rule = new ngeoRuleText(options);\n        break;\n    }\n    return rule;\n  }\n\n  /**\n   * Create a new `ngeo.rule.Rule` object using an other given rule.\n   *\n   * @param {!ngeo.rule.Rule} rule Original rule to clone.\n   * @return {!ngeo.rule.Rule} A clone rule.\n   * @export\n   */\n  cloneRule(rule) {\n\n    let clone;\n\n    let expression = rule.getExpression();\n    if (expression === null) {\n      expression = undefined;\n    }\n    const isCustom = rule.isCustom;\n    const lowerBoundary = rule.lowerBoundary !== null ? rule.lowerBoundary :\n      undefined;\n    const name = rule.name;\n    const operator = rule.operator !== null ? rule.operator : undefined;\n    const operators = rule.operators ? rule.operators.slice(0) : undefined;\n    const propertyName = rule.propertyName;\n    const type = rule.type !== null ? rule.type : undefined;\n    const upperBoundary = rule.upperBoundary !== null ? rule.upperBoundary :\n      undefined;\n\n    const options = {\n      expression,\n      isCustom,\n      lowerBoundary,\n      name,\n      operator,\n      operators,\n      propertyName,\n      type,\n      upperBoundary\n    };\n\n    if (rule instanceof ngeoRuleDate) {\n      clone = new ngeoRuleDate(options);\n    } else if (rule instanceof ngeoRuleGeometry) {\n      clone = new ngeoRuleGeometry(options);\n      clone.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(rule.feature)\n      );\n    } else if (rule instanceof ngeoRuleSelect) {\n      options.choices = rule.choices.slice(0);\n      clone = new ngeoRuleSelect(options);\n    } else if (rule instanceof ngeoRuleText) {\n      clone = new ngeoRuleText(options);\n    } else {\n      clone = new ngeoRuleRule(options);\n    }\n\n    return clone;\n  }\n\n  /**\n   * Extend the dynamic properties from a source rule to destination rule.\n   * The source rule remains unchanged, while the destination rule changes.\n   *\n   * @param {!ngeo.rule.Rule} sourceRule Source rule to collect the dynamic\n   *     properties from.\n   * @param {!ngeo.rule.Rule} destRule Destination rule where the dynamic\n   *     properties are set.\n   * @export\n   */\n  extendRule(sourceRule, destRule) {\n\n    if (destRule.getExpression() !== sourceRule.getExpression()) {\n      destRule.setExpression(sourceRule.getExpression());\n    }\n\n    if (destRule.lowerBoundary !== sourceRule.lowerBoundary) {\n      destRule.lowerBoundary = sourceRule.lowerBoundary;\n    }\n\n    if (destRule.operator !== sourceRule.operator) {\n      destRule.operator = sourceRule.operator;\n    }\n\n    if (destRule.upperBoundary !== sourceRule.upperBoundary) {\n      destRule.upperBoundary = sourceRule.upperBoundary;\n    }\n\n    if (sourceRule instanceof ngeoRuleGeometry &&\n       destRule instanceof ngeoRuleGeometry\n    ) {\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(destRule.feature);\n      destRule.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(sourceRule.feature)\n      );\n    }\n  }\n\n  /**\n   * @param {!Array.<!ngeo.rule.Rule>} rules Rules\n   * @return {!Array.<!ngeox.rule.AnyOptions>} List of serialized rule options.\n   * @export\n   */\n  serializeRules(rules) {\n    return rules.map((rule) => {\n      const serializedRule = this.serializeRule(rule);\n      return serializedRule;\n    });\n  }\n\n  /**\n   * Selialize a rule into options to re-create it later.\n   * @param {!ngeo.rule.Rule} rule Rule to serialize.\n   * @return {!ngeox.rule.AnyOptions} Serialized rule options.\n   * @export\n   */\n  serializeRule(rule) {\n    const obj = {\n      name: rule.name,\n      propertyName: rule.propertyName,\n      type: rule.type\n    };\n\n    if (rule.expression !== null) {\n      obj.expression = rule.expression;\n    }\n\n    if (rule.lowerBoundary !== null) {\n      obj.lowerBoundary = rule.lowerBoundary;\n    }\n\n    if (rule.operator !== null) {\n      obj.operator = rule.operator;\n    }\n\n    if (rule.operators !== null) {\n      obj.operators = rule.operators.slice(0);\n    }\n\n    if (rule.upperBoundary !== null) {\n      obj.upperBoundary = rule.upperBoundary;\n    }\n\n    if (rule instanceof ngeoRuleGeometry) {\n      obj.featureProperties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        rule.feature);\n    }\n\n    if (rule instanceof ngeoRuleSelect) {\n      obj.choices = rule.choices;\n    }\n\n    return obj;\n  }\n\n  /**\n   * Create a `ol.format.filter.Filter` object for a given data source.\n   * See the `ngeox.CreateFilterOptions` to learn more.\n   *\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?ol.format.filter.Filter} Filter.\n   * @export\n   */\n  createFilter(options) {\n\n    const dataSource = /** @type {ngeo.datasource.OGC} */ (options.dataSource);\n    let mainFilter = null;\n\n    if (options.filter) {\n      mainFilter = options.filter;\n    } else {\n      const rules = options.filterRules || dataSource.filterRules;\n      const conditions = [];\n\n      if (rules && rules.length) {\n        for (const rule of rules) {\n          const filter = this.createFilterFromRule_(\n            rule,\n            dataSource,\n            options.srsName\n          );\n          if (filter) {\n            conditions.push(filter);\n          }\n        }\n      }\n\n      const condition = dataSource.filterCondition;\n      if (conditions.length === 1) {\n        mainFilter = conditions[0];\n      } else if (conditions.length >= 2) {\n        if (condition === ngeoFilterCondition.AND) {\n          mainFilter = olFormatFilter.and.apply(null, conditions);\n        } else if (condition === ngeoFilterCondition.OR ||\n                   condition === ngeoFilterCondition.NOT\n        ) {\n          mainFilter = olFormatFilter.or.apply(null, conditions);\n        }\n      }\n      if (mainFilter && condition === ngeoFilterCondition.NOT) {\n        mainFilter = olFormatFilter.not(mainFilter);\n      }\n    }\n\n    if (options.incTime) {\n      const timeFilter = this.createTimeFilterFromDataSource_(dataSource);\n      if (timeFilter) {\n        if (mainFilter) {\n          mainFilter = olFormatFilter.and.apply(\n            null,\n            [\n              mainFilter,\n              timeFilter\n            ]\n          );\n        } else {\n          mainFilter = timeFilter;\n        }\n      }\n    }\n\n    return mainFilter;\n  }\n\n  /**\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?string} Filter string.\n   * @export\n   */\n  createFilterString(options) {\n    let filterString = null;\n    const filter = this.createFilter(options);\n    if (filter) {\n      const filterNode = writeFilter(filter);\n      const xmlSerializer = new XMLSerializer();\n      filterString = xmlSerializer.serializeToString(filterNode);\n    }\n    return filterString;\n  }\n\n  /**\n   * @param {ngeo.rule.Rule} rule Rule.\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @param {string=} opt_srsName SRS name. No srsName attribute will be\n   *     set on geometries when this is not provided.\n   * @return {?ol.format.filter.Filter} filter Filter;\n   * @private\n   */\n  createFilterFromRule_(rule, dataSource, opt_srsName) {\n\n    let filter = null;\n\n    const value = rule.value;\n    if (!value) {\n      return null;\n    }\n\n    const expression = value.expression;\n    const lowerBoundary = value.lowerBoundary;\n    const operator = value.operator;\n    const propertyName = value.propertyName;\n    const upperBoundary = value.upperBoundary;\n\n    const rot =  ngeoRuleRule.OperatorType;\n    const rsot = ngeoRuleRule.SpatialOperatorType;\n    const rtot = ngeoRuleRule.TemporalOperatorType;\n\n    const spatialTypes = [\n      rsot.CONTAINS,\n      rsot.INTERSECTS,\n      rsot.WITHIN\n    ];\n\n    const numericTypes = [\n      rot.GREATER_THAN,\n      rot.GREATER_THAN_OR_EQUAL_TO,\n      rot.LESSER_THAN,\n      rot.LESSER_THAN_OR_EQUAL_TO\n    ];\n\n    if (rule instanceof ngeoRuleDate) {\n      let beginValue;\n      let endValue;\n\n      if (operator === rtot.DURING) {\n        beginValue = moment(lowerBoundary).format('YYYY-MM-DD');\n        endValue = moment(upperBoundary).format('YYYY-MM-DD');\n      } else if (operator === rtot.EQUALS) {\n        beginValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD HH:mm:ss'\n        );\n        endValue = moment(\n          expression\n        ).add(\n          1, 'days'\n        ).subtract(\n          1, 'seconds'\n        ).format(\n          'YYYY-MM-DD HH:mm:ss'\n        );\n      } else if (operator === rtot.BEGINS) {\n        beginValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD'\n        );\n        // NOTE: end value is CURRENT + 30 years\n        endValue = moment(\n          expression\n        ).add(\n          30, 'years'\n        ).format(\n          'YYYY-MM-DD'\n        );\n      } else if (operator === rtot.ENDS) {\n        // NOTE: begin value is hardcoded to 1970-01-01\n        beginValue = '1970-01-01';\n        endValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD'\n        );\n      }\n      if (beginValue && endValue) {\n        filter = olFormatFilter.during(\n          propertyName,\n          beginValue,\n          endValue\n        );\n      }\n    } else if (rule instanceof ngeoRuleSelect) {\n      const selectedChoices = rule.selectedChoices;\n      if (selectedChoices.length === 1) {\n        filter = olFormatFilter.equalTo(\n          propertyName,\n          selectedChoices[0]\n        );\n      } else if (selectedChoices.length >= 2) {\n        const conditions = [];\n        for (const selectedChoice of selectedChoices) {\n          conditions.push(\n            olFormatFilter.equalTo(\n              propertyName,\n              selectedChoice\n            )\n          );\n        }\n        filter = olFormatFilter.or.apply(null, conditions);\n      }\n    } else if (olArray.includes(spatialTypes, operator)) {\n      const geometryName = dataSource.geometryName;\n      googAsserts.assertInstanceof(rule, ngeoRuleGeometry);\n      const geometry = googAsserts.assert(rule.geometry);\n      if (operator === rsot.CONTAINS) {\n        filter = olFormatFilter.contains(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.INTERSECTS) {\n        filter = olFormatFilter.intersects(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.WITHIN) {\n        filter = olFormatFilter.within(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      }\n    } else if (olArray.includes(numericTypes, operator)) {\n      const numericExpression = googAsserts.assertNumber(expression);\n      if (operator === rot.GREATER_THAN) {\n        filter = olFormatFilter.greaterThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.GREATER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.greaterThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN) {\n        filter = olFormatFilter.lessThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.lessThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      }\n    } else if (operator === rot.BETWEEN) {\n      filter = olFormatFilter.between(\n        propertyName,\n        lowerBoundary,\n        upperBoundary\n      );\n    } else if (operator === rot.EQUAL_TO) {\n      filter = olFormatFilter.equalTo(\n        propertyName,\n        expression\n      );\n    } else if (operator === rot.LIKE) {\n      const stringExpression = String(expression)\n        .replace(/!/g, '!!')\n        .replace(/\\./g, '!.')\n        .replace(/\\*/g, '!*');\n      filter = olFormatFilter.like(\n        propertyName,\n        `*${stringExpression}*`,\n        '*', /* wildCard */\n        '.', /* singleChar */\n        '!', /* escapeChar */\n        false /* matchCase */\n      );\n    } else if (operator === rot.NOT_EQUAL_TO) {\n      filter = olFormatFilter.notEqualTo(\n        propertyName,\n        expression\n      );\n    }\n\n    return filter;\n  }\n\n  /**\n   * Create and return an OpenLayers filter object using the available\n   * time properties within the data source.\n   * @param {ngeo.datasource.OGC} dataSource Data source from which to\n   *     create the filter.\n   * @return {?ol.format.filter.Filter} Filter\n   * @private\n   */\n  createTimeFilterFromDataSource_(dataSource) {\n    let filter = null;\n    const range = dataSource.timeRangeValue;\n    const timeProperty = dataSource.timeProperty;\n    const name = dataSource.timeAttributeName;\n\n    if (range && timeProperty && name) {\n\n      if (range.end !== undefined) {\n        // Case 1: the range has both 'start' and 'end' values.  Use them to\n        //         create a During filter.\n\n        const values = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        ).split('/');\n\n        filter = olFormatFilter.during(name, values[0], values[1]);\n      } else {\n\n        // Case 2: we only have a 'start' value. We need to calculate the 'end'\n        //         using the resolution of the time property.\n\n        const resolution = timeProperty.resolution || 'seconds';\n        const value = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        );\n        let momentEnd;\n\n        switch (resolution) {\n          case 'year':\n            momentEnd = moment(value).add(1, 'years').subtract(1, 'seconds');\n            break;\n          case 'month':\n            momentEnd = moment(value).add(1, 'months').subtract(1, 'seconds');\n            break;\n          case 'day':\n            momentEnd = moment(value).add(1, 'days').subtract(1, 'seconds');\n            break;\n          default:\n            //case \"second\":\n            // This would require a TContains filter, which neither OpenLayers\n            // and MapServer support. Skip...\n        }\n\n        if (momentEnd) {\n          const startValue = moment(value).format('YYYY-MM-DD HH:mm:ss');\n          const endValue = momentEnd.format('YYYY-MM-DD HH:mm:ss');\n          filter = olFormatFilter.during(name, startValue, endValue);\n        }\n      }\n    }\n\n    return filter;\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRuleHelper', [\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoRuleHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.File\n */\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source that contains vector features that were loaded from a file.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @private\n     */\n    this.featuresCollection_ = options.features || new olCollection();\n\n    /**\n     * @type {!ol.source.Vector}\n     * @private\n     */\n    this.source_ = new olSourceVector({\n      features: this.featuresCollection_,\n      wrapX: false\n    });\n\n    /**\n     * @type {!ol.layer.Vector}\n     * @private\n     */\n    this.layer_ = new olLayerVector({\n      source: this.source_\n    });\n  }\n\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ol.Feature>} Features\n   * @export\n   */\n  get features() {\n    return this.featuresCollection_.getArray();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {!ol.Collection.<!ol.Feature>} Features collection\n   * @export\n   */\n  get featuresCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * @return {!ol.layer.Vector} Vector layer.\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {ol.Extent} Extent.\n   * @export\n   */\n  get extent() {\n    return this.source_.getExtent();\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.FileGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A FileGroup data source combines multiple `ngeo.datasource.File` objects.\n   * Its main goal is to synchronize the added data source 'visible' properties\n   * with the visibility of their layer 'visible' property.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.unregister_ = {};\n  }\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    this.unregister_[dataSource.id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this, dataSource)\n    );\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source.\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(dataSource, value, oldValue) {\n    if (value !== undefined) {\n      dataSource.layer.setVisible(value);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    this.unregister_[dataSource.id]();\n    delete this.unregister_[dataSource.id];\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper the ngeo map LayerHelper service.\n   */\n  constructor(options, ngeoLayerHelper) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.ExternalDataSourcesManager\n */\n// TODO - MaxScaleDenominator\n// TODO - MinScaleDenominator\n\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceFileGroup from 'ngeo/datasource/FileGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\n\nconst exports = class {\n\n  /**\n   * External data sources come remote online resources, such as WMS/WMTS\n   * servers, and also files such as KML/GXP. This service is responsible of\n   * creating, storing and managing them.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog service.\n   * @param {!angular.$injector} $injector Main injector.\n   * @param {!angular.$q} $q The Angular $q service.\n   * @param {!angular.Scope} $rootScope The rootScope provider.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {!ngeo.misc.File} ngeoFile Ngeo file.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo layer helper service\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfExternalDataSourcesManager\n   */\n  constructor(gettextCatalog, $injector, $q, $rootScope, ngeoDataSources,\n    ngeoFile, ngeoLayerHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angular.$injector}\n     * @private\n     */\n    this.injector_ = $injector;\n\n    /**\n     * @type {!angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * The collection of DataSources from ngeo. When this service creates\n     * a data source, its gets added to that collection.\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.misc.File}\n     * @private\n     */\n    this.ngeoFile_ = ngeoFile;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * All external data sources that are created are stored here. The key\n     * is the data source id.\n     *\n     * Note: This cache is never cleaned and elements are never removed from it.\n     * If a data source with an id already exists in this cache, it is used\n     * instead of being re-created.\n     *\n     * @type {Object.<number, !ngeo.datasource.OGC|!ngeo.datasource.File>}\n     * @private\n     */\n    this.extDataSources_ = {};\n\n    /**\n     * File external data sources, with the key being the file name.\n     * @type {Object.<string, !ngeo.datasource.File>}\n     * @private\n     */\n    this.files_ = {};\n\n    /**\n     * @type {?ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * Group that contains file data sources.\n     * @type {!ngeo.datasource.FileGroup}\n     * @private\n     */\n    this.fileGroup_ = new ngeoDatasourceFileGroup({\n      dataSources: [],\n      injector: this.injector_,\n      title: gettextCatalog.getString('Local files')\n    });\n\n    /**\n     * Collection of WMS groups.\n     * @type {!ol.Collection.<!ngeo.datasource.WMSGroup>}\n     * @private\n     */\n    this.wmsGroupsCollection_ = new olCollection();\n\n    /**\n     * Collection of groups for WMTS data sources.\n     * @type {!ol.Collection.<!ngeo.datasource.OGCGroup>}\n     * @private\n     */\n    this.wmtsGroupsCollection_ = new olCollection();\n\n    /**\n     * Cache that stores the information of a WMTS data source. The key is the\n     * data source id.\n     * @type {!Object.<number, gmfx.datasource.ExternalDataSourcesManagerWMTSCacheItem>}\n     * @private\n     */\n    this.wmtsCache_ = {};\n\n    olEvents.listen(this.dataSources_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n\n  // === File Group ===\n\n  /**\n   * @return {!ngeo.datasource.FileGroup} File group.\n   * @export\n   */\n  get fileGroup() {\n    return this.fileGroup_;\n  }\n\n\n  // === WMS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  addWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.push(wmsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  removeWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.remove(wmsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.WMSGroup} WMS group.\n   */\n  getWMSGroup(url) {\n    let found = null;\n    for (const wmsGroup of this.wmsGroups) {\n      if (wmsGroup.url === url) {\n        found = wmsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.WMSGroup>} List of WMS groups.\n   * @export\n   */\n  get wmsGroups() {\n    return this.wmsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.WMSGroup>} Collection of WMS\n   *     groups.\n   * @export\n   */\n  get wmsGroupsCollection() {\n    return this.wmsGroupsCollection_;\n  }\n\n\n  // === WMTS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  addWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.push(wmtsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  removeWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.remove(wmtsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.OGCGroup} WMTS group.\n   */\n  getWMTSGroup(url) {\n    let found = null;\n    for (const wmtsGroup of this.wmtsGroups) {\n      if (wmtsGroup.url === url) {\n        found = wmtsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.OGCGroup>} List of groups for WMTS data\n   *     sources.\n   * @export\n   */\n  get wmtsGroups() {\n    return this.wmtsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.OGCGroup>} Collection of groups\n   *     for WMTS data sources.\n   * @export\n   */\n  get wmtsGroupsCollection() {\n    return this.wmtsGroupsCollection_;\n  }\n\n\n  // === Other methods ===\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source\n   * @return {boolean} Whether the given data source is external or not. To\n   *     be considered external, it needs to be in the external data source\n   *     hash (cache).\n   */\n  isExternalDataSource(dataSource) {\n    return !!this.extDataSources_[dataSource.id];\n  }\n\n  /**\n   * @return {ol.layer.Group} Layer group where to push layers created by\n   *     this service.\n   */\n  get layerGroup() {\n    const map = this.map_;\n    googAsserts.assert(map);\n    return this.ngeoLayerHelper_.getGroupFromMap(\n      map,\n      gmfBase.EXTERNALLAYERGROUP_NAME\n    );\n  }\n\n  /**\n   * @param {?ol.Map} map Map\n   */\n  set map(map) {\n    this.map_ = map;\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  addLayer_(layer) {\n    this.layerGroup.getLayers().push(layer);\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  removeLayer_(layer) {\n    this.layerGroup.getLayers().remove(layer);\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object.\n   * @param {!Object} capabilities  WMS Capabilities definition\n   * @param {string} url The WMS service url.\n   * @export\n   */\n  createAndAddDataSourceFromWMSCapability(layer, capabilities, url) {\n\n    const id = exports.getId(layer);\n    const service = capabilities['Service'];\n\n    let dataSource;\n\n    // (1) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n      const req = capabilities['Capability']['Request'];\n\n      // ogcImageType\n      const formats = req['GetMap']['Format'];\n      const imagePngType = 'image/png';\n      const ogcImageType = formats.includes(imagePngType) ?\n        imagePngType : formats[0];\n\n      // wmsInfoFormat\n      const infoFormats = req['GetFeatureInfo']['Format'];\n      const wmsInfoFormat = infoFormats.includes(\n        ngeoDatasourceOGC.WMSInfoFormat.GML\n      ) ? ngeoDatasourceOGC.WMSInfoFormat.GML : undefined;\n\n      // queryable\n      const queryable = layer['queryable'] === true &&\n          wmsInfoFormat !== undefined;\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: layer['Title'],\n        ogcImageType: ogcImageType,\n        ogcLayers: [{\n          name: layer['Name'],\n          queryable: queryable\n        }],\n        ogcType: ngeoDatasourceOGC.Type.WMS,\n        visible: true,\n        wmsInfoFormat: wmsInfoFormat,\n        wmsUrl: url\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n\n    // (2) Add data source in WMS group, unless it's already in there.\n    //     Will also add the data source to the `ngeo.DataSources` collection.\n    //     If the group is created, its inner OL layer is also added to the map.\n    let wmsGroup = this.getWMSGroup(url);\n    if (wmsGroup) {\n      if (!wmsGroup.dataSources.includes(dataSource)) {\n        wmsGroup.addDataSource(dataSource);\n        this.dataSources_.push(dataSource);\n      }\n    } else {\n      wmsGroup = new ngeoDatasourceWMSGroup({\n        dataSources: [dataSource],\n        injector: this.injector_,\n        title: service['Title'],\n        url: url\n      }, this.ngeoLayerHelper_);\n      this.addLayer_(wmsGroup.layer);\n      this.addWMSGroup_(wmsGroup);\n      this.dataSources_.push(dataSource);\n    }\n  }\n\n  /**\n   * @param {!Object} layer WTMS Capability Layer object.\n   * @param {!Object} capabilities  WMTS Capabilities definition\n   * @param {string} wmtsUrl The WMTS capabilities url\n   * @export\n   */\n  createAndAddDataSourceFromWMTSCapability(layer, capabilities, wmtsUrl) {\n    const id = exports.getId(layer);\n\n    // (1) No need to do anything if there's already a WMTS data source (and its\n    // layer in the map)\n    if (this.wmtsCache_[id]) {\n      return;\n    }\n\n    let dataSource;\n\n    // (2) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n\n      const name = googAsserts.assertString(layer['Title']);\n      const wmtsLayer = googAsserts.assertString(layer['Identifier']);\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: name,\n        ogcType: ngeoDatasourceOGC.Type.WMTS,\n        visible: true,\n        wmtsLayer: wmtsLayer,\n        wmtsUrl: wmtsUrl\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n    // (3) Get/Create group, then add data source to group\n    let wmtsGroup = this.getWMTSGroup(wmtsUrl);\n    if (!wmtsGroup) {\n      wmtsGroup = new ngeoDatasourceOGCGroup({\n        dataSources: [],\n        title: capabilities['ServiceIdentification']['Title'],\n        url: wmtsUrl\n      });\n      this.addWMTSGroup_(wmtsGroup);\n    }\n    wmtsGroup.addDataSource(dataSource);\n\n    // (4) Create and add the OL layer\n    const layerObj = this.ngeoLayerHelper_.createWMTSLayerFromCapabilititesObj(\n      capabilities,\n      layer\n    );\n    this.addLayer_(layerObj);\n\n    // (5) Add data source to ngeo collection\n    this.dataSources_.push(dataSource);\n\n    // (6) Create and set WMTS cache item\n    this.wmtsCache_[id] = {\n      layerObj: layerObj,\n      // This watcher synchronizes the data source visible property to\n      // the OL layer object visible property\n      unregister: this.rootScope_.$watch(\n        () => dataSource.visible,\n        this.handleWMTSDataSourceVisibleChange_.bind(this, layerObj)\n      )\n    };\n  }\n\n  /**\n   * @param {!File} file File.\n   * @export\n   */\n  createAndAddDataSourceFromFile(file) {\n    this.getFileDataSource_(file).then(\n      (dataSource) => {\n        const fileGroup = this.fileGroup_;\n\n        // (1) No need to do anything if the file has already been added...\n        if (fileGroup.dataSources.includes(dataSource)) {\n          return;\n        }\n\n        // (2) Okay, we need to add this data source. First, add its layer\n        //     to the map.\n        this.addLayer_(dataSource.layer);\n\n        // (3) Add it to the file group\n        fileGroup.addDataSource(dataSource);\n\n        // (4) Recenter the map view onto its extent\n        this.map_.getView().fit(dataSource.extent);\n\n        // (5) Finally, add it to the ngeo collection\n        this.dataSources_.push(dataSource);\n      },\n      (rejections) => {\n        googAsserts.fail(`Failed to load file: ${file.name}`);\n      }\n    );\n  }\n\n  /**\n   * Get file data source from cache, else create, store and return a new one.\n   * @param {!File} file File.\n   * @return {!angular.$q.Promise} Promise\n   * @private\n   */\n  getFileDataSource_(file) {\n\n    const defer = this.q_.defer();\n\n    if (this.files_[file.name]) {\n      defer.resolve(this.files_[file.name]);\n    } else {\n      const ngeoFile = this.ngeoFile_;\n      ngeoFile.read(file).then((content) => {\n        let features;\n        const readOptions = {\n          featureProjection: this.map_.getView().getProjection()\n        };\n\n        if (ngeoFile.isKml(content)) {\n          features = new olFormatKML().readFeatures(content, readOptions);\n        } else if (ngeoFile.isGpx(content)) {\n          features = new olFormatGPX().readFeatures(content, readOptions);\n        }\n\n        if (features) {\n          const id = exports.getId(file);\n\n          const dataSource = new ngeoDatasourceFile({\n            features: new olCollection(features),\n            id: id,\n            name: file.name,\n            visible: true\n          });\n\n          // Keep a reference if both caches\n          this.files_[file.name] = dataSource;\n          this.extDataSources_[id] = dataSource;\n\n          defer.resolve(dataSource);\n        } else {\n          defer.reject();\n        }\n      });\n    }\n\n    return defer.promise;\n  }\n\n  /**\n   * @param {!ol.layer.Tile} layer WMTS layer\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleWMTSDataSourceVisibleChange_(layer, value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      layer.setVisible(value);\n    }\n  }\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If it's an external data source, remove it from its WMS Group\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (this.extDataSources_[dataSource.id] === dataSource) {\n      if (dataSource instanceof ngeoDatasourceFile) {\n        this.removeFileDataSource_(dataSource);\n      } else if (dataSource instanceof ngeoDatasourceOGC) {\n        this.removeOGCDataSource_(dataSource);\n      }\n    }\n  }\n\n  /**\n   * Remove a data source from its group. Remove its layer from the map as well.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.File} dataSource External File data source.\n   * @private\n   */\n  removeFileDataSource_(dataSource) {\n    this.removeLayer_(dataSource.layer);\n    this.fileGroup_.removeDataSource(dataSource);\n  }\n\n  /**\n   * Remove the data source from its group. If the group no longer has\n   * any data source in it, it is removed then destroyed and its layer is\n   * removed from the map.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.OGC} dataSource External OGC data source.\n   * @private\n   */\n  removeOGCDataSource_(dataSource) {\n    if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMS) {\n      // WMS data source\n      const url = dataSource.wmsUrl;\n      googAsserts.assert(url);\n\n      const wmsGroup = this.getWMSGroup(url);\n      if (wmsGroup && wmsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmsGroup.removeDataSource(dataSource);\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the group, and remove the layer from the map as well.\n        if (!wmsGroup.dataSources.length) {\n          this.removeLayer_(wmsGroup.layer);\n          wmsGroup.destroy();\n          this.removeWMSGroup_(wmsGroup);\n        }\n      }\n    } else if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMTS) {\n      // WMTS data source\n      const url = dataSource.wmtsUrl;\n      googAsserts.assert(url);\n\n      const wmtsGroup = this.getWMTSGroup(url);\n      if (wmtsGroup && wmtsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmtsGroup.removeDataSource(dataSource);\n\n        // Remove the cache item, in addition to removing the layer from the\n        // map and unregister the watcher\n        const id = dataSource.id;\n        this.removeLayer_(this.wmtsCache_[id].layerObj);\n        this.wmtsCache_[id].unregister();\n        delete this.wmtsCache_[id];\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the groug.\n        if (!wmtsGroup.dataSources.length) {\n          wmtsGroup.destroy();\n          this.removeWMTSGroup_(wmtsGroup);\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * Get the data source id from a WMS or WMTS Capability Layer object, or\n * from a File object.\n *\n * Please, note that this is used to generate a unique id for the created\n * external data sources and since a WMS/WMTS Capability Layer objects don't\n * natively contains an id by themselves, then it is programmatically generated\n * using the `ol.getUid` method, plus a million.\n *\n * @param {!Object} layer WMS/WMTS Capability Layer object.\n * @return {number} Data source id.\n * @export\n */\nexports.getId = function(layer) {\n  return olBase.getUid(layer) + 1000000;\n};\n\n\nexports.module = angular.module('gmfExternalDataSourcesManager', [\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscFile.module.name,\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('gmfExternalDataSourcesManager',\n  exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.DataSources\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport olView from 'ol/View.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoDataSources\n   * @ngInject\n   */\n  constructor() {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = new olCollection();\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_ === map) {\n      return;\n    }\n\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.collection_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.service('ngeoDataSources', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.editFeatureComponent\n */\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\n\n/** @suppress {extraRequire} */\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\n\nimport gmfEditingXSDAttributes from 'gmf/editing/XSDAttributes.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport googAsserts from 'goog/asserts.js';\nimport DateFormatter from 'ngeo/misc/php-date-formatter.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.css';\n\n\n/** @suppress {extraRequire} */\nimport ngeoEditingAttributesComponent from 'ngeo/editing/attributesComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingCreatefeatureComponent from 'ngeo/editing/createfeatureComponent.js';\n\nimport ngeoUtils from 'ngeo/utils.js';\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMenu from 'ngeo/Menu.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\n\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfEditingFeatureComponent', [\n  gmfEditingEditFeature.module.name,\n  gmfEditingSnapping.module.name,\n  gmfEditingXSDAttributes.module.name,\n  ngeoEditingAttributesComponent.name,\n  ngeoEditingCreatefeatureComponent.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMessageModalComponent.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/editing/editFeatureComponent', require('./editFeatureComponent.html'));\n});\n\n\n/**\n * Directive used to insert, modify and delete features from a single layer.\n * It allows you to modify the geometry of the feature in addition to its\n * attributes.\n *\n * In order to modify or delete a feature, you must click on the map at the\n * location of the feature to select it first.\n *\n * In order to create a new feature, you use the \"Draw\" button and digitize\n * the feature on the map.\n *\n * Example:\n *\n *     <gmf-editfeature\n *         gmf-editfeature-dirty=\"ctrl.dirty\"\n *         gmf-editfeature-editabletreectrl=\"::ctrl.treeCtrl\"\n *         gmf-editfeature-map=\"::ctrl.map\"\n *         gmf-editfeature-state=\"efsCtrl.state\"\n *         gmf-editfeature-tolerance=\"::ctrl.tolerance\"\n *         gmf-editfeature-vector=\"::ctrl.vectorLayer\">\n *     </gmf-editfeature>\n *\n * @htmlAttribute {boolean} gmf-editfeature-dirty Flag that is toggled as soon\n *     as the feature changes, i.e. if any of its properties change, which\n *     includes the geometry.\n * @htmlAttribute {ngeo.layertree.Controller} gmf-editfeature-editabletreectrl\n *     A reference to the editable Layertree controller, which contains a\n *     a reference to the node and WMS layer.\n * @htmlAttribute {ol.Map} gmf-editfeature-map The map.\n * @htmlAttribute {string} gmf-editfeature-state The state property shared\n *     with the `gmf-editfeatureselector` directive. For more info, see in\n *     that directive.\n * @htmlAttribute {number|undefined} gmf-editfeatureselector-tolerance The\n *     buffer in pixels to use when making queries to get the features.\n * @htmlAttribute {ol.layer.Vector} gmf-editfeature-vector The vector layer in\n *     which to draw the vector features.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfEditfeature\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfEditfeatureController as efCtrl',\n    scope: {\n      'dirty': '=gmfEditfeatureDirty',\n      'editableTreeCtrl': '=gmfEditfeatureEditabletreectrl',\n      'map': '<gmfEditfeatureMap',\n      'state': '=gmfEditfeatureState',\n      'tolerance': '<?gmfEditfeatureTolerance',\n      'vectorLayer': '<gmfEditfeatureVector'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/editing/editFeatureComponent'\n  };\n};\n\n\nexports.directive('gmfEditfeature',\n  exports.component_);\n\n\n/**\n * @param {jQuery} $element Element.\n * @param {angular.$q} $q Angular $q service.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmf.editing.EditFeature} gmfEditFeature Gmf edit feature service.\n * @param {gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @param {gmf.editing.XSDAttributes} gmfXSDAttributes The gmf XSDAttributes service.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo Event Helper.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfEditfeatureController\n */\nexports.Controller_ = function($element, $q, $scope, $timeout,\n  gettextCatalog, gmfEditFeature, gmfSnapping, gmfXSDAttributes,\n  ngeoEventHelper, ngeoFeatureHelper, ngeoLayerHelper, ngeoToolActivateMgr) {\n\n\n  // === Binding properties ===\n\n  /**\n   * Flag that is toggled as soon as the feature changes, i.e. if any of its\n   * properties change, which includes the geometry.\n   * @type {boolean}\n   * @export\n   */\n  this.dirty;\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.editableTreeCtrl;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * The state property shared with the `gmf-editfeatureselector` directive.\n   * For more info, see in that directive.\n   * @type {string}\n   * @export\n   */\n  this.state;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.tolerance;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.vectorLayer;\n\n\n  // === Injected properties ===\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {gmf.editing.EditFeature}\n   * @private\n   */\n  this.gmfEditFeature_ = gmfEditFeature;\n\n  /**\n   * @type {gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n\n  /**\n   * @type {gmf.editing.XSDAttributes}\n   * @private\n   */\n  this.gmfXSDAttributes_ = gmfXSDAttributes;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n\n  // === Private properties ===\n\n  /**\n   * @type {gmfThemes.GmfLayer}\n   * @private\n   */\n  this.editableNode_;\n\n  /**\n   * @type {ol.layer.Image|ol.layer.Tile}\n   * @private\n   */\n  this.editableWMSLayer_;\n\n  /**\n   * A deferred object resolved after the confirm modal \"continue w/o saving\" or\n   * \"save\" buttons are clicked.\n   * @type {angular.$q.Deferred|null}\n   * @private\n   */\n  this.confirmDeferred_ = null;\n\n  /**\n   * Flag that controls the visibility of the modal that manages unsaved\n   * modifications.\n   * @type {boolean}\n   * @export\n   */\n  this.unsavedModificationsModalShown = false;\n\n  /**\n   * Flag that is toggled while a request is pending, either one to get\n   * features when a map is clicked or when saving\n   * @private\n   */\n  this.pending = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = true;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.createActive = false;\n\n  /**\n   * @type {ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.createToolActivate = new ngeoMiscToolActivate(this, 'createActive');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.mapSelectActive = true;\n\n  /**\n   * @type {ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.mapSelectToolActivate = new ngeoMiscToolActivate(this, 'mapSelectActive');\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature = null;\n\n  this.scope_.$watch(\n    () => this.feature,\n    this.handleFeatureChange_.bind(this)\n  );\n\n  /**\n   * @type {number|string|undefined}\n   * @export\n   */\n  this.featureId = undefined;\n\n  /**\n   * @type {ol.Collection}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Collection}\n   * @private\n   */\n  this.interactions_ = new olCollection();\n\n  /**\n   * @type {ol.interaction.Modify}\n   * @private\n   */\n  this.modify_;\n\n  /**\n   * @type {ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.modifyToolActivate;\n\n  /**\n   * @type {ngeo.Menu}\n   * @private\n   */\n  this.menu_ = new ngeoMenu({\n    actions: [{\n      cls: 'fa fa-arrows',\n      label: gettextCatalog.getString('Move'),\n      name: 'move'\n    }, {\n      cls: 'fa fa-rotate-right',\n      label: gettextCatalog.getString('Rotate'),\n      name: 'rotate'\n    }]\n  });\n\n  /**\n   * @type {ngeo.interaction.Translate}\n   * @private\n   */\n  this.translate_;\n\n  /**\n   * @type {ngeo.interaction.Rotate}\n   * @private\n   */\n  this.rotate_;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.rotateToolActivate;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.translateToolActivate;\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?Array.<!ngeox.Attribute>}\n   * @export\n   */\n  this.attributes = null;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showServerError = false;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.serverErrorMessage = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.serverErrorType = null;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const lang = this.gettextCatalog_.getCurrentLanguage();\n  $.datetimepicker.setLocale(lang);\n  $.datetimepicker.setDateFormatter(new DateFormatter());\n\n  // (1) Set default values and other properties\n  this.dirty = this.dirty === true;\n  this.editableNode_ = /** @type {gmfThemes.GmfLayer} */ (\n    this.editableTreeCtrl.node);\n  this.features = this.vectorLayer.getSource().getFeaturesCollection();\n  this.tolerance = this.tolerance !== undefined ? this.tolerance : 10;\n\n  // (1.1) Set editable WMS layer\n  const layer = gmfLayertreeSyncLayertreeMap.getLayer(this.editableTreeCtrl);\n  googAsserts.assert(\n    layer instanceof olLayerImage || layer instanceof olLayerTile);\n  this.editableWMSLayer_ = layer;\n\n  // (1.2) Create, set and initialize interactions\n  this.modify_ = new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.features,\n    style: this.ngeoFeatureHelper_.getVertexStyle(false)\n  });\n  this.interactions_.push(this.modify_);\n\n  this.rotate_ = new ngeoInteractionRotate({\n    features: this.features,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf01e',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.rotate_);\n\n  this.translate_ = new ngeoInteractionTranslate({\n    features: this.features,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf047',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.translate_);\n\n  this.initializeInteractions_();\n\n  this.modifyToolActivate = new ngeoMiscToolActivate(this.modify_, 'active');\n  this.rotateToolActivate = new ngeoMiscToolActivate(this.rotate_, 'active');\n  this.translateToolActivate = new ngeoMiscToolActivate(this.translate_, 'active');\n\n  // (1.3) Add menu to map\n  this.map.addOverlay(this.menu_);\n\n\n  // (2) Watchers and event listeners\n  this.scope_.$watch(\n    () => this.createActive,\n    (newVal, oldVal) => {\n      if (newVal) {\n        this.gmfSnapping_.ensureSnapInteractionsOnTop();\n      }\n    }\n  );\n\n  this.scope_.$on('$destroy', this.handleDestroy_.bind(this));\n\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(\n      this.features,\n      'add',\n      this.handleFeatureAdd_,\n      this\n    )\n  );\n\n  this.scope_.$watch(\n    () => this.mapSelectActive,\n    this.handleMapSelectActiveChange_.bind(this)\n  );\n\n  this.scope_.$watch(\n    () => this.state,\n    (newValue, oldValue) => {\n      const state = exports.State;\n      if (newValue === state.STOP_EDITING_PENDING) {\n        this.confirmCancel().then(() => {\n          this.state = state.STOP_EDITING_EXECUTE;\n        });\n      } else if (newValue === state.DEACTIVATE_PENDING) {\n        this.confirmCancel().then(() => {\n          this.state = state.DEACTIVATE_EXECUTE;\n        });\n      }\n    }\n  );\n\n  this.scope_.$watch(\n    () => this.unsavedModificationsModalShown,\n    (newValue, oldValue) => {\n      // Reset stop request when closing the confirmation modal\n      if (oldValue && !newValue) {\n        this.state = exports.State.IDLE;\n      }\n    }\n  );\n\n\n  // (3) Get attributes\n  this.gmfXSDAttributes_.getAttributes(this.editableNode_.id).then(\n    this.setAttributes_.bind(this));\n\n\n  // (4) Toggle\n  this.toggle_(true);\n\n};\n\n\n/**\n * Save the currently selected feature modifications.\n * @export\n */\nexports.Controller_.prototype.save = function() {\n  googAsserts.assert(this.attributes);\n\n  const feature = this.feature.clone();\n  feature.setId(this.feature.getId());\n  const id = this.featureId;\n\n  this.pending = true;\n\n  const dateFormatter = new DateFormatter();\n  for (const attribute of this.attributes) {\n    if (attribute.format) {\n      if (this.feature.get(attribute.name)) {\n        const name = this.feature.get(attribute.name);\n        googAsserts.assertString(name);\n        const value = dateFormatter.parseDate(name, attribute.format);\n        let jsonFormat = 'Y-m-d\\\\TH:i:s';\n        if (attribute.type === 'date') {\n          jsonFormat = 'Y-m-d';\n        } else if (attribute.type === 'time') {\n          jsonFormat = 'H:i:s';\n        } else if (attribute.type === 'datetime') {\n          // Time zone correction\n          value.setMinutes(value.getMinutes() + value.getTimezoneOffset());\n        }\n        feature.set(attribute.name, dateFormatter.formatDate(value, jsonFormat));\n      } else {\n        // Shouldn't be set to an empty string\n        feature.set(attribute.name, null);\n      }\n    }\n  }\n\n  const promise = id ?\n    this.gmfEditFeature_.updateFeature(\n      this.editableNode_.id,\n      feature\n    ) :\n    this.gmfEditFeature_.insertFeatures(\n      this.editableNode_.id,\n      [feature]\n    );\n  promise.then(\n    (response) => {\n      this.dirty = false;\n      this.pending = false;\n      this.handleEditFeature_(response);\n    },\n    (response) => {\n      this.showServerError = true;\n      this.pending = false;\n      this.serverErrorType =  `error type : ${response.data['error_type']}`;\n      this.serverErrorMessage = `error message : ${response.data['message']}`;\n    }\n  );\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.cancel = function() {\n  this.dirty = false;\n  this.feature = null;\n  this.features.clear();\n  this.menu_.close();\n  this.unsavedModificationsModalShown = false;\n};\n\n\n/**\n * Check if there are unsaved modifications. If there aren't, then cancel.\n * Used by the 'cancel' button in the template.\n * @return {angular.$q.Promise} The promise attached to the confirm deferred\n *     object.\n * @export\n */\nexports.Controller_.prototype.confirmCancel = function() {\n  return this.checkForModifications_().then(() => {\n    this.cancel();\n  });\n};\n\n\n/**\n * Check if there's a feature selected and if it contains modifications\n * (a.k.a. is dirty), then the confirmation modal is shown.\n * @param {boolean=} scopeApply Whether to force scope to refresh or not.\n *     when the confirm modal is not dismissed.\n * @return {angular.$q.Promise} The promise attached to the confirm deferred\n *     object.\n * @private\n */\nexports.Controller_.prototype.checkForModifications_ = function(\n  scopeApply) {\n  this.confirmDeferred_ = this.q_.defer();\n  if (this.feature && this.dirty) {\n    this.unsavedModificationsModalShown = true;\n    if (scopeApply) {\n      this.scope_.$apply();\n    }\n  } else {\n    this.confirmDeferred_.resolve();\n  }\n\n  return this.confirmDeferred_.promise;\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.continueWithoutSaving = function() {\n  this.cancel();\n  this.confirmDeferred_.resolve();\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.delete = function() {\n  const msg = this.gettextCatalog_.getString(\n    'Do you really want to delete the selected feature?');\n  // Confirm deletion first\n  if (confirm(msg)) {\n    this.pending = true;\n\n    // (1) Launch request\n    this.gmfEditFeature_.deleteFeature(\n      this.editableNode_.id,\n      this.feature\n    ).then(\n      (response) => {\n        this.dirty = false;\n        this.pending = false;\n        this.ngeoLayerHelper_.refreshWMSLayer(this.editableWMSLayer_);\n\n        // (2) Reset selected feature\n        this.cancel();\n      },\n      (response) => {\n        this.showServerError = true;\n        this.pending = false;\n        this.serverErrorType =  `error type : ${response.data['error_type']}`;\n        this.serverErrorMessage = `error message : ${response.data['message']}`;\n      }\n    );\n\n  }\n};\n\n\n/**\n * Called when the modal 'save' button is clicked. Do as if the user had\n * clicked on the 'save' input button in the form, which allows the form\n * to be validated.\n * @export\n */\nexports.Controller_.prototype.submit = function() {\n  // Use timeout to prevent the digest already in progress\n  // due to clicking on the modal button to throw an error.\n  this.timeout_(() => {\n    this.element_.find('input[type=\"submit\"]').click();\n  }, 0);\n};\n\n/**\n * Called after an insert, update or delete request.\n * @param {angular.$http.Response} resp Ajax response.\n * @private\n */\nexports.Controller_.prototype.handleEditFeature_ = function(resp) {\n  const features = new olFormatGeoJSON().readFeatures(resp.data);\n  if (features.length) {\n    this.feature.setId(features[0].getId());\n    this.ngeoLayerHelper_.refreshWMSLayer(this.editableWMSLayer_);\n  }\n  if (this.confirmDeferred_) {\n    this.confirmDeferred_.resolve();\n  }\n};\n\n\n/**\n * @param {!Array.<ngeox.Attribute>} attributes Attributes.\n * @private\n */\nexports.Controller_.prototype.setAttributes_ = function(attributes) {\n  // Set attributes\n  this.attributes = attributes;\n  for (const attribute of attributes) {\n    if (attribute.type == 'date') {\n      attribute.format = 'Y-m-d';\n      attribute.mask = '9999-19-39';\n    } else if (attribute.type == 'time') {\n      attribute.format = 'H:i';\n      attribute.mask = '29:59';\n    } else if (attribute.type == 'datetime') {\n      attribute.format = 'Y-m-d H:i';\n      attribute.mask = '9999-19-39 29:59';\n    }\n  }\n\n  // Get geom type from attributes and set\n  const geomAttr = ngeoFormatXSDAttribute.getGeometryAttribute(\n    this.attributes\n  );\n  if (geomAttr && geomAttr.geomType) {\n    this.geomType = geomAttr.geomType;\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeatureAdd_ = function(evt) {\n  this.feature = null;\n  this.timeout_(() => {\n    googAsserts.assert(this.attributes);\n    const feature = evt.element;\n    googAsserts.assertInstanceof(feature, olFeature);\n    const dateFormatter = new DateFormatter();\n    for (const attribute of this.attributes) {\n      if (attribute.format) {\n        if (feature.get(attribute.name)) {\n          let value;\n          if (attribute.type === 'datetime') {\n            value = new Date(feature.get(attribute.name));\n            // Time zone correction\n            value.setMinutes(value.getMinutes() - value.getTimezoneOffset());\n          } else {\n            let jsonFormat = '';\n            if (attribute.type === 'date') {\n              jsonFormat = 'Y-m-d';\n            } else if (attribute.type === 'time') {\n              jsonFormat = 'H:i:s';\n            }\n            const name = feature.get(attribute.name);\n            googAsserts.assertString(name);\n            value = dateFormatter.parseDate(name, jsonFormat);\n          }\n          feature.set(attribute.name, dateFormatter.formatDate(value, attribute.format));\n        } else {\n          // Shouldn't be set to an empty string\n          feature.set(attribute.name, null);\n        }\n      }\n    }\n    this.feature = feature;\n    this.createActive = false;\n    if (!feature.getId()) {\n      this.dirty = true;\n    }\n    this.scope_.$apply();\n  }, 0);\n};\n\n\n/**\n * Activate or deactivate this directive.\n * @param {boolean} active Whether to activate this directive or not.\n * @private\n */\nexports.Controller_.prototype.toggle_ = function(active) {\n\n  const keys = this.listenerKeys_;\n  const createUid = ['create-', olBase.getUid(this)].join('-');\n  const otherUid = ['other-', olBase.getUid(this)].join('-');\n  const toolMgr = this.ngeoToolActivateMgr_;\n\n  if (active) {\n\n    // FIXME\n    //this.registerInteractions_();\n\n    keys.push(olEvents.listen(this.menu_, 'actionclick',\n      this.handleMenuActionClick_, this));\n\n    keys.push(olEvents.listen(this.translate_,\n      'translateend',\n      this.handleTranslateEnd_, this));\n\n    keys.push(olEvents.listen(this.rotate_, 'rotateend', this.handleRotateEnd_, this));\n\n    toolMgr.registerTool(createUid, this.createToolActivate, false);\n    toolMgr.registerTool(createUid, this.mapSelectToolActivate, true);\n\n    toolMgr.registerTool(otherUid, this.createToolActivate, false);\n    toolMgr.registerTool(otherUid, this.modifyToolActivate, true);\n    toolMgr.registerTool(otherUid, this.translateToolActivate, false);\n    toolMgr.registerTool(otherUid, this.rotateToolActivate, false);\n\n  } else {\n\n    // FIXME\n    //this.unregisterInteractions_();\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n\n    toolMgr.unregisterTool(createUid, this.createToolActivate);\n    toolMgr.unregisterTool(createUid, this.mapSelectToolActivate);\n\n    toolMgr.unregisterTool(otherUid, this.createToolActivate);\n    toolMgr.unregisterTool(otherUid, this.modifyToolActivate);\n    toolMgr.unregisterTool(otherUid, this.translateToolActivate);\n    toolMgr.unregisterTool(otherUid, this.rotateToolActivate);\n\n    this.createActive = false;\n    this.cancel();\n  }\n\n  this.modify_.setActive(active);\n  this.mapSelectActive = active;\n  this.editableTreeCtrl.properties['editing'] = active;\n\n};\n\n\n/**\n * Called when the mapSelectActive property changes.\n * @param {boolean} active Whether the map select is active or not.\n * @private\n */\nexports.Controller_.prototype.handleMapSelectActiveChange_ = function(\n  active) {\n\n  const mapDiv = this.map.getViewport();\n  googAsserts.assertElement(mapDiv);\n\n  if (active) {\n    olEvents.listen(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.listen(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n  } else {\n    olEvents.unlisten(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.unlisten(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n  }\n};\n\n\n/**\n * Called when the map is clicked.\n *\n * (1) If a vector feature was clicked, don't do anything (i.e. allow the\n *     interactions to do their bidings without selecting a new feature).\n *\n * (2) Otherwise, if there is a feature being edited and has unsaved\n *     modifications, show the confirmation modal asking the user what to do\n *     about it.\n *\n * (3) If there's no feature selected or we have one without unsaved\n *     modifications or with modifications that were canceled, launch a query\n *     to fetch the features at the clicked location.\n *\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapClick_ = function(evt) {\n  const coordinate = evt.coordinate;\n  const pixel = evt.pixel;\n\n  // (1) Check if we clicked on an existing vector feature, i.e the one\n  //     selected. In that case, no need to do any further action.\n  const feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 5\n    }\n  );\n\n  if (feature) {\n    return;\n  }\n\n  // (2) If a feature is being edited and has unsaved changes, show modal\n  //     to let the user decide what to do\n  this.checkForModifications_(true).then(() => {\n\n    const map = this.map;\n    const view = map.getView();\n    const resolution = view.getResolution();\n    const buffer = resolution * this.tolerance;\n    const extent = olExtent.buffer(\n      [coordinate[0], coordinate[1], coordinate[0], coordinate[1]],\n      buffer\n    );\n\n    // (3) Launch query to fetch features\n    this.gmfEditFeature_.getFeaturesInExtent(\n      [this.editableNode_.id],\n      extent\n    ).then(this.handleGetFeatures_.bind(this));\n\n    // (4) Clear any previously selected feature\n    this.cancel();\n\n    // (5) Pending\n    this.pending = true;\n  });\n};\n\n\n/**\n * @param {Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(evt) {\n  const pixel = this.map.getEventPixel(evt);\n  const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 7\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // show contextual menu when clicking on certain types of features\n  if (feature) {\n    const type = this.ngeoFeatureHelper_.getType(feature);\n    if (type === ngeoGeometryType.POLYGON || type === ngeoGeometryType.MULTI_POLYGON ||\n        type === ngeoGeometryType.LINE_STRING || type === ngeoGeometryType.MULTI_LINE_STRING) {\n      this.menu_.open(coordinate);\n    }\n    evt.preventDefault();\n    evt.stopPropagation();\n  }\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @private\n */\nexports.Controller_.prototype.handleGetFeatures_ = function(features) {\n  this.pending = false;\n\n  this.timeout_(() => {\n    if (features.length) {\n      const feature = features[0];\n      this.feature = feature;\n      this.features.push(feature);\n    }\n  }, 0);\n};\n\n\n/**\n * Initialize interactions by setting them inactive and decorating them\n * @private\n */\nexports.Controller_.prototype.initializeInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    interaction.setActive(false);\n    ngeoMiscDecorate.interaction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by adding them to the map\n * @private\n */\nexports.Controller_.prototype.registerInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.addInteraction(interaction);\n  });\n};\n\n\n/**\n * Unregister interactions, i.e. set them inactive and remove them from the map\n * @private\n */\nexports.Controller_.prototype.unregisterInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.removeInteraction(interaction);\n  });\n};\n\n\n/**\n * @param {?ol.Feature} newFeature The new feature.\n * @param {?ol.Feature} oldFeature The old feature.\n * @private\n */\nexports.Controller_.prototype.handleFeatureChange_ = function(\n  newFeature, oldFeature\n) {\n\n  let geom;\n  if (oldFeature) {\n    olEvents.unlisten(oldFeature, 'propertychange', this.handleFeaturePropertyChange_, this);\n    geom = oldFeature.getGeometry();\n    googAsserts.assert(geom);\n    olEvents.unlisten(\n      geom,\n      'change',\n      this.handleFeatureGeometryChange_,\n      this\n    );\n    this.unregisterInteractions_();\n  }\n\n  if (newFeature) {\n    this.featureId = newFeature.getId();\n    olEvents.listen(newFeature, 'propertychange', this.handleFeaturePropertyChange_, this);\n    geom = newFeature.getGeometry();\n    googAsserts.assert(geom);\n    olEvents.listen(\n      geom,\n      'change',\n      this.handleFeatureGeometryChange_,\n      this\n    );\n    this.registerInteractions_();\n\n    this.gmfSnapping_.ensureSnapInteractionsOnTop();\n\n    // The `ui-date` triggers an unwanted change, i.e. it converts the text\n    // to Date, which makes the directive dirty when it shouldn't... to\n    // bypass this, we reset the dirty state here. We do so only if we're\n    // editing an existing feature\n    if (this.featureId) {\n      this.timeout_(() => {\n        this.dirty = false;\n        this.scope_.$apply();\n      }, 0);\n    }\n  } else {\n    this.featureId = undefined;\n  }\n\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeaturePropertyChange_ = function() {\n  this.dirty = true;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeatureGeometryChange_ = function() {\n  this.dirty = true;\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {ngeox.MenuEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuActionClick_ = function(evt) {\n  const action = evt.detail.action;\n\n  switch (action) {\n    case 'move':\n      this.translate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    case 'rotate':\n      this.rotate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * @param {ol.interaction.Translate.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleTranslateEnd_ = function(evt) {\n  this.translate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.RotateEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleRotateEnd_ = function(evt) {\n  this.rotate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.features.clear();\n  this.handleFeatureChange_(null, this.feature);\n  this.feature = null;\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.toggle_(false);\n  this.handleMapSelectActiveChange_(false);\n  this.unregisterInteractions_();\n};\n\n\nexports.controller('GmfEditfeatureController',\n  exports.Controller_);\n\n\n/**\n * The different possible values of the `state` inner property.\n * @enum {string}\n */\nexports.State = {\n  /**\n   * The default state. While idle, nothing happens.\n   * @type {string}\n   */\n  IDLE: 'idle',\n  /**\n   * The state active after the deactivation of the editing tools and the\n   * unsaved modifications were saved or discarded.\n   * @type {string}\n   */\n  DEACTIVATE_EXECUTE: 'deactivate_execute',\n  /**\n   * The state active when the deactivation of the editing tools is in\n   * progress while there are unsaved modifications.\n   * @type {string}\n   */\n  DEACTIVATE_PENDING: 'deactivate_pending',\n  /**\n   * Final state set after the \"stop editing\" button has been clicked while\n   * no unsaved modifications were made or if the user saved them or confirmed\n   * to continue without saving.\n   * @type {string}\n   */\n  STOP_EDITING_EXECUTE: 'stop_editing_execute',\n  /**\n   * The state that is active while when the \"stop editing\" button has been\n   * clicked but before any confirmation has been made to continue.\n   * @type {string}\n   */\n  STOP_EDITING_PENDING: 'stop_editing_pending'\n};\n\n\nexport default exports;\n","/**\n * @module gmf.theme.Manager\n */\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.DataSource\n */\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Select\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A select rule, which allows the selection of multiple values among a list\n   * of choices.\n   *\n   * The expression property holds the list of selected choices, which is\n   * comma-separated.\n   *\n   * @struct\n   * @param {!ngeox.rule.SelectOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = ngeoRuleRule.OperatorType.EQUAL_TO;\n    options.type = ngeoFormatAttributeType.SELECT;\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.choices_ = options.choices;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {Array.<string>} Choices\n   * @export\n   */\n  get choices() {\n    return this.choices_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {Array.<string>} Selected choices\n   * @export\n   */\n  get selectedChoices() {\n    let selectedChoices;\n    if (this.expression) {\n      const stringExpression = String(this.expression);\n      selectedChoices = stringExpression.split(',');\n    } else {\n      selectedChoices = [];\n    }\n    return selectedChoices;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.debounce\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.ToolActivateMgr\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * Provides a service to manage the activation of `ngeo.misc.ToolActivate` objects.\n *\n * Example:\n *\n * Each tool must be registered before using it.\n *\n *     let tool = new ngeo.misc.ToolActivate(interaction, 'active');\n *     ngeoToolActivateMgr.registerTool('mapTools', tool);\n *\n * A tool will be registered in a group identified by a group name.\n * Once registered a tool can be activated and deactivated. When activating a\n * tool, all others tools in the same group will be deactivated.\n *\n *     ngeoToolActivateMgr.activateTool(tool);\n *     ngeoToolActivateMgr.deactivateTool(tool);\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoToolActivateMgr\n * @ngInject\n */\nconst exports = function($rootScope) {\n\n  /**\n   * @type {!Object.<string, Array.<ngeox.miscToolActivateMgrEntry>>}\n   * @private\n   */\n  this.groups_ = {};\n\n  /**\n   * The scope.\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $rootScope;\n};\n\n\n/**\n * Register a tool.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to register.\n * @param {boolean=} opt_defaultActivate If true, this tool will be activated\n *     when all other tools in the group are deactivated.\n * @export\n */\nexports.prototype.registerTool = function(groupName, tool,\n  opt_defaultActivate) {\n  let entries = this.groups_[groupName];\n  if (!entries) {\n    entries = this.groups_[groupName] = [];\n  }\n\n  const unlisten = this.scope_.$watch(\n    tool.getActive,\n    (newVal, oldVal) => {\n      if (newVal === oldVal) {\n        return;\n      }\n      if (newVal) {\n        this.deactivateTools_(groupName, tool);\n      } else {\n        this.activateDefault_(groupName);\n      }\n    });\n\n  entries.push({\n    tool: tool,\n    defaultTool: opt_defaultActivate || false,\n    unlisten: unlisten\n  });\n\n  if (googAsserts.ENABLE_ASSERTS) {\n    // check that only one default tool per group exists\n    let defaultTools = 0;\n    entries.forEach((entry) => {\n      if (entry.defaultTool) {\n        defaultTools++;\n      }\n    });\n    googAsserts.assert(\n      defaultTools <= 1, `more than one default tool in group ${groupName}`);\n  }\n};\n\n\n/**\n * Unregister a tool from a group.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to unregister.\n * @export\n */\nexports.prototype.unregisterTool = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      if (entries[i].tool == tool) {\n        entries[i].unlisten();\n        entries.splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * Unregister each tool from a group.\n * @param {string} groupName Name of the group of tools to unregister.\n * @export\n */\nexports.prototype.unregisterGroup = function(groupName) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      entries[i].unlisten();\n    }\n    delete this.groups_[groupName];\n  }\n};\n\n\n/**\n * Activate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @export\n */\nexports.prototype.activateTool = function(tool) {\n  tool.setActive(true);\n};\n\n\n/**\n * Deactivate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to deactivate.\n * @export\n */\nexports.prototype.deactivateTool = function(tool) {\n  tool.setActive(false);\n};\n\n\n/**\n * Deactivate all tools except the given one.\n *\n * @param {string} groupName Name of the group.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @private\n */\nexports.prototype.deactivateTools_ = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  for (let i = 0; i < entries.length; i++) {\n    if (tool != entries[i].tool) {\n      entries[i].tool.setActive(false);\n    }\n  }\n};\n\n\n/**\n * Activate the default tool in the given group if no other tool is active.\n *\n * @param {string} groupName Name of the group.\n * @private\n */\nexports.prototype.activateDefault_ = function(groupName) {\n  const entries = this.groups_[groupName];\n  let defaultTool = null;\n  let hasActiveTool = false;\n\n  for (let i = 0; i < entries.length; i++) {\n    hasActiveTool = hasActiveTool || entries[i].tool.getActive();\n\n    if (entries[i].defaultTool) {\n      defaultTool = entries[i].tool;\n    }\n  }\n\n  if (!hasActiveTool && defaultTool !== null) {\n    defaultTool.setActive(true);\n  }\n};\n\n\nexports.module = angular.module('ngeoToolActivateMgr', []);\nexports.module.service('ngeoToolActivateMgr', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.btnComponent\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Attributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach((expressionFn, i) => {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  });\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Attributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.common\n */\nconst exports = {};\nimport {createEditingStyle} from 'ol/style/Style.js';\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultDrawStyleFunction = function() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultModifyStyleFunction = function() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[/**@type {ol.geom.GeometryType} */ ('Point')];\n  };\n};\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.Service\n */\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\n\n/**\n * An \"authentication\" service for a GeoMapFish application. Upon loading, it\n * launches a request to determine whether a user is currently logged in or\n * not.\n *\n * The possible API requests it supports, which are all self-explanatory, are:\n *\n * - changePassword\n * - login\n * - logout\n * - resetPassword\n *\n * @extends {ol.events.EventTarget}\n */\nconst exports = class extends olEventsEventTarget {\n\n  /**\n   * @param {angular.$http} $http Angular http service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angular.Scope} $rootScope The directive's scope.\n   * @param {string} authenticationBaseUrl URL to \"authentication\" web service.\n   * @param {gmfx.User} gmfUser User.\n   * @ngInject\n   */\n  constructor($http, $injector, $rootScope, authenticationBaseUrl, gmfUser) {\n\n    super();\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.$http_ = $http;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$rootScope_ = $rootScope;\n\n    /**\n     * The authentication url without trailing slash\n     * @type {string}\n     * @private\n     */\n    this.baseUrl_ = authenticationBaseUrl.replace(/\\/$/, '');\n\n    /**\n     * @type {gmfx.User}\n     * @private\n     */\n    this.user_ = gmfUser;\n\n    /**\n      * Don't request a new user object from the back-end after\n      * logging out if the logged-in user's role has this role.\n      * @type {?string}\n      * @private\n      */\n    this.noReloadRole_ =  $injector.has('gmfAuthenticationNoReloadRole')\n      ? $injector.get('gmfAuthenticationNoReloadRole')\n      : null;\n\n    this.load_();\n  }\n\n  /**\n   * Load the authentication service, which sends an asynch request to\n   * determine whether the user is currently connected or not.\n   * @private\n   */\n  load_() {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.IS_LOGGED_IN}`;\n    this.$http_.get(url, {withCredentials: true}).then(\n      this.handleLogin_.bind(this, true)\n    );\n  }\n\n  /**\n   * @param {string} oldPwd Old password.\n   * @param {string} newPwd New password.\n   * @param {string} confPwd New password confirmation.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  changePassword(oldPwd, newPwd, confPwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.CHANGE_PASSWORD}`;\n\n    return this.$http_.post(url, $.param({\n      'oldPassword': oldPwd,\n      'newPassword': newPwd,\n      'confirmNewPassword': confPwd\n    }), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    }).then(((response) => {\n      this.user_.is_password_changed = true;\n      this.$rootScope_.$digest();\n    }).bind(this));\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @param {string} pwd Password.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  login(login, pwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGIN}`;\n\n    return this.$http_.post(url, $.param({'login': login, 'password': pwd}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    }).then(\n      this.handleLogin_.bind(this, false));\n  }\n\n  /**\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  logout() {\n    const noReload = this.user_['role_name'] === this.noReloadRole_;\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGOUT}`;\n    return this.$http_.get(url, {withCredentials: true}).then(() => {\n      this.resetUser_(noReload);\n    });\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  resetPassword(login) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.RESET_PASSWORD}`;\n\n    /**\n     * @param {angular.$http.Response} resp Ajax response.\n     * @return {gmfx.AuthenticationDefaultResponse} Response.\n     */\n    const successFn = function(resp) {\n      const respData = /** @type gmfx.AuthenticationDefaultResponse} */ (\n        resp.data);\n      return respData;\n    }.bind(this);\n\n    return this.$http_.post(url, $.param({'login': login}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n    }).then(successFn);\n  }\n\n  /**\n   * @return {?gmfx.AuthenticationFunctionalities} The role functionalities.\n   */\n  getFunctionalities() {\n    return this.user_.functionalities;\n  }\n\n  /**\n   * @return {number|null} The role ID.\n   */\n  getRoleId() {\n    return this.user_.role_id;\n  }\n\n  /**\n   * @param {boolean} checkingLoginStatus Checking the login status?\n   * @param {angular.$http.Response} resp Ajax response.\n   * @return {angular.$http.Response} Response.\n   * @private\n   */\n  handleLogin_(checkingLoginStatus, resp) {\n    const respData = /** @type {gmfx.AuthenticationLoginResponse} */ (resp.data);\n    this.setUser_(respData, !checkingLoginStatus);\n    if (checkingLoginStatus) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('ready', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n    return resp;\n  }\n\n  /**\n   * @param {gmfx.AuthenticationLoginResponse} respData Response.\n   * @param {boolean} emitEvent Emit a login event?\n   * @private\n   */\n  setUser_(respData, emitEvent) {\n    for (const key in respData) {\n      this.user_[key] = respData[key];\n    }\n    if (emitEvent && respData.username !== undefined) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('login', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @private\n   * @param {boolean} noReload Don't request a new user object from\n   * the back-end after logging out, defaults to false.\n   */\n  resetUser_(noReload) {\n    noReload = noReload || false;\n    for (const key in this.user_) {\n      this.user_[key] = null;\n    }\n    /** @type {gmfx.AuthenticationEvent} */\n    const event = new ngeoCustomEvent('logout', {user: this.user_});\n    this.dispatchEvent(event);\n    if (!noReload) {\n      this.load_();\n    }\n  }\n};\n\n/**\n * @enum {string}\n */\nexports.RouteSuffix = {\n  CHANGE_PASSWORD: 'loginchange',\n  IS_LOGGED_IN: 'loginuser',\n  LOGIN: 'login',\n  LOGOUT: 'logout',\n  RESET_PASSWORD: 'loginresetpassword'\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfAuthenticationService', []);\nexports.module.service('gmfAuthenticationService', exports);\n\nexports.module.value('gmfUser', {\n  'functionalities': null,\n  'is_password_changed': null,\n  'role_id': null,\n  'role_name': null,\n  'username': null\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.Time\n */\n/**\n * ngeo - Time service\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoTime\n */\nconst exports = function() {};\n\n/**\n * @param {number|string|null} value The value\n * @param {Date} defaultValue The default value\n * @return {Date} the date\n */\nexports.prototype.createDate = function(value, defaultValue = null) {\n  return value !== null ? new Date(value) : defaultValue;\n};\n\n/**\n * @param {Date} date The date\n * @param {number|null=} defaultValue The default value\n * @return {number|null} the time\n */\nexports.prototype.getTime = function(date, defaultValue = null) {\n  return date ? date.getTime() : defaultValue;\n};\n\n/**\n * Get options regarding the time property of a node;\n *\n * @param {ngeox.TimeProperty} time the time property of a node\n * @return {{\n *  minDate : number,\n *  maxDate : number,\n *  values : (Array<number>|number)\n * }} - Configuration for the UI components\n * @export\n */\nexports.prototype.getOptions = function(time) {\n\n  const minDate = this.createDate(time.minValue);\n  const maxDate = this.createDate(time.maxValue);\n\n  const minDefaultDate = this.createDate(time.minDefValue, minDate);\n  const maxDefaultDate = this.createDate(time.maxDefValue, maxDate);\n\n  const defaultValues = (time.mode === 'range') ?\n    [this.getTime(minDefaultDate), this.getTime(maxDefaultDate)] :\n    this.getTime(minDefaultDate);\n\n  return {\n    minDate: this.getTime(minDate),\n    maxDate: this.getTime(maxDate),\n    values: defaultValues\n  };\n};\n\n\n/**\n * Time.prototype.getUTCDate - Get UTC date from a local date object\n *\n * @param  {Object} localDate loacl date object in\n * @return {Object} UTC date\n * @export\n */\nexports.prototype.getUTCDate = function(localDate) {\n  return new Date(\n    localDate.getUTCFullYear(),\n    localDate.getUTCMonth(),\n    localDate.getUTCDate());\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoTime', []);\nexports.module.service('ngeoTime', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.DrawAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionPointer, {handleEvent as pointerHandleEvent} from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultDrawStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return pointerHandleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  /** @type {ngeox.DrawEvent} */\n  const evt = new ngeoCustomEvent('drawstart', {feature: this.sketchFeature_});\n  this.dispatchEvent(evt);\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  /** @type {ngeox.DrawEvent} */\n  const event = new ngeoCustomEvent('drawend', {feature: this.sketchFeature_});\n  this.dispatchEvent(event);\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olProjProjection from 'ol/proj/Projection.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ngeox.MeasureEvent\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, options = /** @type {ngeox.interaction.MeasureOptions} */({})) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), olProjProjection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.message.popupComponent\n */\n\nimport 'angular-sanitize';\n\n\nconst exports = angular.module('ngeoPopup', [\n  'ngSanitize',\n]);\n\n\nexports.value('ngeoPopupTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoPopupTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/message/popupcomponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/message/popupcomponent', require('./popupcomponent.html'));\n});\n\n\n/**\n * Provides a directive used to show a popup over the page with\n * a title and content.\n *\n *\n * Things to know about this directive:\n *\n * - This directive is intended to be used along with the popup service.\n *\n * - By default the directive uses \"popup.html\" as its templateUrl. This can be\n *   changed by redefining the \"ngeoPopupTemplateUrl\" value.\n *\n * - The directive doesn't create any scope but relies on its parent scope.\n *   Properties like 'content', 'title' or 'open' come from the parent scope.\n *\n * @private\n * @param {string} ngeoPopupTemplateUrl URL to popup template.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoPopup\n */\nexports.directive_ = function(ngeoPopupTemplateUrl) {\n  return {\n    restrict: 'A',\n    templateUrl: ngeoPopupTemplateUrl,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      element.addClass('popover');\n\n      /**\n       * @param {jQuery.Event} evt Event.\n       */\n      scope.close = function(evt) {\n        if (evt) {\n          evt.stopPropagation();\n          evt.preventDefault();\n        }\n        element.addClass('hidden');\n      };\n\n      // Watch the open property\n      scope.$watch('open', (newVal, oldVal) => {\n        element.css('display', newVal ? 'block' : 'none');\n      });\n    }\n  };\n};\n\nexports.directive('ngeoPopup', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Popup\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * This goog.require is needed because of 'ngeo-popup' used in\n * the template.\n * @suppress {extraRequire}\n */\nimport ngeoMessagePopupComponent from 'ngeo/message/popupComponent.js';\n\n/**\n * Provides a factory to create a popup in the page.\n * The factory returns a ngeo.message.Popup object.\n *\n * Example:\n *\n *     let popup = ngeoCreatePopup();\n *     popup.setTitle(\"A title\");\n *     popup.setContent(\"Some content\");\n *     popup.setOpen(true);\n *\n * @constructor\n * @struct\n * @param {angular.$compile} $compile The compile provider.\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoCreatePopup\n */\nconst exports = function($compile, $rootScope, $sce, $timeout) {\n\n  /**\n   * The scope the compiled element is link to.\n   * @type {angular.Scope}\n   * @export\n   */\n  this.scope = $rootScope.$new(true);\n\n  // manage the auto destruction of the popup\n  this.scope.$watch(\n    () => this.scope['open'],\n    (open) => {\n      if (!open && this.autoDestroy_) {\n        this.timeout_(() => {\n          this.destroy();\n        });\n      }\n    }\n  );\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * The element.\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = angular.element('<div ngeo-popup></div>');\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoDestroy_ = false;\n\n\n  // Compile the element, link it to the scope and add it to the document.\n  $compile(this.element_)(this.scope);\n  angular.element(document.body).append(this.element_);\n};\n\n\n/**\n * Get the current popup state.\n * @return {boolean} `true` if the popup is currently, otherwise `false`.\n * @export\n */\nexports.prototype.getOpen = function() {\n  return this.scope['open'];\n};\n\n\n/**\n * Show/hide the popup.\n * @param {boolean} open `true` to show the popup, `false` to hide it.\n * @export\n */\nexports.prototype.setOpen = function(open) {\n  this.scope['open'] = open;\n};\n\n\n/**\n * Destroy the popup.\n * @export\n */\nexports.prototype.destroy = function() {\n  this.scope.$destroy();\n  this.element_.remove();\n};\n\n\n/**\n * Set the popup's title.\n * @param {string} title The title.\n * @export\n */\nexports.prototype.setTitle = function(title) {\n  const trustedTitle = this.sce_.trustAsHtml(title);\n  this.scope['title'] = trustedTitle;\n};\n\n\n/**\n * Set the popup's content.\n * Note: the type of the `content` param is `*` instead of `string`, this\n * is because the content may be trusted using `$sce.trustAsHtml`.\n * @param {*} content The content.\n * @param {boolean=} opt_trusted Whether the content can be trusted.\n *     Default is false.\n * @export\n */\nexports.prototype.setContent = function(content, opt_trusted) {\n  this.scope['content'] = opt_trusted ? this.sce_.trustAsHtml(/** @type {string} */ (content)) : content;\n};\n\n\n/**\n * Set the popup's content with an iframe using the given url.\n * @param {string} url The url of the page.\n * @export\n */\nexports.prototype.setUrl = function(url) {\n  const content = this.sce_.trustAsHtml(\n    `<iframe src=\"${url}\" width=\"100%\" height=\"100%\"></iframe>`\n  );\n  this.setContent(content);\n};\n\n\n/**\n * Set the popup's width.\n * @param {string} width Width the popup should have.\n * @export\n */\nexports.prototype.setWidth = function(width) {\n  this.element_.width(width);\n};\n\n\n/**\n * Set the popup's height.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setHeight = function(height) {\n  this.element_.height(height);\n};\n\n\n/**\n * Set the popup's width and height.\n * @param {string} width Width the popup should have.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setSize = function(width, height) {\n  this.setWidth(width);\n  this.setHeight(height);\n};\n\n\n/**\n * Set the popup's autoDestroy property.\n * @param {boolean} autoDestroy Whether to automatically destroy the popup when\n *     being closed or not.\n * @export\n */\nexports.prototype.setAutoDestroy = function(autoDestroy) {\n  this.autoDestroy_ = autoDestroy;\n};\n\n\n/**\n * Add an extra CSS class name to the popup.\n * @param {string} cls Class name to add to the popup element.\n * @export\n */\nexports.prototype.addClass = function(cls) {\n  this.element_.addClass(cls);\n};\n\n\n/**\n * Open a popup with the given properties.\n * @param {ngeox.PopupOptions} options Options.\n * @export\n */\nexports.prototype.open = function(options) {\n\n  if (options.url) {\n    this.setUrl(options.url);\n  } else if (options.content) {\n    this.setContent(options.content);\n  } else {\n    googAsserts.fail('ngeo.message.Popup options requirest \"url\" or \"content\".');\n  }\n\n  if (options.autoDestroy !== undefined) {\n    this.setAutoDestroy(options.autoDestroy);\n  }\n\n  if (options.cls !== undefined) {\n    this.addClass(options.cls);\n  }\n\n  if (options.height !== undefined) {\n    this.setHeight(options.height);\n  }\n\n  if (options.title !== undefined) {\n    this.setTitle(options.title);\n  }\n\n  if (options.width !== undefined) {\n    this.setWidth(options.width);\n  }\n\n  this.setOpen(true);\n};\n\n\n/**\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.Scope} $rootScope Angular rootScope service.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.PopupFactory} The function to create a popup.\n * @ngInject\n */\nexports.Factory = function($compile, $rootScope, $sce, $timeout) {\n  return (\n    /**\n     * @return {!ngeo.message.Popup} The popup instance.\n     */\n    function() {\n      return new exports($compile, $rootScope, $sce, $timeout);\n    }\n  );\n};\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoCreatePopup', [\n  ngeoMessagePopupComponent.name,\n]);\nexports.module.factory('ngeoCreatePopup', exports.Factory);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach((feature) => {\n      this.addFeature(feature);\n    });\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.XSDAttribute\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttribute from 'ngeo/format/Attribute.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\n\n/**\n * @classdesc\n * Reads attributes that are defined in XSD format and return them as a list.\n *\n * @constructor\n * @struct\n * @extends {ol.format.XML}\n */\nconst exports = function() {\n  olFormatXML.call(this);\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Array.<ngeox.Attribute>} The parsed result.\n * @override\n */\nexports.prototype.read = function(source) {\n  return (\n    /** @type {Array.<ngeox.Attribute>} */ olFormatXML.prototype.read.call(this, source)\n  );\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromDocument = function(doc) {\n  googAsserts.assert(doc.nodeType == Node.DOCUMENT_NODE,\n    'doc.nodeType should be DOCUMENT');\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromNode = function(node) {\n  googAsserts.assert(node.nodeType == Node.ELEMENT_NODE,\n    'node.nodeType should be ELEMENT');\n  googAsserts.assert(node.localName == 'schema',\n    'localName should be schema');\n\n  let elements = node.getElementsByTagName('element');\n  if (!elements.length) {\n    elements = node.getElementsByTagName('xsd:element');\n  }\n  const attributes = [];\n\n  let attribute;\n  for (let i = 0, ii = elements.length; i < ii; i++) {\n    attribute = this.readFromElementNode_(elements[i]);\n    if (attribute) {\n      attributes.push(attribute);\n    }\n  }\n\n  return attributes;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {?ngeox.Attribute} An attribute object.\n * @private\n */\nexports.prototype.readFromElementNode_ = function(node) {\n\n  const name = node.getAttribute('name');\n  googAsserts.assertString(name, 'name should be defined in element node.');\n\n  const alias = node.getAttribute('alias');\n  const nillable = node.getAttribute('nillable');\n  const required = !(nillable === true || nillable === 'true');\n\n  const attribute = {\n    name,\n    alias,\n    required\n  };\n\n  const type = node.getAttribute('type');\n  if (type) {\n    if (!ngeoFormatAttribute.setGeometryType(attribute, type)) {\n      this.setAttributeByXsdType_(attribute, type);\n    }\n  } else {\n\n    // Attribute has no type defined on 'element' node.  Try:\n\n    // (1) Enumerations\n    let enumerations = node.getElementsByTagName('enumeration');\n    if (!enumerations.length) {\n      enumerations = node.getElementsByTagName('xsd:enumeration');\n    }\n    if (enumerations.length) {\n      attribute.type = ngeoFormatAttributeType.SELECT;\n      const choices = [];\n      for (let i = 0, ii = enumerations.length; i < ii; i++) {\n        choices.push(enumerations[i].getAttribute('value'));\n      }\n      attribute.choices = choices;\n    } else {\n      // (2) Other types with restrictions\n      let restrictions = node.getElementsByTagName('restriction');\n      if (!restrictions.length) {\n        restrictions = node.getElementsByTagName('xsd:restriction');\n      }\n      if (restrictions.length && restrictions[0]) {\n        const restrictionNode = restrictions[0];\n        this.setAttributeByXsdType_(\n          attribute,\n          restrictionNode.getAttribute('base')\n        );\n        // MaxLength\n        let maxLengths = node.getElementsByTagName('maxLength');\n        if (!maxLengths.length) {\n          maxLengths = node.getElementsByTagName('xsd:maxLength');\n        }\n        if (maxLengths.length && maxLengths[0]) {\n          attribute.maxLength = Number(maxLengths[0].getAttribute('value'));\n        }\n      }\n    }\n  }\n\n  if (!attribute.type) {\n    return null;\n  }\n\n  googAsserts.assert(attribute.type);\n\n  return attribute;\n};\n\n\n/**\n * Set the `type` and `numType` properties of an attribute depending on the\n * given xsdType.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type The xsd type.\n * @private\n */\nexports.prototype.setAttributeByXsdType_ = function(\n  attribute, type\n) {\n  if (type === 'xsd:boolean') {\n    attribute.type = ngeoFormatAttributeType.BOOLEAN;\n  } else if (type === 'xsd:date') {\n    attribute.type = ngeoFormatAttributeType.DATE;\n  } else if (type === 'xsd:dateTime') {\n    attribute.type = ngeoFormatAttributeType.DATETIME;\n  } else if (type === 'xsd:time') {\n    attribute.type = ngeoFormatAttributeType.TIME;\n  } else if (type === 'xsd:decimal' || type === 'xsd:double') {\n    attribute.type = ngeoFormatAttributeType.NUMBER;\n    attribute.numType = exports.NumberType.FLOAT;\n  } else if (type === 'xsd:integer') {\n    attribute.type = ngeoFormatAttributeType.NUMBER;\n    attribute.numType = exports.NumberType.INTEGER;\n  } else if (type === 'xsd:string') {\n    attribute.type = ngeoFormatAttributeType.TEXT;\n  }\n};\n\n\n/**\n * Returns the first geometry attribute among a given list of attributes.\n * @param {Array.<ngeox.Attribute>} attributes The list of attributes.\n * @return {?ngeox.Attribute} A geometry attribute object.\n */\nexports.getGeometryAttribute = function(attributes) {\n  let geomAttribute = null;\n  for (let i = 0, ii = attributes.length; i < ii; i++) {\n    if (attributes[i].type === ngeoFormatAttributeType.GEOMETRY) {\n      geomAttribute = attributes[i];\n      break;\n    }\n  }\n  return geomAttribute;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.NumberType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  FLOAT: 'float',\n  /**\n   * @type {string}\n   * @export\n   */\n  INTEGER: 'integer'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.WFSAttribute\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttribute from 'ngeo/format/Attribute.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\n\nconst exports = class {\n\n\n  /**\n   * A format that reads the complexType from a WFS DescribeFeatureType\n   * response for a single set of attributes and return an array of\n   * `ngeox.Attribute`.\n   */\n\n\n  /**\n   * @param {Array.<Object>} complexTypeElements Complex type element\n   * @return {Array.<ngeox.Attribute>} Attributes\n   */\n  read(complexTypeElements) {\n    return complexTypeElements.map(this.readFromComplexTypeElement_);\n  }\n\n\n  /**\n   * @param {Object} object Complex type element\n   * @return {ngeox.Attribute} Attribute\n   * @private\n   */\n  readFromComplexTypeElement_(object) {\n\n    const name = googAsserts.assertString(object['name']);\n    const alias = 'alias' in object ?\n      googAsserts.assertString(object['alias']) : null;\n    const required = object['minOccurs'] != '0';\n\n    const attribute = {\n      name,\n      alias,\n      required\n    };\n\n    const type = googAsserts.assertString(object['type']);\n\n    if (!ngeoFormatAttribute.setGeometryType(attribute, type)) {\n      if (type === 'gml:TimeInstantType' || type === 'dateTime') {\n        attribute.type = ngeoFormatAttributeType.DATETIME;\n      } else if (type === 'date') {\n        attribute.type = ngeoFormatAttributeType.DATE;\n      } else if (type === 'time') {\n        attribute.type = ngeoFormatAttributeType.TIME;\n      } else if (type === 'decimal' || type === 'double') {\n        attribute.type = ngeoFormatAttributeType.NUMBER;\n        attribute.numType = ngeoFormatXSDAttribute.NumberType.FLOAT;\n      } else if (type === 'integer' || type === 'long') {\n        attribute.type = ngeoFormatAttributeType.NUMBER;\n        attribute.numType = ngeoFormatXSDAttribute.NumberType.INTEGER;\n      } else if (type === 'boolean') {\n        attribute.type = ngeoFormatAttributeType.BOOLEAN;\n      } else {\n        attribute.type = ngeoFormatAttributeType.TEXT;\n      }\n    }\n\n    return attribute;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.Helper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoFormatWFSAttribute from 'ngeo/format/WFSAttribute.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport * as olEvents from 'ol/events.js';\n\nconst exports = class {\n  /**\n   * A service that provides utility methods to manipulate or get data sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data source\n   *     service.\n   * @param {ngeo.query.Querent} ngeoQuerent Ngeo querent service.\n   * @ngdoc service\n   * @ngname ngeoDataSourcesHelper\n   * @ngInject\n   */\n  constructor($q, ngeoDataSources, ngeoQuerent) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Object.<number, ngeo.datasource.DataSource>}\n     * @private\n     */\n    this.cache_ = {};\n\n    // Events\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n    olEvents.listen(this.collection_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n  /**\n   * @return {ngeox.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?ngeo.datasource.DataSource} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return this.cache_[id] || null;\n  }\n\n  /**\n   * Get the attributes of a data source. If they are not set, they are obtained\n   * from the querent service using a WFS DescribeFeatureType request, then set\n   * in the data source.\n   *\n   * Please, note that in order to be dynamically set, the data source must\n   * only have 1 ogcLayer set and be queryable.\n   *\n   * @param {ngeo.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  getDataSourceAttributes(dataSource) {\n\n    const wfsDescribeFeatureTypeDefer = this.q_.defer();\n\n    if (dataSource.attributes) {\n      wfsDescribeFeatureTypeDefer.resolve(dataSource.attributes);\n    } else {\n      this.ngeoQuerent_.wfsDescribeFeatureType(\n        dataSource\n      ).then((featureType) => {\n        // We know, at this point, that there's only one definition that\n        // was returned.  Just to be sure, let's do a bunch of assertions.\n        const ogcLayerName = dataSource.getOGCLayerNames()[0];\n        googAsserts.assertString(\n          ogcLayerName, 'The data source should have only one ogcLayer.');\n        const element = featureType.element[0];\n        googAsserts.assert(element.name === ogcLayerName);\n        googAsserts.assert(\n          featureType.complexType[0].name === element.type);\n\n        const complexContent = featureType['complexType'][0]['complexContent'];\n        const attributes = new ngeoFormatWFSAttribute().read(complexContent);\n\n        // Set the attributes in the data source\n        dataSource.setAttributes(attributes);\n\n        wfsDescribeFeatureTypeDefer.resolve(attributes);\n      });\n    }\n\n    return wfsDescribeFeatureTypeDefer.promise;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. Add it\n   * to the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = googAsserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    this.cache_[dataSource.id] = dataSource;\n  }\n\n  /**\n   * Called when a data source is removed from the ngeo collection. Remove it\n   * from the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = googAsserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    delete this.cache_[dataSource.id];\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSourcesHelper', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoDataSourcesHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.WFSDescribeFeatureType\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\nimport * as olXml from 'ol/xml.js';\n\n/**\n * @classdesc\n * Format for reading WFS DescribeFeatureType data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst exports = function() {\n\n  olFormatXML.call(this);\n\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * Read a WFS DescribeFeatureType document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WFS DescribeFeatureType.\n * @api\n */\nexports.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromNode = function(node) {\n  let result = {};\n  result = olXml.pushParseAndPop(\n    result,\n    exports.PARSERS_,\n    node,\n    []\n  );\n  return result;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Attributes.\n */\nexports.readElement_ = function(node, objectStack) {\n  const attributes = {};\n  for (let i = 0, len = node.attributes.length; i < len; i++) {\n    const attribute = node.attributes.item(i);\n    attributes[attribute.name] = attribute.value;\n  }\n  if (objectStack.length === 1) {\n    // remove namespace from type\n    attributes['type'] = attributes['type'].split(':').pop();\n  }\n  return attributes;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexType_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const object = olXml.pushParseAndPop(\n    {'name': name},\n    exports.COMPLEX_TYPE_PARSERS_,\n    node, objectStack\n  );\n  // flatten\n  object['complexContent'] =\n    object['complexContent']['extension']['sequence']['element'];\n  return object;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexContent_ = function(\n  node, objectStack\n) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.COMPLEX_CONTENT_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readExtension_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.EXTENSION_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readSequence_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.SEQUENCE_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nexports.NAMESPACE_URIS_ = [\n  null,\n  'http://www.w3.org/2001/XMLSchema'\n];\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    ),\n    'complexType': olXml.makeObjectPropertyPusher(\n      exports.readComplexType_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_TYPE_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'complexContent': olXml.makeObjectPropertySetter(\n      exports.readComplexContent_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_CONTENT_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'extension': olXml.makeObjectPropertySetter(\n      exports.readExtension_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.EXTENSION_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'sequence': olXml.makeObjectPropertySetter(\n      exports.readSequence_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.SEQUENCE_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    )\n  }));\n\n\nexport default exports;\n","/**\n * @module ngeo.query.Querent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport ngeoWFSDescribeFeatureType from 'ngeo/WFSDescribeFeatureType.js';\nimport olFormatWMSCapabilities from 'ol/format/WMSCapabilities.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport * as olObj from 'ol/obj.js';\nimport * as olUri from 'ol/uri.js';\nimport * as olExtent from 'ol/extent.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Querent is a service that issues all sorts of queries using\n   * ngeo data sources. It does not store the result. Instead, it returns it\n   * using promises. Any component that inject this service can use it to\n   * make it issue its own queries and do whatever it wants with the result.\n   *\n   * It supports sending OGC requests and parse the response, such as:\n   * - WFS DescribeFeatureType\n   * - WFS GetFeature\n   * - WMS GetCapabilites\n   * - WMS GetFeatureInfo\n   * - WMTS GetCapabilities\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($http, $q, ngeoRuleHelper, ngeoWMSTime) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n\n    // === Other properties ===\n\n    /**\n     * Promises that can be resolved to cancel started requests.\n     * @type {!Array.<angular.$q.Deferred>}\n     * @private\n     */\n    this.requestCancelers_ = [];\n\n    /**\n     * Cache of promises for WMS GetCapabilities requests. They key is the\n     * online resource base url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmsGetCapabilitiesPromises_ = {};\n\n    /**\n     * Cache of promises for WMST GetCapabilities requests. They key is the\n     * url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmtsGetCapabilitiesPromises_ = {};\n  }\n\n\n  // === PUBLIC methods ===\n\n  /**\n   * Issue WMS GetFeatureInfo and/or WFS GetFeature requests using the given\n   * data sources, map and optional filters.\n   *\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  issue(options) {\n\n    const promises = [];\n    const map = options.map;\n\n    // (1) Cancel requests that are still running\n    this.cancelStillRunningRequests_();\n\n    // (2) Get queryable data sources\n    let queryableDataSources;\n    if (options.queryableDataSources) {\n      queryableDataSources = options.queryableDataSources;\n    } else {\n      const dataSources = options.dataSources;\n      googAsserts.assert(dataSources, 'DataSources should be set');\n      queryableDataSources = this.getQueryableDataSources(dataSources, map);\n    }\n\n    // (3) Combine data sources that support WFS and issue WFS queries.\n    //     The 'bbox' ('extent' option) is not required for WFS requests to\n    //     be issued.\n    const combinedWFSDataSources = this.getCombinableWFSDataSources_(\n      queryableDataSources.wfs);\n    promises.push(this.issueCombinedWFS_(combinedWFSDataSources, options));\n\n    // (4) Combine data sources that support WMS and issue WMS queries.\n    //     Only occurs if the `coordinate` option is set, because it's required\n    //     by WMS GetFeatureInfo requests.\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const combinedWMSDataSources = this.getCombinableWMSDataSources_(\n        queryableDataSources.wms);\n      promises.push(this.issueCombinedWMS_(combinedWMSDataSources, options));\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Browse a given list of data sources. Return 2 lists of data sources that\n   * are queryable, the first one being those that support WFS and the other\n   * WMS only. This means that WFS is always favored first, then WMS.\n   *\n   * The map view resolution determines if the inner ogc layers are in range.\n   *\n   * @param {!Array.<!ngeo.datasource.DataSource>} dataSources Data sources\n   * @param {ol.Map} map Map.\n   * @return {!ngeox.QueryableDataSources} Queryable data sources.\n   * @export\n   */\n  getQueryableDataSources(dataSources, map) {\n\n    const queryableDataSources = {\n      wfs: [],\n      wms: []\n    };\n    const resolution = googAsserts.assertNumber(map.getView().getResolution());\n\n    for (const dataSource of dataSources) {\n\n      // (1) Skip data source that can't be queried\n      if (!this.isDataSourceQueryable_(dataSource, resolution)) {\n        continue;\n      }\n\n      if (dataSource instanceof ngeoDatasourceOGC) {\n        // (2) Split data sources\n        if (dataSource.supportsWFS) {\n          queryableDataSources.wfs.push(dataSource);\n        } else {\n          queryableDataSources.wms.push(dataSource);\n        }\n      }\n    }\n\n    return queryableDataSources;\n  }\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  wfsDescribeFeatureType(dataSource) {\n\n    googAsserts.assert(\n      dataSource.supportsAttributes,\n      `The data source must support WFS, have a single OGCLayer that\n      is queryable in order to issue WFS DescribeFeatureType requests`\n    );\n\n    const ogcLayerNames = dataSource.getOGCLayerNames();\n\n    const url = olUri.appendParams(\n      googAsserts.assertString(dataSource.wfsUrl),\n      {\n        'REQUEST': 'DescribeFeatureType',\n        'SERVICE': 'WFS',\n        'VERSION': '2.0.0',\n        'TYPENAME': ogcLayerNames\n      }\n    );\n\n    return this.http_.get(url).then((response) => {\n      const format = new ngeoWFSDescribeFeatureType();\n      return format.read(response.data);\n    });\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMS layer capabilities\n   * @param {string} layerName Name of the WMS layer\n   * @return {?Object} Found WMS layer capability\n   * @export\n   */\n  wmsFindLayerCapability(layerCapabilities, layerName) {\n\n    let found = null;\n\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Name'] === layerName) {\n        found = layerCapability;\n        break;\n      } else if (layerCapability['Layer']) {\n        found = this.wmsFindLayerCapability(\n          layerCapability['Layer'], layerName);\n        if (found) {\n          break;\n        }\n      }\n    }\n\n    return found;\n  }\n\n  /**\n   * @param {string} baseUrl Base url of the WMS server.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmsGetCapabilities(baseUrl, opt_cache) {\n\n    const cache = opt_cache !== false;\n\n    const params = {\n      'REQUEST': 'GetCapabilities',\n      'SERVICE': 'WMS',\n      'VERSION': '1.3.0'\n    };\n\n    const url = olUri.appendParams(baseUrl, params);\n    let promise;\n\n    if (!cache || !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.wmsGetCapabilitiesPromises_[baseUrl];\n    }\n\n    googAsserts.assert(promise);\n\n    if (cache && !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      this.wmsGetCapabilitiesPromises_[baseUrl] = promise;\n    }\n\n    return promise;\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMTS layer capabilities\n   * @param {string} layerName Name of the WMTS layer, a.k.a. the identifier.\n   * @return {?Object} Found WTMS layer capability\n   * @export\n   */\n  wmtsFindLayerCapability(layerCapabilities, layerName) {\n    let found = null;\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Identifier'] === layerName) {\n        found = layerCapability;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @param {string} url Url of the WMTS server. Note that it must contain\n   *     all required arguments.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmtsGetCapabilities(url, opt_cache) {\n\n    const cache = opt_cache !== false;\n    let promise;\n\n    if (!cache || !this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMTSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.wmtsGetCapabilitiesPromises_[url];\n    }\n\n    googAsserts.assert(promise);\n\n    if (cache && !this.wmtsGetCapabilitiesPromises_[url]) {\n      this.wmtsGetCapabilitiesPromises_[url] = promise;\n    }\n\n    return promise;\n  }\n\n\n  // === PRIVATE methods ===\n\n  /**\n   * Handles the response of multiple promises that did either\n   * WMS GetFeatureInfo or WFS GetFeature requests, in which the result is\n   * a hash with key being the data source id and value the array of features.\n   *\n   * The response object itself is an array, one item being one result per\n   * promise. The idea is to return a single hash by combining the result\n   * objects.\n   *\n   * The keys are always unique, i.e. there can be multiple result objects for\n   * the same data source id.\n   *\n   * @param {!Array.<ngeox.QuerentResult>} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleCombinedQueryResult_(response) {\n    const combinedHash = {};\n    for (const hash of response) {\n      for (const dataSourceIdStr in hash) {\n        const dataSourceId = Number(dataSourceIdStr);\n        combinedHash[dataSourceId] = hash[dataSourceId];\n      }\n    }\n    return combinedHash;\n  }\n\n\n  /**\n   * Handles the result of a single WMS GetFeatureInfo or WFS GetFeature\n   * request. Read features from the response and return them.\n   *\n   * @param {!Array.<!ngeo.datasource.OGC>} dataSources List of\n   *     queryable data sources that were used to do the query.\n   * @param {number} limit The maximum number of features to get with the query.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {angular.$http.Response|number} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleQueryResult_(dataSources, limit, wfs, response) {\n    const hash = {};\n\n    for (const dataSource of dataSources) {\n      let features;\n      let tooManyFeatures;\n      let totalFeatureCount;\n\n      if (typeof response === 'number') {\n        features = [];\n        tooManyFeatures = true;\n        totalFeatureCount = response;\n      } else {\n        if (dataSource instanceof ngeoDatasourceOGC) {\n          features = this.readAndTypeFeatures_(dataSource, response.data, wfs);\n        } else {\n          features = [];\n        }\n      }\n      const dataSourceId = dataSource.id;\n      this.setUniqueIds_(features, dataSource.id);\n      hash[dataSourceId] = {\n        features,\n        limit,\n        tooManyFeatures,\n        totalFeatureCount\n      };\n    }\n\n    return hash;\n  }\n\n  /**\n   * Read and assign the type of the feature to each feature in the data.\n   * The type will be stocked in the properties of the features as\n   * \"ngeo_feature_type_\".\n   * @param {ngeo.datasource.OGC} dataSource used to read the features.\n   * @param {Document | Node | Object | string} data the response data.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @return {Array.<ol.Feature>} returned features with a type in each features.\n   * @private\n   */\n  readAndTypeFeatures_(dataSource, data, wfs) {\n    const features = [];\n    let readFeatures;\n    // Copy the types to be able to set it AND iterate on it.\n    const featureTypes = this.getSetOlFormatTypes_(dataSource, wfs).slice();\n    featureTypes.forEach((type) => {\n      // Assign temporarily a single feature type to read features separately.\n      this.getSetOlFormatTypes_(dataSource, wfs, [type]);\n      if (wfs) {\n        readFeatures = dataSource.wfsFormat.readFeatures(data);\n      } else {\n        readFeatures = dataSource.wmsFormat.readFeatures(data);\n      }\n      if (readFeatures.length > 0) {\n        readFeatures.forEach((feature) => {\n          feature.set('ngeo_feature_type_', type);\n          features.push(feature);\n        });\n      }\n    });\n    // Re-set the value to the datasource.xxxFormat to be able to re-use\n    // it later (in another query);\n    this.getSetOlFormatTypes_(dataSource, wfs, featureTypes);\n    return features;\n  }\n\n  /**\n   * Return the types defined in the format of the datasource. Can set the\n   * types if one is given.\n   * @param {ngeo.datasource.OGC} dataSource that contains the format object.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {Array.<string>=} opt_types An array of type if you want to set the\n   *     type of the format object.\n   * @return {Array.<string>} The types defined in the format.\n   * @private\n   */\n  getSetOlFormatTypes_(dataSource, wfs, opt_types) {\n    let types;\n    if (wfs) {\n      if (opt_types) {\n        dataSource.wfsFormat.setFeatureType(opt_types);\n      }\n      types = dataSource.wfsFormat.getFeatureType();\n    } else {\n      if (opt_types) {\n        dataSource.wmsFormat.setLayers(opt_types);\n      }\n      types = dataSource.wmsFormat.getLayers();\n    }\n    if (!types) {\n      return [];\n    }\n    return (Array.isArray(types)) ? types : [types];\n  }\n\n  /**\n   * Issue WFS GetFeature requests using the given combined data sources, map\n   * and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWFS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const maxFeatures = googAsserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = googAsserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const srsName = projection.getCode();\n    const wfsCount = options.wfsCount === true;\n\n    // (1) Extent (bbox), which is optional, i.e. its value can stay undefined\n    let bbox;\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const tolerancePx = options.tolerancePx;\n      googAsserts.assert(tolerancePx);\n      const tolerance = tolerancePx * resolution;\n      bbox = olExtent.buffer(\n        olExtent.createOrUpdateFromCoordinate(coordinate),\n        tolerance\n      );\n    } else {\n      bbox = options.extent;\n    }\n\n    // (2) Launch one request per combinaison of data sources\n    const wfsFormat = new olFormatWFS();\n    const xmlSerializer = new XMLSerializer();\n    for (const dataSources of combinedDataSources) {\n\n      let getFeatureCommonOptions;\n      let featureNS;\n      let featureTypes = [];\n      let url;\n      const params = {};\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!getFeatureCommonOptions) {\n          featureNS = dataSource.wfsFeatureNS;\n          const featurePrefix = dataSource.wfsFeaturePrefix;\n          const geometryName = dataSource.geometryName;\n          const outputFormat = dataSource.wfsOutputFormat;\n\n          getFeatureCommonOptions = {\n            bbox,\n            featureNS,\n            featurePrefix,\n            geometryName,\n            outputFormat,\n            srsName\n          };\n\n          url = dataSource.wfsUrl;\n\n          // All data sources combined share the same active dimensions\n          olObj.assign(params, dataSource.activeDimensions);\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        featureTypes = featureTypes.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Add filter, if any. If the case, then only one data source\n        //     is expected to be used for this request.\n        let filter;\n        if (options.filter) {\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            filter: options.filter,\n            incTime: true\n          });\n        } else if ((dataSource.filterRules && dataSource.filterRules.length) ||\n            dataSource.timeRangeValue) {\n\n          googAsserts.assert(\n            dataSources.length === 1,\n            `A data source having filterRules or timeRangeValue should issue\n            a single query, alone.`\n          );\n\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            incTime: true,\n            srsName: srsName\n          });\n        }\n\n        if (filter) {\n          getFeatureCommonOptions['filter'] = filter;\n        }\n      }\n\n      googAsserts.assert(getFeatureCommonOptions);\n      getFeatureCommonOptions.featureTypes = featureTypes;\n      googAsserts.assert(url);\n\n      // (4) Build query then launch\n      //\n      //     If we require to do a WFS GetFeature request with\n      //     `resultType: 'hits'` first, do so. In that case, if there would\n      //     be too many features returned, no GetFeature is done thereafter\n      //     and the data sources will return empty arrays in the returned\n      //     response.\n      //\n      //     If we do not need to count features first, then proceed with\n      //     an normal WFS GetFeature request.\n      const getFeatureDefer = this.q_.defer();\n      promises.push(\n        getFeatureDefer.promise.then(\n          this.handleQueryResult_.bind(this, dataSources, maxFeatures, true)\n        )\n      );\n\n      // (4.1) Count, if required\n      let countPromise;\n      if (wfsCount) {\n        const getCountOptions = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n          olObj.assign(\n            {\n              resultType: 'hits'\n            },\n            getFeatureCommonOptions\n          )\n        );\n        const featureCountXml = wfsFormat.writeGetFeature(getCountOptions);\n        const featureCountRequest = xmlSerializer.serializeToString(\n          featureCountXml);\n        const canceler = this.registerCanceler_();\n        countPromise = this.http_.post(\n          url,\n          featureCountRequest,\n          {\n            params: params,\n            headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n            timeout: canceler.promise\n          }\n        ).then(((response) => {\n          const meta = dataSources[0].wfsFormat.readFeatureCollectionMetadata(\n            response.data\n          );\n          return meta['numberOfFeatures'];\n        }).bind(this));\n      } else {\n        countPromise = this.q_.resolve();\n      }\n\n      // (4.2) After count, do GetFeature (if required)\n      countPromise.then((numberOfFeatures) => {\n        // `true` is returned if a count request was made AND there would\n        // be too many features.\n        if (numberOfFeatures === undefined || numberOfFeatures < maxFeatures) {\n\n          const getFeatureOptions = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n            olObj.assign(\n              {\n                maxFeatures\n              },\n              getFeatureCommonOptions\n            )\n          );\n          const featureRequestXml = wfsFormat.writeGetFeature(\n            getFeatureOptions);\n          const featureRequest = xmlSerializer.serializeToString(\n            featureRequestXml);\n          googAsserts.assertString(url);\n          const canceler = this.registerCanceler_();\n          this.http_.post(\n            url,\n            featureRequest,\n            {\n              params: params,\n              headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n              timeout: canceler.promise\n            }\n          ).then((response) => {\n            getFeatureDefer.resolve(response);\n          });\n\n        } else {\n          getFeatureDefer.resolve(numberOfFeatures);\n        }\n      });\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Issue WMS GetFeatureInfo requests using the given combined data sources,\n   * map and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWMS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const FEATURE_COUNT = googAsserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = googAsserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const projCode = projection.getCode();\n\n    // (1) Coordinate, which is required to issue WMS GetFeatureInfo requests\n    const coordinate = options.coordinate;\n    googAsserts.assert(coordinate);\n\n    // (2) Launch one request per combinaison of data sources\n    for (const dataSources of combinedDataSources) {\n\n      let url;\n      let LAYERS = [];\n      let INFO_FORMAT;\n      let activeDimensionsSet = false;\n      const params = {};\n      let filterString = null;\n      let filtrableLayerName = null;\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!INFO_FORMAT) {\n          INFO_FORMAT = dataSource.wmsInfoFormat;\n          url = dataSource.wmsUrl;\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        LAYERS = LAYERS.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Manage active dimensions, which are added directly to the\n        //     query parameters. Note that this occurs only ONCE, i.e.\n        //     for the first data source, because all data sources here have\n        //     been combined together, therefore they share the same active\n        //     dimensions.\n        if (!activeDimensionsSet) {\n          olObj.assign(params, dataSource.activeDimensions);\n          activeDimensionsSet = true;\n        }\n\n        // (d) Add filter, if any. If there is a filter on the data source,\n        //     then it is expected that one request will be sent for this\n        //     data source only.\n        if (dataSource.filterRules && dataSource.filterRules.length) {\n          googAsserts.assert(dataSources.length === 1);\n          filtrableLayerName = dataSource.getFiltrableOGCLayerName();\n          filterString = this.ngeoRuleHelper_.createFilterString({\n            dataSource: dataSource,\n            srsName: projCode\n          });\n        }\n\n        // (e) Add TIME parameter if the data source has a time range value.\n        //     If that's the case, then it is expected that one request will be\n        //     sent for this data source only.\n        if (dataSource.timeRangeValue !== null && dataSource.timeProperty) {\n          googAsserts.assert(dataSources.length === 1);\n          params['TIME'] = this.ngeoWMSTime_.formatWMSTimeParam(\n            dataSource.timeProperty,\n            dataSource.timeRangeValue\n          );\n        }\n      }\n\n      params['LAYERS'] = LAYERS;\n      params['QUERY_LAYERS'] = LAYERS;\n\n      // Manage 'FILTER' parameter\n      if (filterString && filtrableLayerName) {\n        let filterParamValue = null;\n        if (LAYERS.length === 1) {\n          // When there's only one layer in the `LAYERS` parameters, then\n          // the filter string is given as-is.\n          filterParamValue = filterString;\n        } else {\n          // When there's more then one layer, then each filter must be wrapped\n          // between parenthesis and the order must also match the `LAYERS`\n          // parameter as well.\n          const filterParamValues = [];\n          for (let i = 0, ii = LAYERS.length; i < ii; i++) {\n            if (LAYERS[i] === filtrableLayerName) {\n              filterParamValues.push(`(${filterString})`);\n            } else {\n              filterParamValues.push('()');\n            }\n          }\n          filterParamValue = filterParamValues.join('');\n        }\n        params['FILTER'] = filterParamValue;\n      }\n\n      googAsserts.assert(url);\n      const wmsSource = new olSourceImageWMS({\n        params,\n        url\n      });\n\n      // (4) Build query url, then launch\n      const wmsGetFeatureInfoUrl = googAsserts.assertString(\n        wmsSource.getGetFeatureInfoUrl(\n          coordinate, resolution, projCode, {\n            // Without extern, quoting is necessary\n            'FEATURE_COUNT': FEATURE_COUNT,\n            'INFO_FORMAT': INFO_FORMAT\n          }\n        )\n      );\n\n      const canceler = this.registerCanceler_();\n      promises.push(\n        this.http_.get(\n          wmsGetFeatureInfoUrl,\n          {\n            timeout: canceler.promise\n          }\n        ).then(\n          this.handleQueryResult_.bind(this, dataSources, FEATURE_COUNT, false)\n        )\n      );\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WFS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWFSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWFS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWFS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WMS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWMSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWMS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWMS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * Checks if a data source can be queried, which requires it to be:\n   * - visible\n   * - in range\n   * - queryable (using the native getter)\n   * - have at least one OGC layer in range of current map view resolution.\n   *\n   * @param {ngeo.datasource.DataSource} ds Data source\n   * @param {number} res Resolution.\n   * @return {boolean} Whether the data source is queryable\n   * @private\n   */\n  isDataSourceQueryable_(ds, res) {\n    let queryable = ds.visible && ds.inRange && ds.queryable;\n    if (queryable && ds instanceof ngeoDatasourceOGC) {\n      const ogcDS = /** @type {!ngeo.datasource.OGC} */ (ds);\n      queryable = ogcDS.isAnyOGCLayerInRange(res, true);\n    }\n    return queryable;\n  }\n\n  /**\n   * Make sure that feature ids are unique, because the same features might\n   * be returned for different layers.\n   * @param {Array.<ol.Feature>} features Features\n   * @param {number} dataSourceId Data source id.\n   * @private\n   */\n  setUniqueIds_(features, dataSourceId) {\n    features.forEach((feature) => {\n      if (feature.getId() !== undefined) {\n        const id = `${dataSourceId}_${feature.getId()}`;\n        feature.setId(id);\n      }\n    });\n  }\n\n  /**\n   * @return {angular.$q.Deferred} A deferred that can be resolved to cancel a\n   *    HTTP request.\n   * @private\n   */\n  registerCanceler_() {\n    const canceler = this.q_.defer();\n    this.requestCancelers_.push(canceler);\n    return canceler;\n  }\n\n  /**\n   * @private\n   */\n  cancelStillRunningRequests_() {\n    for (const canceler of this.requestCancelers_) {\n      canceler.resolve();\n    }\n    this.requestCancelers_.length = 0;\n  }\n};\n\n\n/**\n * @typedef {!Array.<!Array.<!ngeo.datasource.OGC>>}\n */\nexports.CombinedDataSources;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoQuerent', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoQuerent', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.Snapping\n */\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Translate\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionTranslate from 'ol/interaction/Translate.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * An extension of the OpenLayers Translate interaction that adds the following\n * features to it:\n *\n * - show a small arrow icon in the middle of the features allowing a visual\n *   aspect that tells the user \"this feature can be moved\"\n * - pressing the ESC key automatically deactivate the interaction.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Translate}\n * @param {ngeox.interaction.TranslateOptions} options Options.\n */\nconst exports = function(options) {\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {!Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = {};\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.myFeatures_ = options.features !== undefined ? options.features : null;\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.vectorSource_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: this.vectorSource_,\n    style: options.style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionTranslate.call(\n    this, /** @type {olx.interaction.TranslateOptions} */ (options));\n};\n\nolBase.inherits(exports, olInteractionTranslate);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionTranslate.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.vectorLayer_.setMap(null);\n  }\n\n  olInteractionTranslate.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.vectorLayer_.setMap(map);\n  }\n\n  this.setState_();\n};\n\n\n/**\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const features = this.myFeatures_;\n  const keys = this.listenerKeys_;\n\n  if (map && active && features) {\n    features.forEach(feature => this.addFeature_(feature));\n    keys.push(\n      olEvents.listen(features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(features, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n\n    if (map) {\n      const elem = map.getTargetElement();\n      elem.style.cursor = 'default';\n    }\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    features.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  this.featureListenerKeys_[uid] = olEvents.listen(\n    geometry,\n    'change',\n    this.handleGeometryChange_.bind(this, feature),\n    this\n  );\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.vectorSource_.addFeature(centerFeature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  if (this.featureListenerKeys_[uid]) {\n    olEvents.unlistenByKey(this.featureListenerKeys_[uid]);\n    delete this.featureListenerKeys_[uid];\n\n    this.vectorSource_.removeFeature(this.centerFeatures_[uid]);\n    delete this.centerFeatures_[uid];\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature being moved.\n * @param {ol.events.Event} evt Event.\n * @private\n */\nexports.prototype.handleGeometryChange_ = function(feature,\n  evt) {\n  const geometry = evt.target;\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const uid = olBase.getUid(feature);\n  this.centerFeatures_[uid].setGeometry(point);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.geom.Point} The center point of the geometry.\n * @private\n */\nexports.prototype.getGeometryCenterPoint_ = function(\n  geometry) {\n\n  let center;\n  let point;\n\n  if (geometry instanceof olGeomPolygon) {\n    point = geometry.getInteriorPoint();\n  } else if (geometry instanceof olGeomLineString) {\n    center = geometry.getCoordinateAt(0.5);\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  if (!point && center) {\n    point = new olGeomPoint(center);\n  }\n\n  googAsserts.assert(point, 'Point should be thruthy');\n\n  return point;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Rotate\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction to rotate features.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.coordinate_ = null;\n\n  /**\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.centerCoordinate_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionPointer.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n    this.features_.forEach(feature => this.addFeature_(feature));\n    this.listenerKeys_.push(\n      olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this)\n    );\n\n  } else {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n    this.features_.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  feature.set('angle', 0);\n\n  // Add the center icon to the overlay\n  const uid = olBase.getUid(feature);\n  const point = new olGeomPoint(this.getCenterCoordinate_(geometry));\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.overlay_.getSource().addFeature(centerFeature);\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.feature_ = null;\n  //this.overlay_.getSource().removeFeature(feature);\n\n  if (feature) {\n    const uid = olBase.getUid(feature);\n\n    if (this.centerFeatures_[uid]) {\n      this.overlay_.getSource().removeFeature(this.centerFeatures_[uid]);\n      delete this.centerFeatures_[uid];\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  let feature = map.forEachFeatureAtPixel(evt.pixel,\n    (feature, layer) => feature, undefined);\n\n  if (feature) {\n    let found = false;\n    this.features_.forEach((f) => {\n      if (olBase.getUid(f) == olBase.getUid(feature)) {\n        found = true;\n      }\n    });\n    if (!found) {\n      feature = null;\n    }\n  }\n\n  if (feature) {\n    this.coordinate_ = evt.coordinate;\n    this.feature_ = feature;\n    const geometry = (this.feature_.getGeometry());\n    if (geometry !== undefined) {\n      this.centerCoordinate_ = this.getCenterCoordinate_(geometry);\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.Coordinate} The center coordinate of the geometry.\n * @private\n */\nexports.prototype.getCenterCoordinate_ = function(\n  geometry) {\n\n  let center;\n\n  if (geometry instanceof olGeomLineString) {\n    center = geometry.getFlatMidpoint();\n  } else if (geometry instanceof olGeomPolygon) {\n    center = geometry.getFlatInteriorPoint();\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  return center;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (this.feature_.getGeometry());\n\n  const oldX = this.coordinate_[0];\n  const oldY = this.coordinate_[1];\n\n  const centerX = this.centerCoordinate_[0];\n  const centerY = this.centerCoordinate_[1];\n\n  const dx1 = oldX - centerX;\n  const dy1 = oldY - centerY;\n  const dx0 = evt.coordinate[0] - centerX;\n  const dy0 = evt.coordinate[1] - centerY;\n\n  this.coordinate_[0] = evt.coordinate[0];\n  this.coordinate_[1] = evt.coordinate[1];\n\n  const a0 = Math.atan2(dy0, dx0);\n  const a1 = Math.atan2(dy1, dx1);\n  const angle = a1 - a0;\n\n  geometry.rotate(-angle, [centerX, centerY]);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.RotateEvent} */\n    const event = new ngeoCustomEvent('rotateend', {feature: this.feature_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n    this.setActive(false);\n  }\n  return false;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.features\n */\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n","/**\n * @module ngeo.Menu\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olOverlay from 'ol/Overlay.js';\nimport olOverlayPositioning from 'ol/OverlayPositioning.js';\n\n/**\n * @classdesc\n * An OpenLayers overlay that shows a contextual menu with configurable actions\n * anchored from its top left to a specific location. An event is fired when\n * any of the action is clicked.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {ngeox.MenuOptions=} menuOptions Menu options.\n * @param {olx.OverlayOptions=} opt_overlayOptions Overlay options.\n */\nconst exports = function(menuOptions, opt_overlayOptions) {\n\n  const options = opt_overlayOptions !== undefined ? opt_overlayOptions : {};\n\n  options.positioning = olOverlayPositioning.TOP_LEFT;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.clickOutListenerKey_ = null;\n\n  const contentEl = $('<div/>', {\n    'class': 'panel panel-default'\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoClose_ = menuOptions.autoClose !== undefined ?\n    menuOptions.autoClose : true;\n\n  // titleEl\n  if (menuOptions.title) {\n    const headerEl = $('<div>', {\n      'class': 'panel-heading'\n    }).appendTo(contentEl);\n\n    $('<span>', {\n      text: menuOptions.title\n    }).appendTo(headerEl);\n  }\n\n  // actionsEl\n  const actionsEl = $('<div>', {\n    'class': 'list-group'\n  }).appendTo(contentEl);\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.actions_ = [];\n\n  menuOptions.actions.forEach((action) => {\n    this.actions_.push(\n      $('<button>', {\n        'class': 'list-group-item',\n        'data-name': action.name,\n        'text': [\n          ' ',\n          (action.label) !== undefined ? action.label : action.name\n        ].join('')\n      })\n        .appendTo(actionsEl)\n        .prepend($('<span>', {\n          'class': action.cls !== undefined ? action.cls : ''\n        }))\n    );\n  });\n\n  options.element = contentEl[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @param {ol.PluggableMap|undefined} map Map.\n * @export\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.actions_.forEach((action) => {\n      const data = action.data();\n      this.listenerKeys_.push(\n        olEvents.listen(\n          action[0],\n          'click',\n          this.handleActionClick_.bind(this, data.name)\n        )\n      );\n    });\n\n    // Autoclose the menu when clicking anywhere else than the menu\n    this.listenerKeys_.push(\n      olEvents.listen(\n        map,\n        'pointermove',\n        this.handleMapPointerMove_,\n        this\n      )\n    );\n  }\n\n};\n\n\n/**\n * Opens the menu at the desited coordinate. Also starts listening for the\n * clickout if autoClose is enabled.\n * @param {ol.Coordinate} coordinate Where to open the menu.\n * @export\n */\nexports.prototype.open = function(coordinate) {\n  this.setPosition(coordinate);\n  if (this.autoClose_) {\n    this.clickOutListenerKey_ = olEvents.listen(\n      document.documentElement,\n      'mousedown',\n      this.handleClickOut_,\n      this\n    );\n  }\n\n};\n\n\n/**\n * @export\n */\nexports.prototype.close = function() {\n  this.setPosition(undefined);\n\n  if (this.clickOutListenerKey_ !== null) {\n    olEvents.unlistenByKey(this.clickOutListenerKey_);\n  }\n};\n\n\n/**\n * @param {string} action The action name that was clicked.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleActionClick_ = function(action, evt) {\n\n  this.dispatchEvent(new ngeoCustomEvent('actionclick', {\n    action: action\n  }));\n\n  if (this.autoClose_) {\n    this.close();\n  }\n\n  evt.stopPropagation();\n};\n\n\n/**\n * Handles clicks out of the menu. If the menu is visible, close it.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleClickOut_ = function(evt) {\n  const element = this.getElement();\n  if (element && $(evt.target).closest(element).length === 0) {\n    this.close();\n  }\n};\n\n\n/**\n * When the mouse is hovering the menu, set the event coordinate and pixel\n * values to Infinity to do as if the mouse had been move out of range of the\n * map. This prevents behaviours such as vertex still appearing while mouse\n * hovering edges of features bound to an active modify control while the\n * cursor is on top of the menu.\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handleMapPointerMove_ = function(evt) {\n  const target = evt.originalEvent.target;\n  googAsserts.assertInstanceof(target, Element);\n\n  const element = this.getElement();\n  googAsserts.assertInstanceof(element, Element);\n\n  if (element.contains(target)) {\n    evt.coordinate = [Infinity, Infinity];\n    evt.pixel = [Infinity, Infinity];\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\n\n\nexport default exports;\n","/**\n * @module ngeo.download.service\n */\nimport ngeoUtils from 'ngeo/utils.js';\n\nimport {saveAs} from 'file-saver';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDownload', []);\n\n/**\n * A service to start a download for a file.\n *\n * @return {ngeox.Download} The download function.\n * @ngdoc service\n * @ngname ngeoDownload\n */\nexports.factory_ = function() {\n  /**\n   * @param {string} content The file content.\n   * @param {string} fileName The file name.\n   * @param {string=} opt_fileType The file type. If not given,\n   *    `text/plain;charset=utf-8` is used.\n   */\n  function download(content, fileName, opt_fileType) {\n    // Safari does not properly work with FileSaver. Using the the type 'text/plain'\n    // makes it a least possible to show the file content so that users can\n    // do a manual download with \"Save as\".\n    // See also: https://github.com/eligrey/FileSaver.js/issues/12\n    /** @type {string} */\n    const fileType = opt_fileType !== undefined && !ngeoUtils.isSafari() ?\n      opt_fileType : 'text/plain;charset=utf-8';\n\n    const blob = new Blob([content], {type: fileType});\n    saveAs(blob, fileName);\n  }\n\n  return download;\n};\n\nexports.factory('ngeoDownload', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.DataSourceBeingFiltered\n */\nconst exports = {};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourceBeingFiltered', []);\n// type gmfx.datasource.DataSourceBeingFiltered\nexports.module.value('gmfDataSourceBeingFiltered', {\n  dataSource: null\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.message.modalComponent\n */\nimport 'jquery-ui/ui/widgets/draggable.js';\nimport 'bootstrap/js/modal.js';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoModal', []);\n\n/**\n * Provides the \"ngeoModal\" component.\n *\n * This component shows a Bootstrap modal when the `ngModel` expression\n * evaluates to `true`, and it hides it when the `ngModel` expression\n * evaluates to `false`.\n *\n * The components also changes the `ngModel` value when the user manually\n * closes the modal.\n *\n * This component is based on Bootstrap's `modal` classes and associated\n * jQuery plugin.\n *\n *     <ngeo-modal ng-model=\"modalShown\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *         <h4 class=\"modal-title\">The Title</h4>\n *       </div>\n *       <div class=\"modal-body\">Some content</div>\n *     </ngeo-modal>\n *\n * Note: for z-indexing purpose, the modal DOM element is automatically moved\n * to document body element.\n *\n * See our live example: [../examples/modal.html](../examples/modal.html)\n *\n * @htmlAttribute {boolean} ngeo-modal-resizable Whether the modal can be\n *     resized or not. Defaults to `false`.\n * @htmlAttribute {boolean} ngeo-modal-closable Whether the modal can be\n *     closed by clicking outside it or by hiting the `escape` keyboard key. Defaults to `true`.\n * @ngdoc component\n * @ngname ngeoModal\n * @type {!angular.Component}\n */\nexports.component_ = {\n  template: `<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <ng-transclude></ng-transclude>\n      </div>\n    </div>\n  </div>`,\n  require: {\n    'ngModel': 'ngModel'\n  },\n  transclude: true,\n  controller: 'ngeoModalController',\n  bindings: {\n    'resizable': '<ngeoModalResizable',\n    'closable': '<ngeoModalClosable'\n  }\n};\n\nexports.component('ngeoModal', exports.component_);\n\nexports.Controller_ = class {\n  /**\n   * @ngInject\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!jQuery} $element Element.\n   */\n  constructor($scope, $element) {\n    /**\n     * @private\n     * @type {!jQuery}\n     */\n    this.$element_ = $element;\n\n    /**\n     * @private\n     * @type {!angular.Scope}\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @private\n     * @type {jQuery}\n     */\n    this.modal_;\n\n    /**\n     * @export\n     * @type {boolean}\n     */\n    this.closable;\n\n    /**\n     * @export\n     * @type {boolean}\n     */\n    this.resizable;\n\n    /**\n     * @export\n     * @type {angular.NgModelController|null}\n     */\n    this.ngModel;\n  }\n\n  $onInit() {\n    this.closable = this.closable !== false;\n\n    this.modal_ = this.$element_.children();\n\n    if (!this.closable) {\n      this.modal_.attr('data-keyboard', false);\n      this.modal_.attr('data-backdrop', 'static');\n    }\n\n    this.resizable = !!this.resizable;\n\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable();\n    if (this.resizable) {\n      dialog.resizable();\n    }\n\n    this.ngModel.$render = () => {\n      this.modal_.modal(this.ngModel.$viewValue ? 'show' : 'hide');\n    };\n\n    this.modal_.on('shown.bs.modal hidden.bs.modal', (e) => {\n      const type = e.type;\n      googAsserts.assert(type == 'shown' || type == 'hidden');\n      this.ngModel.$setViewValue(type == 'shown');\n    });\n  }\n\n  $onDestroy() {\n    // Force close the modal.\n    this.modal_.modal('hide');\n    this.modal_.modal('removeBackdrop');\n    // Destroy the children's plugins.\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable('destroy');\n    if (this.resizable) {\n      dialog.resizable('destroy');\n    }\n  }\n};\n\nexports.controller('ngeoModalController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Notification\n */\nimport 'bootstrap/js/alert.js';\nimport googAsserts from 'goog/asserts.js';\n\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\n\nexport default exports;\n","/*!\n * @copyright Copyright &copy; Kartik Visweswaran, Krajee.com, 2014 - 2016\n * @version 1.3.4\n *\n * Date formatter utility library that allows formatting date/time variables or Date objects using PHP DateTime format.\n * @see http://php.net/manual/en/function.date.php\n *\n * For more JQuery plugins visit http://plugins.krajee.com\n * For more Yii related demos visit http://demos.krajee.com\n */\n\n/* eslint-disable */\nconst DAY = 1000 * 60 * 60 * 24;\nconst HOUR = 3600;\n\nconst _compare = function(str1, str2) {\n  return typeof (str1) === 'string' && typeof (str2) === 'string' && str1.toLowerCase() === str2.toLowerCase();\n};\nconst _lpad = function(value, length, char) {\n  const chr = char || '0';\n  const val = value.toString();\n  return val.length < length ? _lpad(chr + val, length) : val;\n};\nconst _extend = function(out) {\n  let i, obj;\n  out = out || {};\n  for (i = 1; i < arguments.length; i++) {\n    obj = arguments[i];\n    if (!obj) {\n      continue;\n    }\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        if (typeof obj[key] === 'object') {\n          _extend(out[key], obj[key]);\n        } else {\n          out[key] = obj[key];\n        }\n      }\n    }\n  }\n  return out;\n};\nconst _indexOf = function(val, arr) {\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i].toLowerCase() === val.toLowerCase()) {\n      return i;\n    }\n  }\n  return -1;\n};\nconst defaultSettings = {\n  dateSettings: {\n    days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    daysShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    months: [\n      'January', 'February', 'March', 'April', 'May', 'June', 'July',\n      'August', 'September', 'October', 'November', 'December'\n    ],\n    monthsShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    meridiem: ['AM', 'PM'],\n    ordinal: function(number) {\n      const n = number % 10, suffixes = {1: 'st', 2: 'nd', 3: 'rd'};\n      return Math.floor(number % 100 / 10) === 1 || !suffixes[n] ? 'th' : suffixes[n];\n    }\n  },\n  separators: /[ \\-+\\/\\.T:@]/g,\n  validParts: /[dDjlNSwzWFmMntLoYyaABgGhHisueTIOPZcrU]/g,\n  intParts: /[djwNzmnyYhHgGis]/g,\n  tzParts: /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g,\n  tzClip: /[^-+\\dA-Z]/g\n};\n\nconst DateFormatter = function(options) {\n  const self = this;\n  const config = _extend(defaultSettings, options);\n  self.dateSettings = config.dateSettings;\n  self.separators = config.separators;\n  self.validParts = config.validParts;\n  self.intParts = config.intParts;\n  self.tzParts = config.tzParts;\n  self.tzClip = config.tzClip;\n};\n\nDateFormatter.prototype = {\n  constructor: DateFormatter,\n  getMonth: function(val) {\n    const self = this;\n    let i;\n    i = _indexOf(val, self.dateSettings.monthsShort) + 1;\n    if (i === 0) {\n      i = _indexOf(val, self.dateSettings.months) + 1;\n    }\n    return i;\n  },\n  parseDate: function(vDate, vFormat) {\n    const self = this, out = {date: null, year: null, month: null, day: null, hour: 0, min: 0, sec: 0}, vSettings = self.dateSettings;\n    let i, vDateFlag = false, vTimeFlag = false, vDatePart, iDatePart,\n        vMonth, vMeriIndex, vMeriOffset, len, mer;\n    if (!vDate) {\n      return null;\n    }\n    if (vDate instanceof Date) {\n      return vDate;\n    }\n    if (vFormat === 'U') {\n      i = parseInt(vDate);\n      return i ? new Date(i * 1000) : vDate;\n    }\n    switch (typeof vDate) {\n      case 'number':\n        return new Date(vDate);\n      case 'string':\n        break;\n      default:\n        return null;\n    }\n    const vFormatParts = vFormat.match(self.validParts);\n    if (!vFormatParts || vFormatParts.length === 0) {\n      throw new Error('Invalid date format definition.');\n    }\n    const vDateParts = vDate.replace(self.separators, '\\0').split('\\0');\n    for (i = 0; i < vDateParts.length; i++) {\n      vDatePart = vDateParts[i];\n      iDatePart = parseInt(vDatePart);\n      switch (vFormatParts[i]) {\n        case 'y':\n        case 'Y':\n          if (iDatePart) {\n            len = vDatePart.length;\n            out.year = len === 2 ? parseInt((iDatePart < 70 ? '20' : '19') + vDatePart) : iDatePart;\n          } else {\n            return null;\n          }\n          vDateFlag = true;\n          break;\n        case 'm':\n        case 'n':\n        case 'M':\n        case 'F':\n          if (isNaN(iDatePart)) {\n            vMonth = self.getMonth(vDatePart);\n            if (vMonth > 0) {\n              out.month = vMonth;\n            } else {\n              return null;\n            }\n          } else {\n            if (iDatePart >= 1 && iDatePart <= 12) {\n              out.month = iDatePart;\n            } else {\n              return null;\n            }\n          }\n          vDateFlag = true;\n          break;\n        case 'd':\n        case 'j':\n          if (iDatePart >= 1 && iDatePart <= 31) {\n            out.day = iDatePart;\n          } else {\n            return null;\n          }\n          vDateFlag = true;\n          break;\n        case 'g':\n        case 'h':\n          vMeriIndex = (vFormatParts.indexOf('a') > -1) ? vFormatParts.indexOf('a') :\n            (vFormatParts.indexOf('A') > -1) ? vFormatParts.indexOf('A') : -1;\n          mer = vDateParts[vMeriIndex];\n          if (vMeriIndex > -1) {\n            vMeriOffset = _compare(mer, vSettings.meridiem[0]) ? 0 :\n              (_compare(mer, vSettings.meridiem[1]) ? 12 : -1);\n            if (iDatePart >= 1 && iDatePart <= 12 && vMeriOffset > -1) {\n              out.hour = iDatePart + vMeriOffset - 1;\n            } else if (iDatePart >= 0 && iDatePart <= 23) {\n              out.hour = iDatePart;\n            }\n          } else {\n            if (iDatePart >= 0 && iDatePart <= 23) {\n              out.hour = iDatePart;\n            } else {\n              return null;\n            }\n          }\n          vTimeFlag = true;\n          break;\n        case 'G':\n        case 'H':\n          if (iDatePart >= 0 && iDatePart <= 23) {\n            out.hour = iDatePart;\n          } else {\n            return null;\n          }\n          vTimeFlag = true;\n          break;\n        case 'i':\n          if (iDatePart >= 0 && iDatePart <= 59) {\n            out.min = iDatePart;\n          } else {\n            return null;\n          }\n          vTimeFlag = true;\n          break;\n        case 's':\n          if (iDatePart >= 0 && iDatePart <= 59) {\n            out.sec = iDatePart;\n          } else {\n            return null;\n          }\n          vTimeFlag = true;\n          break;\n      }\n    }\n    if (vDateFlag === true && out.year && out.month && out.day) {\n      out.date = new Date(out.year, out.month - 1, out.day, out.hour, out.min, out.sec, 0);\n    } else {\n      if (vTimeFlag !== true) {\n        return null;\n      }\n      out.date = new Date(0, 0, 0, out.hour, out.min, out.sec, 0);\n    }\n    return out.date;\n  },\n  guessDate: function(vDateStr, vFormat) {\n    if (typeof vDateStr !== 'string') {\n      return vDateStr;\n    }\n    const self = this, vParts = vDateStr.replace(self.separators, '\\0').split('\\0'), vPattern = /^[djmn]/g, vFormatParts = vFormat.match(self.validParts), vDate = new Date(), vDigit = 0;\n    let len, i, n, iPart, iSec, vYear;\n\n    if (!vPattern.test(vFormatParts[0])) {\n      return vDateStr;\n    }\n\n    for (i = 0; i < vParts.length; i++) {\n      let vDigit = 2;\n      iPart = vParts[i];\n      iSec = parseInt(iPart.substr(0, 2));\n      if (isNaN(iSec)) {\n        return null;\n      }\n      switch (i) {\n        case 0:\n          if (vFormatParts[0] === 'm' || vFormatParts[0] === 'n') {\n            vDate.setMonth(iSec - 1);\n          } else {\n            vDate.setDate(iSec);\n          }\n          break;\n        case 1:\n          if (vFormatParts[0] === 'm' || vFormatParts[0] === 'n') {\n            vDate.setDate(iSec);\n          } else {\n            vDate.setMonth(iSec - 1);\n          }\n          break;\n        case 2:\n          vYear = vDate.getFullYear();\n          len = iPart.length;\n          vDigit = len < 4 ? len : 4;\n          vYear = parseInt(len < 4 ? vYear.toString().substr(0, 4 - len) + iPart : iPart.substr(0, 4));\n          if (!vYear) {\n            return null;\n          }\n          vDate.setFullYear(vYear);\n          break;\n        case 3:\n          vDate.setHours(iSec);\n          break;\n        case 4:\n          vDate.setMinutes(iSec);\n          break;\n        case 5:\n          vDate.setSeconds(iSec);\n          break;\n      }\n      n = iPart.substr(vDigit);\n      if (n.length > 0) {\n        vParts.splice(i + 1, 0, n);\n      }\n    }\n    return vDate;\n  },\n  parseFormat: function(vChar, vDate) {\n    let fmt;\n    const self = this, vSettings = self.dateSettings, backslash = /\\\\?(.?)/gi, doFormat = function(t, s) {\n      return fmt[t] ? fmt[t]() : s;\n    };\n    fmt = {\n      /////////\n      // DAY //\n      /////////\n      /**\n       * Day of month with leading 0: `01..31`\n       * @return {string}\n       */\n      d: function() {\n        return _lpad(fmt.j(), 2);\n      },\n      /**\n       * Shorthand day name: `Mon...Sun`\n       * @return {string}\n       */\n      D: function() {\n        return vSettings.daysShort[fmt.w()];\n      },\n      /**\n       * Day of month: `1..31`\n       * @return {number}\n       */\n      j: function() {\n        return vDate.getDate();\n      },\n      /**\n       * Full day name: `Monday...Sunday`\n       * @return {number}\n       */\n      l: function() {\n        return vSettings.days[fmt.w()];\n      },\n      /**\n       * ISO-8601 day of week: `1[Mon]..7[Sun]`\n       * @return {number}\n       */\n      N: function() {\n        return fmt.w() || 7;\n      },\n      /**\n       * Day of week: `0[Sun]..6[Sat]`\n       * @return {number}\n       */\n      w: function() {\n        return vDate.getDay();\n      },\n      /**\n       * Day of year: `0..365`\n       * @return {number}\n       */\n      z: function() {\n        const a = new Date(fmt.Y(), fmt.n() - 1, fmt.j()), b = new Date(fmt.Y(), 0, 1);\n        return Math.round((a - b) / DAY);\n      },\n\n      //////////\n      // WEEK //\n      //////////\n      /**\n       * ISO-8601 week number\n       * @return {number}\n       */\n      W: function() {\n        const a = new Date(fmt.Y(), fmt.n() - 1, fmt.j() - fmt.N() + 3), b = new Date(a.getFullYear(), 0, 4);\n        return _lpad(1 + Math.round((a - b) / DAY / 7), 2);\n      },\n\n      ///////////\n      // MONTH //\n      ///////////\n      /**\n       * Full month name: `January...December`\n       * @return {string}\n       */\n      F: function() {\n        return vSettings.months[vDate.getMonth()];\n      },\n      /**\n       * Month w/leading 0: `01..12`\n       * @return {string}\n       */\n      m: function() {\n        return _lpad(fmt.n(), 2);\n      },\n      /**\n       * Shorthand month name; `Jan...Dec`\n       * @return {string}\n       */\n      M: function() {\n        return vSettings.monthsShort[vDate.getMonth()];\n      },\n      /**\n       * Month: `1...12`\n       * @return {number}\n       */\n      n: function() {\n        return vDate.getMonth() + 1;\n      },\n      /**\n       * Days in month: `28...31`\n       * @return {number}\n       */\n      t: function() {\n        return (new Date(fmt.Y(), fmt.n(), 0)).getDate();\n      },\n\n      //////////\n      // YEAR //\n      //////////\n      /**\n       * Is leap year? `0 or 1`\n       * @return {number}\n       */\n      L: function() {\n        const Y = fmt.Y();\n        return (Y % 4 === 0 && Y % 100 !== 0 || Y % 400 === 0) ? 1 : 0;\n      },\n      /**\n       * ISO-8601 year\n       * @return {number}\n       */\n      o: function() {\n        const n = fmt.n(), W = fmt.W(), Y = fmt.Y();\n        return Y + (n === 12 && W < 9 ? 1 : n === 1 && W > 9 ? -1 : 0);\n      },\n      /**\n       * Full year: `e.g. 1980...2010`\n       * @return {number}\n       */\n      Y: function() {\n        return vDate.getFullYear();\n      },\n      /**\n       * Last two digits of year: `00...99`\n       * @return {string}\n       */\n      y: function() {\n        return fmt.Y().toString().slice(-2);\n      },\n\n      //////////\n      // TIME //\n      //////////\n      /**\n       * Meridian lower: `am or pm`\n       * @return {string}\n       */\n      a: function() {\n        return fmt.A().toLowerCase();\n      },\n      /**\n       * Meridian upper: `AM or PM`\n       * @return {string}\n       */\n      A: function() {\n        const n = fmt.G() < 12 ? 0 : 1;\n        return vSettings.meridiem[n];\n      },\n      /**\n       * Swatch Internet time: `000..999`\n       * @return {string}\n       */\n      B: function() {\n        const H = vDate.getUTCHours() * HOUR, i = vDate.getUTCMinutes() * 60, s = vDate.getUTCSeconds();\n        return _lpad(Math.floor((H + i + s + HOUR) / 86.4) % 1000, 3);\n      },\n      /**\n       * 12-Hours: `1..12`\n       * @return {number}\n       */\n      g: function() {\n        return fmt.G() % 12 || 12;\n      },\n      /**\n       * 24-Hours: `0..23`\n       * @return {number}\n       */\n      G: function() {\n        return vDate.getHours();\n      },\n      /**\n       * 12-Hours with leading 0: `01..12`\n       * @return {string}\n       */\n      h: function() {\n        return _lpad(fmt.g(), 2);\n      },\n      /**\n       * 24-Hours w/leading 0: `00..23`\n       * @return {string}\n       */\n      H: function() {\n        return _lpad(fmt.G(), 2);\n      },\n      /**\n       * Minutes w/leading 0: `00..59`\n       * @return {string}\n       */\n      i: function() {\n        return _lpad(vDate.getMinutes(), 2);\n      },\n      /**\n       * Seconds w/leading 0: `00..59`\n       * @return {string}\n       */\n      s: function() {\n        return _lpad(vDate.getSeconds(), 2);\n      },\n      /**\n       * Microseconds: `000000-999000`\n       * @return {string}\n       */\n      u: function() {\n        return _lpad(vDate.getMilliseconds() * 1000, 6);\n      },\n\n      //////////////\n      // TIMEZONE //\n      //////////////\n      /**\n       * Timezone identifier: `e.g. Atlantic/Azores, ...`\n       * @return {string}\n       */\n      e: function() {\n        const str = /\\((.*)\\)/.exec(String(vDate))[1];\n        return str || 'Coordinated Universal Time';\n      },\n      /**\n       * DST observed? `0 or 1`\n       * @return {number}\n       */\n      I: function() {\n        const a = new Date(fmt.Y(), 0), c = Date.UTC(fmt.Y(), 0),\n            b = new Date(fmt.Y(), 6), d = Date.UTC(fmt.Y(), 6);\n        return ((a - c) !== (b - d)) ? 1 : 0;\n      },\n      /**\n       * Difference to GMT in hour format: `e.g. +0200`\n       * @return {string}\n       */\n      O: function() {\n        const tzo = vDate.getTimezoneOffset(), a = Math.abs(tzo);\n        return (tzo > 0 ? '-' : '+') + _lpad(Math.floor(a / 60) * 100 + a % 60, 4);\n      },\n      /**\n       * Difference to GMT with colon: `e.g. +02:00`\n       * @return {string}\n       */\n      P: function() {\n        const O = fmt.O();\n        return (`${O.substr(0, 3)}:${O.substr(3, 2)}`);\n      },\n      /**\n       * Timezone abbreviation: `e.g. EST, MDT, ...`\n       * @return {string}\n       */\n      T: function() {\n        const str = (String(vDate).match(self.tzParts) || ['']).pop().replace(self.tzClip, '');\n        return str || 'UTC';\n      },\n      /**\n       * Timezone offset in seconds: `-43200...50400`\n       * @return {number}\n       */\n      Z: function() {\n        return -vDate.getTimezoneOffset() * 60;\n      },\n\n      ////////////////////\n      // FULL DATE TIME //\n      ////////////////////\n      /**\n       * ISO-8601 date\n       * @return {string}\n       */\n      c: function() {\n        return 'Y-m-d\\\\TH:i:sP'.replace(backslash, doFormat);\n      },\n      /**\n       * RFC 2822 date\n       * @return {string}\n       */\n      r: function() {\n        return 'D, d M Y H:i:s O'.replace(backslash, doFormat);\n      },\n      /**\n       * Seconds since UNIX epoch\n       * @return {number}\n       */\n      U: function() {\n        return vDate.getTime() / 1000 || 0;\n      }\n    };\n    return doFormat(vChar, vChar);\n  },\n  formatDate: function(vDate, vFormat) {\n    const self = this;\n    let i, n, len, str, vChar, vDateStr = '';\n    const BACKSLASH = '\\\\';\n    if (typeof vDate === 'string') {\n      vDate = self.parseDate(vDate, vFormat);\n      if (!vDate) {\n        return null;\n      }\n    }\n    if (vDate instanceof Date) {\n      len = vFormat.length;\n      for (i = 0; i < len; i++) {\n        vChar = vFormat.charAt(i);\n        if (vChar === 'S' || vChar === BACKSLASH) {\n          continue;\n        }\n        if (i > 0 && vFormat.charAt(i - 1) === BACKSLASH) {\n          vDateStr += vChar;\n          continue;\n        }\n        str = self.parseFormat(vChar, vDate);\n        if (i !== (len - 1) && self.intParts.test(vChar) && vFormat.charAt(i + 1) === 'S') {\n          n = parseInt(str) || 0;\n          str += self.dateSettings.ordinal(n);\n        }\n        vDateStr += str;\n      }\n      return vDateStr;\n    }\n    return '';\n  }\n};\n/* eslint-enable */\n\nexport default DateFormatter;\n","/**\n * @module gmf.permalink.ShareService\n */\n/**\n * Service to handle the sharing of the permalink.\n * @param {angular.$http} $http Angular http service.\n * @param  {string} gmfShortenerCreateUrl URL for the shortener API\n * @constructor\n * @struct\n * @ngInject\n * @export\n * @ngname gmfShareService\n */\nconst exports = function($http, gmfShortenerCreateUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.gmfShortenerCreateUrl_ = gmfShortenerCreateUrl;\n\n};\n\n\n/**\n * Get a short URL of the permalink by calling the url shortener service.\n * - If no shortener API url have been specified, it returns the permalink itself.\n * @param  {string} url the permalink\n * @return {gmfx.ShortenerAPIResponse|angular.$http.HttpPromise} an object containing the permalink not shortened or\n * the promise attached to the shortener API request\n */\nexports.prototype.getShortUrl = function(url) {\n  const params = /** @type {gmfx.ShortenerAPIRequestParams} */ ({\n    url\n  });\n\n  if (!this.gmfShortenerCreateUrl_) {\n    return {\n      data: {\n        short_url: url\n      },\n      status: 200\n    };\n  }\n\n  return this.postShortUrl_(params);\n};\n\n\n/**\n * Send the short permalink to the email provided\n * - If email is provided, the short permalink will be sent to this email\n * @param  {string} shortUrl the short permalink to send\n * @param  {string} email the email to which the short url must be send\n * @param  {string=} opt_message message for the email\n * @return {angular.$http.HttpPromise} the promise attached to the shortener API request\n */\nexports.prototype.sendShortUrl = function(shortUrl, email, opt_message) {\n  const params = /** @type {gmfx.ShortenerAPIRequestParams} */ ({\n    url: shortUrl,\n    email: email\n  });\n\n  if (opt_message) {\n    params['message'] = opt_message;\n  }\n\n  return this.postShortUrl_(params);\n};\n\n\n/**\n * @param  {gmfx.ShortenerAPIRequestParams} params parameters for the request\n * @return {angular.$http.HttpPromise} the promise attached to the shortener API request\n * @private\n */\nexports.prototype.postShortUrl_ = function(params) {\n  // Override default behavior of $http.post method (sending data in json format)\n  return this.$http_.post(this.gmfShortenerCreateUrl_, $.param(params), {\n    headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n  });\n};\n\n\n/**\n * Max length defined for the complete url.\n * Check IE limits, see {@link http://support.microsoft.com/kb/208427}\n * @constant\n * @type {number}\n */\nexports.URL_MAX_LEN = 2083;\n\n/**\n * Max length defined for the url parth section.\n * Check IE limits, see {@link http://support.microsoft.com/kb/208427}\n * @constant\n * @type {number}\n */\nexports.URL_PATH_MAX_LEN = 2048;\n\nexports.module = angular.module('gmfShareService', []);\n\nexports.module.service('gmfShareService', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.EPSG21781\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\nimport somerc from 'ngeo/proj/somerc.js';\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  `+proj=${somerc}`,\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureLength\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, gettextCatalog, options = /** @type {ngeox.interaction.MeasureOptions} */({})) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = gettextCatalog.getString('Click to continue drawing the line.');\n    const br = document.createElement('br');\n    br.textContent = gettextCatalog.getString('Double-click or click last point to finish.');\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomLineString);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedLength(geom, proj, this.precision, this.format);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureArea\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, gettextCatalog, options = {}) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = gettextCatalog.getString('Click to continue drawing the polygon.');\n    const br = document.createElement('br');\n    br.textContent = gettextCatalog.getString('Double-click or click starting point to finish.');\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('Polygon'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomPolygon);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedArea(geom, proj, this.precision, this.format);\n  const verticesCount = geom.getCoordinates()[0].length;\n  let coord = null;\n  if (verticesCount > 3) {\n    coord = geom.getInteriorPoint().getCoordinates();\n  }\n  callback(output, coord);\n};\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.component\n */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfAuthentication', [\n  gmfAuthenticationService.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoMessageModalComponent.name,\n]);\n\n\n/**\n * @param {angular.JQLite} element Element.\n * @param {angular.Attributes} attrs Attributes.\n * @return {string} Template URL.\n */\nexports.gmfAuthenticationTemplateUrl_ = (element, attrs) => {\n  const templateUrl = attrs['gmfAuthenticationTemplateurl'];\n  return templateUrl !== undefined ? templateUrl :\n    'gmf/authentication';\n};\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/authentication', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfAuthenticationTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfAuthenticationTemplateUrl($element, $attrs, gmfAuthenticationTemplateUrl) {\n  return gmfAuthenticationTemplateUrl($element, $attrs);\n}\n\n\n/**\n * An \"authentication\" component for a GeoMapFish application. With the\n * use of the \"authentication\" service, it features a complete interface\n * for the user to be able to login, logout, change or reset his or her\n * password.  The `gmfUser` angular value is also used to keep track of\n * the user information. When empty, that means that the user isn't connected\n * yet.\n *\n * While not logged in, the \"login\" form is shown, which allows the user to\n * either log in or ask for a password reset.\n *\n * Once logged in, the \"logout\" form is shown, which allows the user to either\n * log out or change his or her password.\n *\n * Example:\n *\n *      <gmf-authentication\n *        gmf-authentication-allow-password-change=\"::true\">\n *      </gmf-authentication>\n *\n * @htmlAttribute {boolean} gmf-authentication-allow-password-reset Whether to\n *     show the password forgotten link. Default to true.\n * @htmlAttribute {boolean|function} gmf-authentication-allow-password-change Whether to\n *     show the change password button. Default to true. You can also specify a gmfx.PasswordValidator Object\n *     to add constraint on user's new password.\n * @htmlAttribute {gmfx.PasswordValidator} gmf-authentication-password-validator A gmfx.PasswordValidator\n *     Object to add constraint on user's new password. The gmf-authentication-allow-password-change. To use\n *     it you must also allow the user to change its password.\n * @htmlAttribute {boolean} gmf-authentication-force-password-change Force the\n *     user to change its password. Default to false. If you set it to true, you\n *     should also allow the user to change its password. Don't add this option alone, use\n *     it in a dedicated authentication component, in a ngeo-modal, directly in\n *     your index.html (see example 2.)\n *\n * Example 2:\n *\n *     <ngeo-modal\n *         ngeo-modal-closable=\"false\"\n *         ng-model=\"mainCtrl.userMustChangeItsPassword()\"\n *         ng-model-options=\"{getterSetter: true}\">\n *       <div class=\"modal-header\">\n *         <h4 class=\"modal-title\">\n *           {{'You must change your password' | translate}}\n *         </h4>\n *       </div>\n *       <div class=\"modal-body\">\n *         <gmf-authentication\n *           gmf-authentication-force-password-change=\"::true\">\n *         </gmf-authentication>\n *       </div>\n *     </ngeo-modal>\n *\n * @ngdoc component\n * @ngname gmfAuthentication\n */\nexports.component_ = {\n  bindings: {\n    'allowPasswordReset': '<?gmfAuthenticationAllowPasswordReset',\n    'allowPasswordChange': '<?gmfAuthenticationAllowPasswordChange',\n    'passwordValidator': '<?gmfAuthenticationPasswordValidator',\n    'forcePasswordChange': '<?gmfAuthenticationForcePasswordChange'\n  },\n  controller: 'GmfAuthenticationController',\n  templateUrl: gmfAuthenticationTemplateUrl\n};\n\nexports.value('gmfAuthenticationTemplateUrl',\n  exports.gmfAuthenticationTemplateUrl_);\n\nexports.component('gmfAuthentication', exports.component_);\n\n\n/**\n * @private\n */\nexports.AuthenticationController_ = class {\n  /**\n   * @private\n   * @param {!angular.JQLite} $element Element.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {gmf.authentication.Service} gmfAuthenticationService GMF Authentication service\n   * @param {gmfx.User} gmfUser User.\n   * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfAuthenticationController\n   */\n  constructor($element, gettextCatalog, gmfAuthenticationService, gmfUser, ngeoNotification) {\n\n    /**\n     * @type {!angular.JQLite}\n     * @private\n     */\n    this.$element_ = $element;\n\n    /**\n     * @type {gmfx.User}\n     * @export\n     */\n    this.gmfUser = gmfUser;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog = gettextCatalog;\n\n    /**\n     * @type {gmf.authentication.Service}\n     * @private\n     */\n    this.gmfAuthenticationService_ = gmfAuthenticationService;\n\n    /**\n     * @type {ngeo.message.Notification}\n     * @private\n     */\n    this.notification_ = ngeoNotification;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordReset;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordChange;\n\n    /**\n     * @type {gmfx.PasswordValidator?}\n     * @export\n     */\n    this.passwordValidator = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.forcePasswordChange;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.changingPassword = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.changePasswordModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.resetPasswordModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.error = false;\n\n    // LOGIN form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.loginVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.pwdVal = '';\n\n    // CHANGE PASSWORD form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.oldPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdConfVal = '';\n  }\n\n  /**\n   * Initialise the controller.\n   */\n  $onInit() {\n    this.allowPasswordReset = this.allowPasswordReset !== false;\n    this.allowPasswordChange = this.allowPasswordChange !== false;\n    this.forcePasswordChange = this.forcePasswordChange === true;\n    if (this.forcePasswordChange) {\n      this.changingPassword = true;\n    }\n  }\n\n\n  // METHODS THAT CALL THE AUTHENTICATION SERVICE METHODS\n\n  /**\n   * Calls the authentication service changePassword method.\n   * @export\n   */\n  changePassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const oldPwd = this.oldPwdVal;\n    const newPwd = this.newPwdVal;\n    const confPwd = this.newPwdConfVal;\n\n    const errors = [];\n    // Validation - Passwords are required.\n    if (oldPwd === '') {\n      errors.push(gettextCatalog.getString('The old password is required.'));\n    }\n    if (newPwd === '') {\n      errors.push(gettextCatalog.getString('The new password is required.'));\n    }\n    if (confPwd === '') {\n      errors.push(gettextCatalog.getString('The password confirmation is required.'));\n    }\n\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      // Default validation - Passwords must be new and must also match.\n      if (oldPwd === newPwd) {\n        errors.push(gettextCatalog.getString('The old and new passwords are the same.'));\n      }\n      if (newPwd !== confPwd) {\n        errors.push(gettextCatalog.getString('The passwords don\\'t match.'));\n      }\n      // Custom validation - If a passwordValidator is set, use it to validate the new password.\n      if (this.passwordValidator) {\n        if (!this.passwordValidator.isPasswordValid(oldPwd)) {\n          errors.push(gettextCatalog.getString(this.passwordValidator.notValidMessage));\n        }\n      }\n\n      if (errors.length) {\n        this.setError_(errors);\n      } else {\n        // Send request with current credentials, which may fail if the old password given is incorrect.\n        const error = gettextCatalog.getString('Incorrect old password.');\n        this.gmfAuthenticationService_.changePassword(oldPwd, newPwd, confPwd).then(\n          () => {\n            this.changePasswordModalShown = true;\n            this.changePasswordReset();\n          },\n          this.setError_.bind(this, error));\n      }\n    }\n  }\n\n  /**\n   * Calls the authentication service login method.\n   * @export\n   */\n  login() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const errors = [];\n    if (this.loginVal === '') {\n      errors.push(gettextCatalog.getString('The username is required.'));\n    }\n    if (this.pwdVal === '') {\n      errors.push(gettextCatalog.getString('The password is required.'));\n    }\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      const error = gettextCatalog.getString('Incorrect credentials or disabled account.');\n      this.gmfAuthenticationService_.login(this.loginVal, this.pwdVal).then(\n        this.resetError_.bind(this),\n        this.setError_.bind(this, error));\n    }\n  }\n\n  /**\n   * Calls the authentication service logout method.\n   * @export\n   */\n  logout() {\n    const gettextCatalog = this.gettextCatalog;\n    const error = gettextCatalog.getString('Could not log out.');\n    this.gmfAuthenticationService_.logout().then(\n      this.resetError_.bind(this),\n      this.setError_.bind(this, error));\n  }\n\n  /**\n   * Calls the authentication service resetPassword method.\n   * @export\n   */\n  resetPassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    if (!this.loginVal) {\n      this.setError_(gettextCatalog.getString('Please, input a login...'));\n      return;\n    }\n\n    const error = gettextCatalog.getString('An error occurred while resetting the password.');\n\n    /**\n     * @param {gmfx.AuthenticationDefaultResponse} respData Response.\n     */\n    const resetPasswordSuccessFn = function(respData) {\n      this.resetPasswordModalShown = true;\n      this.resetError_();\n    }.bind(this);\n\n    this.gmfAuthenticationService_.resetPassword(this.loginVal).then(\n      resetPasswordSuccessFn,\n      this.setError_.bind(this, error)\n    );\n  }\n\n\n  // OTHER METHODS\n\n  /**\n   * Reset the changePassword values and error.\n   * @export\n   */\n  changePasswordReset() {\n    this.resetError_();\n    this.changingPassword = false;\n    this.oldPwdVal = '';\n    this.newPwdVal = '';\n    this.newPwdConfVal = '';\n  }\n\n  /**\n   * @return {boolean} True if the user must change is password and if the \"forcePasswordChange\" option of\n   *    this component is set to true.\n   * @export\n   */\n  userMustChangeItsPassword() {\n    return (this.gmfUser.is_password_changed === false && this.forcePasswordChange);\n  }\n\n  /**\n   * @param {string|Array.<string>} errors Errors.\n   * @private\n   */\n  setError_(errors) {\n    if (this.error) {\n      this.resetError_();\n    }\n\n    this.error = true;\n\n    const container = this.$element_.find('.gmf-authentication-error');\n\n    if (!Array.isArray(errors)) {\n      errors = [errors];\n    }\n\n    errors.forEach(function(error) {\n      this.notification_.notify({\n        msg: error,\n        target: container,\n        type: ngeoMessageMessage.Type.ERROR\n      });\n    }, this);\n  }\n\n  /**\n   * @private\n   */\n  resetError_() {\n    this.notification_.clear();\n    this.error = false;\n  }\n};\n\nexports.controller('GmfAuthenticationController',\n  exports.AuthenticationController_);\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.module\n */\nimport gmfAuthenticationComponent from 'gmf/authentication/component.js';\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfAuthenticationModule', [\n  gmfAuthenticationComponent.name,\n  gmfAuthenticationService.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.BackgroundLayerMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport ngeoLayerHelper from 'ngeo/map/LayerHelper.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function(ngeoLayerHelper) {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? this.ngeoLayerHelper_.getGroupFromMap(map,\n    exports.BACKGROUNDLAYERGROUP_NAME).getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const ZIndex = -200;\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (layer !== null) {\n    layer.setZIndex(ZIndex);\n    this.ngeoLayerHelper_.setZIndexToFirstLevelChildren(layer, ZIndex);\n  }\n\n  const bgGroup = this.ngeoLayerHelper_.getGroupFromMap(map, exports.BACKGROUNDLAYERGROUP_NAME);\n\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      bgGroup.getLayers().setAt(0, layer);\n    } else {\n      bgGroup.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    bgGroup.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * Return the current background layer overlay of a given map, used by the opacity slider.\n * `null` is returned if the map does not have an opacity background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.prototype.getOpacityBgLayer = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? this.ngeoLayerHelper_.getGroupFromMap(map,\n    exports.BACKGROUNDLAYERGROUP_NAME).getLayers().item(1) : null;\n};\n\n/**\n * Set an background layer overlay, used by the opacity slider.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.prototype.setOpacityBgLayer = function(map, layer) {\n  const ZIndex = -100;\n  layer.setOpacity(0);\n  layer.setVisible(true);\n  layer.setZIndex(ZIndex);\n  this.ngeoLayerHelper_.setZIndexToFirstLevelChildren(layer, ZIndex);\n  const bgGroup = this.ngeoLayerHelper_.getGroupFromMap(map, exports.BACKGROUNDLAYERGROUP_NAME);\n\n  const index = bgGroup.getLayers().getArray().indexOf(layer);\n  if (index === -1) {\n    bgGroup.getLayers().push(layer);\n  }\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', [\n  ngeoLayerHelper.module.name\n]);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\n\n/**\n * @const\n */\nexports.BACKGROUNDLAYERGROUP_NAME = 'background';\n\n\nexport default exports;\n","/**\n * @module gmf.backgroundlayerselector.component\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfBackgroundlayerselector', [\n  gmfThemeThemes.module.name,\n  ngeoMapBackgroundLayerMgr.module.name,\n]);\n\n\nexports.value('gmfBackgroundlayerselectorTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfBackgroundlayerselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/backgroundlayerselector';\n  }\n);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/backgroundlayerselector', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfBackgroundlayerselectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfBackgroundlayerselectorTemplateUrl($element, $attrs, gmfBackgroundlayerselectorTemplateUrl) {\n  return gmfBackgroundlayerselectorTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a \"background layer selector\" component.\n *\n * Example:\n *\n *      <gmf-backgroundlayerselector\n *        gmf-backgroundlayerselector-map=\"::ctrl.map\"\n *        gmf-backgroundlayer-opacity-options=\"::ctrl.bgOpacityOptions\"\n *        gmf-backgroundlayerselector-select=\"onBackgroundSelected()\">\n *      </gmf-backgroundlayerselector>\n *\n * Used UI metadata:\n *\n *  * thumbnail: The URL used for the icon.\n *\n * @htmlAttribute {ol.Map=} gmf-backgroundlayerselector-map The map.\n * @htmlAttribute {string} gmf-backgroundlayer-opacity-options The opacity slider options.\n * @htmlAttribute {Function} gmf-backgroundlayerselector-select Function called\n *     when a layer was selected by the user.\n *\n * @ngdoc component\n * @ngname gmfBackgroundlayerselector\n */\nexports.component_ = {\n  controller: 'GmfBackgroundlayerselectorController as ctrl',\n  bindings: {\n    'map': '=gmfBackgroundlayerselectorMap',\n    'opacityOptions': '=gmfBackgroundlayerOpacityOptions',\n    'select': '&?gmfBackgroundlayerselectorSelect'\n  },\n  templateUrl: gmfBackgroundlayerselectorTemplateUrl\n};\n\n\nexports.component('gmfBackgroundlayerselector',\n  exports.component_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer manager.\n * @param {!gmf.theme.Themes} gmfThemes Themes service.\n * @ngInject\n * @ngdoc controller\n * @ngname GmfBackgroundlayerselectorController\n */\nexports.Controller_ = function($scope, ngeoBackgroundLayerMgr, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!string|undefined}\n   * @export\n   */\n  this.opacityOptions;\n\n  /**\n   * Function called when a layer was selected by the user.\n   * @type {?Function}\n   * @export\n   */\n  this.select;\n\n  /**\n   * @type {?ol.layer.Base}\n   * @export\n   */\n  this.bgLayer;\n\n  /**\n   * @type {?Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.bgLayers;\n\n  /**\n   * @type {ol.layer.Base}\n   * @export\n   */\n  this.opacityLayer;\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(gmfThemes, 'change', this.handleThemesChange_, this));\n\n  /**\n   * @type {!ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n\n  this.listenerKeys_.push(olEvents.listen(this.backgroundLayerMgr_, 'change',\n    /**\n     * @param {!ngeox.BackgroundEvent} event Event.\n     */\n    (event) => {\n      this.bgLayer = event.detail.current;\n    }));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.handleThemesChange_();\n};\n\n\n/**\n * Called when the themes changes. Set (or reset) the backround layers.\n * @private\n */\nexports.Controller_.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getBgLayers().then((layers) => {\n    this.bgLayers = layers;\n\n    if (this.opacityOptions !== undefined) {\n      const opacityLayer = layers.find(layer => layer.get('label') === this.opacityOptions);\n      if (opacityLayer !== undefined) {\n        this.setOpacityBgLayer(opacityLayer);\n        this.opacityLayer = opacityLayer;\n\n        // Reorder for the UI the bgArray copy with the opacity layer at the end\n        this.bgLayers = this.bgLayers.slice();\n        const indexOpa = this.bgLayers.findIndex(layer => layer === this.opacityLayer);\n        this.bgLayers.splice(indexOpa, 1);\n        this.bgLayers.push(opacityLayer);\n      }\n    }\n  });\n};\n\n/**\n * Getter/setter for background layer overlay, used by opacity slider.\n * @param {?number} val The opacity.\n * @returns {number} The background layer opacity.\n * @export\n */\nexports.Controller_.prototype.getSetBgLayerOpacity = function(val) {\n  if (val) {\n    this.opacityLayer.setOpacity(val);\n  }\n  return this.opacityLayer.getOpacity();\n};\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @param {boolean=} opt_silent Do not notify listeners.\n * @export\n */\nexports.Controller_.prototype.setLayer = function(layer, opt_silent) {\n  this.bgLayer = layer;\n  this.backgroundLayerMgr_.set(this.map, layer);\n  if (!opt_silent && this.select) {\n    this.select();\n  }\n};\n\n/**\n * Set a background layer overlay, used by the opacity slider.\n * @param {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.Controller_.prototype.setOpacityBgLayer = function(layer) {\n  this.backgroundLayerMgr_.setOpacityBgLayer(this.map, layer);\n};\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('GmfBackgroundlayerselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.Helper\n */\nimport gmfEditingEnumerateAttribute from 'gmf/editing/EnumerateAttribute.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to manipulate or get GMF data\n   * sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {gmf.editing.EnumerateAttribute} gmfEnumerateAttribute The Gmf enumerate\n   *     attribute service.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     source helper service.\n   * @ngdoc service\n   * @ngname gmfDataSourcesHelper\n   * @ngInject\n   */\n  constructor($q, gmfEnumerateAttribute, ngeoDataSourcesHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {gmf.editing.EnumerateAttribute}\n     * @private\n     */\n    this.gmfEnumerateAttribute_ = gmfEnumerateAttribute;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {gmfx.datasource.DataSources}\n     * @protected\n     */\n    this.collection_;\n\n    /**\n     * @type {Object.<number, gmf.datasource.OGC>}\n     * @protected\n     */\n    this.cache_;\n  }\n\n  /**\n   * @return {gmfx.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return /** @type {gmfx.datasource.DataSources} */ (\n      this.ngeoDataSourcesHelper_.collection\n    );\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?gmf.datasource.OGC} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return /** @type {?gmf.datasource.OGC} */ (\n      this.ngeoDataSourcesHelper_.getDataSource(id)\n    );\n  }\n\n  /**\n   * @param {gmf.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  prepareFiltrableDataSource(dataSource) {\n\n    const prepareFiltrableDataSourceDefer = this.q_.defer();\n\n    // (1) Get the attributes. The first time, they will be asynchronously\n    //     obtained using a WFS DescribeFeatureType request.\n    this.ngeoDataSourcesHelper_.getDataSourceAttributes(\n      dataSource\n    ).then((attributes) => {\n      // (2) The attribute names that are in the `enumeratedAttributes`\n      //     metadata are the ones that need to have their values fetched.\n      //     Do that once then set the type to SELECT and the choices.\n      const meta = dataSource.gmfLayer.metadata || {};\n      const enumAttributes = meta.enumeratedAttributes;\n      if (enumAttributes && enumAttributes.length) {\n        const promises = [];\n        for (const attribute of attributes) {\n          if (olArray.includes(enumAttributes, attribute.name) &&\n             attribute.type !== ngeoFormatAttributeType.SELECT &&\n             (!attribute.choices || !attribute.choices.length)) {\n            promises.push(\n              this.gmfEnumerateAttribute_.getAttributeValues(\n                dataSource, attribute.name\n              ).then((values) => {\n                const choices = values.map(choice => choice.value);\n                attribute.type = ngeoFormatAttributeType.SELECT;\n                attribute.choices = choices;\n              })\n            );\n          }\n        }\n        return this.q_.all(promises).then(\n          prepareFiltrableDataSourceDefer.resolve(dataSource)\n        );\n      } else {\n        prepareFiltrableDataSourceDefer.resolve(dataSource);\n      }\n    });\n\n    return prepareFiltrableDataSourceDefer.promise;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourcesHelper', [\n  ngeoDatasourceHelper.module.name,\n  gmfEditingEnumerateAttribute.module.name,\n]);\nexports.module.service('gmfDataSourcesHelper', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.OGC\n */\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\nconst exports = class extends ngeoDatasourceOGC {\n\n  /**\n   * A `gmf.datasource.OGC` extends a `ngeo.datasource.OGC` and\n   * adds some properties that are proper to GMF only.\n   *\n   * @struct\n   * @param {gmfx.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {gmfThemes.GmfLayer}\n     * @private\n     */\n    this.gmfLayer_ = options.gmfLayer;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {gmfThemes.GmfLayer} GMF layer\n   * @export\n   */\n  get gmfLayer() {\n    return this.gmfLayer_;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.WFSAliases\n */\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\n\nconst exports = class {\n\n  /**\n   * Service that provides methods to get additional information and actions\n   * when performing WFS requests.\n   *\n   * @struct\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     source helper service.\n   * @ngdoc service\n   * @ngname gmfWFSAliases\n   * @ngInject\n   */\n  constructor(ngeoDataSourcesHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n  }\n\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @export\n   */\n  describe(dataSource) {\n    // Only QGIS Server supports WFS aliases\n    if (dataSource.ogcServerType === 'qgisserver' && !dataSource.attributes) {\n      // Trigger an additional WFS DescribeFeatureType request to get\n      // datasource attributes, including aliases.\n      this.ngeoDataSourcesHelper_.getDataSourceAttributes(dataSource);\n    }\n  }\n};\n\n\nexports.module = angular.module('gmfDatasourceWFSAliases', [\n  ngeoDatasourceHelper.module.name,\n]);\nexports.module.service('gmfWFSAliases', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.Manager\n */\nimport gmfDatasourceOGC from 'gmf/datasource/OGC.js';\nimport gmfDatasourceWFSAliases from 'gmf/datasource/WFSAliases.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\n\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\n\nconst exports = class {\n\n  /**\n   * The GeoMapFish DataSources Manager is responsible of listenening to the\n   * c2cgeoportal's themes to create instances of `ngeo.datasource.DataSource`\n   * objects with the layer definitions found and push them in the\n   * `ngeox.datasource.DataSources` collection. The Manager must be initialized\n   * with the app's map using the setDatasourcseMap() method.\n   *\n   * When changing theme, these data sources are cleared then re-created.\n   *\n   * @struct\n   * @param {angular.$q} $q Angular q service\n   * @param {!angular.Scope} $rootScope Angular rootScope.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n   * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n   * @param {!ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer\n   *     manager.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   *     data sources service.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @param {!gmf.datasource.WFSAliases} gmfWFSAliases Gmf WFS aliases service.\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfDataSourcesManager\n   */\n  constructor($q, $rootScope, $timeout, gmfThemes, gmfTreeManager,\n    ngeoBackgroundLayerMgr, ngeoDataSources, ngeoLayerHelper, ngeoRuleHelper,\n    ngeoWMSTime, gmfWFSAliases\n  ) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    /**\n     * @type {gmf.layertree.TreeManager}\n     * @private\n     */\n    this.gmfTreeManager_ = gmfTreeManager;\n\n    /**\n     * @type {!ngeo.map.BackgroundLayerMgr}\n     * @private\n     */\n    this.ngeoBackgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * The collection of DataSources from ngeo, which gets updated by this\n     * service. When the theme changes, first we remove all data sources, then\n     * the 'active' data source are added here.\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n    /**\n     * @type {!gmf.datasource.WFSAliases}\n     * @private\n     */\n    this.gmfWFSAliases_ = gmfWFSAliases;\n\n\n    // === Inner properties ===\n\n    /**\n     * While loading a new theme, this is where all of the created data sources\n     * are put using the id as key for easier find in the future.\n     * @type {Object.<number, gmf.datasource.OGC>}\n     * @private\n     */\n    this.dataSourcesCache_ = {};\n\n    /**\n     * A reference to the dimensions object.\n     * @type {ngeox.Dimensions|undefined}\n     * @private\n     */\n    this.dimensions_;\n\n    /**\n     * The cache of layertree leaf controller, i.e. those that are added to\n     * the tree manager. When treeCtrl is added in this cache, it's given\n     * a reference to its according data source.\n     * @type {gmfx.datasource.ManagerTreeCtrlCache}\n     * @private\n     */\n    this.treeCtrlCache_ = {};\n\n    /**\n     * The function to call to unregister the `watchCollection` event on\n     * the root layer tree controller children.\n     * @type {?Function}\n     * @private\n     */\n    this.treeCtrlsUnregister_ = null;\n\n    // === Events ===\n\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleNgeoBackgroundLayerChange_,\n      this\n    );\n    olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n  }\n\n\n  /**\n   * Set the map to use with your datasources.\n   * @param {!ol.Map} map The map to use.\n   * @export\n   */\n  setDatasourceMap(map) {\n    this.ngeoDataSources_.map = map;\n  }\n\n  /**\n   * @param {!ngeox.Dimensions} dimensions A reference to the dimensions\n   *     object to keep a reference of in this service.\n   */\n  setDimensions(dimensions) {\n    this.dimensions_ = dimensions;\n  }\n\n  /**\n   * Called when the themes change. Remove any existing data sources first,\n   * then create and add data sources from the loaded themes.\n   * @private\n   */\n  handleThemesChange_() {\n    // (1) Clear\n    this.clearDataSources_();\n    if (this.treeCtrlsUnregister_) {\n      this.treeCtrlsUnregister_();\n    }\n    this.clearTreeCtrlCache_();\n\n    // (2) Re-create data sources and event listeners\n    this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n      const promiseThemes = this.gmfThemes_.getThemesObject().then((themes) => {\n        // Create a DataSources for each theme\n        for (const theme of themes) {\n          for (const child of theme.children) {\n            googAsserts.assert(child);\n            this.createDataSource_(child, child, ogcServers);\n          }\n        }\n      });\n\n      const promiseBgLayers = this.gmfThemes_.getBackgroundLayersObject().then(\n        (backgroundLayers) => {\n          // Create a DataSource for each background layer\n          for (const backgroundLayer of backgroundLayers) {\n            this.createDataSource_(null, backgroundLayer, ogcServers);\n          }\n        }\n      );\n\n      // Then add the data sources that are active in the ngeo collection\n      this.q_.all([promiseThemes, promiseBgLayers]).then(() => {\n        this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(\n          () => {\n            if (this.gmfTreeManager_.rootCtrl) {\n              return this.gmfTreeManager_.rootCtrl.children;\n            }\n          },\n          this.handleTreeManagerRootChildrenChange_.bind(this)\n        );\n      });\n    });\n  }\n\n  /**\n   * Called when the list of tree controllers within the tree manager\n   * root controller changes. In other words, this method is called\n   * after nodes are being added added or removed from the tree,\n   * i.e. from the child nodes collection.\n   *\n   * A timeout is required  because the collection event is fired before\n   * the leaf nodes are created and they are the ones we're looking for here.\n   *\n   * This method handles the registration/unregistration of tree nodes that\n   * are added or removed, pushing it to the cache or removing it from the\n   * cache.\n   *\n   * @param {Array.<ngeo.layertree.Controller>|undefined} value List of tree\n   *     controllers.\n   * @private\n   */\n  handleTreeManagerRootChildrenChange_(value) {\n\n    this.timeout_(() => {\n\n      // (1) No need to do anything if the value is not set\n      if (!value) {\n        return;\n      }\n\n      // (2) Collect 'leaf' treeCtrls\n      const newTreeCtrls = [];\n      const visitor = (treeCtrls, treeCtrl) => {\n        const node = /** @type {!gmfThemes.GmfGroup|!gmfThemes.GmfLayer} */ (\n          treeCtrl.node);\n        const children = node.children;\n        if (!children) {\n          treeCtrls.push(treeCtrl);\n        }\n      };\n      for (let i = 0, ii = value.length; i < ii; i++) {\n        value[i].traverseDepthFirst(visitor.bind(this, newTreeCtrls));\n      }\n\n      // (3) Add new 'treeCtrls'\n      for (let i = 0, ii = newTreeCtrls.length; i < ii; i++) {\n        const newTreeCtrl = newTreeCtrls[i];\n        const cacheItem = this.getTreeCtrlCacheItem_(newTreeCtrl);\n        if (!cacheItem) {\n          this.addTreeCtrlToCache_(newTreeCtrl);\n        }\n      }\n\n      // (4) Remove treeCtrls that are no longer in the newTreeCtrl\n      const cache = this.treeCtrlCache_;\n      for (const id in this.treeCtrlCache_) {\n        const item = cache[id];\n        if (!newTreeCtrls.includes(item.treeCtrl)) {\n          this.removeTreeCtrlCacheItem_(item);\n        }\n      }\n    });\n  }\n\n  /**\n   * Remove the data sources from the ngeo collection that are in the cache,\n   * i.e. those created by this service, then clear the cache.\n   * @private\n   */\n  clearDataSources_() {\n\n    // (1) Remove data sources from ngeo collection\n    const dataSources = this.dataSources_.getArray();\n    for (let i = dataSources.length - 1, ii = 0; i >= ii; i--) {\n      if (this.dataSourcesCache_[dataSources[i].id]) {\n        // Use the `remove` method of the `ol.Collection` object for it\n        // to update its length accordingly and trigger the REMOVE event as\n        // well.\n        this.dataSources_.remove(dataSources[i]);\n      }\n    }\n\n    // (2) Clear the cache\n    olObj.clear(this.dataSourcesCache_);\n  }\n\n  /**\n   * Create a data source using the information on the node, group node\n   * and OGC servers. If the node has children, then we loop in those to get\n   * leaf nodes. Only leaf nodes end up creating a data source. If a data\n   * source with the same id already exists, then the node is skipped.\n   *\n   * Once a data source is created, it is added to the data sources cache.\n   *\n   * @param {gmfThemes.GmfGroup} firstLevelGroup The first level group node.\n   * @param {!gmfThemes.GmfGroup|!gmfThemes.GmfLayer} node The node, which\n   *     may have children or not.\n   * @param {!gmfThemes.GmfOgcServers} ogcServers OGC servers.\n   * @private\n   */\n  createDataSource_(firstLevelGroup, node, ogcServers) {\n\n    const children = node.children;\n\n    // (1) Group node (node that has children). Loop in the children\n    //     individually and create a data source for each one of them. The\n    //     group node itself is **skipped**.\n    if (children) {\n      for (const child of children) {\n        googAsserts.assert(child);\n        this.createDataSource_(firstLevelGroup, child, ogcServers);\n      }\n      return;\n    }\n\n    // From there on, the node is a layer node.\n    const gmfLayer = /** @type gmfThemes.GmfLayer */ (node);\n\n    // (2) Skip layer node if a data source with the same id exists\n    const id = olBase.getUid(gmfLayer);\n    if (this.dataSourcesCache_[id]) {\n      return;\n    }\n\n    // From there on, a data source will be created\n    const meta = gmfLayer.metadata;\n    const ogcType = gmfLayer.type;\n    let maxResolution;\n    let minResolution;\n    let ogcLayers;\n    let ogcServer;\n    let wmtsLayer;\n    let wmtsUrl;\n    let ogcImageType;\n    let timeProperty;\n\n    if (ogcType === gmfThemeThemes.NodeType.WMTS) {\n      // (3) Manage WMTS\n      const gmfLayerWMTS = /** @type {gmfThemes.GmfLayerWMTS} */ (gmfLayer);\n\n      // Common options for WMTS\n      wmtsLayer = gmfLayerWMTS.layer;\n      wmtsUrl = gmfLayerWMTS.url;\n      maxResolution = meta.maxResolution;\n      minResolution = meta.minResolution;\n\n      // OGC Layers\n      const layers = meta.queryLayers || meta.wmsLayers;\n      if (layers) {\n        ogcLayers = layers.split(',').map((layer) => {\n          return {\n            maxResolution: maxResolution,\n            minResolution: minResolution,\n            name: layer,\n            queryable: true\n          };\n        });\n      }\n\n      // OGC Server\n      if (meta.ogcServer && ogcServers[meta.ogcServer]) {\n        ogcServer = ogcServers[meta.ogcServer];\n      }\n      ogcImageType = gmfLayerWMTS.imageType;\n    } else if (ogcType === gmfThemeThemes.NodeType.WMS) {\n      // (4) Manage WMS\n      const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n      // Common options for WMS\n      maxResolution = gmfLayerWMS.maxResolutionHint;\n      minResolution = gmfLayerWMS.minResolutionHint;\n\n      // OGC Layers\n      ogcLayers = gmfLayerWMS.childLayers.map((childLayer) => {\n        return {\n          maxResolution: childLayer.maxResolutionHint,\n          minResolution: childLayer.minResolutionHint,\n          name: childLayer.name,\n          queryable: childLayer.queryable\n        };\n      });\n\n      // OGC Server\n      const ogcServerName = (!firstLevelGroup || firstLevelGroup.mixed) ?\n        gmfLayerWMS.ogcServer : firstLevelGroup.ogcServer;\n      googAsserts.assert(ogcServerName);\n      ogcServer = ogcServers[ogcServerName];\n      ogcImageType = ogcServer.imageType;\n\n      // Time property\n      if (gmfLayerWMS.time) {\n        timeProperty = gmfLayerWMS.time;\n      } else if (firstLevelGroup && firstLevelGroup.time) {\n        timeProperty = firstLevelGroup.time;\n      }\n    }\n\n    // (5) ogcServer\n    const ogcServerType = ogcServer ? ogcServer.type : undefined;\n    const wmsIsSingleTile = ogcServer ? ogcServer.isSingleTile : undefined;\n    const wfsUrl = ogcServer && ogcServer.wfsSupport ?\n      ogcServer.urlWfs : undefined;\n    const wmsUrl = ogcServer ? ogcServer.url : undefined;\n\n    let wfsOutputFormat = ngeoDatasourceOGC.WFSOutputFormat.GML3;\n    // qgis server only supports GML2 output\n    if (ogcServerType === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      wfsOutputFormat = ngeoDatasourceOGC.WFSOutputFormat.GML2;\n    }\n\n    // (6) Snapping\n    const snappable = !!meta.snappingConfig;\n    const snappingTolerance = meta.snappingConfig ?\n      meta.snappingConfig.tolerance : undefined;\n    const snappingToEdges = meta.snappingConfig ?\n      meta.snappingConfig.edge : undefined;\n    const snappingToVertice = meta.snappingConfig ?\n      meta.snappingConfig.vertex : undefined;\n\n    // (7) Dimensions\n    const dimensions = this.dimensions_;\n    const dimensionsConfig = node.dimensions || firstLevelGroup.dimensions;\n\n    // (8) Time values (lower or lower/upper)\n    let timeLowerValue;\n    let timeUpperValue;\n    if (timeProperty) {\n      const timeValues = this.ngeoWMSTime_.getOptions(timeProperty)['values'];\n      if (Array.isArray(timeValues)) {\n        timeLowerValue = timeValues[0];\n        timeUpperValue = timeValues[1];\n      } else {\n        timeLowerValue = timeValues;\n      }\n    }\n\n    // (9) Common options\n    const copyable = meta.copyable;\n    const identifierAttribute = meta.identifierAttributeField;\n    const name = gmfLayer.name;\n    const timeAttributeName = meta.timeAttribute;\n    const visible = meta.isChecked === true;\n\n    // Create the data source and add it to the cache\n    this.dataSourcesCache_[id] = new gmfDatasourceOGC({\n      copyable,\n      dimensions,\n      dimensionsConfig,\n      gmfLayer,\n      id,\n      identifierAttribute,\n      maxResolution,\n      minResolution,\n      name,\n      ogcImageType,\n      ogcLayers,\n      ogcServerType,\n      ogcType,\n      snappable,\n      snappingTolerance,\n      snappingToEdges,\n      snappingToVertice,\n      timeAttributeName,\n      timeLowerValue,\n      timeProperty,\n      timeUpperValue,\n      visible,\n      wfsOutputFormat,\n      wfsUrl,\n      wmsIsSingleTile,\n      wmsUrl,\n      wmtsLayer,\n      wmtsUrl\n    });\n  }\n\n  /**\n   * If the given Layertree controller is a 'leaf', add it to the cache.\n   * Also, set its according data source. Finally, add the data source to\n   * the ngeo collection.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to add\n   * @private\n   */\n  addTreeCtrlToCache_(treeCtrl) {\n\n    const id = olBase.getUid(treeCtrl.node);\n    const dataSource = this.dataSourcesCache_[id];\n    googAsserts.assert(dataSource, 'DataSource should be set');\n    treeCtrl.setDataSource(dataSource);\n\n    const stateWatcherUnregister = this.rootScope_.$watch(\n      () => treeCtrl.getState(),\n      this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n    );\n\n    const filterRulesWatcherUnregister = this.rootScope_.$watch(\n      () => {\n        const hasFilters = dataSource.filterRules !== null;\n        const isVisible = dataSource.visible;\n        return hasFilters && isVisible;\n      },\n      this.handleDataSourceFilterRulesChange_.bind(this, dataSource)\n    );\n\n    // Watch for time values change to update the WMS layer\n    let timeLowerValueWatcherUnregister;\n    let timeUpperValueWatcherUnregister;\n    let wmsLayer;\n    if (dataSource.timeProperty &&\n        dataSource.ogcType === ngeoDatasourceOGC.Type.WMS\n    ) {\n      timeLowerValueWatcherUnregister = this.rootScope_.$watch(\n        () => dataSource.timeLowerValue,\n        this.handleDataSourceTimeValueChange_.bind(this, dataSource)\n      );\n\n      if (dataSource.timeProperty.mode === 'range') {\n        timeUpperValueWatcherUnregister = this.rootScope_.$watch(\n          () => dataSource.timeUpperValue,\n          this.handleDataSourceTimeValueChange_.bind(this, dataSource)\n        );\n      }\n\n      wmsLayer = googAsserts.assertInstanceof(\n        gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl),\n        olLayerImage\n      );\n    }\n\n    this.treeCtrlCache_[id] = {\n      filterRulesWatcherUnregister,\n      stateWatcherUnregister,\n      timeLowerValueWatcherUnregister,\n      timeUpperValueWatcherUnregister,\n      treeCtrl,\n      wmsLayer\n    };\n\n    this.dataSources_.push(dataSource);\n\n    this.gmfWFSAliases_.describe(dataSource);\n  }\n\n  /**\n   * Remove a treeCtrl cache item. Unregister event listeners and remove the\n   * data source from the ngeo collection.\n   *\n   * @param {gmfx.datasource.ManagerTreeCtrlCacheItem} item Layertree\n   *     controller cache item\n   * @private\n   */\n  removeTreeCtrlCacheItem_(item) {\n\n    // (1) Remove data source\n    const dataSource = item.treeCtrl.getDataSource();\n    googAsserts.assert(dataSource, 'DataSource should be set');\n    this.dataSources_.remove(dataSource);\n\n    // (2) Remove item and clear event listeners\n    item.treeCtrl.setDataSource(null);\n    item.filterRulesWatcherUnregister();\n    item.stateWatcherUnregister();\n    if (item.timeLowerValueWatcherUnregister) {\n      item.timeLowerValueWatcherUnregister();\n    }\n    if (item.timeUpperValueWatcherUnregister) {\n      item.timeUpperValueWatcherUnregister();\n    }\n    delete this.treeCtrlCache_[olBase.getUid(item.treeCtrl.node)];\n  }\n\n  /**\n   * Clears the layer tree controller cache. At the same time, each item gets\n   * its data source reference unset and state watcher unregistered.\n   *\n   * The data source gets also removed from the ngeo data sources collection.\n   * @private\n   */\n  clearTreeCtrlCache_() {\n    for (const id in this.treeCtrlCache_) {\n      this.removeTreeCtrlCacheItem_(this.treeCtrlCache_[id]);\n    }\n  }\n\n  /**\n   * Called when the state of a 'leaf' layertree controller changes.\n   * Update the `visible` property of the data source according to the\n   * state of the layertree controller.\n   *\n   * Note: The possible states can only be 'on' or 'off', because the\n   * layertree controller being a 'leaf'.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n   * @param {string|undefined} newVal New state value\n   * @private\n   */\n  handleTreeCtrlStateChange_(treeCtrl, newVal) {\n    const treeDataSource = treeCtrl.getDataSource();\n    googAsserts.assert(treeDataSource, 'DataSource should be set');\n    const visible = newVal === 'on';\n    treeDataSource.visible = visible;\n\n    // In GMF, multiple data sources can be combined into one ol.layer.Layer\n    // object. When changing the state of a data source, we need to make\n    // sure that the FILTER param match order of the current LAYERS param.\n    //\n    // Note: we only need to do this ONCE, as there can be only one\n    // data source being filtered at a time\n    const siblingDataSourceIds = gmfLayertreeSyncLayertreeMap.getLayer(\n      treeCtrl).get('querySourceIds');\n    if (Array.isArray(siblingDataSourceIds)) {\n      const dataSources = this.dataSources_.getArray();\n      for (const dataSource of dataSources) {\n        if (dataSource instanceof gmfDatasourceOGC &&\n            dataSource.filterRules !== null &&\n            dataSource.id !== treeDataSource.id &&\n            siblingDataSourceIds.includes(dataSource.id) &&\n            dataSource.visible\n        ) {\n          this.handleDataSourceFilterRulesChange_(dataSource, true);\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Returns a layertree controller cache item, if it exists.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n   * @return {gmfx.datasource.ManagerTreeCtrlCacheItem} Cache item\n   * @private\n   */\n  getTreeCtrlCacheItem_(treeCtrl) {\n    return this.treeCtrlCache_[olBase.getUid(treeCtrl.node)] || null;\n  }\n\n  /**\n   * Called when both the 'visible' and 'filterRules' properties of a data\n   * source change.\n   *\n   * If the data source is filtrable, then make sure that when it gets rules\n   * set to apply them as OGC filters to the OpenLayers layer, more precisely\n   * as a `FILTER` parameter in the layer's source parameters.\n   *\n   * @param {!gmf.datasource.OGC} dataSource Data source.\n   * @param {boolean} value Value.\n   * @private\n   */\n  handleDataSourceFilterRulesChange_(dataSource, value) {\n\n    // Skip data sources that are not filtrables OR those that do not have\n    // the WMS ogcType, i.e. those that do not have an OpenLayers layer\n    // to update\n    if (dataSource.filtrable !== true ||\n        dataSource.ogcType !== ngeoDatasourceOGC.Type.WMS\n    ) {\n      return;\n    }\n\n    const id = olBase.getUid(dataSource.gmfLayer);\n    const item = this.treeCtrlCache_[id];\n    googAsserts.assert(item);\n    const treeCtrl = item.treeCtrl;\n\n    const layer = gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl);\n    googAsserts.assert(\n      layer instanceof olLayerImage ||\n      layer instanceof olLayerTile\n    );\n\n    const source = layer.getSource();\n    googAsserts.assert(\n      source instanceof olSourceImageWMS ||\n      source instanceof olSourceTileWMS\n    );\n\n    const filtrableLayerName = dataSource.getFiltrableOGCLayerName();\n    const projCode = treeCtrl.map.getView().getProjection().getCode();\n    const filterString = dataSource.visible ?\n      this.ngeoRuleHelper_.createFilterString({\n        dataSource,\n        projCode\n      }) :\n      null;\n\n    const filterParam = 'FILTER';\n    let filterParamValue = null;\n\n    if (filterString) {\n      const params = source.getParams();\n      const layersParam = params['LAYERS'];\n      const layersList = layersParam.split(',');\n      googAsserts.assert(layersList.length >= 1);\n\n      if (layersList.length === 1) {\n        // When there's only one layer in the `LAYERS` parameters, then\n        // the filter string is given as-is.\n        filterParamValue = filterString;\n      } else {\n        // When there's more then one layer, then each filter must be wrapped\n        // between parenthesis and the order must also match the `LAYERS`\n        // parameter as well.\n        const filterParamValues = [];\n        for (let i = 0, ii = layersList.length; i < ii; i++) {\n          if (layersList[i] === filtrableLayerName) {\n            filterParamValues.push(`(${filterString})`);\n          } else {\n            filterParamValues.push('()');\n          }\n        }\n        filterParamValue = filterParamValues.join('');\n      }\n    }\n\n    source.updateParams({\n      [filterParam]: filterParamValue\n    });\n  }\n\n  /**\n   * Called when either the `timeLowerValue` or `timeUpperValue` property of a\n   * data source changes.\n   *\n   * Get the range value from the data source, then update the WMS layer\n   * thereafter.\n   *\n   * @param {!gmf.datasource.OGC} dataSource Data source.\n   * @private\n   */\n  handleDataSourceTimeValueChange_(dataSource) {\n\n    const id = olBase.getUid(dataSource.gmfLayer);\n    const item = this.treeCtrlCache_[id];\n    googAsserts.assert(item);\n    const wmsLayer = googAsserts.assert(item.wmsLayer);\n    const wmsSource = googAsserts.assertInstanceof(\n      wmsLayer.getSource(),\n      olSourceImageWMS\n    );\n\n    const timeProperty = googAsserts.assert(dataSource.timeProperty);\n    let timeParam;\n    const range = dataSource.timeRangeValue;\n    if (range) {\n      timeParam = this.ngeoWMSTime_.formatWMSTimeParam(timeProperty, range);\n    }\n\n    // No need to update the TIME param if already the same value;\n    const params = wmsSource.getParams();\n    const currentTimeParam = params['TIME'];\n    if (currentTimeParam === timeParam) {\n      return;\n    }\n\n    // The `timeParam` can be undefined, which means that the TIME property\n    // gets reset.\n    this.ngeoLayerHelper_.updateWMSLayerState(\n      wmsLayer,\n      wmsSource.getParams()['LAYERS'],\n      timeParam\n    );\n  }\n\n  /**\n   * Called when the background layer changes. Add/Remove the according data\n   * sources to/from the ngeo data sources collection. Update the data source\n   * `visible` property as well.\n   *\n   * The `querySourceIds` property in the layer is used to determine the\n   * data sources that are bound to the layer.\n   *\n   * @param {!ngeox.BackgroundEvent} evt Event.\n   * @private\n   */\n  handleNgeoBackgroundLayerChange_(evt) {\n\n    const previousBackgroundLayer = evt.detail.previous;\n    const currentBackgroundLayer = evt.detail.current;\n    const cache = this.dataSourcesCache_;\n\n    // Remove data sources linked to previous background layer\n    if (previousBackgroundLayer) {\n      const ids = previousBackgroundLayer.get('querySourceIds');\n      if (Array.isArray(ids)) {\n        for (const id of ids) {\n          const dataSource = cache[id];\n          if (dataSource) {\n            dataSource.visible = false;\n            this.dataSources_.remove(dataSource);\n          }\n        }\n      }\n    }\n\n    // Add data sources linked to current background layer\n    if (currentBackgroundLayer) {\n      const ids = currentBackgroundLayer.get('querySourceIds');\n      if (Array.isArray(ids)) {\n        for (const id of ids) {\n          const dataSource = cache[id];\n          if (dataSource) {\n            dataSource.visible = true;\n            this.dataSources_.push(dataSource);\n          }\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourcesManager', [\n  gmfDatasourceWFSAliases.module.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoDatasourceDataSources.module.name,\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfDataSourcesManager', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.module\n */\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfDatasourceHelper from 'gmf/datasource/Helper.js';\nimport gmfDatasourceManager from 'gmf/datasource/Manager.js';\nimport gmfDatasourceWFSAliases from 'gmf/datasource/WFSAliases.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDatasourceModule', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfDatasourceHelper.module.name,\n  gmfDatasourceManager.module.name,\n  gmfDatasourceWFSAliases.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Disclaimer\n */\nimport 'bootstrap/js/alert.js';\nimport googAsserts from 'goog/asserts.js';\n\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * Provides methods to display any sort of messages, disclaimers, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @ngdoc service\n * @ngname ngeoDisclaimer\n * @ngInject\n */\nconst exports = function($sce, gettextCatalog, ngeoCreatePopup) {\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @private\n   * @type {ngeox.PopupFactory}\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  ngeoMessageMessage.call(this);\n\n  const container = angular.element('<div class=\"ngeo-disclaimer\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * Cache of messages.\n   * @type {Object.<string, angular.JQLite|ngeo.message.Popup>}\n   * @private\n   */\n  this.messages_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Show disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.alert = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Close disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.close = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.closeMessage_, this);\n};\n\n\n/**\n * Show the message.\n * @param {ngeox.Message} message Message.\n * @protected\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const gettextCatalog = this.gettextCatalog_;\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  // No need to do anything if message already exist.\n  const uid = this.getMessageUid_(message);\n  if (this.messages_[uid] !== undefined) {\n    return;\n  }\n\n  const showInPopup = message.popup === true;\n\n  if (showInPopup) {\n    // display the message in a popup, i.e. using the ngeo create popup\n    const popup = this.createPopup_();\n    const content = this.sce_.trustAsHtml(message.msg);\n    popup.open({\n      autoDestroy: true,\n      content: content,\n      title: '&nbsp;'\n    });\n\n    // Watch the open property\n    popup.scope.$watch('open', (newVal, oldVal) => {\n      if (!newVal) {\n        this.closeMessage_(message);\n      }\n    });\n\n    this.messages_[uid] =  popup;\n\n  } else {\n    // display the message using a boostrap dismissible alert\n    const classNames = ['alert', 'fade', 'alert-dismissible'];\n    switch (type) {\n      case ngeoMessageMessage.Type.ERROR:\n        classNames.push('alert-danger');\n        break;\n      case ngeoMessageMessage.Type.INFORMATION:\n        classNames.push('alert-info');\n        break;\n      case ngeoMessageMessage.Type.SUCCESS:\n        classNames.push('alert-success');\n        break;\n      case ngeoMessageMessage.Type.WARNING:\n        classNames.push('alert-warning');\n        break;\n      default:\n        break;\n    }\n\n    const el = angular.element(\n      `<div role=\"alert\" class=\"${classNames.join(' ')}\"></div>`);\n    const button = angular.element(\n      `<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"${\n        gettextCatalog.getString('Close')\n      }\"><span aria-hidden=\"true\" class=\"fa fa-times\"></span></button>`);\n    const msg = angular.element('<span />').html(message.msg);\n    el.append(button).append(msg);\n\n    let container;\n\n    if (message.target) {\n      container = angular.element(message.target);\n    } else {\n      container = this.container_;\n    }\n\n    container.append(el);\n    el.addClass('in');\n\n    // Listen when the message gets closed to cleanup the cache of messages\n    el.on('closed.bs.alert', () => {\n      this.closeMessage_(message);\n    });\n\n    this.messages_[uid] =  el;\n  }\n};\n\n\n/**\n * @param {ngeox.Message} message Message.\n * @return {string} The uid.\n * @private\n */\nexports.prototype.getMessageUid_ = function(message) {\n  return `${message.msg}-${message.type}`;\n};\n\n\n/**\n * Close the message.\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.closeMessage_ = function(message) {\n  const uid = this.getMessageUid_(message);\n  const obj = this.messages_[uid];\n\n  // (1) No need to do anything if message doesn't exist\n  if (obj === undefined) {\n    return;\n  }\n\n  // (2) Close message (popup or alert)\n  if (obj instanceof ngeoMessagePopup) {\n    // (2.1) Close popup, if not already closed\n    if (obj.getOpen()) {\n      obj.setOpen(false);\n    }\n  } else {\n    // (2.2) Check if the message hasn't been closed using the UI, i.e. by\n    //       clicking the close button. If not, then close it.\n    if (obj.hasClass('in')) {\n      obj.alert('close');\n    }\n  }\n\n  // (3) Remove message from cache since it's closed now.\n  delete this.messages_[uid];\n};\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoDisclaimer', [\n  ngeoMessagePopup.module.name,\n]);\n\nexports.module.service('ngeoDisclaimer', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.disclaimer.component\n */\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageDisclaimer from 'ngeo/message/Disclaimer.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\n\nimport 'angular-sanitize';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfDisclaimer', [\n  'ngSanitize',\n  ngeoMapLayerHelper.module.name,\n  ngeoMessageDisclaimer.module.name,\n  ngeoMiscEventHelper.module.name,\n]);\n\n\n/**\n * @constructor\n * @private\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$sce} $sce Angular sce service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @param {!ngeo.message.Disclaimer} ngeoDisclaimer Ngeo Disclaimer service.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo Event Helper.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisclaimerController\n */\nexports.Controller_ = function($element, $scope, $sce, $timeout,\n  gettextCatalog, ngeoCreatePopup, ngeoDisclaimer, ngeoEventHelper, ngeoLayerHelper) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.external;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.popup;\n\n  /**\n   * Visibility that is set to true when a new msg is there.\n   * @type {boolean}\n   * @export\n   */\n  this.visibility = false;\n\n  /**\n   * Trusted html messages that can be displayed as html.\n   * @type {string|undefined}\n   * @export\n   */\n  this.msg;\n\n  /**\n   * @type {!Array<string>}\n   * @export\n   */\n  this.msgs_ = [];\n\n  /**\n   * @type {!angular.$sce}\n   * @private\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {!ngeox.PopupFactory}\n   * @private\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  /**\n   * @type {!ngeo.message.Disclaimer}\n   * @private\n   */\n  this.disclaimer_ = ngeoDisclaimer;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.eventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.dataLayerGroup_ = this.ngeoLayerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n  this.registerLayer_(this.dataLayerGroup_);\n};\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersAdd_ = function(evt) {\n  this.timeout_(() => {\n    const layer = evt.element;\n    googAsserts.assertInstanceof(layer, olLayerBase);\n    this.registerLayer_(layer);\n  });\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersRemove_ = function(evt) {\n  const layer = evt.element;\n  googAsserts.assertInstanceof(layer, olLayerBase);\n  this.unregisterLayer_(layer);\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.registerLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Listen to added/removed layers to this group\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'add',\n        this.handleLayersAdd_,\n        this\n      )\n    );\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'remove',\n        this.handleLayersRemove_,\n        this\n      )\n    );\n\n    // (2) Register existing layers in the group\n    layer.getLayers().forEach((layer) => {\n      this.registerLayer_(layer);\n    });\n\n  } else {\n\n    // Show disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach((disclaimer) => {\n        this.showDisclaimerMessage_(disclaimer);\n      });\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.unregisterLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Clear event listeners\n    this.eventHelper_.clearListenerKey(layerUid);\n\n    // (2) Unregister existing layers in the group\n    layer.getLayers().forEach(layer => this.unregisterLayer_(layer));\n\n  } else {\n\n    // Close disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach((disclaimer) => {\n        this.closeDisclaimerMessage_(disclaimer);\n      });\n    }\n  }\n\n};\n\n\nexports.Controller_.prototype.$onDestroy = function() {\n  this.unregisterLayer_(this.dataLayerGroup_);\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.showDisclaimerMessage_ = function(msg) {\n  msg = this.gettextCatalog_.getString(msg);\n  if (this.external) {\n    if (this.msgs_.indexOf(msg) < 0) {\n      this.msgs_.push(msg);\n    }\n    this.msg = `${this.sce_.trustAsHtml(this.msgs_.join('<br />'))}`;\n    this.visibility = true;\n  } else {\n    this.disclaimer_.alert({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.closeDisclaimerMessage_ = function(msg) {\n  msg = this.gettextCatalog_.getString(msg);\n  if (this.external) {\n    this.visibility = false;\n    this.msgs_.length = 0;\n    this.msg = '';\n  } else {\n    this.disclaimer_.close({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * Provide a \"disclaimer\" component for GeoMapFish that is bound to the\n * layers added and removed from a map.\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\">\n *      </gmf-disclaimer>\n *\n * You can also display the disclaimer messages in popups or use them in another\n * context. The example below show you how to display the disclaimer messages\n * in a ngeo-modal window (external case).\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\"\n *        gmf-disclaimer-external=\"::true\"\n *        gmf-disclaimer-external-msg=\"disclaimerMsg\"\n *        gmf-disclaimer-external-visibility=\"disclaimerVisibility\">\n *      </gmf-disclaimer>\n *      <ngeo-modal ng-model=\"disclaimerVisibility\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *       </div>\n *       <div class=\"modal-body\">\n *         <div ng-bind-html=\"disclaimerMsg\"></div>\n *       </div>\n *     </ngeo-modal>\n *\n * @htmlAttribute {boolean} gmf-disclaimer-popup Whether to show the disclaimer\n *     messages in popups or not. Defaults to `false`.\n * @htmlAttribute {boolean?} gmf-disclaimer-external Whether to use disclaimer\n *     messages elsewhere or not. Default to `false`. If true, you should use\n *     the gmf-disclaimer-external-msg and the\n *     gmf-disclaimer-external-visibility too.\n * @htmlAttribute {boolean?} gmf-disclaimer-external-visibility variable that\n *     will be set to true if the disclaimers contain a new message. To uses it,\n *     you must set the gmf-disclaimer-external to true.\n * @htmlAttribute {string?} gmf-disclaimer-external-msg variable that will\n *     contains the disclaimer messages. To uses it, you must set the\n *     gmf-disclaimer-external to true.\n * @htmlAttribute {ol.Map=} gmf-disclaimer-map The map.\n *\n * @ngdoc component\n * @ngname gmfDisclaimer\n */\nexports.component_ = {\n  controller: exports.Controller_,\n  bindings: {\n    'popup': '<?gmfDisclaimerPopup',\n    'map': '=gmfDisclaimerMap',\n    'external': '<?gmfDisclaimerExternal',\n    'visibility': '=?gmfDisclaimerExternalVisibility',\n    'msg': '=?gmfDisclaimerExternalMsg'\n  }\n};\n\n\nexports.component('gmfDisclaimer', exports.component_);\n\n\nexport default exports;\n","/**\n * @module gmf.filters.SavedFilters\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * The GeoMapFish service responsible of storing filters that can be applied\n   * to data sources. A filter consists of:\n   *\n   * - a condition\n   * - a list of directed rules\n   * - a list of custom rules\n   * - a data source\n   * - a name\n   *\n   * The filters are saved in the browser local storage, if available.\n   * Otherwise, they are kept in this service for the duration of the visit.\n   *\n   * @param {!angular.Scope} $rootScope Angular rootScope.\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfSavedFilters\n   */\n  constructor($rootScope) {\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * This service can have a data source id bound to it, which automatically\n     * populates an array of items that are only bound to this data source.\n     * @type {?number}\n     * @private\n     */\n    this.currentDataSourceId_ = null;\n\n    /**\n     * @type {!Array.<!gmf.filters.SavedFilters.Item>}\n     * @private\n     */\n    this.currentDataSourceItems_ = [];\n\n    /**\n     * The used by this service to save in the local storage.\n     * @type {string}\n     * @private\n     */\n    this.localStorageKey_ = 'gmf_savedfilters';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.useLocalStorage_ = true;\n\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n\n    /**\n     * @type {!Array.<!gmf.filters.SavedFilters.Item>}\n     * @private\n     */\n    this.items_ = [];\n\n    this.rootScope_.$watchCollection(\n      () => this.items,\n      () => {\n        this.rePopulateCurrentDataSourceItems_();\n      }\n    );\n\n    if (this.useLocalStorage_) {\n      this.loadItemsFromLocalStorage_();\n    }\n\n  }\n\n  /**\n   * @return {!Array.<!gmf.filters.SavedFilters.Item>} Items\n   * @export\n   */\n  get currentDataSourceItems() {\n    return this.currentDataSourceItems_;\n  }\n\n  /**\n   * @param {?number} id Current data source id.\n   * @export\n   */\n  set currentDataSourceId(id) {\n    this.currentDataSourceId_ = id;\n    this.rePopulateCurrentDataSourceItems_();\n  }\n\n  /**\n   * @return {!Array.<!gmf.filters.SavedFilters.Item>} Items\n   * @export\n   */\n  get items() {\n    return this.items_;\n  }\n\n  /**\n   * Read the filter items that are saved in the local storage and set them\n   * as this service's items.\n   * @private\n   */\n  loadItemsFromLocalStorage_() {\n    if (window.localStorage[this.localStorageKey_]) {\n      const items = JSON.parse(window.localStorage[this.localStorageKey_]);\n      googAsserts.assertArray(items);\n      this.items_ = items;\n    }\n  }\n\n  /**\n   * Search for an item using a given name and data source id. Returns the\n   * index if it exists, otherwise -1 is returned.\n   * @param {string} name Name.\n   * @param {number} id Data source id.\n   * @return {number} The index of the item, if it exists.\n   * @export\n   */\n  indexOfItem(name, id) {\n\n    let item;\n    let idx = -1;\n    for (let i = 0, ii = this.items_.length; i < ii; i++) {\n      item = this.items[i];\n      if (item.dataSourceId === id && item.name === name) {\n        idx = i;\n        break;\n      }\n    }\n\n    return idx;\n  }\n\n  /**\n   * @param {!gmf.filters.SavedFilters.Item} item Item.\n   * @export\n   */\n  save(item) {\n\n    // (1) Add or replace item\n    const idx = this.indexOfItem(item.name, item.dataSourceId);\n    if (idx !== -1) {\n      this.items[idx] = item;\n    } else {\n      this.items.push(item);\n    }\n\n    // (2) Update local storage\n    if (this.useLocalStorage_) {\n      this.saveItemsInLocalStorage_();\n    }\n  }\n\n  /**\n   * @param {!gmf.filters.SavedFilters.Item} item Item.\n   * @export\n   */\n  remove(item) {\n\n    // (1) Remove the item\n    const found = olArray.remove(this.items, item);\n\n    // (2) Update local storage\n    if (found && this.useLocalStorage_) {\n      this.saveItemsInLocalStorage_();\n    }\n  }\n\n  /**\n   * Save all items in the local storage.\n   * @private\n   */\n  saveItemsInLocalStorage_() {\n    window.localStorage[this.localStorageKey_] = JSON.stringify(this.items);\n  }\n\n  /**\n   * @private\n   */\n  rePopulateCurrentDataSourceItems_() {\n    // (1) Clear existing items\n    this.currentDataSourceItems_.length = 0;\n\n    // (2) Populate\n    if (this.currentDataSourceId_ !== null) {\n      for (const item of this.items) {\n        if (item.dataSourceId === this.currentDataSourceId_) {\n          this.currentDataSourceItems_.push(item);\n        }\n      }\n    }\n  }\n\n};\n\n\nexports.module = angular.module('gmfSavedFilters', []);\n\nexports.module.service('gmfSavedFilters', exports);\n\n\n/**\n * The definition of a saved filter item.\n * @constructor\n * @struct\n * @export\n */\nexports.Item = function() {};\n\n\n/**\n * The condition of the saved filter item.\n * @type {string}\n * @export\n */\nexports.Item.prototype.condition;\n\n\n/**\n * The list of custom rules of the saved filter item.\n * @type {!Array.<!ngeox.rule.AnyOptions>}\n * @export\n */\nexports.Item.prototype.customRules;\n\n\n/**\n * The data source id related to the filter.\n * @type {number}\n * @export\n */\nexports.Item.prototype.dataSourceId;\n\n\n/**\n * The list of directed rules of the saved filter item.\n * @type {!Array.<!ngeox.rule.AnyOptions>}\n * @export\n */\nexports.Item.prototype.directedRules;\n\n\n/**\n * A human-readable name given to the saved filter item.\n * @type {string}\n * @export\n */\nexports.Item.prototype.name;\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.ruleComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMenu from 'ngeo/Menu.js';\nimport ngeoDrawComponent from 'ngeo/draw/component.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionModify from 'ngeo/interaction/Modify.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDatepickerComponent from 'ngeo/misc/datepickerComponent.js';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olArray from 'ol/array.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoRule', [\n  ngeoDrawComponent.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoMapFeatureOverlay.module.name,\n  ngeoMiscDatepickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/filter/rulecomponent', require('./rulecomponent.html'));\n});\n\n\nexports.value('ngeoRuleTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoRuleTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/filter/rulecomponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoRuleTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoRuleTemplateUrl($attrs, ngeoRuleTemplateUrl) {\n  return ngeoRuleTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.RuleController_ = class {\n\n  /**\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate\n   *     manager service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoRuleController\n   */\n  constructor(gettextCatalog, $scope, $timeout, ngeoFeatureHelper,\n    ngeoRuleHelper, ngeoToolActivateMgr) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * The original rule.\n     * @type {!ngeo.rule.Rule}\n     * @export\n     */\n    this.rule;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // Injected properties\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.ToolActivateMgr}\n     * @private\n     */\n    this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n\n    // Inner properties\n\n    /**\n     * The cloned rule. Changes in the UI are applied to the clone 'on-the-fly'.\n     * Changes in the clone are applied back in the original rule when the\n     * apply button is clicked.\n     * @type {!ngeo.rule.Rule}\n     * @export\n     */\n    this.clone;\n\n    const operatorType = ngeoRuleRule.OperatorType;\n    const spatialOperatorType = ngeoRuleRule.SpatialOperatorType;\n    const temporalOperatorType = ngeoRuleRule.TemporalOperatorType;\n\n    /**\n     * @type {Object.<string, string>}\n     * @export\n     */\n    this.operators = {\n      [operatorType.EQUAL_TO]: gettextCatalog.getString('Is equal to'),\n      [operatorType.GREATER_THAN]: gettextCatalog.getString('Is greater than'),\n      [operatorType.GREATER_THAN_OR_EQUAL_TO]: gettextCatalog.getString(\n        'Is greater than or equal to'),\n      [operatorType.LESSER_THAN]: gettextCatalog.getString('Is lesser than'),\n      [operatorType.LESSER_THAN_OR_EQUAL_TO]: gettextCatalog.getString(\n        'Is lesser than or equal to'),\n      [operatorType.NOT_EQUAL_TO]: gettextCatalog.getString('Is not equal to'),\n      [operatorType.LIKE]: gettextCatalog.getString('Contains'),\n      [spatialOperatorType.CONTAINS]: gettextCatalog.getString('Contains'),\n      [spatialOperatorType.INTERSECTS]: gettextCatalog.getString('Intersects'),\n      [spatialOperatorType.WITHIN]: gettextCatalog.getString('Is inside of'),\n      [temporalOperatorType.BEGINS]: gettextCatalog.getString('Begins at'),\n      [temporalOperatorType.DURING]: gettextCatalog.getString('During'),\n      [temporalOperatorType.ENDS]: gettextCatalog.getString('Ends at'),\n      [temporalOperatorType.EQUALS]: gettextCatalog.getString('Is equal to')\n    };\n\n    /**\n     * @type {Object.<string, string>}\n     * @export\n     */\n    this.operatorsShortFormat = {\n      [operatorType.EQUAL_TO]: '=',\n      [operatorType.GREATER_THAN]: '>',\n      [operatorType.GREATER_THAN_OR_EQUAL_TO]: '>=',\n      [operatorType.LESSER_THAN]: '<',\n      [operatorType.LESSER_THAN_OR_EQUAL_TO]: '<=',\n      [operatorType.NOT_EQUAL_TO]: '!=',\n      [operatorType.LIKE]: '~',\n      [temporalOperatorType.BEGINS]: '>=',\n      [temporalOperatorType.ENDS]: '<=',\n      [temporalOperatorType.EQUALS]: '='\n    };\n\n    /**\n     * Time property used when the rule is of type 'date|datetime' and uses\n     * a range of date.\n     * @type {!ngeox.TimeProperty}\n     * @export\n     */\n    this.timeRangeMode = {\n      widget: 'datepicker',\n      maxValue: null,\n      minValue: null,\n      maxDefValue: this.createDate_(),\n      minDefValue: this.createWeekAgoDate_(),\n      mode: 'range',\n      interval: [0, 1, 0, 0]\n    };\n\n    /**\n     * Time property used when the rule is of type 'date|datetime' and uses\n     * a single date.\n     * @type {!ngeox.TimeProperty}\n     * @export\n     */\n    this.timeValueMode = {\n      widget: 'datepicker',\n      maxValue: null,\n      minValue: null,\n      maxDefValue: this.createDate_(),\n      minDefValue: this.createDate_(),\n      mode: 'value',\n      interval: [0, 1, 0, 0]\n    };\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @private\n     */\n    this.toolActivate_;// = new ngeo.misc.ToolActivate(this.rule, 'active');\n\n    /**\n     * @type {!Array.<Function>}\n     * @private\n     */\n    this.unlisteners_ = [];\n\n\n    // Inner properties when dealing with a `ngeo.rule.Geometry`\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.drawActive = false;\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.drawToolActivate = new ngeoMiscToolActivate(this, 'drawActive');\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @export\n     */\n    this.drawnFeatures = new olCollection();\n\n    /**\n     * @type {?ngeo.Menu}\n     * @private\n     */\n    this.menu_ = null;\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @export\n     */\n    this.selectedFeatures = new olCollection();\n\n    /**\n     * @type {!ol.Collection.<!ol.interaction.Interaction>}\n     * @private\n     */\n    this.interactions_ = new olCollection();\n\n    /**\n     * @type {!ngeo.interaction.Modify}\n     * @private\n     */\n    this.modify_ = new ngeoInteractionModify({\n      features: this.selectedFeatures,\n      style: ngeoFeatureHelper.getVertexStyle(false)\n    });\n    this.interactions_.push(this.modify_);\n\n    /**\n     * @type {ngeo.interaction.Rotate}\n     * @private\n     */\n    this.rotate_ = new ngeoInteractionRotate({\n      features: this.selectedFeatures,\n      style: new olStyleStyle({\n        text: new olStyleText({\n          text: '\\uf01e',\n          font: 'normal 18px FontAwesome',\n          fill: new olStyleFill({\n            color: '#7a7a7a'\n          })\n        })\n      })\n    });\n    this.interactions_.push(this.rotate_);\n\n    /**\n     * @type {ngeo.interaction.Translate}\n     * @private\n     */\n    this.translate_ = new ngeoInteractionTranslate({\n      features: this.selectedFeatures,\n      style: new olStyleStyle({\n        text: new olStyleText({\n          text: '\\uf047',\n          font: 'normal 18px FontAwesome',\n          fill: new olStyleFill({\n            color: '#7a7a7a'\n          })\n        })\n      })\n    });\n    this.interactions_.push(this.translate_);\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    this.initializeInteractions_();\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.modifyToolActivate = new ngeoMiscToolActivate(\n      this.modify_,\n      'active'\n    );\n\n    /**\n     * @type {ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.rotateToolActivate = new ngeoMiscToolActivate(\n      this.rotate_,\n      'active'\n    );\n\n    /**\n     * @type {ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.translateToolActivate = new ngeoMiscToolActivate(\n      this.translate_,\n      'active'\n    );\n\n    /**\n     * The geometry type used by the clone feature.\n     * @type {?string}\n     * @export\n     */\n    this.geomType = null;\n  }\n\n  /**\n   * Called on initialization of the controller.\n   *\n   * Clone the rule to be able to work with the clone directly.\n   */\n  $onInit() {\n    this.clone = this.ngeoRuleHelper_.cloneRule(this.rule);\n\n    this.toolActivate_ = new ngeoMiscToolActivate(this.rule, 'active');\n\n    this.ngeoToolActivateMgr_.registerTool(\n      this.toolGroup, this.toolActivate_);\n\n    this.scope_.$watch(\n      () => this.rule.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    // If the rule is a DATE or DATETIME, then a datepicker directive is used.\n    // It is not possible to set the current values to the datepicker, but you\n    // can set the initial values. This is why it is created when the rule\n    // becomes active (see the partials/rule.html).\n    //\n    // This chunk of code ensures that the rule properties are synchronized\n    // with the TimeProperty objects required to build the datepickers.\n    if (this.clone.type === ngeoFormatAttributeType.DATE ||\n        this.clone.type === ngeoFormatAttributeType.DATETIME\n    ) {\n      // Watch 'expression'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.getExpression(),\n        (newVal) => {\n          this.timeValueMode.minValue = newVal;\n        }\n      ));\n      // Watch 'lowerBoundary'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.lowerBoundary,\n        (newVal) => {\n          this.timeRangeMode.minValue = newVal;\n        }\n      ));\n      // Watch 'upperBoundary'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.upperBoundary,\n        (newVal) => {\n          this.timeRangeMode.maxValue = newVal;\n        }\n      ));\n    } else if (this.clone.type === ngeoFormatAttributeType.GEOMETRY) {\n\n      // Watch 'operator' of clone. Make sure any existing geometry is\n      // supported by the newly selected operator. If it doesn't, reset\n      // the expression, i.e. geometry.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.operator,\n        (newVal) => {\n          if (newVal &&\n              newVal === ngeoRuleRule.SpatialOperatorType.CONTAINS\n          ) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            const geometry = clone.feature.getGeometry();\n            if (geometry) {\n              const geomType = this.ngeoFeatureHelper_.getType(clone.feature);\n              const supportedTypes = [\n                ngeoGeometryType.CIRCLE,\n                ngeoGeometryType.POLYGON,\n                ngeoGeometryType.RECTANGLE\n              ];\n              if (!olArray.includes(supportedTypes, geomType)) {\n                this.clone.setExpression(null);\n              }\n            }\n          }\n        }\n      ));\n\n      // Watch 'expression' of clone. Set 'geomType' property accordingly.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.expression,\n        (newVal) => {\n          if (newVal) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            this.geomType = this.ngeoFeatureHelper_.getType(clone.feature);\n          } else {\n            this.geomType = null;\n          }\n        }\n      ));\n\n      // Watch both 'expression', 'active' and the modify control to be all\n      // thruthy. When that's the case, the clone feature is added to the\n      // selection collection.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => {\n          const hasExpression = this.clone.getExpression() !== null;\n          const isActive = this.rule.active === true;\n          const editToolIsActive = this.modify_.getActive() ||\n                this.rotate_.getActive() ||\n                this.translate_.getActive();\n          return hasExpression && isActive && editToolIsActive;\n        },\n        (newVal) => {\n          if (newVal) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            this.selectedFeatures.push(clone.feature);\n          } else {\n            this.selectedFeatures.clear();\n          }\n        }\n      ));\n    }\n  }\n\n  /**\n   * Called on destruction of the controller.\n   */\n  $onDestroy() {\n    if (this.rule.active) {\n      this.rule.active = false;\n      // in $onDestroy, setting active to false will not call the handler. Call\n      // it manually to let it do its magic\n      this.handleActiveChange_(false, true);\n    }\n    this.ngeoToolActivateMgr_.unregisterTool(\n      this.toolGroup, this.toolActivate_);\n    for (let i = 0, ii = this.unlisteners_.length; i < ii; i++) {\n      this.unlisteners_[i]();\n    }\n    this.unlisteners_.length = 0;\n    this.clone.destroy();\n  }\n\n  /**\n   * @export\n   */\n  toggle() {\n    if (this.rule.active) {\n      this.cancel();\n    } else {\n      this.rule.active = true;\n    }\n  }\n\n  /**\n   * Apply the changes that were made in the original rule.\n   * @export\n   */\n  apply() {\n    this.ngeoRuleHelper_.extendRule(this.clone, this.rule);\n    this.rule.active = false;\n  }\n\n  /**\n   * Revert the changes that were made in the clone rule.\n   * @export\n   */\n  cancel() {\n    this.ngeoRuleHelper_.extendRule(this.rule, this.clone);\n    this.rule.active = false;\n  }\n\n  /**\n   * Reset both original and clone rules.\n   * @export\n   */\n  reset() {\n    this.clone.reset();\n    this.rule.reset();\n  }\n\n  /**\n   * Called when a choice is clicked, when using a `ngeo.rule.Select` rule type.\n   * Add/remove the choice to/from the `expression` of the rule.\n   * @param {string|number} choice Choice that has been clicked.\n   * @export\n   */\n  toggleChoiceSelection(choice) {\n    const rule = googAsserts.assertInstanceof(this.clone, ngeoRuleSelect);\n    const choices = rule.getExpression() ? rule.getExpression().split(',') : [];\n    const idx = choices.indexOf(choice);\n    if (idx > -1) {\n      choices.splice(idx, 1);\n    } else {\n      choices.push(choice);\n    }\n    rule.setExpression(choices.length ? choices.join(',') : null);\n  }\n\n\n  /**\n   * @param {Object} date Date\n   * @export\n   */\n  onDateSelected(date) {\n    this.clone.setExpression(date['start']);\n  }\n\n  /**\n   * @param {Object} date Date\n   * @export\n   */\n  onDateRangeSelected(date) {\n    this.clone.lowerBoundary = date['start'];\n    this.clone.upperBoundary = date['end'];\n  }\n\n  /**\n   * @param {number=} opt_timeDelta Time delta to go back in the past.\n   * @return {string} ISO string of the date\n   * @private\n   */\n  createDate_(opt_timeDelta) {\n\n    const date = new Date();\n\n    if (opt_timeDelta !== undefined) {\n      const time = date.getTime() - opt_timeDelta;\n      date.setTime(time);\n    }\n\n    return date.toISOString();\n  }\n\n  /**\n   * @return {string} ISO string of the date\n   * @private\n   */\n  createWeekAgoDate_() {\n    return this.createDate_(1000 * 60 * 60 * 24 * 7); // A week ago date\n  }\n\n  /**\n   * @param {number} time Time.\n   * @return {string} Date\n   * @export\n   */\n  timeToDate(time) {\n    const date = new Date(time);\n    return date.toLocaleDateString();\n  }\n\n\n  // === Methods used when bound to a `ngeo.rule.Geometry`\n\n\n  /**\n   * Called when the active property of a rule changes. Only used when this\n   * component is bound to a geometry rule.\n   *\n   * Manage the activation/deactivation of the interactions.\n   *\n   * @param {boolean} active Whether the rule is active or not.\n   * @param {boolean} oldActive Whether the rule was active or not.\n   * @private\n   */\n  handleActiveChange_(active, oldActive) {\n\n    if (!(this.rule instanceof ngeoRuleGeometry) ||\n        !(this.clone instanceof ngeoRuleGeometry) ||\n        active === oldActive\n    ) {\n      return;\n    }\n\n    const keys = this.listenerKeys_;\n    const uid = ['ngeo-rule-', olBase.getUid(this)].join('-');\n    const toolMgr = this.ngeoToolActivateMgr_;\n\n    const ruleFeature = this.rule.feature;\n    const cloneFeature = this.clone.feature;\n\n    const mapDiv = this.map.getViewport();\n    googAsserts.assertElement(mapDiv);\n\n    if (active) {\n      keys.push(\n        olEvents.listen(\n          this.drawnFeatures,\n          'add',\n          this.handleFeaturesAdd_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          mapDiv,\n          'contextmenu',\n          this.handleMapContextMenu_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          this.translate_,\n          'translateend',\n          this.handleTranslateEnd_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          this.rotate_,\n          'rotateend',\n          this.handleRotateEnd_,\n          this\n        )\n      );\n\n      this.featureOverlay.removeFeature(ruleFeature);\n      this.featureOverlay.addFeature(cloneFeature);\n\n      this.registerInteractions_();\n\n      toolMgr.registerTool(uid, this.drawToolActivate, false);\n      toolMgr.registerTool(uid, this.modifyToolActivate, true);\n      toolMgr.registerTool(uid, this.rotateToolActivate, false);\n      toolMgr.registerTool(uid, this.translateToolActivate, false);\n\n      this.modify_.setActive(true);\n\n      if (cloneFeature.getGeometry()) {\n        this.ngeoFeatureHelper_.setStyle(cloneFeature, true);\n      }\n\n    } else {\n      cloneFeature.setStyle(null);\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n\n      this.drawActive = false;\n\n      toolMgr.unregisterTool(uid, this.drawToolActivate);\n      toolMgr.unregisterTool(uid, this.modifyToolActivate);\n      toolMgr.unregisterTool(uid, this.rotateToolActivate);\n      toolMgr.unregisterTool(uid, this.translateToolActivate);\n\n      this.modify_.setActive(false);\n\n      this.unregisterInteractions_();\n\n      if (this.selectedFeatures.getLength()) {\n        this.featureOverlay.removeFeature(cloneFeature);\n      }\n      this.featureOverlay.addFeature(ruleFeature);\n\n      this.selectedFeatures.clear();\n    }\n  }\n\n  /**\n   * Initialize interactions by setting them inactive and decorating them\n   * @private\n   */\n  initializeInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      interaction.setActive(false);\n      ngeoMiscDecorate.interaction(interaction);\n    });\n  }\n\n  /**\n   * Register interactions by adding them to the map\n   * @private\n   */\n  registerInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      this.map.addInteraction(interaction);\n    });\n  }\n\n  /**\n   * Register interactions by removing them to the map\n   * @private\n   */\n  unregisterInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      this.map.removeInteraction(interaction);\n    });\n  }\n\n  /**\n   * @param {ol.Collection.Event} evt Event.\n   * @private\n   */\n  handleFeaturesAdd_(evt) {\n    // timeout to prevent double-click to zoom the map\n    this.timeout_(() => {\n\n      const clone = googAsserts.assertInstanceof(\n        this.clone, ngeoRuleGeometry);\n      const feature = clone.feature;\n\n      // (1) Apply geometry\n      const drawnFeature = googAsserts.assertInstanceof(\n        evt.element,\n        olFeature\n      );\n      const geometry = googAsserts.assertInstanceof(\n        drawnFeature.getGeometry(),\n        olGeomGeometry\n      );\n      clone.geometry = geometry;\n\n      // (2) Deactivate draw tools\n      this.drawActive = false;\n\n      // (3) Set properties, then style\n      const properties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        drawnFeature);\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(feature);\n      feature.setProperties(properties);\n      this.ngeoFeatureHelper_.setStyle(feature, true);\n\n      this.scope_.$apply();\n    });\n  }\n\n  /**\n   * Return the type of geometry used by the rule feature. Used in the template.\n   * @return {string} Geometry type.\n   * @export\n   */\n  getRuleGeometryType() {\n    const rule = googAsserts.assertInstanceof(this.rule, ngeoRuleGeometry);\n    return this.ngeoFeatureHelper_.getType(rule.feature);\n  }\n\n  /**\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleMapContextMenu_(evt) {\n\n    // (1) Remove previous menu, if any\n    this.removeMenu_();\n\n    // (2) Get feature at pixel\n    const pixel = this.map.getEventPixel(evt);\n    const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n    let feature = this.map.forEachFeatureAtPixel(\n      pixel,\n      (feature) => {\n        let ret = false;\n        if (olArray.includes(this.selectedFeatures.getArray(), feature)) {\n          ret = feature;\n        }\n        return ret;\n      }\n    );\n\n    feature = feature ? feature : null;\n\n    // (3) If the clicked feature is the selected one, plus if it has a certain\n    //     type of geometry, then show the menu\n    const actions = [];\n    if (feature) {\n\n      const type = this.ngeoFeatureHelper_.getType(feature);\n      const  gettextCatalog = this.gettextCatalog_;\n\n      if (type == ngeoGeometryType.CIRCLE ||\n          type == ngeoGeometryType.LINE_STRING ||\n          type == ngeoGeometryType.POLYGON ||\n          type == ngeoGeometryType.RECTANGLE) {\n        actions.push({\n          cls: 'fa fa-arrows',\n          label: gettextCatalog.getString('Move'),\n          name: 'move'\n        });\n      }\n      if (type == ngeoGeometryType.LINE_STRING ||\n          type == ngeoGeometryType.POLYGON ||\n          type == ngeoGeometryType.RECTANGLE) {\n        actions.push({\n          cls: 'fa fa-rotate-right',\n          label: gettextCatalog.getString('Rotate'),\n          name: 'rotate'\n        });\n      }\n    }\n\n    if (actions.length) {\n      // (4) Create and show menu\n      this.menu_ = new ngeoMenu({\n        actions\n      });\n\n      olEvents.listen(\n        this.menu_,\n        'actionclick',\n        this.handleMenuActionClick_,\n        this\n      );\n      this.map.addOverlay(this.menu_);\n\n      this.menu_.open(coordinate);\n\n      evt.preventDefault();\n      evt.stopPropagation();\n\n      this.scope_.$apply();\n    }\n  }\n\n  /**\n   * Remove contextual menu, if any.\n   * @private\n   */\n  removeMenu_() {\n    if (this.menu_) {\n      olEvents.unlisten(\n        this.menu_,\n        'actionclick',\n        this.handleMenuActionClick_,\n        this\n      );\n      this.map.removeOverlay(this.menu_);\n      this.menu_ = null;\n    }\n  }\n\n  /**\n   * @param {ngeox.MenuEvent} evt Event.\n   * @private\n   */\n  handleMenuActionClick_(evt) {\n    const action = evt.detail.action;\n\n    switch (action) {\n      case 'move':\n        this.translate_.setActive(true);\n        this.scope_.$apply();\n        break;\n      case 'rotate':\n        this.rotate_.setActive(true);\n        this.scope_.$apply();\n        break;\n      default:\n        console.log(`FIXME - support: ${action}`);\n        break;\n    }\n  }\n\n  /**\n   * @param {ngeox.RotateEvent} evt Event.\n   * @private\n   */\n  handleRotateEnd_(evt) {\n    this.rotate_.setActive(false);\n    this.scope_.$apply();\n  }\n\n  /**\n   * @param {ol.interaction.Translate.Event} evt Event.\n   * @private\n   */\n  handleTranslateEnd_(evt) {\n    this.translate_.setActive(false);\n    this.scope_.$apply();\n  }\n\n};\n\n\n/**\n * The rule component is bound to a `ngeo.rule.Rule` object and shows UI\n * components to be able to edit its properties, such as: operator, expression,\n * etc. The actual properties depend on the type of rule.\n *\n * Also, changes are not made on-the-fly. A button must be clicked for the\n * changes to be applied to the rule.\n */\nexports.component('ngeoRule', {\n  bindings: {\n    'featureOverlay': '<',\n    'map': '<',\n    'rule': '<',\n    'toolGroup': '<'\n  },\n  controller: exports.RuleController_,\n  templateUrl: ngeoRuleTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleComponent from 'ngeo/filter/ruleComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFilter', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoFilterRuleComponent.name,\n  ngeoMapFeatureOverlay.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/filter', require('./component.html'));\n});\n\n\nexports.value('ngeoFilterTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoFilterTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/filter';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoFilterTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoFilterTemplateUrl($attrs, ngeoFilterTemplateUrl) {\n  return ngeoFilterTemplateUrl($attrs);\n}\n\n\nexports.component('ngeoFilter', {\n  bindings: {\n    'aRuleIsActive': '=',\n    'customRules': '<',\n    // It's 'datasource' instead of 'dataSource', because that would require\n    // the attribute to be 'data-source', and Angular strips the 'data-'.\n    'datasource': '<',\n    'directedRules': '<',\n    'featureOverlay': '<',\n    'map': '<',\n    'toolGroup': '<'\n  },\n  controller: 'ngeoFilterController',\n  templateUrl: ngeoFilterTemplateUrl\n});\n\n/**\n * @private\n */\nexports.FilterController_ = class {\n\n  /**\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoFilterController\n   */\n  constructor(gettextCatalog, $scope, $timeout, ngeoMapQuerent,\n    ngeoRuleHelper) {\n\n    // === Binding properties ===\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.aRuleIsActive;\n\n    /**\n     * @type {Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.customRules;\n\n    /**\n     * @type {!ngeo.datasource.OGC}\n     * @export\n     */\n    this.datasource;\n\n    /**\n     * @type {Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.directedRules;\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!ngeo.query.MapQuerent}\n     * @private\n     */\n    this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * @type {Array.<!ngeox.FilterCondition>}\n     * @export\n     */\n    this.conditions = [\n      {\n        text: gettextCatalog.getString('All'),\n        value: ngeoFilterCondition.AND\n      },\n      {\n        text: gettextCatalog.getString('At least one'),\n        value: ngeoFilterCondition.OR\n      },\n      {\n        text: gettextCatalog.getString('None'),\n        value: ngeoFilterCondition.NOT\n      }\n    ];\n\n    /**\n     * List of geometry attributes.\n     * @type {Array.<!ngeox.Attribute>}\n     * @export\n     */\n    this.geometryAttributes = [];\n\n    /**\n     * List of other attribute names.\n     * @type {Array.<!ngeox.Attribute>}\n     * @export\n     */\n    this.otherAttributes = [];\n\n    /**\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.ruleUnlisteners_ = {};\n  }\n\n\n  /**\n   * Called on initialization of the controller.\n   *\n   * Loop through the attributes of the data source and separated them in 2\n   * lists: geometry and the others. Then, apply the filters to the data source.\n   */\n  $onInit() {\n\n    this.scope_.$watch(\n      () => this.aRuleIsActive,\n      this.handleARuleIsActiveChange_.bind(this)\n    );\n\n    // (1) Separate the attributes in 2: geometry and the others.\n    const attributes = googAsserts.assert(this.datasource.attributes);\n    for (const attribute of attributes) {\n      if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n        this.geometryAttributes.push(attribute);\n      } else {\n        this.otherAttributes.push(attribute);\n      }\n    }\n\n    // (2) All rules that have geometry are added in the featureOverlay\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      this.registerRule_(rule);\n    }\n\n    // (3) Apply the filters\n    this.apply();\n  }\n\n\n  /**\n   * Called on destruction of the controller.\n   *\n   * Reset the `filterRules` of the data source back to `null`.\n   * Clear the feature overlay.\n   */\n  $onDestroy() {\n    if (this.datasource.filterRules !== null) {\n      this.datasource.filterRules = null;\n    }\n    this.featureOverlay.clear();\n  }\n\n\n  /**\n   * @return {boolean} True if at least one rule is currently defined.\n   * @export\n   */\n  hasARule() {\n    return [].concat(this.customRules, this.directedRules).length > 0;\n  }\n\n\n  /**\n   * Loop in all directed and custom rules. Apply the rules that have a proper\n   * value inside the data source, in the `filterRules` property.\n   * @export\n   */\n  apply() {\n    // (1) Reset\n    this.datasource.filterRules = null;\n\n    // (2) Then set if there are filter rules with value.\n    this.timeout_(() => {\n      const filterRules = this.getRulesWithValue_();\n      if (filterRules.length) {\n        this.datasource.filterRules = filterRules;\n        // The current query results are cleared when we apply a filter.\n        this.ngeoMapQuerent_.clear();\n      }\n    });\n  }\n\n\n  /**\n   * Loop in all directed and custom rules. Issue a request to obtain the data\n   * and show the result.\n   * @export\n   */\n  getData() {\n    const filterRules = this.getRulesWithValue_();\n\n    // No need to do anything if there's no rules.\n    if (!filterRules.length) {\n      return;\n    }\n\n    const dataSource = this.datasource;\n    const limit = 1000;\n    const map = this.map;\n    const projCode = map.getView().getProjection().getCode();\n    const filter = this.ngeoRuleHelper_.createFilter({\n      dataSource: dataSource,\n      filterRules: filterRules,\n      srsName: projCode\n    });\n    googAsserts.assert(filter);\n\n    this.ngeoMapQuerent_.issue({\n      dataSources: [dataSource],\n      filter: filter,\n      limit: limit,\n      map: map\n    });\n  }\n\n\n  /**\n   * Loop in all directed and custom rules and collect those with a value.\n   * @return {Array.<!ngeo.rule.Rule>} Rules with value.\n   * @private\n   */\n  getRulesWithValue_() {\n    const filterRules = [];\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.value) {\n        filterRules.push(rule);\n      }\n    }\n    return filterRules;\n  }\n\n\n  /**\n   * Create and add a new custom rule using an attribute. The rule is activated\n   * after being created.\n   * @param {!ngeox.Attribute} attribute Attribute to use to create the custom\n   * rule.\n   * @export\n   */\n  createAndAddCustomRule(attribute) {\n    const rule = this.ngeoRuleHelper_.createRuleFromAttribute(attribute, true);\n    this.registerRule_(rule);\n    this.customRules.push(rule);\n\n    // Activate asynchronously allows the toolActivate manager to do its magic,\n    this.timeout_(() => {\n      rule.active = true;\n    }, 1);\n  }\n\n\n  /**\n   * @param {!ngeox.FilterCondition} condition Condition to set.\n   * @export\n   */\n  setCondition(condition) {\n    if (this.datasource.filterCondition !== condition.value) {\n      this.datasource.filterCondition = condition.value;\n    }\n  }\n\n  /**\n   * Remove a custom rule. Deactivate it first, then give time to the\n   * `ngeo-rule` directive to manage the deactivation of the rule.\n   * @param {!ngeo.rule.Rule} rule Custom rule to remove.\n   * @export\n   */\n  removeCustomRule(rule) {\n    rule.active = false;\n    this.timeout_(() => {\n      olArray.remove(this.customRules, rule);\n      this.unregisterRule_(rule);\n      rule.destroy();\n    });\n  }\n\n  /**\n   * @param {!ngeo.rule.Rule} rule Rule.\n   * @export\n   */\n  registerRule_(rule) {\n    const uid = olBase.getUid(rule);\n    this.ruleUnlisteners_[uid] = this.scope_.$watch(\n      () => rule.active,\n      this.handleRuleActiveChange_.bind(this)\n    );\n\n    if (rule instanceof ngeoRuleGeometry) {\n      this.featureOverlay.addFeature(rule.feature);\n    }\n  }\n\n  /**\n   * @param {!ngeo.rule.Rule} rule Rule.\n   * @export\n   */\n  unregisterRule_(rule) {\n    const uid = olBase.getUid(rule);\n    const unlistener = this.ruleUnlisteners_[uid];\n    googAsserts.assert(unlistener);\n    unlistener();\n    delete this.ruleUnlisteners_[uid];\n\n    if (rule instanceof ngeoRuleGeometry) {\n      this.featureOverlay.removeFeature(rule.feature);\n    }\n  }\n\n  /**\n   * Called when the active property of a rule changes. Set the `aRuleIsActive`\n   * property accordingly.\n   * @private\n   */\n  handleRuleActiveChange_() {\n    let aRuleIsActive = false;\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.active) {\n        aRuleIsActive = true;\n        break;\n      }\n    }\n    this.aRuleIsActive = aRuleIsActive;\n  }\n\n  /**\n   * Called when the `aRuleIsActive` property changes. Make sure that\n   * no rule is still active if the property is `false`.\n   * @private\n   */\n  handleARuleIsActiveChange_() {\n    if (this.aRuleIsActive) {\n      return;\n    }\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.active) {\n        rule.active = false;\n        break;\n      }\n    }\n  }\n\n};\n\nexports.controller('ngeoFilterController', exports.FilterController_);\n\n\nexport default exports;\n","/**\n * @module gmf.filters.filterselectorComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceHelper from 'gmf/datasource/Helper.js';\n\nimport gmfDatasourceOGC from 'gmf/datasource/OGC.js';\nimport gmfFiltersSavedFilters from 'gmf/filters/SavedFilters.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFilterComponent from 'ngeo/filter/component.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olArray from 'ol/array.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\nconst exports = angular.module('gmfFilterselector', [\n  gmfAuthenticationService.module.name,\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceHelper.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoMessageModalComponent.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoFilterComponent.name,\n  gmfFiltersSavedFilters.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/filters/filterselectorcomponent', require('./filterselectorcomponent.html'));\n});\n\nexports.value('gmfFilterselectorTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfFilterselectorTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/filters/filterselectorcomponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfFilterselectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfFilterselectorTemplateUrl($attrs, gmfFilterselectorTemplateUrl) {\n  return gmfFilterselectorTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n   *     The Gmf value service that determines the data source currently being\n   *     filtered.\n   * @param {gmf.datasource.Helper} gmfDataSourcesHelper Gmf data\n   *     sources helper service.\n   * @param {gmf.filters.SavedFilters} gmfSavedFilters Gmf saved filters service.\n   * @param {gmfx.User} gmfUser User.\n   * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n   * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo FeatureOverlay\n   *     manager\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfFilterselectorController\n   */\n  constructor($scope, $timeout, gettextCatalog, gmfDataSourceBeingFiltered,\n    gmfDataSourcesHelper, gmfSavedFilters, gmfUser, ngeoNotification,\n    ngeoFeatureOverlayMgr, ngeoRuleHelper\n  ) {\n\n    // Binding properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.active;\n\n    $scope.$watch(\n      () => this.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * The data source that can either be selected from the list or have\n     * its value set from an external source (for example: the layertree)\n     * and that requires to be ready before it can be filtered.\n     * @type {gmfx.datasource.DataSourceBeingFiltered}\n     * @export\n     */\n    this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n    $scope.$watch(\n      () => this.gmfDataSourceBeingFiltered.dataSource,\n      this.handleSelectedDataSourceChange_.bind(this)\n    );\n\n    /**\n     * @type {gmf.datasource.Helper}\n     * @private\n     */\n    this.gmfDataSourcesHelper_ = gmfDataSourcesHelper;\n\n    /**\n     * @type {gmf.filters.SavedFilters}\n     * @export\n     */\n    this.gmfSavedFilters = gmfSavedFilters;\n\n    // Close manage modal if the last item is removed.\n    $scope.$watchCollection(\n      () => this.gmfSavedFilters.currentDataSourceItems,\n      () => {\n        if (this.gmfSavedFilters.currentDataSourceItems.length === 0 &&\n           this.saveFilterManageModalShown) {\n          this.saveFilterManageModalShown = false;\n        }\n      }\n    );\n\n    /**\n     * @type {gmfx.User}\n     * @private\n     */\n    this.gmfUser_ = gmfUser;\n\n    $scope.$watch(\n      () => this.gmfUser_.functionalities,\n      this.handleGmfUserFunctionalitiesChange_.bind(this)\n    );\n\n    /**\n     * @type {ngeo.message.Notification}\n     * @private\n     */\n    this.ngeoNotification_ = ngeoNotification;\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay = googAsserts.assert(\n      ngeoFeatureOverlayMgr.getFeatureOverlay()\n    );\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n\n    // Inner properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.aRuleIsActive = false;\n\n    /**\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.customRules = null;\n\n    /**\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.directedRules = null;\n\n    /**\n     * @type {Array.<gmf.datasource.OGC>}\n     * @export\n     */\n    this.filtrableDataSources = [];\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.filtrableLayerNodeNames_ = null;\n\n    /**\n     * @type {gmfx.datasource.DataSources}\n     * @private\n     */\n    this.gmfDataSources_ = gmfDataSourcesHelper.collection;\n\n    /**\n     * @type {Array.<ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * The data source ready to be filtered, after it has been selected and\n     * prepared.\n     * @type {?gmf.datasource.OGC}\n     * @export\n     */\n    this.readyDataSource = null;\n\n    /**\n     * @type {!gmf.filters.filterselectorComponent.Controller_.RuleCache}\n     * @private\n     */\n    this.ruleCache_ = {};\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.saveFilterSaveModalShown = false;\n\n    // When the modal closes, reset name\n    $scope.$watch(\n      () => this.saveFilterSaveModalShown,\n      () => {\n        this.saveFilterName = '';\n      }\n    );\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.saveFilterName = '';\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.saveFilterManageModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.enableDataSourceRegistration_ = false;\n\n    $scope.$watch(\n      () => this.enableDataSourceRegistration_,\n      this.handleEnableDataSourceRegistrationChange_.bind(this)\n    );\n\n    /**\n     * The name of the data source that should be automatically selected\n     * by this component.\n     * @type {string|undefined}\n     * @private\n     */\n    this.defaultFiltrableDataSourceName_;\n\n    // Initialize the data sources registration\n    this.toggleDataSourceRegistration_();\n  }\n\n\n  /**\n   * @private\n   */\n  handleGmfUserFunctionalitiesChange_() {\n    const usrFunc = this.gmfUser_.functionalities;\n    if (usrFunc && usrFunc['filterable_layers']) {\n      this.filtrableLayerNodeNames_ = usrFunc['filterable_layers'];\n    } else {\n      this.filtrableLayerNodeNames_ = null;\n    }\n    if (usrFunc &&\n        usrFunc['preset_layer_filter'] &&\n        usrFunc['preset_layer_filter'][0]\n    ) {\n      this.defaultFiltrableDataSourceName_ = usrFunc['preset_layer_filter'][0];\n    } else {\n      this.defaultFiltrableDataSourceName_ = undefined;\n    }\n    this.toggleDataSourceRegistration_();\n  }\n\n\n  /**\n   * @private\n   */\n  toggleDataSourceRegistration_() {\n    const newDataSourceRegistration = !!this.filtrableLayerNodeNames_;\n    if (this.enableDataSourceRegistration_ !== newDataSourceRegistration) {\n      this.enableDataSourceRegistration_ = newDataSourceRegistration;\n    }\n  }\n\n\n  /**\n   * Called when the active property changes. Toggle data source registration.\n   * Also, when deactivated, deselect data source.\n   * @param {boolean} active Active.\n   * @private\n   */\n  handleActiveChange_(active) {\n    if (!active) {\n      this.aRuleIsActive = false;\n      this.timeout_(() => {\n        this.gmfDataSourceBeingFiltered.dataSource = null;\n      });\n    }\n  }\n\n\n  /**\n   * @param {boolean} register Whether register the data sources or not.\n   * @private\n   */\n  handleEnableDataSourceRegistrationChange_(register) {\n    const keys = this.listenerKeys_;\n\n    if (register) {\n      // Listen to data sources being added/removed\n      keys.push(\n        olEvents.listen(this.gmfDataSources_, 'add', this.handleDataSourcesAdd_, this),\n        olEvents.listen(this.gmfDataSources_, 'remove', this.handleDataSourcesRemove_, this)\n      );\n\n      // Manage the data sources that are already in the collection\n      this.gmfDataSources_.forEach(this.registerDataSource_, this);\n\n    } else {\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n\n      // Remove data sources that are in the collection\n      this.filtrableDataSources.length = 0;\n    }\n  }\n\n\n  /**\n   * Called when a data source is added to the collection of ngeo data sources.\n   * If the data source is 'valid', add it to the list of filtrable data\n   * sources.\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = evt.element;\n    if (dataSource instanceof gmfDatasourceOGC) {\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If the data source is 'valid', remove it from the list of\n   * filtrable data sources.\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (dataSource instanceof gmfDatasourceOGC) {\n      this.unregisterDataSource_(dataSource);\n    }\n  }\n\n\n  /**\n   * Register a data source if filtrable.  If it's the first time that the\n   * data source is about to be registered, then the `filtrable` property\n   * is set. Otherwise, it's used.\n   *\n   * @param {gmf.datasource.OGC} dataSource Data source\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    if (dataSource.filtrable === null) {\n      dataSource.filtrable = this.isDataSourceFiltrable_(dataSource);\n    }\n\n    if (dataSource.filtrable) {\n      this.filtrableDataSources.push(dataSource);\n\n      if (this.defaultFiltrableDataSourceName_ !== undefined &&\n          dataSource.name === this.defaultFiltrableDataSourceName_\n      ) {\n        this.gmfDataSourceBeingFiltered.dataSource = dataSource;\n      }\n    }\n  }\n\n\n  /**\n   * Unregister a data source if it's filtrable. Also, if it's the one\n   * that was currently selected, deselect it.\n   * @param {gmf.datasource.OGC} dataSource Data source\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    if (dataSource.filtrable) {\n      olArray.remove(this.filtrableDataSources, dataSource);\n\n      if (this.gmfDataSourceBeingFiltered.dataSource === dataSource) {\n        this.gmfDataSourceBeingFiltered.dataSource = null;\n      }\n    }\n  }\n\n\n  /**\n   * Determines whether the data source is valid for addition (or removal) to\n   * the list of filtrable data sources or not.\n   *\n   * To be filtrable, the data source must:\n   *\n   *  1) have its name in the list of filtrable layer node names\n   *  2) support WFS\n   *  3) have only one ogcLayers defined\n   *  4) the ogcLayer must be queryable\n   *\n   * If 1) is true but not any of the others, then the server has not been\n   * configured properly. In this case, a warning notification can be shown.\n   *\n   * @param {gmf.datasource.OGC} dataSource GMF data source object\n   * @param {boolean=} opt_notify Whether to show a warning notification or not\n   *     in case of a data source that has its name is in the list of\n   *     filtrable layer node names but it doesn't match the other requirements.\n   *     Defaults to `true.`\n   * @return {boolean} Whether the data source is valid to add to the list or\n   *     not.\n   * @private\n   */\n  isDataSourceFiltrable_(dataSource, opt_notify) {\n    let filtrable = true;\n    const gettext = this.gettextCatalog_;\n    const notify = opt_notify !== false;\n    const names = googAsserts.assert(this.filtrableLayerNodeNames_);\n    const msgs = [];\n\n    // (1) The name of the DS must be in list of filtrable layer node names\n    if (olArray.includes(names, dataSource.name)) {\n\n      // (2) The DS must support WFS\n      if (!dataSource.supportsWFS) {\n        msgs.push(gettext.getString(\n          'The data source doesn\\'t support WFS, which is required ' +\n          'to fetch the attributes to build the filter rules.'\n        ));\n      }\n\n      // (3) The DS must have only one ogcLayer\n      if (!dataSource.ogcLayers || !dataSource.ogcLayers.length) {\n        msgs.push(gettext.getString(\n          'The data source must have only 1 ogcLayer defined.'\n        ));\n      } else if (!dataSource.ogcLayers[0].queryable) {\n        // (4) The ogcLayer must be queryable\n        msgs.push(gettext.getString(\n          'The ogcLayer within the data source must be queryable.'\n        ));\n      }\n\n      filtrable = !msgs.length;\n\n      // Notify if the name is in list of filtrable layer node names but\n      // there are missing requirements.\n      if (notify && !filtrable) {\n        const p1 = gettext.getString(\n          `The following data source is marked as being filtrable,\n          but is missing some requirements: `\n        );\n        const p2 = `${dataSource.name} (${dataSource.id}).`;\n        const p3 = gettext.getString(\n          `Please, contact your administrator about this.\n          Here are the reasons: `\n        );\n        msgs.unshift(`${p1} ${p2} ${p3}`);\n        console.warn(msgs.join(' '));\n        this.ngeoNotification_.notify({\n          msg: msgs.join(' '),\n          type: ngeoMessageMessage.Type.WARNING\n        });\n      }\n    } else {\n      filtrable = false;\n    }\n\n    return filtrable;\n  }\n\n  /**\n   * @param {?gmf.datasource.OGC} dataSource Newly selected data source\n   *     object.\n   * @private\n   */\n  handleSelectedDataSourceChange_(dataSource) {\n\n    this.aRuleIsActive = false;\n    this.customRules = null;\n    this.directedRules = null;\n    this.readyDataSource = null;\n    this.gmfSavedFilters.currentDataSourceId = null;\n\n    // No need to do anything if no data source is selected\n    if (!dataSource) {\n      return;\n    }\n\n    // A data source has been selected. Make sure the component is active.\n    if (!this.active) {\n      this.active = true;\n    }\n\n    this.gmfDataSourcesHelper_.prepareFiltrableDataSource(\n      dataSource\n    ).then((dataSource) => {\n\n      // Data source is ready. Get any existing rules or create new ones from\n      // the attributes\n      let item = this.getRuleCacheItem_(dataSource);\n      if (!item) {\n        item = {\n          customRules: [],\n          directedRules: []\n        };\n        this.setRuleCacheItem_(dataSource, item);\n        if (dataSource.gmfLayer.metadata &&\n            dataSource.gmfLayer.metadata.directedFilterAttributes &&\n            dataSource.gmfLayer.metadata.directedFilterAttributes.length\n        ) {\n          const directedAttributes =\n              dataSource.gmfLayer.metadata.directedFilterAttributes;\n          const attributes = googAsserts.assert(dataSource.attributes);\n          for (const attribute of attributes) {\n            if (olArray.includes(directedAttributes, attribute.name)) {\n              item.directedRules.push(\n                this.ngeoRuleHelper_.createRuleFromAttribute(attribute)\n              );\n            }\n          }\n        }\n      }\n\n      this.customRules = item.customRules;\n      this.directedRules = item.directedRules;\n      this.readyDataSource = dataSource;\n      this.gmfSavedFilters.currentDataSourceId = dataSource.id;\n\n    });\n  }\n\n  /**\n   * @param {ngeo.datasource.DataSource} dataSource Data source.\n   * @return {?gmf.filters.filterselectorComponent.Controller_.RuleCacheItem} Rule cache item.\n   * @private\n   */\n  getRuleCacheItem_(dataSource) {\n    return this.ruleCache_[dataSource.id] || null;\n  }\n\n  /**\n   * @param {ngeo.datasource.DataSource} dataSource Data source.\n   * @param {gmf.filters.filterselectorComponent.Controller_.RuleCacheItem} item Rule cache item.\n   * @private\n   */\n  setRuleCacheItem_(dataSource, item) {\n    this.ruleCache_[dataSource.id] = item;\n  }\n\n  /**\n   * @export\n   */\n  saveFilterShowModal() {\n    this.saveFilterSaveModalShown = true;\n  }\n\n  /**\n   * @export\n   */\n  saveFilterSave() {\n\n    const name = this.saveFilterName;\n    const dataSource = googAsserts.assert(this.readyDataSource);\n    const dataSourceId = dataSource.id;\n    const alreadyExist = (this.gmfSavedFilters.indexOfItem(\n      name, dataSourceId) !== -1);\n    const condition = dataSource.filterCondition;\n\n    const msg = this.gettextCatalog_.getString(\n      `A filter with the same name already exists.\n      Do you want to overwrite it?`\n    );\n    if (!alreadyExist || confirm(msg)) {\n      // (1) Serialize the existing custom and directed rules\n      const customRules = this.customRules ?\n        this.ngeoRuleHelper_.serializeRules(this.customRules) : [];\n      const directedRules = this.directedRules ?\n        this.ngeoRuleHelper_.serializeRules(this.directedRules) : [];\n\n      // (2) Ask the service to save it\n      const item = /** @type {!gmf.filters.SavedFilters.Item} */ ({\n        condition,\n        customRules,\n        dataSourceId,\n        directedRules,\n        name\n      });\n      this.gmfSavedFilters.save(item);\n\n      // (3) Close popup, which resets the name\n      this.saveFilterSaveModalShown = false;\n    }\n  }\n\n  /**\n   * Load a saved filter item, replacing the current rules.\n   * @param {!gmf.filters.SavedFilters.Item} filterItem Filter item.\n   * @export\n   */\n  saveFilterLoadItem(filterItem) {\n\n    const dataSource = googAsserts.assert(this.readyDataSource);\n\n    // (1) Reset current rules\n    this.customRules = null;\n    this.directedRules = null;\n\n    const customRules = this.ngeoRuleHelper_.createRules(\n      filterItem.customRules);\n    const directedRules = this.ngeoRuleHelper_.createRules(\n      filterItem.directedRules);\n\n    // Timeout, which ensures the destruction of the previous filter component\n    // and the creation of a new one\n    this.timeout_(() => {\n      // (2) Set rules\n      this.customRules = customRules;\n      this.directedRules = directedRules;\n\n      // (3) Set condition\n      dataSource.filterCondition = filterItem.condition;\n\n      // (4) Update cache item\n      const cacheItem = googAsserts.assert(this.getRuleCacheItem_(dataSource));\n      cacheItem.customRules = customRules;\n      cacheItem.directedRules = directedRules;\n    });\n  }\n\n  /**\n   * @export\n   */\n  saveFilterManage() {\n    this.saveFilterManageModalShown = true;\n  }\n\n  /**\n   * Remove a saved filter item.\n   * @param {!gmf.filters.SavedFilters.Item} item Filter item.\n   * @export\n   */\n  saveFilterRemoveItem(item) {\n    this.gmfSavedFilters.remove(item);\n  }\n\n};\n\n\n/**\n * @typedef {Object.<number, !gmf.filters.filterselectorComponent.Controller_.RuleCacheItem>}\n */\nexports.Controller_.RuleCache;\n\n\n/**\n * @typedef {{\n *     customRules: (Array.<ngeo.rule.Rule>),\n *     directedRules: (Array.<ngeo.rule.Rule>)\n * }}\n */\nexports.Controller_.RuleCacheItem;\n\n\nexports.component('gmfFilterselector', {\n  bindings: {\n    active: '=',\n    map: '<',\n    toolGroup: '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfFilterselectorTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.filters.module\n */\nimport gmfFiltersFilterselectorComponent from 'gmf/filters/filterselectorComponent.js';\nimport gmfFiltersSavedFilters from 'gmf/filters/SavedFilters.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfFiltersModule', [\n  gmfFiltersFilterselectorComponent.name,\n  gmfFiltersSavedFilters.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.timeSliderComponent\n */\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\n\nimport 'jquery-ui/ui/widgets/slider.js';\nimport 'angular-ui-slider';\nimport './timeslider.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeTimeSliderComponent', [\n  ngeoMiscWMSTime.module.name,\n  'ui.slider',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree/timesliderComponent', require('./timesliderComponent.html'));\n});\n\n\n/**\n * Provide a directive to select a single date or a range of dates with a slider\n * Example:\n *\n *      <gmf-time-slider\n *          gmf-time-slider-time=\"{\n *            maxValue: '2013-12-31T00:00:00Z',\n *            minValue: '2006-01-01T00:00:00Z',\n *            mode: 'range'}\"\n *          gmf-time-slider-on-date-selected=\"ctrl.onDateSelected(time)\">\n *      </gmf-time-slider>\n *\n * @htmlAttribute {ngeox.TimeProperty} gmf-time-slider-time parameter for initialization.\n * @htmlAttribute {function()} gmf-time-slider-on-date-selected Expression evaluated after\n * date(s) changed\n * @param {angular.$timeout} $timeout angular timeout service\n * @param {angular.$filter} $filter angular filter service\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfTimeSlider\n */\nexports.directive_ = function($timeout, $filter) {\n  return {\n    scope: {\n      onDateSelected: '&gmfTimeSliderOnDateSelected',\n      time: '=gmfTimeSliderTime'\n    },\n    bindToController: true,\n    controller: 'gmfTimeSliderController as sliderCtrl',\n    restrict: 'AE',\n    templateUrl: 'gmf/layertree/timesliderComponent',\n    link: /** @type {!angular.LinkingFunctions} */ ({\n      pre: function preLink(scope, element, attrs, ctrl) {\n        ctrl.init();\n\n        ctrl.sliderOptions['stop'] = onSliderReleased_;\n        ctrl.sliderOptions['slide'] = computeDates_;\n\n        function onSliderReleased_(e, sliderUi) {\n          ctrl.onDateSelected({\n            time: computeDates_(e, sliderUi)\n          });\n          scope.$apply();\n        }\n\n        function computeDates_(e, sliderUi) {\n          let sDate, eDate, wmstime;\n          if (sliderUi.values) {\n            sDate = new Date(ctrl.getClosestValue_(sliderUi.values[0]));\n            eDate = new Date(ctrl.getClosestValue_(sliderUi.values[1]));\n            ctrl.dates = [sDate, eDate];\n            wmstime = {\n              start: sDate.getTime(),\n              end: eDate.getTime()\n            };\n          } else {\n            sDate = new Date(ctrl.getClosestValue_(sliderUi.value));\n            ctrl.dates = sDate;\n            wmstime = {\n              start: sDate.getTime()\n            };\n          }\n          scope.$apply();\n          return wmstime;\n        }\n      }\n    })\n  };\n};\n\n\nexports.directive('gmfTimeSlider', exports.directive_);\n\n\n/**\n * TimeSliderController - directive controller\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime WMSTime service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfTimeSliderController\n */\nexports.Controller_ = function($scope, ngeoWMSTime) {\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * Function called after date(s) changed/selected\n   * @function\n   * @export\n   */\n  this.onDateSelected;\n\n\n  /**\n   * A time object for directive initialization\n   * @type {ngeox.TimeProperty}\n   * @export\n   */\n  this.time;\n\n  /**\n   * If the component is used to select a date range\n   * @type {boolean}\n   * @export\n   */\n  this.isModeRange;\n\n  /**\n   * Minimal value of the slider (time in ms)\n   * @type {number}\n   * @export\n   */\n  this.minValue;\n\n  /**\n   * Maximal value of the slider (time in ms)\n   * @type {number}\n   * @export\n   */\n  this.maxValue;\n\n  /**\n   * Used when WMS time object has a property 'values' instead of an interval\n   * @type (?Array<number>)\n   */\n  this.timeValueList;\n\n  /**\n   * Default Slider options (used by ui-slider directive)\n   * @type {{\n   *  range : boolean,\n   *  min : number,\n   *  max : number\n   * }}\n   * @export\n   */\n  this.sliderOptions;\n\n  /**\n   * Model for the ui-slider directive (date in ms format)\n   * @type {Array.<number>|number}\n   * @export\n   */\n  this.dates;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  this.timeValueList = this.getTimeValueList_();\n\n  // Fetch the initial options for the component\n  const initialOptions_ = this.ngeoWMSTime_.getOptions(this.time);\n  this.isModeRange = this.time.mode === 'range';\n  this.minValue = initialOptions_.minDate;\n  this.maxValue = initialOptions_.maxDate;\n  this.dates = this.isModeRange ? [initialOptions_.values[0], initialOptions_.values[1]] :\n    initialOptions_.values;\n  this.sliderOptions = {\n    range: this.isModeRange,\n    min: this.minValue,\n    max: this.maxValue\n  };\n};\n\n/**\n * TimeSliderController.prototype.getTimeValueList_ - Get a list of time value instead\n * of using the wmstime interval as a list of possibles values\n * @private\n * @return {Array<number>}  - List of timestamp representing possible values\n */\nexports.Controller_.prototype.getTimeValueList_ = function() {\n  const wmsTime = this.time;\n  let timeValueList = null;\n  const minDate = new Date(this.minValue);\n  const maxDate = new Date(this.maxValue);\n\n  if (wmsTime.values) {\n    timeValueList = [];\n    wmsTime.values.forEach((date) => {\n      timeValueList.push(new Date(date).getTime());\n    });\n  } else {\n    const maxNbValues = 1024;\n    const endDate = new Date(minDate.getTime());\n    endDate.setFullYear(minDate.getFullYear() + maxNbValues * wmsTime.interval[0]);\n    endDate.setMonth(minDate.getMonth() + maxNbValues * wmsTime.interval[1],\n      minDate.getDate() + maxNbValues * wmsTime.interval[2]);\n    endDate.setSeconds(minDate.getSeconds() + maxNbValues * wmsTime.interval[3]);\n\n    if (endDate > maxDate) {\n      // Transform interval to a list of values when the number\n      // of values is below a threshold (maxNbValues)\n      timeValueList = [];\n      for (let i = 0; ; i++) {\n        const nextDate = new Date(minDate.getTime());\n        nextDate.setFullYear(minDate.getFullYear() + i * wmsTime.interval[0]);\n        nextDate.setMonth(minDate.getMonth() + i * wmsTime.interval[1],\n          minDate.getDate() + i * wmsTime.interval[2]);\n        nextDate.setSeconds(minDate.getSeconds() + i * wmsTime.interval[3]);\n        if (nextDate <= maxDate) {\n          timeValueList.push(nextDate.getTime());\n        } else {\n          break;\n        }\n      }\n    }\n  }\n  return timeValueList;\n};\n\n\n/**\n * Compute the closest available date from the given timestamp\n * @param  {number} timestamp selected datetime (in ms format)\n * @return {number} the closest available datetime (in ms format) from the timestamp\n * @private\n */\nexports.Controller_.prototype.getClosestValue_ = function(timestamp) {\n  if (timestamp <= this.minValue) {\n    return this.minValue;\n  }\n\n  if (timestamp >= this.maxValue) {\n    return this.maxValue;\n  }\n\n  if (this.timeValueList) {\n    // Time stops are defined as a list of values\n    let index;\n    let leftIndex = 0;\n    let rightIndex = this.timeValueList.length - 1;\n\n    while ((rightIndex - leftIndex) > 1) {\n      index = Math.floor((leftIndex + rightIndex) / 2);\n      if (this.timeValueList[index] >= timestamp) {\n        rightIndex = index;\n      } else {\n        leftIndex = index;\n      }\n    }\n\n    const leftDistance = Math.abs(this.timeValueList[leftIndex] - timestamp);\n    const rightDistance = Math.abs(this.timeValueList[rightIndex] - timestamp);\n\n    return this.timeValueList[leftDistance < rightDistance ? leftIndex : rightIndex];\n  } else {\n    // Time stops are defined by a start date plus an interval\n    const targetDate = new Date(timestamp);\n    const startDate = new Date(this.minValue);\n    let bestDate = new Date(this.minValue);\n    const maxDate = new Date(this.maxValue);\n    let bestDistance = Math.abs(targetDate - bestDate);\n\n    for (let i = 1; ; i++) {\n      // The start date should always be used as a reference\n      // because adding a month twice could differ from adding\n      // two months at once\n      const next = new Date(startDate.getTime());\n      next.setFullYear(startDate.getFullYear() + i * this.time.interval[0]);\n      next.setMonth(startDate.getMonth() + i *  this.time.interval[1],\n        startDate.getDate() + i * this.time.interval[2]);\n      next.setSeconds(startDate.getSeconds() + i * this.time.interval[3]);\n\n      if (next > maxDate) {\n        break;\n      }\n\n      const distance = Math.abs(targetDate - next);\n      if (distance <= bestDistance) {\n        bestDate = next;\n        bestDistance = distance;\n      } else {\n        break;\n      }\n    }\n\n    return bestDate.getTime();\n  }\n};\n\n\n/**\n * Format and localize time regarding a resolution.\n * @param {number} time (in ms format) timestamp to format and localize.\n * @return {string} Localized date string regarding the resolution.\n * @export\n */\nexports.Controller_.prototype.getLocalizedDate = function(time) {\n  return this.ngeoWMSTime_.formatTimeValue(time, this.time.resolution);\n};\n\n\nexports.controller('gmfTimeSliderController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.module\n */\nimport gmfLayertreeComponent from 'gmf/layertree/component.js';\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTimeSliderComponent from 'gmf/layertree/timeSliderComponent.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\n\nimport './common.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeModule', [\n  gmfLayertreeComponent.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTimeSliderComponent.name,\n  gmfLayertreeTreeManager.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.module\n */\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfPermalinkShareService from 'gmf/permalink/ShareService.js';\nimport gmfPermalinkShareComponent from 'gmf/permalink/shareComponent.js';\n\nimport './share.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfPermalinkModule', [\n  gmfPermalinkPermalink.module.name,\n  gmfPermalinkShareService.module.name,\n  gmfPermalinkShareComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optional. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.scaleselector\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport * as olEvents from 'ol/events.js';\nimport 'bootstrap/js/dropdown.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/map/scaleselector';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/map/scaleselector', require('./scaleselector.html'));\n});\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optional. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nconst directive = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', directive);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nconst ScaleselectorController = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  googAsserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = ScaleselectorController.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nScaleselectorController.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nScaleselectorController.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nScaleselectorController.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nScaleselectorController.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nScaleselectorController.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nScaleselectorController.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController', ScaleselectorController);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.module\n */\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.map.component\n */\nimport gmfPermalinkModule from 'gmf/permalink/module.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkModule.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapModule.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/map', require('./component.html'));\n});\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: 'gmf/map'\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.map.mousepositionComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport olControlMousePosition from 'ol/control/MousePosition.js';\nimport * as olProj from 'ol/proj.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapMouseposition', [\n  ngeoMiscFilters.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/map/mousepositionComponent', require('./mousepositionComponent.html'));\n});\n\n\nexports.value('gmfMapMousepositionTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfMapMousepositionTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/map/mousepositionComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfMapMousepositionTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfMapMousepositionTemplateUrl($attrs, gmfMapMousepositionTemplateUrl) {\n  return gmfMapMousepositionTemplateUrl($attrs);\n}\n\n/**\n * Provide a component to display the mouse position coordinates depending\n * on the chosen projection. The component also provides a projection picker\n * to choose how the coordinates are displayed.\n * service.\n *\n * Example:\n *  <gmf-mouseposition gmf-mouseposition-map=\"ctrl.map\"\n *     gmf-mouseposition-projections=\"ctrl.projections\">\n *  </gmf-mouseposition>\n *\n * @htmlAttribute {ol.Map} gmf-mouseposition-map The map.\n * @htmlAttribute {Array.<gmfx.MousePositionProjection>}\n *    gmf-mouseposition-projection The list of the projections.\n *\n * @ngdoc component\n * @ngname gmfMouseposition\n */\nexports.component_ = {\n  controller: 'gmfMousepositionController as ctrl',\n  bindings: {\n    'map': '<gmfMousepositionMap',\n    'projections': '<gmfMousepositionProjections'\n  },\n  templateUrl: gmfMapMousepositionTemplateUrl\n};\n\nexports.component('gmfMouseposition',\n  exports.component_);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfMousepositionController\n */\nexports.Controller_ = function($element, $filter, $scope, gettextCatalog) {\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!Array.<!gmfx.MousePositionProjection>}\n   * @export\n   */\n  this.projections;\n\n  /**\n   * @type {!gmfx.MousePositionProjection}\n   * @export\n   */\n  this.projection;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type  {?ol.control.MousePosition}\n   * @private\n   */\n  this.control_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.$scope_.$on('gettextLanguageChanged', () => {\n    this.initOlControl_();\n  });\n\n  // Init control once, in case of applications that never set the language.\n  this.initOlControl_();\n};\n\n\n/**\n * Init the ol.control.MousePosition\n * @private\n */\nexports.Controller_.prototype.initOlControl_ = function() {\n  if (this.control_ !== null) {\n    this.map.removeControl(this.control_);\n  }\n\n  // function that apply the filter.\n  const formatFn = function(coordinates) {\n    const filterAndArgs = this.projection.filter.split(':');\n    const filter = this.$filter_(filterAndArgs.shift());\n    googAsserts.assertFunction(filter);\n    const args = filterAndArgs;\n    args.unshift(coordinates);\n    return filter.apply(this, args);\n  };\n\n  const gettextCatalog = this.gettextCatalog_;\n  this.control_ = new olControlMousePosition({\n    className: 'gmf-mouseposition-control',\n    coordinateFormat: formatFn.bind(this),\n    target: angular.element('.gmf-mouseposition-control-target', this.$element_)[0],\n    undefinedHTML: gettextCatalog.getString('Coordinates')\n  });\n\n  this.setProjection(this.projections[0]);\n\n  this.map.addControl(this.control_);\n};\n\n\n/**\n * @param {gmfx.MousePositionProjection} projection The new projection to use.\n * @export\n */\nexports.Controller_.prototype.setProjection = function(projection) {\n  this.control_.setProjection(olProj.get(projection.code));\n  this.projection = projection;\n};\n\nexports.controller('gmfMousepositionController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.map.module\n */\nimport gmfMapComponent from 'gmf/map/component.js';\nimport gmfMapMousepositionComponent from 'gmf/map/mousepositionComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapModule', [\n  gmfMapComponent.name,\n  gmfMapMousepositionComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.grid.Config\n */\nimport * as olBase from 'ol/index.js';\n\n/**\n * @param {Array.<Object>|undefined} data Entries/objects to be shown in a grid.\n * @param {Array.<ngeox.GridColumnDef>|undefined} columnDefs Column definition of a grid.\n * @constructor\n * @struct\n * @export\n */\nconst exports = function(data, columnDefs) {\n  /**\n   * @type {Array.<Object>|undefined}\n   * @export\n   */\n  this.data = data;\n\n  /**\n   * @type {Array.<ngeox.GridColumnDef>|undefined}\n   * @export\n   */\n  this.columnDefs = columnDefs;\n\n  /**\n   * @type {!Object.<string, Object>}\n   * @export\n   */\n  this.selectedRows = {};\n};\n\n\n/**\n * Get an ID for a row.\n * @param {Object} attributes An entry/row.\n * @return {string} Unique id for this object.\n * @export\n */\nexports.getRowUid = function(attributes) {\n  return `${olBase.getUid(attributes)}`;\n};\n\n\n/**\n * Is the given row selected?\n * @param {Object} attributes An entry/row.\n * @return {boolean} True if already selected. False otherwise.\n * @export\n */\nexports.prototype.isRowSelected = function(attributes) {\n  return !!this.selectedRows[exports.getRowUid(attributes)];\n};\n\n\n/**\n * Returns the number of selected rows.\n * @return {number} Number of selected rows.\n * @export\n */\nexports.prototype.getSelectedCount = function() {\n  return Object.keys(this.selectedRows).length;\n};\n\n\n/**\n * Returns the selected rows.\n * @return {Array.<Object>} Selected rows in the current ordering.\n * @export\n */\nexports.prototype.getSelectedRows = function() {\n  return this.data.filter(row => this.isRowSelected(row));\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @public\n */\nexports.prototype.selectRow = function(attributes) {\n  const uid = exports.getRowUid(attributes);\n  this.selectedRows[uid] = attributes;\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @public\n */\nexports.prototype.toggleRow = function(attributes) {\n  const uid = exports.getRowUid(attributes);\n  const isSelected = this.isRowSelected(attributes);\n  if (isSelected) {\n    delete this.selectedRows[uid];\n  } else {\n    this.selectedRows[uid] = attributes;\n  }\n};\n\n\n/**\n * Select all rows.\n * @export\n */\nexports.prototype.selectAll = function() {\n  this.data.forEach((attributes) => {\n    this.selectRow(attributes);\n  });\n};\n\n\n/**\n * Deselect all rows.\n * @export\n */\nexports.prototype.unselectAll = function() {\n  for (const rowId in this.selectedRows) {\n    delete this.selectedRows[rowId];\n  }\n};\n\n\n/**\n * Invert selection.\n * @export\n */\nexports.prototype.invertSelection = function() {\n  this.data.forEach((attributes) => {\n    this.toggleRow(attributes);\n  });\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoGridConfig', []);\n\n\nexport default exports;\n","/**\n * @module ngeo.grid.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGridConfig from 'ngeo/grid/Config.js';\nimport * as olHas from 'ol/has.js';\n\nimport 'floatthead';\nimport 'angular-float-thead';\nimport 'font-awesome/css/font-awesome.css';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGrid', [\n  ngeoGridConfig.module.name,\n  ngeoMiscFilters.name,\n  'floatThead',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/grid', require('./component.html'));\n});\n\n\nexports.value('ngeoGridTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoGridTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/grid';\n  }\n);\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoGridTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoGridTemplateUrl($attrs, ngeoGridTemplateUrl) {\n  return ngeoGridTemplateUrl($attrs);\n}\n\n\n/**\n * A grid component for displaying tabular data. The columns of the grid\n * are sortable, rows can be selected with a single click (also in combination\n * with SHIFT and CTRL/Meta).\n *\n * Example:\n *\n *     <ngeo-grid\n *       ngeo-grid-configuration=\"::ctrl.gridConfiguration\"\n *     </ngeo-grid>\n *\n * @htmlAttribute {ngeo.grid.Config} ngeo-grid-configuration The\n * configuration to use.\n *\n * @ngdoc component\n * @ngname ngeoGrid\n */\nexports.component_ = {\n  controller: 'ngeoGridController as ctrl',\n  bindings: {\n    'configuration': '=ngeoGridConfiguration'\n  },\n  templateUrl: ngeoGridTemplateUrl\n};\n\nexports.component('ngeoGrid', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoGridController\n */\nexports.Controller_ = function($scope) {\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.grid.Config}\n   * @export\n   */\n  this.configuration;\n\n  /**\n   * @type {Object.<string, Object>}\n   * @export\n   */\n  this.selectedRows;\n\n  /**\n   * The name of the column used to sort the grid.\n   * @type {string}\n   * @export\n   */\n  this.sortedBy;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.sortAscending = true;\n\n  /**\n   * Configuration object for float-thead.\n   * @type {Object}\n   * @export\n   */\n  this.floatTheadConfig = {\n    'scrollContainer': function($table) {\n      return $table.closest('.ngeo-grid-table-container');\n    }\n  };\n};\n\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.selectedRows = this.configuration.selectedRows;\n};\n\n\n/**\n * Sort function that always puts undefined values to the bottom of the grid.\n * A new call will sort ascending. A next one will sort descending (and so\n * on).\n * @param {string} columnName The name of the column that should be used to\n *    sort the data.\n * @export\n */\nexports.Controller_.prototype.sort = function(columnName) {\n  this.sortAscending = this.sortedBy === columnName ? !this.sortAscending : true;\n  this.sortedBy = columnName;\n\n  const asc = this.sortAscending ? 1 : -1;\n  this.configuration.data.sort((attributes1, attributes2) => {\n    if (!attributes1[columnName]) {\n      return 1;\n    }\n    if (!attributes2[columnName]) {\n      return -1;\n    }\n    return attributes1[columnName] > attributes2[columnName] ? asc : -asc;\n  });\n};\n\n\n/**\n * Handler for clicks on a row.\n * @param {Object} attributes An entry/row.\n * @param {jQuery.Event} event Event.\n * @export\n */\nexports.Controller_.prototype.clickRow = function(attributes, event) {\n  const shiftKey = this.isShiftKeyOnly_(event);\n  const platformModifierKey = this.isPlatformModifierKeyOnly_(event);\n\n  this.clickRow_(attributes, shiftKey, platformModifierKey);\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @param {boolean} shiftKey Shift pressed?\n * @param {boolean} platformModifierKey CTRL/Meta pressed?\n * @private\n */\nexports.Controller_.prototype.clickRow_ = function(\n  attributes, shiftKey, platformModifierKey) {\n\n  if (shiftKey && !platformModifierKey) {\n    this.selectRange_(attributes);\n  } else if (!shiftKey && platformModifierKey) {\n    this.configuration.toggleRow(attributes);\n  } else {\n    const isSelected = this.configuration.isRowSelected(attributes);\n    this.configuration.unselectAll();\n    if (!isSelected) {\n      this.configuration.selectRow(attributes);\n    }\n  }\n};\n\n\n/**\n * Selects all rows between the given row and the closest already selected row.\n * @param {Object} attributes An entry/row.\n * @private\n */\nexports.Controller_.prototype.selectRange_ = function(attributes) {\n  const targetUid = ngeoGridConfig.getRowUid(attributes);\n  const data = this.configuration.data;\n\n  if (this.configuration.isRowSelected(attributes)) {\n    return;\n  }\n\n  // get the position of the clicked and all already selected rows\n  /** @type {number|undefined} */\n  let posClickedRow = undefined;\n  const posSelectedRows = [];\n  for (let i = 0; i < data.length; i++) {\n    const currentRow = data[i];\n    const currentUid = ngeoGridConfig.getRowUid(currentRow);\n\n    if (targetUid === currentUid) {\n      posClickedRow = i;\n    } else if (this.configuration.isRowSelected(currentRow)) {\n      posSelectedRows.push(i);\n    }\n  }\n  googAsserts.assert(posClickedRow !== undefined);\n\n  if (posSelectedRows.length == 0) {\n    // if no other row is selected, select the clicked one and stop\n    this.configuration.selectRow(attributes);\n  }\n\n  // find the selected row which is the closest to the clicked row\n  let distance = Infinity;\n  let posClosestRow = posSelectedRows[0];\n  for (let j = 0; j < posSelectedRows.length; j++) {\n    const currentPos = posSelectedRows[j];\n    const currentDistance = Math.abs(currentPos - posClickedRow);\n    if (distance > currentDistance) {\n      distance = currentDistance;\n      posClosestRow = currentPos;\n    }\n    // note: this could be optimized because `posSelectedRows` is ordered.\n  }\n\n  // then select all rows between the clicked one and the closest\n  const rangeStart = (posClickedRow < posClosestRow) ? posClickedRow : posClosestRow;\n  const rangeEnd = (posClickedRow > posClosestRow) ? posClickedRow : posClosestRow;\n\n  for (let l = rangeStart; l <= rangeEnd; l++) {\n    this.configuration.selectRow(data[l]);\n  }\n};\n\n\n/**\n * Prevent the default browser behaviour of selecting text\n * when selecting multiple rows with SHIFT or CTRL/Meta.\n * @param {jQuery.Event} event Event.\n * @export\n */\nexports.Controller_.prototype.preventTextSelection = function(event) {\n  const shiftKey = this.isShiftKeyOnly_(event);\n  const platformModifierKey = this.isPlatformModifierKeyOnly_(event);\n\n  if (shiftKey || platformModifierKey) {\n    event.preventDefault();\n  }\n};\n\n\n/**\n * Same as `ol.events.condition.platformModifierKeyOnly`.\n * @param {jQuery.Event} event Event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @private\n */\nexports.Controller_.prototype.isPlatformModifierKeyOnly_ = function(event) {\n  return !event.altKey &&\n    (olHas.MAC ? event.metaKey : event.ctrlKey) &&\n    !event.shiftKey;\n};\n\n\n/**\n * Same as `ol.events.condition.shiftKeyOnly`.\n * @param {jQuery.Event} event Event.\n * @return {boolean} True if only the shift key is pressed.\n * @private\n */\nexports.Controller_.prototype.isShiftKeyOnly_ = function(event) {\n  return (\n    !event.altKey &&\n      !(event.metaKey || event.ctrlKey) &&\n      event.shiftKey);\n};\n\n\nexports.controller('ngeoGridController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.query.gridComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadCsv from 'ngeo/download/Csv.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\n/** @suppress {extraRequire} */\nimport ngeoGridComponent from 'ngeo/grid/component.js';\n\nimport ngeoGridConfig from 'ngeo/grid/Config.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/** @suppress {extraRequire} - required for `ngeoQueryResult` */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olCollection from 'ol/Collection.js';\nimport * as olExtent from 'ol/extent.js';\nimport olMap from 'ol/Map.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryGridComponent', [\n  ngeoDownloadCsv.module.name,\n  ngeoDownloadService.name,\n  ngeoGridComponent.name,\n  ngeoGridConfig.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.value('gmfDisplayquerygridTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfDisplayquerygridTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/query/gridComponent';\n  }\n);\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/query/gridComponent', require('./gridComponent.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfDisplayquerygridTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfDisplayquerygridTemplateUrl($element, $attrs, gmfDisplayquerygridTemplateUrl) {\n  return gmfDisplayquerygridTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provides a component to display results of the {@link ngeo.queryResult} in a\n * grid and shows related features on the map using\n * the {@link ngeo.map.FeatureOverlayMgr}.\n *\n * You can override the default component's template by setting the\n * value `gmfDisplayquerygridTemplateUrl`.\n *\n * Features displayed on the map use a default style but you can override these\n * styles by passing ol.style.Style objects as attributes of this component.\n *\n * Note: the following ng-class need to be present in the interface <body> element to display the footer\n * when the grid is active (initially there should be the code for the profile tool):\n *      <body ng-class=\"{'gmf-profile-chart-active': !!profileChartActive, 'gmf-query-grid-active': !!queryGridActive}\">\n *\n * Example:\n *\n *      <gmf-displayquerygrid\n *        gmf-displayquerygrid-map=\"ctrl.map\"\n *        gmf-displayquerygrid-featuresstyle=\"ctrl.styleForAllFeatures\"\n *        gmf-displayquerygrid-selectedfeaturestyle=\"ctrl.styleForTheCurrentFeature\">\n *      </gmf-displayquerygrid>\n *\n * @htmlAttribute {boolean} gmf-displayquerygrid-active The active state of the component.\n * @htmlAttribute {ol.style.Style} gmf-displayquerygrid-featuresstyle A style\n *     object for all features from the result of the query.\n * @htmlAttribute {ol.style.Style} gmf-displayquerygrid-selectedfeaturestyle A style\n *     object for the currently selected features.\n * @htmlAttribute {ol.Map} gmf-displayquerygrid-map The map.\n * @htmlAttribute {boolean?} gmf-displayquerygrid-removeemptycolumns Optional. Should\n *     empty columns be hidden? Default: `false`.\n * @htmlAttribute {number?} gmf-displayquerygrid-maxrecenterzoom Optional. Maximum\n *     zoom-level to use when zooming to selected features.\n * @htmlAttribute {gmfx.GridMergeTabs?} gmf-displayquerygrid-gridmergetabs Optional.\n *     Configuration to merge grids with the same attributes into a single grid.\n *\n * @ngdoc component\n * @ngname gmfDisplayquerygrid\n */\nexports.component_ = {\n  controller: 'GmfDisplayquerygridController as ctrl',\n  bindings: {\n    'active': '=?gmfDisplayquerygridActive',\n    'featuresStyleFn': '&gmfDisplayquerygridFeaturesstyle',\n    'selectedFeatureStyleFn': '&gmfDisplayquerygridSelectedfeaturestyle',\n    'getMapFn': '&gmfDisplayquerygridMap',\n    'removeEmptyColumnsFn': '&?gmfDisplayquerygridRemoveemptycolumns',\n    'maxResultsFn': '&?gmfDisplayquerygridMaxresults',\n    'maxRecenterZoomFn': '&?gmfDisplayquerygridMaxrecenterzoom',\n    'mergeTabs': '<?gmfDisplayquerygridMergetabs'\n  },\n  templateUrl: gmfDisplayquerygridTemplateUrl\n};\n\n\nexports.component('gmfDisplayquerygrid', exports.component_);\n\n\n/**\n * Controller for the query grid.\n *\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.QueryResult} ngeoQueryResult ngeo query result.\n * @param {!ngeo.query.MapQuerent} ngeoMapQuerent ngeo map querent service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.download.Csv} ngeoCsvDownload CSV download service.\n * @param {!angular.JQLite} $element Element.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisplayquerygridController\n */\nexports.Controller_ = function($injector, $scope, ngeoQueryResult, ngeoMapQuerent,\n  ngeoFeatureOverlayMgr, $timeout, ngeoCsvDownload, $element) {\n\n  const queryOptions = /** @type {ngeox.QueryOptions} */ (\n    $injector.has('ngeoQueryOptions') ?\n      $injector.get('ngeoQueryOptions') : {});\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {!ngeox.QueryResult}\n   * @export\n   */\n  this.ngeoQueryResult = ngeoQueryResult;\n\n  /**\n   * @type {!ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n  /**\n   * @type {!ngeo.download.Csv}\n   * @private\n   */\n  this.ngeoCsvDownload_ = ngeoCsvDownload;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.maxResults = queryOptions.limit !== undefined ? queryOptions.limit : 50;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.pending = false;\n\n  /**\n   * @type {!Object.<string, gmfx.GridSource>}\n   * @export\n   */\n  this.gridSources = {};\n\n  /**\n   * IDs of the grid sources in the order they were loaded.\n   * @type {!Array.<string>}\n   * @export\n   */\n  this.loadedGridSources = [];\n\n  /**\n   * The id of the currently shown query source.\n   * @type {string|number|null}\n   * @export\n   */\n  this.selectedTab = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.removeEmptyColumns_ = false;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.maxRecenterZoom;\n\n  /**\n   * @type {!gmfx.GridMergeTabs}\n   * @export\n   */\n  this.mergeTabs = {};\n\n  /**\n   * A mapping between row uid and the corresponding feature for each\n   * source.\n   * @type {!Object.<string, Object.<string, ol.Feature>>}\n   * @private\n   */\n  this.featuresForSources_ = {};\n\n  // Styles for displayed features (features) and selected features\n  // (highlightFeatures_) (user can set both styles).\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.highlightFeatures_ = new olCollection();\n\n  /**\n   * Filename\n   * @type {string}\n   * @private\n   */\n  this.filename_ = $injector.has('gmfCsvFilename') ?\n    $injector.get('gmfCsvFilename') : 'query-results.csv';\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  // Watch the ngeo query result service.\n  this.$scope_.$watchCollection(\n    () => ngeoQueryResult,\n    (newQueryResult, oldQueryResult) => {\n      if (newQueryResult !== oldQueryResult) {\n        this.updateData_();\n      }\n    });\n\n  /**\n   * An unregister function returned from `$scope.$watchCollection` for\n   * \"on-select\" changes (when rows are selected/unselected).\n   * @type {?function()}\n   * @private\n   */\n  this.unregisterSelectWatcher_ = null;\n};\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.removeEmptyColumns_ = this['removeEmptyColumnsFn'] ? this['removeEmptyColumnsFn']() === true : false;\n  this.maxRecenterZoom = this['maxRecenterZoomFn'] ? this['maxRecenterZoomFn']() : undefined;\n\n  const featuresOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  featuresOverlay.setFeatures(this.features_);\n  const featuresStyle = this['featuresStyleFn']();\n  if (featuresStyle !== undefined) {\n    googAsserts.assertInstanceof(featuresStyle, olStyleStyle);\n    featuresOverlay.setStyle(featuresStyle);\n  }\n\n  const highlightFeaturesOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  highlightFeaturesOverlay.setFeatures(this.highlightFeatures_);\n  let highlightFeatureStyle = this['selectedFeatureStyleFn']();\n  if (highlightFeatureStyle !== undefined) {\n    googAsserts.assertInstanceof(highlightFeatureStyle, olStyleStyle);\n  } else {\n    const fill = new olStyleFill({color: [255, 0, 0, 0.6]});\n    const stroke = new olStyleStroke({color: [255, 0, 0, 1], width: 2});\n    highlightFeatureStyle = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke,\n      zIndex: 10\n    });\n  }\n  highlightFeaturesOverlay.setStyle(highlightFeatureStyle);\n\n  const mapFn = this['getMapFn'];\n  if (mapFn) {\n    const map = mapFn();\n    googAsserts.assertInstanceof(map, olMap);\n    this.map_ = map;\n  }\n};\n\n/**\n * Returns a list of grid sources in the order they were loaded.\n * @export\n * @return {Array.<gmfx.GridSource>} Grid sources.\n */\nexports.Controller_.prototype.getGridSources = function() {\n  return this.loadedGridSources.map(sourceLabel => this.gridSources[sourceLabel]);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateData_ = function() {\n  // close if there are no results\n  if (this.ngeoQueryResult.total === 0 && !this.hasOneWithTooManyResults_()) {\n    const oldActive = this.active;\n    this.clear();\n    if (oldActive) {\n      // don't close if there are pending queries\n      this.active = this.ngeoQueryResult.pending;\n      this.pending = this.ngeoQueryResult.pending;\n    }\n    return;\n  }\n\n  this.active = true;\n  this.pending = false;\n  let sources = this.ngeoQueryResult.sources;\n  // merge sources if requested\n  if (Object.keys(this.mergeTabs).length > 0) {\n    sources = this.getMergedSources_(sources);\n  }\n\n  // create grids (only for source with features or with too many results)\n  sources.forEach((source) => {\n    if (source.tooManyResults) {\n      this.makeGrid_(null, source);\n    } else {\n      source.id = this.escapeValue(source.id);\n      const features = source.features;\n      if (features.length > 0) {\n        this.collectData_(source);\n      }\n    }\n  });\n\n  if (this.loadedGridSources.length === 0) {\n    // if no grids were created, do not show\n    this.active = false;\n    return;\n  }\n\n  // keep the first existing navigation tab open\n  if (this.selectedTab === null || !((`${this.selectedTab}`) in this.gridSources)) {\n    // selecting the tab is done in a timeout, because otherwise in rare cases\n    // `ng-class` might set the `active` class on multiple tabs.\n    this.$timeout_(() => {\n      const firstSourceId = this.loadedGridSources[0];\n      this.selectTab(this.gridSources[firstSourceId]);\n    }, 0);\n  }\n};\n\n\n/**\n * @private\n * @return {boolean} If one of the source has too many results.\n */\nexports.Controller_.prototype.hasOneWithTooManyResults_ = function() {\n  return this.ngeoQueryResult.sources.some(source => source.tooManyResults);\n};\n\n/**\n * Returns the value with all symbols and spaces replaced by an underscore.\n * @param {string|number} value A value to escape.\n * @returns {string|number} value An escaped value.\n * @export\n */\nexports.Controller_.prototype.escapeValue = function(value) {\n  // Work-around for Number.isInteger() when not always getting a number ...\n  if (Number.isInteger(/** @type {number} */ (value))) {\n    return value;\n  } else {\n    const toEscape = /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\ |]/g;\n    if (value.match(toEscape) !== null) {\n      return value.replace(toEscape, '_');\n    } else {\n      return value;\n    }\n  }\n};\n\n\n/**\n * Returns if the given grid source is selected?\n * @export\n * @param {gmfx.GridSource} gridSource Grid source.\n * @return {boolean} Is selected?\n */\nexports.Controller_.prototype.isSelected = function(gridSource) {\n  return this.selectedTab === gridSource.source.label;\n};\n\n\n/**\n * Try to merge the mergable sources.\n * @param {Array.<ngeox.QueryResultSource>} sources Sources.\n * @return {Array.<ngeox.QueryResultSource>} The merged sources.\n * @private\n */\nexports.Controller_.prototype.getMergedSources_ = function(sources) {\n  const allSources = [];\n  /** @type {Object.<string, ngeox.QueryResultSource>} */\n  const mergedSources = {};\n\n  sources.forEach((source) => {\n    // check if this source can be merged\n    const mergedSource = this.getMergedSource_(source, mergedSources);\n\n    if (mergedSource === null) {\n      // this source should not be merged, add as is\n      allSources.push(source);\n    }\n  });\n\n  for (const mergedSourceId in mergedSources) {\n    allSources.push(mergedSources[mergedSourceId]);\n  }\n\n  return allSources;\n};\n\n\n/**\n * Check if the given source should be merged. If so, an artificial source\n * that will contain the features of all mergable sources is returned. If not,\n * `null` is returned.\n * @param {ngeox.QueryResultSource} source Source.\n * @param {Object.<string, ngeox.QueryResultSource>} mergedSources Merged sources.\n * @return {?ngeox.QueryResultSource} A merged source of null if the source should\n *    not be merged.\n * @private\n */\nexports.Controller_.prototype.getMergedSource_ = function(source, mergedSources) {\n  let mergeSourceId = null;\n\n  for (const currentMergeSourceId in this.mergeTabs) {\n    const sourceLabels = this.mergeTabs[currentMergeSourceId];\n    const containsSource = sourceLabels.some(sourceLabel => sourceLabel == source.label);\n    if (containsSource) {\n      mergeSourceId = currentMergeSourceId;\n      break;\n    }\n  }\n\n  if (mergeSourceId === null) {\n    // this source should not be merged\n    return null;\n  }\n\n  /** @type {ngeox.QueryResultSource} */\n  let mergeSource;\n  if (mergeSourceId in mergedSources) {\n    mergeSource = mergedSources[mergeSourceId];\n  } else {\n    mergeSource = {\n      features: [],\n      id: mergeSourceId,\n      label: mergeSourceId,\n      limit: this.maxResults,\n      pending: false,\n      queried: true,\n      tooManyResults: false,\n      totalFeatureCount: undefined\n    };\n    mergedSources[mergeSourceId] = mergeSource;\n  }\n\n  // add features of source to merge source\n  source.features.forEach((feature) => {\n    mergeSource.features.push(feature);\n  });\n\n  // if one of the source has too many results, the resulting merged source will\n  // also be marked with `tooManyResults` and will not contain any features.\n  mergeSource.tooManyResults = mergeSource.tooManyResults || source.tooManyResults;\n  if (mergeSource.tooManyResults) {\n    mergeSource.totalFeatureCount = (mergeSource.totalFeatureCount !== undefined) ?\n      mergeSource.totalFeatureCount + mergeSource.features.length : mergeSource.features.length;\n    mergeSource.features = [];\n  }\n  if (source.totalFeatureCount !== undefined) {\n    mergeSource.totalFeatureCount = (mergeSource.totalFeatureCount !== undefined) ?\n      mergeSource.totalFeatureCount + source.totalFeatureCount : source.totalFeatureCount;\n  }\n\n  return mergeSource;\n};\n\n\n/**\n * Collect all features in the queryResult object.\n * @param {ngeox.QueryResultSource} source Result source.\n * @private\n */\nexports.Controller_.prototype.collectData_ = function(source) {\n  const features = source.features;\n  const allProperties = [];\n  const featureGeometriesNames = [];\n  const featuresForSource = {};\n  let properties, featureGeometryName;\n  features.forEach((feature) => {\n    properties = feature.getProperties();\n    if (properties !== undefined) {\n      // Keeps distinct geometry names to remove theme later.\n      featureGeometryName = feature.getGeometryName();\n      if (featureGeometriesNames.indexOf(featureGeometryName) === -1) {\n        featureGeometriesNames.push(featureGeometryName);\n      }\n\n      allProperties.push(properties);\n      featuresForSource[ngeoGridConfig.getRowUid(properties)] = feature;\n    }\n  });\n\n  this.cleanProperties_(allProperties, featureGeometriesNames);\n  if (allProperties.length > 0) {\n    const gridCreated = this.makeGrid_(allProperties, source);\n    if (gridCreated) {\n      this.featuresForSources_[`${source.label}`] = featuresForSource;\n    }\n  }\n};\n\n\n/**\n * Remove all unwanted columns.\n * @param {Array.<Object>} allProperties A row.\n * @param {Array.<string>} featureGeometriesNames Geometry names.\n * @private\n */\nexports.Controller_.prototype.cleanProperties_ = function(\n  allProperties, featureGeometriesNames) {\n  allProperties.forEach((properties) => {\n    featureGeometriesNames.forEach((featureGeometryName) => {\n      delete properties[featureGeometryName];\n    });\n    delete properties['boundedBy'];\n    delete properties['ngeo_feature_type_'];\n  });\n\n  if (this.removeEmptyColumns_ === true) {\n    this.removeEmptyColumnsFn_(allProperties);\n  }\n};\n\n\n/**\n * Remove columns that will be completely empty between each properties.\n * @param {Array.<Object>} allProperties A row.\n * @private\n */\nexports.Controller_.prototype.removeEmptyColumnsFn_ = function(\n  allProperties) {\n  // Keep all keys that correspond to at least one value in a properties object.\n  const keysToKeep = [];\n  let i, key;\n  for (key in allProperties[0]) {\n    for (i = 0; i < allProperties.length; i++) {\n      if (allProperties[i][key] !== undefined) {\n        keysToKeep.push(key);\n        break;\n      }\n    }\n  }\n  // Get all keys that previously always refers always to an empty value.\n  let keyToRemove;\n  allProperties.forEach((properties) => {\n    keyToRemove = [];\n    for (key in properties) {\n      if (keysToKeep.indexOf(key) === -1) {\n        keyToRemove.push(key);\n      }\n    }\n    // Remove these keys.\n    keyToRemove.forEach((key) => {\n      delete properties[key];\n    });\n  });\n};\n\n\n/**\n * @param {?Array.<Object>} data Grid rows.\n * @param {ngeox.QueryResultSource} source Query source.\n * @return {boolean} Returns true if a grid was created.\n * @private\n */\nexports.Controller_.prototype.makeGrid_ = function(data, source) {\n  const sourceLabel = `${source.label}`;\n  let gridConfig = null;\n  if (data !== null) {\n    gridConfig = this.getGridConfiguration_(data);\n    if (gridConfig === null) {\n      return false;\n    }\n  }\n  if (this.loadedGridSources.indexOf(sourceLabel) == -1) {\n    this.loadedGridSources.push(sourceLabel);\n  }\n  this.gridSources[sourceLabel] = {\n    configuration: gridConfig,\n    source: source\n  };\n  return true;\n};\n\n\n/**\n * @param {Array.<!Object>} data Grid rows.\n * @return {?ngeo.grid.Config} Grid config.\n * @private\n */\nexports.Controller_.prototype.getGridConfiguration_ = function(\n  data) {\n  googAsserts.assert(data.length > 0);\n  const clone = {};\n  Object.assign(clone, data[0]);\n  delete clone.ol_uid;\n  const columns = Object.keys(clone);\n\n  /** @type {Array.<ngeox.GridColumnDef>} */\n  const columnDefs = [];\n  columns.forEach((column) => {\n    columnDefs.push(/** @type {ngeox.GridColumnDef} */ ({\n      name: column\n    }));\n  });\n\n  if (columnDefs.length > 0) {\n    return new ngeoGridConfig(data, columnDefs);\n  } else {\n    // no columns, do not show grid\n    return null;\n  }\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.active = false;\n  this.pending = false;\n  this.gridSources = {};\n  this.loadedGridSources = [];\n  this.selectedTab = null;\n  this.tooManyResults = false;\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n  this.ngeoMapQuerent_.clear();\n  this.featuresForSources_ = {};\n  if (this.unregisterSelectWatcher_) {\n    this.unregisterSelectWatcher_();\n  }\n};\n\n\n/**\n * Select the tab for the given grid source.\n * @param {gmfx.GridSource} gridSource Grid source.\n * @export\n */\nexports.Controller_.prototype.selectTab = function(gridSource) {\n  const source = gridSource.source;\n  this.selectedTab = source.label;\n\n  if (this.unregisterSelectWatcher_) {\n    this.unregisterSelectWatcher_();\n    this.unregisterSelectWatcher_ = null;\n  }\n\n  if (gridSource.configuration !== null) {\n    this.unregisterSelectWatcher_ = this.$scope_.$watchCollection(\n      () => gridSource.configuration.selectedRows,\n      (newSelected, oldSelectedRows) => {\n        if (Object.keys(newSelected) !== Object.keys(oldSelectedRows)) {\n          this.onSelectionChanged_();\n        }\n      });\n  }\n  this.updateFeatures_(gridSource);\n\n  this.reflowGrid_();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.reflowGrid_ = function() {\n  // This is a \"work-around\" to make sure that the grid is rendered correctly.\n  // When a pane is activated by setting `this.selectedTab`, the class `active`\n  // is not yet set on the pane. That's why the class is set manually, and\n  // after the pane is shown (in the next digest loop), the grid table can\n  // be refreshed.\n  const id = this.escapeValue(this.selectedTab || '');\n  const activePane = this.$element_.find(`div.tab-pane#${id}`);\n  activePane.removeClass('active').addClass('active');\n  this.$timeout_(() => {\n    activePane.find('div.ngeo-grid-table-container table')['trigger']('reflow');\n  });\n};\n\n\n/**\n * Called when the row selection has changed.\n * @private\n */\nexports.Controller_.prototype.onSelectionChanged_ = function() {\n  if (this.selectedTab === null) {\n    return;\n  }\n\n  const gridSource = this.gridSources[`${this.selectedTab}`];\n  this.updateFeatures_(gridSource);\n};\n\n\n/**\n * @param {gmfx.GridSource} gridSource Grid source\n * @private\n */\nexports.Controller_.prototype.updateFeatures_ = function(gridSource) {\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n\n  if (gridSource.configuration === null) {\n    return;\n  }\n\n  const sourceLabel = `${gridSource.source.label}`;\n  const featuresForSource = this.featuresForSources_[sourceLabel];\n  const selectedRows = gridSource.configuration.selectedRows;\n\n  for (const rowId in featuresForSource) {\n    const feature = featuresForSource[rowId];\n    if (rowId in selectedRows) {\n      this.highlightFeatures_.push(feature);\n    } else {\n      this.features_.push(feature);\n    }\n  }\n};\n\n\n/**\n * Get the currently shown grid source.\n * @export\n * @return {gmfx.GridSource|null} Grid source.\n */\nexports.Controller_.prototype.getActiveGridSource = function() {\n  if (this.selectedTab === null) {\n    return null;\n  } else {\n    return this.gridSources[`${this.selectedTab}`];\n  }\n};\n\n\n/**\n * Returns if a row of the currently active grid is selected?\n * @export\n * @return {boolean} Is one selected?\n */\nexports.Controller_.prototype.isOneSelected = function() {\n  const source = this.getActiveGridSource();\n  if (source === null || source.configuration === null) {\n    return false;\n  } else {\n    return source.configuration.getSelectedCount() > 0;\n  }\n};\n\n\n/**\n * Returns the number of selected rows of the currently active grid.\n * @export\n * @return {number} The number of selected rows.\n */\nexports.Controller_.prototype.getSelectedRowCount = function() {\n  const source = this.getActiveGridSource();\n  if (source === null || source.configuration === null) {\n    return 0;\n  } else {\n    return source.configuration.getSelectedCount();\n  }\n};\n\n\n/**\n * Select all rows of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.selectAll = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.selectAll();\n  }\n};\n\n\n/**\n * Deselect all rows of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.unselectAll = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.unselectAll();\n  }\n};\n\n\n/**\n * Invert the selection of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.invertSelection = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.invertSelection();\n  }\n};\n\n\n/**\n * Zoom to the selected features.\n * @export\n */\nexports.Controller_.prototype.zoomToSelection = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    const extent = olExtent.createEmpty();\n    this.highlightFeatures_.forEach((feature) => {\n      olExtent.extend(extent, feature.getGeometry().getExtent());\n    });\n    const size = this.map_.getSize();\n    googAsserts.assert(size !== undefined);\n    const maxZoom = this.maxRecenterZoom;\n    this.map_.getView().fit(extent, {size, maxZoom});\n  }\n};\n\n\n/**\n * Start a CSV download for the selected features.\n * @export\n */\nexports.Controller_.prototype.downloadCsv = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    const columnDefs = source.configuration.columnDefs;\n    googAsserts.assert(columnDefs !== undefined);\n    const selectedRows = source.configuration.getSelectedRows();\n\n    this.ngeoCsvDownload_.startDownload(\n      selectedRows, columnDefs, this.filename_);\n  }\n};\n\n\nexports.controller('GmfDisplayquerygridController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.swipe\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMiscSwipe', []);\n\n\n/**\n * ===========================================\n * NOTE: It is an inversed copy of ngSwipe.\n * Angular ngSwipe assumes that vertical\n * swipe is a scroll.\n * For more details:\n * https://docs.angularjs.org/api/ngTouch/service/$swipe\n * ===========================================\n */\n\n/**\n * @ngdoc service\n * @name $verticalSwipe\n *\n * @description\n * The `$verticalSwipe` service is a service that abstracts the messier details of hold-and-drag swipe\n * behavior, to make implementing swipe-related directives more convenient.\n *\n * Requires the {@link ngTouch `ngTouch`} module to be installed.\n *\n * `$verticalSwipe` is used by the `ngeoSwipeUp` and `ngeoSwipeDown` directives.\n *\n * # Usage\n * The `$verticalSwipe` service is an object with a single method: `bind`. `bind` takes an element\n * which is to be watched for swipes, and an object with four handler functions. See the\n * documentation for `bind` below.\n */\n\nexports.factory('$verticalSwipe', [function() {\n  // The total distance in any direction before we make the call on swipe vs. scroll.\n  const MOVE_BUFFER_RADIUS = 10;\n\n  const POINTER_EVENTS = {\n    'mouse': {\n      start: 'mousedown',\n      move: 'mousemove',\n      end: 'mouseup'\n    },\n    'touch': {\n      start: 'touchstart',\n      move: 'touchmove',\n      end: 'touchend',\n      cancel: 'touchcancel'\n    },\n    'pointer': {\n      start: 'pointerdown',\n      move: 'pointermove',\n      end: 'pointerup',\n      cancel: 'pointercancel'\n    }\n  };\n\n  function getCoordinates(event) {\n    const originalEvent = event.originalEvent || event;\n    const touches = originalEvent.touches && originalEvent.touches.length ? originalEvent.touches : [originalEvent];\n    const e = (originalEvent.changedTouches && originalEvent.changedTouches[0]) || touches[0];\n\n    return {\n      x: e.clientX,\n      y: e.clientY\n    };\n  }\n\n  function getEvents(pointerTypes, eventType) {\n    const res = [];\n    angular.forEach(pointerTypes, (pointerType) => {\n      const eventName = POINTER_EVENTS[pointerType][eventType];\n      if (eventName) {\n        res.push(eventName);\n      }\n    });\n    return res.join(' ');\n  }\n\n  return {\n    /**\n     * @ngdoc method\n     * @name $verticalSwipe#bind\n     * @param {!angular.JQLite} element Element.\n     * @param {Object} eventHandlers - Event handlers object with `start`, `cancel` and `end` callbacks\n     * @param {Array<string>} pointerTypes - Types of pointer\n     *\n     * @description\n     * The main method of `$verticalSwipe`. It takes an element to be watched for swipe motions, and an\n     * object containing event handlers.\n     * The pointer types that should be used can be specified via the optional\n     * third argument, which is an array of strings `'mouse'`, `'touch'` and `'pointer'`. By default,\n     * `$verticalSwipe` will listen for `mouse`, `touch` and `pointer` events.\n     *\n     * The four events are `start`, `move`, `end`, and `cancel`. `start`, `move`, and `end`\n     * receive as a parameter a coordinates object of the form `{ x: 150, y: 310 }` and the raw\n     * `event`. `cancel` receives the raw `event` as its single parameter.\n     *\n     * `start` is called on either `mousedown`, `touchstart` or `pointerdown`. After this event, `$verticalSwipe` is\n     * watching for `touchmove`, `mousemove` or `pointermove` events. These events are ignored until the total\n     * distance moved in either dimension exceeds a small threshold.\n     *\n     * Once this threshold is exceeded, either the vertical or vertical delta is greater.\n     * - If the vertical distance is greater, this is a swipe and `move` and `end` events follow.\n     * - If the horizontal distance is greater, this is a scroll, and we let the browser take over.\n     *   A `cancel` event is sent.\n     *\n     * `move` is called on `mousemove`, `touchmove` and `pointermove` after the above logic has determined that\n     * a swipe is in progress.\n     *\n     * `end` is called when a swipe is successfully completed with a `touchend`, `mouseup` or `pointerup`.\n     *\n     * `cancel` is called either on a `touchcancel` or `pointercancel`  from the browser, or when we begin scrolling\n     * as described above.\n     *\n     */\n    bind(element, eventHandlers, pointerTypes) {\n      // Absolute total movement, used to control swipe vs. scroll.\n      let totalX, totalY;\n      // Coordinates of the start position.\n      let startCoords;\n      // Last event's position.\n      let lastPos;\n      // Whether a swipe is active.\n      let active = false;\n\n      pointerTypes = pointerTypes || ['mouse', 'touch', 'pointer'];\n      element.on(getEvents(pointerTypes, 'start'), (event) => {\n        startCoords = getCoordinates(event);\n        active = true;\n        totalX = 0;\n        totalY = 0;\n        lastPos = startCoords;\n        if (eventHandlers['start']) {\n          eventHandlers['start'](startCoords, event);\n        }\n      });\n      const events = getEvents(pointerTypes, 'cancel');\n      if (events) {\n        element.on(events, (event) => {\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n        });\n      }\n\n      element.on(getEvents(pointerTypes, 'move'), (event) => {\n        if (!active) {\n          return;\n        }\n\n        // Android will send a touchcancel if it thinks we're starting to scroll.\n        // So when the total distance (+ or - or both) exceeds 10px in either direction,\n        // we either:\n        // - On totalX > totalY, we send preventDefault() and treat this as a swipe.\n        // - On totalY > totalX, we let the browser handle it as a scroll.\n\n        if (!startCoords) {\n          return;\n        }\n        const coords = getCoordinates(event);\n\n        totalX += Math.abs(coords.x - lastPos.x);\n        totalY += Math.abs(coords.y - lastPos.y);\n\n        lastPos = coords;\n\n        if (totalX < MOVE_BUFFER_RADIUS && totalY < MOVE_BUFFER_RADIUS) {\n          return;\n        }\n\n        // One of totalX or totalY has exceeded the buffer, so decide on swipe vs. scroll.\n        if (totalX > totalY) {\n          // Allow native scrolling to take over.\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n          return;\n        } else {\n          // Prevent the browser from scrolling.\n          event.preventDefault();\n          if (eventHandlers['move']) {\n            eventHandlers['move'](coords, event);\n          }\n        }\n      });\n\n      element.on(getEvents(pointerTypes, 'end'), (event) => {\n        if (!active) {\n          return;\n        }\n        active = false;\n        if (eventHandlers['end']) {\n          eventHandlers['end'](getCoordinates(event), event);\n        }\n      });\n    }\n  };\n}]);\n\nexports.makeSwipeDirective_ = function(directiveName, direction, eventName) {\n  exports.directive(directiveName, ['$parse', '$verticalSwipe', function($parse, $verticalSwipe) {\n    // The maximum horizontal delta for a swipe should be less than 75px.\n    const MAX_HORIZONTAL_DISTANCE = 75;\n    // Horizontal distance should not be more than a fraction of the vertical distance.\n    const MAX_HORIZONTAL_RATIO = 0.3;\n    // At least a 30px lateral motion is necessary for a swipe.\n    const MIN_VERTICAL_DISTANCE = 30;\n\n    return function(scope, element, attr) {\n      const swipeHandler = $parse(attr[directiveName]);\n\n      let startCoords, valid;\n\n      function validSwipe(coords) {\n        // Check that it's within the coordinates.\n        // Absolute vertical distance must be within tolerances.\n        // Horizontal distance, we take the current X - the starting X.\n        // This is negative for downward swipes and positive for upward swipes.\n        // After multiplying by the direction (-1 for down, +1 for up), legal swipes\n        // (ie. same direction as the directive wants) will have a positive delta and\n        // illegal ones a negative delta.\n        // Therefore this delta must be positive, and larger than the minimum.\n        if (!startCoords) {\n          return false;\n        }\n        const deltaY = (coords.y - startCoords.y) * direction;\n        const deltaX = Math.abs(coords.x - startCoords.x);\n        return valid && // Short circuit for already-invalidated swipes.\n            deltaX < MAX_HORIZONTAL_DISTANCE &&\n            deltaY > 0 &&\n            deltaY > MIN_VERTICAL_DISTANCE &&\n            deltaX / deltaY < MAX_HORIZONTAL_RATIO;\n      }\n\n      const pointerTypes = ['touch'];\n      if (!angular.isDefined(attr['ngeoSwipeDisableMouse'])) {\n        pointerTypes.push('mouse');\n      }\n      $verticalSwipe.bind(element, {\n        'start': function(coords, event) {\n          startCoords = coords;\n          valid = true;\n        },\n        'cancel': function(event) {\n          valid = false;\n        },\n        'end': function(coords, event) {\n          if (validSwipe(coords)) {\n            scope.$apply(() => {\n              element.triggerHandler(eventName);\n              swipeHandler(scope, {$event: event});\n            });\n          }\n        }\n      }, pointerTypes);\n    };\n  }]);\n};\n\n// Down is negative Y-coordinate, up is positive.\nexports.makeSwipeDirective_('ngeoSwipeDown', 1, 'swipedown');\nexports.makeSwipeDirective_('ngeoSwipeUp', -1, 'swipeup');\n\n\nexport default exports;\n","/**\n * @module gmf.query.windowComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscSwipe from 'ngeo/misc/swipe.js';\n\n/** @suppress {extraRequire} - required for `ngeoQueryResult` */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olCollection from 'ol/Collection.js';\nimport * as olObj from 'ol/obj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport 'jquery-ui/ui/widgets/resizable.js';\nimport 'angular-animate';\nimport 'angular-touch';\nimport 'bootstrap/js/collapse.js';\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryWindowComponent', [\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscSwipe.name,\n  ngeoQueryMapQuerent.module.name,\n  'ngAnimate',\n  'ngTouch',\n]);\n\n\nexports.config(['$animateProvider',\n  /**\n   * For performance reason, only perform animation on elements that have the\n   * `gmf-animatable` css class.\n   * @param {angular.$animateProvider} $animateProvider animate provider.\n   */\n  function($animateProvider) {\n    $animateProvider.classNameFilter(/gmf-animatable/);\n  }\n]);\n\n\nexports.value('gmfDisplayquerywindowTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfDisplayquerywindowTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/query/windowComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/query/windowComponent', require('./windowComponent.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfDisplayquerywindowTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfDisplayquerywindowTemplateUrl($element, $attrs, gmfDisplayquerywindowTemplateUrl) {\n  return gmfDisplayquerywindowTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component to display results of the {@link ngeo.queryResult}\n * and shows related features on the map using the {@link ngeo.map.FeatureOverlayMgr}.\n *\n * You can override the default component's template by setting the\n * value `gmfDisplayquerywindowTemplateUrl`.\n *\n * Features displayed on the map use a default style but you can override these\n * styles by passing ol.style.Style objects as attributes of this component.\n *\n * Example:\n *\n *      <gmf-displayquerywindow\n *        gmf-displayquerywindow-featuresstyle=\"ctrl.styleForAllFeatures\"\n *        gmf-displayquerywindow-selectedfeaturestyle=\"ctrl.styleForTheCurrentFeature\">\n *      </gmf-displayquerywindow>\n *\n * @htmlAttribute {ol.style.Style} gmf-displayquerywindow-featuresstyle A style\n *     object for all features from the result of the query.\n * @htmlAttribute {ol.style.Style} selectedfeaturestyle A style\n *     object for the current displayed feature.\n * @htmlAttribute {boolean=} defaultcollapsed If the query result window is\n *     collapsed.\n * @htmlAttribute {boolean} desktop If the component is used in the desktop\n *     application.\n * @htmlAttribute {boolean} showunqueriedlayers If also layers, that have not\n *     been queried for the last query, should be shown in the filter.\n *\n * @ngdoc component\n * @ngname gmfDisplayquerywindow\n */\nexports.component_ = {\n  controller: 'GmfDisplayquerywindowController as ctrl',\n  bindings: {\n    'draggableContainment': '<?gmfDisplayquerywindowDraggableContainment',\n    'featuresStyleFn': '&gmfDisplayquerywindowFeaturesstyle',\n    'selectedFeatureStyleFn': '&gmfDisplayquerywindowSelectedfeaturestyle',\n    'defaultCollapsedFn': '&?gmfDisplayquerywindowDefaultcollapsed',\n    'desktop': '=gmfDisplayquerywindowDesktop',\n    'showUnqueriedLayers': '=gmfDisplayquerywindowShowunqueriedlayers'\n  },\n  templateUrl: gmfDisplayquerywindowTemplateUrl\n};\n\n\nexports.component('gmfDisplayquerywindow', exports.component_);\n\n\n/**\n * @param {!jQuery} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.QueryResult} ngeoQueryResult ngeo query result.\n * @param {!ngeo.query.MapQuerent} ngeoMapQuerent ngeo map querent service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisplayquerywindowController\n */\nexports.Controller_ = function($element, $scope, ngeoQueryResult, ngeoMapQuerent,\n  ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {Element|string}\n   * @export\n   */\n  this.draggableContainment;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.desktop = false;\n\n  /**\n   * Is the window currently collapsed?\n   * When used for Desktop, it is shown non-collapsed.\n   * @type {boolean}\n   * @export\n   */\n  this.collapsed = !this.desktop;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.showUnqueriedLayers_ = false;\n\n  /**\n   * Object that is used to filter the source list in the template.\n   * @type {Object}\n   * @export\n   */\n  this.sourcesFilter = {'queried': true};\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @export\n   */\n  this.ngeoQueryResult = {\n    sources: [],\n    total: 0,\n    pending: false\n  };\n\n  /**\n   * @type {!ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.selectedSource = null;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.highlightFeatures_ = new olCollection();\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.source = null;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature = null;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.currentResult = -1;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isNext = true;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.animate = 0;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.open = false;\n\n  /**\n   * @const {!jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  $scope.$watchCollection(\n    () => ngeoQueryResult,\n    (newQueryResult, oldQueryResult) => {\n      this.updateQueryResult_(newQueryResult);\n      if (newQueryResult.total > 0) {\n        this.show();\n      } else if (oldQueryResult !== newQueryResult) {\n        this.close();\n      }\n    });\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.draggableContainment = this.draggableContainment || 'document';\n  this.desktop = this.desktop;\n  this.collapsed = this['defaultCollapsedFn'] ?\n    this['defaultCollapsedFn']() === true : !this.desktop;\n\n  this.showUnqueriedLayers_ = this['showUnqueriedLayers'] ?\n    this['showUnqueriedLayers'] === true : false;\n\n  this.sourcesFilter = this.showUnqueriedLayers_ ? {} : {'queried': true};\n\n  const featuresOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  featuresOverlay.setFeatures(this.features_);\n  const featuresStyle = this['featuresStyleFn']();\n  if (featuresStyle !== undefined) {\n    googAsserts.assertInstanceof(featuresStyle, olStyleStyle);\n    featuresOverlay.setStyle(featuresStyle);\n  }\n\n  const highlightFeaturesOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  highlightFeaturesOverlay.setFeatures(this.highlightFeatures_);\n  let highlightFeatureStyle = this['selectedFeatureStyleFn']();\n  if (highlightFeatureStyle !== undefined) {\n    googAsserts.assertInstanceof(highlightFeatureStyle, olStyleStyle);\n  } else {\n    const fill = new olStyleFill({color: [255, 0, 0, 0.6]});\n    const stroke = new olStyleStroke({color: [255, 0, 0, 1], width: 2});\n    highlightFeatureStyle = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke\n    });\n  }\n  highlightFeaturesOverlay.setStyle(highlightFeatureStyle);\n\n  if (this.desktop) {\n    this.element_.find('.gmf-displayquerywindow .windowcontainer').draggable({\n      'cancel': 'input,textarea,button,select,option,tr',\n      'containment': this.draggableContainment\n    });\n    this.element_.find('.gmf-displayquerywindow .windowcontainer').resizable({\n      'minHeight': 240,\n      'minWidth': 240\n    });\n  }\n};\n\n\n/**\n * Remove current displayed results then get new results from the\n * ngeoQueryResult service. Display all results on the map and display,\n * highlight the first feature.\n * @export\n */\nexports.Controller_.prototype.show = function() {\n  this.clear();\n  this.updateFeatures_();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateFeatures_ = function() {\n  this.setCurrentResult_(0, false);\n  if (this.source !== null) {\n    this.collectFeatures_();\n    this.highlightCurrentFeature_();\n    this.open = true;\n  }\n};\n\n/**\n * Select a source and a feature depending of the given position.\n * @param {number} position The index of the feature. If the position is bigger\n * than the length of the first source, get it in the next source. Etc.\n * @param {boolean} setHighlight True to set the highlight automatically.\n * @return {boolean} True if result has changed. False else.\n * @private\n */\nexports.Controller_.prototype.setCurrentResult_ = function(\n  position, setHighlight) {\n  let hasChanged = false;\n  if (position !== this.currentResult) {\n    let i, source, features;\n    const lastFeature = this.feature;\n    const sources = this.ngeoQueryResult.sources;\n    this.currentResult = position;\n    for (i = 0; i < sources.length; i++) {\n      source = sources[i];\n      if (this.selectedSource !== null && this.selectedSource !== source) {\n        // when filtering on a source, only consider features of the selected source\n        continue;\n      }\n      features = source.features;\n      if (position >= features.length) {\n        position -= features.length;\n      } else {\n        this.source = source;\n        this.feature = source.features[position];\n        hasChanged = true;\n        break;\n      }\n    }\n    if (setHighlight) {\n      this.highlightCurrentFeature_(lastFeature);\n    }\n  }\n  return hasChanged;\n};\n\n\n/**\n * Select the logical previous source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.previous = function() {\n  let position = this.currentResult - 1;\n  if (position < 0) {\n    position = this.getResultLength() - 1;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(false);\n  }\n};\n\n\n/**\n * Select the logical next source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.next = function() {\n  let position = this.currentResult + 1;\n  const positionMax = this.getResultLength() - 1;\n  if (position > positionMax) {\n    position = 0;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(true);\n  }\n};\n\n\n/**\n * Remove features without properties from the query result.\n * @param {ngeox.QueryResult} queryResult ngeo query result.\n * @private\n */\nexports.Controller_.prototype.updateQueryResult_ = function(queryResult) {\n  this.ngeoQueryResult.total = 0;\n  this.ngeoQueryResult.sources.length = 0;\n  for (let i = 0; i < queryResult.sources.length; i++) {\n    const source = queryResult.sources[i];\n    source.features = source.features.filter((feature) => {\n      googAsserts.assert(feature);\n      return !olObj.isEmpty(ngeoMiscFeatureHelper.getFilteredFeatureValues(feature));\n    });\n    this.ngeoQueryResult.sources.push(source);\n    this.ngeoQueryResult.total += source.features.length;\n  }\n};\n\n/**\n * Get the total count of features in the result of the query. If a source\n * has been select, only the number of features of that source are returned.\n * @return {number} Total number of features.\n * @export\n */\nexports.Controller_.prototype.getResultLength = function() {\n  if (this.selectedSource === null) {\n    return this.ngeoQueryResult.total;\n  } else {\n    return this.selectedSource.features.length;\n  }\n};\n\n\n/**\n * @return {boolean} If the first result is active.\n * @export\n */\nexports.Controller_.prototype.isFirst = function() {\n  return this.currentResult == 0;\n};\n\n\n/**\n * @return {boolean} If the last result is active.\n * @export\n */\nexports.Controller_.prototype.isLast = function() {\n  return this.currentResult == this.getResultLength() - 1;\n};\n\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * @return {Object?} Filtered properties of the current feature or null.\n * @export\n */\nexports.Controller_.prototype.getFeatureValues = function() {\n  if (!this.feature) {\n    return null;\n  }\n  return ngeoMiscFeatureHelper.getFilteredFeatureValues(this.feature);\n};\n\n\n/**\n * Special function that's used to set the \"animation\" value after to set the\n * \"isNext\" value. The aim is to wait on Angular to add a class (corresponding\n * to \"isNext\") on the DOM before to set the \"animation\" value and do the\n * animation.\n * @param {boolean} isNext used to indicate if the user wants to see the next\n * or the previous result.\n * @private\n */\nexports.Controller_.prototype.animate_ = function(isNext) {\n  this.isNext = isNext;\n  this.animate++;\n};\n\n\n/**\n * Collect all features in the queryResult object.\n * @private\n */\nexports.Controller_.prototype.collectFeatures_ = function() {\n  const sources = this.ngeoQueryResult.sources;\n  this.features_.clear();\n  for (let i = 0; i < sources.length; i++) {\n    const source = sources[i];\n    if (this.selectedSource !== null && this.selectedSource !== source) {\n      // when filtering on a source, only add features of the selected source\n      continue;\n    }\n    const features = source.features;\n    for (let ii = 0; ii < features.length; ii++) {\n      this.features_.push(features[ii]);\n    }\n  }\n};\n\n\n/**\n * Highlight the current displayed feature.\n * @param {ol.Feature=} opt_lastFeature last highlighted feature. Require if\n * it exists because it must be added to the 'non-selected' features collection.\n * @private\n */\nexports.Controller_.prototype.highlightCurrentFeature_ =\nfunction(opt_lastFeature) {\n  this.highlightFeatures_.clear();\n  this.features_.remove(this.feature);\n  this.highlightFeatures_.push(this.feature);\n  if (opt_lastFeature !== undefined) {\n    this.features_.push(opt_lastFeature);\n  }\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.close = function() {\n  this.open = false;\n  this.clear();\n  this.ngeoMapQuerent_.clear();\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.feature = null;\n  this.source = null;\n  this.currentResult = -1;\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n  this.selectedSource = null;\n};\n\n\n/**\n * @param {ngeox.QueryResultSource} source The source to select.\n * @export\n */\nexports.Controller_.prototype.setSelectedSource = function(source) {\n  if (source !== null && source.features.length <= 0) {\n    // sources with no results can not be selected\n    return;\n  }\n  this.clear();\n  this.selectedSource = source;\n  this.updateFeatures_();\n};\n\n\nexports.controller('GmfDisplayquerywindowController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.query.extraModule\n */\nimport gmfQueryGridComponent from 'gmf/query/gridComponent.js';\nimport gmfQueryWindowComponent from 'gmf/query/windowComponent.js';\n\nimport './grid.less';\nimport './window.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryExtraModule', [\n  gmfQueryGridComponent.name,\n  gmfQueryWindowComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.search.module\n */\nimport gmfSearchComponent from 'gmf/search/component.js';\nimport gmfSearchFulltextSearch from 'gmf/search/FulltextSearch.js';\n\nimport './search.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfSearchModule', [\n  gmfSearchComponent.name,\n  gmfSearchFulltextSearch.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.selectorComponent\n */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport * as olEvents from 'ol/events.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeSelectorComponent', [\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/theme/selectorComponent', require('./selectorComponent.html'));\n});\n\n\nexports.value('gmfThemeSelectorTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfThemeSelectorTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/theme/selectorComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfThemeSelectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfThemeSelectorTemplateUrl($attrs, gmfThemeSelectorTemplateUrl) {\n  return gmfThemeSelectorTemplateUrl($attrs);\n}\n\n\n/**\n * Note that this component works with the {@link gmf.layertree.TreeManager}.\n * Setting the theme will update the \"tree\" object of\n * this {@link gmf.layertree.TreeManager}.\n *\n * Example:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span ng-if=\"mainCtrl.gmfThemeManager.modeFlush\">\n *            <span translate>Theme:</span>\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.getThemeName()\" translate>Loading...</b>\n *            <b ng-if=\"mainCtrl.gmfThemeManager.getThemeName()\">{{mainCtrl.gmfThemeManager.getThemeName()|translate}}</b>\n *          </span>\n *          <span ng-if=\"!mainCtrl.gmfThemeManager.modeFlush\">\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.themeName\" translate>Themes</b>\n *          </span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *\n * The theme selector can operate in a 'flush' (as above) or 'add' mode. For more information\n * about these modes, refer to the documentation of {@link gmf.layertree.TreeManager}.\n *\n * Example in 'add' mode:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span translate>Themes</span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('gmfTreeManagerModeFlush', false);\n *        })();\n *      </script>\n *\n * @htmlAttribute {Function} gmf-themeselector-filter The themes filter.\n *\n * @type {!angular.Component}\n */\nexports.component_ = {\n  bindings: {\n    'filter': '<gmfThemeselectorFilter'\n  },\n  controller: 'gmfThemeselectorController',\n  templateUrl: gmfThemeSelectorTemplateUrl\n};\n\nexports.component('gmfThemeselector', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {gmf.theme.Manager} gmfThemeManager Tree manager service.\n * @param {gmf.theme.Themes} gmfThemes Themes service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfThemeselectorController\n */\nexports.Controller_ = function($scope, gmfThemeManager, gmfThemes) {\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = gmfThemeManager;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {Array.<Object>}\n   * @export\n   */\n  this.themes;\n\n  /**\n   * @type {Function|undefined}\n   * @export\n   */\n  this.filter;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(this.gmfThemes_, 'change', this.setThemes_, this));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n\n};\n\n/**\n * Store the loaded themes locally applying a filter (if any), then set the\n * current theme.\n * @private\n */\nexports.Controller_.prototype.setThemes_ = function() {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    // Keep only the themes dedicated to the theme switcher\n    this.themes = this.filter ? themes.filter(this.filter) : themes;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfTheme} theme Theme.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.Controller_.prototype.setTheme = function(theme, opt_silent) {\n  if (theme) {\n    this.gmfThemeManager.addTheme(theme, opt_silent);\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('gmfThemeselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.module\n */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeSelectorComponent from 'gmf/theme/selectorComponent.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeModule', [\n  gmfThemeSelectorComponent.name,\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.displaywindowComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\nimport 'font-awesome/css/font-awesome.css';\nimport 'jquery-ui/ui/widgets/resizable.js';\nimport 'jquery-ui/ui/widgets/draggable.js';\nimport 'angular-sanitize';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMessageDisplaywindowComponent', [\n  'ngSanitize',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/message/displaywindowComponent', require('./displaywindowComponent.html'));\n});\n\n\nexports.value('ngeoMessageDisplaywindowTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoMessageDisplaywindowTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/message/displaywindowComponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoMessageDisplaywindowTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoMessageDisplaywindowTemplateUrl($attrs, ngeoMessageDisplaywindowTemplateUrl) {\n  return ngeoMessageDisplaywindowTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!jQuery} $element Element.\n   * @param {!angular.$sce} $sce Angular sce service.\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!angular.$compile} $compile The compile provider.\n   * @private\n   * @ngInject\n   * @ngdoc controller\n   * @ngname ngeoDisplaywindowComponentController\n   */\n  constructor($element, $sce, $scope, $compile) {\n\n    // === Binding Properties ===\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.clearOnClose;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.content = null;\n\n    /**\n     * @type {?string}\n     */\n    this.contentTemplate = null;\n\n    /**\n     * @type {?angular.Scope}\n     */\n    this.contentScope = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.draggable;\n\n    /**\n     * @type {Element|string}\n     * @export\n     */\n    this.draggableContainment;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.desktop;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.height = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.open;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.resizable;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.title = null;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.url = null;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.width = null;\n\n\n    // === Injected Properties ===\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {!angular.$sce}\n     * @private\n     */\n    this.sce_ = $sce;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {angular.$compile}\n     * @private\n     */\n    this.compile_ = $compile;\n  }\n\n  /**\n   * Called on initialization of the component.\n   */\n  $onInit() {\n\n    // Initialize binding properties\n    this.clearOnClose = this.clearOnClose !== false;\n    this.content = this.content || null;\n    this.contentTemplate = this.contentTemplate || null;\n    this.contentScope = this.contentScope || null;\n    this.desktop = this.desktop !== false;\n    this.draggableContainment = this.draggableContainment || 'document';\n    this.open = this.open === true;\n\n    this.draggable = this.draggable !== undefined ?\n      this.draggable : this.desktop;\n    this.resizable = this.resizable !== undefined ?\n      this.resizable : this.desktop;\n\n    // Draggable\n    if (this.draggable) {\n      this.element_.find('.ngeo-displaywindow .windowcontainer').draggable({\n        'containment': this.draggableContainment,\n        'handle': 'div.header'\n      });\n    }\n\n    // Resizable\n    if (this.resizable) {\n      this.element_.find('.ngeo-displaywindow .windowcontainer').resizable({\n        'minHeight': 240,\n        'minWidth': 240\n      });\n    }\n\n    if (this.contentTemplate) {\n      const scope = googAsserts.assert(this.contentScope || this.scope_);\n      const compiled = this.compile_(this.contentTemplate)(scope);\n      const displayWindow = this.element_.find('.ngeo-displaywindow .windowcontainer .animation-container');\n      displayWindow.append(/** @type {?} */ (compiled));\n    }\n  }\n\n  /**\n   * @export\n   */\n  close() {\n    this.open = false;\n    if (this.clearOnClose) {\n      this.clear_();\n    }\n  }\n\n  /**\n   * @return {!Object.<string, string>} CSS style when using width/height\n   * @export\n   */\n  get style() {\n    return {\n      'height': this.height || '240px',\n      'width': this.width || '240px'\n    };\n  }\n\n  /**\n   * @return {string|undefined} Trusted url.\n   * @export\n   */\n  get urlTrusted() {\n    if (this.url) {\n      return /** @type {string} */ (this.sce_.trustAsResourceUrl(this.url));\n    }\n  }\n\n  /**\n   * @export\n   */\n  clear_() {\n    this.content = null;\n    this.height = null;\n    this.title = null;\n    this.url = null;\n    this.width = null;\n  }\n};\n\n\n/**\n * The `ngeo-displaywindow` component is an alternative to the `ngeo.message.Popup`.\n * What they have in common:\n *\n * - support title\n * - support url to be shown in an iframe\n * - support plain HTML content\n * - support sizing, i.e. height and width.\n * - support being opened/closed\n *\n * The differences with the `ngeo.message.Popup` are:\n *\n * - it supports being dragged\n * - it supports being resized\n * - support angularjs template content\n *\n * Example:\n *      <ngeo-displaywindow\n *        class=\"window1\"\n *        url=\"::ctrl.window1Content\"\n *        desktop=\"::false\"\n *        open=\"::true\"\n *        title=\"'Window 1 - The simplest window (close kills it)'\">\n *      </ngeo-displaywindow>\n *\n * @htmlAttribute {boolean=} ngeo-displaywindow-clear-on-close Whether to clear the content on close or not.\n * @htmlAttribute {string=} ngeo-displaywindow-content The html content. If not provided, you must provide\n *     an url.\n * @htmlAttribute {string=} ngeo-displaywindow-content-template AngularJS template. It gets compiled during runtime\n * with the supplied scope (ngeo-displaywindow-content-scope).\n * @htmlAttribute {angular.Scope=} ngeo-displaywindow-content-scope Scope used for ngeo-displaywindow-content-template.\n * @htmlAttribute {boolean=} ngeo-displaywindow-desktop If true, the window is draggable and resizable. If\n *     not set, you must set manually both parameter.\n * @htmlAttribute {boolean=} ngeo-displaywindow-draggable Whether the window is draggable or not.\n * @htmlAttribute {string=} ngeo-displaywindow-draggable-containment The zone (CSS selector) where the window\n *     is authorized to be dragged.\n * @htmlAttribute {string=} ngeo-displaywindow-height The default height of the window.\n * @htmlAttribute {boolean=} ngeo-displaywindow-open Whether the window is open or not.\n * @htmlAttribute {string=} ngeo-displaywindow-title The html title of the window.\n * @htmlAttribute {string=} ngeo-displaywindow-url The URL to open in an iframe, in the window. The content\n *     attribute must not be provided.\n * @htmlAttribute {string=} ngeo-displaywindow-width The default width of the window.\n * @ngdoc component\n * @ngname ngeoDisplaywindow\n */\nexports.component('ngeoDisplaywindow', {\n  bindings: {\n    'clearOnClose': '<?',\n    'content': '=?',\n    'contentTemplate': '<?',\n    'contentScope': '<?',\n    'desktop': '<?',\n    'draggable': '<?',\n    'draggableContainment': '<?',\n    'height': '=?',\n    'open': '=?',\n    'resizable': '<?',\n    'title': '=?',\n    'url': '=?',\n    'width': '=?'\n  },\n  controller: exports.Controller_,\n  templateUrl: ngeoMessageDisplaywindowTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.controlComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport olMap from 'ol/Map.js';\nimport olControlControl from 'ol/control/Control.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoControl', []);\n\n\n/**\n * Provides a directive that can be used to add a control to the map\n * using a DOM element.\n *\n * Example:\n *\n *     <div ngeo-control=\"ctrl.control\" ngeo-control-map=\"ctrl.map\"></div>\n *\n * The expression passed to \"ngeo-control\" should evaluate to a control\n * instance, and the expression passed to \"ngeo-control-map\" should\n * evaluate to a map instance.\n *\n * See our live example: [../examples/control.html](../examples/control.html)\n *\n * @htmlAttribute {ol.Map} ngeo-control-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoControl\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const control = /** @type {ol.control.Control} */\n              (scope.$eval(attrs['ngeoControl']));\n      googAsserts.assertInstanceof(control, olControlControl);\n\n      const map = /** @type {ol.Map} */\n              (scope.$eval(attrs['ngeoControlMap']));\n      googAsserts.assertInstanceof(map, olMap);\n\n      control.setTarget(element[0]);\n      map.addControl(control);\n    }\n  };\n};\n\n\nexports.directive('ngeoControl', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.filereaderComponent\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFilereader', []);\n\n/**\n * This directive is to used on an input file element. When a file is selected\n * the directive uses the browser `FileReader` API to read the file. The file\n * content is provided to the directive user through the assignable expression.\n * Only works for text files (`readAsText` used for reading the file). And does\n * not work in Internet Explorer 9.\n *\n * Example:\n *\n *      <input type=\"file\" ngeo-filereader=\"ctrl.fileContent\"\n *        ngeo-filereader-supported=\"ctrl.supported\"/>\n *\n * See our live example: [../examples/importfeatures.html](../examples/importfeatures.html)\n *\n * @htmlAttribute {string} ngeo-filereader The content of the file read.\n * @htmlAttribute {boolean=} ngeo-filereader-supported Whether the FileReader API is supported.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoFilereader\n */\nexports.component_ = function($window) {\n  return {\n    restrict: 'A',\n    scope: {\n      'fileContent': '=ngeoFilereader',\n      'supported': '=?ngeoFilereaderSupported'\n    },\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      const supported = 'FileReader' in $window;\n      scope['supported'] = supported;\n      if (!supported) {\n        return;\n      }\n      element.on('change', (changeEvent) => {\n        /** @type {!FileReader} */\n        const fileReader = new $window.FileReader();\n        fileReader.onload = (\n          /**\n                 * @param {!ProgressEvent} evt Event.\n                 */\n          function(evt) {\n            scope.$apply(() => {\n              scope['fileContent'] = evt.target.result;\n            });\n          });\n        fileReader.readAsText(changeEvent.target.files[0]);\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoFilereader',\n  exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.getBrowserLanguage\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGetBrowserLanguage', []);\n\n\n/**\n * Provides a function that returns the most appropriate 2-letter\n * language code depending on the list of available languages and the browser\n * languages settings.\n *\n * @param {angular.$window} $window Angular $window service.\n * @return {ngeox.miscGetBrowserLanguage} The \"GetBrowserLanguage\" function.\n *\n * @ngdoc service\n * @ngname ngeoGetBrowserLanguage\n * @ngInject\n */\nexports.factory_ = function($window) {\n  return (\n    /**\n     * @param {Array.<string>} availableLanguages Available languages.\n     * @return {string} The \"best\" language code.\n     */\n    function(availableLanguages) {\n      const nav = $window.navigator;\n      let browserLanguages = nav.languages || nav.language ||\n            nav.browserLanguage || nav.systemLanguage || nav.userLanguage;\n      if (!Array.isArray(browserLanguages)) {\n        browserLanguages = [browserLanguages];\n      }\n      browserLanguages = browserLanguages.map(item => item.substring(0, 2));\n      // remove duplicated language codes\n      browserLanguages = browserLanguages.filter((item, index, arr) => arr.indexOf(item) == index);\n      const supportedLanguages = browserLanguages.filter(item => availableLanguages.indexOf(item) != -1);\n      return supportedLanguages[0];\n    });\n};\n\nexports.factory('ngeoGetBrowserLanguage', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.extraModule\n */\nimport ngeoMiscAutoProjection from 'ngeo/misc/AutoProjection.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\nimport ngeoMiscControlComponent from 'ngeo/misc/controlComponent.js';\nimport ngeoMiscDatepickerComponent from 'ngeo/misc/datepickerComponent.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoMiscFilereaderComponent from 'ngeo/misc/filereaderComponent.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoMiscGetBrowserLanguage from 'ngeo/misc/getBrowserLanguage.js';\nimport ngeoMiscSortableComponent from 'ngeo/misc/sortableComponent.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMiscExtraModule', [\n  ngeoMiscAutoProjection.module.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscControlComponent.name,\n  ngeoMiscDatepickerComponent.name,\n  ngeoMiscDebounce.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscFile.module.name,\n  ngeoMiscFilereaderComponent.name,\n  ngeoMiscFilters.name,\n  ngeoMiscGetBrowserLanguage.name,\n  ngeoMiscSortableComponent.name,\n  ngeoMiscTime.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.query.mapQueryComponent\n */\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport * as olEvents from 'ol/events.js';\n\nconst exports = angular.module('ngeoMapQuery', [\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\n/**\n * Provides a \"map query\" directive.\n *\n * This directive is responsible of binding a map and the ngeo query service\n * together. While active, clicks made on the map are listened by the directive\n * and a request gets issued to the query service.\n *\n * This directive doesn't require to be rendered in a visible DOM element, but\n * it could be used with a ngeo-btn to manage the activation of the directive.\n * See below an example without any use of UI:\n *\n * Example:\n *\n *      <span\n *        ngeo-map-query=\"\"\n *        ngeo-map-query-map=\"::ctrl.map\"\n *        ngeo-map-query-active=\"ctrl.queryActive\"\n *        ngeo-map-query-autoclear=\"ctrl.queryAutoClear\">\n *      </span>\n *\n * See our live example: [../examples/mapquery.html](../examples/mapquery.html)\n *\n * @param {ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n * @param {angular.$injector} $injector Main injector.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoMapQuery\n */\nexports.directive_ = function(ngeoMapQuerent, $injector) {\n  return {\n    restrict: 'A',\n    scope: false,\n    link: (scope, elem, attrs) => {\n      const map = scope.$eval(attrs['ngeoMapQueryMap']);\n      let clickEventKey_ = null;\n      let pointerMoveEventKey_ = null;\n\n      /**\n       * Called when the map is clicked while this controller is active. Issue\n       * a request to the query service using the coordinate that was clicked.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handleMapClick_ = function(evt) {\n        const coordinate = evt.coordinate;\n        ngeoMapQuerent.issue({\n          coordinate,\n          map\n        });\n      };\n\n      /**\n       * Called when the pointer is moved while this controller is active.\n       * Change the mouse pointer when hovering a non-transparent pixel on the\n       * map.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handlePointerMove_ = function(evt) {\n        if (!evt.dragging) {\n          const pixel = map.getEventPixel(evt.originalEvent);\n          const queryable = function(layer) {\n            const visible = layer.get('visible');\n            const sourceids = layer.get('querySourceIds');\n            return visible && !!sourceids;\n          };\n          const hit = map.forEachLayerAtPixel(pixel, () => true, undefined, queryable);\n          map.getTargetElement().style.cursor = hit ? 'pointer' : '';\n        }\n      };\n\n      /**\n       * Listen to the map events.\n       */\n      const activate_ = function() {\n        clickEventKey_ = olEvents.listen(map, 'singleclick', handleMapClick_);\n        const queryOptions = /** @type {ngeox.QueryOptions} */ (\n          $injector.has('ngeoQueryOptions') ? $injector.get('ngeoQueryOptions') : {}\n        );\n        if (queryOptions.cursorHover) {\n          pointerMoveEventKey_ = olEvents.listen(map, 'pointermove', handlePointerMove_);\n        }\n      };\n\n      /**\n       * Unlisten the map events.\n       */\n      const deactivate_ = function() {\n        if (clickEventKey_ !== null) {\n          olEvents.unlistenByKey(clickEventKey_);\n          clickEventKey_ = null;\n        }\n        if (pointerMoveEventKey_ !== null) {\n          olEvents.unlistenByKey(pointerMoveEventKey_);\n          pointerMoveEventKey_ = null;\n        }\n        if (scope.$eval(attrs['ngeoMapQueryAutoclear']) !== false) {\n          ngeoMapQuerent.clear();\n        }\n      };\n\n      // watch 'active' property -> activate/deactivate accordingly\n      scope.$watch(attrs['ngeoMapQueryActive'],\n        (newVal, oldVal) => {\n          if (newVal) {\n            activate_();\n          } else {\n            deactivate_();\n          }\n        }\n      );\n    }\n  };\n};\n\nexports.directive('ngeoMapQuery', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.WfsPermalink\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olExtent from 'ol/extent.js';\nimport * as olFormatFilter from 'ol/format/filter.js';\nimport olFormatWFS from 'ol/format/WFS.js';\n\n/**\n * WFS permalink service that can be used to load features with a WFS\n * GetFeature request given query parameters.\n *\n * Resulting features are then highlighted and\n * the map is zoomed to the nearest map extent.\n *\n * Parameters:\n *\n * - ``wfs_layer`` tells what layer will be queried\n * - ``wfs_showFeatures`` (boolean) tells if the features should be\n *   highlighted and listed (when true) or if the map should only be\n *   recentered on the features (when false). Default is true.\n * - other parameters will be considered as WFS attribute/values filters and\n *   must be of the form:\n *   ``wfs_<layer attribute name>=<a comma-separated list of values>``\n *\n * Example:\n * http://example.com?wfs_layer=parcels&wfs_city=Oslo&wfs_number=12,34,56\n * will load parcels #12, 34 and 56 of the city of Oslo.\n *\n * It is possible to define several groups of filtering parameters by:\n *\n * - adding a ``wfs_ngroups`` parameter telling how many groups are defined\n * - prefixing all filtering parameters by the number of each group,\n *   starting at 0. For instance ``wfs_0_<layer attribute name>``\n *\n * Example:\n * http://example.com?wfs_layer=parcels&wfs_ngroups=2\n * &wfs_0_city=Oslo&wfs_0_number=12,34,56&wfs_1_city=Paris&wfs_1_number=78,90\n * will load parcels #12, 34 and 56 of the city of Oslo as well as\n * parcels #78 and 90 of the city of Paris.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular $http service.\n * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n * @param {ngeox.WfsPermalinkOptions} ngeoWfsPermalinkOptions The options to\n *     configure the ngeo wfs permalink service with.\n * @ngdoc service\n * @ngname ngeoWfsPermalink\n * @ngInject\n */\nconst WfsPermalinkService = function($http, ngeoQueryResult, ngeoWfsPermalinkOptions) {\n\n  const options = ngeoWfsPermalinkOptions;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = options.url;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxFeatures_ = options.maxFeatures !== undefined ? options.maxFeatures : 50;\n\n  /**\n   * @type {Object<string, ngeox.WfsType>}\n   * @private\n   */\n  this.wfsTypes_ = {};\n\n  googAsserts.assertArray(options.wfsTypes, 'wfsTypes is not correctly set');\n  options.wfsTypes.forEach((wfsType) => {\n    this.wfsTypes_[wfsType.featureType] = wfsType;\n  });\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.defaultFeatureNS_ = options.defaultFeatureNS;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.defaultFeaturePrefix_ = options.defaultFeaturePrefix;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.pointRecenterZoom_ = options.pointRecenterZoom;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @private\n   */\n  this.result_ = ngeoQueryResult;\n};\n\n\n/**\n * Clear the results.\n * @export\n */\nWfsPermalinkService.prototype.clear = function() {\n  this.clearResult_();\n};\n\n\n/**\n * Build a WFS GetFeature request for the given query parameter data, send the\n * request and add the received features to {@link ngeox.QueryResult}.\n *\n * @param {ngeox.WfsPermalinkData} queryData Query data for the WFS request.\n * @param {ol.Map} map The ol3 map object to get the current projection from.\n * @export\n */\nWfsPermalinkService.prototype.issue = function(queryData, map) {\n  googAsserts.assert(this.url_,\n    'url is not set. to use the wfs permalink service, ' +\n      'set the value `ngeoWfsPermalinkOptions`');\n  this.clearResult_();\n\n  const typeName = queryData.wfsType;\n  if (!this.wfsTypes_.hasOwnProperty(typeName)) {\n    return;\n  }\n  const wfsType = this.wfsTypes_[typeName];\n\n  const filters = this.createFilters_(queryData.filterGroups);\n  if (filters === null) {\n    return;\n  }\n\n  this.issueRequest_(wfsType, filters, map, queryData.showFeatures);\n};\n\n\n/**\n * @param {ngeox.WfsType} wfsType Type.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {ol.Map} map The ol3 map object to get the current projection from.\n * @param {boolean} showFeatures Show features or only zoom to feature extent?\n * @private\n */\nWfsPermalinkService.prototype.issueRequest_ = function(wfsType, filter, map, showFeatures) {\n  const wfsFormat = new olFormatWFS();\n  const featureRequestXml = wfsFormat.writeGetFeature({\n    srsName: map.getView().getProjection().getCode(),\n    featureNS: (wfsType.featureNS !== undefined) ?\n      wfsType.featureNS : this.defaultFeatureNS_,\n    featurePrefix: (wfsType.featurePrefix !== undefined) ?\n      wfsType.featurePrefix : this.defaultFeaturePrefix_,\n    featureTypes: [wfsType.featureType],\n    outputFormat: 'GML3',\n    filter: filter,\n    maxFeatures: this.maxFeatures_\n  });\n\n  const featureRequest = new XMLSerializer().serializeToString(featureRequestXml);\n  const config = {\n    headers: {'Content-Type': 'text/xml; charset=UTF-8'}\n  };\n  this.$http_.post(this.url_, featureRequest, config).then((response) => {\n    const features = wfsFormat.readFeatures(response.data);\n    if (features.length == 0) {\n      return;\n    }\n\n    // zoom to features\n    const size = map.getSize();\n    if (size !== undefined) {\n      const maxZoom = this.pointRecenterZoom_;\n      const padding = [10, 10, 10, 10];\n      map.getView().fit(this.getExtent_(features), {size, maxZoom, padding});\n    }\n\n    // then show if requested\n    if (showFeatures) {\n      const resultSource = /** @type {ngeox.QueryResultSource} */ ({\n        'features': features,\n        'id': wfsType.featureType,\n        'identifierAttributeField': wfsType.label,\n        'label': wfsType.featureType,\n        'pending': false\n      });\n\n      this.result_.sources.push(resultSource);\n      this.result_.total = features.length;\n    }\n  });\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @return {ol.Extent} The extent of all features.\n * @private\n */\nWfsPermalinkService.prototype.getExtent_ = function(features) {\n  return features.reduce((extent, feature) => olExtent.extend(extent, feature.getGeometry().getExtent()), olExtent.createEmpty());\n};\n\n/**\n * Create OGC filters for the filter groups extracted from the query params.\n *\n * @param {Array.<ngeox.WfsPermalinkFilterGroup>} filterGroups Filter groups.\n * @return {ol.format.filter.Filter} OGC filters.\n * @private\n */\nWfsPermalinkService.prototype.createFilters_ = function(filterGroups) {\n  if (filterGroups.length == 0) {\n    return null;\n  }\n  const f = olFormatFilter;\n  const createFiltersForGroup = function(filterGroup) {\n    const filters = filterGroup.filters.map((filterDef) => {\n      const condition = filterDef.condition;\n      if (Array.isArray(condition)) {\n        return WfsPermalinkService.or_(condition.map(cond => f.equalTo(filterDef.property, cond)));\n      } else {\n        return f.equalTo(filterDef.property, filterDef.condition);\n      }\n    });\n    return WfsPermalinkService.and_(filters);\n  };\n  return WfsPermalinkService.or_(filterGroups.map(createFiltersForGroup));\n};\n\n\n/**\n * Join a list of filters with `and(...)`.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.and_ = function(filters) {\n  return WfsPermalinkService.joinFilters_(filters, olFormatFilter.and);\n};\n\n\n/**\n * Join a list of filters with `or(...)`.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.or_ = function(filters) {\n  return WfsPermalinkService.joinFilters_(filters, olFormatFilter.or);\n};\n\n\n/**\n * Join a list of filters with a given join function.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @param {function(!ol.format.filter.Filter, !ol.format.filter.Filter):\n *    ol.format.filter.Filter} joinFn The function to join two filters.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.joinFilters_ = function(filters, joinFn) {\n  return filters.reduce((combinedFilters, currentFilter) => {\n    if (combinedFilters === null) {\n      return currentFilter;\n    } else {\n      googAsserts.assert(currentFilter !== null);\n      return joinFn(combinedFilters, currentFilter);\n    }\n  }, null);\n};\n\n\n/**\n * Clear every features for all result sources and reset the total counter\n * as well.\n * @private\n */\nWfsPermalinkService.prototype.clearResult_ = function() {\n  this.result_.total = 0;\n  this.result_.sources.forEach((source) => {\n    source.features.length = 0;\n  });\n};\n\n\n/**\n * @type {!angular.Module}\n */\nWfsPermalinkService.module = angular.module('ngeoWfsPermalink', [\n  // FIXME add dependencies\n]);\n\n\n/**\n * Value that is supposed to be set in applications to enable the WFS\n * permalink functionality.\n */\nWfsPermalinkService.module.value('ngeoWfsPermalinkOptions',\n  /** @type {ngeox.WfsPermalinkOptions} */ ({\n    url: '',\n    wfsTypes: [],\n    defaultFeatureNS: '',\n    defaultFeaturePrefix: ''\n  })\n);\n\n\nWfsPermalinkService.module.service('ngeoWfsPermalink', WfsPermalinkService);\n\n\nexport default WfsPermalinkService;\n","/**\n * @module gmf.controllers.AbstractAppController\n */\nimport 'jquery';\nimport 'angular';\nimport 'angular-gettext';\nimport 'angular-dynamic-locale';\nimport gmfAuthenticationModule from 'gmf/authentication/module.js';\n\nimport gmfBackgroundlayerselectorComponent from 'gmf/backgroundlayerselector/component.js';\nimport gmfDatasourceModule from 'gmf/datasource/module.js';\nimport gmfDisclaimerComponent from 'gmf/disclaimer/component.js';\nimport gmfFiltersModule from 'gmf/filters/module.js';\nimport gmfLayertreeModule from 'gmf/layertree/module.js';\nimport gmfMapModule from 'gmf/map/module.js';\nimport gmfQueryExtraModule from 'gmf/query/extraModule.js';\nimport gmfSearchModule from 'gmf/search/module.js';\nimport gmfThemeModule from 'gmf/theme/module.js';\nimport ngeoMessageDisplaywindowComponent from 'ngeo/message/displaywindowComponent.js';\nimport ngeoMiscExtraModule from 'ngeo/misc/extraModule.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport ngeoQueryMapQueryComponent from 'ngeo/query/mapQueryComponent.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerWfsPermalink from 'ngeo/statemanager/WfsPermalink.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * Application abstract controller.\n *\n * This file includes `goog.require` for base components/directives used\n * by the HTML page and the controller to provide the configuration.\n *\n * @param {gmfx.Config} config A part of the application config.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @ngdoc controller\n * @ngInject\n * @export\n */\nconst exports = function(config, $scope, $injector) {\n\n  /**\n   * Location service\n   * @type {ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = $injector.get('ngeoLocation');\n  if (this.ngeoLocation.hasParam('debug')) {\n    // make the injector globally available\n    window.injector = $injector;\n  }\n\n  googAsserts.assertInstanceof(this.map, olMap);\n\n  /**\n   * Ngeo FeatureHelper service\n   * @type {ngeo.misc.FeatureHelper}\n   */\n  const ngeoFeatureHelper = $injector.get('ngeoFeatureHelper');\n  ngeoFeatureHelper.setProjection(googAsserts.assert(this.map.getView().getProjection()));\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = $injector.get('gmfThemeManager');\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.get('gmfTreeManager');\n\n  /**\n   * Themes service\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.get('gmfThemes');\n\n  /**\n   * Permalink service\n   * @type {gmf.permalink.Permalink}\n   * @private\n   */\n  this.permalink_ = $injector.get('gmfPermalink');\n\n  /**\n   * Authentication service\n   * @type {gmf.authentication.Service}\n   */\n  const gmfAuthentication = $injector.get('gmfAuthenticationService');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.hasEditableLayers = false;\n\n  /**\n   * @private\n   */\n  this.updateHasEditableLayers_ = function() {\n    this.gmfThemes_.hasEditableLayers().then((hasEditableLayers) => {\n      this.hasEditableLayers = hasEditableLayers;\n    });\n  };\n\n  /**\n   * @param {gmfx.AuthenticationEvent} evt Event.\n   */\n  const userChange = (evt) => {\n    const user = evt.detail.user;\n    const roleId = (user.username !== null) ? user.role_id : undefined;\n\n    // Open filter panel if 'open_panel' is set in functionalities and\n    // has 'layer_filter' as first value\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      const functionalities = this.gmfUser.functionalities;\n      if (functionalities &&\n          functionalities.open_panel &&\n          functionalities.open_panel[0] === 'layer_filter') {\n        this.filterSelectorActive = true;\n      }\n    });\n\n    // Reload theme and background layer when login status changes.\n    const previousThemeName = this.gmfThemeManager.getThemeName();\n    this.gmfThemeManager.setThemeName('', true);\n    if (evt.type !== 'ready') {\n      this.updateCurrentTheme_(previousThemeName);\n    }\n    // Reload themes when login status changes.\n    this.gmfThemes_.loadThemes(roleId);\n    this.updateHasEditableLayers_();\n  };\n\n  olEvents.listen(gmfAuthentication, 'ready', userChange);\n  olEvents.listen(gmfAuthentication, 'login', userChange);\n  olEvents.listen(gmfAuthentication, 'logout', userChange);\n\n  /**\n   * @type {Array.<gmfx.SearchComponentDatasource>}\n   * @export\n   */\n  this.searchDatasources = [{\n    labelKey: 'label',\n    groupValues: /** @type {Array.<string>} **/ ($injector.get('gmfSearchGroups')),\n    groupActions: /** @type {Array.<string>} **/ ($injector.get('gmfSearchActions')),\n    projection: `EPSG:${config.srid || 21781}`,\n    url: /** @type {string} **/ ($injector.get('fulltextsearchUrl'))\n  }];\n\n  /**\n   * @type {!Object.<string, string>}\n   * @export\n   */\n  this.dimensions = {};\n\n  // watch any change on dimensions object to refresh the url\n  this.permalink_.setDimensions(this.dimensions);\n\n  // Injecting the gmfDataSourcesManager service creates the data sources\n  const gmfDataSourcesManager = $injector.get('gmfDataSourcesManager');\n  // Init the datasources with our map.\n  gmfDataSourcesManager.setDatasourceMap(this.map);\n  // Give the dimensions to the gmfDataSourcesManager\n  gmfDataSourcesManager.setDimensions(this.dimensions);\n\n  if ($injector.has('gmfDefaultDimensions')) {\n    // Set defaults\n    const defaultDimensions = $injector.get('gmfDefaultDimensions');\n    for (const dim in defaultDimensions) {\n      if (this.dimensions[dim] === undefined) {\n        this.dimensions[dim] = defaultDimensions[dim];\n      }\n    }\n  }\n\n  /**\n   * @type {ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = $injector.get('ngeoBackgroundLayerMgr');\n\n  // watch any change on dimensions object to refresh the background layer\n  $scope.$watchCollection(() => this.dimensions, () => {\n    this.backgroundLayerMgr_.updateDimensions(this.map, this.dimensions);\n  });\n\n  this.backgroundLayerMgr_.on('change', () => {\n    this.backgroundLayerMgr_.updateDimensions(this.map, this.dimensions);\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.leftNavVisible = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.rightNavVisible = false;\n\n  const queryFill = new olStyleFill({color: [255, 170, 0, 0.6]});\n  const queryStroke = new olStyleStroke({color: [255, 170, 0, 1], width: 2});\n\n  /**\n   * FeatureStyle used by the gmf.query.windowComponent\n   * @type {ol.style.Style}\n   * @export\n   */\n  this.queryFeatureStyle = new olStyleStyle({\n    fill: queryFill,\n    image: new olStyleCircle({\n      fill: queryFill,\n      radius: 5,\n      stroke: queryStroke\n    }),\n    stroke: queryStroke\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.filterSelectorActive = false;\n\n  /**\n   * The active state of the ngeo query directive.\n   * @type {boolean}\n   * @export\n   */\n  this.queryActive = true;\n\n  /**\n   * Set the clearing of the ngeoQuery after the deactivation of the query\n   * @type {boolean}\n   * @export\n   */\n  this.queryAutoClear = true;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.printPanelActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.printActive = false;\n\n  /**\n   * @type {ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = $injector.get('ngeoMapQuerent');\n\n  // Don't deactivate ngeoQuery on print activation\n  $scope.$watch(() => this.printPanelActive, (newVal) => {\n    // Clear queries if another panel is open but not if user go back to the\n    // map form the print.\n    if (!newVal && !this.queryActive) {\n      this.ngeoMapQuerent_.clear();\n    }\n    this.queryAutoClear = !newVal;\n    this.printActive = newVal;\n  });\n\n  /**\n   * The active state of the directive responsible of point measurements.\n   * @type {boolean}\n   * @export\n   */\n  this.measurePointActive = false;\n\n  /**\n   * The active state of the directive responsible of length measurements.\n   * @type {boolean}\n   * @export\n   */\n  this.measureLengthActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawFeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawProfilePanelActive = false;\n\n  /**\n   * @type {gmfx.User}\n   * @export\n   */\n  this.gmfUser = $injector.get('gmfUser');\n\n  /**\n   * @type {ngeox.miscGetBrowserLanguage}\n   */\n  this.getBrowserLanguage = $injector.get('ngeoGetBrowserLanguage');\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   */\n  this.stateManager = $injector.get('ngeoStateManager');\n\n  /**\n   * @type {tmhDynamicLocale}\n   */\n  this.tmhDynamicLocale = $injector.get('tmhDynamicLocale');\n\n  /**\n   * @type {angular.Scope}\n   */\n  this.$scope = $scope;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.lang;\n\n  /**\n   * Default language\n   * @type {string}\n   */\n  this.defaultLang = $injector.get('defaultLang');\n\n  /**\n   * Languages URL\n   * @type {!Object.<string, string>}\n   */\n  this.langUrls = $injector.get('langUrls');\n\n  /**\n   * The gettext catalog\n   * @type {angularGettext.Catalog}\n   */\n  this.gettextCatalog = $injector.get('gettextCatalog');\n\n  this.initLanguage();\n\n  const mapTools = 'mapTools';\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.mapToolsGroup = mapTools;\n\n  /**\n   * The ngeo feature overlay manager service\n   * @type {ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.get('ngeoFeatureOverlayMgr');\n  ngeoFeatureOverlayMgr.init(this.map);\n\n  /**\n   * The ngeo ToolActivate manager service.\n   * @type {ngeo.misc.ToolActivateMgr}\n   */\n  const ngeoToolActivateMgr = $injector.get('ngeoToolActivateMgr');\n\n  const queryToolActivate = new ngeoMiscToolActivate(this, 'queryActive');\n  ngeoToolActivateMgr.registerTool(mapTools, queryToolActivate, true);\n\n  const measurePointActivate = new ngeoMiscToolActivate(this, 'measurePointActive');\n  ngeoToolActivateMgr.registerTool(mapTools, measurePointActivate, false);\n\n  const measureLengthActivate = new ngeoMiscToolActivate(this, 'measureLengthActive');\n  ngeoToolActivateMgr.registerTool(mapTools, measureLengthActivate, false);\n\n  const drawFeatureActivate = new ngeoMiscToolActivate(this, 'drawFeatureActive');\n  ngeoToolActivateMgr.registerTool(mapTools, drawFeatureActivate, false);\n\n  const drawProfilePanelActivate = new ngeoMiscToolActivate(this, 'drawProfilePanelActive');\n  ngeoToolActivateMgr.registerTool(mapTools, drawProfilePanelActivate, false);\n\n  const printPanelActivate = new ngeoMiscToolActivate(this, 'printPanelActive');\n  ngeoToolActivateMgr.registerTool(mapTools, printPanelActivate, false);\n\n  $scope.$root.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n    this.gmfThemes_.getThemeObject(name).then((theme) => {\n      this.setDefaultBackground_(theme);\n    });\n  });\n\n  /**\n   * @param {boolean} skipPermalink If True, don't use permalink\n   * background layer.\n   * @private\n   */\n  this.updateCurrentBackgroundLayer_ = function(skipPermalink) {\n    this.gmfThemes_.getBgLayers().then((layers) => {\n      let background;\n      if (!skipPermalink) {\n        // get the background from the permalink\n        background = this.permalink_.getBackgroundLayer(layers);\n      }\n      if (!background) {\n        // get the background from the user settings\n        const functionalities = this.gmfUser.functionalities;\n        if (functionalities) {\n          const defaultBasemapArray = functionalities.default_basemap;\n          if (defaultBasemapArray.length > 0) {\n            const defaultBasemapLabel = defaultBasemapArray[0];\n            background = olArray.find(layers, layer => layer.get('label') === defaultBasemapLabel);\n          }\n        }\n      }\n      if (!background && layers[1]) {\n        // fallback to the layers list, use the second one because the first\n        // is the blank layer\n        background = layers[1];\n      }\n\n      if (background) {\n        this.backgroundLayerMgr_.set(this.map, background);\n      }\n    });\n  }.bind(this);\n\n  this.updateCurrentBackgroundLayer_(false);\n\n  // Static \"not used\" functions should be in the window because otherwise\n  // closure remove them. \"export\" tag doesn't work on static function below,\n  // we \"export\" them as externs in the gmfx options file.\n  const gmfx = window.gmfx || {};\n  /**\n   * @export\n   */\n  window.gmfx = gmfx;\n\n  /**\n   * Static function to create a popup with an iframe.\n   * @param {string} url an url.\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width.\n   * @param {number=} opt_height CSS height.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  gmfx.openIframePopup = (\n    url, title, opt_width, opt_height, opt_apply\n  ) => {\n    this.displaywindowUrl = url;\n    gmfx.openPopup_(title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * Static function to create a popup with html content.\n   * @param {string} content (text or html).\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  gmfx.openTextPopup = (\n    content, title, opt_width, opt_height, opt_apply\n  ) => {\n    this.displaywindowContent = content;\n    gmfx.openPopup_(title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   */\n  gmfx.openPopup_ = (title, opt_width, opt_height, opt_apply) => {\n\n    this.displaywindowTitle = title;\n    this.displaywindowOpen = true;\n\n    if (opt_width) {\n      this.displaywindowWidth = `${opt_width}px`;\n    }\n    if (opt_height) {\n      this.displaywindowHeight = `${opt_height}px`;\n    }\n    if (opt_apply !== false) {\n      this.$scope.$apply();\n    }\n  };\n\n  /**\n   * Whether to update the size of the map on browser window resize.\n   * @type {boolean}\n   * @export\n   */\n  this.manageResize = false;\n\n  /**\n   * The duration (milliseconds) of the animation that may occur on the div\n   * containing the map. Used to smoothly resize the map while the animation\n   * is in progress.\n   * @type {number|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n  const cgxp = window.cgxp || {};\n  /**\n   * @export\n   */\n  window.cgxp = cgxp;\n  /**\n   * @export\n   */\n  cgxp.tools = window.cgxp.tools || {};\n  /**\n   * Static function to create a popup with an iframe.\n   * @param {string} url an url.\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  cgxp.tools.openInfoWindow = function(url, title, opt_width, opt_height, opt_apply) {\n    gmfx.openIframePopup(url, title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowContent = null;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.displaywindowDraggableContainment = '.gmf-map';\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowHeight = null;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.displaywindowOpen = false;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowTitle = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowUrl = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowWidth = null;\n};\n\n\n/**\n * @return {boolean} Return true if a user exists and its 'is_password_changed' value is explicitly set\n *     to false.\n * @export\n */\nexports.prototype.userMustChangeItsPassword = function() {\n  return this.gmfUser.is_password_changed === false;\n};\n\n\n/**\n * @param {Array.<ol.layer.Base>} layers Layers list.\n * @param {Array.<string>} labels default_basemap list.\n * @return {ol.layer.Base} layer or null\n */\nexports.getLayerByLabels = function(layers, labels) {\n  if (labels && labels.length > 0) {\n    return olArray.find(layers, layer => layer.get('label') === labels[0]);\n  }\n  return null;\n};\n\n\n/**\n * @param {string} lang Language code.\n * @export\n */\nexports.prototype.switchLanguage = function(lang) {\n  googAsserts.assert(lang in this.langUrls);\n  this.gettextCatalog.setCurrentLanguage(lang);\n  this.gettextCatalog.loadRemote(this.langUrls[lang]);\n  this.tmhDynamicLocale.set(lang);\n  this.lang = lang;\n};\n\n\n/**\n */\nexports.prototype.initLanguage = function() {\n  this.$scope.$watch(() => this.lang, (newValue) => {\n    this.stateManager.updateState({\n      'lang': newValue\n    });\n  });\n\n  const browserLanguage = /** @type {string|undefined} */\n      (this.getBrowserLanguage(Object.keys(this.langUrls)));\n  const urlLanguage = /** @type {string|undefined} */\n      (this.stateManager.getInitialValue('lang'));\n\n  if (urlLanguage !== undefined && urlLanguage in this.langUrls) {\n    this.switchLanguage(urlLanguage);\n    return;\n  } else if (browserLanguage !== undefined && browserLanguage in this.langUrls) {\n    this.switchLanguage(browserLanguage);\n    return;\n  } else {\n    // if there is no information about language preference,\n    // fallback to default language\n\n    this.switchLanguage(this.defaultLang);\n    return;\n  }\n};\n\n\n/**\n * @param {gmfThemes.GmfTheme} theme Theme.\n * @private\n */\nexports.prototype.setDefaultBackground_ = function(theme) {\n  this.gmfThemes_.getBgLayers().then((layers) => {\n    let layer;\n\n    // get the background from the permalink\n    layer = this.permalink_.getBackgroundLayer(layers);\n\n    if (!layer && this.gmfUser.functionalities) {\n      // get the background from the user settings\n      layer = exports.getLayerByLabels(layers, this.gmfUser.functionalities.default_basemap);\n    }\n\n    if (!layer && theme) {\n      // get the background from the theme\n      layer = exports.getLayerByLabels(layers, theme.functionalities.default_basemap);\n    }\n\n    if (!layer) {\n      // fallback to the layers list, use the second one because the first is the blank layer.\n      layer = layers[layers.length > 1 ? 1 : 0];\n    }\n\n    googAsserts.assert(layer);\n    this.backgroundLayerMgr_.set(this.map, layer);\n  });\n};\n\n/**\n * @param {string} fallbackThemeName fallback theme name.\n * @private\n */\nexports.prototype.updateCurrentTheme_ = function(fallbackThemeName) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.permalink_.defaultThemeNameFromFunctionalities();\n    if (themeName) {\n      const theme = gmfThemeThemes.findThemeByName(themes, /** @type {string} */ (themeName));\n      if (theme) {\n        this.gmfThemeManager.addTheme(theme, true);\n      }\n    } else {\n      this.gmfThemeManager.setThemeName(fallbackThemeName);\n    }\n  });\n};\n\n/**\n * @protected\n * @return {Element} Span element with font-awesome inside of it\n */\nexports.prototype.getLocationIcon = function() {\n  const arrow = document.createElement('span');\n  arrow.className = 'fa fa-location-arrow';\n  arrow.style.transform = 'rotate(-0.82rad)';\n  const arrowWrapper = document.createElement('span');\n  arrowWrapper.appendChild(arrow);\n  return arrowWrapper;\n};\n\n\nexports.module = angular.module('GmfAbstractAppControllerModule', [\n  'gettext',\n  'tmh.dynamicLocale',\n  gmfAuthenticationModule.name,\n  gmfBackgroundlayerselectorComponent.name,\n  gmfDatasourceModule.name,\n  gmfDisclaimerComponent.name,\n  gmfFiltersModule.name,\n  gmfLayertreeModule.name,\n  gmfMapModule.name,\n  gmfQueryExtraModule.name,\n  gmfSearchModule.name,\n  gmfThemeModule.name,\n  ngeoMessageDisplaywindowComponent.name,\n  ngeoMiscExtraModule.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoQueryMapQuerent.module.name,\n  ngeoQueryMapQueryComponent.name,\n  ngeoStatemanagerModule.name,\n  ngeoStatemanagerWfsPermalink.module.name,\n]);\n\n\nexports.module.controller('AbstractController', exports);\n\n\nexports.module.value('ngeoExportFeatureFormats', [\n  ngeoMiscFeatureHelper.FormatType.KML,\n  ngeoMiscFeatureHelper.FormatType.GPX\n]);\n\nexports.module.config(['tmhDynamicLocaleProvider', 'angularLocaleScript',\n  /**\n   * @param {tmhDynamicLocaleProvider} tmhDynamicLocaleProvider angular-dynamic-locale provider.\n   * @param {string} angularLocaleScript the script.\n   */\n  function(tmhDynamicLocaleProvider, angularLocaleScript) {\n    // configure the script URL\n    tmhDynamicLocaleProvider.localeLocationPattern(angularLocaleScript);\n  }\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.ModifyCircle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport * as olCoordinate from 'ol/coordinate.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olExtent from 'ol/extent.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport {fromCircle} from 'ol/geom/Polygon.js';\nimport olInteractionPointer, {handleEvent as pointerHandleEvent} from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStructsRBush from 'ol/structs/RBush.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleDragEvent: exports.handleDragEvent_,\n    handleEvent: exports.handleEvent,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * Editing vertex.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {ol.structs.RBush.<ol.ModifySegmentDataType>}\n   * @private\n   */\n  this.rBush_ = new olStructsRBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  this.features_.forEach(feature => this.addFeature_(feature));\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  if (feature.getGeometry().getType() === 'Polygon' &&\n      !!feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n    const geometry = /** @type {ol.geom.Polygon}*/ (feature.getGeometry());\n    this.writeCircleGeometry_(feature, geometry);\n\n    const map = this.getMap();\n    if (map) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<ol.ModifySegmentDataType>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n       * @param {ol.ModifySegmentDataType} node RTree node.\n       */\n    (node) => {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nexports.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = rings.length; j < jj; ++j) {\n    coordinates = rings[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(olExtent.boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates Coordinates.\n * @return {ol.Feature} Vertex feature.\n * @private\n */\nexports.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new olFeature(new olGeomPoint(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} a The first segment data.\n * @param {ol.ModifySegmentDataType} b The second segment data.\n * @return {number} The difference in indexes.\n * @private\n */\nexports.compareIndexes_ = function(a, b) {\n  return a.index - b.index;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDownEvent_ = function(evt) {\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  this.dragSegments_ = [];\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = olExtent.boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(exports.compareIndexes_);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = olBase.getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += `-${depth.join('-')}`; // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (olCoordinate.equals(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (olCoordinate.equals(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      }\n    }\n  }\n  return !!this.vertexFeature_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDragEvent_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const vertex = evt.coordinate;\n  const geometry = /** @type {ol.geom.Polygon}*/ (this.dragSegments_[0][0].geometry);\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const line = new olGeomLineString([center, vertex]);\n\n\n  /**\n   * @type {ol.geom.Circle}\n   */\n  const circle = new olGeomCircle(center, line.getLength());\n  const coordinates = fromCircle(circle, 64).getCoordinates();\n  this.setGeometryCoordinates_(geometry, coordinates);\n\n\n  const azimut = ngeoInteractionMeasureAzimut.getAzimut(line);\n  this.features_.getArray()[0].set(ngeoFormatFeatureProperties.AZIMUT, azimut);\n\n  this.createOrUpdateVertexFeature_(vertex);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleUpEvent_ = function(evt) {\n  this.rBush_.clear();\n  this.writeCircleGeometry_(this.dragSegments_[0][0].feature,\n    this.dragSegments_[0][0].geometry);\n\n  if (this.modified_) {\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifyend', {features: this.features_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.ModifyCircle}\n * @api\n */\nexports.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof olMapBrowserPointerEvent)) {\n    return true;\n  }\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == 'pointermove' && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n\n  return pointerHandleEvent.call(this, mapBrowserEvent) &&\n      !handled;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.PluggableMap} map Map.\n * @private\n */\nexports.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return olCoordinate.squaredDistanceToSegment(pixelCoordinate, a.segment) -\n        olCoordinate.squaredDistanceToSegment(pixelCoordinate, b.segment);\n  };\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = olExtent.boundingExtent([lowerLeft, upperRight]);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = (olCoordinate.closestOnSegment(pixelCoordinate,\n      closestSegment));\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    if (Math.sqrt(olCoordinate.squaredDistance(pixel, vertexPixel)) <=\n        this.pixelTolerance_) {\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = olCoordinate.squaredDistance(vertexPixel, pixel1);\n      const squaredDist2 = olCoordinate.squaredDistance(vertexPixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      this.snappedToVertex_ = dist <= this.pixelTolerance_;\n      if (this.snappedToVertex_) {\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        this.createOrUpdateVertexFeature_(vertex);\n        const vertexSegments = {};\n        vertexSegments[olBase.getUid(closestSegment)] = true;\n        let segment;\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          segment = nodes[i].segment;\n          if ((olCoordinate.equals(closestSegment[0], segment[0]) &&\n              olCoordinate.equals(closestSegment[1], segment[1]) ||\n              (olCoordinate.equals(closestSegment[0], segment[1]) &&\n              olCoordinate.equals(closestSegment[1], segment[0])))) {\n            vertexSegments[olBase.getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n        return;\n      }\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nexports.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.ModifyRectangle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorPoints_ = new olLayerVector({\n    source: new olSourceVector({\n      wrapX: !!options.wrapX\n    }),\n    visible: this.getActive(),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {Object.<number, ngeo.interaction.ModifyRectangle.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {?ngeo.interaction.ModifyRectangle.ModifyParams}\n   * @private\n   */\n  this.params_ = null;\n\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n  this.features_.forEach((feature) => {\n    this.addFeature_(feature);\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionPointer.prototype.setActive.call(this, active);\n  if (this.vectorPoints_) {\n    this.vectorPoints_.setVisible(active);\n  }\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const featureGeom = feature.getGeometry();\n  if (featureGeom instanceof olGeomPolygon) {\n\n    // If the feature's corners are already set, no need to set them again\n    const uid = olBase.getUid(feature);\n    let item = this.cache_[uid];\n    if (item) {\n      return;\n    }\n\n    const pointSource = this.vectorPoints_.getSource();\n\n    // from each corners, create a point feature and add it to the point layer.\n    // each point is then associated with 2 siblings in order to update the\n    // siblings geometry at the same time when a point gets dragged around.\n    // mark each one as 'corner'\n    const corners = featureGeom.getCoordinates()[0];\n    while (corners.length > 4) {\n      if (corners[0][0] < corners[1][0] && corners[0][1] <= corners[1][1]) {\n        corners.pop();\n      } else {\n        corners.shift();\n      }\n    }\n    const pointFeatures = [];\n    let cornerPoint;\n    let cornerFeature;\n    corners.forEach((corner) => {\n      cornerPoint = new olGeomPoint(corner);\n      cornerFeature = new olFeature({\n        'corner': true,\n        'geometry': cornerPoint,\n        'siblingX': null,\n        'siblingY': null,\n        'boxFeature': feature\n      });\n\n      pointFeatures.push(cornerFeature);\n    }, this);\n    item = /** @type {ngeo.interaction.ModifyRectangle.CacheItem} */ ({\n      corners: pointFeatures\n    });\n    this.cache_[uid] = item;\n\n    let previousFeature;\n    let nextFeature;\n    pointFeatures.forEach((cornerFeature, index) => {\n      previousFeature = pointFeatures[index - 1];\n      if (!previousFeature) {\n        previousFeature = pointFeatures[pointFeatures.length - 1];\n      }\n\n      nextFeature = pointFeatures[index + 1];\n      if (!nextFeature) {\n        nextFeature = pointFeatures[0];\n      }\n\n      if (index % 2 === 0) {\n        cornerFeature.set('siblingX', nextFeature);\n        cornerFeature.set('siblingY', previousFeature);\n      } else {\n        cornerFeature.set('siblingX', previousFeature);\n        cornerFeature.set('siblingY', nextFeature);\n      }\n\n    }, this);\n    pointSource.addFeatures(pointFeatures);\n  }\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n    this.params_ = this.initializeParams_();\n  }\n};\n\n\n/**\n * @return {ngeo.interaction.ModifyRectangle.ModifyParams} The initialised params\n * @private\n */\nexports.prototype.initializeParams_ = function() {\n  const feature = this.feature_;\n\n  // 1. Find the origin (opposite) point for the modify operation\n  // siblingY relative to the origin is siblingX relative to the opposite\n  const siblingY = feature.get('siblingX');\n  googAsserts.assertInstanceof(siblingY, olFeature);\n\n  const origin = siblingY.get('siblingY');\n  googAsserts.assertInstanceof(origin, olFeature);\n  const originPoint = origin.getGeometry();\n  googAsserts.assertInstanceof(originPoint, olGeomPoint);\n  const originCoordinate = originPoint.getCoordinates();\n  const originPixel = this.getMap().getPixelFromCoordinate(originCoordinate);\n\n  // 2. Find the origin's X sibling and the normal vector from the origin to it\n  const siblingX = origin.get('siblingX');\n  googAsserts.assertInstanceof(siblingX, olFeature);\n  const siblingXPoint = siblingX.getGeometry();\n  googAsserts.assertInstanceof(siblingXPoint, olGeomPoint);\n  const siblingXCoordinate = siblingXPoint.getCoordinates();\n  const siblingXPixel = this.getMap().getPixelFromCoordinate(siblingXCoordinate);\n  let vectorX = [\n    siblingXPixel[0] - originPixel[0],\n    siblingXPixel[1] - originPixel[1]\n  ];\n  const vectorXMagnitude = Math.sqrt(vectorX[0] * vectorX[0] + vectorX[1] * vectorX[1]);\n  vectorX[0] /= vectorXMagnitude;\n  vectorX[1] /= vectorXMagnitude;\n\n  // 3. Find the origin's Y sibling and the normal vector from the origin to it\n  const siblingYPoint = siblingY.getGeometry();\n  googAsserts.assertInstanceof(siblingYPoint, olGeomPoint);\n  const siblingYCoordinate = siblingYPoint.getCoordinates();\n  const siblingYPixel = this.getMap().getPixelFromCoordinate(siblingYCoordinate);\n  let vectorY = [\n    siblingYPixel[0] - originPixel[0],\n    siblingYPixel[1] - originPixel[1]\n  ];\n  const vectorYMagnitude = Math.sqrt(vectorY[0] * vectorY[0] + vectorY[1] * vectorY[1]);\n  vectorY[0] /= vectorYMagnitude;\n  vectorY[1] /= vectorYMagnitude;\n\n  // 4. Validate the vectors.\n  if (isNaN(vectorX[0]) && isNaN(vectorY[0])) {\n    // Both vector are invalid. Rotation information has already been lost\n    vectorX = [0, 1];\n    vectorY = [1, 0];\n  } else if (isNaN(vectorX[0])) {\n    vectorX = [vectorY[1], -vectorY[0]];\n  } else if (isNaN(vectorY[0])) {\n    vectorY = [vectorX[1], -vectorX[0]];\n  }\n\n  return {\n    originCoordinate,\n    originPixel,\n    siblingXPoint,\n    siblingYPoint,\n    vectorX,\n    vectorY\n  };\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const item = this.cache_[uid];\n  const corners = item.corners;\n  for (let i = 0; i < corners.length; i++) {\n    this.vectorPoints_.getSource().removeFeature(corners[i]);\n  }\n  this.feature_ = null;\n  corners.length = 0;\n  delete this.cache_[uid];\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.vectorPoints_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  const feature = map.forEachFeatureAtPixel(evt.pixel, feature =>\n    (feature.get('siblingX') && feature.get('siblingY') ? feature : undefined)\n  );\n\n  if (feature) {\n    this.feature_ = feature;\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const feature = this.feature_;\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (feature.getGeometry());\n\n  if (geometry instanceof olGeomPoint) {\n    geometry.setCoordinates(evt.coordinate);\n\n    const destinationPixel = evt.pixel;\n\n    const originPixel = this.params_.originPixel;\n    const siblingXPoint = this.params_.siblingXPoint;\n    const siblingYPoint = this.params_.siblingYPoint;\n    const vectorX = this.params_.vectorX;\n    const vectorY = this.params_.vectorY;\n    const originCoordinate = this.params_.originCoordinate;\n\n    // Calculate new positions of siblings\n    const b2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorX);\n    const b2Coordinate = this.getMap().getCoordinateFromPixel(b2Pixel);\n    siblingXPoint.setCoordinates(b2Coordinate);\n\n    const c2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorY);\n    const c2Coordinate = this.getMap().getCoordinateFromPixel(c2Pixel);\n    siblingYPoint.setCoordinates(c2Coordinate);\n\n\n    // Resize the box\n    const boxFeature = feature.get('boxFeature');\n    const geom = boxFeature.getGeometry();\n    googAsserts.assertInstanceof(geom, olGeomPolygon);\n    geom.setCoordinates([[evt.coordinate, b2Coordinate, originCoordinate, c2Coordinate, evt.coordinate]]);\n  }\n};\n\n\n/**\n * Calculate the new position of a point as projected on a vector from origin to\n * destination.\n * @param {ol.Pixel} origin Pixel of origin (opposite of the drag handle)\n * @param {ol.Pixel} destination Pixel of destination (the handle we dragged)\n * @param {ol.Pixel} vector The normalized vector to the point\n * @return {ol.Pixel} The new pixel of the point\n * @private\n */\nexports.prototype.calculateNewPixel_ = function(\n  origin, destination, vector) {\n\n  const aVector = [destination[0] - origin[0], destination[1] - origin[1]];\n\n  const abScalarProduct = aVector[0] * vector[0] + aVector[1] * vector[1];\n\n  const deltaVector = [\n    (vector[0] * abScalarProduct),\n    (vector[1] * abScalarProduct)\n  ];\n\n  return [deltaVector[0] + origin[0], deltaVector[1] + origin[1]];\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifyend', {features: this.features_});\n    this.dispatchEvent(event);\n    this.params_ = null;\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * @typedef {{\n *     corners: Array.<ol.Feature>\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     originCoordinate: ol.Coordinate,\n *     originPixel: ol.Pixel,\n *     siblingXPoint: ol.geom.Point,\n *     siblingYPoint: ol.geom.Point,\n *     vectorX: Array.<number>,\n *     vectorY: Array.<number>\n * }}\n */\nexports.ModifyParams;\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Modify\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModifyCircle from 'ngeo/interaction/ModifyCircle.js';\nimport ngeoInteractionModifyRectangle from 'ngeo/interaction/ModifyRectangle.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olCollection from 'ol/Collection.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * This interaction combines multiple kind of feature modification interactions\n * in order to be able to modify vector features depending on their geometry\n * type. The different kind of interactions supported are:\n *\n * - `ol.interaction.Modify`\n * - `ngeo.interaction.ModifyCircle`\n * - `ngeo.interaction.ModifyRectangle`\n *\n * This interaction receives a collection of features. Its job is to listen\n * to added/removed features to and from it and add them in the proper\n * collection that is uniquely used for each inner interaction. Those inner\n * interactions follow the `active` property of this interaction, i.e. when\n * this interaction is activated, so do the inner interactions. Since they will\n * never share the same feature, they don't collide with one an other.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Interaction}\n * @param {olx.interaction.ModifyOptions} options Options.\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.otherFeatures_ = new olCollection();\n\n  this.interactions_.push(new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.otherFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.circleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyCircle({\n    features: this.circleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.rectangleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyRectangle({\n    features: this.rectangleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionInteraction.prototype.setActive.call(this, active);\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const interactions = this.interactions_;\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    interactions.forEach((interaction) => {\n      currentMap.removeInteraction(interaction);\n    });\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    interactions.forEach((interaction) => {\n      map.addInteraction(interaction);\n    });\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Toggle interactions.\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const interactions = this.interactions_;\n  const keys = this.listenerKeys_;\n\n  interactions.forEach((interaction) => {\n    interaction.setActive(active && !!map);\n  });\n\n  if (active && map) {\n    this.features_.forEach(feature => this.addFeature_(feature));\n    keys.push(\n      olEvents.listen(this.features_, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.features_.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.push(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.remove(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {ol.Collection.<ol.Feature>} Collection of features for this feature.\n * @private\n */\nexports.prototype.getFeatureCollection_ = function(feature) {\n  let features;\n  const isCircle = feature.get(ngeoFormatFeatureProperties.IS_CIRCLE);\n  const isRectangle = feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE);\n  if (isCircle === true || isCircle === 'true') {\n    features = this.circleFeatures_;\n  } else if (isRectangle === true || isRectangle === 'true') {\n    features = this.rectangleFeatures_;\n  } else {\n    features = this.otherFeatures_;\n  }\n  return features;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.Controller\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {ol.Collection.<ol.Feature>} ngeoFeatures Collection of features.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDrawfeatureController\n */\nconst exports = function($scope, $sce, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * Alternate collection of features in which to push the drawn features.\n   * If not defined, then `ngeoFeatures` is used instead.\n   * @type {!ol.Collection.<!ol.Feature>|undefined}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showMeasure;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n  // Fill the string collection\n  gettextCatalog.getString('Point');\n  gettextCatalog.getString('LineString');\n  gettextCatalog.getString('Polygon');\n  gettextCatalog.getString('Circle');\n  gettextCatalog.getString('Rectangle');\n  gettextCatalog.getString('Text');\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = ngeoFeatures;\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawPoint;\n\n  /**\n   * @type {ngeo.interaction.MeasureLength}\n   * @export\n   */\n  this.measureLength;\n\n  /**\n   * @type {ngeo.interaction.MeasureArea}\n   * @export\n   */\n  this.measureArea;\n\n  /**\n   * @type {ngeo.interaction.MeasureAzimut}\n   * @export\n   */\n  this.measureAzimut;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawRectangle;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawText;\n\n\n  // Watch the \"active\" property, and disable the draw interactions\n  // when \"active\" gets set to false.\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      if (newVal === false) {\n        this.interactions_.forEach((interaction) => {\n          interaction.setActive(false);\n        });\n      }\n    }\n  );\n\n};\n\n\n/**\n * Register a draw|measure interaction by setting it inactive, decorating it\n * and adding it to the map\n * @param {ol.interaction.Interaction} interaction Interaction to register.\n * @export\n */\nexports.prototype.registerInteraction = function(\n  interaction) {\n  this.interactions_.push(interaction);\n  interaction.setActive(false);\n  ngeoMiscDecorate.interaction(interaction);\n  this.map.addInteraction(interaction);\n};\n\n\n/**\n * Called when any of the draw or measure interaction active property changes.\n * Set the active property of this directive accordingly, i.e. if at least\n * one of the draw or measure is active then the active property is set to true.\n * @param {ol.Object.Event} event Event.\n * @export\n */\nexports.prototype.handleActiveChange = function(event) {\n  this.active = this.interactions_.some(interaction => interaction.getActive(), this);\n};\n\n\n/**\n * Called when a feature is finished being drawn. Set the default properties\n * for its style, then set its style and add it to the features collection.\n * @param {string} type Type of geometry being drawn.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.prototype.handleDrawEnd = function(type, event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  googAsserts.assert(sketch);\n\n  const azimut = sketch.get('azimut');\n\n  const features = this.features || this.ngeoFeatures_;\n\n  const feature = new olFeature(sketch.getGeometry());\n\n  const prop = ngeoFormatFeatureProperties;\n\n  switch (type) {\n    case ngeoGeometryType.CIRCLE:\n      feature.set(prop.IS_CIRCLE, true);\n      if (azimut !== undefined) {\n        feature.set(prop.AZIMUT, azimut);\n      }\n      break;\n    case ngeoGeometryType.TEXT:\n      feature.set(prop.IS_TEXT, true);\n      break;\n    case ngeoGeometryType.RECTANGLE:\n      feature.set(prop.IS_RECTANGLE, true);\n      break;\n    default:\n      break;\n  }\n\n  /**\n   * @type {string}\n   */\n  const name = this.gettextCatalog_.getString(type);\n  feature.set(prop.NAME, `${name} ${features.getLength() + 1}`);\n\n  /**\n   * @type {string}\n   */\n  const color = type !== ngeoGeometryType.TEXT ? '#DB4436' : '#000000';\n  feature.set(prop.COLOR, color);\n\n  feature.set(prop.ANGLE, 0);\n  feature.set(prop.OPACITY, 0.2);\n  feature.set(prop.SHOW_MEASURE, this.showMeasure ? true : false);\n  feature.set(prop.SHOW_LABEL, false);\n  feature.set(prop.SIZE, 10);\n  feature.set(prop.STROKE, 2);\n\n  // set style\n  this.featureHelper_.setStyle(feature);\n\n  // push in collection\n  features.push(feature);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDrawfeatureController', [\n  ngeoDrawFeatures.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\nexports.module.controller('ngeoDrawfeatureController', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.point\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawpoint', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawPoint = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawPoint);\n      drawFeatureCtrl.drawPoint = drawPoint;\n\n      olEvents.listen(\n        drawPoint,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POINT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawPoint,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawpoint', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.rectangle\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawrectangle', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawrectangle\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawRectangle = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n        geometryFunction: (coordinates, geometry) => {\n          if (!geometry) {\n            geometry = new olGeomPolygon(null);\n          }\n          const start = coordinates[0];\n          const end = coordinates[1];\n          geometry.setCoordinates([\n            [start, [start[0], end[1]], end, [end[0], start[1]], start]\n          ]);\n          return geometry;\n        },\n        maxPoints: 2\n      });\n\n      drawFeatureCtrl.registerInteraction(drawRectangle);\n      drawFeatureCtrl.drawRectangle = drawRectangle;\n\n      olEvents.listen(\n        drawRectangle,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.RECTANGLE),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawRectangle,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawrectangle', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.text\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawtext', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawtext\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawText = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawText);\n      drawFeatureCtrl.drawText = drawText;\n\n      olEvents.listen(\n        drawText,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.TEXT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawText,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawtext', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.area\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurearea', [\n  ngeoDrawController.module.name\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing polygon');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br>' +\n          'Double-click or click starting point to finish');\n\n      const measureArea = new ngeoInteractionMeasureArea($filter('ngeoUnitPrefix'), gettextCatalog, {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureArea);\n      drawFeatureCtrl.measureArea = measureArea;\n\n      olEvents.listen(\n        measureArea,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POLYGON),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureArea,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurearea', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.azimut\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport {fromCircle} from 'ol/geom/Polygon.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasureazimut', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing circle');\n      const contMsg = gettextCatalog.getString('Click to finish');\n\n      const measureAzimut = new ngeoInteractionMeasureAzimut(\n        $filter('ngeoUnitPrefix'), $filter('number'), {\n          style: new olStyleStyle(),\n          startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n          continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n          precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined,\n          decimals: $injector.has('ngeoMeasureDecimals') ? $injector.get('ngeoMeasureDecimals') : undefined\n        });\n\n      drawFeatureCtrl.registerInteraction(measureAzimut);\n      drawFeatureCtrl.measureAzimut = measureAzimut;\n\n      olEvents.listen(\n        measureAzimut,\n        'measureend',\n        /**\n         * @param {ngeox.MeasureEvent} event Event.\n         */\n        (event) => {\n          // In the case of azimut measure interaction, the feature's\n          // geometry is actually a collection (line + circle)\n          // For our purpose here, we only need the circle, which gets\n          // transformed into a polygon with 64 sides.\n          const geometry = /** @type {ol.geom.GeometryCollection} */\n                (event.detail.feature.getGeometry());\n          const circle = /** @type {ol.geom.Circle} */ (\n            geometry.getGeometries()[1]);\n          const polygon = fromCircle(circle, 64);\n          event.detail.feature = new olFeature(polygon);\n          const azimut = ngeoInteractionMeasureAzimut.getAzimut(\n            /** @type {ol.geom.LineString} */ (geometry.getGeometries()[0])\n          );\n          event.detail.feature.set('azimut', azimut);\n\n          drawFeatureCtrl.handleDrawEnd(ngeoGeometryType.CIRCLE, event);\n        },\n        drawFeatureCtrl\n      );\n\n      olEvents.listen(\n        measureAzimut,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasureazimut', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.length\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurelength', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing line');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br>' +\n          'Double-click or click last point to finish');\n\n      const measureLength = new ngeoInteractionMeasureLength($filter('ngeoUnitPrefix'), gettextCatalog, {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureLength);\n      drawFeatureCtrl.measureLength = measureLength;\n\n      olEvents.listen(\n        measureLength,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.LINE_STRING),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureLength,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurelength', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.component\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawPoint from 'ngeo/draw/point.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawRectangle from 'ngeo/draw/rectangle.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawText from 'ngeo/draw/text.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureArea from 'ngeo/measure/area.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureAzimut from 'ngeo/measure/azimut.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureLength from 'ngeo/measure/length.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawfeature', [\n  ngeoDrawController.module.name,\n  ngeoDrawPoint.name,\n  ngeoDrawRectangle.name,\n  ngeoDrawText.name,\n  ngeoMeasureArea.name,\n  ngeoMeasureAzimut.name,\n  ngeoMeasureLength.name,\n]);\n\n\n/**\n * Directive used to draw vector features on a map.\n * Example:\n *\n *     <ngeo-drawfeature\n *         ngeo-btn-group\n *         class=\"btn-group\"\n *         ngeo-drawfeature-active=\"ctrl.drawActive\"\n *         ngeo-drawfeature-map=\"::ctrl.map\">\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawpoint\n *         class=\"btn btn-default ngeo-drawfeature-point\"\n *         ng-class=\"{active: dfCtrl.drawPoint.active}\"\n *         ng-model=\"dfCtrl.drawPoint.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurelength\n *         class=\"btn btn-default ngeo-drawfeature-linestring\"\n *         ng-class=\"{active: dfCtrl.measureLength.active}\"\n *         ng-model=\"dfCtrl.measureLength.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurearea\n *         class=\"btn btn-default ngeo-drawfeature-polygon\"\n *         ng-class=\"{active: dfCtrl.measureArea.active}\"\n *         ng-model=\"dfCtrl.measureArea.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measureazimut\n *         class=\"btn btn-default ngeo-drawfeature-circle\"\n *         ng-class=\"{active: dfCtrl.measureAzimut.active}\"\n *         ng-model=\"dfCtrl.measureAzimut.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawrectangle\n *         class=\"btn btn-default ngeo-drawfeature-rectangle\"\n *         ng-class=\"{active: dfCtrl.drawRectangle.active}\"\n *         ng-model=\"dfCtrl.drawRectangle.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawtext\n *         class=\"btn btn-default ngeo-drawfeature-text\"\n *         ng-class=\"{active: dfCtrl.drawText.active}\"\n *         ng-model=\"dfCtrl.drawText.active\"></a>\n *     </ngeo-drawfeature>\n *\n * @htmlAttribute {boolean} ngeo-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {!ol.Collection=} ngeo-drawfeature-features The features\n *     collection in which to push the drawn features. If none is provided,\n *     then the `ngeoFeatures` collection is used.\n * @htmlAttribute {ol.Map} ngeo-drawfeature-map The map.\n * @htmlAttribute {boolean} ngeo-drawfeature-showmeasure. Checks the\n *      checkbox in order to display the feature measurements as a label.\n *      Default to false.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawfeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoDrawfeatureController as dfCtrl',\n    scope: true,\n    bindToController: {\n      'active': '=ngeoDrawfeatureActive',\n      'features': '=?ngeoDrawfeatureFeatures',\n      'map': '=ngeoDrawfeatureMap',\n      'showMeasure': '=?ngeoDrawfeatureShowmeasure'\n    }\n  };\n};\n\nexports.directive('ngeoDrawfeature', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.XSDAttributes\n */\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\n\n/**\n * An service used to fetch the XSD attribute definition of layers using their\n * id from a GeoMapFish server.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n * @ngInject\n */\nconst exports = function($http, gmfLayersUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = gmfLayersUrl;\n\n  /**\n   * @type {Object.<number, !angular.$q.Promise>}\n   * @private\n   */\n  this.promises_ = {};\n\n};\n\n\n/**\n * @param {number} id Layer id.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getAttributes = function(id) {\n  if (!this.promises_[id]) {\n    const url = `${this.baseUrl_}/${id}/md.xsd`;\n    this.promises_[id] = this.http_.get(url).then(\n      this.handleGetAttributes_.bind(this));\n  }\n  return this.promises_[id];\n};\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @export\n */\nexports.prototype.handleGetAttributes_ = function(resp) {\n  return new ngeoFormatXSDAttribute().read(resp.data);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfXSDAttributes', []);\nexports.module.service('gmfXSDAttributes', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.EditFeature\n */\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Service that provides methods to get, insert, update and delete vector\n * features with the use of a GeoMapFish Protocol as back-end.\n *\n * The GeoJSON format is used when obtaining or sending features.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n * @ngInject\n */\nconst exports = function($http, gmfLayersUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * Url to the GeoMapFish layers service. Required in applications that use:\n   * - the editfeature tools\n   * - the objectediting tools\n   *\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = gmfLayersUrl;\n\n};\n\n\n/**\n * Build a query to the MapFish protocol to fetch features from a list\n * of layer ids inside a specified extent.\n *\n * @param {Array.<number>} layerIds List of layer ids to get the features from.\n * @param {ol.Extent} extent The extent where to get the features from.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getFeaturesInExtent = function(layerIds, extent) {\n  const url = olUri.appendParams(\n    `${this.baseUrl_}/${layerIds.join(',')}`,\n    {\n      'bbox': extent.join(',')\n    }\n  );\n  return this.http_.get(url).then(this.handleGetFeatures_.bind(this));\n};\n\n\n/**\n * Build a query to the MapFish protocol to fetch features from a list\n * of layer ids and a list of comparison filters.\n *\n * This method is called in the ObjectEditing service, which is injected in\n * the permalink service, i.e. it's always called. Since we don't have to\n * define the url to the GMF Protocol (layers) a dummy promise returns an\n * empty array of features if the url is not defined.\n *\n * @param {!Array.<number>} layerIds List of layer ids to get the features from.\n * @param {!Array.<!gmfx.ComparisonFilter>} filters List of comparison filters\n * @return {angular.$q.Promise} Promise.\n */\nexports.prototype.getFeaturesWithComparisonFilters = function(\n  layerIds, filters\n) {\n  const properties = [];\n  const params = {};\n\n  for (const filter of filters) {\n    params[`${filter.property}__${filter.operator}`] = filter.value;\n    properties.push(filter.property);\n  }\n\n  params['queryable'] = properties.join(',');\n\n  const url = olUri.appendParams(`${this.baseUrl_}/${layerIds.join(',')}`, params);\n  return this.http_.get(url).then(this.handleGetFeatures_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Array.<ol.Feature>} List of features.\n * @private\n */\nexports.prototype.handleGetFeatures_ = function(resp) {\n  return new olFormatGeoJSON().readFeatures(resp.data);\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {Array.<ol.Feature>} features List of features to insert.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.insertFeatures = function(layerId, features) {\n  const url = `${this.baseUrl_}/${layerId}`;\n  const geoJSON = new olFormatGeoJSON().writeFeatures(features);\n  return this.http_.post(url, geoJSON, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {ol.Feature} feature The feature to update.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.updateFeature = function(layerId, feature) {\n  const url = `${this.baseUrl_}/${layerId.toString()}/${feature.getId()}`;\n  const geoJSON = new olFormatGeoJSON().writeFeature(feature);\n  return this.http_.put(url, geoJSON, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {ol.Feature} feature The feature to delete.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.deleteFeature = function(layerId, feature) {\n  const url = `${this.baseUrl_}/${layerId.toString()}/${feature.getId()}`;\n  return this.http_.delete(url, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfEditFeature', []);\nexports.module.service('gmfEditFeature', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.raster.RasterService\n */\n/**\n * The Raster service.\n * Uses the c2cgeoportal's raster to obtain different kinds of\n * information at a specific coordinate.\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfRasterUrl URL to a the c2cgeoportal raster service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfRaster\n */\nconst exports = function($http, gmfRasterUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = gmfRasterUrl;\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Object=} opt_params Optional parameters for the request.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getRaster = function(coordinate, opt_params) {\n\n  const params = opt_params || {};\n  params[exports.Param.X] = coordinate[0];\n  params[exports.Param.Y] = coordinate[1];\n\n  return this.$http_.get(this.url_, {\n    params\n  }).then(this.handleGetRaster_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Object.<string, number>} The response object.\n * @private\n */\nexports.prototype.handleGetRaster_ = function(resp) {\n  return resp.data;\n};\n\n\n/**\n * @enum {string}\n */\nexports.Param = {\n  X: 'lon',\n  Y: 'lat'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfRaster', []);\nexports.module.service('gmfRaster', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.somerc\n */\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\n\nproj4.Proj.projections.add(somerc);\nconst exports = 'somerc';\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.colorpickerComponent\n */\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoColorpicker', []);\n\n\nexports.value('ngeoColorpickerTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoColorpickerTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/misc/colorpickerComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/misc/colorpickerComponent', require('./colorpickerComponent.html'));\n});\n\n\n/**\n * Provides the \"ngeoColorpicker\" directive, a widget for\n * selecting a color among predefined ones.\n *\n * Example:\n *\n *     <div ngeo-colorpicker=\"ctrl.colors\">\n *     </div>\n *\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoColorpickerTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoColorpicker\n */\nexports.component_ = function(ngeoColorpickerTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: {\n      colors: '<?ngeoColorpicker',\n      color: '=?ngeoColorpickerColor'\n    },\n    controller: 'NgeoColorpickerController as ctrl',\n    bindToController: true,\n    templateUrl: ngeoColorpickerTemplateUrl\n  };\n};\n\nexports.directive('ngeoColorpicker',\n  exports.component_);\n\n/**\n * Fefault colors for the colorpicker\n * @type {Array.<Array.<string>>}\n * @const\n * @export\n */\nexports.DEFAULT_COLORS = [\n  ['#F4EB37', '#CDDC39', '#62AF44', '#009D57', '#0BA9CC', '#4186F0', '#3F5BA9', '#7C3592', '#A61B4A', '#DB4436', '#F8971B', '#F4B400', '#795046'],\n  ['#F9F7A6', '#E6EEA3', '#B7DBAB', '#7CCFA9', '#93D7E8', '#9FC3FF', '#A7B5D7', '#C6A4CF', '#D698AD', '#EE9C96', '#FAD199', '#FFDD5E', '#B29189'],\n  ['#ffffff', '#CCCCCC', '#777', '#000000']\n];\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.Controller_ = function($scope, $element, $attrs) {\n\n  /**\n   * The set of color\n   * @type {Array.<Array.<string>>}\n   * @export\n   */\n  this.colors = this.colors || exports.DEFAULT_COLORS;\n\n  /**\n   * The selected color\n   * @type {undefined|string}\n   * @export\n   */\n  this.color;\n};\n\n/**\n * @param {string} color The color to select.\n * @export\n */\nexports.Controller_.prototype.setColor = function(color) {\n  this.color = color;\n};\n\nexports.controller('NgeoColorpickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.AutoProjection\n */\nimport * as olProj from 'ol/proj.js';\nimport * as olExtent from 'ol/extent.js';\n\n/**\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoAutoProjection\n */\nconst exports = function() {};\n\n\n/**\n * Parse a string and return a coordinate if the result is valid. Given string\n * must be a two numbers separated by a space.\n * @param {string} str the string to parse.\n * @return {?ol.Coordinate} A coordinate or null if the format is not valid.\n * @export\n */\nexports.prototype.stringToCoordinates = function(str) {\n  const coords = str.match(/([\\d\\.']+)[\\s,]+([\\d\\.']+)/);\n  if (coords) {\n    const x = parseFloat(coords[1].replace('\\'', ''));\n    const y = parseFloat(coords[2].replace('\\'', ''));\n    if (!isNaN(x) && !isNaN(y)) {\n      return [x, y];\n    }\n  }\n  return null;\n};\n\n\n/**\n * Get an array of projections corresponding to their EPSG codes. Log an error\n *     for each code that are not defined in ol projections.\n * @param {Array.<string>} projectionsCodes EPSG codes (e.g. 'EPSG:3857',\n *     'epsg:3857' or '3857').\n * @return {Array.<ol.proj.Projection>} An array of projections.\n * @export\n */\nexports.prototype.getProjectionList = function(projectionsCodes) {\n  let code, proj;\n  const projections = [];\n  projectionsCodes.forEach((projection) => {\n    code = projection.toUpperCase();\n    if (code.substr(0, 5) != 'EPSG:') {\n      code = `EPSG:${code}`;\n    }\n    proj = olProj.get(code);\n    if (proj !== null) {\n      projections.push(proj);\n    } else {\n      console.error(`The projection ${code} is not defined in ol.proj.`);\n    }\n  });\n  return projections;\n};\n\n\n/**\n * It projects the point using the projection array and finds the first one for\n * which it falls inside of the viewProjection extent.\n * @param {ol.Coordinate} coordinates The point to test.\n * @param {ol.Extent} extent Limits in which coordinates can be valid.\n * @param {ol.proj.Projection} viewProjection Target projection the point.\n * @param {Array.<ol.proj.Projection>=} opt_projections optional array of\n *     projections. The point is tested in each projection, in the order of\n *     the array.\n * @return {?ol.Coordinate} A coordinates in the view's projection if it matches\n *     in one of the given projections, or null else.\n * @export\n */\nexports.prototype.tryProjections = function(coordinates,\n  extent, viewProjection, opt_projections) {\n  let position;\n  if (opt_projections === undefined) {\n    opt_projections = [viewProjection];\n  }\n  opt_projections.some((projection) => {\n    try {\n      position = olProj.transform(coordinates, projection, viewProjection);\n      if (olExtent.containsCoordinate(extent, position)) {\n        return true;\n      }\n    } catch (e) {\n      // Wrong coordinate leads to a transform error and ol throw an exception that we won't log.\n    }\n    position = null;\n  });\n  return position;\n};\n\n\n/**\n * Same as AutoProjection.tryProjections but if tryProjections return null,\n * re-call it with coordinates in reverse order.\n * @param {ol.Coordinate} coordinates The point to test.\n * @param {ol.Extent} extent Limits in which coordinates can be valid.\n * @param {ol.proj.Projection} viewProjection Target projection the point.\n * @param {Array.<ol.proj.Projection>=} opt_projections optional array of\n *     projections. The point is tested in each projection, in the order of\n *     the array.\n * @return {?ol.Coordinate} A coordinates in the view's projection if it matches\n *     in one of the given projections, or null else.\n * @export\n */\nexports.prototype.tryProjectionsWithInversion = function(\n  coordinates, extent, viewProjection, opt_projections) {\n  let position = this.tryProjections(coordinates, extent, viewProjection,\n    opt_projections);\n  if (position === null) {\n    position = this.tryProjections(coordinates.reverse(), extent,\n      viewProjection, opt_projections);\n  }\n  return position;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoAutoProjection', []);\nexports.module.service('ngeoAutoProjection', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.search.FulltextSearch\n */\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides the c2c-geoportal full-text search.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngInject\n * @export\n * @ngname gmfFulltextSearch\n */\nconst exports = function($injector, $http) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = /** @type {string} **/ ($injector.get('fulltextsearchUrl'));\n\n  const url = this.url_.split('?');\n  /**\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = url[0];\n\n  const queryString = (url.length == 2) ? `?${url[1]}` : '';\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  this.defaultParams_ = ngeoUtils.decodeQueryString(queryString);\n};\n\n/**\n * Perform a search query on the c2c-geoportal full-text search.\n * @param {string} query Search query.\n * @param {Object.<string, string>} params Additional parameters.\n * @returns {Promise} Request promise with data array.\n */\nexports.prototype.search = function(query, params) {\n  const queryParams = Object.assign({}, this.defaultParams_, params);\n\n  queryParams['query'] = query;\n\n  const url = `${this.baseUrl_}?${ngeoUtils.encodeQueryString(queryParams)}`;\n\n  return new Promise((resolve, reject) => {\n    this.$http_.get(url)\n      .then(resp => resolve(resp['data']))\n      .catch(reject);\n  });\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSearchFulltextSearch', []);\nexports.module.service('gmfSearchFulltextSearch', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.download.Csv\n */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\n/**\n * Service to generate and download a CSV file from tabular data.\n * Column headers are translated using {@link angularGettext.Catalog}.\n *\n * @param {angular.$injector} $injector Main injector.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoCsvDownload\n * @ngInject\n */\nconst exports = function($injector, gettextCatalog) {\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * File extension of the CSV file.\n   * @type {string}\n   * @private\n   */\n  this.encoding_ = $injector.has('ngeoCsvEncoding') ?\n    $injector.get('ngeoCsvEncoding') : 'utf-8';\n\n  /**\n   * File extension of the CSV file.\n   * @type {string}\n   * @private\n   */\n  this.extension_ = $injector.has('ngeoCsvExtension') ?\n    $injector.get('ngeoCsvExtension') : '.csv';\n\n  /**\n   * Whether to include the header in the exported file or not.\n   * @type {boolean}\n   * @private\n   */\n  this.includeHeader_ = $injector.has('ngeoCsvIncludeHeader') ?\n    $injector.get('ngeoCsvIncludeHeader') : true;\n\n  /**\n   * Quote character.\n   * @type {string}\n   * @private\n   */\n  this.quote_ = $injector.has('ngeoCsvQuote') ?\n    $injector.get('ngeoCsvQuote') : '\"';\n\n  /**\n   * Separator character.\n   * @type {string}\n   * @private\n   */\n  this.separator_ = $injector.has('ngeoCsvSeparator') ?\n    $injector.get('ngeoCsvSeparator') : ',';\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n};\n\n\n/**\n * Generate a CSV.\n *\n * @param {Array.<Object>} data Entries/objects to include in the CSV.\n * @param {Array.<ngeox.GridColumnDef>} columnDefs Column definitions.\n * @return {string} The CSV file as string.\n * @export\n */\nexports.prototype.generateCsv = function(data, columnDefs) {\n  if (data.length == 0 || columnDefs.length == 0) {\n    return '';\n  }\n\n  const translatedColumnHeaders = columnDefs.map(columnHeader => this.gettextCatalog_.getString(columnHeader.name));\n\n  const header = this.getRow_(translatedColumnHeaders);\n  const dataRows = data.map((values) => {\n    const rowValues = columnDefs.map(columnHeader => values[columnHeader.name]);\n    return this.getRow_(rowValues);\n  });\n\n  return this.includeHeader_ ? header + dataRows.join('') : dataRows.join('');\n};\n\n\n/**\n * @param {Array.<?>} values Values.\n * @return {string} CSV row.\n * @private\n */\nexports.prototype.getRow_ = function(values) {\n  const matchAllQuotesRegex = new RegExp(this.quote_, 'g');\n  const doubleQuote = this.quote_ + this.quote_;\n\n  const rowValues = values.map((value) => {\n    if (value !== undefined && value !== null) {\n      value = `${value}`;\n      // wrap each value into quotes and escape quotes with double quotes\n      return this.quote_ + value.replace(matchAllQuotesRegex, doubleQuote) + this.quote_;\n    } else {\n      return '';\n    }\n  });\n\n  return `${rowValues.join(this.separator_)}\\n`;\n};\n\n\n/**\n * Generate a CSV and start a download with the generated file.\n *\n * @param {Array.<Object>} data Entries/objects to include in the CSV.\n * @param {Array.<ngeox.GridColumnDef>} columnDefs Column definitions.\n * @param {string} fileName The CSV file name, without the extension.\n * @export\n */\nexports.prototype.startDownload = function(data, columnDefs, fileName) {\n  const fileContent = this.generateCsv(data, columnDefs);\n  this.download_(\n    fileContent, fileName, `text/csv;charset=${this.encoding_}`);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoCsvDownload', [\n  ngeoDownloadService.name\n]);\nexports.module.service('ngeoCsvDownload', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.resizemap\n */\nimport googAsserts from 'goog/asserts.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.shareComponent\n */\nimport gmfPermalinkShareService from 'gmf/permalink/ShareService.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\nconst exports = angular.module('gmfPermalinkShareComponent', [\n  gmfPermalinkShareService.module.name,\n  ngeoStatemanagerLocation.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/permalink/shareComponent', require('./shareComponent.html'));\n});\n\n\nexports.value('gmfPermalinkShareTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfPermalinkShareTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/permalink/shareComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfPermalinkShareTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfPermalinkShareTemplateUrl($attrs, gmfPermalinkShareTemplateUrl) {\n  return gmfPermalinkShareTemplateUrl($attrs);\n}\n\n\n/**\n * Component to display a shortened permalink and share it by email\n * Example:\n *\n *      <gmf-share\n *        gmf-share-email=\"true\">\n *      </gmf-share>\n *\n * @htmlAttribute {boolean} gmf-share-email Enable emailing capability.\n * @type {!angular.Component}\n */\nexports.component_ = {\n  bindings: {\n    'enableEmail': '<gmfShareEmail'\n  },\n  controller: 'GmfShareController',\n  templateUrl: gmfPermalinkShareTemplateUrl\n};\nexports.component('gmfShare', exports.component_);\n\n\nclass ShareComponentController {\n  /**\n   * The controller for the share component\n   * @param {angular.Scope} $scope Scope.\n   * @param {ngeo.statemanager.Location} ngeoLocation ngeo Location service.\n   * @param {gmf.permalink.ShareService} gmfShareService service for sharing map.\n   * @param {angular.$q} $q Angular q service\n   * @param {angular.Attributes} $attrs Attributes.\n   * @constructor\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfShareController\n   */\n  constructor($scope, ngeoLocation, gmfShareService, $q, $attrs) {\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @type {gmf.permalink.ShareService}\n     * @private\n     */\n    this.gmfShareService_ = gmfShareService;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.$q_ = $q;\n\n    /**\n     * @type {ngeo.statemanager.Location}\n     * @private\n     */\n    this.ngeoLocation_ = ngeoLocation;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.enableEmail;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.shortLink;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.email;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.message;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.permalink_ = this.ngeoLocation_.getUriString();\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.showLengthWarning = this.permalink_.length > gmfPermalinkShareService.URL_MAX_LEN ||\n    ngeoLocation.getPath() > gmfPermalinkShareService.URL_PATH_MAX_LEN;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.successfullySent = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.errorOnsend = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.errorOnGetShortUrl = false;\n\n    this.getShortUrl();\n  }\n\n  /**\n   * Get the short version of the permalink if the email is not provided\n   * @export\n   */\n  getShortUrl() {\n    this.$q_.when(this.gmfShareService_.getShortUrl(this.permalink_))\n      .then((resp) => {\n        this.shortLink = resp.data.short_url;\n        this.errorOnGetShortUrl = false;\n      }, (resp) => {\n        this.shortLink = this.permalink;\n        this.errorOnGetShortUrl = true;\n      });\n  }\n\n  /**\n   * Send the short version of the permalink if the email is provided\n   * @export\n   */\n  sendShortUrl() {\n    if (this.$scope_['gmfShareForm'].$valid) {\n      this.$q_.when(this.gmfShareService_.sendShortUrl(this.permalink_, this.email, this.message))\n        .then((resp) => {\n          this.successfullySent = true;\n        }, (resp) => {\n          this.errorOnsend = true;\n        });\n    }\n  }\n}\n\nexports.controller('GmfShareController', ShareComponentController);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.datasourceGroupTreeComponent\n */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeDatasourceGroupTreeComponent', [\n  ngeoDatasourceDataSources.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree/datasourceGroupTreeComponent', require('./datasourceGroupTreeComponent.html'));\n});\n\n\nexports.value('gmfLayertreeDatasourceGroupTreeTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfLayertreeDatasourceGroupTreeTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/layertree/datasourceGroupTreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfLayertreeDatasourceGroupTreeTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfLayertreeDatasourceGroupTreeTemplateUrl($attrs, gmfLayertreeDatasourceGroupTreeTemplateUrl) {\n  return gmfLayertreeDatasourceGroupTreeTemplateUrl($attrs);\n}\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources\n   *     service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfDatasourcegrouptreeController\n   */\n  constructor($scope, ngeoDataSources) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.datasource.Group}\n     * @export\n     */\n    this.group;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n  }\n\n  /**\n   * @return {string} Group uid.\n   * @export\n   */\n  getGroupUid() {\n    return `datasourcegrouptree-${olBase.getUid(this.group)}`;\n  }\n\n  /**\n   * Toggle visibility of the group itself, i.e. its visibility state.\n   * @export\n   */\n  toggle() {\n    this.group.toggleVisibilityState();\n  }\n\n  /**\n   * Toggle visible property of a data source.\n   * @param {ngeo.datasource.DataSource} dataSource Data source to toggle the\n   * visibility\n   * @export\n   */\n  toggleDataSource(dataSource) {\n    dataSource.visible = !dataSource.visible;\n  }\n\n  /**\n   * Remove all data sources from the `ngeo.datasource.DataSources` collection, which\n   * will automatically remove them from the Group. The group itself\n   * is going to be removed as well, destroying this component in the process.\n   * @export\n   */\n  remove() {\n    for (let i = this.group.dataSources.length - 1, ii = 0; i >= ii; i--) {\n      this.dataSources_.remove(this.group.dataSources[i]);\n    }\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove from\n   *     the `ngeo.DataSources` collection.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSources_.remove(dataSource);\n  }\n};\n\n\nexports.component('gmfDatasourcegrouptree', {\n  bindings: {\n    'group': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfLayertreeDatasourceGroupTreeTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach((feature) => {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    });\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach((feature) => {\n        this.featureHelper_.setStyle(feature);\n      });\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return decodeURI(pathElements[pathElements.length - 1]);\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoDrawFeatures.name,\n  ngeoLayertreeController.module.name,\n  ngeoMiscDebounce.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoStatemanagerModule.name,\n]);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoStatemanagerService.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.datepickerComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\n\nimport 'angular-ui-date';\nimport 'jquery-ui/themes/base/all.css';\n\n// FIXME: import the locales in the applications\nimport 'jquery-ui/ui/i18n/datepicker-fr.js';\nimport 'jquery-ui/ui/i18n/datepicker-en-GB.js';\nimport 'jquery-ui/ui/i18n/datepicker-de.js';\nimport 'jquery-ui/ui/i18n/datepicker-it.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDatePicker', [\n  ngeoMiscTime.module.name,\n  'ui.date',\n]);\n\n\nexports.value('ngeoDatePickerTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoDatePickerTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/misc/datepickerComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/misc/datepickerComponent', require('./datepickerComponent.html'));\n});\n\n\n/**\n * Provide a directive to select a single date or a range of dates. Requires\n * jQuery UI for the 'datepicker' widget.\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n * ngeoDatePickerTemplateUrl Template for the directive.\n * @param  {angular.$timeout} $timeout angular timeout service\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDatePicker\n */\nexports.component_ = function(ngeoDatePickerTemplateUrl,  $timeout) {\n  return {\n    scope: {\n      onDateSelected: '&',\n      time: '='\n    },\n    bindToController: true,\n    controller: 'ngeoDatePickerController as datepickerCtrl',\n    restrict: 'AE',\n    templateUrl: ngeoDatePickerTemplateUrl,\n    link: (scope, element, attrs, ctrl) => {\n      ctrl.init();\n\n      const lang =  ctrl.gettextCatalog_.getCurrentLanguage();\n      $['datepicker']['setDefaults']($['datepicker']['regional'][lang]);\n\n      ctrl.sdateOptions = angular.extend({}, ctrl.sdateOptions, {\n        'minDate': ctrl.initialMinDate,\n        'maxDate': ctrl.initialMaxDate,\n        'onClose': (selectedDate) => {\n          if (selectedDate) {\n            $(element[0]).find('input[name=\"edate\"]').datepicker('option', 'minDate', selectedDate);\n          }\n        }\n      });\n\n      ctrl.edateOptions = angular.extend({}, ctrl.edateOptions, {\n        'minDate': ctrl.initialMinDate,\n        'maxDate': ctrl.initialMaxDate,\n        'onClose': (selectedDate) => {\n          if (selectedDate) {\n            $(element[0]).find('input[name=\"sdate\"]').datepicker('option', 'maxDate', selectedDate);\n          }\n        }\n      });\n\n      angular.element('body').on('hidden.bs.popover', () => {\n        const dp = angular.element('#ui-datepicker-div');\n        if (dp && dp.css('display') === 'block') {\n          $(element[0]).find('input[name$=\"date\"]').datepicker('hide');\n        }\n      });\n\n      $timeout(() => {\n        angular.element('#ui-datepicker-div').on('mousedown', (e) => {\n          e.stopPropagation();\n        });\n      });\n    }\n  };\n};\n\nexports.directive('ngeoDatePicker', exports.component_);\n\n\n/**\n * DatePickerController - directive conttroller\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$injector} $injector injector.\n * @param {!ngeo.misc.Time} ngeoTime time service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDatePickerController\n */\nexports.Controller_ = function($scope, $injector,\n  ngeoTime, gettextCatalog) {\n\n  /**\n   * @type {!ngeo.misc.Time}\n   * @private\n   */\n  this.ngeoTime_ = ngeoTime;\n\n  /**\n   * @type {!ngeox.TimeProperty}\n   * @export\n   */\n  this.time;\n\n  /**\n   * The gettext catalog\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n\n  /**\n   * If the component is used to select a date range\n   * @type {boolean}\n   * @export\n   */\n  this.isModeRange;\n\n\n  /**\n   * Function called after date(s) changed/selected\n   * @type {function({time: {start: number, end: number}})}\n   * @export\n   */\n  this.onDateSelected;\n\n\n  /**\n   * Initial min date for the datepicker\n   * @type {!Date}\n   */\n  this.initialMinDate;\n\n  /**\n   * Initial max date for the datepickeronDateSelected\n   * @type {!Date}\n   */\n  this.initialMaxDate;\n\n  /**\n   * Datepicker options for the second datepicker (only for range mode)\n   * @type {Object}\n   * @export\n   */\n  this.edateOptions = {\n    'changeMonth': true,\n    'changeYear': true\n  };\n\n  /**\n   * Datepicker options for the first datepicker\n   * @type {Object}\n   * @export\n   */\n  this.sdateOptions = {\n    'changeMonth': true,\n    'changeYear': true\n  };\n\n  /**\n   * Start date model for the first date picker\n   * @type {Date}\n   * @export\n   */\n  this.sdate;\n\n  /**\n   * End date model for the second datepicker (only for range mode)\n   * @type {Date}\n   * @export\n   */\n  this.edate;\n\n  $scope.$watchGroup(['datepickerCtrl.sdate', 'datepickerCtrl.edate'], (newDates, oldDates) => {\n    const sDate = newDates[0];\n    const eDate = newDates[1];\n\n    if (angular.isDate(sDate) && (!this.isModeRange || angular.isDate(eDate))) {\n      this.onDateSelected({\n        time: {\n          start: this.ngeoTime_.getTime(sDate),\n          end: this.ngeoTime_.getTime(eDate)\n        }\n      });\n    }\n  });\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  //fetch the initial options for the component\n  const initialOptions_ = this.ngeoTime_.getOptions(this.time);\n  this.initialMinDate = this.ngeoTime_.createDate(initialOptions_.minDate);\n  this.initialMaxDate = this.ngeoTime_.createDate(initialOptions_.maxDate);\n  this.isModeRange = this.time.mode === 'range';\n\n  if (this.isModeRange) {\n    googAsserts.assertArray(initialOptions_.values);\n    this.sdate = this.ngeoTime_.createDate(initialOptions_.values[0]);\n    this.edate = this.ngeoTime_.createDate(initialOptions_.values[1]);\n  } else {\n    googAsserts.assertNumber(initialOptions_.values);\n    this.sdate = this.ngeoTime_.createDate(initialOptions_.values);\n  }\n};\n\nexports.controller('ngeoDatePickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.Attribute\n */\nconst exports = {};\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\n\n\n/**\n * Set the `type` and `geomType` properties of an attribute if the given\n * type is a geometry one.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type Type.\n * @return {boolean} Whether both attribute type and geomType were set.\n */\nexports.setGeometryType = function(attribute, type) {\n  const geomRegex =\n    /gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/;\n  if (geomRegex.exec(type)) {\n    attribute.type = ngeoFormatAttributeType.GEOMETRY;\n    if (/^gml:Point/.exec(type)) {\n      attribute.geomType = 'Point';\n    } else if (/^gml:LineString|^gml:Curve/.exec(type)) {\n      attribute.geomType = 'LineString';\n    } else if (/^gml:Polygon|^gml:Surface/.exec(type)) {\n      attribute.geomType = 'Polygon';\n    } else if (/^gml:MultiPoint/.exec(type)) {\n      attribute.geomType = 'MultiPoint';\n    } else if (/^gml:MultiLineString|^gml:MultiCurve/.exec(type)) {\n      attribute.geomType = 'MultiLineString';\n    } else if (/^gml:MultiPolygon|^gml:MultiSurface/.exec(type)) {\n      attribute.geomType = 'MultiPolygon';\n    }\n  }\n  return !!attribute.type && !!attribute.geomType;\n};\n\n\nexport default exports;\n","/**\n * @module gmf.editing.EnumerateAttribute\n */\nconst exports = class {\n\n  /**\n   * The EnumerateAttribute is responsible of fetching all possible of a given\n   * attribute of a given data source (gmf layer).\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfEnumerateAttribute\n   */\n  constructor($http, gmfLayersUrl) {\n\n    // === Injected services ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.baseUrl_ = gmfLayersUrl;\n\n    /**\n     * @type {Object.<string, !angular.$q.Promise>}\n     * @private\n     */\n    this.promises_ = {};\n  }\n\n  /**\n   * @param {gmf.datasource.OGC} dataSource Data source.\n   * @param {string} attribute Attribute name.\n   * @return {angular.$q.Promise} Promise.\n   */\n  getAttributeValues(dataSource, attribute) {\n    const promiseId = `${dataSource.id}_${attribute}`;\n    const name = dataSource.name;\n    if (!this.promises_[promiseId]) {\n      const url = `${this.baseUrl_}/${name}/values/${attribute}`;\n      this.promises_[promiseId] = this.http_.get(url).then(\n        this.handleGetAttributeValues_.bind(this));\n    }\n    return this.promises_[promiseId];\n  }\n\n  /**\n   * @param {angular.$http.Response} resp Ajax response.\n   * @return {Array.<gmfThemes.GmfLayerAttributeValue>} List of the attribute\n   *     values.\n   * @export\n   */\n  handleGetAttributeValues_(resp) {\n    const data = /** @type {gmfThemes.GmfLayerAttributeValuesResponse} */ (\n      resp.data);\n    return data.items;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfEnumerateAttribute', []);\nexports.module.service('gmfEnumerateAttribute', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.File\n */\n/**\n * @constructor\n * @param {angular.$q} $q .\n * @param {angular.$http} $http .\n * @param {gettext} gettext .\n * @ngInject\n */\nconst exports = function($q, $http, gettext) {\n  let fileReader, canceler;\n\n  // Test the validity of the file size\n  this.isValidFileSize = function(fileSize) {\n    return !(fileSize > 20000000); // 20 Mo\n  };\n\n  this.isWmsGetCap = function(fileContent) {\n    return /<(WMT_MS_Capabilities|WMS_Capabilities)/.test(fileContent);\n  };\n\n  this.isWmtsGetCap = function(fileContent) {\n    return /<Capabilities/.test(fileContent);\n  };\n\n  this.isKml = function(fileContent) {\n    return /<kml/.test(fileContent) && /<\\/kml>/.test(fileContent);\n  };\n\n  this.isGpx = function(fileContent) {\n    return /<gpx/.test(fileContent) && /<\\/gpx>/.test(fileContent);\n  };\n\n  /**\n   * @param {!Blob} file .\n   * @return {angular.$q.Promise<string>} .\n   */\n  this.read = function(file) {\n    const defer = $q.defer();\n    if (fileReader && fileReader.readyState === FileReader.LOADING) {\n      fileReader.abort();\n    }\n    fileReader = new FileReader();\n    fileReader.onload = function(evt) {\n      defer.resolve(evt.target.result);\n    };\n    fileReader.onerror = function(evt) {\n      const err = evt.target.error;\n      console.error('Reading file failed: ', err);\n      defer.reject({\n        'message': err.code == 20 ? gettext('Operation canceled') : gettext('Read failed'),\n        'reason': err.message\n      });\n    };\n    fileReader.onprogress = function(evt) {\n      defer.notify(evt);\n    };\n    // Read the file\n    fileReader.readAsText(file);\n    return defer.promise;\n  };\n\n  /**\n   * @param {string} url .\n   * @param {angular.$q.Deferred=} opt_cancelP .\n   * @return {angular.$q.Promise<Blob>} .\n   */\n  this.load = function(url, opt_cancelP) {\n\n    if (canceler) {\n      canceler.resolve();\n    }\n    canceler = opt_cancelP || $q.defer();\n\n    // Angularjs doesn't handle onprogress event\n    const defer = $q.defer();\n    $http.get(url, {\n      timeout: canceler.promise\n    }).then((response) => {\n      defer.resolve(response.data);\n    }, (reason) => {\n      console.error('Uploading file failed: ', reason);\n      defer.reject({\n        'message': gettext('Upload failed'),\n        'reason': reason\n      });\n    });\n    return defer.promise;\n  };\n};\n\nexports.module = angular.module('ngeoFile', []);\n\nexports.module.service('ngeoFile', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.controllers.AbstractDesktopController\n */\nimport gmfControllersAbstractAppController from 'gmf/controllers/AbstractAppController.js';\nimport gmfContextualdataModule from 'gmf/contextualdata/module.js';\nimport gmfDrawingModule from 'gmf/drawing/module.js';\nimport gmfEditingModule from 'gmf/editing/module.js';\nimport gmfPermalinkShareComponent from 'gmf/permalink/shareComponent.js';\nimport gmfPrintComponent from 'gmf/print/component.js';\nimport gmfProfileModule from 'gmf/profile/module.js';\nimport gmfRasterComponent from 'gmf/raster/component.js';\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoQueryBboxQueryComponent from 'ngeo/query/bboxQueryComponent.js';\nimport gmfImportModule from 'gmf/import/module.js';\nimport * as olBase from 'ol/index.js';\nimport * as olProj from 'ol/proj.js';\nimport * as olObj from 'ol/obj.js';\nimport olCollection from 'ol/Collection.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olControlScaleLine from 'ol/control/ScaleLine.js';\nimport olControlZoom from 'ol/control/Zoom.js';\nimport olControlRotate from 'ol/control/Rotate.js';\nimport * as olInteraction from 'ol/interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Desktop application abstract controller.\n *\n * This file includes `goog.require`'s for desktop components/directives used\n * by the HTML page and the controller to provide the configuration.\n *\n * @param {gmfx.Config} config A part of the application config.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @extends {gmf.controllers.AbstractAppController}\n * @ngdoc controller\n * @ngInject\n * @export\n */\nconst exports = function(config, $scope, $injector) {\n\n  const viewConfig = {\n    projection: olProj.get(`EPSG:${config.srid || 21781}`)\n  };\n  olObj.assign(viewConfig, config.mapViewConfig || {});\n\n  const arrow = gmfControllersAbstractAppController.prototype.getLocationIcon();\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    pixelRatio: config.mapPixelRatio,\n    layers: [],\n    view: new olView(viewConfig),\n    controls: config.mapControls || [\n      new olControlScaleLine({\n        target: document.getElementById('scaleline')\n      }),\n      new olControlZoom({\n        zoomInTipLabel: '',\n        zoomOutTipLabel: ''\n      }),\n      new olControlRotate({\n        label: arrow,\n        tipLabel: ''\n      })\n    ],\n    interactions: config.mapInteractions || olInteraction.defaults({\n      pinchRotate: true,\n      altShiftDragRotate: true\n    }),\n    loadTilesWhileAnimating: true,\n    loadTilesWhileInteracting: true\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.loginActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.toolsActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modalShareShown = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.editFeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.routingfeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.googleStreetViewActive = false;\n\n  /**\n   * @type {!ol.style.Style}\n   * @export\n   */\n  this.googleStreetViewStyle = new olStyleStyle({\n    text: new olStyleText({\n      fill: new olStyleFill({color: '#279B61'}),\n      font: 'normal 30px FontAwesome',\n      offsetY: -15,\n      stroke: new olStyleStroke({color: '#ffffff', width: 3}),\n      text: '\\uf041'\n    })\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.importDataSourceActive = false;\n\n  const body = $('body');\n\n  // initialize tooltips\n  body.tooltip({\n    container: 'body',\n    trigger: 'hover',\n    selector: '[data-toggle=\"tooltip\"]'\n  });\n\n  // deactivate tooltips on touch device\n  body.on('touchstart.detectTouch', () => {\n    body.tooltip('destroy');\n    body.off('touchstart.detectTouch');\n  });\n\n  /**\n   * Collection of features for the draw interaction\n   * @type {ol.Collection.<ol.Feature>}\n   */\n  const ngeoFeatures = $injector.get('ngeoFeatures');\n\n  /**\n   * @type {ngeo.map.FeatureOverlay}\n   * @export\n   */\n  this.drawFeatureLayer = $injector.get('ngeoFeatureOverlayMgr')\n    .getFeatureOverlay();\n  this.drawFeatureLayer.setFeatures(ngeoFeatures);\n\n  const ngeoFeatureHelper = $injector.get('ngeoFeatureHelper');\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.editFeatureVectorLayer = new olLayerVector({\n    source: new olSourceVector({\n      wrapX: false,\n      features: new olCollection()\n    }),\n    style: (feature, resolution) => ngeoFeatureHelper.createEditingStyles(feature)\n    // style: ngeoFeatureHelper.createEditingStyles.bind(ngeoFeatureHelper)\n  });\n  this.editFeatureVectorLayer.setMap(this.map);\n\n  /**\n   * The ngeo ToolActivate manager service.\n   * @type {ngeo.misc.ToolActivateMgr}\n   */\n  const ngeoToolActivateMgr = $injector.get('ngeoToolActivateMgr');\n\n  const editFeatureActivate = new ngeoMiscToolActivate(this, 'editFeatureActive');\n  ngeoToolActivateMgr.registerTool('mapTools', editFeatureActivate, false);\n\n  const googleStreetViewActivate = new ngeoMiscToolActivate(\n    this,\n    'googleStreetViewActive'\n  );\n  ngeoToolActivateMgr.registerTool('mapTools', googleStreetViewActivate, false);\n\n  /**\n   * @type {ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.scaleSelectorOptions = {\n    dropup: true\n  };\n\n  /**\n   * @type {ol.geom.LineString}\n   * @export\n   */\n  this.profileLine = null;\n\n  gmfControllersAbstractAppController.call(this, config, $scope, $injector);\n\n  // Close the login panel on successful login.\n  $scope.$watch(() => this.gmfUser.username, (newVal) => {\n    if (newVal !== null && this.loginActive) {\n      this.loginActive = false;\n    }\n  });\n};\n\nolBase.inherits(exports, gmfControllersAbstractAppController);\n\nexports.module = angular.module('GmfAbstractDesktopControllerModule', [\n  gmfControllersAbstractAppController.module.name,\n  gmfContextualdataModule.name,\n  gmfDrawingModule.name,\n  gmfEditingModule.name,\n  gmfPermalinkShareComponent.name,\n  gmfPrintComponent.name,\n  gmfProfileModule.name,\n  gmfRasterComponent.name,\n  ngeoDrawFeatures.name,\n  ngeoMapResizemap.name,\n  ngeoQueryBboxQueryComponent.name,\n  gmfImportModule.name,\n]);\n\nexports.module.controller(\n  'AbstractDesktopController',\n  exports);\n\nexports.module.value('isDesktop', true);\n\nexports.module.value('ngeoQueryOptions', {\n  'limit': 20\n});\n\nexports.module.value('ngeoMeasurePrecision', 3);\nexports.module.value('ngeoMeasureDecimals', 0);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.editFeatureSelectorComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport gmfEditingEditFeatureComponent from 'gmf/editing/editFeatureComponent.js';\n\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfEditingFeatureSelectorComponent', [\n  gmfEditingEditFeatureComponent.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/editing/editFeatureSelectorComponent', require('./editFeatureSelectorComponent.html'));\n});\n\n\n/**\n * Directive that uses the GMF Theme service to collect the editable layers\n * and create a drop-down list out of them. When the user selects one of the\n * layer from the list, a `gmf-editfeature` directive is created and shown,\n * which allows the user to edit that layer.\n *\n * Example:\n *\n *     <gmf-editfeatureselector\n *         gmf-editfeatureselector-active=\"ctrl.editFeatureSelectorActive\"\n *         gmf-editfeatureselector-map=\"::ctrl.map\"\n *         gmf-editfeatureselector-tolerance=\"::ctrl.tolerance\"\n *         gmf-editfeatureselector-vector=\"::ctrl.vectorLayer\">\n *     </gmf-editfeatureselector>\n *\n * @htmlAttribute {boolean} gmf-editfeatureselector-active Whether the\n *     directive is active or not.\n * @htmlAttribute {ol.Map} gmf-editfeatureselector-map The map.\n * @htmlAttribute {number|undefined} gmf-editfeatureselector-tolerance The\n *     buffer in pixels to use when making queries to get the features.\n * @htmlAttribute {ol.layer.Vector} gmf-editfeatureselector-vector The vector\n *     layer where the selected or created features are drawn.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfEditfeatureselector\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfEditfeatureselectorController as efsCtrl',\n    scope: {\n      'active': '=gmfEditfeatureselectorActive',\n      'map': '<gmfEditfeatureselectorMap',\n      'tolerance': '<?gmfEditfeatureselectorTolerance',\n      'vectorLayer': '<gmfEditfeatureselectorVector'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/editing/editFeatureSelectorComponent'\n  };\n};\n\n\nexports.directive('gmfEditfeatureselector', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfEditfeatureselectorController\n */\nexports.Controller_ = function($scope, $timeout, gmfThemes, gmfTreeManager) {\n\n  // === Directive options ===\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = this.active === true;\n\n  $scope.$watch(\n    () => this.active,\n    this.handleActiveChange_.bind(this)\n  );\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.tolerance;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.vectorLayer;\n\n\n  // === Injected services ===\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @param {Array.<ngeo.layertree.Controller>} value First level controllers.\n   */\n  const updateEditableTreeCtrls = function(value) {\n    // Timeout required, because the collection event is fired before the\n    // leaf nodes are created and they are the ones we're looking for here.\n    this.$timeout_(() => {\n      if (value) {\n        const editables = this.editableTreeCtrls;\n\n        editables.length = 0;\n        this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.editable) {\n            googAsserts.assert(treeCtrl.children.length === 0);\n            editables.push(treeCtrl);\n          }\n        });\n      }\n    }, 0);\n  };\n\n  /**\n   * @type {function()}\n   * @private\n   */\n  this.treeCtrlsWatcherUnregister_ = $scope.$watchCollection(() => {\n    if (gmfTreeManager.rootCtrl) {\n      return gmfTreeManager.rootCtrl.children;\n    }\n  }, updateEditableTreeCtrls.bind(this));\n\n\n  // === Other inner properties ===\n\n  /**\n   * Flag shared with the `gmf-editfeature` directive used to determine if it\n   * has unsaved changes or not.\n   * @type {boolean}\n   * @export\n   */\n  this.dirty = false;\n\n  /**\n   * List of editable Layertree controllers.\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.editableTreeCtrls = [];\n\n  /**\n   * The currently selected Layertree controller.\n   * @type {?ngeo.layertree.Controller}\n   * @export\n   */\n  this.selectedEditableTreeCtrl = null;\n\n  $scope.$watch(\n    () => this.selectedEditableTreeCtrl,\n    (newValue, oldValue) => {\n      this.dirty = false;\n      this.state = gmfEditingEditFeatureComponent.State.IDLE;\n    }\n  );\n\n  /**\n   * The state of this directive shared with the `gmf-editfeature` directive.\n   * This property allows the proper management of the \"stop editing\" button.\n   * When clicked, the according state is set and the `gmf-editfeature`\n   * directive checks if it has unsaved changes and allow this directive to\n   * continue the action that was made or not.\n   * @type {string}\n   * @export\n   */\n  this.state = gmfEditingEditFeatureComponent.State.IDLE;\n\n  $scope.$watch(\n    () => this.state,\n    (newValue, oldValue) => {\n      if (newValue === gmfEditingEditFeatureComponent.State.STOP_EDITING_EXECUTE ||\n          newValue === gmfEditingEditFeatureComponent.State.DEACTIVATE_EXECUTE) {\n        this.selectedEditableTreeCtrl = null;\n      }\n      if (newValue === gmfEditingEditFeatureComponent.State.DEACTIVATE_EXECUTE) {\n        this.active = false;\n      }\n    }\n  );\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n\n};\n\n\n/**\n * Called when the 'stop editing' button is clicked. Set the 'state'\n * variable to 'pending' allow the editfeature directive to check if it can\n * stop or if it requires confirmation due to unsaved modifications.\n * @export\n */\nexports.Controller_.prototype.stopEditing = function() {\n  this.state = gmfEditingEditFeatureComponent.State.STOP_EDITING_PENDING;\n};\n\n\n/**\n * Called when the active property of the this directive changes. Manage\n * the activation/deactivation accordingly.\n * @param {boolean} active Whether the directive is active or not.\n * @private\n */\nexports.Controller_.prototype.handleActiveChange_ = function(active) {\n  if (!active) {\n    if (!this.dirty) {\n      this.stopEditing();\n    } else {\n      // There are unsaved modifications. Prevent the deactivation and\n      // set the state accordingly for the `gmf-editfeature` directive\n      // to manage the unsaved modifications.\n      // The changes are made inside a $timeout to be taken into account\n      // in the next digest cycle.\n      this.$timeout_(() => {\n        this.active = true;\n        this.stopEditing();\n      });\n    }\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.treeCtrlsWatcherUnregister_();\n};\n\n\nexports.controller('GmfEditfeatureselectorController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.module\n */\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\nimport gmfEditingEditFeatureComponent from 'gmf/editing/editFeatureComponent.js';\nimport gmfEditingEditFeatureSelectorComponent from 'gmf/editing/editFeatureSelectorComponent.js';\nimport gmfEditingEnumerateAttribute from 'gmf/editing/EnumerateAttribute.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport gmfEditingXSDAttributes from 'gmf/editing/XSDAttributes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfEditingModule', [\n  gmfEditingEditFeature.module.name,\n  gmfEditingEditFeatureComponent.name,\n  gmfEditingEditFeatureSelectorComponent.name,\n  gmfEditingEnumerateAttribute.module.name,\n  gmfEditingSnapping.module.name,\n  gmfEditingXSDAttributes.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.contextualdata.component\n */\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\nimport googAsserts from 'goog/asserts.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olProj from 'ol/proj.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfContextualdata', [\n  gmfRasterRasterService.module.name,\n]);\n\n\n/**\n * Provide a directive responsible of displaying contextual data after a right\n * click on the map.\n *\n * This directive doesn't require being rendered in a visible DOM element.\n * It's usually added to the element where the map directive is also added.\n *\n * Example:\n *\n *     <gmf-map gmf-map-map=\"mainCtrl.map\"\n *         gmf-contextualdata\n *         gmf-contextualdata-map=\"::mainCtrl.map\"\n *         gmf-contextualdata-projections=\"::[21781,4326]\">\n *\n * The content of the popover is managed in a partial that must be defined\n * using the `gmfContextualdatacontentTemplateUrl` value. See\n * {@link gmf.contextualdatacontentDirective} for more details.\n *\n * One can also provide a `gmf-contextualdata-callback` attribute in order to\n * do some additional computing on the coordinate or the values received for\n * the raster service. The callback function is called with the coordinate of\n * the clicked point and the response data from the server. It is intended to\n * return an object of additional properties to add to the scope.\n *\n * See the [../examples/contribs/gmf/contextualdata.html](../examples/contribs/gmf/contextualdata.html) example for a usage sample.\n *\n * @htmlAttribute {ol.Map} map The map.\n * @htmlAttribute {Array<number>} projections The list of projections.\n * @htmlAttribute {Function} callback A function called after server\n *    (raster) data is received in case some additional computing is required.\n *    Optional.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfContextualdata\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    scope: false,\n    controller: 'GmfContextualdataController as cdCtrl',\n    bindToController: {\n      'map': '<gmfContextualdataMap',\n      'projections': '<gmfContextualdataProjections',\n      'callback': '<gmfContextualdataCallback'\n    },\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {gmf.contextualdata.component.Controller_} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      controller.init();\n    }\n  };\n};\n\nexports.directive('gmfContextualdata',\n  exports.directive_);\n\n\n/**\n *\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {!angular.Scope} $scope Scope.\n * @param {gmf.raster.RasterService} gmfRaster Gmf Raster service\n *\n * @constructor\n * @private\n * @ngdoc controller\n * @ngInject\n */\nexports.Controller_ = function($compile, $timeout, $scope, gmfRaster) {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {Array<number>}\n   * @export\n   */\n  this.projections;\n\n  /**\n   * @type {function(ol.Coordinate, Object):Object}\n   * @export\n   */\n  this.callback;\n\n  /**\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.overlay_;\n\n  /**\n   * @type {angular.$compile}\n   * @private\n   */\n  this.$compile_ = $compile;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  angular.element('body').on('mousedown', this.hidePopover.bind(this));\n};\n\n/**\n *\n */\nexports.Controller_.prototype.init = function() {\n  this.preparePopover_();\n\n  const mapDiv = this.map.getTargetElement();\n  googAsserts.assertElement(mapDiv);\n\n  olEvents.listen(mapDiv, 'contextmenu',\n    this.handleMapContextMenu_, this);\n};\n\n/**\n * @param {!Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(event) {\n  this.$scope_.$apply(() => {\n    const pixel = this.map.getEventPixel(event);\n    const coordinate = this.map.getCoordinateFromPixel(pixel);\n    this.setContent_(coordinate);\n    event.preventDefault();\n    this.hidePopover();\n    this.showPopover();\n\n    // Use timeout to let the popover content to be rendered before displaying it.\n    this.timeout_(() => {\n      this.overlay_.setPosition(coordinate);\n    });\n  });\n};\n\nexports.Controller_.prototype.setContent_ = function(coordinate) {\n  const scope = this.$scope_.$new(true);\n  this.$compile_(this.content_)(scope);\n\n  const mapProjection = this.map.getView().getProjection().getCode();\n  this.projections.forEach((proj) => {\n    const coord = olProj.transform(coordinate, mapProjection, `EPSG:${proj}`);\n    scope[`coord_${proj}`] = coord;\n    scope[`coord_${proj}_eastern`] = coord[0];\n    scope[`coord_${proj}_northern`] = coord[1];\n  });\n\n  const getRasterSuccess = function(resp) {\n    olObj.assign(scope, resp);\n    if (this.callback) {\n      olObj.assign(scope, this.callback.call(this, coordinate, resp));\n    }\n  }.bind(this);\n  const getRasterError = function(resp) {\n    console.error('Error on getting the raster.');\n  };\n  this.gmfRaster_.getRaster(coordinate).then(\n    getRasterSuccess,\n    getRasterError\n  );\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.preparePopover_ = function() {\n\n  const container = document.createElement('DIV');\n  container.classList.add('popover');\n  container.classList.add('bottom');\n  container.classList.add('gmf-contextualdata');\n  angular.element(container).css('position', 'relative');\n  const arrow = document.createElement('DIV');\n  arrow.classList.add('arrow');\n  container.appendChild(arrow);\n  this.content_ = document.createElement('DIV');\n  this.content_.setAttribute('gmf-contextualdatacontent', '');\n  this.content_.classList.add('popover-content');\n  container.appendChild(this.content_);\n\n  this.overlay_ = new olOverlay({\n    element: container,\n    stopEvent: true,\n    autoPan: true,\n    autoPanAnimation: /** @type {olx.animation.PanOptions} */ ({\n      duration: 250\n    }),\n    positioning: 'top-center'\n  });\n  this.map.addOverlay(this.overlay_);\n};\n\nexports.Controller_.prototype.showPopover = function() {\n  const element = /** @type {Object} */ (this.overlay_.getElement());\n  angular.element(element).css('display', 'block');\n};\n\nexports.Controller_.prototype.hidePopover = function() {\n  const element = /** @type {Object} */ (this.overlay_.getElement());\n  angular.element(element).css('display', 'none');\n};\n\nexports.controller('GmfContextualdataController', exports.Controller_);\n\n\n/**\n * Provide a directive responsible of formatting the content of the popover for\n * the contextual data directive.\n *\n * Its main purpose is to configure the template to be used.\n * Integrators should ensure that the template values match the configuration\n * of the contextual data directive.\n *\n * For each projection the following expressions can be used (replace xxxx by\n * the relevant projection code:\n *  - {{coord_xxxx}},\n *  - {{coord_xxxx_eastern}},\n *  - {{coord_xxxx_northern}}\n *\n * Tip: one should use the `ngeoNumberCoordinates` and `ngeoDMSCoordinates`.\n *\n * The raster service is requested to query additional information. The\n * integrators can also use `{{xxxx}}` where `xxxx` will be replaced by\n * the name of the raster layers (for example 'srtm').\n *\n * See the [../examples/contribs/gmf/contextualdata.html](../examples/contribs/gmf/contextualdata.html) example for a usage sample.\n *\n * @param {string} gmfContextualdatacontentTemplateUrl Url to template.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfContextualdatacontent\n */\nexports.contentDirective_ = function(\n  gmfContextualdatacontentTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: gmfContextualdatacontentTemplateUrl\n  };\n};\n\nexports.directive('gmfContextualdatacontent', exports.contentDirective_);\n\n\nexport default exports;\n","/**\n * @module gmf.contextualdata.module\n */\nimport gmfContextualdataComponent from 'gmf/contextualdata/component.js';\n\nimport './contextualdata.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfContextualdataModule', [\n  gmfContextualdataComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.print.VectorEncoder\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport * as olMath from 'ol/math.js';\nimport olStyleIcon from 'ol/style/Icon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport * as olColor from 'ol/color.js';\n\n/**\n * @constructor\n */\nconst exports = function() {\n  /**\n   * @type {ol.format.GeoJSON}\n   */\n  this.geojsonFormat = new olFormatGeoJSON();\n};\n\n\n/**\n * @enum {string}\n */\nexports.PrintStyleType = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.print.VectorEncoder.PrintStyleType>}\n * @private\n */\nexports.PrintStyleTypes_ = {\n  'LineString': exports.PrintStyleType.LINE_STRING,\n  'Point': exports.PrintStyleType.POINT,\n  'Polygon': exports.PrintStyleType.POLYGON,\n  'MultiLineString': exports.PrintStyleType.LINE_STRING,\n  'MultiPoint': exports.PrintStyleType.POINT,\n  'MultiPolygon': exports.PrintStyleType.POLYGON\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Vector} layer Layer.\n * @param {number} resolution Resolution.\n */\nexports.prototype.encodeVectorLayer = function(arr, layer, resolution) {\n  const source = layer.getSource();\n  googAsserts.assertInstanceof(source, olSourceVector);\n\n  const features = source.getFeatures();\n\n  const /** @type {Array.<GeoJSONFeature>} */ geojsonFeatures = [];\n  const mapfishStyleObject = /** @type {MapFishPrintVectorStyle} */ ({\n    version: 2\n  });\n\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    const originalFeature = features[i];\n\n    let styleData = null;\n    let styleFunction = originalFeature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      styleData = styleFunction.call(originalFeature, resolution);\n    } else {\n      styleFunction = layer.getStyleFunction();\n      if (styleFunction !== undefined) {\n        styleData = styleFunction.call(layer, originalFeature, resolution);\n      }\n    }\n    const origGeojsonFeature = this.geojsonFormat.writeFeatureObject(originalFeature);\n    /**\n     * @type {Array<ol.style.Style>}\n     */\n    const styles = (styleData !== null && !Array.isArray(styleData)) ? [styleData] : styleData;\n    googAsserts.assert(Array.isArray(styles));\n\n    if (styles !== null && styles.length > 0) {\n      let isOriginalFeatureAdded = false;\n      for (let j = 0, jj = styles.length; j < jj; ++j) {\n        const style = styles[j];\n        let geometry = style.getGeometry();\n        let geojsonFeature;\n        if (!geometry) {\n          geojsonFeature = origGeojsonFeature;\n          geometry = originalFeature.getGeometry();\n          // no need to encode features with no geometry\n          if (!geometry) {\n            continue;\n          }\n          if (!isOriginalFeatureAdded) {\n            geojsonFeatures.push(geojsonFeature);\n            isOriginalFeatureAdded = true;\n          }\n        } else {\n          let styledFeature = originalFeature.clone();\n          styledFeature.setGeometry(geometry);\n          geojsonFeature = this.geojsonFormat.writeFeatureObject(styledFeature);\n          geometry = styledFeature.getGeometry();\n          styledFeature = null;\n          geojsonFeatures.push(geojsonFeature);\n        }\n\n        const geometryType = geometry.getType();\n        if (geojsonFeature.properties === null) {\n          geojsonFeature.properties = {};\n        }\n\n        const featureStyleProp = `_ngeo_style_${j}`;\n        const styleId = `${olBase.getUid(style).toString()}-${geometryType}`;\n        this.encodeVectorStyle(mapfishStyleObject, geometryType, style, styleId, featureStyleProp);\n        geojsonFeature.properties[featureStyleProp] = styleId;\n      }\n    }\n  }\n\n  // MapFish Print fails if there are no style rules, even if there are no\n  // features either. To work around this we just ignore the layer if the\n  // array of GeoJSON features is empty.\n  // See https://github.com/mapfish/mapfish-print/issues/279\n\n  if (geojsonFeatures.length > 0) {\n    const geojsonFeatureCollection = /** @type {GeoJSONFeatureCollection} */ ({\n      type: 'FeatureCollection',\n      features: geojsonFeatures\n    });\n    const object = /** @type {MapFishPrintVectorLayer} */ ({\n      geoJson: geojsonFeatureCollection,\n      opacity: layer.getOpacity(),\n      style: mapfishStyleObject,\n      type: 'geojson'\n    });\n    arr.push(object);\n  }\n};\n\n\n/**\n * @param {MapFishPrintVectorStyle} object MapFish style object.\n * @param {ol.geom.GeometryType} geometryType Type of the GeoJSON geometry\n * @param {ol.style.Style} style Style.\n * @param {string} styleId Style id.\n * @param {string} featureStyleProp Feature style property name.\n */\nexports.prototype.encodeVectorStyle = function(object, geometryType, style, styleId, featureStyleProp) {\n  if (!(geometryType in exports.PrintStyleTypes_)) {\n    // unsupported geometry type\n    return;\n  }\n  const styleType = exports.PrintStyleTypes_[geometryType];\n  const key = `[${featureStyleProp} = '${styleId}']`;\n  if (key in object) {\n    // do nothing if we already have a style object for this CQL rule\n    return;\n  }\n  const styleObject = /** @type {MapFishPrintSymbolizers} */ ({\n    symbolizers: []\n  });\n  object[key] = styleObject;\n  const fillStyle = style.getFill();\n  const imageStyle = style.getImage();\n  const strokeStyle = style.getStroke();\n  const textStyle = style.getText();\n  if (styleType === exports.PrintStyleType.POLYGON) {\n    if (fillStyle !== null) {\n      this.encodeVectorStylePolygon(\n        styleObject.symbolizers, fillStyle, strokeStyle);\n    }\n  } else if (styleType === exports.PrintStyleType.LINE_STRING) {\n    if (strokeStyle !== null) {\n      this.encodeVectorStyleLine(styleObject.symbolizers, strokeStyle);\n    }\n  } else if (styleType === exports.PrintStyleType.POINT) {\n    if (imageStyle !== null) {\n      this.encodeVectorStylePoint(styleObject.symbolizers, imageStyle);\n    }\n  }\n  if (textStyle !== null) {\n    this.encodeTextStyle(styleObject.symbolizers, textStyle);\n  }\n};\n\n\n/**\n * @param {MapFishPrintSymbolizerPoint|MapFishPrintSymbolizerPolygon} symbolizer MapFish Print symbolizer.\n * @param {!ol.style.Fill} fillStyle Fill style.\n * @protected\n */\nexports.prototype.encodeVectorStyleFill = function(symbolizer, fillStyle) {\n  let fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(typeof fillColor === 'string' || Array.isArray(fillColor));\n    fillColor = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    symbolizer.fillColor = ngeoUtils.rgbArrayToHex(fillColor);\n    symbolizer.fillOpacity = fillColor[3];\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStyleLine = function(symbolizers, strokeStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerLine} */ ({\n    type: 'line'\n  });\n  this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n  symbolizers.push(symbolizer);\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Image} imageStyle Image style.\n * @protected\n */\nexports.prototype.encodeVectorStylePoint = function(symbolizers, imageStyle) {\n  let symbolizer;\n  if (imageStyle instanceof olStyleCircle) {\n    symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n      type: 'point'\n    });\n    symbolizer.pointRadius = imageStyle.getRadius();\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      this.encodeVectorStyleFill(symbolizer, fillStyle);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n    }\n  } else if (imageStyle instanceof olStyleIcon) {\n    const src = imageStyle.getSrc();\n    if (src !== undefined) {\n      symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n        type: 'point',\n        externalGraphic: src\n      });\n      const opacity = imageStyle.getOpacity();\n      if (opacity !== null) {\n        symbolizer.graphicOpacity = opacity;\n      }\n      const size = imageStyle.getSize();\n      if (size !== null) {\n        let scale = imageStyle.getScale();\n        if (isNaN(scale)) {\n          scale = 1;\n        }\n        symbolizer.graphicWidth = size[0] * scale;\n        symbolizer.graphicHeight = size[1] * scale;\n      }\n      let rotation = imageStyle.getRotation();\n      if (isNaN(rotation)) {\n        rotation = 0;\n      }\n      symbolizer.rotation = olMath.toDegrees(rotation);\n    }\n  } else if (imageStyle instanceof olStyleRegularShape) {\n    /**\n     * Mapfish Print does not support image defined with ol.style.RegularShape.\n     * As a workaround, I try to map the image on a well-known image name.\n     */\n    const points = /** @type {ol.style.RegularShape} */ (imageStyle).getPoints();\n    if (points !== null) {\n      symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n        type: 'point'\n      });\n      if (points === 4) {\n        symbolizer.graphicName = 'square';\n      } else if (points === 3) {\n        symbolizer.graphicName = 'triangle';\n      } else if (points === 5) {\n        symbolizer.graphicName = 'star';\n      } else if (points === 8) {\n        symbolizer.graphicName = 'cross';\n      }\n      const sizeShape = imageStyle.getSize();\n      if (sizeShape !== null) {\n        symbolizer.graphicWidth = sizeShape[0];\n        symbolizer.graphicHeight = sizeShape[1];\n      }\n      const rotationShape = imageStyle.getRotation();\n      if (!isNaN(rotationShape) && rotationShape !== 0) {\n        symbolizer.rotation = olMath.toDegrees(rotationShape);\n      }\n      const opacityShape = imageStyle.getOpacity();\n      if (opacityShape !== null) {\n        symbolizer.graphicOpacity = opacityShape;\n      }\n      const strokeShape = imageStyle.getStroke();\n      if (strokeShape !== null) {\n        this.encodeVectorStyleStroke(symbolizer, strokeShape);\n      }\n      const fillShape = imageStyle.getFill();\n      if (fillShape !== null) {\n        this.encodeVectorStyleFill(symbolizer, fillShape);\n      }\n    }\n  }\n  if (symbolizer !== undefined) {\n    symbolizers.push(symbolizer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStylePolygon = function(symbolizers, fillStyle, strokeStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerPolygon} */ ({\n    type: 'polygon'\n  });\n  this.encodeVectorStyleFill(symbolizer, fillStyle);\n  if (strokeStyle !== null) {\n    this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n  }\n  symbolizers.push(symbolizer);\n};\n\n\n/**\n * @param {MapFishPrintSymbolizerPoint|MapFishPrintSymbolizerLine|MapFishPrintSymbolizerPolygon}\n *      symbolizer MapFish Print symbolizer.\n * @param {!ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStyleStroke = function(symbolizer, strokeStyle) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(typeof strokeColor === 'string' || Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    symbolizer.strokeColor = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    symbolizer.strokeOpacity = strokeColorRgba[3];\n  }\n  const strokeDashstyle = strokeStyle.getLineDash();\n  if (strokeDashstyle !== null) {\n    symbolizer.strokeDashstyle = strokeDashstyle.join(' ');\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    symbolizer.strokeWidth = strokeWidth;\n  }\n  const strokeLineCap = strokeStyle.getLineCap();\n  if (strokeLineCap) {\n    symbolizer.strokeLinecap = strokeStyle.getLineCap();\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizerText>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Text} textStyle Text style.\n * @protected\n */\nexports.prototype.encodeTextStyle = function(symbolizers, textStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerText} */ ({\n    type: 'Text'\n  });\n  const label = textStyle.getText();\n  if (label !== undefined) {\n    symbolizer.label = label;\n    let xAlign = 'c';\n    let yAlign = 'm';\n\n    const olTextAlign = textStyle.getTextAlign();\n    // 'left', 'right', 'center', 'end' or 'start'.\n    if (olTextAlign === 'left' || olTextAlign === 'start') {\n      xAlign = 'l';\n    } else if (olTextAlign === 'right' || olTextAlign === 'end') {\n      xAlign = 'r';\n    }\n\n    const olTextBaseline = textStyle.getTextBaseline();\n    // 'bottom', 'top', 'middle', 'alphabetic', 'hanging' or 'ideographic'\n    if (olTextBaseline === 'bottom') {\n      yAlign = 'l';\n    } else if (olTextBaseline === 'top') {\n      yAlign = 't';\n    }\n    symbolizer.labelAlign = `${xAlign}${yAlign}`;\n\n    const labelRotation = textStyle.getRotation();\n    if (labelRotation !== undefined) {\n      // Mapfish Print expects a string, not a number to rotate text\n      symbolizer.labelRotation = (labelRotation * 180 / Math.PI).toString();\n      // rotate around the vertical/horizontal center\n      symbolizer.labelAlign = 'cm';\n    }\n\n    const fontStyle = textStyle.getFont();\n    if (fontStyle !== undefined) {\n      const font = fontStyle.split(' ');\n      if (font.length >= 3) {\n        symbolizer.fontWeight = font[0];\n        symbolizer.fontSize = font[1];\n        symbolizer.fontFamily = font.splice(2).join(' ');\n      }\n    }\n\n    const strokeStyle = textStyle.getStroke();\n    if (strokeStyle !== null) {\n      const strokeColor = strokeStyle.getColor();\n      googAsserts.assert(typeof strokeColor === 'string' || Array.isArray(strokeColor));\n      const strokeColorRgba = olColor.asArray(strokeColor);\n      googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n      symbolizer.haloColor = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n      symbolizer.haloOpacity = strokeColorRgba[3];\n      const width = strokeStyle.getWidth();\n      if (width !== undefined) {\n        // Width is a stroke, radius a radius, so divide by 2\n        symbolizer.haloRadius = width / 2;\n      }\n    }\n\n    const fillStyle = textStyle.getFill();\n    if (fillStyle !== null) {\n      const fillColor = fillStyle.getColor();\n      googAsserts.assert(typeof fillColor === 'string' || Array.isArray(fillColor));\n      const fillColorRgba = olColor.asArray(fillColor);\n      googAsserts.assert(Array.isArray(fillColorRgba), 'only supporting fill colors');\n      symbolizer.fontColor = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    }\n\n    // Mapfish Print allows offset only if labelAlign is defined.\n    if (symbolizer.labelAlign !== undefined) {\n      symbolizer.labelXOffset = textStyle.getOffsetX();\n      // Mapfish uses the opposite direction of OpenLayers for y axis, so the\n      // minus sign is required for the y offset to be identical.\n      symbolizer.labelYOffset = -textStyle.getOffsetY();\n    }\n\n    symbolizers.push(symbolizer);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.print.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoPrintVectorEncoder from 'ngeo/print/VectorEncoder.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olArray from 'ol/array.js';\nimport * as olObj from 'ol/obj.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olMath from 'ol/math.js';\nimport * as olSize from 'ol/size.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport olTilegridWMTS from 'ol/tilegrid/WMTS.js';\n\n/**\n * Provides a function to create ngeo.print.Service objects used to\n * interact with MapFish Print v3 services.\n *\n * ngeo.print.Service objects expose the following methods:\n *\n * - createSpec: create a report specification object\n * - createReport: send a create report request\n * - getStatus: get the status of a report\n * - getReportUrl: get the URL of a report\n * - getCapabilities: get the capabilities of the server\n *\n *\n *     let printBaseUrl = 'http://example.com/print';\n *     let print = new ngeo.print.Service(printBaseUrl);\n *\n *     let scale = 5000;\n *     let dpi = 72;\n *     let layout = 'A4 portrait';\n *     let format = 'pdf';\n *     let reportSpec = print.createSpec(map, scale, dpi, layout, format, {\n *       'title': 'A title for my report',\n *       'rotation': 45 // degree\n *     });\n *\n * See our live example: [../examples/mapfishprint.html](../examples/mapfishprint.html)\n *\n * TODO and limitations:\n *\n * - createSpec should also accept a bbox instead of a center and a scale.\n * - Add support for ol.style.RegularShape. MapFish Print supports symbols\n *   like crosses, stars and squares, so printing regular shapes should be\n *   possible.\n * - ol.style.Icon may use a sprite image, and offsets to define to rectangle\n *   to use within the sprite. This type of icons won't be printed correctly\n *   as MapFish Print does not support sprite icons.\n *\n * @constructor\n * @struct\n * @param {string} url URL to MapFish print web service.\n * @param {angular.$http} $http Angular $http service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper service.\n */\nconst exports = function(url, $http, gettextCatalog, ngeoLayerHelper) {\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = url;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.print.VectorEncoder}\n   * @private\n   */\n  this.vectorEncoder_ = new ngeoPrintVectorEncoder();\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.printNativeAngle_ = true;\n};\n\n\n/**\n * Cancel a report.\n * @param {string} ref Print report reference.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.cancel = function(ref, opt_httpConfig) {\n  const httpConfig = opt_httpConfig !== undefined ? opt_httpConfig :\n    /** @type {angular.$http.Config} */ ({});\n  const url = `${this.url_}/cancel/${ref}`;\n  // \"delete\" is a reserved word, so use ['delete']\n  return this.$http_['delete'](url, httpConfig);\n};\n\n\n/**\n * Create a report specification.\n * @param {ol.Map} map Map.\n * @param {number} scale Scale.\n * @param {number} dpi DPI.\n * @param {string} layout Layout.\n * @param {string} format Formats.\n * @param {Object.<string, *>} customAttributes Custom attributes.\n * @return {MapFishPrintSpec} The print spec.\n * @export\n */\nexports.prototype.createSpec = function(\n  map, scale, dpi, layout, format, customAttributes) {\n\n  const specMap = /** @type {MapFishPrintMap} */ ({\n    dpi: dpi,\n    rotation: /** number */ (customAttributes['rotation'])\n  });\n\n  this.encodeMap_(map, scale, specMap);\n\n  const attributes = /** @type {!MapFishPrintAttributes} */ ({\n    map: specMap\n  });\n  olObj.assign(attributes, customAttributes);\n\n  const lang = this.gettextCatalog_.currentLanguage;\n\n  const spec = /** @type {MapFishPrintSpec} */ ({\n    attributes,\n    format,\n    lang,\n    layout\n  });\n\n  return spec;\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @param {number} scale Scale.\n * @param {MapFishPrintMap} object Object.\n * @private\n */\nexports.prototype.encodeMap_ = function(map, scale, object) {\n  const view = map.getView();\n  const viewCenter = view.getCenter();\n  const viewProjection = view.getProjection();\n  const viewResolution = view.getResolution();\n  const viewRotation = object.rotation || olMath.toDegrees(view.getRotation());\n\n  googAsserts.assert(viewCenter !== undefined);\n  googAsserts.assert(viewProjection !== undefined);\n\n  object.center = viewCenter;\n  object.projection = viewProjection.getCode();\n  object.rotation = viewRotation;\n  object.scale = scale;\n  object.layers = [];\n\n  const mapLayerGroup = map.getLayerGroup();\n  googAsserts.assert(mapLayerGroup);\n  this.printNativeAngle_ = !(mapLayerGroup.get('printNativeAngle') === false);\n  let layers = this.ngeoLayerHelper_.getFlatLayers(mapLayerGroup);\n\n  // Sort the layer by ZIndex\n  olArray.stableSort(layers, (layer_a, layer_b) => layer_a.getZIndex() - layer_b.getZIndex());\n  layers = layers.slice().reverse();\n\n  layers.forEach((layer) => {\n    if (layer.getVisible()) {\n      googAsserts.assert(viewResolution !== undefined);\n      this.encodeLayer(object.layers, layer, viewResolution);\n    }\n  });\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Base} layer Layer.\n * @param {number} resolution Resolution.\n */\nexports.prototype.encodeLayer = function(arr, layer, resolution) {\n  if (layer instanceof olLayerImage) {\n    this.encodeImageLayer_(arr, layer);\n  } else if (layer instanceof olLayerTile) {\n    this.encodeTileLayer_(arr, layer);\n  } else if (layer instanceof olLayerVector) {\n    this.vectorEncoder_.encodeVectorLayer(arr, layer, resolution);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Image} layer Layer.\n * @private\n */\nexports.prototype.encodeImageLayer_ = function(arr, layer) {\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  const source = layer.getSource();\n  if (source instanceof olSourceImageWMS) {\n    this.encodeImageWmsLayer_(arr, layer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Image} layer Layer.\n * @private\n */\nexports.prototype.encodeImageWmsLayer_ = function(arr, layer) {\n  const source = layer.getSource();\n\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  googAsserts.assertInstanceof(source, olSourceImageWMS);\n\n  const url = source.getUrl();\n  if (url !== undefined) {\n    this.encodeWmsLayer_(\n      arr, layer.getOpacity(), url, source.getParams());\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {number} opacity Opacity of the layer.\n * @param {string} url Url of the WMS server.\n * @param {Object} params Url parameters\n * @private\n */\nexports.prototype.encodeWmsLayer_ = function(arr, opacity, url, params) {\n  if (url.startsWith('//')) {\n    url = window.location.protocol  + url;\n  }\n  const url_url = new URL(url);\n  const customParams = {'TRANSPARENT': true};\n  if (url_url.searchParams) {\n    for (const element of url_url.searchParams) {\n      customParams[element[0]] = element[1];\n    }\n  }\n  for (const key in params) {\n    const value = params[key];\n    // remove empty params\n    if (value !== null && value !== undefined) {\n      customParams[key] = value;\n    }\n  }\n  delete customParams['LAYERS'];\n  delete customParams['FORMAT'];\n  delete customParams['SERVERTYPE'];\n  delete customParams['VERSION'];\n\n  const object = /** @type {MapFishPrintWmsLayer} */ ({\n    baseURL: exports.getAbsoluteUrl_(url_url.origin + url_url.pathname),\n    imageFormat: 'FORMAT' in params ? params['FORMAT'] : 'image/png',\n    layers: params['LAYERS'].split(','),\n    customParams: customParams,\n    serverType: params['SERVERTYPE'],\n    type: 'wms',\n    opacity: opacity,\n    version: params['VERSION'],\n    useNativeAngle: this.printNativeAngle_,\n  });\n  arr.push(object);\n};\n\n\n/**\n * @param {string} url URL.\n * @return {string} Absolute URL.\n * @private\n */\nexports.getAbsoluteUrl_ = function(url) {\n  const a = document.createElement('a');\n  a.href = encodeURI(url);\n  return decodeURI(a.href);\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileLayer_ = function(arr, layer) {\n  googAsserts.assertInstanceof(layer, olLayerTile);\n  const source = layer.getSource();\n  if (source instanceof olSourceWMTS) {\n    this.encodeTileWmtsLayer_(arr, layer);\n  } else if (source instanceof olSourceTileWMS) {\n    this.encodeTileWmsLayer_(arr, layer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileWmtsLayer_ = function(arr, layer) {\n  googAsserts.assertInstanceof(layer, olLayerTile);\n  const source = layer.getSource();\n  googAsserts.assertInstanceof(source, olSourceWMTS);\n\n  const projection = source.getProjection();\n  const tileGrid = source.getTileGrid();\n  googAsserts.assertInstanceof(tileGrid, olTilegridWMTS);\n  const matrixIds = tileGrid.getMatrixIds();\n\n  /** @type {Array.<MapFishPrintWmtsMatrix>} */\n  const matrices = [];\n\n  for (let i = 0, ii = matrixIds.length; i < ii; ++i) {\n    const tileRange = tileGrid.getFullTileRange(i);\n    matrices.push(/** @type {MapFishPrintWmtsMatrix} */ ({\n      identifier: matrixIds[i],\n      scaleDenominator: tileGrid.getResolution(i) *\n          projection.getMetersPerUnit() / 0.28E-3,\n      tileSize: olSize.toSize(tileGrid.getTileSize(i)),\n      topLeftCorner: tileGrid.getOrigin(i),\n      matrixSize: [\n        tileRange.maxX - tileRange.minX,\n        tileRange.maxY - tileRange.minY\n      ]\n    }));\n  }\n\n  const dimensions = source.getDimensions();\n  const dimensionKeys = Object.keys(dimensions);\n\n  const object = /** @type {MapFishPrintWmtsLayer} */ ({\n    baseURL: this.getWmtsUrl_(source),\n    dimensions: dimensionKeys,\n    dimensionParams: dimensions,\n    imageFormat: source.getFormat(),\n    layer: source.getLayer(),\n    matrices: matrices,\n    matrixSet: source.getMatrixSet(),\n    opacity: layer.getOpacity(),\n    requestEncoding: source.getRequestEncoding(),\n    style: source.getStyle(),\n    type: 'WMTS',\n    version: source.getVersion()\n  });\n\n  arr.push(object);\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileWmsLayer_ = function(arr, layer) {\n  const source = layer.getSource();\n\n  googAsserts.assertInstanceof(layer, olLayerTile);\n  googAsserts.assertInstanceof(source, olSourceTileWMS);\n\n  this.encodeWmsLayer_(\n    arr, layer.getOpacity(), source.getUrls()[0], source.getParams());\n};\n\n\n/**\n * Return the WMTS URL to use in the print spec.\n * @param {ol.source.WMTS} source The WMTS source.\n * @return {string} URL.\n * @private\n */\nexports.prototype.getWmtsUrl_ = function(source) {\n  const urls = source.getUrls();\n  googAsserts.assert(urls.length > 0);\n  return exports.getAbsoluteUrl_(urls[0]);\n};\n\n\n/**\n * Send a create report request to the MapFish Print service.\n * @param {MapFishPrintSpec} printSpec Print specification.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.createReport = function(printSpec, opt_httpConfig) {\n  const format = printSpec.format || 'pdf';\n  const url = `${this.url_}/report.${format}`;\n  const httpConfig = /** @type {!angular.$http.Config} */ ({\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8'\n    }\n  });\n  olObj.assign(httpConfig,\n    opt_httpConfig !== undefined ? opt_httpConfig : {});\n  return this.$http_.post(url, printSpec, httpConfig);\n};\n\n\n/**\n * Get the status of a report.\n * @param {string} ref Print report reference.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.getStatus = function(ref, opt_httpConfig) {\n  const httpConfig = opt_httpConfig !== undefined ? opt_httpConfig :\n    /** @type {angular.$http.Config} */ ({});\n  const url = `${this.url_}/status/${ref}.json`;\n  return this.$http_.get(url, httpConfig);\n};\n\n\n/**\n * Get the URL of a report.\n * @param {string} ref Print report reference.\n * @return {string} The report URL for this ref.\n * @export\n */\nexports.prototype.getReportUrl = function(ref) {\n  return `${this.url_}/report/${ref}`;\n};\n\n\n/**\n * Get the print capabilities from MapFish Print.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n */\nexports.prototype.getCapabilities = function(opt_httpConfig) {\n  const httpConfig =\n    opt_httpConfig !== undefined ? opt_httpConfig : /** @type {angular.$http.Config} */ ({\n      withCredentials: true\n    });\n  const url = `${this.url_}/capabilities.json`;\n  return this.$http_.get(url, httpConfig);\n};\n\n\n/**\n * @param {angular.$http} $http Angular $http service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @return {ngeox.CreatePrint} The function to create a print service.\n * @ngInject\n * @ngdoc service\n * @ngname ngeoCreatePrint\n */\nexports.createPrintServiceFactory = function($http, gettextCatalog, ngeoLayerHelper) {\n  return (\n    /**\n     * @param {string} url URL to MapFish print service.\n     */\n    function(url) {\n      return new exports(url, $http, gettextCatalog, ngeoLayerHelper);\n    }\n  );\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoPrint', [\n  ngeoMapLayerHelper.module.name\n]);\nexports.module.service('ngeoPrintService', exports);\nexports.module.factory('ngeoCreatePrint', exports.createPrintServiceFactory);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport * as olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complete then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n","/**\n * @module gmf.drawing.featureStyleComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingFeatureStyle', [\n  ngeoMiscColorpickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/drawing/featureStyleComponent', require('./featureStyleComponent.html'));\n});\n\n\n/**\n * Directive used to set the style of a vector feature. The options depend\n * on the type of geometry.\n * Example:\n *\n *     <gmf-featurestyle\n *         gmf-featurestyle-feature=\"ctrl.selectedFeature\">\n *     </gmf-featurestyle>\n *\n * @htmlAttribute {ol.Feature} gmf-featurestyle-feature The feature.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfFeaturestyle\n */\nexports.directive_ = function() {\n  return {\n    controller: 'GmfFeaturestyleController as fsCtrl',\n    scope: {\n      'feature': '=gmfFeaturestyleFeature'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/drawing/featureStyleComponent'\n  };\n};\n\n\nexports.directive('gmfFeaturestyle',\n  exports.directive_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Gmf feature helper service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfFeaturestyleController\n */\nexports.Controller_ = function($scope, ngeoFeatureHelper) {\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.color = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.label = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.measure = undefined;\n\n  $scope.$watch(\n    () => this.color,\n    this.handleColorSet_.bind(this)\n  );\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = [];\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.type;\n\n  $scope.$watch(\n    () => this.feature,\n    this.handleFeatureSet_.bind(this)\n  );\n\n};\n\n\n/**\n * Called when a new feature is set, which can also be null.\n * @param {?ol.Feature} newFeature New feature or null value.\n * @param {?ol.Feature} previousFeature Previous feature or null value.\n * @private\n */\nexports.Controller_.prototype.handleFeatureSet_ = function(\n  newFeature, previousFeature) {\n\n  const keys = this.featureListenerKeys_;\n\n  if (previousFeature) {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.type = undefined;\n    this.color = undefined;\n    this.measure = undefined;\n    this.label = undefined;\n  }\n\n  if (newFeature) {\n    [\n      ngeoFormatFeatureProperties.ANGLE,\n      ngeoFormatFeatureProperties.COLOR,\n      ngeoFormatFeatureProperties.NAME,\n      ngeoFormatFeatureProperties.SHOW_LABEL,\n      ngeoFormatFeatureProperties.OPACITY,\n      ngeoFormatFeatureProperties.SHOW_MEASURE,\n      ngeoFormatFeatureProperties.SIZE,\n      ngeoFormatFeatureProperties.STROKE\n    ].forEach(function(propName) {\n      keys.push(\n        olEvents.listen(\n          newFeature,\n          `change:${propName}`,\n          this.handleFeatureChange_,\n          this\n        )\n      );\n    }, this);\n\n    const geometry = newFeature.getGeometry();\n    googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n    keys.push(\n      olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      )\n    );\n\n    this.type = this.featureHelper_.getType(newFeature);\n    this.color = this.featureHelper_.getColorProperty(newFeature);\n    this.measure = this.featureHelper_.getMeasure(newFeature);\n  }\n};\n\n\n/**\n * @param {string|undefined} newColor Color.\n * @private\n */\nexports.Controller_.prototype.handleColorSet_ = function(\n  newColor) {\n  if (this.feature && newColor) {\n    const currentColor = this.feature.get(ngeoFormatFeatureProperties.COLOR);\n    if (currentColor !== newColor) {\n      this.feature.set(ngeoFormatFeatureProperties.COLOR, newColor);\n    }\n  }\n};\n\n\n/**\n * @param {number|undefined} value A name value to set or undefined to get.\n * @return {number} The angle of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetAngle = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.ANGLE, value));\n};\n\n\n/**\n * @param {string|undefined} value A name value to set or undefined to get.\n * @return {string} The name of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetName = function(value) {\n  return googAsserts.assertString(this.getSetProperty_(ngeoFormatFeatureProperties.NAME, value));\n};\n\n/**\n * @param {boolean|undefined} value A value to set or undefined for the\n *     purpose of showing the attribute labels or not.\n * @return {boolean} Whether to show the labels or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowLabel = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_LABEL, value));\n};\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetOpacity = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.OPACITY, value));\n};\n\n\n/**\n * @param {boolean|undefined} value A value to set or undefined to get for the\n *     purpose of showing the geometry measurements or not.\n * @return {boolean} Whether to show the measurements or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowMeasure = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_MEASURE, value));\n};\n\n\n/**\n * @param {number|undefined} value A size value to set or undefined to get.\n * @return {number} The size of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetSize = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.SIZE, value));\n};\n\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetStroke = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.STROKE, value));\n};\n\n\n/**\n * @param {string} key The property name.\n * @param {boolean|number|string|undefined} value A value to set or undefined\n *     to get.\n * @return {boolean|number|string} The property value of the feature.\n * @private\n */\nexports.Controller_.prototype.getSetProperty_ = function(key, value) {\n  if (value !== undefined) {\n    this.feature.set(key, value);\n  }\n  return /** @type {boolean|number|string} */ (this.feature.get(key));\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeatureChange_ = function() {\n  const feature = this.feature;\n\n  if (!feature) {\n    return;\n  }\n\n  this.featureHelper_.setStyle(feature, true);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleGeometryChange_ = function() {\n  googAsserts.assert(this.feature);\n  this.measure = this.featureHelper_.getMeasure(this.feature);\n\n  const showMeasure = this.featureHelper_.getShowMeasureProperty(this.feature);\n  if (showMeasure) {\n    this.handleFeatureChange_();\n  }\n\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfFeaturestyleController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.drawing.drawFeatureComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\nimport googAsserts from 'goog/asserts.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoMenu from 'ngeo/Menu.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingExportfeaturesComponent from 'ngeo/editing/exportfeaturesComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawComponent from 'ngeo/draw/component.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModify from 'ngeo/interaction/Modify.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfDrawFeatureComponent', [\n  gmfDrawingFeatureStyleComponent.name,\n  ngeoEditingExportfeaturesComponent.name,\n  ngeoMiscBtnComponent.name,\n  ngeoDrawComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/drawing/drawFeatureComponent', require('./drawFeatureComponent.html'));\n});\n\n\n/**\n * Directive used to create, modify and delete vector features on a map with\n * the addition of changing their style.\n * Example:\n *\n *     <gmf-drawfeature\n *         gmf-drawfeature-active=\"ctrl.drawFeatureActive\"\n *         gmf-drawfeature-map=\"::ctrl.map\">\n *     </gmf-drawfeature>\n *\n * @htmlAttribute {boolean} gmf-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {ol.Map} gmf-drawfeature-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfDrawfeature\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfDrawfeatureController as efCtrl',\n    scope: {\n      'active': '=gmfDrawfeatureActive',\n      'map': '<gmfDrawfeatureMap',\n      'showMeasure': '=?gmfDrawfeatureShowmeasure'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/drawing/drawFeatureComponent'\n  };\n};\n\n\nexports.directive('gmfDrawfeature',\n  exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {!ol.Collection.<!ol.Feature>} ngeoFeatures Collection of features.\n * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDrawfeatureController\n */\nexports.Controller_ = function($scope, $timeout, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures, ngeoToolActivateMgr) {\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawActive = false;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.drawToolActivate = new ngeoMiscToolActivate(this, 'drawActive');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.mapSelectActive = true;\n\n  /**\n   * @type {number?}\n   * @private\n   */\n  this.longPressTimeout_ = null;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.mapSelectToolActivate = new ngeoMiscToolActivate(this, 'mapSelectActive');\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {!ol.Collection.<!ol.Feature>}\n   * @export\n   */\n  this.features = ngeoFeatures;\n\n  /**\n   * @type {!ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.selectedFeature = null;\n\n  /**\n   * @type {!ol.Collection.<!ol.Feature>}\n   * @export\n   */\n  this.selectedFeatures = new olCollection();\n\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.interactions_ = new olCollection();\n\n  /**\n   * @type {!ngeo.interaction.Modify}\n   * @private\n   */\n  this.modify_ = new ngeoInteractionModify({\n    features: this.selectedFeatures,\n    style: ngeoFeatureHelper.getVertexStyle(false)\n  });\n  this.interactions_.push(this.modify_);\n\n  /**\n   * @type {?ngeo.Menu}\n   * @private\n   */\n  this.menu_ = null;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.modifyToolActivate = new ngeoMiscToolActivate(this.modify_, 'active');\n\n  /**\n   * @type {!ngeo.interaction.Translate}\n   * @private\n   */\n  this.translate_ = new ngeoInteractionTranslate({\n    features: this.selectedFeatures,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf047',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.translate_);\n\n  /**\n   * @type {!ngeo.interaction.Rotate}\n   * @private\n   */\n  this.rotate_ = new ngeoInteractionRotate({\n    features: this.selectedFeatures,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf01e',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.rotate_);\n\n  this.initializeInteractions_();\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.rotateToolActivate = new ngeoMiscToolActivate(this.rotate_, 'active');\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.translateToolActivate = new ngeoMiscToolActivate(this.translate_, 'active');\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * Flag used to determine whether the selection of a feature was made\n   * from the selection of an item from the list or not (the map, contextual\n   * menu, etc.)\n   * @type {boolean}\n   * @private\n   */\n  this.listSelectionInProgress_ = false;\n\n  $scope.$watch(\n    () => this.active,\n    this.handleActiveChange_.bind(this)\n  );\n\n  $scope.$watch(\n    () => this.drawActive,\n    (active) => {\n      if (active) {\n        this.selectedFeature = null;\n      }\n    }\n  );\n\n  $scope.$watch(\n    () => this.selectedFeature,\n    (newFeature, previousFeature) => {\n      this.selectedFeatures.clear();\n      if (previousFeature) {\n        this.featureHelper_.setStyle(previousFeature);\n        this.unregisterInteractions_();\n      }\n      if (newFeature) {\n        this.featureHelper_.setStyle(newFeature, true);\n        this.selectedFeatures.push(newFeature);\n        this.registerInteractions_();\n        if (this.listSelectionInProgress_) {\n          this.featureHelper_.panMapToFeature(newFeature, this.map);\n          this.listSelectionInProgress_ = false;\n        }\n      } else if (this.menu_) {\n        this.map.removeOverlay(this.menu_);\n        this.menu_ = null;\n      }\n    }\n  );\n\n  $scope.$watch(\n    () => this.mapSelectActive,\n    this.handleMapSelectActiveChange_.bind(this)\n  );\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nameProperty = ngeoFormatFeatureProperties.NAME;\n\n  /**\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n};\n\n\n/**\n * Initialize interactions by setting them inactive and decorating them\n * @private\n */\nexports.Controller_.prototype.initializeInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    interaction.setActive(false);\n    ngeoMiscDecorate.interaction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by adding them to the map\n * @private\n */\nexports.Controller_.prototype.registerInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.addInteraction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by removing them to the map\n * @private\n */\nexports.Controller_.prototype.unregisterInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.removeInteraction(interaction);\n  });\n};\n\n\n/**\n * Called when the active property of the this directive changes. Manage\n * the activation/deactivation accordingly (event management, etc.)\n * @param {boolean} active Whether the directive is active or not.\n * @private\n */\nexports.Controller_.prototype.handleActiveChange_ = function(active) {\n\n  const keys = this.listenerKeys_;\n  const drawUid = ['draw-', olBase.getUid(this)].join('-');\n  const otherUid = ['other-', olBase.getUid(this)].join('-');\n  const toolMgr = this.ngeoToolActivateMgr_;\n\n  if (active) {\n    // when activated\n\n    keys.push(\n      olEvents.listen(this.features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features, 'remove', this.handleFeaturesRemove_, this)\n    );\n\n    keys.push(olEvents.listen(this.translate_,\n      'translateend',\n      this.handleTranslateEnd_, this));\n\n    keys.push(olEvents.listen(this.rotate_, 'rotateend', this.handleRotateEnd_, this));\n\n    toolMgr.registerTool(drawUid, this.drawToolActivate, false);\n    toolMgr.registerTool(drawUid, this.mapSelectToolActivate, true);\n\n    toolMgr.registerTool(otherUid, this.drawToolActivate, false);\n    toolMgr.registerTool(otherUid, this.modifyToolActivate, true);\n    toolMgr.registerTool(otherUid, this.translateToolActivate, false);\n    toolMgr.registerTool(otherUid, this.rotateToolActivate, false);\n\n    this.mapSelectActive = true;\n    this.modify_.setActive(true);\n  } else {\n    // when deactivated\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n\n    toolMgr.unregisterTool(drawUid, this.drawToolActivate);\n    toolMgr.unregisterTool(drawUid, this.mapSelectToolActivate);\n\n    toolMgr.unregisterTool(otherUid, this.drawToolActivate);\n    toolMgr.unregisterTool(otherUid, this.modifyToolActivate);\n    toolMgr.unregisterTool(otherUid, this.translateToolActivate);\n    toolMgr.unregisterTool(otherUid, this.rotateToolActivate);\n\n    this.drawActive = false;\n    this.modify_.setActive(false);\n    this.mapSelectActive = false;\n    this.selectedFeature = null;\n\n    if (this.menu_) {\n      this.map.removeOverlay(this.menu_);\n      this.menu_ = null;\n    }\n  }\n\n};\n\n\n/**\n * Method called when a selection occurs from the list, i.e. when an item in\n * the list of features is clicked. Called from the template, so no need to\n * update Angular's scope.\n * @param {!ol.Feature} feature Feature to select.\n * @export\n */\nexports.Controller_.prototype.selectFeatureFromList = function(feature) {\n  this.listSelectionInProgress_ = true;\n  this.selectedFeature = feature;\n  this.drawActive = false;\n};\n\n\n/**\n * @return {!Array.<!ol.Feature>} Array.\n * @export\n */\nexports.Controller_.prototype.getFeaturesArray = function() {\n  return this.features.getArray();\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.clearFeatures = function() {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete all the features?');\n  if (confirm(msg)) {\n    this.features.clear();\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature The feature to remove from the selection.\n * @export\n */\nexports.Controller_.prototype.removeFeature = function(feature) {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete the selected feature?');\n  if (confirm(msg)) {\n    this.features.remove(feature);\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturesAdd_ = function(evt) {\n  // timeout to prevent double-click to zoom the map\n  this.timeout_(() => {\n    this.selectedFeature = /** @type {ol.Feature} */ (evt.element);\n    this.drawActive = false;\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturesRemove_ = function(evt) {\n  this.selectedFeature = null;\n};\n\n\n/**\n * Called when the mapSelectActive property changes.\n * @param {boolean} active Whether the map select is active or not.\n * @private\n */\nexports.Controller_.prototype.handleMapSelectActiveChange_ = function(\n  active) {\n\n  const mapDiv = this.map.getViewport();\n  googAsserts.assertElement(mapDiv);\n\n  if (active) {\n    olEvents.listen(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.listen(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n    olEvents.listen(mapDiv, 'touchstart',\n      this.handleMapTouchStart_, this);\n\n    olEvents.listen(mapDiv, 'touchmove',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.listen(mapDiv, 'touchend',\n      this.handleMapTouchEnd_, this);\n\n  } else {\n    olEvents.unlisten(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.unlisten(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n    olEvents.unlisten(mapDiv, 'touchstart',\n      this.handleMapTouchStart_, this);\n\n    olEvents.unlisten(mapDiv, 'touchmove',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.unlisten(mapDiv, 'touchend',\n      this.handleMapTouchEnd_, this);\n  }\n};\n\n\n/**\n * @param {!ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapClick_ = function(evt) {\n\n  const pixel = evt.pixel;\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 5\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // do not do any further action if feature is null or already selected\n  if (feature === this.selectedFeature) {\n    return;\n  }\n\n  this.selectedFeature = feature;\n\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapTouchStart_ = function(evt) {\n  this.longPressTimeout_ = setTimeout(() => {\n    this.handleMapContextMenu_(evt);\n  }, 500);\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapTouchEnd_ = function(evt) {\n  clearTimeout(this.longPressTimeout_);\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(evt) {\n  const gettextCatalog = this.gettextCatalog_;\n  const pixel = this.map.getEventPixel(evt);\n  const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 7\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // show contextual menu when clicking on certain types of features\n  if (feature) {\n    let actions = [];\n\n    const type = this.featureHelper_.getType(feature);\n    if (type == ngeoGeometryType.CIRCLE ||\n        type == ngeoGeometryType.LINE_STRING ||\n        type == ngeoGeometryType.POLYGON ||\n        type == ngeoGeometryType.RECTANGLE) {\n      actions = actions.concat([{\n        cls: 'fa fa-arrows',\n        label: gettextCatalog.getString('Move'),\n        name: 'move'\n      }, {\n        cls: 'fa fa-rotate-right',\n        label: gettextCatalog.getString('Rotate'),\n        name: 'rotate'\n      }]);\n    }\n\n    actions = actions.concat([{\n      cls: 'fa fa-trash-o',\n      label: gettextCatalog.getString('Delete'),\n      name: 'delete'\n    }]);\n\n    this.menu_ = new ngeoMenu({\n      actions\n    });\n\n    olEvents.listen(this.menu_, 'actionclick',\n      this.handleMenuActionClick_, this);\n    this.map.addOverlay(this.menu_);\n\n    this.menu_.open(coordinate);\n\n    evt.preventDefault();\n    evt.stopPropagation();\n  }\n\n  // do not do any further action if feature is null or already selected\n  if (feature === this.selectedFeature) {\n    return;\n  }\n\n  this.modify_.setActive(true);\n\n  this.selectedFeature = feature;\n\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.MenuEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuActionClick_ = function(evt) {\n  const action = evt.detail.action;\n\n  switch (action) {\n    case 'delete':\n      googAsserts.assert(\n        this.selectedFeature, 'Selected feature should be truthy');\n      this.removeFeature(this.selectedFeature);\n      this.scope_.$apply();\n      break;\n    case 'move':\n      this.translate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    case 'rotate':\n      this.rotate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    default:\n      // FIXME\n      console.log(`FIXME - support: ${action}`);\n      break;\n  }\n};\n\n\n/**\n * @param {!ol.interaction.Translate.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleTranslateEnd_ = function(evt) {\n  this.translate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.RotateEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleRotateEnd_ = function(evt) {\n  this.rotate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfDrawfeatureController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.drawing.module\n */\nimport gmfDrawingDrawFeatureComponent from 'gmf/drawing/drawFeatureComponent.js';\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingModule', [\n  gmfDrawingDrawFeatureComponent.name,\n  gmfDrawingFeatureStyleComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.import.wmsCapabilityLayertreeComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\n\nimport * as olBase from 'ol/index.js';\n\nimport 'bootstrap/js/collapse.js';\n\n\nconst exports = angular.module('gmfWmscapabilitylayertreenode', [\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  ngeoMessagePopup.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/import/wmsCapabilityLayertreeComponent', require('./wmsCapabilityLayertreeComponent.html'));\n});\n\n\nexports.value('gmfWmscapabilitylayertreenodeTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfWmscapabilitylayertreenodeTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/import/wmsCapabilityLayertreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfWmscapabilitylayertreenodeTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfWmscapabilitylayertreenodeTemplateUrl($attrs, gmfWmscapabilitylayertreenodeTemplateUrl) {\n  return gmfWmscapabilitylayertreenodeTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!gmf.datasource.ExternalDataSourcesManager}\n   *     gmfExternalDataSourcesManager GMF service responsible of managing\n   *     external data sources.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfWmscapabilitylayertreenodeController\n   */\n  constructor(gmfExternalDataSourcesManager) {\n\n    // Binding properties\n\n    /**\n     * WMS Capabilities definition\n     * @type {!Object}\n     * @export\n     */\n    this.capabilities;\n\n    /**\n     * WMS Capability Layer object.\n     * @type {!Object}\n     * @export\n     */\n    this.layer;\n\n    /**\n     * The original server url that was used to build the WMS GetCapabilities\n     * request.\n     * @type {string}\n     * @export\n     */\n    this.url;\n\n\n    // Injected properties\n\n    /**\n     * @type {!gmf.datasource.ExternalDataSourcesManager}\n     * @private\n     */\n    this.gmfExternalDataSourcesManager_ = gmfExternalDataSourcesManager;\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object\n   * @export\n   */\n  createAndAddDataSource(layer) {\n    this.gmfExternalDataSourcesManager_.createAndAddDataSourceFromWMSCapability(\n      layer,\n      this.capabilities,\n      this.url\n    );\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object\n   * @return {number} Unique id for the Capability Layer.\n   * @export\n   */\n  getUid(layer) {\n    return olBase.getUid(layer);\n  }\n};\n\n\nexports.component('gmfWmscapabilitylayertreenode', {\n  bindings: {\n    'capabilities': '<',\n    'layer': '<',\n    'url': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfWmscapabilitylayertreenodeTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.import.wmtsCapabilityLayertreeComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\n\nimport * as olBase from 'ol/index.js';\n\nconst exports = angular.module('gmfWmtscapabilitylayertree', [\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  ngeoMessagePopup.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/import/wmtsCapabilityLayertreeComponent', require('./wmtsCapabilityLayertreeComponent.html'));\n});\n\n\nexports.value('gmfWmtscapabilitylayertreTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfWmtscapabilitylayertreTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/import/wmtsCapabilityLayertreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfWmtscapabilitylayertreTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfWmtscapabilitylayertreTemplateUrl($attrs, gmfWmtscapabilitylayertreTemplateUrl) {\n  return gmfWmtscapabilitylayertreTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!gmf.datasource.ExternalDataSourcesManager}\n   *     gmfExternalDataSourcesManager GMF service responsible of managing\n   *     external data sources.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfWmtscapabilitylayertreeController\n   */\n  constructor(gmfExternalDataSourcesManager) {\n\n    // Binding properties\n\n    /**\n     * WMS Capabilities definition\n     * @type {!Object}\n     * @export\n     */\n    this.capabilities;\n\n    /**\n     * List of WMTS Capability Layer objects.\n     * @type {!Array.<!Object>}\n     * @export\n     */\n    this.layers;\n\n    /**\n     * The original WMTS GetCapabilities url that was used to fetch the\n     * capability layers.\n     * @type {string}\n     * @export\n     */\n    this.url;\n\n\n    // Injected properties\n\n    /**\n     * @type {!gmf.datasource.ExternalDataSourcesManager}\n     * @private\n     */\n    this.gmfExternalDataSourcesManager_ = gmfExternalDataSourcesManager;\n  }\n\n  /**\n   * @param {!Object} layer WMTS Capability Layer object\n   * @export\n   */\n  createAndAddDataSource(layer) {\n    const manager = this.gmfExternalDataSourcesManager_;\n    manager.createAndAddDataSourceFromWMTSCapability(\n      layer,\n      this.capabilities,\n      this.url\n    );\n  }\n\n  /**\n   * @param {!Object} layer WMTS Capability Layer object\n   * @return {number} Unique id for the Capability Layer.\n   * @export\n   */\n  getUid(layer) {\n    return olBase.getUid(layer);\n  }\n};\n\n\nexports.component('gmfWmtscapabilitylayertree', {\n  bindings: {\n    'capabilities': '<',\n    'layers': '<',\n    'url': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfWmtscapabilitylayertreTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.import.importdatasourceComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\n\n/** @suppress {extraRequire} */\nimport gmfImportWmsCapabilityLayertreeComponent from 'gmf/import/wmsCapabilityLayertreeComponent.js';\n\n/** @suppress {extraRequire} */\nimport gmfImportWmtsCapabilityLayertreeComponent from 'gmf/import/wmtsCapabilityLayertreeComponent.js';\n\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\nconst exports = angular.module('gmfImportdatasource', [\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfImportWmsCapabilityLayertreeComponent.name,\n  gmfImportWmtsCapabilityLayertreeComponent.name,\n  ngeoQueryQuerent.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/import/importdatasourceComponent', require('./importdatasourceComponent.html'));\n});\n\n\nexports.value('gmfImportdatasourceTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfImportdatasourceTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/import/importdatasourceComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfImportdatasourceTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfImportdatasourceTemplateUrl($attrs, gmfImportdatasourceTemplateUrl) {\n  return gmfImportdatasourceTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!jQuery} $element Element.\n   * @param {!angular.$filter} $filter Angular filter.\n   * @param {!angular.$injector} $injector Main injector.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!gmf.datasource.ExternalDataSourcesManager}\n   *     gmfExternalDataSourcesManager GMF service responsible of managing\n   *     external data sources.\n   * @param {!ngeo.query.Querent} ngeoQuerent Ngeo querent service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfImportdatasourceController\n   */\n  constructor($element, $filter, $injector, $scope, $timeout,\n    gmfExternalDataSourcesManager, ngeoQuerent) {\n\n    // Binding properties\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n\n    // Injected properties\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!gmf.datasource.ExternalDataSourcesManager}\n     * @private\n     */\n    this.gmfExternalDataSourcesManager_ = gmfExternalDataSourcesManager;\n\n    /**\n     * @type {!ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n\n    // Model properties\n\n    /**\n     * @type {File|undefined}\n     * @export\n     */\n    this.file;\n\n    /**\n     * @type {string|undefined}\n     * @export\n     */\n    this.url;\n\n\n    // Inner properties\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.fileInput_ = $element.find('input[type=file]');\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.hasError = false;\n\n    /**\n     * @type {?angular.$q.Promise}\n     * @private\n     */\n    this.hasErrorPromise_ = null;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.mode = exports.Controller_.Mode.ONLINE;\n\n    /**\n     * @type {!Array.<string>}\n     * @export\n     */\n    this.modes = [\n      exports.Controller_.Mode.LOCAL,\n      exports.Controller_.Mode.ONLINE\n    ];\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.pending = false;\n\n    /**\n     * @type {!ngeox.unitPrefix}\n     * @private\n     */\n    this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ (\n      $filter('ngeoUnitPrefix'));\n\n    /**\n     * Current WMS Capabilities that were connected.\n     * @type {?Object}\n     * @export\n     */\n    this.wmsCapabilities = null;\n\n    /**\n     * Current WTMS Capabilities that were connected.\n     * @type {?Object}\n     * @export\n     */\n    this.wmtsCapabilities = null;\n\n    /**\n     * @type {Bloodhound|undefined}\n     * @private\n     */\n    this.serversEngine_;\n\n    const servers = $injector.has('gmfExternalOGCServers') ?\n      /** @type {Array.<!gmfx.ExternalOGCServer>|undefined} */ (\n        $injector.get('gmfExternalOGCServers')\n      ) : undefined;\n\n    if (servers) {\n      const serverUrls = servers.map(server => server['url']);\n      this.serversEngine_ = new Bloodhound({\n        /**\n         * Allows search queries to match from string from anywhere within\n         * the url, and not only from the beginning of the string (which is\n         * the default, non-configurable behaviour of bloodhound).\n         *\n         * Borrowed from:\n         * https://stackoverflow.com/questions/22059933/twitter-typeahead-js-how-to-return-all-matched-elements-within-a-string\n         *\n         * @param {BloodhoundDatum} datum Datum.\n         * @return {Array.<string>} List of datum tokenizers.\n         */\n        datumTokenizer: (datum) => {\n          googAsserts.assertString(datum);\n          const originalDatumTokenizers = Bloodhound.tokenizers.whitespace(\n            datum);\n          googAsserts.assert(originalDatumTokenizers);\n          const datumTokenizers = [];\n          for (const originalDatumTokenizer of originalDatumTokenizers) {\n            let i = 0;\n            while ((i + 1) < originalDatumTokenizer.length) {\n              datumTokenizers.push(\n                originalDatumTokenizer.substr(\n                  i,\n                  originalDatumTokenizer.length\n                )\n              );\n              i++;\n            }\n          }\n          return datumTokenizers;\n        },\n        queryTokenizer: Bloodhound.tokenizers.whitespace,\n        identify: false,\n        local: serverUrls\n      });\n    }\n\n    // Register input[type=file] onchange event, use HTML5 File api\n    this.fileInput_.on('change', () => {\n      this.file = this.fileInput_[0].files && this.fileInput_[0].files[0] ?\n        this.fileInput_[0].files[0] : undefined;\n      this.scope_.$apply();\n    });\n  }\n\n  /**\n   * Called on initialization of the component.\n   */\n  $onInit() {\n    this.gmfExternalDataSourcesManager_.map = this.map;\n\n\n    if (this.serversEngine_) {\n      // Timeout to let Angular render the placeholder of the input properly,\n      // otherwise typeahead would copy the string with {{}} in it...\n      this.timeout_(() => {\n        googAsserts.assert(this.serversEngine_);\n        const $urlInput = this.element_.find('input[name=url]');\n        const $connectBtn = this.element_.find('button.gmf-importdatasource-connect-btn');\n        $urlInput.typeahead({\n          hint: true,\n          highlight: true,\n          minLength: 1\n        }, {\n          name: 'url',\n          source: this.serversEngine_.ttAdapter()\n        }).bind('typeahead:select', (ev, suggestion) => {\n          this.timeout_(() => {\n            this.url = suggestion;\n            this.scope_.$apply();\n            $connectBtn.focus();\n          });\n        });\n      });\n    }\n  }\n\n  /**\n   * Triggers a 'click' on the \"Browse\" button.\n   * @export\n   */\n  browse() {\n    this.element_.find('input[type=file][name=file]').click();\n  }\n\n  /**\n   * Connect to given online resource URL.\n   * @export\n   */\n  connect() {\n    const url = googAsserts.assertString(this.url);\n    const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n    this.startWorking_();\n    if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n      this.ngeoQuerent_.wmsGetCapabilities(url).then(\n        (wmsCapabilities) => {\n          this.wmsCapabilities = wmsCapabilities;\n          this.stopWorking_();\n        },\n        () => {\n          // Something went wrong...\n          this.stopWorking_(true);\n        }\n      );\n    } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n      this.ngeoQuerent_.wmtsGetCapabilities(url).then(\n        (wmtsCapabilities) => {\n          this.wmtsCapabilities = wmtsCapabilities;\n          this.stopWorking_();\n        },\n        () => {\n          // Something went wrong...\n          this.stopWorking_(true);\n        }\n      );\n    } else {\n      // Could not determine the type of url\n      this.timeout_(() => {\n        this.stopWorking_(true);\n      });\n    }\n  }\n\n  /**\n   * Create data source from file.\n   * @export\n   */\n  load() {\n    const file = googAsserts.assert(this.file);\n    this.gmfExternalDataSourcesManager_.createAndAddDataSourceFromFile(file);\n  }\n\n  /**\n   * @return {string} The name of the file and human-readable size.\n   * @export\n   */\n  get fileNameAndSize() {\n    let nameAndSize = '';\n\n    const file = this.file;\n    if (file !== undefined) {\n      const fileSize = this.unitPrefixFormat_(file.size, 'o');\n      nameAndSize = `${file.name}, ${fileSize}`;\n    }\n\n    return nameAndSize;\n  }\n\n\n  // === Private methods ===\n\n  /**\n   * @private\n   */\n  startWorking_() {\n    this.pending = true;\n    this.hasError = false;\n\n    // Clear any previous objects\n    this.wmsCapabilities = null;\n    this.wmtsCapabilities = null;\n  }\n\n  /**\n   * @param {boolean=} opt_hasError Whether we stopped working because of after\n   *     an error.\n   * @private\n   */\n  stopWorking_(opt_hasError = false) {\n    this.pending = false;\n    if (opt_hasError) {\n      this.hasError = true;\n      if (this.hasErrorPromise_) {\n        this.timeout_.cancel(this.hasErrorPromise_);\n      }\n      this.hasErrorPromise_ = this.timeout_(() => {\n        this.hasError = false;\n        this.hasErrorPromise_ = null;\n      }, 3000);\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.Controller_.Mode = {\n  LOCAL: 'Local',\n  ONLINE: 'Online'\n};\n\n\nexports.component('gmfImportdatasource', {\n  bindings: {\n    'map': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfImportdatasourceTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.import.module\n */\nimport gmfImportImportdatasourceComponent from 'gmf/import/importdatasourceComponent.js';\nimport gmfImportWmsCapabilityLayertreeComponent from 'gmf/import/wmsCapabilityLayertreeComponent.js';\nimport gmfImportWmtsCapabilityLayertreeComponent from 'gmf/import/wmtsCapabilityLayertreeComponent.js';\n\nimport './import.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfImportModule', [\n  gmfImportImportdatasourceComponent.name,\n  gmfImportWmsCapabilityLayertreeComponent.name,\n  gmfImportWmtsCapabilityLayertreeComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.search.searchDirective\n */\n\n/**\n * Provides the \"ngeoSearch\" directive, which uses Twitter's\n * typeahead component to change an input text into a search field.\n *\n * Example:\n *\n *      <input type=\"text\"\n *        ngeo-search=\"ctrl.typeaheadOptions\"\n *        ngeo-search-datasets=\"ctrl.typeaheadDatasets\"\n *        ngeo-search-listeners=\"crtl.typeaheadListeners\">\n *\n * See our live example: [../examples/search.html](../examples/search.html)\n *\n * @htmlAttribute {TypeaheadOptions} ngeo-search The options.\n * @htmlAttribute {Array.<TypeaheadDataset>} ngeo-search-datasets The sources datasets.\n * @htmlAttribute {ngeox.SearchDirectiveListeners} ngeo-search-listeners The listeners.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoSearch\n */\nconst exports = function() {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const typeaheadOptionsExpr = attrs['ngeoSearch'];\n      const typeaheadOptions = /** @type {TypeaheadOptions} */\n              (scope.$eval(typeaheadOptionsExpr));\n\n      const typeaheadDatasetsExpr = attrs['ngeoSearchDatasets'];\n      const typeaheadDatasets = /** @type {Array.<TypeaheadDataset>} */\n              (scope.$eval(typeaheadDatasetsExpr));\n\n      const args = typeaheadDatasets.slice();\n      args.unshift(typeaheadOptions);\n\n      element.typeahead(...args);\n\n      const typeaheadListenersExpr = attrs['ngeoSearchListeners'];\n      const typeaheadListeners_ =\n              /** @type {ngeox.SearchDirectiveListeners} */\n              (scope.$eval(typeaheadListenersExpr));\n\n      /**\n       * @type {ngeox.SearchDirectiveListeners}\n       */\n      const typeaheadListeners = exports.adaptListeners_(\n        typeaheadListeners_);\n\n      element.on('typeahead:open', () => {\n        scope.$apply(() => {\n          typeaheadListeners.open();\n        });\n      });\n\n      element.on('typeahead:close', () => {\n        scope.$apply(() => {\n          typeaheadListeners.close();\n        });\n      });\n\n      element.on('typeahead:cursorchange',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.cursorchange(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:select',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.select(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:autocomplete',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.autocomplete(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:asyncreceive',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {TypeaheadDataset} dataset Dataset.\n         * @param {string} query Query.\n         */\n        (event, dataset, query) => {\n          scope.$apply(() => {\n            const empty = element.data('tt-typeahead')['menu']['_allDatasetsEmpty']();\n            typeaheadListeners.datasetsempty(event, query, empty);\n          });\n        });\n\n    }\n  };\n};\n\n\n/**\n * Create a real ngeox.SearchDirectiveListeners object out of the object\n * returned by $eval.\n * @param {ngeox.SearchDirectiveListeners} object Object.\n * @return {ngeox.SearchDirectiveListeners} The listeners object.\n * @private\n */\nexports.adaptListeners_ = function(object) {\n  /** @type {ngeox.SearchDirectiveListeners} */\n  let typeaheadListeners;\n  if (object === undefined) {\n    typeaheadListeners = {\n      open() {},\n      close() {},\n      cursorchange() {},\n      datasetsempty() {},\n      select() {},\n      autocomplete() {}\n    };\n  } else {\n    typeaheadListeners = {\n      open: object.open !== undefined ?\n        object.open : () => {},\n      close: object.close !== undefined ?\n        object.close : () => {},\n      cursorchange: object.cursorchange !== undefined ?\n        object.cursorchange : () => {},\n      datasetsempty: object.datasetsempty !== undefined ?\n        object.datasetsempty : () => {},\n      select: object.select !== undefined ?\n        object.select : () => {},\n      autocomplete: object.autocomplete !== undefined ?\n        object.autocomplete : () => {}\n    };\n  }\n  return typeaheadListeners;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSearchDirective', []);\n\n\n// Register the directive in the module\nexports.module.directive('ngeoSearch', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.search.createGeoJSONBloodhound\n */\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olObj from 'ol/obj.js';\n\nimport 'corejs-typeahead';\n\n\n/**\n * @param {string} url an URL to a search service.\n * @param {(function(GeoJSONFeature): boolean)=} opt_filter function to filter\n *     results.\n * @param {ol.proj.Projection=} opt_featureProjection Feature projection.\n * @param {ol.proj.Projection=} opt_dataProjection Data projection.\n * @param {BloodhoundOptions=} opt_options optional Bloodhound options. If\n *     undefined, the default Bloodhound config will be used.\n * @param {BloodhoundRemoteOptions=} opt_remoteOptions optional Bloodhound\n * remote options. Effective only if `remote` is not defined in `opt_options`.\n * @return {Bloodhound} The Bloodhound object.\n */\nconst exports = function(url, opt_filter, opt_featureProjection,\n  opt_dataProjection, opt_options, opt_remoteOptions) {\n  const geojsonFormat = new olFormatGeoJSON();\n  const bloodhoundOptions = /** @type {BloodhoundOptions} */ ({\n    remote: {\n      url,\n      prepare(query, settings) {\n        settings.url = settings.url.replace('%QUERY', query);\n        return settings;\n      },\n      transform(parsedResponse) {\n        /** @type {GeoJSONFeatureCollection} */\n        let featureCollection = /** @type {GeoJSONFeatureCollection} */\n            (parsedResponse);\n        if (opt_filter !== undefined) {\n          featureCollection = /** @type {GeoJSONFeatureCollection} */ ({\n            type: 'FeatureCollection',\n            features: featureCollection.features.filter(opt_filter)\n          });\n        }\n\n        return geojsonFormat.readFeatures(featureCollection, {\n          featureProjection: opt_featureProjection,\n          dataProjection: opt_dataProjection\n        });\n      }\n    },\n    // datumTokenizer is required by the Bloodhound constructor but it\n    // is not used when only a remote is passsed to Bloodhound.\n    datumTokenizer: () => {},\n    queryTokenizer: Bloodhound.tokenizers.whitespace\n  });\n\n  // the options objects are cloned to avoid updating the passed object\n  const options = olObj.assign({}, opt_options || {});\n  const remoteOptions = olObj.assign({}, opt_remoteOptions || {});\n\n  if (options.remote) {\n    // move the remote options to opt_remoteOptions\n    olObj.assign(remoteOptions, options.remote);\n    delete options.remote;\n  }\n\n  olObj.assign(bloodhoundOptions, options);\n  olObj.assign(bloodhoundOptions.remote, remoteOptions);\n\n  return new Bloodhound(bloodhoundOptions);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSearchCreategeojsonbloodhound', []);\n\nexports.module.value(\n  'ngeoSearchCreateGeoJSONBloodhound',\n  exports);\n\n\n/**\n * Provides a function that creates a Bloodhound engine\n * expecting GeoJSON responses from the search web service, which creates\n * `ol.Feature` objects as suggestions.\n *\n * Example:\n *\n *     let bloodhound = createGeoJSONBloodhound(\n *       'http://example.com/fulltextsearch?query=%QUERY',\n *       aFilterFunction,\n *       ol.proj.get('EPSG:3857'));\n *     bloodhound.initialize();\n *\n *     let bloodhound = createGeoJSONBloodhound(\n *       '',\n *       undefined,\n *       ol.proj.get('EPSG:3857'),\n *       ol.proj.get('EPSG:21781'),\n *       {\n *         remote: {\n *           url: mySearchEngineUrl,\n *           replace: function(url, query) {\n *             return url +\n *                 '?qtext=' + encodeURIComponent(query) +\n *                 '&lang=' + gettextCatalog.currentLanguage;\n *           }\n *         }\n *       }\n *     );\n *     bloodhound.initialize();\n *\n * @typedef {function(string, (function(GeoJSONFeature): boolean)=,\n * ol.proj.Projection=, ol.proj.Projection=, BloodhoundOptions=,\n * BloodhoundRemoteOptions=):Bloodhound}\n * @ngdoc service\n * @ngname search.createGeoJSONBloodhound\n */\nexports.Function;\n\n\nexport default exports;\n","/**\n * @module ngeo.search.createLocationSearchBloodhound\n */\nimport * as olObj from 'ol/obj.js';\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olFeature from 'ol/Feature.js';\n\nimport 'corejs-typeahead';\n\n\n/**\n * @param {ngeox.search.LocationSearchOptions=} opt_options Options.\n * @return {Bloodhound} The Bloodhound object.\n */\nconst exports = function(opt_options) {\n  const options = opt_options || {};\n\n  const sourceProjection = olProj.get(ngeoProjEPSG21781);\n  const targetProjection = options.targetProjection;\n\n  /**\n   * @param {string} bbox Bbox string.\n   * @return {?ol.Extent} Parsed extent.\n   */\n  const parseBbox = (bbox) => {\n    const regex = /BOX\\((.*?) (.*?),(.*?) (.*?)\\)/g;\n    const match = regex.exec(bbox);\n    if (match !== null) {\n      return [\n        parseFloat(match[1]),\n        parseFloat(match[2]),\n        parseFloat(match[3]),\n        parseFloat(match[4])\n      ];\n    } else {\n      return null;\n    }\n  };\n\n  const removeHtmlTags = label => label.replace(/<\\/?[ib]>/g, '');\n\n  const extractName = (label) => {\n    const regex = /<b>(.*?)<\\/b>/g;\n    const match = regex.exec(label);\n    if (match !== null) {\n      return match[1];\n    } else {\n      return label;\n    }\n  };\n\n  const bloodhoundOptions = /** @type {BloodhoundOptions} */ ({\n    remote: {\n      url: 'https://api3.geo.admin.ch/rest/services/api/SearchServer?type=locations&searchText=%QUERY',\n      prepare: (query, settings) => {\n        settings.url = settings.url.replace('%QUERY', query);\n        if (options.limit !== undefined) {\n          settings.url += `&limit=${options.limit}`;\n        }\n        if (options.origins !== undefined) {\n          settings.url += `&origins=${options.origins}`;\n        }\n\n        return (options.prepare !== undefined) ?\n          options.prepare(query, settings) : settings;\n      },\n      transform: (/** @type {geoAdminx.SearchLocationResponse} */ parsedResponse) => {\n        const features = parsedResponse.results.map((/** @type {geoAdminx.SearchLocationResult} */ result) => {\n          const attrs = result.attrs;\n\n          // note that x and y are switched!\n          const point = new olGeomPoint([attrs.y, attrs.x]);\n          let bbox = parseBbox(attrs.geom_st_box2d);\n          if (targetProjection !== undefined) {\n            point.transform(sourceProjection, targetProjection);\n            if (bbox !== null) {\n              bbox = olProj.transformExtent(bbox, sourceProjection, targetProjection);\n            }\n          }\n\n          attrs['geometry'] = point;\n          attrs['bbox'] = bbox;\n\n          // create a label without HTML tags\n          const label = attrs.label;\n          attrs['label_no_html'] = removeHtmlTags(label);\n          attrs['label_simple'] = extractName(label);\n\n          const feature = new olFeature(attrs);\n          feature.setId(attrs.featureId);\n\n          return feature;\n        });\n\n        return features;\n      }\n    },\n    // datumTokenizer is required by the Bloodhound constructor but it\n    // is not used when only a remote is passsed to Bloodhound.\n    datumTokenizer: () => {},\n    queryTokenizer: Bloodhound.tokenizers.whitespace\n  });\n\n  // the options objects are cloned to avoid updating the passed object\n  const bhOptions = olObj.assign({}, options.options || {});\n  const remoteOptions = olObj.assign({}, options.remoteOptions || {});\n\n  if (bhOptions.remote) {\n    // move the remote options to opt_remoteOptions\n    olObj.assign(remoteOptions, bhOptions.remote);\n    delete bhOptions.remote;\n  }\n\n  olObj.assign(bloodhoundOptions, bhOptions);\n  olObj.assign(bloodhoundOptions.remote, remoteOptions);\n\n  return new Bloodhound(bloodhoundOptions);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoCreateLocationSearchBloodhound', []);\n\nexports.module.value(\n  'ngeoCreateLocationSearchBloodhound',\n  exports);\n\n\n/**\n * Provides a function that creates a Bloodhound engine\n * for the GeoAdmin Location Search API, which creates `ol.Feature` objects\n * as suggestions.\n *\n * See: http://api3.geo.admin.ch/services/sdiservices.html#search\n *\n * Example:\n *\n *     let bloodhound = ngeoCreateLocationSearchBloodhound({\n *       targetProjection: ol.proj.get('EPSG:3857'),\n *       limit: 10\n *     });\n *     bloodhound.initialize();\n *\n * @typedef {function(ngeox.search.LocationSearchOptions=):Bloodhound}\n * @ngdoc service\n * @ngname search.createLocationSearchBloodhound\n */\nexports.Function;\n\n\nexport default exports;\n","/**\n * @module ngeo.search.module\n */\nimport ngeoSearchSearchDirective from 'ngeo/search/searchDirective.js';\nimport ngeoSearchCreateGeoJSONBloodhound from 'ngeo/search/createGeoJSONBloodhound.js';\nimport ngeoSearchCreateLocationSearchBloodhound from 'ngeo/search/createLocationSearchBloodhound.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoSearchModule', [\n  ngeoSearchSearchDirective.module.name,\n  ngeoSearchCreateGeoJSONBloodhound.module.name,\n  ngeoSearchCreateLocationSearchBloodhound.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.profile.d3Elevation\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olObj from 'ol/obj.js';\n\nimport 'd3-transition';\nimport {bisector, extent} from 'd3-array';\nimport {axisBottom, axisLeft} from 'd3-axis';\nimport {scaleLinear} from 'd3-scale';\nimport {mouse, select, selectAll} from 'd3-selection';\nimport {area, line} from 'd3-shape';\nconst d3 = {\n  bisector,\n  extent,\n  axisBottom,\n  axisLeft,\n  scaleLinear,\n  mouse,\n  select,\n  selectAll,\n  area,\n  line,\n};\n\n\n/**\n * Provides a D3js component to be used to draw an elevation\n * profile chart.\n *\n *     let selection = d3.select('#element_id');\n *     let profile = ngeo.profile.d3Elevation({\n *       distanceExtractor: function (item) {return item['dist'];},\n *       linesConfiguration: {\n *         'lineZ1': {\n *           zExtractor: function (item) {return item['values']['z1'];}\n *         },\n *         'lineZ2': {\n *           color: '#00F',\n *           zExtractor: function (item) {return item['values']['z2'];}\n *         }\n *       },\n *       hoverCallback: function(point, dist, xUnits, elevations, yUnits) {\n *         console.log(point.x, point.y);\n *       },\n *       outCallback: function() {\n *         console.log(\"out\");\n *       }\n *     });\n *     selection.datum(data).call(profile);\n *\n * The selection data must be an array.\n * The layout for the items of this array is unconstrained: the distance values\n * is extracted using the distanceExtractor config option and multiples z values\n * can be displayed by providing multiple linesConfiguration with its specific\n * zExtractor.\n * Optionally you can provide a color in your linesConfiguration. A line without\n * color will be red. Each linesConfiguration name is used as class for its\n * respective line. So you can pass a styleDefs config option (inline css) to\n * customize the line or all the chart.\n * Optionally, POIs can be displayed and depend on a poiExtractor\n * config option.\n *\n * The data below will work for the above example:\n *\n *     [\n *         {\n *             \"y\": 199340,\n *             \"values\": {\"z1\": 788.7, \"z2\": 774.2},\n *             \"dist\": 0.0,\n *             \"x\": 541620\n *         }, ...\n *     ]\n *\n * @return {Object} D3js component.\n * @param {ngeox.profile.ProfileOptions} options Profile options.\n * @export\n */\nconst exports = function(options) {\n  /**\n   * Whether the simplified profile should be shown.\n   * @type {boolean}\n   */\n  const light = options.light !== undefined ? options.light : false;\n\n\n  /**\n   * The values for margins around the chart defined in pixels.\n   */\n  const margin = light ? {top: 0, right: 0, bottom: 0, left: 0} :\n    {top: 10, right: 20, bottom: 30, left: 40};\n\n  /**\n   * Hover callback function.\n   * @type {function(Object, number, string, Object.<string, number>, string)}\n   */\n  const hoverCallback = options.hoverCallback !== undefined ?\n    options.hoverCallback : () => {};\n\n  /**\n   * Out callback function.\n   * @type {function()}\n   */\n  const outCallback = options.outCallback !== undefined ?\n    options.outCallback : () => {};\n\n  /**\n   * Distance data extractor used to get the dist values.\n   */\n  const distanceExtractor = options.distanceExtractor;\n\n  /**\n   * Line configuration object.\n   */\n  const linesConfiguration = options.linesConfiguration;\n\n  /**\n   * Number of different configurations for the line.\n   */\n  const numberOfLines = Object.keys(linesConfiguration).length;\n\n  /**\n   * Method to get the coordinate in pixels from a distance.\n   */\n  const bisectDistance = d3.bisector(d => distanceExtractor(d)).left;\n\n  /**\n   * POI data extractor.\n   */\n  const poiExtractor = options.poiExtractor;\n\n  /**\n   * Optional SVG inline style.\n   */\n  const styleDefs = options.styleDefs;\n\n  /**\n   * @type {number}\n   */\n  const poiLabelAngle = options.poiLabelAngle !== undefined ?\n    options.poiLabelAngle : -60;\n\n  /**\n   * @type {Object.<string, string>}\n   */\n  const i18n = options.i18n || {};\n\n  /**\n   * @type {string}\n   */\n  const xAxisLabel = (i18n.xAxis || 'Distance');\n\n  /**\n   * @type {string}\n   */\n  const yAxisLabel = (i18n.yAxis || 'Elevation');\n\n  /**\n   * @type {ngeox.profile.ProfileFormatter}\n   */\n  const formatter = {\n    /**\n     * @param {number} dist Distance.\n     * @param {string} units Units.\n     * @return {string} Distance.\n     */\n    xhover(dist, units) {\n      return `${parseFloat(dist.toPrecision(3))} ${units}`;\n    },\n    /**\n     * @param {number} ele Elevation.\n     * @param {string} units Units.\n     * @return {string} Elevation.\n     */\n    yhover(ele, units) {\n      return `${Math.round(ele)} m`;\n    },\n    /**\n     * @param {number} dist Distance.\n     * @param {string} units Units.\n     * @return {string|number} Distance.\n     */\n    xtick(dist, units) {\n      return dist;\n    },\n    /**\n     * @param {number} ele Elevation.\n     * @param {string} units Units.\n     * @return {string|number} Elevation.\n     */\n    ytick(ele, units) {\n      return ele;\n    }\n  };\n\n  if (options.formatter !== undefined) {\n    olObj.assign(formatter, options.formatter);\n  }\n\n  /**\n   * @type {boolean}\n   */\n  const lightXAxis = options.lightXAxis !== undefined ? options.lightXAxis : false;\n\n  // Objects shared with the showPois function\n  /**\n   * @type {Object}\n   */\n  let svg;\n\n  /**\n   * D3 x scale.\n   */\n  let x;\n\n  /**\n   * D3 y scale.\n   */\n  let y;\n\n  /**\n   * Scale modifier to allow customizing the x and y scales.\n   */\n  const scaleModifier = options.scaleModifier;\n\n  let g;\n\n  /**\n   * Height of the chart in pixels\n   */\n  let height;\n\n  /**\n   * Width of the chart in pixels\n   */\n  let width;\n\n  /**\n  * Factor to determine whether to use 'm' or 'km'.\n  */\n  let xFactor;\n\n  /**\n  * Distance units. Either 'm' or 'km'.\n  */\n  let xUnits;\n\n  /**\n   * D3 extent of the distance.\n   */\n  let xDomain;\n\n\n  const profile = function(selection) {\n    selection.each(function(data) {\n      d3.select(this).selectAll('svg').remove();\n      if (data === undefined) {\n        return;\n      }\n\n      width = Math.max(this.clientWidth - margin.right - margin.left, 0);\n      x = d3.scaleLinear().range([0, width]);\n\n      height = Math.max(this.clientHeight - margin.top - margin.bottom, 0);\n      y = d3.scaleLinear().range([height, 0]);\n\n      const xAxis = d3.axisBottom(x);\n      const yAxis = d3.axisLeft(y);\n\n      let area;\n      if (numberOfLines === 1) {\n        area = d3.area()\n          .x(d => x(distanceExtractor(d)))\n          .y0(height)\n          .y1((d) => {\n            const firstLineName =  Object.keys(linesConfiguration)[0];\n            return y(linesConfiguration[firstLineName].zExtractor(d));\n          });\n      }\n\n      // Select the svg element, if it exists.\n      svg = d3.select(this).selectAll('svg').data([data]);\n      // Otherwise, create the skeletal chart.\n      const svgEnter = svg.enter().append('svg');\n      // Then select it again to get the complete object.\n      svg = d3.select(this).selectAll('svg').data([data]);\n\n      if (styleDefs !== undefined) {\n        svgEnter.append('defs').append('style')\n          .attr('type', 'text/css')\n          .text(styleDefs);\n      }\n      const gEnter = svgEnter.append('g');\n\n      clearPois();\n\n      gEnter.style('font', '11px Arial');\n\n      if (numberOfLines === 1) {\n        gEnter.append('path').attr('class', 'area')\n          .style('fill', 'rgba(222, 222, 222, 0.5)');\n      }\n\n      gEnter.insert('g', ':first-child')\n        .attr('class', 'grid-y');\n\n      if (!light) {\n        gEnter.append('g')\n          .attr('class', 'x axis')\n          .attr('transform', `translate(0,${height})`);\n\n        gEnter.append('text')\n          .attr('class', 'x label')\n          .attr('text-anchor', 'end')\n          .attr('x', width - 4)\n          .attr('y', height - 4);\n\n        gEnter.append('g')\n          .attr('class', 'y axis');\n\n        gEnter.append('text')\n          .attr('class', 'y label')\n          .attr('text-anchor', 'end')\n          .attr('y', 6)\n          .attr('dy', '.75em')\n          .attr('transform', 'rotate(-90)')\n          .style('fill', 'grey')\n          .text(`${yAxisLabel} [m]`);\n\n        gEnter.append('g')\n          .attr('class', 'metas')\n          .attr('transform', `translate(${width + 3}, 0)`);\n      }\n\n      gEnter.append('g').attr('class', 'pois');\n\n      const xHover = gEnter.append('g').attr('class', 'x grid-hover');\n      xHover.append('svg:line').attr('stroke-dasharray', '5,5');\n      xHover.append('text');\n\n      gEnter.append('rect')\n        .attr('class', 'overlay')\n        .attr('width', width)\n        .attr('height', height)\n        .style('fill', 'none')\n        .style('pointer-events', 'all');\n\n      // Update the outer dimensions.\n      svg.attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom);\n\n      // Update the inner dimensions.\n      g = svg.select('g')\n        .attr('transform', `translate(${margin.left},${\n          margin.top})`);\n\n      xDomain = d3.extent(data, d => distanceExtractor(d));\n      x.domain(xDomain);\n\n      // Return an array with the min and max value of the min/max values of\n      // each lines.\n      const yDomain = function() {\n        let elevationsValues = [];\n        let extent, name;\n        // Get min/max values (extent) of each lines.\n        for (name in linesConfiguration) {\n          extent = d3.extent(data, d => linesConfiguration[name].zExtractor(d));\n          elevationsValues = elevationsValues.concat(extent);\n        }\n        return [\n          Math.min.apply(null, elevationsValues),\n          Math.max.apply(null, elevationsValues)\n        ];\n      }();\n\n      y.domain(yDomain);\n\n      // set the ratio according to the horizontal distance\n      if (scaleModifier !== undefined) {\n        scaleModifier(x, y, width, height);\n      } else {\n        // By default, add a small padding so that it looks nicer\n        const padding = (yDomain[1] - yDomain[0]) * 0.1;\n        y.domain([yDomain[0] - padding, yDomain[1] + padding]);\n      }\n\n      // Update the area path.\n      if (numberOfLines === 1) {\n        g.select('.area')\n          .transition()\n          .attr('d', area);\n      }\n\n      // Set style and update the lines paths and y hover guides for each lines.\n      let line, name, yHover;\n      for (name in linesConfiguration) {\n        // Set style of each line and add a class with its respective name.\n        gEnter.append('path').attr('class', `line ${name}`)\n          .style('stroke', linesConfiguration[name].color || '#F00')\n          .style('fill', 'none');\n\n        // Set y hover guides\n        yHover = gEnter.append('g').attr('class', `y grid-hover ${name}`);\n        yHover.append('svg:line').attr('stroke-dasharray', '5,5');\n        yHover.append('text');\n\n        // Configure the d3 line.\n        line = d3.line()\n          .x(d => x(distanceExtractor(d)))\n          .y(d => y(linesConfiguration[name].zExtractor(d)));\n\n        // Update path for the line.\n        g.select(`.line.${name}`)\n          .transition()\n          .attr('d', line);\n      }\n\n      if (xDomain[1] > 2000) {\n        xFactor = 1000;\n        xUnits = 'km';\n      } else {\n        xFactor = 1;\n        xUnits = 'm';\n      }\n\n      if (!light) {\n        xAxis.tickFormat(d => formatter.xtick(d / xFactor, xUnits));\n        if (lightXAxis) {\n          xAxis.tickValues([0, x.domain()[1]]);\n        }\n\n        yAxis.tickFormat(d => formatter.ytick(d, 'm'));\n\n        g.select('.x.axis')\n          .transition()\n          .call(xAxis);\n\n        g.select('.x.label')\n          .text(`${xAxisLabel} [${xUnits}]`)\n          .style('fill', 'grey')\n          .style('shape-rendering', 'crispEdges');\n\n        // Avoid too much lines with overlapping labels in small profiles\n        if (height / 15 < 10) {\n          yAxis.ticks(height / 15);\n        }\n\n        g.select('.y.axis')\n          .transition()\n          .call(yAxis);\n      }\n\n      g.select('.grid-y')\n        .transition()\n        .call(yAxis.tickSize(-width, 0).tickFormat(''))\n        .selectAll('.tick line')\n        .style('stroke', '#ccc')\n        .style('opacity', 0.7);\n\n      g.selectAll('.axis').selectAll('path, line')\n        .style('fill', 'none')\n        .style('stroke', '#000')\n        .style('shape-rendering', 'crispEdges');\n\n      g.select('.grid-y').select('path')\n        .style('stroke', 'none');\n\n      g.selectAll('.grid-hover line')\n        .style('stroke', '#222')\n        .style('opacity', 0.8);\n\n      g.select('.overlay')\n        .on('mouseout', mouseout)\n        .on('mousemove', mousemove);\n\n      function mousemove() {\n        const mouseX = d3.mouse(this)[0];\n        const x0 = x.invert(mouseX);\n\n        profile.highlight(x0);\n      }\n\n      function mouseout() {\n        profile.clearHighlight();\n      }\n    });\n  };\n\n  /**\n   * Remove any highlight.\n   * Fire the outCallback callback.\n   */\n  profile.clearHighlight = function() {\n    g.selectAll('.grid-hover')\n      .style('display', 'none');\n    outCallback.call(null);\n  };\n\n  /**\n   * Highlight the given distance and corresponding elevation on chart.\n   * Fire the hoverCallback callback with corresponding point.\n   * @param {number} distance Distance.\n   */\n  profile.highlight = function(distance) {\n    const data = svg.datum();\n    const i = bisectDistance(data, distance);\n    if (i >= data.length) {\n      return;\n    }\n\n    const point = data[i];\n    const dist = distanceExtractor(point);\n    let elevation;\n    const elevations = [];\n    const elevationsRef = {};\n    let lineName;\n\n    for (lineName in linesConfiguration) {\n      elevation = linesConfiguration[lineName].zExtractor(point);\n      elevations.push(elevation);\n      elevationsRef[lineName] = elevation;\n      g.select(`.y.grid-hover.${lineName}`)\n        .style('display', 'inline')\n        .select('line')\n        .attr('x1', x(0))\n        .attr('y1', y(elevation))\n        .attr('x2', width)\n        .attr('y2', y(elevation));\n    }\n\n    g.select('.x.grid-hover')\n      .style('display', 'inline')\n      .select('line')\n      .attr('x1', x(dist))\n      .attr('y1', height)\n      .attr('x2', x(dist))\n      .attr('y2', y(Math.max.apply(null, elevations)));\n\n    const right = dist > xDomain[1] / 2;\n    let xtranslate = x(dist);\n    xtranslate += right ? -10 : 10;\n\n    g.select('.x.grid-hover text')\n      .text(formatter.xhover(dist / xFactor, xUnits))\n      .style('text-anchor', right ? 'end' : 'start')\n      .attr('transform', `translate(${xtranslate},${\n        height - 10})`);\n\n    const yUnits = 'm';\n    // Display altitude on guides only if there is one line.\n    if (numberOfLines === 1) {\n      g.select('.y.grid-hover text')\n        .text(formatter.yhover(elevations[0], 'm'))\n        .style('text-anchor', right ? 'end' : 'start')\n        .attr('transform', `translate(${xtranslate},${\n          y(elevations[0]) - 10})`);\n    }\n    hoverCallback.call(null, point, dist / xFactor, xUnits, elevationsRef,\n      yUnits);\n  };\n\n\n  profile.showPois = function(pois) {\n    pois = pois !== undefined ? pois : [];\n    googAsserts.assert(pois.length === 0 || poiExtractor !== undefined);\n\n    const pe = poiExtractor;\n    const g = svg.select('g');\n    const profileData = svg.datum();\n    const ps = g.select('.pois');\n\n    const p = ps.selectAll('.poi').data(pois, (d) => {\n      const i = bisectDistance(profileData, Math.round(pe.dist(d) * 10) / 10, 1);\n      const point = profileData[i];\n      if (point) {\n        let lineName;\n        const elevations = [];\n        for (lineName in linesConfiguration) {\n          elevations.push(linesConfiguration[lineName].zExtractor(point));\n        }\n        const z = Math.max.apply(null, elevations);\n        pe.z(d, z);\n      }\n      return pe.id(d);\n    });\n\n    const poiEnterG = p.enter()\n      .append('g')\n      .attr('class', 'poi');\n\n    poiEnterG.append('text')\n      .attr('x', light ? 0 : 9)\n      .attr('dy', '.35em')\n      .attr('text-anchor', light ? 'middle' : 'start');\n\n    poiEnterG.append('line')\n      .style('shape-rendering', 'crispEdges');\n\n    poiEnterG.style('opacity', 0)\n      .transition()\n      .duration(1000)\n      .delay(100)\n      .style('opacity', 1);\n\n    poiEnterG.selectAll('text')\n      .attr('transform', (d) => {\n        if (light) {\n          return ['translate(',\n            x(pe.dist(d)), ',',\n            y(pe.z(d)) - 10, ')'\n          ].join('');\n        } else {\n          return ['translate(',\n            x(pe.dist(d)), ',',\n            y(pe.z(d)) - 20, ') rotate(', poiLabelAngle, ')'\n          ].join('');\n        }\n      })\n      .text(d => pe.sort(d) + (light ? '' : (` - ${pe.title(d)}`)));\n\n    poiEnterG.selectAll('line')\n      .style('stroke', 'grey')\n      .attr('x1', d => x(pe.dist(d)))\n      .attr('y1', d => y(y.domain()[0]))\n      .attr('x2', d => x(pe.dist(d)))\n      .attr('y2', d => y(pe.z(d)));\n\n    // remove unused pois\n    poiEnterG.exit().remove();\n  };\n\n  function clearPois() {\n    profile.showPois([]);\n  }\n\n\n  return profile;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.profile.elevationComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoProfileD3Elevation from 'ngeo/profile/d3Elevation.js';\n\nimport {select} from 'd3-selection';\nconst d3 = {\n  select,\n};\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoProfile', [\n  ngeoMiscDebounce.name\n]);\n\n\n/**\n * Provides a directive used to insert an elevation profile chart\n * in the DOM.\n *\n * Example:\n *\n *      <div ngeo-profile=\"ctrl.profileData\"\n *        ngeo-profile-options=\"ctrl.profileOptions\"\n *        ngeo-profile-pois=\"ctrl.profilePois\">\n *      </div>\n *\n * Where \"ctrl.profileOptions\" is of type {@link ngeox.profile.ProfileOptions};\n * \"ctrl.profileData\" and \"ctrl.profilePois\" are arrays which will be\n * processed by {@link ngeox.profile.ElevationExtractor} and\n * {@link ngeox.profile.PoiExtractor}.\n *\n * See our live example: [../examples/profile.html](../examples/profile.html)\n *\n * @htmlAttribute {?Object} ngeo-profile The profile data.\n * @htmlAttribute {ngeox.profile.ProfileOptions} ngeo-profile-options The options.\n * @htmlAttribute {?Array} ngeo-profile-pois The data for POIs.\n * @htmlAttribute {*} ngeo-profile-highlight Any property on the scope which\n * evaluated value may correspond to distance from origin.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoProfile\n */\nexports.directive_ = function(ngeoDebounce) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const optionsAttr = attrs['ngeoProfileOptions'];\n      googAsserts.assert(optionsAttr !== undefined);\n\n      const selection = d3.select(element[0]);\n      let profile, elevationData, poiData;\n\n      scope.$watchCollection(optionsAttr, (newVal) => {\n\n        const options = /** @type {ngeox.profile.ProfileOptions} */\n                (olObj.assign({}, newVal));\n\n        if (options !== undefined) {\n\n          // proxy the hoverCallback and outCallbackin order to be able to\n          // call $applyAsync\n          //\n          // We're using $applyAsync here because the callback may be\n          // called inside the Angular context. For example, it's the case\n          // when the user hover's the line geometry on the map and the\n          // profileHighlight property is changed.\n          //\n          // For that reason we use $applyAsync instead of $apply here.\n          if (options.hoverCallback !== undefined) {\n            const origHoverCallback = options.hoverCallback;\n            options.hoverCallback = function(...args) {\n              origHoverCallback(...args);\n              scope.$applyAsync();\n            };\n          }\n\n          if (options.outCallback !== undefined) {\n            const origOutCallback = options.outCallback;\n            options.outCallback = function() {\n              origOutCallback();\n              scope.$applyAsync();\n            };\n          }\n\n          profile = ngeoProfileD3Elevation(options);\n          refreshData();\n        }\n      });\n\n      scope.$watch(attrs['ngeoProfile'], (newVal, oldVal) => {\n        elevationData = newVal;\n        refreshData();\n      });\n\n      scope.$watch(attrs['ngeoProfilePois'], (newVal, oldVal) => {\n        poiData = newVal;\n        refreshData();\n      });\n\n      scope.$watch(attrs['ngeoProfileHighlight'],\n        (newVal, oldVal) => {\n          if (newVal === undefined) {\n            return;\n          }\n          if (newVal > 0) {\n            profile.highlight(newVal);\n          } else {\n            profile.clearHighlight();\n          }\n        });\n\n      olEvents.listen(window, 'resize', ngeoDebounce(refreshData, 50, true));\n\n      function refreshData() {\n        if (profile !== undefined) {\n          selection.datum(elevationData).call(profile);\n          if (elevationData !== undefined) {\n            profile.showPois(poiData);\n          }\n        }\n      }\n    }\n  };\n};\n\nexports.directive('ngeoProfile', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.profile.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olOverlay from 'ol/Overlay.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olObj from 'ol/obj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadCsv from 'ngeo/download/Csv.js';\n\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProfileElevationComponent from 'ngeo/profile/elevationComponent.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfProfile', [\n  ngeoDownloadCsv.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoProfileElevationComponent.name,\n]);\n\n\nexports.value('gmfProfileTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfProfileTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/profile';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/profile', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfProfileTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfProfileTemplateUrl($element, $attrs, gmfProfileTemplateUrl) {\n  return gmfProfileTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component that display a profile panel. This profile use the given\n * LineString geometry to request the c2cgeoportal profile.json service. The\n * raster used in the request are the keys of the 'linesconfiguration' object.\n * The 'map' attribute is optional and are only used to display on the map the\n * information that concern the hovered point (in the profile and on the map)\n * of the line.\n * This profile relies on the ngeo.profile (d3) and ngeo.ProfileComponent.\n *\n * Example:\n *\n *      <gmf-profile\n *        gmf-profile-active=\"ctrl.profileActive\"\n *        gmf-profile-line=\"ctrl.profileLine\"\n *        gmf-profile-map=\"::ctrl.map\"\n *        gmf-profile-linesconfiguration=\"::ctrl.profileLinesconfiguration\">\n *      </gmf-profile>\n *\n *\n * @htmlAttribute {boolean} gmf-profile-active Active the component.\n * @htmlAttribute {ol.geom.LineString} gmf-profile-line The linestring geometry\n *     to use to draw the profile.\n * @htmlAttribute {ol.Map?} gmf-profile-map An optional map.\n * @htmlAttribute {Object.<string, gmfx.ProfileLineConfiguration>}\n *     gmf-profile-linesconfiguration The configuration of the lines. Each keys\n *     will be used to request elevation layers.\n * @htmlAttribute {ol.style.Style?} gmf-profile-hoverpointstyle Optional style\n *     for the 'on Hover' point on the line.\n * @htmlAttribute {number?} gmf-profile-numberofpoints Optional maximum limit of\n *     points to request. Default to 100.\n * @htmlAttribute {Object.<string, *>?} gmf-profile-options Optional options\n *     object like {@link ngeox.profile.ProfileOptions} but without any\n *     mandatory value. Will be passed to the ngeo profile component. Providing\n *     'linesConfiguration', 'distanceExtractor', hoverCallback, outCallback\n *     or i18n will override native gmf profile values.\n *\n * @ngdoc component\n * @ngname gmfProfile\n */\nexports.component_ = {\n  controller: 'GmfProfileController as ctrl',\n  bindings: {\n    'active': '=gmfProfileActive',\n    'line': '=gmfProfileLine',\n    'getMapFn': '&?gmfProfileMap',\n    'getLinesConfigurationFn': '&gmfProfileLinesconfiguration',\n    'getHoverPointStyleFn': '&?gmfProfileHoverpointstyle',\n    'getNbPointsFn': '&?gmfProfileNumberofpoints',\n    'getOptionsFn': '&?gmfProfileOptions'\n  },\n  templateUrl: gmfProfileTemplateUrl\n};\n\nexports.component('gmfProfile', exports.component_);\n\n\n/**\n * @param {angular.Scope} $scope Angular scope.\n * @param {angular.$http} $http Angular http service.\n * @param {angular.JQLite} $element Element.\n * @param {angular.$filter} $filter Angular filter\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Feature overlay\n *     manager.\n * @param {string} gmfProfileJsonUrl URL of GMF service JSON profile.\n * @param {ngeo.download.Csv} ngeoCsvDownload CSV Download service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfProfileController\n */\nexports.Controller_ = function($scope, $http, $element, $filter,\n  gettextCatalog, ngeoFeatureOverlayMgr, gmfProfileJsonUrl,\n  ngeoCsvDownload) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {angular.$filter}\n   * @export\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.pointHoverOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.gmfProfileJsonUrl_ = gmfProfileJsonUrl;\n\n  /**\n   * @type {ngeo.download.Csv}\n   * @private\n   */\n  this.ngeoCsvDownload_ = ngeoCsvDownload;\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?Object<string, !gmfx.ProfileLineConfiguration>}\n   * @private\n   */\n  this.linesConfiguration_ = null;\n\n  /**\n   * @type {!Array.<string>}\n   * @private\n   */\n  this.layersNames_ = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.nbPoints_ = 100;\n\n  /**\n   * @type {ol.geom.LineString}\n   * @export\n   */\n  this.line;\n\n  /**\n   * @type {Array.<Object>}\n   * @export\n   */\n  this.profileData = [];\n\n  /**\n   * @type {gmfx.ProfileHoverPointInformations}\n   * @export\n   */\n  this.currentPoint = {\n    coordinate: undefined,\n    distance: undefined,\n    elevations: {},\n    xUnits: undefined,\n    yUnits: undefined\n  };\n\n  /**\n   * Distance to highlight on the profile. (Property used in ngeo.Profile.)\n   * @type {number}\n   * @export\n   */\n  this.profileHighlight = -1;\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltip_ = null;\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n  /**\n   * @type {ol.Feature}\n   * @private\n   */\n  this.snappedPoint_ = new olFeature();\n  this.pointHoverOverlay_.addFeature(this.snappedPoint_);\n\n  /**\n   * @type {ngeox.profile.I18n}\n   * @private\n   */\n  this.profileLabels_ = {\n    xAxis: gettextCatalog.getString('Distance'),\n    yAxis: gettextCatalog.getString('Elevation')\n  };\n\n\n  /**\n   * @type {?ngeox.profile.ProfileOptions}\n   * @export\n   */\n  this.profileOptions = null;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = false;\n\n  /**\n   * @type {ol.EventsKey}\n   * @private\n   */\n  this.pointerMoveKey_;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isErrored = false;\n\n\n  // Watch the active value to activate/deactive events listening.\n  $scope.$watch(\n    () => this.active,\n    (newValue, oldValue) => {\n      if (oldValue !== newValue) {\n        this.updateEventsListening_();\n      }\n    });\n\n  // Watch the line to update the profileData (data for the chart).\n  $scope.$watch(\n    () => this.line,\n    (newLine, oldLine) => {\n      if (oldLine !== newLine) {\n        this.update_();\n      }\n    });\n\n  this.updateEventsListening_();\n};\n\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.map_ = this['getMapFn'] ? this['getMapFn']() : null;\n  this.nbPoints_ = this['getNbPointsFn'] ? this['getNbPointsFn']() : 100;\n\n  let hoverPointStyle;\n  const hoverPointStyleFn = this['getHoverPointStyleFn'];\n  if (hoverPointStyleFn) {\n    hoverPointStyle = hoverPointStyleFn();\n    googAsserts.assertInstanceof(hoverPointStyle, olStyleStyle);\n  } else {\n    hoverPointStyle = new olStyleStyle({\n      image: new olStyleCircle({\n        fill: new olStyleFill({color: '#ffffff'}),\n        radius: 3\n      })\n    });\n  }\n  this.pointHoverOverlay_.setStyle(hoverPointStyle);\n\n  const linesConfiguration = this['getLinesConfigurationFn']();\n  googAsserts.assertInstanceof(linesConfiguration, Object);\n\n  this.linesConfiguration_ = linesConfiguration;\n\n  for (const name in this.linesConfiguration_) {\n    // Keep an array of all layer names.\n    this.layersNames_.push(name);\n    // Add generic zExtractor to lineConfiguration object that doesn't have one.\n    const lineConfig = this.linesConfiguration_[name];\n    if (!lineConfig.zExtractor) {\n      this.linesConfiguration_[name].zExtractor = this.getZFactory_(name);\n    }\n  }\n\n  this.profileOptions = /** @type {ngeox.profile.ProfileOptions} */ ({\n    linesConfiguration: this.linesConfiguration_,\n    distanceExtractor: this.getDist_,\n    hoverCallback: this.hoverCallback_.bind(this),\n    outCallback: this.outCallback_.bind(this),\n    i18n: this.profileLabels_\n  });\n\n  const optionsFn = this['getOptionsFn'];\n  if (optionsFn) {\n    const options = optionsFn();\n    googAsserts.assertObject(options);\n    olObj.assign(this.profileOptions, options);\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.update_ = function() {\n  this.isErrored = false;\n  if (this.line) {\n    this.getJsonProfile_();\n  } else {\n    this.profileData = [];\n  }\n  this.active = !!this.line;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateEventsListening_ = function() {\n  if (this.active && this.map_ !== null) {\n    this.pointerMoveKey_ = olEvents.listen(this.map_, 'pointermove',\n      this.onPointerMove_.bind(this));\n  } else {\n    olEvents.unlistenByKey(this.pointerMoveKey_);\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n * @private\n */\nexports.Controller_.prototype.onPointerMove_ = function(e) {\n  if (e.dragging || !this.line) {\n    return;\n  }\n  const coordinate = this.map_.getEventCoordinate(e.originalEvent);\n  const closestPoint = this.line.getClosestPoint(coordinate);\n  // compute distance to line in pixels\n  const eventToLine = new olGeomLineString([closestPoint, coordinate]);\n  const pixelDist = eventToLine.getLength() / this.map_.getView().getResolution();\n\n  if (pixelDist < 16) {\n    this.profileHighlight = this.getDistanceOnALine_(closestPoint, this.line);\n  } else {\n    this.profileHighlight = -1;\n  }\n  this.$scope_.$apply();\n};\n\n\n/**\n * Return the distance between the beginning of the line and the given point.\n * The point must be on the line. If not, this function will return the total\n * length of the line.\n * @param {ol.Coordinate} pointOnLine A point on the given line.\n * @param {ol.geom.LineString} line A line.\n * @return {number} A distance.\n * @private\n */\nexports.Controller_.prototype.getDistanceOnALine_ = function(pointOnLine,\n  line) {\n  let segment;\n  let distOnLine = 0;\n  const fakeExtent = [\n    pointOnLine[0] - 0.5,\n    pointOnLine[1] - 0.5,\n    pointOnLine[0] + 0.5,\n    pointOnLine[1] + 0.5\n  ];\n  this.line.forEachSegment((firstPoint, lastPoint) => {\n    segment = new olGeomLineString([firstPoint, lastPoint]);\n    // Is the pointOnLine on this swegement ?\n    if (segment.intersectsExtent(fakeExtent)) {\n      // If the closestPoint is on the line, add the distance between the first\n      // point of this segment and the pointOnLine.\n      segment.setCoordinates([firstPoint, pointOnLine]);\n      return distOnLine += segment.getLength(); // Assign value and break;\n    } else {\n      // Do the sum of the length of each eventual previous segment.\n      distOnLine += segment.getLength();\n    }\n  });\n  return distOnLine;\n};\n\n\n/**\n * @param {Object} point Point.\n * @param {number} dist distance on the line.\n * @param {string} xUnits X units label.\n * @param {Object.<string, number>} elevationsRef Elevations references.\n *  @param {string} yUnits Y units label.\n * @private\n */\nexports.Controller_.prototype.hoverCallback_ = function(point, dist, xUnits,\n  elevationsRef, yUnits) {\n  // Update information point.\n  let ref;\n  const coordinate = [point.x, point.y];\n  for (ref in elevationsRef) {\n    this.currentPoint.elevations[ref] = elevationsRef[ref];\n  }\n  this.currentPoint.distance = dist;\n  this.currentPoint.xUnits = xUnits;\n  this.currentPoint.yUnits = yUnits;\n  this.currentPoint.coordinate = coordinate;\n\n  // Update hover.\n  const geom = new olGeomPoint(coordinate);\n  this.createMeasureTooltip_();\n  this.measureTooltipElement_.innerHTML = this.getTooltipHTML_();\n  this.measureTooltip_.setPosition(coordinate);\n  this.snappedPoint_.setGeometry(geom);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.outCallback_ = function() {\n  // Reset information point.\n  this.currentPoint.coordinate = undefined;\n  this.currentPoint.distance = undefined;\n  this.currentPoint.elevations = {};\n  this.currentPoint.xUnits = undefined;\n  this.currentPoint.yUnits = undefined;\n\n  // Reset hover.\n  this.removeMeasureTooltip_();\n  this.snappedPoint_.setGeometry(null);\n};\n\n\n/**\n * @return {string} A texte formatted to a tooltip.\n * @private\n */\nexports.Controller_.prototype.getTooltipHTML_ = function() {\n  const separator = ' : ';\n  let elevationName, translatedElevationName;\n  const innerHTML = [];\n  const number = this.$filter_('number');\n  const DistDecimal = this.currentPoint.xUnits === 'm' ? 0 : 2;\n  innerHTML.push(\n    `${this.profileLabels_.xAxis +\n      separator +\n      number(this.currentPoint.distance, DistDecimal)\n    } ${\n      this.currentPoint.xUnits}`\n  );\n  for (elevationName in this.currentPoint.elevations) {\n    translatedElevationName = this.gettextCatalog_.getString(elevationName);\n    innerHTML.push(\n      `${translatedElevationName +\n        separator +\n        number(this.currentPoint.elevations[elevationName], 0)\n      } ${this.currentPoint.yUnits}`\n    );\n  }\n  return innerHTML.join('</br>');\n};\n\n\n/**\n * Creates a new 'hover' tooltip\n * @private\n */\nexports.Controller_.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.className += 'tooltip ngeo-tooltip-measure';\n  this.measureTooltip_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center'\n  });\n  this.map_.addOverlay(this.measureTooltip_);\n};\n\n\n/**\n * Destroy the 'hover' tooltip\n * @private\n */\nexports.Controller_.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(\n      this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.map_.removeOverlay(this.measureTooltip_);\n  }\n};\n\n\n/**\n * Return the color value of a gmfx.ProfileLineConfiguration.\n * @param {string} layerName name of the elevation layer.\n * @return {string|undefined} A HEX color or undefined is nothing is found.\n * @export\n */\nexports.Controller_.prototype.getColor = function(layerName) {\n  const lineConfiguration = this.linesConfiguration_[layerName];\n  if (!lineConfiguration) {\n    return undefined;\n  }\n  return lineConfiguration.color;\n};\n\n\n/**\n * Return a copy of the existing layer names.\n * @return {Array.<string>} The names of layers.\n * @export\n */\nexports.Controller_.prototype.getLayersNames = function() {\n  return this.layersNames_.slice(0);\n};\n\n\n/**\n * @param {string} layerName name of the elevation layer.\n * @return {function(Object):number} Z extractor function.\n * @private\n */\nexports.Controller_.prototype.getZFactory_ = function(layerName) {\n  /**\n   * Generic GMF extractor for the 'given' value in 'values' in profileData.\n   * @param {Object} item The item.\n   * @return {number} The elevation.\n   * @private\n   */\n  const getZFn = function(item) {\n    if ('values' in item && layerName in item['values']) {\n      return parseFloat(item['values'][layerName]);\n    }\n    return 0;\n  };\n  return getZFn;\n};\n\n\n/**\n * Extractor for the 'dist' value in profileData.\n * @param {Object} item The item.\n * @return {number} The distance.\n * @private\n */\nexports.Controller_.prototype.getDist_ = function(item) {\n  if ('dist' in item) {\n    return item['dist'];\n  }\n  return 0;\n};\n\n\n/**\n * Request the profile.\n * @private\n */\nexports.Controller_.prototype.getJsonProfile_ = function() {\n  const geom = {\n    'type': 'LineString',\n    'coordinates': this.line.getCoordinates()\n  };\n\n  const params = {\n    'layers': this.layersNames_.join(','),\n    'geom': JSON.stringify(geom),\n    'nbPoints': this.nbPoints_\n  };\n\n  /** @type {Function} */ (this.$http_)({\n    url: this.gmfProfileJsonUrl_,\n    method: 'POST',\n    params: params,\n    paramSerializer: '$httpParamSerializerJQLike',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n  }).then(\n    this.getProfileDataSuccess_.bind(this),\n    this.getProfileDataError_.bind(this)\n  );\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\nexports.Controller_.prototype.getProfileDataSuccess_ = function(resp) {\n  const profileData = resp.data['profile'];\n  if (profileData instanceof Array) {\n    this.profileData = profileData;\n  }\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\nexports.Controller_.prototype.getProfileDataError_ = function(resp) {\n  this.isErrored = true;\n  console.error('Can not get JSON profile.');\n};\n\n\n/**\n * Request the csv profile with the current profile data.\n * @export\n */\nexports.Controller_.prototype.downloadCsv = function() {\n  if (this.profileData.length === 0) {\n    return;\n  }\n\n  /** @type {Array.<ngeox.GridColumnDef>} */\n  const headers = [];\n  let hasDistance = false;\n  const firstPoint = this.profileData[0];\n  if ('dist' in firstPoint) {\n    headers.push({name: 'distance'});\n    hasDistance = true;\n  }\n  const layers = [];\n  for (const layer in firstPoint['values']) {\n    headers.push({'name': layer});\n    layers.push(layer);\n  }\n  headers.push({name: 'x'});\n  headers.push({name: 'y'});\n\n  const rows = this.profileData.map((point) => {\n    const row = {};\n    if (hasDistance) {\n      row['distance'] = point['dist'];\n    }\n\n    layers.forEach((layer) => {\n      row[layer] = point['values'][layer];\n    });\n\n    row['x'] = point['x'];\n    row['y'] = point['y'];\n\n    return row;\n  });\n\n  this.ngeoCsvDownload_.startDownload(rows, headers, 'profile.csv');\n};\n\n\nexports.controller('GmfProfileController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.profile.drawLineComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport olCollection from 'ol/Collection.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olMap from 'ol/Map.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawProfileLine', [\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\n\n/**\n * Simple directive that can be put on any element. The directive listen on\n * clicks events to allow/disallow to draw one line (and only one) on the\n * map. Typically used to draw the line that will serve the gmf.Profile.\n *\n * Example:\n *\n *      <gmf-drawprofileline\n *        gmf-drawprofileline-active=\"mainCtrl.drawProfileActive\"\n *        gmf-drawprofileline-map=\"mainCtrl.map\"\n *        gmf-drawprofileline-line=\"mainCtrl.line\"\n *      </gmf-drawprofileline>\n *\n *\n * @htmlAttribute {ol.Map} gmf-drawprofileline-map The map.\n * @htmlAttribute {ol.geom.LineString} gmf-drawprofileline-line The variable to\n *     connect with the drawed line.\n * @htmlAttribute {boolean=} gmf-drawprofileline-active Active the component.\n * @htmlAttribute {ol.style.Style=} gmf-drawprofileline-style Optional style\n *     for the drawed line.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname gmfDrawprofileline\n */\nexports.directive_ = function() {\n  return {\n    scope: true,\n    controller: 'GmfDrawprofilelineController as ctrl',\n    restrict: 'A',\n    bindToController: {\n      'getMapFn': '&gmfDrawprofilelineMap',\n      'line': '=gmfDrawprofilelineLine',\n      'active': '=gmfDrawprofilelineActive',\n      'getStyleFn': '&?gmfDrawprofilelineStyle'\n    }\n  };\n};\n\n\nexports.directive('gmfDrawprofileline',\n  exports.directive_);\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Feature overlay\n *     manager.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfDrawprofilelineController\n */\nexports.Controller_ = function($scope, $element, $timeout,\n  ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {?ol.geom.LineString}\n   * @export\n   */\n  this.line;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  const overlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n  overlay.setFeatures(this.features_);\n\n  let style;\n  const styleFn = this['getStyleFn'];\n  if (styleFn) {\n    style = styleFn();\n    googAsserts.assertInstanceof(style, olStyleStyle);\n  } else {\n    style = new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 2\n      })\n    });\n  }\n  overlay.setStyle(style);\n\n  /**\n   * @type {!ol.interaction.Draw}\n   * @export\n   */\n  this.interaction = new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    features: this.features_\n  });\n\n  ngeoMiscDecorate.interaction(this.interaction);\n\n  // Clear the line as soon as the interaction is activated.\n  this.interaction.on('change:active', () => {\n    if (this.interaction.getActive()) {\n      this.clear_();\n    }\n  });\n\n  // Update the profile with the new geometry.\n  this.interaction.on('drawend', (event) => {\n    this.line = event.feature.getGeometry();\n    // using timeout to prevent double click to zoom the map\n    $timeout(() => {\n      this.interaction.setActive(false);\n    }, 0);\n  });\n\n  // Line may be removed from an other component\n  // for example closing the chart panel\n  $scope.$watch(\n    () => this.line,\n    (newLine, oldLine) => {\n      if (newLine === null) {\n        this.clear_();\n      }\n    });\n\n  $scope.$watch(\n    () => this.active,\n    (newValue) => {\n      if (newValue === false) {\n        this.clear_();\n      }\n      // Will activate the interaction automatically the first time\n      this.interaction.setActive(this.active);\n    }\n  );\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const map = this['getMapFn']();\n  googAsserts.assertInstanceof(map, olMap);\n  this.map_ = map;\n  this.map_.addInteraction(this.interaction);\n};\n\n\n/**\n * Clear the overlay and profile line.\n * @private\n */\nexports.Controller_.prototype.clear_ = function() {\n  this.features_.clear();\n  this.line = null;\n};\n\n\nexports.controller('GmfDrawprofilelineController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.profile.module\n */\nimport gmfProfileComponent from 'gmf/profile/component.js';\nimport gmfProfileDrawLineComponent from 'gmf/profile/drawLineComponent.js';\n\nimport './profile.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfProfileModule', [\n  gmfProfileComponent.name,\n  gmfProfileDrawLineComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.query.bboxQueryComponent\n */\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olInteractionDragBox from 'ol/interaction/DragBox.js';\nimport * as olEventsCondition from 'ol/events/condition.js';\n\nconst exports = angular.module('ngeoBboxQuery', [\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\n/**\n * Provides a \"bbox query\" directive.\n *\n * This directive is responsible of binding a map and the ngeo query service\n * together. While active, drawing a bbox while CTRL or the 'meta' key is pressed\n * issues a request to the query service.\n *\n * This directive doesn't require to be rendered in a visible DOM element, but\n * it could be used with a ngeo-btn to manage the activation of the directive.\n * See below an example without any use of UI:\n *\n * Example:\n *\n *      <span\n *        ngeo-bbox-query=\"\"\n *        ngeo-bbox-query-map=\"::ctrl.map\"\n *        ngeo-bbox-query-limit=\"50\"\n *        ngeo-bbox-query-active=\"ctrl.queryActive\">\n *        ngeo-bbox-query-autoclear=\"ctrl.queryAutoClear\">\n *      </span>\n *\n * See the live example: [../examples/bboxquery.html](../examples/bboxquery.html)\n *\n * @param {ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBboxQuery\n */\nexports.directive_ = function(ngeoMapQuerent) {\n  return {\n    restrict: 'A',\n    scope: false,\n    link: (scope, elem, attrs) => {\n      /**\n       * @type {ol.Map}\n       */\n      const map = scope.$eval(attrs['ngeoBboxQueryMap']);\n\n      const interaction = new olInteractionDragBox({\n        condition: olEventsCondition.platformModifierKeyOnly\n      });\n\n      /**\n       * Called when a bbox is drawn while this controller is active. Issue\n       * a request to the query service using the extent that was drawn.\n       * @param {ol.interaction.DragBox.Event} evt Event.\n       */\n      const handleBoxEnd = function(evt) {\n        const extent = interaction.getGeometry().getExtent();\n        ngeoMapQuerent.issue({\n          limit: scope.$eval(attrs['ngeoBboxQueryLimit']),\n          extent: extent,\n          map: map\n        });\n      };\n      interaction.on('boxend', handleBoxEnd);\n\n      // watch 'active' property -> activate/deactivate accordingly\n      scope.$watch(attrs['ngeoBboxQueryActive'],\n        (newVal, oldVal) => {\n          if (newVal) {\n            // activate\n            map.addInteraction(interaction);\n          } else {\n            // deactivate\n            map.removeInteraction(interaction);\n            if (scope.$eval(attrs['ngeoBboxQueryAutoclear']) !== false) {\n              ngeoMapQuerent.clear();\n            }\n          }\n        }\n      );\n    }\n  };\n};\n\nexports.directive('ngeoBboxQuery', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.raster.component\n */\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport * as olEvents from 'ol/events.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfRasterComponent', [\n  gmfRasterRasterService.module.name,\n  ngeoMiscDebounce.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/raster/widgetComponent', require('./widgetComponent.html'));\n});\n\n\nexports.value('gmfElevationwidgetTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfElevationwidgetTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/raster/widgetComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfElevationwidgetTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfElevationwidgetTemplateUrl($attrs, gmfElevationwidgetTemplateUrl) {\n  return gmfElevationwidgetTemplateUrl($attrs);\n}\n\n\n/**\n * Provide a directive that set a value each 500ms with the elevation under the\n * mouse cursor position on the map. The value must come from the elevation\n * service of a c2cgeoportal server. The server's URL must be defined as\n * config value of the application.\n *\n * Example:\n *\n *      <span gmf-elevation\n *            gmf-elevation-active=\"elevationActive\"\n *            gmf-elevation-elevation=\"elevationValue\"\n *            gmf-elevation-layer=\"mainCtrl.elevationLayer\"\n *            gmf-elevation-map=\"::mainCtrl.map\">\n *            {{elevationValue | number:2}}m\n *      </span>\n *\n *\n * @htmlAttribute {boolean} gmf-elevation-active A boolean to set active or\n *     deactive the component.\n * @htmlAttribute {number} gmf-elevation-elevation The value to set with the\n *     elevation value.\n * @htmlAttribute {string} gmf-elevation-layer Elevation layer to use.\n * @htmlAttribute {ol.Map} gmf-elevation-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname gmfElevation\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    controller: 'GmfElevationController as ctrl',\n    bindToController: true,\n    scope: {\n      'active': '<gmfElevationActive',\n      'elevation': '=gmfElevationElevation',\n      'loading': '=?gmfElevationLoading',\n      'layer': '<gmfElevationLayer',\n      'map': '=gmfElevationMap'\n    },\n    link: (scope, element, attr) => {\n      const ctrl = scope['ctrl'];\n\n      // Watch active or not.\n      scope.$watch(() => ctrl.active, function(active) {\n        this.toggleActive_(active);\n      }.bind(ctrl));\n\n      // Watch current layer.\n      scope.$watch(() => ctrl.layer, function(layer) {\n        this.layer = layer;\n        this.elevation = null;\n      }.bind(ctrl));\n    }\n  };\n};\n\n\nexports.directive('gmfElevation', exports.component_);\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {ngeox.miscDebounce} ngeoDebounce Ngeo debounce factory\n * @param {gmf.raster.RasterService} gmfRaster Gmf Raster service\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfElevationController\n */\nexports.Controller_ = function($scope, ngeoDebounce, gmfRaster) {\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  /**\n   * @type {boolean}\n   */\n  this.active;\n\n  /**\n   * @type {!number|undefined}\n   * @export\n   */\n  this.elevation;\n\n  /**\n   * @type {string}\n   */\n  this.layer;\n\n  /**\n   * @type {ol.Map}\n   */\n  this.map;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.inViewport_ = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.loading = false;\n};\n\n/**\n * Active or deactive the request of the raster each 500 ms on pointermove.\n * @param {boolean} active true to make requests.\n * @private\n */\nexports.Controller_.prototype.toggleActive_ = function(active) {\n  this.elevation = undefined;\n  if (active) {\n    googAsserts.assert(this.listenerKeys_.length === 0);\n\n    // Moving the mouse clears previously displayed elevation\n    this.listenerKeys_.push(olEvents.listen(this.map, 'pointermove',\n      function(e) {\n        this.scope_.$apply(() => {\n          this.inViewport_ = true;\n          this.elevation = undefined;\n          this.loading = false;\n        });\n      }, this));\n\n    // Launch the elevation service request when the user stops moving the\n    // mouse for less short delay\n    this.listenerKeys_.push(olEvents.listen(this.map, 'pointermove',\n      this.ngeoDebounce_(this.pointerStop_.bind(this), 500, true)\n    ));\n\n    this.listenerKeys_.push(olEvents.listen(this.map.getViewport(), 'mouseout', () => {\n      this.scope_.$apply(() => {\n        this.elevation = undefined;\n        this.inViewport_ = false;\n        this.loading = false;\n      });\n    }));\n  } else {\n    this.elevation = undefined;\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n};\n\n\n/**\n * Request data from a raster from a MapBrowserPointerEvent's coordinates.\n * Called when the user stopped moving the mouse for 500ms.\n * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n * @private\n */\nexports.Controller_.prototype.pointerStop_ = function(e) {\n  if (this.inViewport_) {\n    this.loading = true;\n    const params = {\n      'layers': this.layer\n    };\n    this.gmfRaster_.getRaster(e.coordinate, params).then(\n      this.getRasterSuccess_.bind(this),\n      this.getRasterError_.bind(this)\n    );\n  }\n};\n\n\n/**\n * @param {Object.<string, number>} resp Response of the get Raster service.\n * @private\n */\nexports.Controller_.prototype.getRasterSuccess_ = function(resp) {\n  googAsserts.assert(this.layer, 'A layer should be selected');\n  this.elevation = resp[this.layer];\n  this.loading = false;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.getRasterError_ = function() {\n  console.error('Error on getting the raster.');\n  this.elevation = undefined;\n  this.loading = false;\n};\n\n\nexports.controller('GmfElevationController', exports.Controller_);\n\n\n/**\n * Provides a component which encapsulates the elevation component (see above)\n * in a button with dropdown menu to be included in a application directly.\n *\n * Example:\n *  <gmf-elevationwidget\n *      gmf-elevationwidget-map=\"::mainCtrl.map\"\n *      gmf-elevationwidget-layers=\"::mainCtrl.elevationLayers\"\n *      gmf-elevationwidget-active=\"mainCtrl.showInfobar\">\n *  </gmf-elevationwidget>\n *\n * @htmlAttribute {ol.Map} gmf-elevationwidget-map The map.\n * @htmlAttribute {Array.<string>} gmf-elevationwidget-layers The list of\n *     layers.\n * @htmlAttribute {boolean} gmf-elevationwidget-active Whether to activate the\n *     elevation component.\n *\n * @ngdoc component\n * @ngname gmfElevationwidget\n */\nexports.widgetComponent_ = {\n  controller: 'gmfElevationwidgetController as ctrl',\n  bindings: {\n    'map': '<gmfElevationwidgetMap',\n    'layers': '<gmfElevationwidgetLayers',\n    'active': '<gmfElevationwidgetActive'\n  },\n  templateUrl: gmfElevationwidgetTemplateUrl\n};\nexports.component('gmfElevationwidget', exports.widgetComponent_);\n\n\n/**\n * @constructor\n * @private\n * @ngdoc controller\n */\nexports.WidgetController_ = function() {\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!Array.<string>}\n   * @export\n   */\n  this.layers;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.selectedElevationLayer;\n};\n\n\nexports.WidgetController_.prototype.$onInit = function() {\n  this.selectedElevationLayer = this.layers[0];\n};\n\n\nexports.controller('gmfElevationwidgetController',\n  exports.WidgetController_);\n\n\nexport default exports;\n","/**\n * @module ngeo.print.Utils\n */\nimport * as olHas from 'ol/has.js';\nimport * as olMath from 'ol/math.js';\n\n/**\n * Provides a service with print utility functions.\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoPrintUtils\n */\nconst exports = function() {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.extentHalfHorizontalDistance_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.extentHalfVerticalDistance_;\n\n};\n\n\n/**\n * @const\n * @private\n */\nexports.INCHES_PER_METER_ = 39.37;\n\n\n/**\n * @const\n * @private\n */\nexports.DOTS_PER_INCH_ = 72;\n\n\n/**\n * Return a function to use as map postcompose listener for drawing a print\n * mask on the map.\n * @param {function():ol.Size} getSize User-defined function returning the\n *     size in dots of the map to print.\n * @param {function(olx.FrameState):number} getScale User-defined function\n *     returning the scale of the map to print.\n * @param {function():number=} opt_rotation User defined function returning the\n *     inclination of the canvas in degree (-180 to 180).\n * returning the scale of the map to print.\n * @return {function(ol.render.Event)} Function to use as a map postcompose\n * listener.\n * @export\n */\nexports.prototype.createPrintMaskPostcompose = function(getSize, getScale, opt_rotation) {\n  const self = this;\n\n  return (\n  /**\n        * @param {ol.render.Event} evt Postcompose event.\n        */\n    function(evt) {\n      const context = evt.context;\n      const frameState = evt.frameState;\n\n      const resolution = frameState.viewState.resolution;\n\n      const viewportWidth = frameState.size[0] * frameState.pixelRatio;\n      const viewportHeight = frameState.size[1] * frameState.pixelRatio;\n\n      const center = [viewportWidth / 2, viewportHeight / 2];\n\n      const size = getSize();\n      const height = size[1] * olHas.DEVICE_PIXEL_RATIO;\n      const width = size[0] * olHas.DEVICE_PIXEL_RATIO;\n      const scale = getScale(frameState);\n\n      const ppi = exports.DOTS_PER_INCH_;\n      const ipm = exports.INCHES_PER_METER_;\n\n      const extentHalfWidth =\n           (((width / ppi) / ipm) * scale / resolution) / 2;\n      self.extentHalfHorizontalDistance_ =\n           (((size[0] / ppi) / ipm) * scale) / 2;\n\n      const extentHalfHeight =\n           (((height / ppi) / ipm) * scale / resolution) / 2;\n      self.extentHalfVerticalDistance_ =\n           (((size[1] / ppi) / ipm) * scale) / 2;\n\n      // Draw a mask on the whole map.\n      context.beginPath();\n      context.moveTo(0, 0);\n      context.lineTo(viewportWidth, 0);\n      context.lineTo(viewportWidth, viewportHeight);\n      context.lineTo(0, viewportHeight);\n      context.lineTo(0, 0);\n      context.closePath();\n\n      // Draw the print zone\n      if (!opt_rotation) {\n        self.drawPrintZone_(context, center, extentHalfWidth,\n          extentHalfHeight);\n      } else {\n        const rotation = olMath.toRadians(opt_rotation());\n        self.drawPrintZoneWithRotation_(context, center, extentHalfWidth,\n          extentHalfHeight, rotation);\n      }\n\n      // Fill the mask\n      context.fillStyle = 'rgba(0, 5, 25, 0.5)';\n      context.fill();\n    }\n  );\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context of the Postcompose event.\n * @param {Array.<number>} center Center of the viewport (x; y).\n * @param {number} extentHalfWidth Extent half width.\n * @param {number} extentHalfHeight Extent half height.\n * @private\n */\nexports.prototype.drawPrintZone_ = function(context, center,\n  extentHalfWidth, extentHalfHeight) {\n  const minx = center[0] - extentHalfWidth;\n  const miny = center[1] - extentHalfHeight;\n  const maxx = center[0] + extentHalfWidth;\n  const maxy = center[1] + extentHalfHeight;\n\n  context.moveTo(minx, miny);\n  context.lineTo(minx, maxy);\n  context.lineTo(maxx, maxy);\n  context.lineTo(maxx, miny);\n  context.lineTo(minx, miny);\n  context.closePath();\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context of the Postcompose event.\n * @param {Array.<number>} center Center of the viewport (x; y).\n * @param {number} extentHalfWidth Extent half width.\n * @param {number} extentHalfHeight Extent half height.\n * @param {number} rotation Rotation value in radians.\n * @private\n */\nexports.prototype.drawPrintZoneWithRotation_ = function(context, center,\n  extentHalfWidth, extentHalfHeight, rotation) {\n  // diagonal = distance p1 to center.\n  const diagonal = Math.sqrt(Math.pow(extentHalfWidth, 2) +\n      Math.pow(extentHalfHeight, 2));\n  // gamma = angle between horizontal and diagonal (with rotation).\n  const gamma = Math.atan(extentHalfHeight / extentHalfWidth) - rotation;\n  // omega = angle between diagonal and vertical (with rotation).\n  const omega = Math.atan(extentHalfWidth / extentHalfHeight) - rotation;\n  // Calculation of each corner.\n  const x1 = center[0] - Math.cos(gamma) * diagonal;\n  const y1 = center[1] + Math.sin(gamma) * diagonal;\n  const x2 = center[0] + Math.sin(omega) * diagonal;\n  const y2 = center[1] + Math.cos(omega) * diagonal;\n  const x3 = center[0] + Math.cos(gamma) * diagonal;\n  const y3 = center[1] - Math.sin(gamma) * diagonal;\n  const x4 = center[0] - Math.sin(omega) * diagonal;\n  const y4 = center[1] - Math.cos(omega) * diagonal;\n\n  context.moveTo(x1, y1);\n  context.lineTo(x2, y2);\n  context.lineTo(x3, y3);\n  context.lineTo(x4, y4);\n  context.lineTo(x1, y1);\n  context.closePath();\n};\n\n\n/**\n * Get the optimal print scale for a map, the map being defined by its\n * size (in pixels) and resolution (in map units per pixel).\n * @param {ol.Size} mapSize Size of the map on the screen (px).\n * @param {number} mapResolution Resolution of the map on the screen.\n * @param {ol.Size} printMapSize Size of the map on the paper (dots).\n * @param {Array.<number>} printMapScales Supported map scales on the paper.\n * The scales are provided as scale denominators, sorted in ascending order.\n * E.g. `[500, 1000, 2000, 4000]`.\n * @return {number} The best scale. `-1` is returned if there is no optimal\n * scale, that is the optimal scale is lower than or equal to the first value\n * in `printMapScales`.\n * @export\n */\nexports.prototype.getOptimalScale = function(\n  mapSize, mapResolution, printMapSize, printMapScales) {\n\n  const mapWidth = mapSize[0] * mapResolution;\n  const mapHeight = mapSize[1] * mapResolution;\n\n  const scaleWidth = mapWidth * exports.INCHES_PER_METER_ *\n      exports.DOTS_PER_INCH_ / printMapSize[0];\n  const scaleHeight = mapHeight * exports.INCHES_PER_METER_ *\n      exports.DOTS_PER_INCH_ / printMapSize[1];\n\n  const scale = Math.min(scaleWidth, scaleHeight);\n\n  let optimal = -1;\n  for (let i = 0, ii = printMapScales.length; i < ii; ++i) {\n    if (scale > printMapScales[i]) {\n      optimal = printMapScales[i];\n    }\n  }\n\n  return optimal;\n};\n\n\n/**\n * Get the optimal map resolution for a print scale and a map size.\n * @param {ol.Size} mapSize Size of the map on the screen (px).\n * @param {ol.Size} printMapSize Size of the map on the paper (dots).\n * @param {number} printMapScale Map scale on the paper.\n * @return {number} The optimal map resolution.\n * @export\n */\nexports.prototype.getOptimalResolution = function(\n  mapSize, printMapSize, printMapScale) {\n\n  const dotsPerMeter =\n      exports.DOTS_PER_INCH_ * exports.INCHES_PER_METER_;\n\n  const resolutionX = (printMapSize[0] * printMapScale) /\n      (dotsPerMeter * mapSize[0]);\n  const resolutionY = (printMapSize[1] * printMapScale) /\n      (dotsPerMeter * mapSize[1]);\n\n  const optimalResolution = Math.max(resolutionX, resolutionY);\n\n  return optimalResolution;\n};\n\n\n/**\n * Get the coordinates of the bottom left corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the bottom left corner.\n */\nexports.prototype.getBottomLeftCorner = function(mapCenter) {\n  return [mapCenter[0] - this.extentHalfHorizontalDistance_,\n    mapCenter[1] - this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the bottom right corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.ç\n * @return {ol.Coordinate} The coordinates of the bottom right corner.\n */\nexports.prototype.getBottomRightCorner = function(mapCenter) {\n  return [mapCenter[0] + this.extentHalfHorizontalDistance_,\n    mapCenter[1] - this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the up left corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the up left corner.\n */\nexports.prototype.getUpLeftCorner = function(mapCenter) {\n  return [mapCenter[0] - this.extentHalfHorizontalDistance_,\n    mapCenter[1] + this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the up right corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the up right corner.\n */\nexports.prototype.getUpRightCorner = function(mapCenter) {\n  return [mapCenter[0] + this.extentHalfHorizontalDistance_,\n    mapCenter[1] + this.extentHalfVerticalDistance_];\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoPrintUtils', []);\nexports.module.service('ngeoPrintUtils', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.print.component\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoPrintService from 'ngeo/print/Service.js';\nimport ngeoPrintUtils from 'ngeo/print/Utils.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olMap from 'ol/Map.js';\nimport * as olMath from 'ol/math.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfPrintComponent', [\n  gmfAuthenticationService.module.name,\n  gmfThemeThemes.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoPrintService.module.name,\n  ngeoPrintUtils.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.value('gmfPrintTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['gmfPrintTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/print';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/print', require('./component.html'));\n});\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.PrintStateEnum = {\n\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT_IN_USE: 'notInUse',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  PRINTING: 'printing',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR_ON_REPORT: 'errorOnReport',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  CAPABILITIES_NOT_LOADED: 'capabilitiesNotLoaded',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR_ON_GETCAPABILITIES: 'errorOnGetCapabilities'\n};\n\n\nexports.value('gmfPrintState', {\n  'state': exports.PrintStateEnum.CAPABILITIES_NOT_LOADED\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfPrintTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfPrintTemplateUrl($element, $attrs, gmfPrintTemplateUrl) {\n  return gmfPrintTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component that display a print panel. This panel is populated with\n * a form corresponding to the capabilities delivered by a GMF print v3 server.\n * If you want to use another template for your print panel, you can see the\n * available layout information in the 'gmfx.PrintLayoutInfo' classes.\n *\n * Simple example:\n *\n *      <gmf-print\n *        gmf-print-map=\"::mainCtrl.map\"\n *        gmf-print-active=\"printActive\"\n *        gmf-print-rotatemask=\"::true\">\n *      </gmf-print>\n *\n * Example with user defined attribute:\n *\n *      <gmf-print\n *        gmf-print-map=\"::mainCtrl.map\"\n *        gmf-print-active=\"printActive\"\n *        gmf-print-rotatemask=\"::true\"\n *        gmf-print-hiddenattributes=\"::['name']\"\n *        gmf-print-attributes-out=\"::attributes\">\n *        <div ng-repeat=\"attribute in ::attributes\">\n *          <div ng-if=\"attribute.name == 'name'\">\n *            <input ng-model=\"attribute.value\" placeholder=\"name\" />\n *          </div>\n *        </div>\n *      </gmf-print>\n *\n * Note: The 'print' and 'cancel' functions can also be called via globals\n * events 'gmfStartPrint' and 'gmfCancelPrint'.\n *\n * @htmlAttribute {ol.Map} gmf-print-map The map.\n * @htmlAttribute {boolean} gmf-print-active A boolean that informs if the\n *     panel is open or not.\n * @htmlAttribute {boolean} gmf-print-rotatemask Optional. True to apply\n *     rotation on the mask instead of the map. By default, the map rotates.\n * @htmlAttribute {Object.<string, string|number|boolean>}\n *     gmf-print-fieldvalues optional. Key, value object to define default\n *     value in each of your print panel field. The key refers to the\n *     property's name of the field.\n *     Example: {'comments': 'demo', 'legend': false}. Doesn't work for the dpi\n *     and the scale. Server's values are used in priority.\n * @htmlAttribute {Array.<string>} gmf-print-hiddenattributes The list of attributes that should be hidden.\n * @ngdoc component\n * @ngname gmfPrint\n */\nexports.component_ = {\n  bindings: {\n    'map': '<gmfPrintMap',\n    'active': '=gmfPrintActive',\n    'rotateMask': '<?gmfPrintRotatemask',\n    'fieldValues': '<?gmfPrintFieldvalues',\n    'hiddenAttributeNames': '<?gmfPrintHiddenattributes',\n    'attributesOut': '=?gmfPrintAttributesOut'\n  },\n  controller: 'GmfPrintController',\n  templateUrl: gmfPrintTemplateUrl,\n  transclude: true\n};\n\n\nexports.component('gmfPrint', exports.component_);\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {angular.JQLite} $element Element.\n   * @param {angular.Scope} $rootScope Angular root scope.\n   * @param {angular.Scope} $scope Angular scope.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {ngeo.map.LayerHelper} ngeoLayerHelper The ngeo Layer Helper service.\n   * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo Feature Overlay\n   *     Manager service.\n   * @param {ngeo.print.Utils} ngeoPrintUtils The ngeo PrintUtils service.\n   * @param {ngeox.CreatePrint} ngeoCreatePrint The ngeo Create Print function.\n   * @param {string} gmfPrintUrl A MapFishPrint url.\n   * @param {gmf.authentication.Service} gmfAuthenticationService The authentication service.\n   * @param {ngeox.QueryResult} ngeoQueryResult ngeo query result.\n   * @param {angular.$filter} $filter Angular $filter service.\n   * @param {gmf.print.component.PrintStateEnum} gmfPrintState GMF print state.\n   * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n   * @private\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfPrintController\n   */\n  constructor($element, $rootScope, $scope, $timeout, $q, $injector,\n    gettextCatalog, ngeoLayerHelper, ngeoFeatureOverlayMgr,  ngeoPrintUtils,\n    ngeoCreatePrint, gmfPrintUrl, gmfAuthenticationService, ngeoQueryResult,\n    $filter, gmfPrintState, gmfThemes) {\n\n    /**\n     * @type {gmf.print.component.PrintStateEnum}\n     * @private\n     */\n    this.gmfPrintState_ = gmfPrintState;\n\n    /**\n     * @type {function(string): string}\n     * @private\n     */\n    this.translate_ = $filter('translate');\n\n    /**\n     * @type {ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.active;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.rotateMask = false;\n\n    /**\n     * @type {Object.<string, string|number|boolean>!}\n     * @export\n     */\n    this.fieldValues = {};\n\n    /**\n     * @type {Array.<string>}\n     * @export\n     */\n    this.attributesOut;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$rootScope_ = $rootScope;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.$timeout_ = $timeout;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.$q_ = $q;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {ol.layer.Vector}\n     * @private\n     */\n    this.featureOverlayLayer_ = ngeoFeatureOverlayMgr.getLayer();\n\n    /**\n     * @type {ngeo.print.Utils}\n     * @private\n     */\n    this.ngeoPrintUtils_ = ngeoPrintUtils;\n\n    /**\n     * @type {ngeo.print.Service}\n     * @private\n     */\n    this.ngeoPrint_ = ngeoCreatePrint(gmfPrintUrl);\n\n    /**\n     * @type {ngeox.QueryResult}\n     * @private\n     */\n    this.ngeoQueryResult_ = ngeoQueryResult;\n\n    /**\n     * @type {gmf.authentication.Service}\n     * @private\n     */\n    this.gmfAuthenticationService_ = gmfAuthenticationService;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    this.cacheVersion_ = '0';\n    if ($injector.has('cacheVersion')) {\n      this.cacheVersion_ = $injector.get('cacheVersion');\n    }\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.scaleInput = false;\n\n    if ($injector.has('gmfPrintOptions')) {\n      this.scaleInput = $injector.get('gmfPrintOptions')['scaleInput'];\n    }\n\n    /**\n     * @type {?angular.$q.Deferred}\n     * @private\n     */\n    this.requestCanceler_ = null;\n\n    /**\n     * @type {?angular.$q.Promise}\n     * @private\n     */\n    this.statusTimeoutPromise_ = null;\n\n    /**\n     * @type {Array.<number>|null}\n     * @private\n     */\n    this.onDragPreviousMousePosition_ = null;\n\n    /**\n     * @type {?angular.$q.Promise|null}\n     * @private\n     */\n    this.rotationTimeoutPromise_ = null;\n\n    /**\n     * @type {ol.EventsKey}\n     * @private\n     */\n    this.postComposeListenerKey_;\n\n    /**\n     * @type {ol.EventsKey}\n     * @private\n     */\n    this.pointerDragListenerKey_;\n\n    /**\n     * @type {ol.EventsKey}\n     * @private\n     */\n    this.mapViewResolutionChangeKey_;\n\n    /**\n     * Current report reference id.\n     * @type {string}\n     * @private\n     */\n    this.curRef_ = '';\n\n    /**\n     * Formats availables in capabilities.\n     * @type {Array.<string>}\n     * @private\n     */\n    this.formats_ = [];\n\n    /**\n     * An array of attributes objects from capabilities.\n     * @type {Array.<Object>}\n     * @private\n     */\n    this.layouts_ = [];\n\n    /**\n     * An attributes object from capabilities.\n     * @type {Object}\n     * @private\n     */\n    this.layout_ = {};\n\n    /**\n     * @type {Array.<number>}\n     * @private\n     */\n    this.paperSize_ = [];\n\n    /**\n     * @type {gmfx.PrintLayoutInfo}\n     * @export\n     */\n    this.layoutInfo = {};\n\n    /**\n     * @type {number}\n     * @export\n     */\n    this.rotation = 0;\n\n    /**\n     * @type {Array.<string>}\n     * @export\n     */\n    this.hiddenAttributeNames;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.scaleManuallySelected_ = false;\n\n    /**\n     * @type {angular.JQLite}\n     * @export\n     */\n    this.rotationInput_ = $element.find('.gmf-print-rotation-input');\n\n    this.rotationInput_.on('input', (event) => {\n      const rotation = $(event.target).val();\n      if (rotation !== '') {\n        this.setRotation(/** @type {number} */ (rotation));\n      }\n    });\n\n    /**\n     * @type {function(ol.render.Event)}\n     */\n    this.postcomposeListener_;\n\n    /**\n     * @type {angular.$http.HttpPromise}\n     * @private\n     */\n    this.capabilities_;\n\n    /**\n     * @type {gmfThemes.GmfOgcServers}\n     * @private\n     */\n    this.ogcServers_;\n\n    /**\n     * @type {Array.<gmfThemes.GmfTheme>}\n     * @private\n     */\n    this.currentThemes_;\n  }\n\n\n  /**\n   * Init the controller\n   */\n  $onInit() {\n    // Clear the capabilities if the roleId changes\n    this.$scope_.$watch(() => this.gmfAuthenticationService_.getRoleId(), () => {\n      this.gmfPrintState_.state = exports.PrintStateEnum.CAPABILITIES_NOT_LOADED;\n      this.capabilities_ = null;\n    });\n\n    this.$scope_.$watch(() => this.active, (active) => {\n      this.togglePrintPanel_(active);\n    });\n\n    // Print on event.\n    this.$rootScope_.$on('gmfStartPrint', (event, format) => {\n      this.print(`${format}`);\n    });\n\n    // Cancel print task on event.\n    this.$rootScope_.$on('gmfCancelPrint', () => {\n      this.cancel();\n    });\n\n    this.gmfThemes_.getOgcServersObject().then((ogcServersObject) => {\n      this.ogcServers_ = ogcServersObject;\n    });\n\n    this.gmfThemes_.getThemesObject().then((currentThemes) => {\n      this.currentThemes_ = currentThemes;\n    });\n\n    /**\n     * @return {ol.Size} Size in dots of the map to print.\n     */\n    const getSizeFn = () => this.paperSize_;\n\n    let getRotationFn;\n    if (this.rotateMask) {\n      /**\n       * @return {number} rotation to apply.\n       */\n      getRotationFn = () => this.rotation;\n    }\n\n    this.postcomposeListener_ = this.ngeoPrintUtils_.createPrintMaskPostcompose(\n      getSizeFn, this.getScaleFn.bind(this), getRotationFn);\n  }\n\n\n  /**\n   * @param {olx.FrameState} frameState Frame state.\n   * @return {number} Scale of the map to print.\n   */\n  getScaleFn(frameState) {\n    // Don't compute an optimal scale if the user manually choose a value not in\n    // the pre-defined scales. (`scaleInput` in `gmfPrintOptions`).\n    googAsserts.assert(this.layoutInfo.scales);\n    googAsserts.assert(this.layoutInfo.scale !== undefined);\n    if (!this.scaleManuallySelected_ &&\n        (this.layoutInfo.scale === -1 || olArray.includes(this.layoutInfo.scales, this.layoutInfo.scale))) {\n      const mapSize = frameState.size;\n      const viewResolution = frameState.viewState.resolution;\n      this.layoutInfo.scale = this.getOptimalScale_(mapSize, viewResolution);\n    }\n    return this.layoutInfo.scale;\n  }\n\n\n  /**\n   * @param {boolean} active True to listen events related to the print and get\n   *     capabilities. False to stop listen them and set rotation to 0.\n   * @private\n   */\n  togglePrintPanel_(active) {\n    if (active) {\n      if (!this.capabilities_) {\n        this.getCapabilities_();\n      }\n      this.capabilities_.then((resp) => {\n        // make sure the panel is still open\n        if (!this.active) {\n          return;\n        }\n        this.gmfPrintState_.state = exports.PrintStateEnum.NOT_IN_USE;\n        // Get capabilities - On success\n        this.parseCapabilities_(resp);\n        this.postComposeListenerKey_ = olEvents.listen(this.map, 'postcompose', this.postcomposeListener_);\n        this.pointerDragListenerKey_ = olEvents.listen(this.map, 'pointerdrag', this.onPointerDrag_, this);\n        this.mapViewResolutionChangeKey_ = olEvents.listen(this.map.getView(), 'change:resolution', () => {\n          this.scaleManuallySelected_ = false;\n        });\n        this.map.render();\n      }, (resp) => {\n        // Get capabilities - On error\n        this.gmfPrintState_.state = exports.PrintStateEnum.ERROR_ON_GETCAPABILITIES;\n        this.capabilities_ = null;\n      });\n    } else {\n      olEvents.unlistenByKey(this.postComposeListenerKey_);\n      olEvents.unlistenByKey(this.pointerDragListenerKey_);\n      olEvents.unlistenByKey(this.mapViewResolutionChangeKey_);\n      this.setRotation(0);\n      this.map.render(); // Redraw (remove) post compose mask;\n    }\n  }\n\n\n  /**\n   * Gets the print capabilities.\n   * @param {number|null=} opt_roleId The role id.\n   * @private\n   */\n  getCapabilities_(opt_roleId) {\n    this.capabilities_ = this.ngeoPrint_.getCapabilities(\n      /** @type {angular.$http.Config} */ ({\n        withCredentials: true,\n        params: opt_roleId ? {\n          'role': opt_roleId,\n          'cache_version': this.cacheVersion_\n        } : {\n          'cache_version': this.cacheVersion_\n        }\n      }));\n  }\n\n\n  /**\n   * Create the list of layouts, get the formats, get the first layout in\n   * gmf print v3 capabilities and then update the print panel layout information.\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  parseCapabilities_(resp) {\n    const data = resp['data'];\n    this.formats_ = data['formats'] || [];\n    this.layouts_ = data['layouts'];\n    this.layout_ = data['layouts'][0];\n\n    this.layoutInfo.layouts = [];\n    this.layouts_.forEach((layout) => {\n      this.layoutInfo.layouts.push(layout.name);\n    });\n\n    this.updateFields_();\n  }\n\n\n  /**\n   * Update layout information with the user values if there are always available in the\n   * current layout otherwise use the defaults values of the layout.\n   * If a field doesn't exist in the current layout, set it to undefined so the\n   * view can hide it. Update also the paper size.\n   * custom print templates).\n   * @private\n   */\n  updateFields_() {\n    this.layoutInfo.layout = this.layout_.name;\n\n    const mapInfo = this.isAttributeInCurrentLayout_('map');\n    googAsserts.assertObject(mapInfo);\n    const clientInfo = mapInfo['clientInfo'];\n    googAsserts.assertObject(clientInfo);\n    this.paperSize_ = [clientInfo['width'], clientInfo['height']];\n\n    this.updateCustomFields_();\n\n    const legend = this.isAttributeInCurrentLayout_('legend');\n    if (this.layoutInfo.legend === undefined) {\n      this.layoutInfo.legend = !!(legend !== undefined ?\n        legend : this.fieldValues['legend']);\n    }\n\n    this.layoutInfo.scales = clientInfo['scales'] || [];\n    this.layoutInfo.dpis = clientInfo['dpiSuggestions'] || [];\n\n    const mapSize = this.map.getSize();\n    const viewResolution = this.map.getView().getResolution();\n    this.layoutInfo.scale = this.getOptimalScale_(mapSize, viewResolution);\n\n    this.layoutInfo.dpi =\n        (this.layoutInfo.dpi && this.layoutInfo.dpis.indexOf(this.layoutInfo.dpi) > 0) ?\n          this.layoutInfo.dpi : this.layoutInfo.dpis[0];\n\n    this.layoutInfo.formats = {};\n    this.formats_.forEach((format) => {\n      this.layoutInfo.formats[format] = true;\n    });\n\n    this.attributesOut = this.layoutInfo['simpleAttributes'];\n\n    // Force the update of the mask\n    this.map.render();\n  }\n\n\n  /**\n   * Update simple attributes information with gmfx.Customfield to be able to generate a form\n   * from a custom GMF print v3 configuration.\n   * @private\n   */\n  updateCustomFields_() {\n    let name, rawType, value, type;\n    if (!this.layoutInfo.simpleAttributes) {\n      this.layoutInfo.simpleAttributes = [];\n    }\n    const simpleAttributes = this.layoutInfo.simpleAttributes;\n    const previousAttributes = simpleAttributes.splice(0, simpleAttributes.length);\n\n    // The attributes without 'clientParams' are the custom layout information (defined by end user).\n    this.layout_.attributes.forEach((attribute) => {\n      if (!attribute['clientParams']) {\n        name = `${attribute.name}`;\n        const defaultValue = attribute.default;\n        value = (defaultValue !== undefined && defaultValue !== '') ?\n          defaultValue : this.fieldValues[name];\n\n        // Try to use existing form field type\n        rawType = `${attribute.type}`;\n        switch (rawType) {\n          case 'String':\n            type = (name === 'comments') ? 'textarea' : 'text';\n            break;\n          case 'Boolean':\n            type = 'checkbox';\n            break;\n          case 'Number':\n            type = 'number';\n            value = parseFloat(value);\n            value = isNaN(value) ? 0 : value;\n            break;\n          default:\n            type = rawType;\n        }\n\n        // If it exists use the value of previous same field.\n        previousAttributes.forEach((c) => {\n          if (c.name === name && c.type === type) {\n            return value = c.value;\n          }\n        });\n\n        this.layoutInfo.simpleAttributes.push(/** gmfx.PrintSimpleAttributes */ ({\n          name,\n          type,\n          value\n        }));\n      }\n    });\n  }\n\n\n  /**\n   * Return a capabilities 'attribute' object corresponding to the given name.\n   * @param {string} name Name of the attribute to get.\n   * @return {Object|null} corresponding attribute or null.\n   * @private\n   */\n  isAttributeInCurrentLayout_(name) {\n    let attr = null;\n    this.layout_.attributes.forEach((attribute) => {\n      if (attribute.name === name) {\n        return attr = attribute;\n      }\n    });\n    return attr;\n  }\n\n\n  /**\n   * Set the current rotation value.\n   * Updating the rotation will redraw the mask or rotate the map (depending on the configuration).\n   * @param {number} rotation The optional new rotation value in degrees.\n   */\n  setRotation(rotation) {\n    this.rotation = olMath.clamp(rotation, -180, 180);\n\n    // sync all the inputs\n    this.rotationInput_.val(this.rotation.toString());\n\n    // Render the map to update the postcompose mask or rotate the map.\n    if (this.rotateMask) {\n      this.map.render();\n    } else {\n      this.map.getView().setRotation(olMath.toRadians(this.rotation));\n    }\n  }\n\n\n  /**\n   * Calculate the angle and the sense of rotation between two lines. One from the\n   * center of the map and the point of the last call to this function and one\n   * from the same center and the point of the current call.\n   * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n   * @private\n   */\n  onPointerDrag_(e) {\n    const originalEvent = e.originalEvent;\n    const mapCenter = this.map.getView().getCenter();\n    if (this.active && originalEvent.altKey && originalEvent.shiftKey && mapCenter) {\n      const center = this.map.getPixelFromCoordinate(mapCenter);\n      const pixel = e.pixel;\n      // Reset previous position between two different sessions of drags events.\n      if (this.rotationTimeoutPromise_ === null) {\n        this.onDragPreviousMousePosition_ = null;\n      } else {\n        // Cancel the timeout to keep this session of drags event\n        this.$timeout_.cancel(this.rotationTimeoutPromise_);\n        // Calculate angle and sense of rotation.\n        const p0x = this.onDragPreviousMousePosition_[0] - center[0];\n        const p0y = this.onDragPreviousMousePosition_[1] - center[1];\n        const p1x = pixel[0] - center[0];\n        const p1y = pixel[1] - center[1];\n        const centerToP0 = Math.sqrt(Math.pow(p0x, 2) + Math.pow(p0y, 2));\n        const centerToP1 = Math.sqrt(Math.pow(p1x, 2) + Math.pow(p1y, 2));\n        const sense = (p0x * p1y - p0y * p1x) > 0 ? 1 : -1;\n        let angle = (p0x * p1x + p0y * p1y) / (centerToP0 * centerToP1);\n        angle = angle <= 1 ? sense * Math.acos(angle) : 0;\n        const boost = centerToP1 / 200;\n        const increment = Math.round(olMath.toDegrees(angle) * boost);\n\n        // Set rotation then update the view.\n        this.setRotation(this.rotation + increment);\n        this.$scope_.$digest();\n      }\n      // Prepare the removal of this session of drags events\n      this.rotationTimeoutPromise_ = this.$timeout_(() => {\n        this.rotationTimeoutPromise_ = null;\n      }, 500);\n      // Keep the current position for the next calculation.\n      this.onDragPreviousMousePosition_ = pixel;\n    }\n  }\n\n\n  /**\n   * Create a print report based on the values of the 'layoutInfo' values.\n   * @param {string} format An output format corresponding to one format in the\n   *     capabilities document ('pdf', 'png', etc).\n   * @export\n   */\n  print(format) {\n    // Do not print if a print task is already processing.\n    if (this.gmfPrintState_.state === exports.PrintStateEnum.PRINTING) {\n      return;\n    }\n    this.requestCanceler_ = this.$q_.defer();\n    this.gmfPrintState_.state = exports.PrintStateEnum.PRINTING;\n\n    const mapSize = this.map.getSize();\n    const viewResolution = this.map.getView().getResolution() || 0;\n    const scale = this.layoutInfo.scale || this.getOptimalScale_(mapSize, viewResolution);\n    const datasource = this.getDataSource_();\n\n    const customAttributes = {\n      'datasource': datasource\n    };\n\n    if (this.layoutInfo.simpleAttributes) {\n      this.layoutInfo.simpleAttributes.forEach((field) => {\n        customAttributes[field.name] = field.value;\n      });\n    }\n\n    if (this.layoutInfo.legend) {\n      const legend = this.getLegend_(scale);\n      if (legend !== null) {\n        customAttributes['legend'] = this.getLegend_(scale);\n      }\n    }\n\n    googAsserts.assertNumber(this.layoutInfo.dpi);\n    googAsserts.assertString(this.layoutInfo.layout);\n\n    // convert the WMTS layers to WMS\n    const map = new olMap({});\n    map.setView(this.map.getView());\n    const ol_layers = this.ngeoLayerHelper_.getFlatLayers(this.map.getLayerGroup());\n    const new_ol_layers = [];\n    let print_native_angle = true;\n    for (let i = 0, ii = ol_layers.length; i < ii; i++) {\n      let layer = ol_layers[i];\n      const metadata = layer.get('metadata');\n      if (metadata) {\n        const server_name = metadata.ogcServer;\n        const layer_names = metadata.printLayers || metadata.layers;\n        if (server_name && layer_names) {\n          const server = this.ogcServers_[server_name];\n          if (server) {\n            layer = this.ngeoLayerHelper_.createBasicWMSLayer(\n              server.url,\n              layer_names,\n              server.imageType,\n              server.type\n            );\n          } else {\n            console.error('Missing ogcServer:', server_name);\n          }\n        }\n      }\n\n      // Get the print native angle parameter for WMS layers when set to not use default value\n      // Is applied only once when the value is overridden with a metadata from administration\n      if (layer instanceof olLayerImage && layer.get('printNativeAngle') === false) {\n        print_native_angle = false;\n      }\n\n      new_ol_layers.push(layer);\n    }\n    map.setLayerGroup(new olLayerGroup({\n      layers: new_ol_layers,\n      'printNativeAngle': print_native_angle\n    }));\n\n    const spec = this.ngeoPrint_.createSpec(map, scale, this.layoutInfo.dpi,\n      this.layoutInfo.layout, format, customAttributes);\n\n    // Add feature overlay layer to print spec.\n    const layers = [];\n    this.ngeoPrint_.encodeLayer(layers, this.featureOverlayLayer_,\n      viewResolution);\n    if (layers.length > 0) {\n      spec.attributes.map.layers.unshift(layers[0]);\n    }\n\n    this.ngeoPrint_.createReport(spec, /** @type {angular.$http.Config} */ ({\n      timeout: this.requestCanceler_.promise\n    })).then(\n      this.handleCreateReportSuccess_.bind(this),\n      this.handleCreateReportError_.bind(this)\n    );\n\n    // remove temporary map\n    map.setTarget(null);\n  }\n\n\n  /**\n   * Cancel the current print and reset its state.\n   * @export\n   */\n  cancel() {\n    // Cancel the latest request, if it's not finished yet.\n    if (this.requestCanceler_ !== null) {\n      this.requestCanceler_.resolve();\n    }\n\n    // Cancel the status timeout if there's one set, to make sure no other\n    // status request is sent.\n    if (this.statusTimeoutPromise_ !== null) {\n      this.$timeout_.cancel(this.statusTimeoutPromise_);\n    }\n\n    if (this.curRef_.length > 0) {\n      this.ngeoPrint_.cancel(this.curRef_);\n    }\n\n    this.resetPrintStates_();\n  }\n\n\n  /**\n   * @param {gmf.print.component.PrintStateEnum=} opt_printState the print state.\n   * @private\n   */\n  resetPrintStates_(opt_printState) {\n    this.gmfPrintState_.state = opt_printState || exports.PrintStateEnum.NOT_IN_USE;\n    this.curRef_ = '';\n  }\n\n\n  /**\n   * Get datasource object for print report\n   * @private\n   * @return {Array.<gmfx.datasource.DataSourcePrintReportObject>} the data\n   *     source objet for the print report\n   */\n  getDataSource_() {\n    let datasourceObj, data, columns;\n    const datasourceArr = [];\n    const sources = this.ngeoQueryResult_.sources;\n    sources.forEach(function(source) {\n      data = [];\n      columns = [];\n      source.features.forEach(function(feature, i) {\n        googAsserts.assert(feature);\n        const properties = ngeoMiscFeatureHelper.getFilteredFeatureValues(feature);\n        if (i === 0) {\n          columns = Object.keys(properties).map(function tanslateColumns(prop) {\n            return this.translate_(prop);\n          }, this);\n        }\n        data.push(Object.keys(properties).map(key => properties[key]));\n      }, this);\n      if (columns.length) {\n        datasourceObj =\n          /** @type {gmfx.datasource.DataSourcePrintReportObject} */({\n            title: this.translate_(source.label),\n            table: {\n              columns,\n              data\n            }\n          });\n        datasourceArr.push(datasourceObj);\n      }\n    }, this);\n    return datasourceArr;\n  }\n\n\n  /**\n   * Get the optimal scale to display the print mask. Return the first scale if\n   * no scale matches.\n   * @param {ol.Size|undefined} mapSize Size of the map on the screen (px).\n   * @param {number|undefined} viewResolution Resolution of the map on the screen.\n   * @return {number} The best scale. -1 is returned if there is no optimal\n   *     scale, that is the optimal scale is lower than or equal to the first\n   *     value in printMapScales.\n   * @private\n   */\n  getOptimalScale_(mapSize, viewResolution) {\n    const scales = this.layoutInfo.scales.slice();\n    if (mapSize !== undefined && viewResolution !== undefined) {\n      return this.ngeoPrintUtils_.getOptimalScale(mapSize, viewResolution,\n        this.paperSize_, scales.reverse());\n    }\n    return this.layoutInfo.scales[0];\n  }\n\n\n  /**\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  handleCreateReportSuccess_(resp) {\n    const mfResp = /** @type {MapFishPrintReportResponse} */ (resp.data);\n    const ref = mfResp.ref;\n    googAsserts.assert(ref.length > 0);\n    this.curRef_ = ref;\n    this.getStatus_(ref);\n  }\n\n\n  /**\n   * @param {string} ref Ref.\n   * @private\n   */\n  getStatus_(ref) {\n    this.requestCanceler_ = this.$q_.defer();\n    this.ngeoPrint_.getStatus(ref, /** @type {angular.$http.Config} */ ({\n      timeout: this.requestCanceler_.promise\n    })).then(\n      this.handleGetStatusSuccess_.bind(this, ref),\n      this.handleCreateReportError_.bind(this)\n    );\n  }\n\n\n  /**\n   * @param {string} ref Ref.\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  handleGetStatusSuccess_(ref, resp) {\n    const mfResp = /** @type {MapFishPrintStatusResponse} */ (resp.data);\n    const done = mfResp.done;\n    if (done) {\n      if (mfResp.status != 'error') {\n        // The report is ready. Open it by changing the window location.\n        window.location.href = this.ngeoPrint_.getReportUrl(ref);\n        this.resetPrintStates_();\n      } else {\n        console.error(mfResp.error);\n        this.handleCreateReportError_();\n      }\n    } else {\n      // The report is not ready yet. Check again in 1s.\n      this.statusTimeoutPromise_ = this.$timeout_(() => {\n        this.getStatus_(ref);\n      }, 1000, false);\n    }\n  }\n\n\n  /**\n   * @private\n   */\n  handleCreateReportError_() {\n    this.resetPrintStates_(exports.PrintStateEnum.ERROR_ON_REPORT);\n  }\n\n\n  /**\n   * @param {number} scale The scale to get the legend (for wms layers only).\n   * @return {Object?} Legend object for print report or null.\n   * @private\n   */\n  getLegend_(scale) {\n    const legend = {'classes': []};\n    let classes, layerNames, layerName, icons;\n    const gettextCatalog = this.gettextCatalog_;\n\n    // Get layers from layertree only.\n    const dataLayerGroup = this.ngeoLayerHelper_.getGroupFromMap(this.map,\n      gmfBase.DATALAYERGROUP_NAME);\n    const layers = this.ngeoLayerHelper_.getFlatLayers(dataLayerGroup);\n\n    // For each visible layer in reverse order, get the legend url.\n    layers.reverse().forEach((layer) => {\n      classes = [];\n      if (layer.getVisible() && layer.getSource()) {\n        // For WMTS layers.\n        if (layer instanceof olLayerTile) {\n          layerName = `${layer.get('layerNodeName')}`;\n          icons = this.getMetadataLegendImage_(layerName);\n          if (!icons) {\n            icons = this.ngeoLayerHelper_.getWMTSLegendURL(layer);\n          }\n          // Don't add classes without legend url.\n          if (icons) {\n            classes.push({\n              'name': gettextCatalog.getString(layerName),\n              'icons': [icons]\n            });\n          }\n        } else {\n          const source = /** @type ol.source.ImageWMS */ (layer.getSource());\n          // For each name in a WMS layer.\n          layerNames = source.getParams()['LAYERS'].split(',');\n          layerNames.forEach((name) => {\n            icons = this.getMetadataLegendImage_(name);\n            if (!icons) {\n              icons = this.ngeoLayerHelper_.getWMSLegendURL(source.getUrl(), name,\n                scale);\n            }\n            // Don't add classes without legend url or from layers without any\n            // active name.\n            if (icons && name.length !== 0) {\n              classes.push({\n                'name': gettextCatalog.getString(name),\n                'icons': [icons]\n              });\n            }\n          });\n        }\n      }\n\n      // Add classes object only if it contains something.\n      if (classes.length > 0) {\n        legend['classes'].push({'classes': classes});\n      }\n\n    });\n\n    return legend['classes'].length > 0 ?  legend : null;\n  }\n\n\n  /**\n   * Return the metadata legendImage of a layer from the found corresponding node\n   * or undefined.\n   * @param {string} layerName a layer name.\n   * @return {string|undefined} The legendImage or undefined.\n   * @private\n   */\n  getMetadataLegendImage_(layerName) {\n    const groupNode = gmfThemeThemes.findGroupByLayerNodeName(this.currentThemes_, layerName);\n    let node;\n    if (groupNode && groupNode.children) {\n      node = gmfThemeThemes.findObjectByName(groupNode.children, layerName);\n    }\n    let legendImage;\n    if (node && node.metadata) {\n      legendImage = node.metadata.legendImage;\n    }\n    return legendImage;\n  }\n\n\n  /**\n   * Set the current layout and update all layout information with this new layout parameters.\n   * @param {string!} layoutName A layout name as existing in the list of\n   *     existing layouts.\n   * @export\n   */\n  setLayout(layoutName) {\n    let layout;\n    this.layouts_.forEach((l) => {\n      if (l.name === layoutName) {\n        layout = l;\n        return true; // break;\n      }\n    });\n    this.layout_ = layout;\n    this.updateFields_();\n  }\n\n\n  /**\n   * Get or set the print scale value and adapt the zoom to match with this new scale.\n   * @param {number=} opt_scale A scale value as existing in the scales list field.\n   * @return {number|undefined} New scale.\n   * @export\n   */\n  getSetScale(opt_scale) {\n    if (opt_scale !== undefined) {\n      const mapSize = this.map.getSize() || [0, 0];\n      this.layoutInfo.scale = opt_scale;\n      const res = this.ngeoPrintUtils_.getOptimalResolution(mapSize, this.paperSize_, opt_scale);\n      const contrainRes = this.map.getView().constrainResolution(res, 0, 1);\n      this.map.getView().setResolution(contrainRes);\n      // Render the map to update the postcompose mask manually\n      this.map.render();\n      this.scaleManuallySelected_ = true;\n    }\n    return this.layoutInfo.scale;\n  }\n\n\n  /**\n   * Set the print dpi value.\n   * @param {number} dpi A dpi value as existing in the dpis list field.\n   * @export\n   */\n  setDpi(dpi) {\n    this.layoutInfo.dpi = dpi;\n  }\n\n\n  /**\n   * Check the current state of the print.\n   * @param {string} stateEnumKey An enum key from gmf.print.component.PrintStateEnum.\n   * @return {boolean} True if the given state matches with the current print\n   *     state. False otherwise.\n   * @export\n   */\n  isState(stateEnumKey) {\n    return this.gmfPrintState_.state === exports.PrintStateEnum[stateEnumKey];\n  }\n};\n\nexports.controller('GmfPrintController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.createfeatureComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nconst exports = angular.module('ngeoCreatefeature', [\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * A directive used to draw vector features of a single geometry type using\n * either a 'draw' or 'measure' interaction. Once a feature is finished being\n * drawn, it is added to a collection of features.\n *\n * The geometry types supported are:\n *  - Point\n *  - LineString\n *  - Polygon\n *\n * Example:\n *\n *     <a\n *       href\n *       translate\n *       ngeo-btn\n *       ngeo-createfeature\n *       ngeo-createfeature-active=\"ctrl.createPointActive\"\n *       ngeo-createfeature-features=\"ctrl.features\"\n *       ngeo-createfeature-geom-type=\"ctrl.pointGeomType\"\n *       ngeo-createfeature-map=\"::ctrl.map\"\n *       class=\"btn btn-default ngeo-createfeature-point\"\n *       ng-class=\"{active: ctrl.createPointActive}\"\n *       ng-model=\"ctrl.createPointActive\">\n *     </a>\n *\n * @htmlAttribute {boolean} ngeo-createfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {ol.Collection} ngeo-createfeature-features The collection of\n *     features where to add those created by this directive.\n * @htmlAttribute {string} ngeo-createfeature-geom-type Determines the type\n *     of geometry this directive should draw.\n * @htmlAttribute {ol.Map} ngeo-createfeature-map The map.\n *\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname ngeoCreatefeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoCreatefeatureController',\n    bindToController: true,\n    scope: {\n      'active': '=ngeoCreatefeatureActive',\n      'features': '=ngeoCreatefeatureFeatures',\n      'geomType': '=ngeoCreatefeatureGeomType',\n      'map': '=ngeoCreatefeatureMap'\n    }\n  };\n};\n\nexports.directive('ngeoCreatefeature', exports.directive_);\n\n\n/**\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.Scope} $scope Scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoCreatefeatureController\n */\nexports.Controller_ = function(gettextCatalog, $compile, $filter, $scope,\n  $timeout, ngeoEventHelper) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {ol.Collection.<!ol.Feature>|!ol.source.Vector}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {!angular.$compile}\n   * @private\n   */\n  this.compile_ = $compile;\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.filter_ = $filter;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * The draw or measure interaction responsible of drawing the vector feature.\n   * The actual type depends on the geometry type.\n   * @type {ol.interaction.Interaction}\n   * @private\n   */\n  this.interaction_;\n\n\n  // == Event listeners ==\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      this.interaction_.setActive(newVal);\n    }\n  );\n};\n\n\n/**\n * Initialize the directive.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.active = this.active === true;\n  const gettextCatalog = this.gettextCatalog_;\n\n  // Create the draw or measure interaction depending on the geometry type\n  let interaction;\n  if (this.geomType === ngeoGeometryType.POINT ||\n      this.geomType === ngeoGeometryType.MULTI_POINT\n  ) {\n    interaction = new olInteractionDraw({\n      type: /** @type {ol.geom.GeometryType} */ ('Point')\n    });\n  } else if (this.geomType === ngeoGeometryType.LINE_STRING ||\n      this.geomType === ngeoGeometryType.MULTI_LINE_STRING\n  ) {\n    const helpMsg = gettextCatalog.getString('Click to start drawing length');\n    const contMsg = gettextCatalog.getString(\n      'Click to continue drawing<br/>' +\n      'Double-click or click last point to finish'\n    );\n\n    interaction = new ngeoInteractionMeasureLength(\n      this.filter_('ngeoUnitPrefix'),\n      gettextCatalog,\n      {\n        style: new olStyleStyle(),\n        startMsg: this.compile_(`<div translate>${helpMsg}</div>`)(this.scope_)[0],\n        continueMsg: this.compile_(`<div translate>${contMsg}</div>`)(this.scope_)[0]\n      }\n    );\n  } else if (this.geomType === ngeoGeometryType.POLYGON ||\n      this.geomType === ngeoGeometryType.MULTI_POLYGON\n  ) {\n    const helpMsg = gettextCatalog.getString('Click to start drawing area');\n    const contMsg = gettextCatalog.getString(\n      'Click to continue drawing<br/>' +\n      'Double-click or click starting point to finish'\n    );\n\n    interaction = new ngeoInteractionMeasureArea(\n      this.filter_('ngeoUnitPrefix'),\n      gettextCatalog,\n      {\n        style: new olStyleStyle(),\n        startMsg: this.compile_(`<div translate>${helpMsg}</div>`)(this.scope_)[0],\n        continueMsg: this.compile_(`<div translate>${contMsg}</div>`)(this.scope_)[0]\n      }\n    );\n  }\n\n  googAsserts.assert(interaction);\n\n  interaction.setActive(this.active);\n  this.interaction_ = interaction;\n  this.map.addInteraction(interaction);\n\n  const uid = olBase.getUid(this);\n  if (interaction instanceof olInteractionDraw) {\n    this.ngeoEventHelper_.addListenerKey(\n      uid,\n      olEvents.listen(\n        interaction,\n        'drawend',\n        this.handleDrawEnd_,\n        this\n      )\n    );\n  } else if (interaction instanceof ngeoInteractionMeasureLength ||\n     interaction instanceof ngeoInteractionMeasureArea) {\n    this.ngeoEventHelper_.addListenerKey(\n      uid,\n      olEvents.listen(\n        interaction,\n        'measureend',\n        this.handleDrawEnd_,\n        this\n      )\n    );\n  }\n};\n\n\n/**\n * Called when a feature is finished being drawn. Add the feature to the\n * collection.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.Controller_.prototype.handleDrawEnd_ = function(event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  googAsserts.assert(sketch);\n\n  // convert to multi if geomType is multi and feature is not\n  let geometry = sketch.getGeometry();\n  const type = geometry.getType();\n  if (this.geomType.indexOf('Multi') != type.indexOf('Multi')) {\n    geometry = ngeoUtils.toMulti(geometry);\n  }\n  const feature = new olFeature(geometry);\n  if (this.features instanceof olCollection) {\n    this.features.push(feature);\n  } else {\n    this.features.addFeature(feature);\n  }\n};\n\n\n/**\n * Cleanup event listeners and remove the interaction from the map.\n */\nexports.Controller_.prototype.$onDestroy = function() {\n  this.timeout_(() => {\n    const uid = olBase.getUid(this);\n    this.ngeoEventHelper_.clearListenerKey(uid);\n    this.interaction_.setActive(false);\n    this.map.removeInteraction(this.interaction_);\n  }, 0);\n};\n\nexports.controller('ngeoCreatefeatureController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.datetimepickerComponent\n */\nimport DateFormatter from 'ngeo/misc/php-date-formatter.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.css';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDateTimePicker', ['gettext']);\n\n/**\n * A directive used to display a date or time picker\n *\n * Example:\n *\n *      <input ngeo-datetimepicker\n *          ngeo-datetimepicker-options=\"{timepicker: false}\"\n *\n * @htmlAttribute {Object} ngeo-datetimepicker-options The options.\n *\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname ngeoDatetimepicker\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    controller: exports.Controller_,\n    bindToController: true,\n    scope: {\n      'options': '<ngeoDatetimepickerOptions'\n    }\n  };\n};\n\nexports.directive('ngeoDatetimepicker', exports.component_);\n\n\n/**\n * @param {!jQuery} $element Element.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDatetimepickerController\n */\nexports.Controller_ = function($element, gettextCatalog) {\n  /**\n   * @const {!jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * The gettext catalog\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * The options\n   * @type {Object|String}\n   * @private\n   */\n  this.options;\n};\n\n\n/**\n * Initialize the directive.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const lang = this.gettextCatalog_.getCurrentLanguage();\n  $.datetimepicker.setLocale(lang);\n  $.datetimepicker.setDateFormatter(new DateFormatter());\n  if (typeof this.options === 'string') {\n    this.options = angular.fromJson(this.options);\n  }\n  this.element_.datetimepicker(this.options);\n};\n\nexports.controller('ngeoDateTimePickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.attributesComponent\n */\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscDatetimepickerComponent from 'ngeo/misc/datetimepickerComponent.js';\n\nconst exports = angular.module('ngeoAttributes', [\n  ngeoMiscDatetimepickerComponent.name,\n  ngeoMiscEventHelper.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/editing/attributescomponent', require('./attributescomponent.html'));\n});\n\n\nexports.value('ngeoAttributesTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoAttributesTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/editing/attributescomponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoAttributesTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoAttributesTemplateUrl($attrs, ngeoAttributesTemplateUrl) {\n  return ngeoAttributesTemplateUrl($attrs);\n}\n\n\n/**\n * Component used to render the attributes of a feature into a form.\n * Example:\n *\n *     <ngeo-attributes\n *       ngeo-attributes-attributes=\"::ctrl.attributes\"\n *       ngeo-attributes-disabled=\"ctrl.attributesDisabled\"\n *       ngeo-attributes-feature=\"::ctrl.feature\">\n *     </ngeo-attributes>\n *\n * @htmlAttribute {Array.<ngeox.Attribute>} ngeo-attributes-attributes The\n *     list of attributes to use.\n * @htmlAttribute {boolean} ngeo-attributes-disabled Whether the fieldset should\n *     be disabled or not.\n * @htmlAttribute {ol.Feature} ngeo-attributes-feature The feature.\n *\n * @ngdoc component\n * @ngname ngeoAttributes\n */\nexports.component_ = {\n  controller: 'ngeoAttributesController as attrCtrl',\n  bindings: {\n    'attributes': '=ngeoAttributesAttributes',\n    'disabled': '<ngeoAttributesDisabled',\n    'feature': '=ngeoAttributesFeature'\n  },\n  require: {\n    'form': '^'\n  },\n  templateUrl: ngeoAttributesTemplateUrl\n};\n\nexports.component('ngeoAttributes', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoAttributesController\n */\nexports.Controller_ = function($scope, ngeoEventHelper) {\n\n  /**\n   * The list of attributes to create the form with.\n   * @type {Array.<ngeox.Attribute>}\n   * @export\n   */\n  this.attributes;\n\n  /**\n   * Whether the fieldset should be disabled or not.\n   * @type {boolean}\n   * @export\n   */\n  this.disabled = false;\n\n  /**\n   * The feature containing the values.\n   * @type {ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * The properties bound to the form, initialized with the inner properties\n   * of the feature.\n   * @type {?Object.<string, *>}\n   * @export\n   */\n  this.properties;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * While changes happen from the form (from the template), they are applied\n   * to the feature inner properties. The 'propertychange' event registered\n   * above does the opposite, i.e. it listens to the feature inner properties\n   * changes and apply them to the form. To prevent circular issues, while\n   * applying changes coming from the form, this flag is set. While set, changes\n   * from the feature inner properties are ignored.\n   * @type {boolean}\n   * @private\n   */\n  this.updating_ = false;\n};\n\n\n/**\n * Initialise the component.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.properties = this.feature.getProperties();\n\n  // Listen to the feature inner properties change and apply them to the form\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(this.feature, 'propertychange', this.handleFeaturePropertyChange_, this)\n  );\n};\n\n\n/**\n * Called when an input node value changes\n * @param {string} name Attribute name\n * @export\n */\nexports.Controller_.prototype.handleInputChange = function(name) {\n  this.updating_ = true;\n  const value = this.properties[name];\n  this.feature.set(name, value);\n  this.updating_ = false;\n};\n\n\n/**\n * Cleanup event listeners.\n */\nexports.Controller_.prototype.$onDestroy = function() {\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n};\n\n\n/**\n * @param {ol.Object.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturePropertyChange_ = function(evt) {\n  if (this.updating_) {\n    return;\n  }\n  this.properties[evt.key] = evt.target.get(evt.key);\n  this.scope_.$apply();\n};\n\n\nexports.controller('ngeoAttributesController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.exportfeaturesComponent\n */\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\n\nconst exports = angular.module('ngeoExportfeatures', [\n  ngeoMiscFeatureHelper.module.name\n]);\n\n/**\n * Directive used to export vector features in different types of format.\n * To configure which formats to use, define the `ngeoExportFeatureFormats`\n * value, as such:\n *\n *     app.module.value('ngeoExportFeatureFormats', [\n *         ngeo.misc.FeatureHelper.FormatType.KML,\n *         ngeo.misc.FeatureHelper.FormatType.GPX\n *     ]);\n *\n * Example:\n *\n *     <button\n *       ngeo-exportfeatures\n *       ngeo-exportfeatures-features=\"ctrl.features\"\n *       class=\"btn btn-link\">Export</button>\n *\n * @htmlAttribute {ol.Collection.<ol.Feature>} ngeo-exportfeatures-features The\n *     features to export\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoExportfeatures\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoExportfeaturesController as efCtrl',\n    scope: true,\n    bindToController: {\n      'features': '=ngeoExportfeaturesFeatures'\n    }\n  };\n};\n\n\nexports.directive('ngeoExportfeatures', exports.directive_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoExportfeaturesController\n */\nexports.Controller_ = function($element, $injector, $scope,\n  ngeoFeatureHelper) {\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  const uid = olBase.getUid(this);\n  const id = ['ngeo-exportfeature', uid].join('-');\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.id_ = id;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  let formats;\n  if ($injector.has('ngeoExportFeatureFormats')) {\n    formats = $injector.get('ngeoExportFeatureFormats');\n  } else {\n    formats = [ngeoMiscFeatureHelper.FormatType.KML];\n  }\n\n  /**\n   * @type {?jQuery}\n   * @private\n   */\n  this.menu_ = null;\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.items_ = [];\n\n  // build the drop-down menu and items if there's more than one format\n  if (formats.length > 1) {\n    $element.attr('id', id);\n    const $menu = $('<ul />', {\n      'class': 'dropdown-menu',\n      'aria-labelledby': id\n    }).appendTo($element.parent()[0]);\n\n    this.menu_ = $menu;\n    let $item;\n\n    formats.forEach((format) => {\n      $item = $('<li />')\n        .appendTo($menu)\n        .append($('<a />', {\n          'href': '#',\n          'text': format\n        })\n          .on(\n            ['click', id].join('.'),\n            this.handleMenuItemClick_.bind(this, format)\n          )\n        );\n      this.items_.push($item);\n    });\n  }\n\n  /**\n   * @type {Array.<string>}\n   * @private\n   */\n  this.formats_ = formats;\n\n  $element.on(['click', id].join('.'), this.handleElementClick_.bind(this));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Called when the element bound to this directive is clicked. Use the feature\n * helper to export the feature(s) depending on the format(s) available(s).\n * If there's only one, the call to the export method is direct, otherwise\n * a drop-down menu is show to let the user choose the format of the export.\n * Finally, if there's only one feature in the collection to export and there's\n * more than one format set, some formats may not support the type of geometry.\n * If that's the case, then disable each format item in the drop-down menu\n * that doesn't support the type of geometry.\n * @private\n */\nexports.Controller_.prototype.handleElementClick_ = function() {\n\n  const features = this.features.getArray();\n\n  if (this.formats_.length === 1) {\n    this.featureHelper_.export(features, this.formats_[0]);\n  } else if (features.length === 1) {\n    const feature = features[0];\n    const geom = feature.getGeometry();\n    let $item;\n    this.formats_.forEach((format, i) => {\n      $item = this.items_[i];\n      if (format === ngeoMiscFeatureHelper.FormatType.GPX) {\n        if (geom instanceof olGeomPoint ||\n            geom instanceof olGeomLineString) {\n          $item.removeClass('disabled');\n        } else {\n          $item.addClass('disabled');\n        }\n      }\n    });\n  }\n};\n\n\n/**\n * Called when a menu item is clicked. Export the features to the selected\n * format.\n * @param {string} format Format.\n * @param {jQuery.Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuItemClick_ = function(format, event) {\n  if (!$(event.target.parentElement).hasClass('disabled')) {\n    const features = this.features.getArray();\n    this.featureHelper_.export(features, format);\n  }\n};\n\n\n/**\n * Cleanup event listeners and remove the menu from DOM, if any.\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  const id = this.id_;\n\n  this.element_.off(['click', id].join('.'));\n\n  if (this.menu_) {\n    this.menu_.remove();\n    this.items_.forEach(($item) => {\n      $item.off(['click', id].join('.'));\n    });\n    this.items_.length = 0;\n    this.menu_ = null;\n  }\n};\n\n\nexports.controller(\n  'ngeoExportfeaturesController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.sortableComponent\n */\nimport 'jquery-ui/ui/widgets/sortable.js';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoSortable', []);\n\n\n/**\n * Provides a directive that allows drag-and-dropping DOM items between them.\n * It also changes the order of elements in the given array.\n *\n * It is typically used together with `ng-repeat`, for example for re-ordering\n * layers in a map.\n *\n * Example:\n *\n *     <ul ngeo-sortable=\"ctrl.layers\"\n *         ngeo-sortable-options=\"{handleClassName: 'ngeo-sortable-handle'}\">\n *       <li ng-repeat=\"layer in ctrl.layers\">\n *         <span class=\"ngeo-sortable-handle\">handle</span>{{layer.get('name')}}\n *       </li>\n *     </ul>\n *\n * The value of the \"ngeo-sortable\" attribute is an expression which evaluates\n * to an array (an array of layers in the above example). This is the array\n * that is re-ordered after a drag-and-drop.\n *\n * The element with the class \"ngeo-sortable-handle\" is the \"drag handle\".\n * It is required.\n *\n * This directives uses `$watchCollection` to watch the \"sortable\" array. So\n * if some outside code adds/removes elements to/from the \"sortable\" array,\n * the \"ngeoSortable\" directive will pick it up.\n *\n * See our live example: [../examples/layerorder.html](../examples/layerorder.html)\n *\n * @htmlAttribute {Array.<ol.layer.Base>} ngeo-sortable The layers to sort.\n * @htmlAttribute {!ngeox.miscSortableOptions} ngeo-sortable-options The options.\n * @htmlAttribute {Function(angular.JQLite, Array)?} ngeo-sortable-callback\n *     Callback function called after the move end. The Function will be called\n *     with the element and the sort array as arguments.\n * @htmlAttribute {Object?} ngeo-sortable-callback-ctx Context to apply at\n *     the call of the callback function.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoSortable\n */\nexports.component_ = function($timeout) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const sortable = /** @type {Array} */\n              (scope.$eval(attrs['ngeoSortable'])) || [];\n      googAsserts.assert(Array.isArray(sortable));\n\n      scope.$watchCollection(() => sortable, () => {\n        sortable.length && $timeout(resetUpDragDrop, 0);\n      });\n\n      const optionsObject = scope.$eval(attrs['ngeoSortableOptions']);\n      const options = getOptions(optionsObject);\n\n      const callbackFn = scope.$eval(attrs['ngeoSortableCallback']);\n      const callbackCtx = scope.$eval(attrs['ngeoSortableCallbackCtx']);\n\n      /**\n       * This function resets drag&drop for the list. It is called each\n       * time the sortable array changes (see $watchCollection above).\n       */\n      function resetUpDragDrop() {\n        // Add an index to the sortable to allow sorting of the\n        // underlying data.\n        const children = element.children();\n        for (let i = 0; i < children.length; ++i) {\n          angular.element(children[i]).data('idx', i);\n        }\n\n        const sortableElement = $(element);\n\n        // the element is already sortable; reset it.\n        if (sortableElement.data('ui-sortable')) {\n          sortableElement.off('sortupdate');\n          sortableElement.sortable('destroy');\n        }\n\n        const sortableOptions = {\n          'axis': 'y',\n          'classes': {\n            'ui-sortable-helper': options['draggerClassName']\n          }\n        };\n\n        // CSS class of the handle\n        if (options['handleClassName']) {\n          sortableOptions['handle'] = `.${options['handleClassName']}`;\n        }\n\n        // Placeholder for the item being dragged in the sortable list\n        if (options['placeholderClassName']) {\n          sortableOptions['placeholder'] = options['placeholderClassName'];\n          sortableOptions['forcePlaceholderSize'] = true;\n        }\n\n        sortableElement.sortable(sortableOptions);\n\n        // This event is triggered when the user stopped sorting and\n        // the DOM position (i.e. order in the sortable list) has changed.\n        sortableElement.on('sortupdate', (event, ui) => {\n          const oldIndex = $(ui.item[0]).data('idx');\n          const newIndex = ui.item.index();\n\n          // Update (data)-index on dom element to its new position\n          $(ui.item[0]).data('idx', newIndex);\n\n          // Move dragged item to new position\n          scope.$apply(() => {\n            sortable.splice(newIndex, 0, sortable.splice(oldIndex, 1)[0]);\n          });\n\n          // Call the callback function if it exists.\n          if (callbackFn instanceof Function) {\n            callbackFn.apply(callbackCtx, [element, sortable]);\n          }\n        });\n      }\n\n      /**\n       * @param {?} options Options after expression evaluation.\n       * @return {!ngeox.miscSortableOptions} Options object.\n       * @private\n       */\n      function getOptions(options) {\n        let ret;\n        const defaultHandleClassName = 'ngeo-sortable-handle';\n        if (options === undefined) {\n          ret = {'handleClassName': defaultHandleClassName};\n        } else {\n          if (options['handleClassName'] === undefined) {\n            options['handleClassName'] = defaultHandleClassName;\n          }\n          ret = /** @type {ngeox.miscSortableOptions} */ (options);\n        }\n        return ret;\n      }\n\n    }\n  };\n};\n\nexports.directive('ngeoSortable', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.popoverComponent\n */\nimport 'bootstrap/js/tooltip.js';\nimport 'bootstrap/js/popover.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoPopover', []);\n\n\n/**\n * Provides a directive used to display a Bootstrap popover.\n *\n *<div ngeo-popover>\n *  <a ngeo-popover-anchor class=\"btn btn-info\">anchor 1</a>\n *  <div ngeo-popover-content>\n *    <ul>\n *      <li>action 1:\n *        <input type=\"range\"/>\n *      </li>\n *    </ul>\n *  </div>\n *</div>\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopover\n * @return {angular.Directive} The Directive Definition Object.\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoPopoverController as popoverCtrl',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.anchorElm.on('hidden.bs.popover', () => {\n        /**\n         * @type {{inState : Object}}\n         */\n        const popover = ngeoPopoverCtrl.anchorElm.data('bs.popover');\n        popover['inState'].click = false;\n      });\n\n      ngeoPopoverCtrl.anchorElm.on('inserted.bs.popover', () => {\n        ngeoPopoverCtrl.bodyElm.show();\n        ngeoPopoverCtrl.shown = true;\n      });\n\n      ngeoPopoverCtrl.anchorElm.popover({\n        container: 'body',\n        html: true,\n        content: ngeoPopoverCtrl.bodyElm,\n        placement: attrs['ngeoPopoverPlacement'] || 'right'\n      });\n\n      if (attrs['ngeoPopoverDismiss']) {\n        $(attrs['ngeoPopoverDismiss']).on('scroll', () => {\n          ngeoPopoverCtrl.dismissPopover();\n        });\n      }\n\n      scope.$on('$destroy', () => {\n        ngeoPopoverCtrl.anchorElm.popover('destroy');\n        ngeoPopoverCtrl.anchorElm.unbind('inserted.bs.popover');\n        ngeoPopoverCtrl.anchorElm.unbind('hidden.bs.popover');\n      });\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopoverAnchor\n * @return {angular.Directive} The Directive Definition Object\n */\nexports.anchorComponent = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoPopover',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.anchorElm = elem;\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopoverContent\n * @return {angular.Directive} The Directive Definition Object\n */\nexports.contentComponent = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoPopover',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.bodyElm = elem;\n      elem.hide();\n    }\n  };\n};\n\n/**\n * The controller for the 'popover' directive.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoPopoverController\n * @param {angular.Scope} $scope Scope.\n */\nexports.PopoverController_ = function($scope) {\n  /**\n   * The state of the popover (displayed or not)\n   * @type {boolean}\n   * @export\n   */\n  this.shown = false;\n\n  /**\n   * @type {angular.JQLite|undefined}\n   * @export\n   */\n  this.anchorElm = undefined;\n\n  /**\n   * @type {angular.JQLite|undefined}\n   * @export\n   */\n  this.bodyElm = undefined;\n\n  function onMouseDown(clickEvent) {\n    if (this.anchorElm[0] !== clickEvent.target &&\n      this.bodyElm.parent()[0] !== clickEvent.target &\n      this.bodyElm.parent().find(clickEvent.target).length === 0 && this.shown) {\n      this.dismissPopover();\n    }\n  }\n\n  angular.element('body').on('mousedown', onMouseDown.bind(this));\n\n  $scope.$on('$destroy', () => {\n    angular.element('body').off('mousedown', onMouseDown);\n  });\n};\n\n\n/**\n * Dissmiss popover function\n * @export\n */\nexports.PopoverController_.prototype.dismissPopover = function() {\n  this.shown = false;\n  this.anchorElm.popover('hide');\n};\n\n\nexports.controller('NgeoPopoverController', exports.PopoverController_);\nexports.directive('ngeoPopover', exports.component_);\nexports.directive('ngeoPopoverAnchor', exports.anchorComponent);\nexports.directive('ngeoPopoverContent', exports.contentComponent);\n\n\nexport default exports;\n","/**\n * @module gmf.search.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfSearchFulltextSearch from 'gmf/search/FulltextSearch.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscAutoProjection from 'ngeo/misc/AutoProjection.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopoverComponent from 'ngeo/message/popoverComponent.js';\n\nimport ngeoSearchModule from 'ngeo/search/module.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olObj from 'ol/obj.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfSearch', [\n  gmfLayertreeTreeManager.module.name,\n  gmfSearchFulltextSearch.module.name,\n  gmfThemeThemes.module.name,\n  ngeoMiscAutoProjection.module.name,\n  ngeoMiscColorpickerComponent.name,\n  ngeoSearchModule.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessagePopoverComponent.name,\n]);\n\n\n/**\n * @param {angular.JQLite} element Element.\n * @param {angular.Attributes} attrs Attributes.\n * @return {string} Template URL.\n */\nexports.gmfSearchTemplateUrl_ = (element, attrs) => {\n  const templateUrl = attrs['gmfSearchTemplateurl'];\n  return templateUrl !== undefined ? templateUrl :\n    'gmf/search';\n};\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/search', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfSearchTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfSearchTemplateUrl($element, $attrs, gmfSearchTemplateUrl) {\n  return gmfSearchTemplateUrl($element, $attrs);\n}\n\n\n/**\n * A component that allows to search and recenter on a selected\n * result's feature.\n * It can search in multiple GeoJSON datasources.\n * It can filter and group results by a feature's property.\n *\n * This component uses the {@link ngeo.map.FeatureOverlayMgr} to create a\n * feature overlay for drawing features on the map. The application\n * is responsible to initialize the {@link ngeo.map.FeatureOverlayMgr}\n * with the map.\n *\n * Example flat results:\n *\n *      <gmf-search gmf-search-map=\"::ctrl.map\"\n *        gmf-search-options=\"::ctrl.searchOptions\"\n *        gmf-search-styles=\"::ctrl.searchStyles\"\n *        gmf-search-datasources=\"::ctrl.searchDatasources\"\n *        gmf-search-coordinatesprojections=\"::ctrl.searchCoordinatesProjections\">\n *      </gmf-search>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('fulltextsearchUrl', '${request.route_url('fulltextsearch', _query={\"limit\": 20}) | n}');\n *          module.value('gmfSearchGroups', []);\n *          module.constant('gmfSearchActions', [\n *                {action: 'add_theme', title: 'Add a theme'},\n *                {action: 'add_group', title: 'Add a sub theme'},\n *                {action: 'add_layer', title: 'Add a layer'}\n *          ]);\n *        })();\n *      </script>\n *\n * Example with categories:\n *\n *      <gmf-search gmf-search-map=\"::ctrl.map\"\n *        gmf-search-options=\"::ctrl.searchOptions\"\n *        gmf-search-styles=\"::ctrl.searchStyles\"\n *        gmf-search-datasources=\"::ctrl.searchDatasources\"\n *        gmf-search-coordinatesprojections=\"::ctrl.searchCoordinatesProjections\">\n *      </gmf-search>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('fulltextsearchUrl', '${request.route_url('fulltextsearch', _query={\"limit\": 30, \"partitionlimit\": 5}) | n}');\n *          module.value('gmfSearchGroups', ${dumps(fulltextsearch_groups) | n});\n *          module.value('gmfSearchActions', []);\n *        })();\n *     </scriptrchUrl' value in the examples above set three \"_query\" parameters: \"limit\",\n *\n * The 'fulltextsearchUrl' value in the examples above set three \"_query\" parameters: \"limit\",\n * \"partitionlimit\" and \"ranksystem\". For this last one \"ts_rank_cd\" is the only effective value. It's used to\n * order your search results with the \"ts_rank_cd\" ranking system from PostgreSQL module pg_trgm. Without\n * this value, the PostgreSQL function \"similarity\" (module pg_trgm) is used for the ranking. Read the\n * full-text search c2cgeoportal documentation to know more.\n * You can also add these parameters to the \"url\" variable of one (or more) of the\n * gmfx.SearchDirectiveDatasource given to this component (here within the \"ctrl.searchDatasources\"). That\n * allows you to have multiples configurations on one search component.\n *\n * @htmlAttribute {string} gmf-search-input-value The input value (read only).\n * @htmlAttribute {ol.Map} gmf-search-map The map.\n * @htmlAttribute {TypeaheadOptions|undefined} gmf-search-options Addition Typeahead options.\n * @htmlAttribute {gmfx.SearchComponentDatasource} gmf-search-datasource\n *      The datasources.\n * @htmlAttribute {Object.<string, ol.style.Style>}\n *      gmf-search-styles A map of styles to apply on searched features. Keys\n *      must be the 'layer_name' property of features except for coordinates\n *      where the key ifor its style is the value of the constant\n *      'gmf.COORDINATES_LAYER_NAME'. The 'default' key is used to apply the\n *      default style.\n * @htmlAttribute {Array.<string>} gmf-search-coordinatesprojections codes\n *      of supported projections for coordinates search (projections must be\n *      defined in ol3). If not provided, only the map's view projection\n *      format will be supported.\n * @htmlAttribute {ngeox.SearchComponentListeners} gmf-search-listeners\n *      The listeners.\n * @htmlAttribute {boolean=} gmf-search-clearbutton Optional clear button in the input search. Default to true.\n * @htmlAttribute {number=} gmf-search-delay Optional bloodhound request delay in ms. Default to 50 ms.\n * @htmlAttribute {boolean=} gmf-search-colorchooser Optional. Whether to let the user\n *      change the style of the feature on the map. Default is false.\n * @htmlAttribute {number=} gmf-search-maxzoom Optional maximum zoom we will zoom on result, default is 16.\n * @htmlAttribute {function=} gmf-search-on-init Optional function called when the component is initialized.\n * @ngdoc component\n * @ngname gmfSearch\n */\nexports.component_ = {\n  bindings: {\n    'inputValue': '=?gmfSearchInputValue',\n    'placeholder': '@?gmfSearchPlaceholder',\n    'map': '<gmfSearchMap',\n    'datasources': '<gmfSearchDatasources',\n    'typeaheadOptions': '<?gmfSearchOptions',\n    'featuresStyles': '<?gmfSearchStyles',\n    'clearButton': '=?gmfSearchClearbutton',\n    'colorChooser': '<?gmfSearchColorchooser',\n    'coordinatesProjections': '<?gmfSearchCoordinatesprojections',\n    'additionalListeners': '<gmfSearchListeners',\n    'maxZoom': '<?gmfSearchMaxzoom',\n    'delay': '<?gmfSearchDelay',\n    'onInitCallback': '<?gmfSearchOnInit'\n  },\n  controller: 'gmfSearchController',\n  templateUrl: gmfSearchTemplateUrl\n};\n\n\nexports.value('gmfSearchTemplateUrl', exports.gmfSearchTemplateUrl_);\n\n\n// Register the controller in the module\nexports.component('gmfSearch', exports.component_);\n\n\n/**\n * @private\n */\nexports.SearchController_ = class {\n\n  /**\n   * @private\n   * @param {jQuery} $element Element.\n   * @param {angular.Scope} $scope The component's scope.\n   * @param {angular.$compile} $compile Angular compile service.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {ngeo.misc.AutoProjection} ngeoAutoProjection The ngeo coordinates service.\n   * @param {ngeo.search.createGeoJSONBloodhound.Function} ngeoSearchCreateGeoJSONBloodhound The ngeo\n   *     create GeoJSON Bloodhound service.\n   * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n   *     overlay manager service.\n   * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n   * @param {gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n   * @param {gmf.search.FulltextSearch} gmfSearchFulltextSearch gmf Full text search service.\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfSearchController\n   */\n  constructor($element, $scope, $compile, $timeout, $injector,\n    gettextCatalog, ngeoAutoProjection, ngeoSearchCreateGeoJSONBloodhound,\n    ngeoFeatureOverlayMgr, gmfThemes, gmfTreeManager, gmfSearchFulltextSearch) {\n\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {angular.$compile}\n     * @private\n     */\n    this.compile_ = $compile;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    /**\n     * @type {gmf.layertree.TreeManager}\n     * @private\n     */\n    this.gmfTreeManager_ = gmfTreeManager;\n\n    /**\n     * @type {gmf.search.FulltextSearch}\n     * @private\n     */\n    this.fullTextSearch_ = gmfSearchFulltextSearch;\n\n    /**\n     * @type {ngeo.search.createGeoJSONBloodhound.Function}\n     * @private\n     */\n    this.ngeoSearchCreateGeoJSONBloodhound_ = ngeoSearchCreateGeoJSONBloodhound;\n\n    /**\n     * @type {ngeo.map.FeatureOverlayMgr}\n     * @private\n     */\n    this.ngeoFeatureOverlayMgr = ngeoFeatureOverlayMgr;\n\n    /**\n     * @type {ngeo.statemanager.Location|undefined}\n     * @private\n     */\n    this.ngeoLocation_;\n\n    if ($injector.has('ngeoLocation')) {\n      this.ngeoLocation_ = $injector.get('ngeoLocation');\n    }\n\n    /**\n     * @type {ngeo.misc.AutoProjection}\n     * @private\n     */\n    this.ngeoAutoProjection_ = ngeoAutoProjection;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {Object}\n     * @private\n     */\n    this.styles_ = {};\n\n    /**\n     * @type {function()}\n     * @export\n     */\n    this.onInitCallback;\n\n    /**\n     * Whether or not to show a button to clear the search text.\n     * Default to true.\n     * @type {boolean}\n     * @export\n     */\n    this.clearButton;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.colorChooser;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.placeholder;\n\n    /**\n     * @type {number}\n     * @export\n     */\n    this.delay;\n\n    /**\n     * The maximum zoom we will zoom on result.\n     * @type {number}\n     * @export\n     */\n    this.maxZoom = 16;\n\n    /**\n     * Supported projections for coordinates search.\n     * @type {Array.<ol.proj.Projection>}\n     * @export\n     */\n    this.coordinatesProjections;\n\n    /**\n     * @type {ngeo.map.FeatureOverlay}\n     * @private\n     */\n    this.featureOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n    /**\n     * @type {Array.<gmfx.SearchComponentDatasource>}\n     * @export\n     */\n    this.datasources = [];\n\n    /**\n     * @type {TypeaheadOptions}\n     * @export\n     */\n    this.typeaheadOptions;\n\n    /**\n     * @type {TypeaheadOptions}\n     * @export\n     */\n    this.options = /** @type {TypeaheadOptions} */ ({\n      highlight: true\n    });\n\n    /**\n     * @type {Object.<string, ol.style.Style>}\n     * @export\n     */\n    this.featuresStyles;\n\n    /**\n     * @type {Array.<TypeaheadDataset>}\n     * @export\n     */\n    this.datasets = [];\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.inputValue = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.color;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.displayColorPicker = false;\n\n    /**\n     * @type {ngeox.SearchDirectiveListeners}\n     * @export\n     */\n    this.listeners;\n\n    /**\n     * @type {ngeox.SearchDirectiveListeners}\n     * @export\n     */\n    this.additionalListeners;\n  }\n\n\n  /**\n   * Called on initialization of the controller.\n   */\n  $onInit() {\n    const gettextCatalog = this.gettextCatalog_;\n    this.clearButton = this.clearButton !== false;\n    this.colorChooser = this.colorChooser === true;\n    if (this.delay === undefined) {\n      this.delay = 50;\n    }\n    this.placeholder = this.placeholder !== undefined ? this.placeholder :\n      gettextCatalog.getString('Search…');\n\n    // Init coordinates projections\n    let coordProj = this.coordinatesProjections;\n    if (coordProj === undefined) {\n      coordProj = [this.map.getView().getProjection()];\n    } else {\n      coordProj = this.ngeoAutoProjection_.getProjectionList(\n        /** @type {Array.<string>} */ (coordProj)\n      );\n    }\n    this.coordinatesProjections = coordProj;\n\n    if (!this.clearButton) {\n      // Empty the search field on focus and blur.\n      this.element_.find('input').on('focus blur', () => {\n        this.clear();\n      });\n    }\n\n    if (this.onInitCallback) {\n      this.onInitCallback();\n    }\n\n    this.initStyles_();\n\n    this.featureOverlay_.setStyle(this.getSearchStyle_.bind(this));\n\n    if (this.typeaheadOptions) {\n      olObj.assign(this.options, this.typeaheadOptions);\n    }\n\n    this.initDatasets_();\n\n    this.scope_.$watch(\n      () => this.color,\n      this.setStyleColor.bind(this)\n    );\n\n    this.listeners = this.mergeListeners_(\n      this.additionalListeners,\n      /** @type {ngeox.SearchDirectiveListeners} */ ({\n        select: this.select_.bind(this),\n        close: this.close_.bind(this),\n        datasetsempty: this.datasetsempty_.bind(this)\n      })\n    );\n\n    if (this.ngeoLocation_) {\n      const searchQuery = this.ngeoLocation_.getParam('search');\n      if (searchQuery) {\n        let resultIndex = 1;\n        if (this.ngeoLocation_.getParam('search-select-index')) {\n          resultIndex = parseInt(this.ngeoLocation_.getParam('search-select-index'), 10);\n        }\n        let mapZoom;\n        if (this.ngeoLocation_.getParam('search-maxzoom')) {\n          mapZoom = parseInt(this.ngeoLocation_.getParam('search-maxzoom'), 10);\n        } else if (this.ngeoLocation_.getParam('map_zoom')) {\n          mapZoom = parseInt(this.ngeoLocation_.getParam('map_zoom'), 10);\n        }\n        this.fulltextsearch_(searchQuery, resultIndex, mapZoom);\n      }\n    }\n  }\n\n\n  /**\n   * Merges the custom listeners received via the component attributes and the\n   * listeners that are needed for this controller to function (close and select).\n   * @param {ngeox.SearchDirectiveListeners} additionalListeners Custom provided\n   *    listeners.\n   * @param {ngeox.SearchDirectiveListeners} listeners Default listeners.\n   * @return {ngeox.SearchDirectiveListeners} Merged listeners.\n   * @private\n   */\n  mergeListeners_(additionalListeners, listeners) {\n    if (additionalListeners === undefined) {\n      return listeners;\n    }\n    return {\n      open: additionalListeners.open,\n      close: additionalListeners.close === undefined ?\n        listeners.close : function() {\n          listeners.close();\n          additionalListeners.close();\n        },\n      cursorchange: additionalListeners.cursorchange,\n      datasetsempty: additionalListeners.datasetsempty,\n      select: additionalListeners.select === undefined ?\n        listeners.select : function(evt, obj, dataset) {\n          listeners.select(evt, obj, dataset);\n          additionalListeners.select(evt, obj, dataset);\n        },\n      autocomplete: additionalListeners.autocomplete\n    };\n  }\n\n\n  /**\n   * Initialize datasets for the search\n   * @private\n   */\n  initDatasets_() {\n    const gettextCatalog = this.gettextCatalog_;\n    for (let i = 0; i < this.datasources.length; i++) {\n      const datasource = this.datasources[i];\n\n      /** @type {Array.<string>} */\n      const groupValues = datasource.groupValues !== undefined ? datasource.groupValues : [];\n      /** @type {Array.<string>} */\n      const groupActions = datasource.groupActions ? datasource.groupActions : [];\n      const filters = [];\n\n      if (groupValues.length === 0) {\n        filters.push({\n          'title': '',\n          'filter': this.filterLayername_()\n        });\n      } else {\n        groupValues.forEach(function(layerName) {\n          filters.push({\n            'title': layerName,\n            'filter': this.filterLayername_(layerName)\n          });\n        }, this);\n      }\n\n      groupActions.forEach(function(action) {\n        filters.push({\n          'title': gettextCatalog.getString(action['title']),\n          'filter': this.filterAction_(action['action'])\n        });\n      }, this);\n\n      filters.forEach(function(filter) {\n        this.datasets.push(this.createDataset_({\n          bloodhoundOptions: datasource.bloodhoundOptions,\n          datasetTitle: filter['title'],\n          groupsKey: 'layer_name',\n          labelKey: datasource.labelKey,\n          projection: datasource.projection,\n          typeaheadDatasetOptions: datasource.typeaheadDatasetOptions,\n          url: datasource.url\n        }, filter['filter']));\n      }, this);\n    }\n\n    // For searching coordinates\n    this.datasets.push({\n      source: this.createSearchCoordinates_(this.map.getView()),\n      name: 'coordinates',\n      display: 'label',\n      templates: {\n        header: () => {\n          const header = gettextCatalog.getString('Recenter to');\n          return `<div class=\"gmf-search-header\" translate>${header}</div>`;\n        },\n        suggestion: (suggestion) => {\n          const coordinates = suggestion['label'];\n\n          let html = `<p class=\"gmf-search-label\">${coordinates}</p>`;\n          html = `<div class=\"gmf-search-datum\">${html}</div>`;\n          return html;\n        }\n      }\n    });\n  }\n\n\n  /**\n   * @param {gmfx.SearchComponentDatasource} config The config of the dataset.\n   * @param {(function(GeoJSONFeature): boolean)=} opt_filter A filter function\n   *     based on a GeoJSONFeaturesCollection's array.\n   * @return {TypeaheadDataset} A typeahead dataset.\n   * @private\n   */\n  createDataset_(config, opt_filter) {\n    const gettextCatalog = this.gettextCatalog_;\n    const componentScope = this.scope_;\n    const compile = this.compile_;\n    const bloodhoundEngine = this.createAndInitBloodhound_(config, opt_filter);\n    const typeaheadDataset = /** @type {TypeaheadDataset} */ ({\n      limit: Infinity,\n      source: bloodhoundEngine.ttAdapter(),\n      display: (suggestion) => {\n        const feature = /** @type {ol.Feature} */ (suggestion);\n        return feature.get(config.labelKey);\n      },\n      templates: /* TypeaheadTemplates */ ({\n        header: () => {\n          if (config.datasetTitle === undefined) {\n            return '';\n          } else {\n            const header = gettextCatalog.getString(config.datasetTitle);\n            return `<div class=\"gmf-search-header\">${header}</div>`;\n          }\n        },\n        suggestion: (suggestion) => {\n          const feature = /** @type {ol.Feature} */ (suggestion);\n\n          const scope = componentScope.$new(true);\n          scope['feature'] = feature;\n\n          let html = `<p class=\"gmf-search-label\" translate>${\n            feature.get(config.labelKey)}</p>`;\n          html += `<p class=\"gmf-search-group\" translate>${feature.get('layer_name') ||\n                  config.datasetTitle}</p>`;\n          html = `<div class=\"gmf-search-datum\">${html}</div>`;\n          return compile(html)(scope);\n        }\n      })\n    });\n    if (config.typeaheadDatasetOptions) {\n      olObj.assign(typeaheadDataset, config.typeaheadDatasetOptions);\n    }\n    return typeaheadDataset;\n  }\n\n\n  /**\n   * @param {string} action The action to keep.\n   * @return {(function(GeoJSONFeature): boolean)} A filter function based on a\n   *     GeoJSONFeaturesCollection's array.\n   * @private\n   */\n  filterAction_(action) {\n    return (\n    /**\n         * @param {GeoJSONFeature} feature\n         * @return {boolean}\n         */\n      function(feature) {\n        const properties = feature['properties'];\n        if (properties['actions']) {\n          // result is an action (add_theme, add_group, ...)\n          // add it to the corresponding group\n          return !properties['layer_name'] && properties['actions'].some(act => act.action === action);\n        } else {\n          return false;\n        }\n      }\n    );\n  }\n\n\n  /**\n   * @param {string=} opt_layerName The layerName to keep. If null, keep all layers\n   *     (In all cases, except actions layers).\n   * @return {(function(GeoJSONFeature): boolean)} A filter function based on a\n   *     GeoJSONFeaturesCollection's array.\n   * @private\n   */\n  filterLayername_(opt_layerName) {\n    return (\n    /**\n         * @param {GeoJSONFeature} feature\n         * @return {boolean}\n         */\n      function(feature) {\n        const featureLayerName = feature['properties']['layer_name'];\n        // Keep only layers with layer_name (don't keep action layers).\n        if (featureLayerName === undefined) {\n          return false;\n        }\n        if (opt_layerName === undefined) {\n          return true;\n        }\n        return featureLayerName === opt_layerName;\n      }\n    );\n  }\n\n\n  /**\n   * @param {gmfx.SearchComponentDatasource} config The config of the dataset.\n   * @param {(function(GeoJSONFeature): boolean)=} opt_filter Afilter function\n   *     based on a GeoJSONFeaturesCollection's array.\n   * @return {Bloodhound} The bloodhound engine.\n   * @private\n   */\n  createAndInitBloodhound_(config, opt_filter) {\n    const mapProjectionCode = this.map.getView().getProjection().getCode();\n    const remoteOptions = this.getBloodhoudRemoteOptions_();\n    const bloodhound = this.ngeoSearchCreateGeoJSONBloodhound_(config.url, opt_filter,\n      olProj.get(mapProjectionCode), olProj.get(config.projection),\n      config.bloodhoundOptions, remoteOptions);\n    bloodhound.initialize();\n    return bloodhound;\n  }\n\n\n  /**\n   * @return {BloodhoundRemoteOptions} Options.\n   * @private\n   */\n  getBloodhoudRemoteOptions_() {\n    const gettextCatalog = this.gettextCatalog_;\n    return {\n      rateLimitWait: this.delay,\n      prepare: (query, settings) => {\n        const url = settings.url;\n        const lang = gettextCatalog.currentLanguage;\n        const interfaceName = 'mobile'; // FIXME dynamic interfaces\n        settings.xhrFields = {\n          withCredentials: true\n        };\n        settings.url = olUri.appendParams(url, {\n          'query': query,\n          'lang': lang,\n          'interface': interfaceName\n        });\n        return settings;\n      }\n    };\n  }\n\n\n  /**\n   * @param {ol.View} view View.\n   * @return {function(string, function(Object))} function defining parameters for the search suggestions.\n   * @private\n   */\n  createSearchCoordinates_(view) {\n    const viewProjection = view.getProjection();\n    const extent = viewProjection.getExtent();\n    return function(query, callback) {\n      const suggestions = [];\n      const coordinates = this.ngeoAutoProjection_.stringToCoordinates(query);\n      if (coordinates === null) {\n        return;\n      }\n      const position = this.ngeoAutoProjection_.tryProjectionsWithInversion(coordinates,\n        extent, viewProjection, this.coordinatesProjections);\n      if (position === null) {\n        return;\n      }\n      suggestions.push({\n        label: coordinates.join(' '),\n        position: position,\n        'tt_source': 'coordinates'\n      });\n      callback(suggestions);\n    }.bind(this);\n  }\n\n\n  /**\n   * Init the style object for the search results. It set defaults for the\n   * coordinates and the polygon styles, and both can be overloaded from component\n   * attributes. The styles from component attributes can specify custom styles\n   * for each search group.\n   * @private\n   */\n  initStyles_() {\n    this.styles_[gmfBase.COORDINATES_LAYER_NAME] = new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({color: [0, 0, 0, 0.7], width: 2}),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    });\n    const fill = new olStyleFill({\n      color: [65, 134, 240, 0.5]\n    });\n    const stroke = new olStyleStroke({\n      color: [65, 134, 240, 1],\n      width: 2\n    });\n    this.styles_['default'] = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke\n    });\n    const customStyles = this.featuresStyles || {};\n    olObj.assign(this.styles_, customStyles);\n  }\n\n  /**\n   * Style for search results.\n   * @param {null|ol.Feature|ol.render.Feature} feature The searched feature.\n   * @param {number} resolution The current resolution of the map.\n   * @return {ol.style.Style} A style for this kind of features.\n   * @private\n   */\n  getSearchStyle_(feature, resolution) {\n    googAsserts.assert(feature);\n    const style = this.styles_[feature.get('layer_name')] || this.styles_['default'];\n    if (this.color) {\n      const color = olColor.asArray(this.color);\n\n      const strokeColor = color.slice();\n      // 100% opacity for the stroke color\n      strokeColor[3] = 1;\n\n      const fillColor = color.slice();\n      // 50% opacity for the fill color\n      fillColor[3] = 0.5;\n\n      const strokeStyle = style.getStroke();\n      if (strokeStyle) {\n        strokeStyle.setColor(strokeColor);\n      }\n      const fillStyle = style.getFill();\n      if (fillStyle) {\n        fillStyle.setColor(fillColor);\n      }\n      const image = style.getImage();\n      if (image) {\n        style.setImage(new olStyleCircle({\n          fill: new olStyleFill({color: fillColor}),\n          radius: 5,\n          stroke: new olStyleStroke({color: strokeColor})\n        }));\n      }\n    }\n    return style;\n  }\n\n  /**\n   * Set a new color for the search feature style.\n   * @param {string} color The color to set.\n   * @export\n   */\n  setStyleColor(color) {\n    if (color) {\n      this.color = color;\n      this.ngeoFeatureOverlayMgr.getLayer().changed();\n    }\n  }\n\n  /**\n   * @private\n   */\n  setTTDropdownVisibility_() {\n    if (this.clearButton) {\n      const ttDropdown = this.element_.find('.twitter-typeahead .tt-menu');\n      (this.inputValue) ? ttDropdown.show() : ttDropdown.hide();\n    }\n  }\n\n\n  /**\n   * @export\n   */\n  onClearButton() {\n    this.featureOverlay_.clear();\n    this.clear();\n  }\n\n\n  /**\n   * @export\n   */\n  clear() {\n    const typeahead = this.element_.find('.twitter-typeahead');\n    const ttmenu = typeahead.children('.tt-menu');\n    const inputs = typeahead.children('input');\n    // clear model value, the 'real' input value and tt's suggestions\n    this.inputValue = '';\n    $(inputs[1]).typeahead('val', '');\n    ttmenu.children('.tt-dataset').empty();\n    this.setTTDropdownVisibility_();\n    this.displayColorPicker = false;\n  }\n\n\n  /**\n   * @export\n   */\n  blur() {\n    const typeahead = this.element_.find('.twitter-typeahead');\n    const inputs = typeahead.children('input');\n    // Blur as soon as possible in digest loops\n    this.timeout_(() => {\n      $(inputs[1]).blur();\n    });\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {Object|ol.Feature} suggestion Suggestion.\n   * @param {TypeaheadDataset} dataset Dataset.\n   * @private\n   */\n  select_(event, suggestion, dataset) {\n    if (suggestion['tt_source'] === 'coordinates') {\n      const geom = new olGeomPoint(suggestion['position']);\n\n      this.featureOverlay_.clear();\n      this.featureOverlay_.addFeature(new olFeature({\n        geometry: geom,\n        'layer_name': gmfBase.COORDINATES_LAYER_NAME\n      }));\n      this.map.getView().setCenter(suggestion['position']);\n      this.leaveSearch_();\n    } else {\n      googAsserts.assertInstanceof(suggestion, olFeature);\n      this.selectFromGMF_(event, suggestion, dataset);\n    }\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {ol.Feature} feature Feature.\n   * @param {TypeaheadDataset} dataset Dataset.\n   * @private\n   */\n  selectFromGMF_(event, feature, dataset) {\n    const actions = feature.get('actions');\n    const featureGeometry = /** @type {ol.geom.SimpleGeometry} */\n        (feature.getGeometry());\n    if (actions) {\n      for (let i = 0, ii = actions.length; i < ii; i++) {\n        const action = actions[i];\n        const actionName = action['action'];\n        const actionData = action['data'];\n        if (actionName == 'add_theme') {\n          this.gmfThemes_.getThemesObject().then((themes) => {\n            const theme = gmfThemeThemes.findThemeByName(themes, actionData);\n            if (theme) {\n              this.gmfTreeManager_.addFirstLevelGroups(theme.children);\n            }\n          });\n        } else if (actionName == 'add_group') {\n          this.gmfTreeManager_.addGroupByName(actionData, true);\n        } else if (actionName == 'add_layer') {\n          const groupActions = /** @type {Array.<string>} */ (\n            this.datasources[0].groupActions);\n          let datasourcesActionsHaveAddLayer;\n          groupActions.forEach((groupAction) => {\n            if (groupAction['action'] === 'add_layer') {\n              return datasourcesActionsHaveAddLayer = true;\n            }\n          });\n          if (datasourcesActionsHaveAddLayer) {\n            const silent = !!featureGeometry;\n            this.gmfTreeManager_.addGroupByLayerName(actionData, true, silent);\n          }\n        }\n      }\n    }\n\n    const size = this.map.getSize();\n    if (featureGeometry && size) {\n      const view = this.map.getView();\n      this.featureOverlay_.clear();\n      this.featureOverlay_.addFeature(feature);\n      this.displayColorPicker = true;\n      const fitArray = featureGeometry.getType() === 'GeometryCollection' ?\n        featureGeometry.getExtent() : featureGeometry;\n      view.fit(fitArray, {\n        size: size,\n        maxZoom: this.maxZoom\n      });\n    }\n    this.leaveSearch_();\n  }\n\n\n  /**\n   * @private\n   */\n  leaveSearch_() {\n    if (!this.clearButton) {\n      this.clear();\n    }\n    this.blur();\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @private\n   */\n  close_(event) {\n    if (!this.clearButton) {\n      this.setTTDropdownVisibility_();\n    }\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {string} query Query.\n   * @param {boolean} empty Empty.\n   * @private\n   */\n  datasetsempty_(event, query, empty) {\n    // workaround to display a 'no result found' in the search result when all of\n    // the datasets are empty.\n    // based on https://github.com/twitter/typeahead.js/issues/780#issuecomment-251554452\n    // FIXME: remove this workaround when https://github.com/corejavascript/typeahead.js/issues/60 is fixed\n\n    const menu = this.element_.find('.twitter-typeahead .tt-menu');\n    const message = menu.children('.gmf-search-no-results');\n    if (message.length == 0) {\n      const div = $('<div class=\"gmf-search-no-results\" translate>No result found</div>');\n      menu.append(div);\n    }\n    if (empty) {\n      message.show();\n      menu.addClass('gmf-search-no-results');\n    } else {\n      menu.removeClass('gmf-search-no-results');\n      message.hide();\n    }\n  }\n\n\n  /**\n   * Performs a full-text search and centers the map on the first search result.\n   * @param {string} query Search query.\n   * @param {number} resultIndex Return nth result instead.\n   * @param {number=} opt_zoom Optional zoom level.\n   * @private\n   */\n  fulltextsearch_(query, resultIndex, opt_zoom) {\n    if (resultIndex < 1) { // can't be lower than one\n      resultIndex = 1;\n    }\n    this.fullTextSearch_.search(query, {'limit': resultIndex})\n      .then((data) => {\n        if (data && data.features[resultIndex - 1]) {\n          const format = new olFormatGeoJSON();\n          const feature = format.readFeature(data.features[resultIndex - 1]);\n          this.featureOverlay_.addFeature(feature);\n          const fitOptions = /** @type {olx.view.FitOptions} */ ({});\n          if (opt_zoom !== undefined) {\n            fitOptions.maxZoom = opt_zoom;\n            fitOptions.size = this.map.getSize();\n          }\n          this.map.getView().fit(feature.getGeometry().getExtent(), fitOptions);\n          this.inputValue = /** @type {string} */ (feature.get('label'));\n        }\n      });\n  }\n};\n\n\n// Register the controller in the module\nexports.controller('gmfSearchController', exports.SearchController_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.recenter\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.syncArrays\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * Provides a function that synchronizes two arrays, arr1 and\n * arr2. arr2 is a subset of arr1, it includes the elements of arr1 that passes\n * the filter. When elements are added to/removed from arr1, arr2 is updated to\n * include the elements of arr1 that pass the filter. When the order of\n * elements in arr2 changes, arr1 is reordered to have the same order as arr2.\n *\n * This can for example be used to synchronize the array of layers in the map\n * with the array of selected layers, where layers may be added to/removed from\n * the map, and the order of selected layers may change.\n *\n *     let dereg = ngeoSyncArrays(map.getLayers().getArray(), selectedLayers,\n *         true, scope, function(layer) {\n *           // exclude the layer at index 0 in the map\n *           return map.getLayers().indexOf(layer) !== 0;\n *         });\n *\n * This will return a function that can be called to cancel synchronization.\n *\n * @param {Array.<T>} arr1 Array 1.\n * @param {Array.<T>} arr2 Array 2.\n * @param {boolean} reverse `true` if arr2 is in reverse order, `false`\n *     otherwise.\n * @param {angular.Scope} scope Angular scope. Used to watch arr1 and arr2\n *     using $watchCollection.\n * @param {function(T):boolean} filter Filter function.\n * @return {function()} Function to call to stop synchronization\n * @template T\n */\nconst exports = function(arr1, arr2, reverse, scope, filter) {\n\n\n  // Update arr2 when elements are added to, or removed from, arr1.\n\n  const dereg1 = scope.$watchCollection(() => arr1, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = arr1.length - 1, j = 0; i >= 0; --i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    }\n    arr2.length = j;\n  });\n\n\n  // Update arr1 when the order of elements changes in arr2.\n\n  const dereg2 = scope.$watchCollection(() => arr2, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = 0, ii = arr1.length, j = arr2.length - 1; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j--];\n        }\n      }\n      googAsserts.assert(j == -1);\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j++];\n        }\n      }\n      googAsserts.assert(j == arr2.length);\n    }\n  });\n\n  return function() {\n    dereg1();\n    dereg2();\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.layertree.component\n */\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\n\nimport 'bootstrap/js/collapse.js'; // needed to collapse a layertree\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoLayertree', [\n  ngeoLayertreeController.module.name\n]);\n\n\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoLayertreeTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/layertree';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/layertree', require('./component.html'));\n});\n\n\n/**\n * Provides the \"ngeoLayertree\" directive, a directive for\n * creating layer trees in application.\n *\n * The directive assumes that tree nodes that are not leaves have a \"children\"\n * property referencing an array of child nodes.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\">\n *      </div>\n *\n * The \"ngeo-layertree\", \"ngeo-layertree-map\" and\n * \"ngeo-layertree-nodelayer\" attributes are mandatory attributes.\n *\n * - \"ngeo-layertree\" specifies an expression providing the tree. The\n *   directive watches that expression, making it possible to retrieve\n *   the tree data through Ajax.\n *\n * - \"ngeo-layertree-map\" specifies an expression providing the OpenLayers\n *   map. The directive doesn't watch that expression.\n *\n * - The \"ngeo-layertree-nodelayer\" specifies an expression providing the\n *   layer for a given node. In most cases that expression will be function\n *   call with \"node\" as the argument to the function call. E.g.\n *   \"ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\".\n *\n * - The \"ngeo-layertree-listeners\" specifies an expression providing a function\n *   to bind scope events to customs functions. You'll must set the listener on\n *   the \"treeScope\" and probably use \"treeCtrl\" as context. E.g.\n *   \"ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\".\n *\n * The directive comes with a default template. That template assumes that\n * tree nodes that are not leaves have a \"children\" property referencing an\n * array of child nodes. It also assumes that nodes have a \"name\" property.\n *\n * By default the directive uses \"layertree.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoLayertreeTemplateUrl\" value (using\n * app.module.value('ngeoLayertreeTemplateUrl', 'path/layertree.html'), or\n * by adding an \"ngeo-layertree-templateurl\" attribute to the element.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-templateurl=\"path/to/layertree.html\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\"\n *      </div>\n *\n * The directive has its own scope, but it is not an isolate scope. That scope\n * has a \"layertreeCtrl\" property which is a reference to the directive's\n * controller: \"layertreeCtrl\". You can refer to that property in a custom\n * template for example.\n *\n * See our live example: [../examples/layertree.html](../examples/layertree.html)\n *\n * @htmlAttribute {Object} ngeo-layertree One theme (JSON).\n * @htmlAttribute {string} ngeo-layertree-templateurl The template URL.\n * @htmlAttribute {ol.Map} ngeo-layertree-map The map.\n * @htmlAttribute {string} ngeo-layertree-nodelayer Expression that will be parsed\n *      to be a {@link Function} that return a {@link ol.layer.Layer}\n *      with the argument:\n *      {\n *          'node': {@link Object}|undefined,\n *          'depth': {@link number}\n *      }\n * @htmlAttribute {string} ngeo-layertree-nodelayerexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-nodelayer}.\n * @htmlAttribute {string} ngeo-layertree-listeners Expression that will be parsed\n *      to be a {@link Function} with the argument:\n *      {\n *          'treeScope': !{@link angular.Scope},\n *          'treeCtrl': {@link ngeo.layertree.Controller}\n *      }\n * @htmlAttribute {string} ngeo-layertree-listenersexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-listeners}.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoLayertreeTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoLayertree\n */\nexports.directive_ = function(ngeoLayertreeTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: ngeoLayertreeTemplateUrl,\n    controller: ngeoLayertreeController\n  };\n};\n\n\nexports.directive('ngeoLayertree', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\n\n/** @suppress {extraRequire} */\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\n\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoLayertreeComponent from 'ngeo/layertree/component.js';\n\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscSyncArrays from 'ngeo/misc/syncArrays.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\nimport 'bootstrap/js/collapse.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeComponent', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfPermalinkPermalink.module.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeComponent.name,\n  ngeoLayertreeController.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\n\n// Overrides the path to the layertree template (used by each node, except\n// the root node that path is defined by the gmfLayertreeTemplate value.\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => 'gmf/layertree');\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree', require('./component.html'));\n});\n\n\nexports.value('gmfLayertreeTemplate',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const subTemplateUrl = 'gmf/layertree';\n    return '<div ngeo-layertree=\"gmfLayertreeCtrl.root\" ' +\n          'ngeo-layertree-map=\"gmfLayertreeCtrl.map\" ' +\n          'ngeo-layertree-nodelayer=\"gmfLayertreeCtrl.getLayer(treeCtrl)\" ' +\n          'ngeo-layertree-listeners=\"gmfLayertreeCtrl.listeners(treeScope, treeCtrl)\" ' +\n          `ngeo-layertree-templateurl=\"${subTemplateUrl}\">` +\n          '</div>';\n  }\n);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfLayertreeTemplate Template function.\n * @return {string} Template.\n * @ngInject\n */\nfunction gmfLayertreeTemplate($element, $attrs, gmfLayertreeTemplate) {\n  return gmfLayertreeTemplate($element, $attrs);\n}\n\n\n/**\n * This component creates a layertree based on the c2cgeoportal JSON themes\n * source and a {@link ngeo.layertreeComponent}. The controller used by this\n * component defines some functions for each node that are created by a default\n * template. This default template can be overridden by setting the value\n * 'gmf.layertreeTemplateUrl' but you will have to adapt the\n * ngeoLayertreeTemplateUrl value too (to define the children's nodes template\n * path).\n *\n * Example:\n *\n *      <gmf-layertree\n *        gmf-layertree-dimensions=\"ctrl.dimensions\"\n *        gmf-layertree-map=\"ctrl.map\">\n *      </gmf-layertree>\n *\n * You can add an attribute 'gmf-layertree-openlinksinnewwindow=\"::true\"' to open\n * metadata URLs in a new window. By default, and in the default template,\n * links will be opened in a popup (The window.gmfx.openIframePopup function must be available !)\n *\n * Used UI metadata:\n *\n *  * isChecked: if 'false' the layer visibility will be set to false.\n *  * iconUrl: layer icon full URL.\n *  * legendRule: WMS rule used to get a layer icon.\n *  * isLegendExpanded: if 'true' the legend is expanded by default.\n *  * metadataUrl: Display a popup with the content of the given URL if\n *    possible also open a new window.\n *\n * @htmlAttribute {ol.Map} gmf-layertree-map The map.\n * @htmlAttribute {Object<string, string>|undefined} gmf-layertree-dimensions Global dimensions object.\n * @htmlAttribute {boolean|undefined} gmf-layertree-openlinksinnewwindow if true, open\n *     metadataURLs in a new window. Otherwise open them in a popup.\n *\n * @ngdoc component\n * @ngname gmfLayertreeComponent\n */\nexports.component_ = {\n  controller: 'GmfLayertreeController as gmfLayertreeCtrl',\n  bindings: {\n    'map': '=gmfLayertreeMap',\n    'dimensions': '=?gmfLayertreeDimensions',\n    'openLinksInNewWindow': '<?gmfLayertreeOpenlinksinnewwindow',\n  },\n  template: gmfLayertreeTemplate\n};\n\nexports.component('gmfLayertree', exports.component_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n *     The Gmf value service that determines the data source currently being\n *     filtered.\n * @param {!gmf.datasource.ExternalDataSourcesManager}\n *     gmfExternalDataSourcesManager The Gmf external data sources manager\n *     service. Used here to fetch the external WMS groups.\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n * @param {!gmf.layertree.SyncLayertreeMap} gmfSyncLayertreeMap gmfSyncLayertreeMap service.\n * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {!gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname gmfLayertreeController\n */\nexports.Controller_ = function($element, $scope, ngeoLayerHelper, gmfDataSourceBeingFiltered,\n  gmfExternalDataSourcesManager, gmfPermalink, gmfTreeManager, gmfSyncLayertreeMap, ngeoWMSTime, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {?Object<string, string>}\n   * @export\n   */\n  this.dimensions;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {gmfx.datasource.DataSourceBeingFiltered}\n   * @export\n   */\n  this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n  /**\n   * @type {!gmf.datasource.ExternalDataSourcesManager}\n   * @export\n   */\n  this.gmfExternalDataSourcesManager = gmfExternalDataSourcesManager;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  const root = gmfTreeManager.root;\n  googAsserts.assert(root);\n\n  /**\n   * @type {!gmfThemes.GmfRootNode}\n   * @export\n   */\n  this.root = root;\n\n  /**\n   * @type {!gmf.layertree.SyncLayertreeMap}\n   * @private\n   */\n  this.gmfSyncLayertreeMap_ = gmfSyncLayertreeMap;\n\n  /**\n   * @type {!ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {!Object.<number, !Array.<string>>}\n   * @private\n   */\n  this.groupNodeStates_ = {};\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.openLinksInNewWindow;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n\n  /**\n   * @type {!Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.layers = [];\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  // enter digest cycle on node collapse\n  $element.on('shown.bs.collapse', () => {\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * Init the controller,\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.openLinksInNewWindow = this.openLinksInNewWindow === true;\n  this.dataLayerGroup_ = this.layerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n\n  ngeoMiscSyncArrays(this.dataLayerGroup_.getLayers().getArray(), this.layers, true, this.scope_, () => true);\n\n  // watch any change on layers array to refresh the map\n  this.scope_.$watchCollection(() => this.layers,\n    () => {\n      this.map.render();\n    });\n\n  // watch any change on dimensions object to refresh the layers\n  this.scope_.$watchCollection(() => {\n    if (this.gmfTreeManager_.rootCtrl) {\n      return this.dimensions;\n    }\n  }, (dimensions) => {\n    if (dimensions) {\n      this.updateDimensions_(this.gmfTreeManager_.rootCtrl);\n    }\n  });\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl Layer tree controller.\n * @private\n */\nexports.Controller_.prototype.updateDimensions_ = function(treeCtrl) {\n  treeCtrl.traverseDepthFirst((ctrl) => {\n    if (ctrl.node.dimensions) {\n      const layer = ctrl.layer;\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      this.updateLayerDimensions_(layer, /** @type gmfThemes.GmfGroup|gmfThemes.GmfLayer */ (ctrl.node));\n    }\n  });\n};\n\n\n/**\n * @param {ol.layer.Layer} layer Layer to update.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layer tree node.\n * @private\n */\nexports.Controller_.prototype.updateLayerDimensions_ = function(layer, node) {\n  if (this.dimensions && node.dimensions) {\n    const dimensions = {};\n    for (const key in node.dimensions) {\n      if (node.dimensions[key] === null) {\n        const value = this.dimensions[key];\n        if (value !== undefined) {\n          dimensions[key] = value;\n        }\n      } else {\n        dimensions[key] = node.dimensions[key];\n      }\n    }\n    if (!olObj.isEmpty(dimensions)) {\n      const source = layer.getSource();\n      if (source instanceof olSourceWMTS) {\n        source.updateDimensions(dimensions);\n      } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n        source.updateParams(dimensions);\n      } else {\n        // the source is not ready yet\n        layer.once('change:source', () => {\n          googAsserts.assertInstanceof(layer, olLayerLayer);\n          this.updateLayerDimensions_(layer, node);\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Use the gmfSyncLayertreeMap_ to create and get layer corresponding to this\n * treeCtrl. The layer will be inserted into the map. The layer can be null\n * if the treeCtrl is based on a node inside a mixed node. It this case, the\n * layer will be in the first parent declared as a mixed node.\n * @param {ngeo.layertree.Controller} treeCtrl tree controller of the node\n * @return {ol.layer.Base|ol.layer.Group|null} The OpenLayers layer or group\n *     for the node.\n * @export\n */\nexports.Controller_.prototype.getLayer = function(treeCtrl) {\n  let opt_position;\n  if (treeCtrl.parent.isRoot) {\n    this.gmfTreeManager_.rootCtrl = treeCtrl.parent;\n    // Precise the index to add first level groups.\n    opt_position = this.gmfTreeManager_.root.children.length -\n        this.gmfTreeManager_.numberOfGroupsToAddInThisDigestLoop || 0;\n  }\n\n  const layer = this.gmfSyncLayertreeMap_.createLayer(treeCtrl, this.map,\n    this.dataLayerGroup_, opt_position);\n\n  if (layer instanceof olLayerLayer) {\n    const node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n    this.updateLayerDimensions_(layer, node);\n  }\n\n  return layer;\n};\n\n\n/**\n * Remove layer from this component's layergroup (and then, from the map) on\n * a ngeo layertree destroy event.\n * @param {angular.Scope} scope treeCtrl scope.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.listeners = function(scope, treeCtrl) {\n  const dataLayerGroup = this.dataLayerGroup_;\n  scope.$on('$destroy', () => {\n    // Remove the layer from the map.\n    dataLayerGroup.getLayers().remove(treeCtrl.layer);\n  });\n};\n\n/**\n * Toggle the state of treeCtrl's node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.toggleActive = function(treeCtrl) {\n  treeCtrl.setState(treeCtrl.getState() === 'on' ? 'off' : 'on');\n};\n\n\n/**\n * Return the current state of the given treeCtrl's node.\n * Return a class name that match with the current node activation state.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string} 'on' or 'off' or 'indeterminate'.\n * @export\n */\nexports.Controller_.prototype.getNodeState = function(treeCtrl) {\n  return treeCtrl.getState();\n};\n\n\n/**\n * Update the `timeRangeValue` property of the data source bound to the\n * given tree controller using the given time. If the tree controller has\n * no data source, it means that it has children and they might have\n * data sources.\n *\n * The setting of the TIME parameter on the layer occurs in the\n * `gmf.datasource.Manager` service\n *\n * LayertreeController.prototype.updateWMSTimeLayerState - description\n * @param {ngeo.layertree.Controller} layertreeCtrl ngeo layertree controller\n * @param {{start : number, end : number}} time The start\n * and optionally the end datetime (for time range selection) selected by user\n * @export\n */\nexports.Controller_.prototype.updateWMSTimeLayerState = function(\n  layertreeCtrl, time) {\n  if (!time) {\n    return;\n  }\n  const dataSource = layertreeCtrl.getDataSource();\n  if (dataSource) {\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    dataSource.timeRangeValue = time;\n  } else if (layertreeCtrl.children) {\n    for (let i = 0, ii = layertreeCtrl.children.length; i < ii; i++) {\n      this.updateWMSTimeLayerState(layertreeCtrl.children[i], time);\n    }\n  }\n};\n\n\n/**\n * Get the icon image URL for the given treeCtrl's layer. It can only return a\n * string for internal WMS layers without multiple childlayers in the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string|undefined} The icon legend URL or undefined.\n * @export\n */\nexports.Controller_.prototype.getLegendIconURL = function(treeCtrl) {\n  const iconUrl = treeCtrl.node.metadata.iconUrl;\n\n  if (iconUrl !== undefined) {\n    return iconUrl;\n  }\n\n  if (treeCtrl.node.children !== undefined) {\n    return undefined;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (gmfLayer.type !== 'WMS') {\n    return undefined;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  const legendRule = gmfLayerWMS.metadata.legendRule;\n\n  if (legendRule === undefined) {\n    return undefined;\n  }\n\n  //In case of multiple layers for a gmfLayerWMS, always take the first layer\n  //name to get the icon\n  const layerName = gmfLayerWMS.layers.split(',')[0];\n  const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n  return this.layerHelper_.getWMSLegendURL(\n    gmfOgcServer.url, layerName, undefined, legendRule, 20, 20\n  );\n};\n\n\n/**\n * Get the legends object (<LayerName: url> for each layer) for the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {Object.<string, string>} A <layerName: url> object that provides a\n *     layer for each layer.\n * @export\n */\nexports.Controller_.prototype.getLegendsObject = function(treeCtrl) {\n  const legendsObject = {};\n  if (/** @type gmfThemes.GmfGroup */ (treeCtrl.node).children !== undefined) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const gmfLayerDefaultName = gmfLayer.name;\n  if (gmfLayer.metadata.legendImage) {\n    legendsObject[gmfLayerDefaultName] = gmfLayer.metadata.legendImage;\n    return legendsObject;\n  }\n\n  const layer = treeCtrl.layer;\n  if (gmfLayer.type === 'WMTS') {\n    googAsserts.assertInstanceof(layer, olLayerTile);\n    const wmtsLegendURL = this.layerHelper_.getWMTSLegendURL(layer);\n    legendsObject[gmfLayerDefaultName] = wmtsLegendURL;\n    return wmtsLegendURL ? legendsObject : null;\n  } else {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n    let layersNames = gmfLayerWMS.layers;\n    const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n    const scale = this.getScale_();\n    // QGIS can handle multiple layers natively. Use Multiple URLs for other map\n    // servers\n    if (gmfOgcServer.type === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      layersNames = [layersNames];\n    } else {\n      layersNames = layersNames.split(',');\n    }\n    layersNames.forEach((layerName) => {\n      legendsObject[layerName] = this.layerHelper_.getWMSLegendURL(gmfOgcServer.url, layerName, scale);\n    });\n    return legendsObject;\n  }\n};\n\n\n/**\n * Get the number of legends object for this layertree controller.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {number} The number of Legends object.\n * @export\n */\nexports.Controller_.prototype.getNumberOfLegendsObject = function(treeCtrl) {\n  const legendsObject = this.getLegendsObject(treeCtrl);\n  return legendsObject ? Object.keys(legendsObject).length : 0;\n};\n\n\n/**\n * Return the current scale of the map.\n * @return {number} Scale.\n * @private\n */\nexports.Controller_.prototype.getScale_ = function() {\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const mpu = view.getProjection().getMetersPerUnit();\n  const dpi = 25.4 / 0.28;\n  return resolution * mpu * 39.37 * dpi;\n};\n\n\n/**\n * Opens a gmfx.openIframePopup with the content of the metadata url of a node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.displayMetadata = function(treeCtrl) {\n  const node = treeCtrl.node;\n  const metadataURL = node.metadata['metadataUrl'];\n  if (metadataURL !== undefined) {\n    // FIXME layertree should not rely on a window function.\n    const gmfx = window.gmfx;\n    if (gmfx.openIframePopup) {\n      gmfx.openIframePopup(metadataURL, node.name, undefined, undefined, false);\n    }\n  }\n};\n\n\n/**\n * Update the layers order in the map and the treeCtrl in the treeManager after\n * a reorder of the first-level groups. Then update the permalink.\n * @export\n */\nexports.Controller_.prototype.afterReorder = function() {\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const currentTreeCtrls = this.gmfTreeManager_.rootCtrl.children;\n  const treeCtrls = [];\n\n  // Get order of first-level groups for treectrl and layers;\n  groupNodes.forEach((node) => {\n    currentTreeCtrls.some((treeCtrl) => {\n      if (treeCtrl.node === node) {\n        treeCtrls.push(treeCtrl);\n        return;\n      }\n    });\n  });\n\n  // Update gmfTreeManager rootctrl children order\n  this.gmfTreeManager_.rootCtrl.children = treeCtrls;\n\n  // Update map 'data' groupe layers order\n  this.layers.length = 0;\n  this.gmfTreeManager_.rootCtrl.children.forEach((child) => {\n    this.layers.push(child.layer);\n  });\n\n  // Update the permalink order\n  this.gmfPermalink_.refreshFirstLevelGroups();\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup} node Layer tree node to remove.\n * @export\n */\nexports.Controller_.prototype.removeNode = function(node) {\n  this.gmfTreeManager_.removeGroup(node);\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.removeAllNodes = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @return {number} first level node count.\n * @export\n */\nexports.Controller_.prototype.nodesCount = function() {\n  return this.gmfTreeManager_.root.children.length;\n};\n\n/**\n * Return 'out-of-resolution' if the current resolution of the map is out of\n * the min/max resolution in the node.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {string|undefined} 'out-of-resolution' or undefined.\n * @export\n */\nexports.Controller_.prototype.getResolutionStyle = function(gmfLayer) {\n  const resolution = this.map.getView().getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    return 'out-of-resolution';\n  }\n  const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n  if (maxResolution !== undefined && resolution > maxResolution) {\n    return 'out-of-resolution';\n  }\n  return undefined;\n};\n\n\n/**\n * Set the resolution of the map with the max or min resolution of the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.zoomToResolution = function(treeCtrl) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    view.setResolution(view.constrainResolution(minResolution, 0, 1));\n  } else {\n    const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n    if (maxResolution !== undefined && resolution > maxResolution) {\n      view.setResolution(view.constrainResolution(maxResolution, 0, -1));\n    }\n  }\n};\n\n\n/**\n * Toggle the legend for a node\n * @param {string} legendNodeId The DOM node legend id to toggle\n * @export\n */\nexports.Controller_.prototype.toggleNodeLegend = function(legendNodeId) {\n  $(legendNodeId).toggle({\n    toggle: true\n  });\n};\n\n\n/**\n * @param {gmf.datasource.OGC} ds Data source to filter.\n * @export\n */\nexports.Controller_.prototype.toggleFiltrableDataSource = function(ds) {\n  this.gmfDataSourceBeingFiltered.dataSource = ds;\n};\n\n\n/**\n * @param {string} legendNodeId The DOM node legend id\n * @return {boolean} Whenever the legend is currently displayed.\n * @export\n */\nexports.Controller_.prototype.isNodeLegendVisible = function(legendNodeId) {\n  return $(legendNodeId).is(':visible');\n};\n\n\n/**\n * Determines whether the layer tree controller supports being customized.\n * For example, having its layer opacity changed, displaying its legend, etc.\n *\n * If any requirement is met, then the treeCtrl is considered supporting\n * \"customization\", regardless of what it actually is.\n *\n * The requirements are:\n *\n * - must not be the root controller, any of the following:\n *   - it supports legend\n *   - it supports having the layer opacity being changed\n *\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports being\n *     \"customized\" or not.\n * @export\n */\nexports.Controller_.prototype.supportsCustomization = function(treeCtrl) {\n  return !treeCtrl.isRoot &&\n    (\n      this.supportsLegend(treeCtrl) ||\n      this.supportsOpacityChange(treeCtrl)\n    );\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having a\n *     legend being shown.\n * @export\n */\nexports.Controller_.prototype.supportsLegend = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  return !!node.metadata &&\n    !!node.metadata.legend &&\n    !!this.getLegendsObject(treeCtrl);\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having its\n *     layer opacity being changed or not.\n * @export\n */\nexports.Controller_.prototype.supportsOpacityChange = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  const parentNode = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  return !!treeCtrl.layer &&\n    (\n      (\n        treeCtrl.depth === 1 && !node.mixed\n      ) ||\n      (\n        treeCtrl.depth > 1 && parentNode.mixed\n      )\n    );\n};\n\nexports.controller('GmfLayertreeController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module app\n */\nconst exports = {};\n\n/**\n * This file provides the \"app\" namespace, which is the\n * application's main namespace. And it defines the application's Angular\n * module.\n */\n\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('app', []);\n\nexports.module.config(['$compileProvider', function($compileProvider) {\n  if (!('debug' in ngeoUtils.decodeQueryString(window.location.search))) {\n    // Disable the debug info\n    $compileProvider.debugInfoEnabled(false);\n  }\n}]);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.EPSG2056\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\nimport somerc from 'ngeo/proj/somerc.js';\nimport proj4 from 'proj4';\n\nconst epsg2056def = [\n  `+proj=${somerc}`,\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=2600000',\n  '+y_0=1200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg2056extent = [2420000, 1030000, 2900000, 1350000];\n\nproj4.defs('EPSG:2056', epsg2056def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:2056').setExtent(epsg2056extent);\n\nconst exports = 'EPSG:2056';\n\n\nexport default exports;\n","/**\n * @module app.desktop.Controller\n */\n/**\n * Application entry point.\n *\n * This file includes `goog.require`'s for all the components/directives used\n * by the HTML page and the controller to provide the configuration.\n */\n\nimport gmfControllersAbstractDesktopController from 'gmf/controllers/AbstractDesktopController.js';\nimport 'gmf/controllers/desktop.less';\nimport appBase from '../appmodule.js';\nimport ngeoProjEPSG2056 from 'ngeo/proj/EPSG2056.js';\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\nimport * as olBase from 'ol/index.js';\nimport Raven from 'raven-js/src/raven.js';\nimport RavenPluginsAngular from 'raven-js/plugins/angular.js';\n\nif (!window.requestAnimationFrame) {\n  alert('Your browser is not supported, please update it or use another one. You will be redirected.\\n\\n'\n    + 'Votre navigateur n\\'est pas supporté, veuillez le mettre à jour ou en utiliser un autre. Vous allez être redirigé.\\n\\n'\n    + 'Ihr Browser wird nicht unterstützt, bitte aktualisieren Sie ihn oder verwenden Sie einen anderen. Sie werden weitergeleitet.');\n  window.location = 'http://geomapfish.org/';\n}\n\n/**\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @extends {gmf.controllers.AbstractDesktopController}\n * @ngInject\n * @export\n */\nconst exports = function($scope, $injector) {\n  gmfControllersAbstractDesktopController.call(this, {\n    srid: 21781,\n    mapViewConfig: {\n      center: [632464, 185457],\n      zoom: 3,\n      resolutions: [250, 100, 50, 20, 10, 5, 2, 1, 0.5, 0.25, 0.1, 0.05]\n    }\n  }, $scope, $injector);\n\n  /**\n   * @type {Array.<string>}\n   * @export\n   */\n  this.searchCoordinatesProjections = [ngeoProjEPSG21781, ngeoProjEPSG2056, 'EPSG:4326'];\n\n  /**\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scaleSelectorValues = [250000, 100000, 50000, 20000, 10000, 5000, 2000, 1000, 500, 250, 100, 50];\n\n  /**\n   * @type {Array.<string>}\n   * @export\n   */\n  this.elevationLayers = ['aster', 'srtm'];\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.selectedElevationLayer = this.elevationLayers[0];\n\n  /**\n   * @type {Object.<string, gmfx.ProfileLineConfiguration>}\n   * @export\n   */\n  this.profileLinesconfiguration = {\n    'aster': {color: '#0000A0'},\n    'srtm': {color: '#00A000'}\n  };\n\n  /**\n   * @type {Array.<gmfx.MousePositionProjection>}\n   * @export\n   */\n  this.mousePositionProjections = [{\n    code: ngeoProjEPSG2056,\n    label: 'CH1903+ / LV95',\n    filter: 'ngeoNumberCoordinates::{x}, {y} m'\n  }, {\n    code: ngeoProjEPSG21781,\n    label: 'CH1903 / LV03',\n    filter: 'ngeoNumberCoordinates::{x}, {y} m'\n  }, {\n    code: 'EPSG:4326',\n    label: 'WGS84',\n    filter: 'ngeoDMSCoordinates:2'\n  }];\n\n  // Allow angular-gettext-tools to collect the strings to translate\n  /** @type {angularGettext.Catalog} */\n  const gettextCatalog = $injector.get('gettextCatalog');\n  gettextCatalog.getString('Add a theme');\n  gettextCatalog.getString('Add a sub theme');\n  gettextCatalog.getString('Add a layer');\n\n  if ($injector.has('sentryUrl')) {\n    const options = $injector.has('sentryOptions') ? $injector.get('sentryOptions') : undefined;\n    const raven = new Raven();\n    raven.config($injector.get('sentryUrl'), options)\n      .addPlugin(RavenPluginsAngular)\n      .install();\n  }\n};\n\nolBase.inherits(exports, gmfControllersAbstractDesktopController);\n\nexports.module = angular.module('Appdesktop', [\n  appBase.module.name,\n  gmfControllersAbstractDesktopController.module.name,\n]);\n\nexports.module.value('gmfContextualdatacontentTemplateUrl', 'gmf/contextualdata');\nexports.module.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/contextualdata', require('./contextualdata.html'));\n});\n\nexports.module.controller('DesktopController', exports);\n\nexport default exports;\n","module.exports = \"<table> <tr> <td translate> Swiss grid (LV03) </td> <td> {{coord_21781|ngeoNumberCoordinates:0:'{x} / {y}'}} </td> </tr> <tr> <td translate> Wgs Coord. </td> <td> {{coord_4326|ngeoNumberCoordinates:2:'{y} / {x}'}} </td> </tr> <tr> <td translate> Wgs Coord. DMS </td> <td> {{coord_4326|ngeoDMSCoordinates:0:'{y} {x}'}} </td> </tr> <tr> <td translate> Elevation (SRTM) </td> <td> {{srtm | number}} [m] </td> </tr> <tr> <td translate> Elevation (Aster) </td> <td> {{aster | number}} [m] </td> </tr> </table> <a ng-href=\\\"https://maps.google.ch/?ie=UTF8&ll={{coord_4326_northern}},{{coord_4326_eastern}}&layer=c&cbll={{coord_4326_northern}},{{coord_4326_eastern}}&cbp=12,57.78,,0,8.1\\\" target=_blank>Google StreetView</a> \";","module.exports = \"<div class=form-group> <select class=form-control ng-model=$ctrl.mode ng-options=\\\"mode | translate for mode in $ctrl.modes\\\"> </select> </div> <div> <form name=idsl_form novalidate ng-show=\\\"$ctrl.mode === 'Local'\\\"> <div class=form-group> <div class=\\\"input-group input-group-sm\\\"> <input name=file type=file required/> <input class=form-control placeholder=\\\"{{'No file' | translate}}\\\" readonly=readonly type=text value={{$ctrl.fileNameAndSize}} ng-click=$ctrl.browse() /> <span class=input-group-btn> <button class=\\\"btn btn-default\\\" type=button ng-click=$ctrl.browse() translate>Browse</button> </span> </div> </div> <div class=form-group> <button class=\\\"btn btn-sm btn-default form-control\\\" title=\\\"{{'Load a file from local' | translate}}\\\" type=submit ng-click=\\\"idsl_form.$valid && $ctrl.load()\\\" ng-disabled=\\\"$ctrl.file === undefined\\\"> <span>{{'Load local file' | translate}}</span> </button> </div> </form> <form name=idsc_form novalidate ng-show=\\\"$ctrl.mode === 'Online'\\\"> <div class=\\\"form-group gmf-importdatasource-url-form-group\\\"> <input autocomplete=off class=form-control name=url placeholder=\\\"{{'Choose or enter online resource URL' | translate}}\\\" required type=url ng-disabled=$ctrl.pending ng-model=$ctrl.url /> </div> <div class=form-group> <button class=\\\"btn btn-sm btn-default form-control gmf-importdatasource-connect-btn\\\" title=\\\"{{'Connect to online resource' | translate}}\\\" type=submit ng-click=\\\"idsc_form.$valid && $ctrl.connect()\\\" ng-disabled=\\\"idsc_form.$invalid || $ctrl.pending\\\"> <span ng-if=$ctrl.pending>{{'Connecting, please wait...' | translate}}</span> <span ng-if=\\\"!$ctrl.pending && $ctrl.hasError\\\">{{'Failed to connect' | translate}}</span> <span ng-if=\\\"!$ctrl.pending && !$ctrl.hasError\\\">{{'Connect' | translate}}</span> </button> </div> </form> </div> <div class=gmf-importdatasource-layers ng-if=\\\"$ctrl.wmsCapabilities !== null || $ctrl.wmtsCapabilities !== null\\\"> <hr/> <gmf-wmscapabilitylayertreenode capabilities=::$ctrl.wmsCapabilities layer=::$ctrl.wmsCapabilities.Capability.Layer url=::$ctrl.url ng-if=\\\"$ctrl.wmsCapabilities !== null\\\"> </gmf-wmscapabilitylayertreenode> <gmf-wmtscapabilitylayertree capabilities=::$ctrl.wmtsCapabilities layers=::$ctrl.wmtsCapabilities.Contents.Layer url=::$ctrl.url ng-if=\\\"$ctrl.wmtsCapabilities !== null\\\"> </gmf-wmtscapabilitylayertree> </div> \";","module.exports = \"<ul> <li ng-repeat=\\\"layer in ::$ctrl.layers\\\"> <div class=gmf-wmscapabilitylayertreenode-header> <span class=gmf-wmscapabilitylayertreenode-popover-container ngeo-popover ngeo-popover-dismiss=.content ngeo-popover-placement=left> <span ngeo-popover-anchor class=\\\"fa fa-cog gmf-wmscapabilitylayertreenode-actions\\\"> </span> <div class=gmf-wmscapabilitylayertreenode-popover-content ngeo-popover-content> <ul> <li> <i class=\\\"fa fa-plus fa-fw\\\"></i> <a href=\\\"\\\" ng-click=\\\"$ctrl.createAndAddDataSource(layer); popoverCtrl.dismissPopover()\\\"> <span translate>Add layer</span> </a> </li> <li ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a aria-expanded=false data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-click=popoverCtrl.dismissPopover()> <span translate>Open/Close description</span> </a> </li> </ul> </div> </span> <a class=\\\"fa fa-circle-thin gmf-wmscapabilitylayertreenode-no-icon fa-fw\\\"></a> <span class=gmf-wmscapabilitylayertreenode-title>{{ ::layer.Title }}</span> <div class=\\\"collapse gmf-wmscapabilitylayertreenode-description\\\" id=gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <a aria-expanded=false class=gmf-wmscapabilitylayertreenode-description-toggle data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}}> <span translate>Hide description</span> </a> <span class=gmf-wmscapabilitylayertreenode-description-content>{{ ::layer.Abstract }}</span> </div> </div> </li> </ul> \";","module.exports = \"<ul> <li ng-repeat=\\\"layer in ::$ctrl.layer.Layer\\\"> <div class=gmf-wmscapabilitylayertreenode-header> <span class=gmf-wmscapabilitylayertreenode-popover-container ng-if=\\\"::(layer.Name !== undefined || layer.Abstract !== undefined)\\\" ngeo-popover ngeo-popover-dismiss=.content ngeo-popover-placement=left> <span ngeo-popover-anchor class=\\\"fa fa-cog gmf-wmscapabilitylayertreenode-actions\\\"> </span> <div class=gmf-wmscapabilitylayertreenode-popover-content ngeo-popover-content> <ul> <li ng-if=\\\"::(layer.Name !== undefined)\\\"> <i class=\\\"fa fa-plus fa-fw\\\"></i> <a href=\\\"\\\" ng-click=\\\"$ctrl.createAndAddDataSource(layer); popoverCtrl.dismissPopover()\\\"> <span translate>Add layer</span> </a> </li> <li ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a aria-expanded=false data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-click=popoverCtrl.dismissPopover()> <span translate>Open/Close description</span> </a> </li> </ul> </div> </span> <a aria-expanded=false class=\\\"fa gmf-wmscapabilitylayertreenode-expand-node fa-fw\\\" data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-children-{{::$ctrl.getUid(layer)}} ng-if=\\\"::(layer.Layer !== undefined && layer.Layer.length)\\\"></a> <span ng-if=\\\"::(layer.Layer !== undefined && layer.Layer.length)\\\" class=\\\"fa fa-fw gmf-wmscapabilitylayertreenode-group\\\"> </span> <a class=\\\"fa fa-circle-thin gmf-wmscapabilitylayertreenode-no-icon fa-fw\\\" ng-if=\\\"::(layer.Layer === undefined || layer.Layer.length === 0)\\\"></a> <span class=gmf-wmscapabilitylayertreenode-title>{{ ::layer.Title }}</span> <div class=\\\"collapse gmf-wmscapabilitylayertreenode-description\\\" id=gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <a aria-expanded=false class=gmf-wmscapabilitylayertreenode-description-toggle data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}}> <span translate>Hide description</span> </a> <span class=gmf-wmscapabilitylayertreenode-description-content>{{ ::layer.Abstract }}</span> </div> </div> <gmf-wmscapabilitylayertreenode class=collapse id=gmf-wmscapabilitylayertreenode-children-{{::$ctrl.getUid(layer)}} capabilities=::$ctrl.capabilities layer=::layer ng-if=\\\"::(layer.Layer !== undefined)\\\"> </gmf-wmscapabilitylayertreenode> </li> </ul> \";","module.exports = \"<div class=\\\"text-center btn-group dropup\\\" gmf-elevation gmf-elevation-active=ctrl.active gmf-elevation-elevation=ctrl.elevationValue gmf-elevation-loading=ctrl.elevationLoading gmf-elevation-layer=ctrl.selectedElevationLayer gmf-elevation-map=::ctrl.map> <a type=button class=\\\"btn btn-default\\\" aria-expanded=false ng-class=\\\"::{'dropdown-toggle': ctrl.layers.length > 1}\\\" ng-attr-data-toggle=\\\"{{::(ctrl.layers.length > 1) ? 'dropdown' : ''}}\\\"> <span class=gmf-elevationwidget-value> {{ctrl.elevationValue | number}}<span ng-show=ctrl.elevationValue> m</span> <span ng-show=ctrl.elevationLoading class=\\\"fa fa-spinner\\\"></span> <span ng-show=\\\"!ctrl.elevationValue && !ctrl.elevationLoading\\\" translate>Elevation…</span> </span><span class=caret ng-if=\\\"::ctrl.layers.length > 1\\\"></span> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu ng-if=\\\"::ctrl.layers.length > 1\\\"> <li class=dropdown-header translate>Elevation data sources</li> <li ng-repeat=\\\"elevationItem in ::ctrl.layers\\\"> <a href ng-click=\\\"ctrl.selectedElevationLayer = elevationItem\\\"> <span class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedElevationLayer === elevationItem}\\\"></span> {{::elevationItem | translate}} </a> </li> </ul> </div> \";","module.exports = \"<div class=\\\"gmf-profile-container panel\\\" ng-show=ctrl.active> <div class=ngeo-profile ng-show=!ctrl.isErrored ngeo-profile=ctrl.profileData ngeo-profile-highlight=ctrl.profileHighlight ngeo-profile-options=::ctrl.profileOptions> </div> <ul class=gmf-profile-legend ng-show=!ctrl.isErrored> <li ng-repeat=\\\"name in ::ctrl.getLayersNames()\\\"> <i class=\\\"fa fa-minus\\\" style=color:{};></i> &nbsp;{{name | translate}}&nbsp;{{ctrl.currentPoint.elevations[name]}}&nbsp;{{ctrl.currentPoint.yUnits}} </li> </ul> <div class=\\\"gmf-profile-export btn-group dropup\\\" ng-show=!ctrl.isErrored> <a class=dropdown-toggle href=\\\"\\\" ng-show=\\\"ctrl.profileData.length !== 0\\\" data-toggle=dropdown aria-expanded=false> {{'Export' | translate}}&nbsp;<i class=\\\"fa fa-caret-up\\\"></i> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li> <a href=\\\"\\\" ng-click=::ctrl.downloadCsv()> <i class=\\\"fa fa-table\\\"></i>&nbsp;{{'Download CSV' | translate}}</a> </li> </ul> </div> <div class=gmf-profile-error ng-show=ctrl.isErrored> <p>{{'The profile service does not respond, please try later.' | translate}}</p> </div> <div class=close ng-click=\\\"ctrl.line = null\\\">&times;</div> </div> \";","module.exports = \"<div class=gmf-print> <div ng-show=\\\"$ctrl.isState('CAPABILITIES_NOT_LOADED') !== true && $ctrl.isState('ERROR_ON_GETCAPABILITIES') !== true\\\"> <div class=\\\"gmf-print-layout-selector form-horizontal\\\"><ng-transclude/></div> <div ng-repeat=\\\"attribute in $ctrl.layoutInfo.simpleAttributes\\\" class=\\\"gmf-print-layoutinfo form-group\\\"> <div ng-if=\\\"$ctrl.hiddenAttributeNames === undefined || $ctrl.hiddenAttributeNames.indexOf(attribute.name) < 0\\\"> <input ng-if=\\\"attribute.type === 'number'\\\" ng-model=attribute.value class=form-control type=number ng-attr-placeholder=\\\"{{attribute.name | translate}}\\\"> <input ng-if=\\\"attribute.type === 'text'\\\" ng-model=attribute.value class=form-control type=text ng-attr-placeholder=\\\"{{attribute.name | translate}}\\\"> <textarea ng-if=\\\"attribute.type === 'textarea'\\\" ng-model=attribute.value class=form-control row=3 ng-attr-placeholder=\\\"{{attribute.name | translate}}\\\"></textarea> <div ng-if=\\\"attribute.type === 'checkbox'\\\" class=checkbox> <label> <input ng-model=attribute.value type=checkbox> <span>{{attribute.name | translate}}</span> </label> </div> </div> </div> <div ng-show=\\\"$ctrl.layoutInfo.legend !== undefined\\\" class=\\\"gmf-print-legend checkbox\\\"> <label> <input ng-model=$ctrl.layoutInfo.legend type=checkbox> <span translate>Legend</span> </label> </div> <div class=\\\"gmf-print-layout-selector form-horizontal\\\"> <div ng-show=\\\"$ctrl.layoutInfo.layouts.length !== 1\\\" class=form-group> <label class=\\\"control-label col-md-5\\\" translate>Layout</label> <div class=col-md-7> <div class=\\\"btn-group btn-block\\\"> <button type=button class=\\\"btn btn-default form-control\\\" data-toggle=dropdown> <span>{{$ctrl.layoutInfo.layout | translate}}&nbsp;</span> <i class=\\\"fa fa-caret-down\\\"></i> </button> <ul class=\\\"dropdown-menu dropdown-menu-right btn-block\\\" role=menu> <li ng-repeat=\\\"layout in $ctrl.layoutInfo.layouts\\\"> <a ng-click=$ctrl.setLayout(layout) href=\\\"\\\">{{layout | translate}}</a> </li> </ul> </div> </div> </div> <div ng-show=\\\"$ctrl.layoutInfo.scales.length !== 1\\\" class=\\\"gmf-print-scale-selector form-group\\\"> <label class=\\\"control-label col-md-5\\\" translate>Scale</label> <div class=col-md-7> <div class=\\\"btn-group btn-block\\\"> <button type=button class=\\\"btn btn-default form-control\\\" data-toggle=dropdown aria-expanded=false> <span>{{$ctrl.layoutInfo.scale | ngeoScalify}}&nbsp;</span> <i class=\\\"fa fa-caret-down\\\"></i> </button> <ul class=\\\"dropdown-menu dropdown-menu-right btn-block\\\" role=menu> <li ng-repeat=\\\"scale in $ctrl.layoutInfo.scales\\\"> <a ng-click=$ctrl.getSetScale(scale) href=\\\"\\\">{{scale | ngeoScalify}}</a> </li> <span ng-if=$ctrl.scaleInput> <li class=dropdown-header translate>Manual entry</li> <li> <div class=gmf-print-custom-scale> 1 : <input class=gmf-print-custom-scale-input type=number min=1 ng-model=$ctrl.getSetScale ng-model-options=\\\"{getterSetter: true}\\\"> </div> </li> </span> </ul> </div> </div> </div> <div ng-show=\\\"$ctrl.layoutInfo.dpis.length !== 1\\\" class=\\\"gmf-print-dpi-selector form-group\\\"> <label class=\\\"control-label col-md-3\\\" translate>DPI</label> <div class=col-md-5> <div class=\\\"btn-group btn-block\\\"> <button type=button class=\\\"btn btn-default form-control\\\" data-toggle=dropdown aria-expanded=false> <span>{{$ctrl.layoutInfo.dpi}}&nbsp;</span> <i class=\\\"fa fa-caret-down\\\"></i> </button> <ul class=\\\"dropdown-menu dropdown-menu-right btn-block\\\" role=menu> <li ng-repeat=\\\"dpi in $ctrl.layoutInfo.dpis\\\"> <a href=\\\"\\\" ng-click=$ctrl.setDpi(dpi)>{{dpi}}</a> </li> </ul> </div> </div> </div> <div class=\\\"gmf-print-rotation-selector form-group\\\"> <label class=\\\"control-label col-md-3\\\" translate>Rotation</label> <div class=col-md-5> <input class=\\\"form-control gmf-print-rotation-input\\\" type=range value=0 min=-180 max=180 data-toggle=tooltip title=\\\"{{'You can also use Alt+Shift on the map' | translate}}\\\"> </div> <div class=col-md-4> <input class=\\\"form-control gmf-print-rotation-input\\\" type=number min=-180 max=180 value=0> </div> </div> </div> <div class=\\\"gmf-print-actions form-group pull-right\\\"> <span ng-show=\\\"$ctrl.isState('PRINTING')\\\"> <i class=\\\"fa fa-refresh fa-spin\\\"></i> </span> <a ng-show=\\\"$ctrl.isState('PRINTING')\\\" class=\\\"gmf-print-cancel btn btn-link\\\" href=\\\"\\\" ng-click=$ctrl.cancel() translate>Abort</a> <button ng-show=$ctrl.layoutInfo.formats.png class=\\\"gmf-print-image btn btn-primary\\\" ng-disabled=\\\"$ctrl.isState('PRINTING')\\\" ng-click=\\\"$ctrl.print('png')\\\" translate>Image</button> <button ng-show=$ctrl.layoutInfo.formats.pdf class=\\\"gmf-print-pdf btn btn-primary\\\" ng-disabled=\\\"$ctrl.isState('PRINTING')\\\" ng-click=\\\"$ctrl.print('pdf')\\\" translate>PDF</button> </div> <div ng-show=\\\"$ctrl.isState('ERROR_ON_REPORT')\\\" class=\\\"gmf-print-error-report form-group pull-left text-danger\\\"> <p>{{'Error during the print, please try again.' | translate}}</p> </div> </div> <div ng-show=\\\"$ctrl.isState('CAPABILITIES_NOT_LOADED')\\\" class=\\\"gmf-print-wait form-group pull-left\\\"> <p>{{'Connecting to the print server, please wait.' | translate}}</p> </div> <div ng-show=\\\"$ctrl.isState('ERROR_ON_GETCAPABILITIES')\\\" class=\\\"gmf-print-error-capabilities form-group pull-left text-danger\\\"> <p>{{'The print server is unavailable. Please, try later.' | translate}}</p> </div> </div> \";","module.exports = \"<div ng-switch=efsCtrl.selectedEditableTreeCtrl> <div ng-switch-when=null> <select class=form-control ng-model=efsCtrl.selectedEditableTreeCtrl ng-show=\\\"efsCtrl.editableTreeCtrls.length > 0\\\" ng-options=\\\"treeCtrl.node.name | translate for treeCtrl in efsCtrl.editableTreeCtrls\\\"> <option value=\\\"\\\" translate>-- Choose a layer --</option> </select> <span ng-show=\\\"efsCtrl.editableTreeCtrls.length == 0\\\" translate>No editable layer available!</span> </div> <div ng-switch-default> <div class=row> <div class=col-sm-12> <span translate>Currently editing: </span> <b>{{ efsCtrl.selectedEditableTreeCtrl.node.name | translate }}</b> <span class=\\\"fa fa-pencil\\\"></span> <br> <button ng-click=efsCtrl.stopEditing() class=\\\"btn btn-link btn-xs pull-right\\\"> <span class=\\\"fa fa-times\\\"></span> {{'Stop editing' | translate}} </button> </div> </div> <gmf-editfeature gmf-editfeature-dirty=efsCtrl.dirty gmf-editfeature-editabletreectrl=::efsCtrl.selectedEditableTreeCtrl gmf-editfeature-map=::efsCtrl.map gmf-editfeature-state=efsCtrl.state gmf-editfeature-tolerance=::efsCtrl.tolerance gmf-editfeature-vector=::efsCtrl.vectorLayer> </gmf-editfeature> </div> </div> \";","module.exports = \"<div> <div ng-switch=efCtrl.feature> <a ng-switch-when=null ng-if=efCtrl.geomType href ngeo-btn ngeo-createfeature ngeo-createfeature-active=efCtrl.createActive ngeo-createfeature-features=::efCtrl.features ngeo-createfeature-geom-type=::efCtrl.geomType ngeo-createfeature-map=::efCtrl.map class=\\\"btn btn-default\\\" ng-class=\\\"{active: efCtrl.createActive}\\\" ng-model=efCtrl.createActive> <span ng-switch=::efCtrl.geomType> <span ng-switch-when=Point> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> {{'Draw new point' | translate}} </span> <span ng-switch-when=MultiPoint> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> {{'Draw new point' | translate}} </span> <span ng-switch-when=LineString> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> {{'Draw new linestring' | translate}} </span> <span ng-switch-when=MultiLineString> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> {{'Draw new linestring' | translate}} </span> <span ng-switch-when=Polygon> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> {{'Draw new polygon' | translate}} </span> <span ng-switch-when=MultiPolygon> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> {{'Draw new polygon' | translate}} </span> </span> </a> <div ng-switch-default> <form novalidate name=form class=\\\"form gmf-editfeature-attributes-container\\\" ng-if=efCtrl.attributes> <div class=row> <div class=col-sm-12> <a class=close ng-click=efCtrl.cancel() ng-disabled=efCtrl.pending title=\\\"{{'Cancel modifications' | translate}}\\\" href>&times;</a> </div> </div> <ngeo-attributes ngeo-attributes-attributes=::efCtrl.attributes ngeo-attributes-disabled=efCtrl.pending ngeo-attributes-feature=::efCtrl.feature> </ngeo-attributes> <input type=submit value=\\\"{{'Save' | translate}}\\\" class=\\\"btn btn-sm btn-default gmf-editfeature-btn-save\\\" ng-click=\\\"form.$valid && efCtrl.save()\\\" ng-disabled=\\\"!efCtrl.dirty || efCtrl.pending\\\" title=\\\"{{'Save modifications' | translate}}\\\"> <a class=\\\"btn btn-sm btn-default gmf-editfeature-btn-cancel\\\" ng-click=efCtrl.confirmCancel() ng-disabled=efCtrl.pending title=\\\"{{'Cancel modifications' | translate}}\\\" href>{{'Cancel' | translate}}</a> <button class=\\\"btn btn-sm btn-link gmf-editfeature-btn-delete\\\" ng-click=efCtrl.delete() ng-disabled=efCtrl.pending ng-show=efCtrl.featureId title=\\\"{{'Delete this feature' | translate}}\\\"> <span class=\\\"fa fa-trash\\\"></span> {{'Delete' | translate}} </button> </form> </div> </div> <ngeo-modal ng-model=efCtrl.unsavedModificationsModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Unsaved modifications!' | translate}} </h4> </div> <div class=modal-body> {{'There are unsaved changes.' | translate}} </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal ng-click=efCtrl.continueWithoutSaving()> {{'Continue without saving' | translate}} </button> <button type=button class=\\\"btn btn-primary\\\" data-dismiss=modal> {{'Cancel' | translate}} </button> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal ng-click=efCtrl.submit()> {{'Save' | translate}} </button> </div> </ngeo-modal> <ngeo-modal ng-model=efCtrl.showServerError> <div class=modal-header>{{'Server error.' | translate}}</div> <div class=modal-body>{{$parent.efCtrl.serverErrorType}}<br> {{$parent.efCtrl.serverErrorMessage || ('Unexpected server error.' | translate)}}</div> </ngeo-modal> </div> \";","module.exports = \"<fieldset ng-disabled=attrCtrl.disabled> <div class=form-group ng-repeat=\\\"attribute in ::attrCtrl.attributes\\\"> <div ng-if=\\\"attribute.type !== 'geometry'\\\"> <label ng-if=\\\"::attribute.type !== 'boolean'\\\" class=control-label>{{ ::attribute.name | translate }} <span class=text-muted>{{::attribute.required ? \\\"*\\\" : \\\"\\\"}}</span> </label> <div ng-switch=::attribute.type> <div ng-switch-when=boolean class=checkbox> <label> <input name={{::attribute.name}} ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); type=checkbox>  <span> {{ ::attribute.name | translate }} <span class=text-muted>{{::attribute.required ? \\\"*\\\" : \\\"\\\"}}</span></span> </label> </div> <select name={{::attribute.name}} ng-required=attribute.required ng-switch-when=select ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control type=text> <option ng-repeat=\\\"attribute in ::attribute.choices\\\" value=\\\"{{ ::attribute }}\\\"> {{ ::attribute }} </option> </select> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-when=date ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ngeo-datetimepicker ngeo-datetimepicker-options=\\\"'{&quot;timepicker&quot;: false, &quot;format&quot;: &quot;' + attribute.format + '&quot;, &quot;allowBlank&quot;: true, &quot;todayButton&quot;: false, &quot;mask&quot;: &quot;' + attribute.mask + '&quot;}'\\\" class=form-control type=text>  <input name={{::attribute.name}} id=time ng-required=attribute.required ng-switch-when=time ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ngeo-datetimepicker ngeo-datetimepicker-options=\\\"'{&quot;datepicker&quot;: false, &quot;format&quot;: &quot;' + attribute.format + '&quot;, &quot;todayButton&quot;: false, &quot;mask&quot;: &quot;' + attribute.mask + '&quot;, &quot;defaultTime&quot;: &quot;00:00&quot;}'\\\" class=form-control type=text>  <input name={{::attribute.name}} ng-required=attribute.required ng-switch-when=datetime ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ngeo-datetimepicker ngeo-datetimepicker-options=\\\"'{&quot;scrollTime&quot;: false, &quot;format&quot;: &quot;' + attribute.format + '&quot;, &quot;allowBlank&quot;: true, &quot;todayButton&quot;: false, &quot;mask&quot;: &quot;' + attribute.mask + '&quot;, &quot;defaultTime&quot;: &quot;00:00&quot;}'\\\" class=form-control type=text>  <div ng-switch-when=number ng-switch=::attribute.numType> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-when=integer ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control step=1 type=number>  <input name={{::attribute.name}} ng-required=attribute.required ng-switch-default ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control type=number>  </div> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-default ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ng-maxlength=attribute.maxLength class=form-control type=text>  <div ng-show=\\\"attrCtrl.form.$submitted || attrCtrl.form[attribute.name].$touched\\\"> <p class=text-danger ng-show=attrCtrl.form[attribute.name].$error.required> {{'This field is required' | translate}} </p> </div> </div> </div> </div> </fieldset> \";","module.exports = \"<ngeo-drawfeature ngeo-btn-group class=btn-group ngeo-drawfeature-active=efCtrl.drawActive ngeo-drawfeature-map=efCtrl.map ngeo-drawfeature-showmeasure=efCtrl.showMeasure> <a data-toggle=tooltip title=\\\"{{'Draw a point on the map' | translate}}\\\" href ngeo-btn ngeo-drawpoint class=\\\"btn btn-default ngeo-drawfeature-point\\\" ng-class=\\\"{active: dfCtrl.drawPoint.active}\\\" ng-model=dfCtrl.drawPoint.active> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a line on the map' | translate}}\\\" href ngeo-btn ngeo-measurelength class=\\\"btn btn-default ngeo-drawfeature-linestring\\\" ng-class=\\\"{active: dfCtrl.measureLength.active}\\\" ng-model=dfCtrl.measureLength.active> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a polygon on the map' | translate}}\\\" href ngeo-btn ngeo-measurearea class=\\\"btn btn-default ngeo-drawfeature-polygon\\\" ng-class=\\\"{active: dfCtrl.measureArea.active}\\\" ng-model=dfCtrl.measureArea.active> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a circle on the map' | translate}}\\\" href ngeo-btn ngeo-measureazimut class=\\\"btn btn-default ngeo-drawfeature-circle\\\" ng-class=\\\"{active: dfCtrl.measureAzimut.active}\\\" ng-model=dfCtrl.measureAzimut.active> <span class=\\\"gmf-icon gmf-icon-circle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a rectangle on the map' | translate}}\\\" href ngeo-btn ngeo-drawrectangle class=\\\"btn btn-default ngeo-drawfeature-rectangle\\\" ng-class=\\\"{active: dfCtrl.drawRectangle.active}\\\" ng-model=dfCtrl.drawRectangle.active> <span class=\\\"gmf-icon gmf-icon-rectangle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a text label on the map' | translate}}\\\" href ngeo-btn ngeo-drawtext class=\\\"btn btn-default ngeo-drawfeature-text\\\" ng-class=\\\"{active: dfCtrl.drawText.active}\\\" ng-model=dfCtrl.drawText.active> <span class=\\\"gmf-icon gmf-icon-text\\\"></span> </a> </ngeo-drawfeature> <div ng-switch=efCtrl.selectedFeature> <hr class=gmf-drawfeature-separator ng-show=\\\"efCtrl.getFeaturesArray().length > 0\\\"> <div ng-switch-when=null> <div ng-show=\\\"efCtrl.getFeaturesArray().length > 0\\\"> <div class=ngeo-drawfeature-actionbuttons> <button type=button data-toggle=dropdown aria-haspopup=true aria-expanded=false ngeo-exportfeatures ngeo-exportfeatures-features=efCtrl.features class=\\\"btn btn-link btn-sm\\\"> <span class=\\\"fa fa-mail-forward\\\"></span> {{'Export' | translate}} <span class=caret></span> </button> <button ng-click=efCtrl.clearFeatures() class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-trash\\\"></span> {{'Delete All' | translate}} </button> </div> <div class=gmf-eol></div> <div class=\\\"gmf-drawfeature-featurelist list-group list-group-sm\\\"> <button role=button class=list-group-item ng-repeat=\\\"feature in efCtrl.getFeaturesArray()\\\" ng-click=efCtrl.selectFeatureFromList(feature);> {{ feature.get(efCtrl.nameProperty) }} </button> </div> </div> </div> <div ng-switch-default> <button ng-click=\\\"efCtrl.selectedFeature = null;\\\" class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-arrow-left\\\"></span> {{'List' | translate}} </button> <div class=ngeo-drawfeature-actionbuttons> <button type=button data-toggle=dropdown aria-haspopup=true aria-expanded=false ngeo-exportfeatures ngeo-exportfeatures-features=efCtrl.selectedFeatures class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-mail-forward\\\"></span> {{'Export' | translate}} <span class=caret></span> </button> <button ng-click=efCtrl.removeFeature(efCtrl.selectedFeature); class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-trash\\\"></span> {{'Delete' | translate}} </button> </div> <div class=gmf-eol></div> <gmf-featurestyle gmf-featurestyle-feature=efCtrl.selectedFeature> </gmf-featurestyle> </div> </div> \";","module.exports = \"<div ng-if=\\\"fsCtrl.feature && fsCtrl.type\\\"> <div class=form-group> <input ng-model=fsCtrl.getSetName ng-model-options=\\\"{getterSetter: true}\\\" ng-attr-placeholder=\\\"{{'Name' | translate}}\\\" class=form-control /> </div> <div ng-if=\\\"fsCtrl.type !== 'Text'\\\" class=form-group> <input id=gmf-featurestyle-showlabel type=checkbox ng-model=fsCtrl.getSetShowLabel ng-model-options=\\\"{getterSetter: true}\\\"/> <label ng-switch=fsCtrl.type for=gmf-featurestyle-showlabel class=control-label> {{'Display label' | translate}} </label> </div> <div ng-if=\\\"fsCtrl.type !== 'Text'\\\" class=form-group> <input id=gmf-featurestyle-showmeasure type=checkbox ng-model=fsCtrl.getSetShowMeasure ng-model-options=\\\"{getterSetter: true}\\\"/> <label ng-switch=fsCtrl.type for=gmf-featurestyle-showmeasure class=control-label> <span ng-switch-when=Circle> {{'Display azimuth and radius' | translate}} </span> <span ng-switch-when=Polygon> {{'Display surface' | translate}} </span> <span ng-switch-when=Rectangle> {{'Display surface' | translate}} </span> <span ng-switch-when=LineString> {{'Display length' | translate}} </span> <span ng-switch-when=Point> {{'Display coordinates' | translate}} </span> </label> <em class=text-muted> ({{ fsCtrl.measure }}) </em> </div> </div> <div ng-if=\\\"fsCtrl.feature && fsCtrl.type\\\" class=form-horizontal> <div class=form-group> <div ngeo-colorpicker=\\\"\\\" ngeo-colorpicker-color=fsCtrl.color class=col-md-12> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Point'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Size' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=3 max=20 step=1 ng-model=fsCtrl.getSetSize ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Text'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Size' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=8 max=30 step=1 ng-model=fsCtrl.getSetSize ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Circle' || fsCtrl.type === 'LineString' || fsCtrl.type === 'Polygon' || fsCtrl.type === 'Rectangle'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Stroke' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=0.5 max=5 step=0.5 ng-model=fsCtrl.getSetStroke ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Circle' || fsCtrl.type === 'Polygon' || fsCtrl.type === 'Rectangle'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Opacity' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=0 max=1 step=0.05 ng-model=fsCtrl.getSetOpacity ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Text'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Angle' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=-180 max=180 step=22.5 ng-model=fsCtrl.getSetAngle ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> </div> \";","module.exports = \"<div class=ngeo-displaywindow ng-show=$ctrl.open ng-style=$ctrl.style> <div class=windowcontainer> <button type=button class=\\\"btn fa-close close\\\" ng-click=$ctrl.close()> </button> <div class=animation-container> <div class=slide-animation> <div class=\\\"header ui-draggable-handle\\\" ng-if=\\\"$ctrl.title !== null\\\"> <p class=title>{{ $ctrl.title }}</p> </div> <div class=details ng-if=$ctrl.content ng-bind-html=$ctrl.content> </div> <div class=details ng-if=\\\"$ctrl.url !== null\\\"> <iframe frameborder=0 type=text/html height=100% width=100% ng-src=\\\"{{ $ctrl.urlTrusted }}\\\"></iframe> </div> </div> </div> </div> </div> \";","module.exports = \"<ul class=gmf-theme-selector> <li ng-repeat=\\\"theme in $ctrl.themes\\\" ng-click=$ctrl.setTheme(theme) ng-class=\\\"{'gmf-theme-selector-active': $ctrl.gmfThemeManager.getThemeName() == theme.name}\\\"> <img class=gmf-thumb ng-src={{::theme.icon}} /> <span class=gmf-text>{{theme.name | translate}}</span> </li> </ul> \";","module.exports = \"<div class=gmf-search> <input type=text ng-attr-placeholder={{$ctrl.placeholder|translate}} class=form-control ng-model=$ctrl.inputValue ngeo-search=$ctrl.options ngeo-search-datasets=$ctrl.datasets ngeo-search-listeners=$ctrl.listeners> <span class=\\\"gmf-clear-button ng-hide\\\" ng-hide=\\\"!$ctrl.clearButton || $ctrl.inputValue == ''\\\" ng-click=$ctrl.onClearButton()> </span> </div> <span ng-if=$ctrl.colorChooser> <span ng-show=$ctrl.displayColorPicker ngeo-popover ngeo-popover-placement=bottom> <button class=\\\"gmf-color-button fa fa-tint\\\" ngeo-popover-anchor data-original-title=\\\"{{'Change the color of the search result'|translate}}\\\"></button> <div ngeo-popover-content> <div ngeo-colorpicker ngeo-colorpicker-color=$ctrl.color></div> </div> </span> </span> \";","module.exports = \"<table class=ngeo-colorpicker-palette> <tr ng-repeat=\\\"colors in ::ctrl.colors\\\"> <td ng-repeat=\\\"color in ::colors\\\" ng-click=ctrl.setColor(color) ng-class=\\\"{'ngeo-colorpicker-selected': color == ctrl.color}\\\"> <div ng-style=\\\"::{'background-color': color}\\\"></div> </td> </tr> </table> \";","module.exports = \"<div class=gmf-displayquerywindow ng-class=\\\"{'desktop': ctrl.desktop, 'mobile': !ctrl.desktop}\\\" ng-show=ctrl.open ngeo-swipe-up=\\\"ctrl.collapsed = false\\\" ngeo-swipe-down=\\\"ctrl.collapsed = true\\\" ngeo-swipe-disable-mouse ng-swipe-disable-mouse ng-swipe-left=ctrl.next() ng-swipe-right=ctrl.previous()> <button class=collapse-button type=button ng-show=::!ctrl.desktop ng-click=\\\"ctrl.collapsed = !ctrl.collapsed\\\" ng-class=\\\"[ctrl.collapsed ? 'collapse-button-up' : 'collapse-button-down']\\\"> </button> <div class=windowcontainer> <button type=button class=\\\"btn fa-close close\\\" ng-click=ctrl.close()> </button> <div class=animation-container ng-class=\\\"[ctrl.collapsed ? '' : 'animation-container-detailed', ctrl.isNext ? 'next' : 'previous']\\\"> <div ng-animate-swap=ctrl.animate class=\\\"slide-animation gmf-animatable\\\"> <div class=header> <p class=title>{{ctrl.source.label | translate}}</p> <p class=subtitle>{{ctrl.getFeatureValues()[ctrl.source.identifierAttributeField]}}</p> </div> <div class=details> <table> <tr ng-repeat=\\\"(key, value) in ctrl.getFeatureValues()\\\" ng-if=\\\"value !== undefined\\\"> <td class=details-key ng-bind-html=\\\"key | translate | ngeoTrustHtml\\\"></td> <td class=details-value ng-bind-html=\\\"value | ngeoTrustHtml\\\"></td> </tr> </table> </div> </div> </div> <div class=navigate> <div class=placeholder> <button type=button class=\\\"previous btn\\\" ng-disabled=ctrl.isFirst() ng-show=\\\"ctrl.getResultLength() > 1\\\" ng-click=ctrl.previous()> <span ng-show=::ctrl.desktop>{{'Prev.' | translate}}</span> </button> </div> <div class=results> <span ng-show=::!ctrl.desktop>{{'Result' | translate}}</span> <span>{{ctrl.currentResult + 1}}</span> <span>/</span> <span>{{ctrl.getResultLength()}}</span> <div ng-show=::ctrl.desktop class=dropup> <button type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span class=\\\"fa fa-filter\\\"></span> <span class=\\\"fa fa-caret-up\\\"></span> </button> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li> <a href=# ng-click=ctrl.setSelectedSource(null)> <i class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedSource === null}\\\"> </i> <span>{{'All layers' | translate}} ({{ctrl.ngeoQueryResult.total}})</span> </a> </li> <li role=separator class=divider> </li> <li ng-repeat-start=\\\"source in ctrl.ngeoQueryResult.sources | filter: ctrl.sourcesFilter\\\" ng-repeat-end ng-class=\\\"{'disabled': source.features.length <= 0}\\\"> <a href=# ng-click=ctrl.setSelectedSource(source)> <i class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedSource === source}\\\"> </i> <span>{{source.label | translate}} ({{source.features.length}})</span> </a> </li> </ul> </div> </div> <div class=placeholder> <button type=button class=\\\"next btn\\\" ng-disabled=ctrl.isLast() ng-show=\\\"ctrl.getResultLength() > 1\\\" ng-click=ctrl.next()> <span ng-show=::ctrl.desktop>{{'Next' | translate}}</span> </button> </div> </div> </div> </div> \";","module.exports = \"<div class=\\\"gmf-displayquerygrid panel\\\" ng-show=ctrl.active> <div class=close ng-click=ctrl.clear()> &times; </div> <ul class=\\\"nav nav-pills\\\" role=tablist> <li ng-repeat=\\\"gridSource in ctrl.getGridSources() track by gridSource.source.label\\\" role=presentation ng-class=\\\"{'active' : ctrl.isSelected(gridSource)}\\\" ng-click=ctrl.selectTab(gridSource)> <a href=#{{ctrl.escapeValue(gridSource.source.label)}} data-target=#{{ctrl.escapeValue(gridSource.source.label)}} aria-controls={{ctrl.escapeValue(gridSource.source.label)}} role=tab data-toggle=tab> <span ng-if=\\\"gridSource.source.tooManyResults !== true\\\"> {{gridSource.source.label | translate}} ({{gridSource.source.features.length}}) </span> <span ng-if=\\\"gridSource.source.tooManyResults === true\\\"> {{gridSource.source.label | translate}} ({{gridSource.source.totalFeatureCount}}*) </span> </a> </li> </ul> <div class=tab-content> <div ng-repeat=\\\"gridSource in ctrl.getGridSources() track by gridSource.source.label\\\" role=tabpanel class=tab-pane ng-class=\\\"{'active' : ctrl.isSelected(gridSource)}\\\" id={{ctrl.escapeValue(gridSource.source.label)}}> <ngeo-grid ngeo-grid-configuration=gridSource.configuration ng-if=\\\"gridSource.source.tooManyResults !== true\\\"> </ngeo-grid> <div ng-if=\\\"gridSource.source.tooManyResults === true\\\"> <div class=\\\"gmf-displayquerygrid-message alert alert-warning\\\"> <p><span translate>The results can not be displayed because the maximum number has been reached</span> ({{gridSource.source.limit}}).</p> <p translate>Please refine your query.</p> </div> </div> </div> </div> <div class=navbar ng-show=\\\"!ctrl.pending && ctrl.getActiveGridSource() && ctrl.getActiveGridSource().configuration !== null\\\"> <ul class=\\\"nav navbar-nav navbar-right\\\"> <li class=ng-hide ng-show=ctrl.isOneSelected()> <p class=\\\"navbar-text ng-binding\\\"> {{ctrl.getSelectedRowCount()}} <span translate>selected element(s)</span> </p> </li> <li ng-show=ctrl.isOneSelected() class=ng-hide> <button class=\\\"btn btn-link btn-xs\\\" title=\\\"{{'Zoom to selection' | translate}}\\\" ng-click=ctrl.zoomToSelection()> <i class=\\\"fa fa-search-plus\\\"></i> <span translate>Zoom to</span> </button> </li> <li ng-show=ctrl.isOneSelected() class=ng-hide> <button class=\\\"btn btn-link btn-xs\\\" title=\\\"{{'Export selection as CSV' | translate}}\\\" ng-click=ctrl.downloadCsv()> <i class=\\\"fa fa-download\\\"></i> <span translate>Export as CSV</span> </button> </li> <li class=\\\"dropdown navbar-link dropup\\\"> <button type=button class=\\\"dropup btn btn-default btn-xs\\\" data-toggle=dropdown aria-haspopup=true aria-expanded=false> <span translate>Select</span> <span class=caret></span> </button> <ul class=dropdown-menu aria-labelledby=dLabel> <li> <a href=\\\"\\\" ng-click=ctrl.selectAll() translate>All</a> </li> <li> <a href=\\\"\\\" ng-click=ctrl.unselectAll() translate>None</a> </li> <li> <a href=\\\"\\\" ng-click=ctrl.invertSelection() translate>Reverse selection</a> </li> </ul> </li> </ul> </div> <div ng-show=ctrl.pending class=gmf-displayquerygrid-pending> <span class=\\\"fa fa-spinner fa-spin\\\"></span> </div> </div> \";","module.exports = \"<div class=ngeo-grid-table-container> <table float-thead=ctrl.floatTheadConfig ng-model=ctrl.configuration.data class=\\\"table table-bordered table-striped table-hover\\\"> <thead class=table-header> <tr> <th ng-repeat=\\\"columnDefs in ctrl.configuration.columnDefs\\\" ng-click=ctrl.sort(columnDefs.name) ng-bind-html=\\\"columnDefs.name | ngeoTrustHtml | translate\\\"> <i ng-show=\\\"ctrl.sortedBy !== columnDefs.name\\\" class=\\\"fa fa-fw\\\"></i> <i ng-show=\\\"ctrl.sortedBy === columnDefs.name && ctrl.sortAscending === true\\\" class=\\\"fa fa-caret-up\\\"></i> <i ng-show=\\\"ctrl.sortedBy === columnDefs.name && ctrl.sortAscending === false\\\" class=\\\"fa fa-caret-down\\\"></i> </th> </tr> </thead> <tbody> <tr ng-repeat=\\\"attributes in ctrl.configuration.data\\\" ng-class=\\\"['row-' + ctrl.configuration.getRowUid(attributes), ctrl.configuration.isRowSelected(attributes) ? 'ngeo-grid-active': '']\\\" ng-click=\\\"ctrl.clickRow(attributes, $event)\\\" ng-mousedown=ctrl.preventTextSelection($event)> <td ng-repeat=\\\"columnDefs in ctrl.configuration.columnDefs\\\" ng-bind-html=\\\"attributes[columnDefs.name] | ngeoTrustHtml\\\"></td> </tr> </tbody> </table> </div> \";","module.exports = \"<div class=\\\"btn-group dropup\\\"> <a type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span class=gmf-mouseposition-control-target></span> <span class=caret></span> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li class=dropdown-header translate>Coordinate systems</li> <li ng-repeat=\\\"projitem in ::ctrl.projections\\\"> <a href ng-click=ctrl.setProjection(projitem)> <span class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.projection == projitem}\\\"></span> {{::projitem.label}} </a> </li> </ul> </div> \";","module.exports = \"<div ngeo-map=ctrl.map ngeo-map-manage-resize=ctrl.manageResize ngeo-map-resize-transition=ctrl.resizeTransition> </div> \";","module.exports = \"<div class=\\\"btn-group btn-block\\\" ng-class=\\\"::{'dropup': scaleselectorCtrl.options.dropup}\\\"> <button type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span ng-bind-html=\\\"scaleselectorCtrl.currentScale | ngeoScalify | ngeoTrustHtml\\\"></span>&nbsp;<i class=caret></i> </button> <ul class=\\\"dropdown-menu btn-block\\\" role=menu> <li ng-repeat=\\\"zoomLevel in ::scaleselectorCtrl.zoomLevels\\\"> <a href ng-click=scaleselectorCtrl.changeZoom(zoomLevel) ng-bind-html=\\\"scaleselectorCtrl.getScale(zoomLevel) | ngeoScalify | ngeoTrustHtml\\\"> </a> </li> </ul> </div> \";","module.exports = \"<div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=Close><span aria-hidden=true>&times;</span></button> <h4 class=modal-title translate>Share this map</h4> </div> <div class=modal-body> <form role=form name=gmfShareForm novalidate> <div class=form-group> <label for=gmfShareInputShortLink translate>Permalink</label> <input type=text class=form-control id=gmfShareInputShortLink onclick=this.select() ng-model=$ctrl.shortLink readonly=True> <p class=help-block translate>Copy this link to share it.</p> <p class=text-danger ng-if=$ctrl.showLengthWarning> <span class=\\\"fa fa-exclamation-triangle\\\"></span> {{'You have a lot of drawn elements in this map. The above link may not be correctly supported by some browsers.' | translate}} </p> <p class=text-danger ng-if=$ctrl.errorOnGetShortUrl> <span class=\\\"fa fa-exclamation\\\"></span> {{'Error, cannot get the shortened URL.' | translate}} </p> </div> <hr> <div class=gmf-share-email ng-if=::$ctrl.enableEmail> <div class=form-group> <label for=gmfShareInputEmail translate>Send this link to</label> <input type=email class=form-control name=inputEmail id=gmfShareInputEmail placeholder=E-mail ng-model=$ctrl.email required> <span ng-show=\\\"gmfShareForm.$submitted || gmfShareForm.inputEmail.$touched\\\"> <span class=text-danger ng-show=\\\"gmfShareForm.inputEmail.$error.email || gmfShareForm.inputEmail.$error.required\\\"> <i class=\\\"fa fa-exclamation-triangle\\\" aria-hidden=true></i> {{'Invalid email.' | translate}}</span> </span> </div> <div class=form-group> <textarea class=form-control ng-attr-placeholder=\\\"{{'Message (optional)' | translate }}\\\" ng-model=$ctrl.message></textarea> </div> <span class=text-success ng-if=$ctrl.successfullySent> <i class=\\\"fa fa-check\\\" aria-hidden=true></i> {{ 'Link successfully sent.' | translate }} </span> <span class=text-danger ng-if=$ctrl.errorOnsend> <i class=\\\"fa fa-exclamation\\\" aria-hidden=true></i> {{ 'Error, the link has not been sent.' | translate }} </span> </div> <div class=text-right> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal translate>Close</button> <button ng-if=::$ctrl.enableEmail type=submit class=\\\"btn btn-default btn-primary\\\" ng-click=$ctrl.sendShortUrl() ng-disabled=!gmfShareForm.$valid translate>Send </button> </div> </form> </div> \";","module.exports = \"<div class=gmf-time-slider> <div ui-slider=sliderCtrl.sliderOptions ng-model=sliderCtrl.dates> <span class=\\\"ui-slider-handle ui-state-default ui-corner-all\\\" tabindex=0 data-toggle=tooltip title=\\\"\\\"> </span> </div> <div class=gmf-time-slider-displayed-dates> <div class=gmf-time-slider-start-date ng-if=\\\"::sliderCtrl.time.mode === 'range'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates[0])}}</span> </div> <div class=gmf-time-slider-start-date ng-if=\\\"::sliderCtrl.time.mode === 'value'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates)}}</span> </div> <div class=gmf-time-slider-end-date ng-if=\\\"::sliderCtrl.time.mode === 'range'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates[1])}}</span> </div> </div> </div> \";","module.exports = \"<div class=gmf-layertree-root-tools ng-if=layertreeCtrl.isRoot> <a href ng-if=\\\"gmfLayertreeCtrl.nodesCount() > 0\\\" ng-click=gmfLayertreeCtrl.removeAllNodes()> <span class=\\\"fa fa-trash\\\"></span> {{'Clear all' | translate}} </a> </div> <div ng-if=::!layertreeCtrl.isRoot id=gmf-layertree-node-{{::layertreeCtrl.uid}} ng-class=\\\"[layertreeCtrl.node.children ? 'gmf-layertree-group' : 'gmf-layertree-leaf', 'gmf-layertree-depth-' + layertreeCtrl.depth, gmfLayertreeCtrl.getResolutionStyle(layertreeCtrl.node), gmfLayertreeCtrl.getNodeState(layertreeCtrl)]\\\"> <div class=ngeo-sortable-handle ng-show=\\\"layertreeCtrl.depth === 1 && layertreeCtrl.parent.children.length > 1\\\"> <i class=\\\"gmf-layertree-sortable-handle-icon fa fa-ellipsis-v\\\"></i> </div> <a ng-if=::layertreeCtrl.node.children data-toggle=collapse href=#gmf-layertree-layer-group-{{::layertreeCtrl.uid}} aria-expanded={{::layertreeCtrl.node.metadata.isExpanded}} class=\\\"fa gmf-layertree-expand-node fa-fw\\\"> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) ng-if=::!layertreeCtrl.node.children ng-class=\\\"::{'gmf-layertree-no-layer-icon' : !gmfLayertreeCtrl.getLegendIconURL(layertreeCtrl)}\\\" class=gmf-layertree-layer-icon> <img ng-if=\\\"::(legendIconUrl=gmfLayertreeCtrl.getLegendIconURL(layertreeCtrl))\\\" ng-src={{::legendIconUrl}}>  </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) ng-if=::layertreeCtrl.node.children ng-class=\\\"['fa fa-fw', layertreeCtrl.node.children && !layertreeCtrl.layer.loading ? 'gmf-layertree-state' : 'fa-refresh fa-spin']\\\"> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) class=gmf-layertree-name data-toggle=tooltip data-placement=top title=\\\"{{layertreeCtrl.node.name | translate}}\\\"> {{layertreeCtrl.node.name | translate}} <i class=\\\"gmf-icon gmf-icon-search-go gmf-layertree-zoom\\\" data-toggle=tooltip data-placement=bottom data-title=\\\"{{'Not visible at current scale. Click to zoom.'|translate}}\\\" ng-click=\\\"::gmfLayertreeCtrl.zoomToResolution(layertreeCtrl); $event.preventDefault(); $event.stopPropagation();\\\" ng-if=\\\"gmfLayertreeCtrl.getNodeState(layertreeCtrl) == 'on'\\\"> </i> <span ngeo-popover ngeo-popover-dismiss=.content ng-if=\\\"gmfLayertreeCtrl.getNodeState(layertreeCtrl) !== 'off' && layertreeCtrl.node.time && layertreeCtrl.node.time.mode !== 'disabled'\\\"> <span ngeo-popover-anchor class=\\\"fa fa-clock-o\\\" ng-click=\\\"$event.preventDefault(); $event.stopPropagation()\\\"> </span> <div ngeo-popover-content> <ngeo-date-picker ng-if=\\\"::layertreeCtrl.node.time.widget === 'datepicker'\\\" time=layertreeCtrl.node.time on-date-selected=\\\"gmfLayertreeCtrl.updateWMSTimeLayerState(layertreeCtrl, time)\\\"> </ngeo-date-picker> <gmf-time-slider ng-if=\\\"::layertreeCtrl.node.time.widget === 'slider'\\\" gmf-time-slider-time=layertreeCtrl.node.time gmf-time-slider-on-date-selected=\\\"gmfLayertreeCtrl.updateWMSTimeLayerState(layertreeCtrl, time)\\\"> </gmf-time-slider> </div> </span> <span class=\\\"fa fa-pencil\\\" data-toggle=tooltip data-placement=right title=\\\"{{'Currently editing this layer'|translate}}\\\" ng-if=layertreeCtrl.properties.editing> </span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-if=\\\"::layertreeCtrl.depth == 1\\\" ng-click=gmfLayertreeCtrl.removeNode(layertreeCtrl.node)> <span class=\\\"fa fa-trash\\\"></span> </a> <a class=gmf-layertree-node-menu-btn href=\\\"\\\" ng-if=::gmfLayertreeCtrl.supportsCustomization(layertreeCtrl) ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-menu-' + layertreeCtrl.uid)\\\"> <span class=\\\"fa fa-cog\\\"></span> </a> <span ngeo-popover ng-if=\\\"::(layertreeCtrl.depth === 1 && !layertreeCtrl.node.mixed) || (layertreeCtrl.depth > 1 && layertreeCtrl.parent.node.mixed && !layertreeCtrl.node.children) || (gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend) || layertreeCtrl.getDataSource().filtrable\\\" ngeo-popover-dismiss=.content> <span ngeo-popover-anchor class=\\\"extra-actions fa fa-cog\\\"> </span> <div ngeo-popover-content> <ul> <li ng-if=\\\"::(layertreeCtrl.depth === 1 && !layertreeCtrl.node.mixed) || (layertreeCtrl.depth > 1 && layertreeCtrl.parent.node.mixed)\\\"> <i class=\\\"fa fa-tint fa-fw\\\"></i> <span for=layer-opactity>{{'Opacity'|translate}}</span> <input class=input-action name=layer-opactity type=range min=0 max=1 step=0.01 ng-model=layertreeCtrl.layer.opacity /> </li> <li ng-if=\\\"::gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend'); popoverCtrl.dismissPopover()\\\" data-toggle=collapse href=\\\"\\\"> {{'Show/hide legend'|translate}} </a> </li> <li ng-if=\\\"layertreeCtrl.getDataSource() && layertreeCtrl.getDataSource().filtrable\\\"> <i class=\\\"fa fa-filter fa-fw\\\"></i> <a ng-click=gmfLayertreeCtrl.toggleFiltrableDataSource(layertreeCtrl.getDataSource()) href=\\\"\\\"> {{'Filter'|translate}} </a> </li> </ul> </div> </span> <span class=gmf-layertree-metadata ng-if=::layertreeCtrl.node.metadata.metadataUrl> <span ng-if=\\\"::gmfLayertreeCtrl.openLinksInNewWindow === true\\\"> <a title=\\\"{{'More informations'|translate}}\\\" href={{::layertreeCtrl.node.metadata.metadataUrl}} target=blank_> </a> </span> <span ng-if=\\\"::gmfLayertreeCtrl.openLinksInNewWindow !== true\\\"> <a title=\\\"{{'More informations'|translate}}\\\" href=\\\"\\\" ng-click=gmfLayertreeCtrl.displayMetadata(layertreeCtrl)> </a> </span> </span> </span> </div> <div class=gmf-layertree-node-menu id=gmf-layertree-node-menu-{{::layertreeCtrl.uid}} style=display:none ng-if=::gmfLayertreeCtrl.supportsCustomization(layertreeCtrl)> <div ng-if=::gmfLayertreeCtrl.supportsOpacityChange(layertreeCtrl)> <i class=\\\"fa fa-tint fa-fw\\\"></i> <span for=layer-opactity>{{'Opacity'|translate}}</span> <input class=input-action name=layer-opactity type=range min=0 max=1 step=0.01 ng-model=layertreeCtrl.layer.opacity /> </div> <a class=gmf-layertree-node-menu-togglelegend ng-if=::gmfLayertreeCtrl.supportsLegend(layertreeCtrl) data-toggle=collapse ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\" href=\\\"\\\"> <span class=\\\"fa fa-th-list\\\"> </span> {{'Show/hide legend'|translate}} </a> </div> <div ng-if=\\\"::!layertreeCtrl.isRoot && gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend\\\" id=gmf-layertree-node-{{::layertreeCtrl.uid}}-legend class=\\\"collapse gmf-layertree-legend\\\" ng-class=\\\"::[layertreeCtrl.node.metadata.isLegendExpanded ? 'in' : '']\\\"> <a title=\\\"{{'Hide legend'|translate}}\\\" data-toggle=collapse ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\" href=\\\"\\\"> {{'Hide legend'|translate}} </a> <div ng-if=\\\"gmfLayertreeCtrl.isNodeLegendVisible('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\"> <div ng-repeat=\\\"(title, url) in ::gmfLayertreeCtrl.getLegendsObject(layertreeCtrl)\\\"> <p ng-if=\\\"::gmfLayertreeCtrl.getNumberOfLegendsObject(layertreeCtrl) > 1\\\">{{title|translate}}</p> <img ng-src={{url}}> </div> </div> </div> <ul class=gmf-layertree-root-external-datasources ng-if=\\\"layertreeCtrl.isRoot && (gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmsGroups.length || gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmtsGroups.length || gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup.dataSources.length)\\\"> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-repeat=\\\"wmtsGroup in gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmtsGroups\\\" group=wmtsGroup> </gmf-datasourcegrouptree> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-repeat=\\\"wmsGroup in gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmsGroups\\\" group=wmsGroup> </gmf-datasourcegrouptree> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-if=gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup.dataSources.length group=gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup> </gmf-datasourcegrouptree> </ul> <ul id=gmf-layertree-layer-group-{{::layertreeCtrl.uid}} ng-if=::layertreeCtrl.node.children ng-class=\\\"{collapse: !layertreeCtrl.isRoot, in : layertreeCtrl.node.metadata.isExpanded}\\\" ngeo-sortable=\\\"::layertreeCtrl.isRoot && layertreeCtrl.node.children\\\" ngeo-sortable-options=\\\"{handleClassName: 'ngeo-sortable-handle', draggerClassName: 'gmf-layertree-dragger', placeholderClassName : 'gmf-layertree-curr-drag-item'}\\\" ngeo-sortable-callback=::gmfLayertreeCtrl.afterReorder ngeo-sortable-callback-ctx=::gmfLayertreeCtrl> <li class=gmf-layertree-node ng-repeat=\\\"node in layertreeCtrl.node.children\\\" ng-class=\\\"'gmf-layertree-depth-' + layertreeCtrl.depth\\\" ngeo-layertree=node ngeo-layertree-notroot ngeo-layertree-map=layertreeCtrl.map ngeo-layertree-nodelayerexpr=layertreeCtrl.nodelayerExpr ngeo-layertree-listenersexpr=layertreeCtrl.listenersExpr> </li> </ul> \";","module.exports = \"<span ng-if=::!layertreeCtrl.isRoot>{{::layertreeCtrl.node.name}}</span> <input type=checkbox ng-if=\\\"::layertreeCtrl.node && !layertreeCtrl.node.children\\\" ng-model=layertreeCtrl.getSetActive ng-model-options=\\\"{getterSetter: true}\\\"/> <ul ng-if=::layertreeCtrl.node.children> <li ng-repeat=\\\"node in ::layertreeCtrl.node.children\\\" ngeo-layertree=::node ngeo-layertree-notroot ngeo-layertree-map=layertreeCtrl.map ngeo-layertree-nodelayerexpr=layertreeCtrl.nodelayerExpr ngeo-layertree-listenersexpr=layertreeCtrl.listenersExpr> </li> </ul> \";","module.exports = \"<div class=\\\"gmf-layertree-group gmf-layertree-depth-1 {{$ctrl.group.visibilityState}}\\\"> <a data-toggle=collapse href=#gmf-layertree-layer-group-{{::$ctrl.getGroupUid()}} aria-expanded=true class=\\\"fa gmf-layertree-expand-node fa-fw\\\"> </a> <a class=\\\"fa fa-fw gmf-layertree-state\\\" href ng-click=$ctrl.toggle()> </a> <a class=gmf-layertree-name href ng-click=$ctrl.toggle()> <span>{{$ctrl.group.title | translate}}</span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-click=$ctrl.remove()> <span class=\\\"fa fa-trash\\\"></span> </a> </span> </div> <ul id=gmf-layertree-layer-group-{{::$ctrl.getGroupUid()}} class=\\\"collapse in\\\"> <li class=\\\"gmf-layertree-node gmf-layertree-depth-2\\\" ng-class=\\\"[dataSource.visible ? 'on' : 'off']\\\" ng-repeat=\\\"dataSource in $ctrl.group.dataSources\\\"> <div class=gmf-layertree-leaf> <a href ng-click=$ctrl.toggleDataSource(dataSource) class=\\\"gmf-layertree-layer-icon gmf-layertree-no-layer-icon\\\"> </a> <a class=gmf-layertree-name href ng-click=$ctrl.toggleDataSource(dataSource)> <span>{{dataSource.name | translate}}</span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-click=$ctrl.removeDataSource(dataSource)> <span class=\\\"fa fa-trash\\\"></span> </a> </span> </div> </li> </ul> \";","module.exports = \"<div class=form-group ng-switch=$ctrl.filtrableDataSources.length> <span ng-switch-when=0 translate>No filtrable layer available!</span> <select class=form-control ng-disabled=$ctrl.aRuleIsActive ng-switch-default ng-model=$ctrl.gmfDataSourceBeingFiltered.dataSource ng-options=\\\"dataSource.name | translate for dataSource in $ctrl.filtrableDataSources\\\"> <option value=\\\"\\\" translate>-- Layer to filter --</option> </select> <div ng-if=\\\"$ctrl.customRules && $ctrl.directedRules && $ctrl.readyDataSource\\\"> <hr class=gmf-filterselector-separator /> <div class=\\\"dropdown gmf-filterselector-savedfilters\\\"> <a class=\\\"btn btn-link dropdown-toggle ngeo-filter-condition-button\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive || $ctrl.gmfSavedFilters.currentDataSourceItems.length === 0}\\\" type=button data-toggle=dropdown ng-disabled=\\\"$ctrl.aRuleIsActive || $ctrl.gmfSavedFilters.currentDataSourceItems.length === 0\\\"> <span translate>Saved</span> <span class=caret></span> </a> <ul class=dropdown-menu> <li ng-repeat=\\\"item in $ctrl.gmfSavedFilters.currentDataSourceItems\\\"> <a href ng-click=$ctrl.saveFilterLoadItem(item)> <span>{{::item.name}}</span> </a> </li> <li role=separator class=divider></li> <li> <a href ng-click=$ctrl.saveFilterManage()> <span translate>Manage saved filters</span> </a> </li> </ul> </div> <ngeo-filter a-rule-is-active=$ctrl.aRuleIsActive custom-rules=$ctrl.customRules datasource=$ctrl.readyDataSource directed-rules=$ctrl.directedRules feature-overlay=$ctrl.featureOverlay map=$ctrl.map tool-group=$ctrl.toolGroup> </ngeo-filter> <div> <a class=\\\"btn btn-link gmf-filterselector-savebtn\\\" type=button data-toggle=dropdown ng-click=\\\"!$ctrl.aRuleIsActive && $ctrl.saveFilterShowModal()\\\" ng-disabled=$ctrl.aRuleIsActive> <span class=\\\"fa fa-save\\\"></span> <span translate>Save</span> </a> </div> </div> <ngeo-modal ng-model=$ctrl.saveFilterSaveModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title>{{'Save filter' | translate}}</h4> </div> <div class=modal-body> <p class=gmf-filterselector-savefilter-desc translate> You can save the filter that you created to re-load it later. </p> <input type=text class=form-control name=name ng-model=$ctrl.saveFilterName placeholder=\\\"{{'Filter name' | translate}}\\\"/> </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'Cancel' | translate}}</button> <button type=button ng-click=$ctrl.saveFilterSave() ng-disabled=\\\"$ctrl.saveFilterName === ''\\\" class=\\\"btn btn-primary\\\">{{'Save' | translate}}</button> </div> </ngeo-modal> <ngeo-modal ng-model=$ctrl.saveFilterManageModalShown> <div class=gmf-filterselector-managefilter-modal> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title>{{'Manage filters' | translate}}</h4> </div> <div class=modal-body> <ul> <li ng-repeat=\\\"item in $ctrl.gmfSavedFilters.currentDataSourceItems\\\"> <span>{{::item.name}}</span> <a href ng-click=$ctrl.saveFilterRemoveItem(item)> {{ 'Delete' | translate }} </a> <div class=gmf-eol></div> </li> </ul> </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'Close' | translate}}</button> </div> </div> </ngeo-modal> </div> \";","module.exports = \"<div class=dropdown> <a class=\\\"btn btn-link dropdown-toggle ngeo-filter-condition-button\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive}\\\" type=button data-toggle=dropdown ng-disabled=$ctrl.aRuleIsActive> <span class=\\\"fa fa-cog\\\"></span> <span class=caret></span> </a> <ul class=dropdown-menu> <li class=ngeo-filter-condition-criteria-header translate>Criteria taken into account</li> <li ng-repeat=\\\"condition in ::$ctrl.conditions\\\"> <a href ng-click=$ctrl.setCondition(condition)> <span ng-class=\\\"{'ngeo-filter-condition-criteria-active': condition.value == $ctrl.datasource.filterCondition}\\\" class=\\\"fa fa-check ngeo-filter-condition-criteria\\\"> </span> <span>{{::condition.text | translate}}</span> </a> </li> </ul> </div> <ngeo-rule ng-repeat=\\\"rule in $ctrl.directedRules\\\" feature-overlay=::$ctrl.featureOverlay class=ngeo-filter-rule-directed map=$ctrl.map rule=rule tool-group=$ctrl.toolGroup> </ngeo-rule> <hr class=ngeo-filter-separator-rules /> <div ng-repeat=\\\"rule in $ctrl.customRules\\\"> <a class=\\\"btn btn-xs btn-link ngeo-filter-rule-custom-rm-btn\\\" ng-click=\\\"!$ctrl.aRuleIsActive && $ctrl.removeCustomRule(rule)\\\" ng-disabled=$ctrl.aRuleIsActive href> <span class=\\\"fa fa-remove\\\"></span> </a> <ngeo-rule feature-overlay=::$ctrl.featureOverlay class=ngeo-filter-rule-custom map=$ctrl.map rule=rule tool-group=$ctrl.toolGroup> </ngeo-rule> </div> <div class=dropdown> <a class=\\\"btn btn-link dropdown-toggle\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive}\\\" type=button data-toggle=dropdown ng-disabled=$ctrl.aRuleIsActive> <span translate>+ Add a new criteria</span> <span class=caret></span> </a> <ul class=dropdown-menu> <li ng-repeat=\\\"attribute in ::$ctrl.geometryAttributes\\\"> <a href ng-click=$ctrl.createAndAddCustomRule(attribute)> <span translate>Spatial filter</span> </a> </li> <li role=presentation class=divider></li> <li ng-repeat=\\\"attribute in ::$ctrl.otherAttributes\\\"> <a href ng-click=$ctrl.createAndAddCustomRule(attribute)> <span>{{::attribute.name | translate}}</span> </a> </li> </ul> </div> <hr class=ngeo-filter-separator-criteria /> <a class=\\\"btn btn-link\\\" type=button ng-click=$ctrl.apply() ng-disabled=\\\"$ctrl.hasARule() === false || $ctrl.datasource.visible === false\\\"> <span class=\\\"fa fa-check\\\"></span> <span translate>Apply filter</span> </a> <a class=\\\"btn btn-link\\\" type=button ng-click=$ctrl.getData() ng-disabled=\\\"$ctrl.hasARule() === false || $ctrl.datasource.visible === false\\\"> <span class=\\\"fa fa-chevron-right\\\"></span> <span translate>Get data</span> </a> \";","module.exports = \"<div class=dropdown ng-class=\\\"{open: $ctrl.rule.active}\\\"> <a class=\\\"btn btn-default btn-sm dropdown-toggle\\\" type=button ng-click=$ctrl.toggle()> <span>{{ ::$ctrl.clone.name | translate }}</span> <span class=caret></span> </a> <div class=\\\"dropdown-menu form-group\\\"> <select class=\\\"form-control input-sm ngeo-rule-operators-list\\\" ng-disabled=$ctrl.drawActive ng-if=::$ctrl.clone.operators ng-model=$ctrl.clone.operator ng-options=\\\"$ctrl.operators[operator] | translate for operator in ::$ctrl.clone.operators track by operator\\\"> </select> <div ng-switch=::$ctrl.clone.type> <div class=\\\"ngeo-rule-type-date form-group\\\" ng-if=$ctrl.rule.active ng-switch-when=date|datetime ng-switch-when-separator=|> <div ng-switch=$ctrl.clone.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <ngeo-date-picker time=$ctrl.timeRangeMode on-date-selected=$ctrl.onDateRangeSelected(time)> </ngeo-date-picker> </div> <div ng-switch-default> <ngeo-date-picker time=$ctrl.timeValueMode on-date-selected=$ctrl.onDateSelected(time)> </ngeo-date-picker> </div> </div> </div> <div class=\\\"ngeo-rule-type-geometry form-group\\\" ng-switch-when=geometry> <div ng-switch=$ctrl.geomType> <span class=\\\"gmf-icon gmf-icon-point\\\" ng-switch-when=Point> </span> <span class=\\\"gmf-icon gmf-icon-line\\\" ng-switch-when=LineString> </span> <span class=\\\"gmf-icon gmf-icon-polygon\\\" ng-switch-when=Polygon> </span> <span class=\\\"gmf-icon gmf-icon-circle\\\" ng-switch-when=Circle> </span> <span class=\\\"gmf-icon gmf-icon-rectangle\\\" ng-switch-when=Rectangle> </span> </div> <ngeo-drawfeature ngeo-drawfeature-active=$ctrl.drawActive ngeo-drawfeature-features=$ctrl.drawnFeatures ngeo-drawfeature-map=$ctrl.map> <div ngeo-btn-group class=btn-group> <a data-toggle=tooltip title=\\\"{{'Draw a point on the map' | translate}}\\\" href ngeo-btn ngeo-drawpoint class=\\\"btn btn-sm btn-default ngeo-drawfeature-point\\\" ng-show=\\\"['intersects', 'within'].indexOf($ctrl.clone.operator) !== -1\\\" ng-class=\\\"{active: dfCtrl.drawPoint.active}\\\" ng-model=dfCtrl.drawPoint.active> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a line on the map' | translate}}\\\" href ngeo-btn ngeo-measurelength class=\\\"btn btn-sm btn-default ngeo-drawfeature-linestring\\\" ng-show=\\\"['intersects', 'within'].indexOf($ctrl.clone.operator) !== -1\\\" ng-class=\\\"{active: dfCtrl.measureLength.active}\\\" ng-model=dfCtrl.measureLength.active> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a polygon on the map' | translate}}\\\" href ngeo-btn ngeo-measurearea class=\\\"btn btn-sm btn-default ngeo-drawfeature-polygon\\\" ng-class=\\\"{active: dfCtrl.measureArea.active}\\\" ng-model=dfCtrl.measureArea.active> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a circle on the map' | translate}}\\\" href ngeo-btn ngeo-measureazimut class=\\\"btn btn-sm btn-default ngeo-drawfeature-circle\\\" ng-class=\\\"{active: dfCtrl.measureAzimut.active}\\\" ng-model=dfCtrl.measureAzimut.active> <span class=\\\"gmf-icon gmf-icon-circle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a rectangle on the map' | translate}}\\\" href ngeo-btn ngeo-drawrectangle class=\\\"btn btn-sm btn-default ngeo-drawfeature-rectangle\\\" ng-class=\\\"{active: dfCtrl.drawRectangle.active}\\\" ng-model=dfCtrl.drawRectangle.active> <span class=\\\"gmf-icon gmf-icon-rectangle\\\"></span> </a> </div> <div class=ngeo-rule-type-geometry-instructions ng-if=$ctrl.drawActive> <span ng-if=dfCtrl.drawPoint.active> {{ 'Draw a point on the map.' | translate }} </span> <span ng-if=dfCtrl.measureLength.active> {{ 'Draw a line string on the map.' | translate }} </span> <span ng-if=dfCtrl.measureArea.active> {{ 'Draw a polygon on the map.' | translate }} </span> <span ng-if=dfCtrl.measureAzimut.active> {{ 'Draw a circle on the map.' | translate }} </span> <span ng-if=dfCtrl.drawRectangle.active> {{ 'Draw a rectangle on the map.' | translate }} </span> </div> </ngeo-drawfeature> </div> <div class=\\\"checkbox ngeo-rule-type-select\\\" ng-switch-when=select> <a ng-click=$ctrl.selectAllChoices() href>{{ All | translate}} </a> <label class=\\\"form-group ol-unselectable\\\" ng-repeat=\\\"choice in ::$ctrl.clone.choices\\\"> <input ng-checked=\\\"$ctrl.clone.getExpression() && $ctrl.clone.getExpression().split(',').indexOf(choice) > -1\\\" ng-click=$ctrl.toggleChoiceSelection(choice) type=checkbox value=choice /> <span>{{ choice | translate }}</span> </label> </div> <div class=\\\"form-group ngeo-rule-type-text\\\" ng-switch-default> <div ng-switch=$ctrl.clone.operator> <div ng-switch-when=..> <input type=number class=\\\"form-control input-sm\\\" ng-model=$ctrl.clone.lowerBoundary /> <input type=number class=\\\"form-control input-sm\\\" ng-model=$ctrl.clone.upperBoundary /> </div> <div ng-switch-default> <input type=number class=\\\"form-control input-sm\\\" ng-if=\\\"$ctrl.clone.type === 'number'\\\" ng-model=$ctrl.clone.expression /> <input type=text class=\\\"form-control input-sm\\\" ng-if=\\\"$ctrl.clone.type !== 'number'\\\" ng-model=$ctrl.clone.expression /> </div> </div> </div> <div class=ngeo-rule-btns> <button class=\\\"btn btn-xs btn-default\\\" ng-click=$ctrl.apply() type=button>{{'Apply' | translate}}</button> <button class=\\\"btn btn-xs btn-default\\\" ng-click=$ctrl.cancel() type=button>{{'Cancel' | translate}}</button> </div> </div> </div> </div> <div class=ngeo-rule-value ng-if=\\\"$ctrl.rule.value !== null\\\"> <a class=\\\"btn btn-xs btn-link\\\" ng-click=\\\"!$ctrl.rule.active && $ctrl.reset()\\\" ng-disabled=$ctrl.rule.active href> <span class=\\\"fa fa-remove\\\"></span> </a> <div ng-switch=::$ctrl.rule.type> <div ng-switch-when=date|datetime ng-switch-when-separator=|> <div ng-switch=$ctrl.rule.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <span translate>From </span> <span>{{ $ctrl.timeToDate($ctrl.rule.lowerBoundary) }}</span> <span translate> to </span> <span>{{ $ctrl.timeToDate($ctrl.rule.upperBoundary) }}</span> </div> <div ng-switch-default> <span>{{ $ctrl.operatorsShortFormat[$ctrl.rule.operator] }}</span> <span>{{ $ctrl.timeToDate($ctrl.rule.getExpression()) }}</span> </div> </div> </div> <div ng-switch-when=geometry> <span>{{ $ctrl.operators[$ctrl.rule.operator] }}</span> <span ng-switch=$ctrl.getRuleGeometryType()> <span class=\\\"gmf-icon gmf-icon-point\\\" ng-switch-when=Point> </span> <span class=\\\"gmf-icon gmf-icon-line\\\" ng-switch-when=LineString> </span> <span class=\\\"gmf-icon gmf-icon-polygon\\\" ng-switch-when=Polygon> </span> <span class=\\\"gmf-icon gmf-icon-circle\\\" ng-switch-when=Circle> </span> <span class=\\\"gmf-icon gmf-icon-rectangle\\\" ng-switch-when=Rectangle> </span> </span> </div> <div ng-switch-when=select> <span ng-repeat=\\\"choice in $ctrl.rule.getExpression().split(',')\\\"> {{ choice | translate }}{{ $last ? '' : ', ' }} </span> </div> <div ng-switch-default> <div ng-switch=$ctrl.rule.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <span translate>Between </span> <span>{{ $ctrl.rule.lowerBoundary }}</span> <span translate> and </span> <span>{{ $ctrl.rule.upperBoundary }}</span> </div> <div ng-switch-default> <span>{{ $ctrl.operatorsShortFormat[$ctrl.rule.operator] }}</span> <span>{{ $ctrl.rule.getExpression() }}</span> </div> </div> </div> </div> </div> \";","module.exports = \"<div class=ngeo-datepicker> <form name=dateForm class=ngeo-datepicker-form novalidate> <div ng-if=\\\"::datepickerCtrl.time.widget === 'datepicker'\\\"> <div class=ngeo-datepicker-start-date> <span ng-if=\\\"::datepickerCtrl.time.mode === 'range'\\\" translate>From:</span> <span ng-if=\\\"::datepickerCtrl.time.mode !== 'range'\\\" translate>Date:</span> <input name=sdate ui-date=datepickerCtrl.sdateOptions ng-model=datepickerCtrl.sdate required=\\\"\\\"/> </div> <div class=ngeo-datepicker-end-date ng-if=\\\"::datepickerCtrl.time.mode === 'range'\\\"> <span translate>To:</span> <input name=edate ui-date=datepickerCtrl.edateOptions ng-model=datepickerCtrl.edate required=\\\"\\\"/> </div> </div> </form> </div> \";","module.exports = \"<h4 class=\\\"popover-title ngeo-popup-title\\\"> <span ng-bind-html=title></span> <button type=button class=close ng-click=\\\"open = false\\\"> &times;</button> </h4> <div class=popover-content ng-bind-html=content></div> \";","module.exports = \"<ul class=gmf-backgroundlayerselector> <li ng-repeat=\\\"layer in ctrl.bgLayers\\\" ng-click=ctrl.setLayer(layer) ng-class=\\\"{'gmf-backgroundlayerselector-active': ctrl.bgLayer == layer, 'gmf-backgroundlayerselector-disabled': ctrl.opacityLayer == layer}\\\"> <img class=gmf-thumb ng-src=\\\"{{::layer.get('metadata')['thumbnail']}}\\\"/> <span class=gmf-text>{{layer.get(\\\"label\\\") | translate}}</span> <span ng-class=\\\"{'gmf-backgroundlayerselector-opacity-check': ctrl.opacityLayer == layer}\\\"></span> </li> <input ng-if=ctrl.opacityLayer class=\\\"input-action gmf-backgroundlayerselector-opacity-slider\\\" name=bg-layer-opacity type=range min=0 max=1 step=0.01 ng-model=ctrl.getSetBgLayerOpacity ng-model-options=\\\"{getterSetter: true}\\\"> </ul> \";","module.exports = \"<div ng-if=$ctrl.gmfUser.username> <div class=form-group> <span>{{'Logged in as' | translate}}</span> <strong>{{ ::$ctrl.gmfUser.username }}</strong>. </div> <form name=logoutForm role=form ng-submit=$ctrl.logout() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\" ng-if=!$ctrl.changingPassword> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Logout' | translate}}\\\"/> </div> <div class=form-group> <input ng-show=$ctrl.allowPasswordChange type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Change password' | translate}}\\\" ng-click=\\\"$ctrl.changingPassword = true\\\"/> </div> </form> <form name=changePasswordForm role=form ng-submit=$ctrl.changePassword() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\" ng-if=$ctrl.changingPassword> <div class=form-group> <input type=password class=form-control name=oldpassword ng-model=$ctrl.oldPwdVal ng-attr-placeholder=\\\"{{'Old password' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=newpassword ng-model=$ctrl.newPwdVal ng-attr-placeholder=\\\"{{'New password' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=newpasswordconfirm ng-model=$ctrl.newPwdConfVal ng-attr-placeholder=\\\"{{'Confirm new password' | translate}}\\\"/> </div> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Change password' | translate}}\\\"/> </div> <div class=form-group> <input type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Cancel' | translate}}\\\" ng-if=!$ctrl.userMustChangeItsPassword() ng-click=$ctrl.changePasswordReset() /> <input type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Logout' | translate}}\\\" ng-if=$ctrl.userMustChangeItsPassword() ng-click=$ctrl.logout() /> </div> </form> <div ng-show=$ctrl.error class=\\\"gmf-authentication-error help-block\\\"></div> <ngeo-modal ng-model=$ctrl.changePasswordModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Password Changed' | translate}} </h4> </div> <div class=modal-body> {{'Your password has successfully been changed.' | translate}} </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'OK' | translate}}</button> </div> </ngeo-modal> </div> <div ng-if=!$ctrl.gmfUser.username> <form name=loginForm role=form ng-submit=$ctrl.login() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\"> <div class=form-group> <input type=text class=form-control name=login ng-model=$ctrl.loginVal ng-attr-placeholder=\\\"{{'Username' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=password ng-model=$ctrl.pwdVal ng-attr-placeholder=\\\"{{'Password' | translate}}\\\"/> </div> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Connect' | translate}}\\\"/> </div> <div ng-show=$ctrl.allowPasswordReset class=form-group> <a ng-click=$ctrl.resetPassword() href=\\\"\\\">{{'Password forgotten?' | translate}}</a> </div> </form> <div ng-show=$ctrl.error class=\\\"gmf-authentication-error help-block\\\"></div> <ngeo-modal ng-model=$ctrl.resetPasswordModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Password forgotten?' | translate}} </h4> </div> <div class=modal-body translate> A new password has just been sent to you by e-mail. </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'OK' | translate}}</button> </div> </ngeo-modal> </div> \";"],"sourceRoot":""}