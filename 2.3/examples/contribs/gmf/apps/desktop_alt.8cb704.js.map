{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/goog.asserts.prod.js","webpack:///./src/GeometryType.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/format/AttributeType.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/rule/Rule.js","webpack:///./src/datasource/OGC.js","webpack:///./contribs/gmf/src/index.js","webpack:///./src/misc/FeatureHelper.js","webpack:///./src/misc/ToolActivate.js","webpack:///./src/utils.js","webpack:///./src/message/Message.js","webpack:///./src/CustomEvent.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/rule/Geometry.js","webpack:///./src/map/LayerHelper.js","webpack:///./src/layertree/Controller.js","webpack:///./src/interaction/Measure.js","webpack:///./src/misc/filters.js","webpack:///./src/query/MapQuerent.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/misc/WMSTime.js","webpack:///./src/misc/decorate.js","webpack:///./src/misc/debounce.js","webpack:///./src/misc/EventHelper.js","webpack:///./contribs/gmf/src/layertree/SyncLayertreeMap.js","webpack:///./src/filter/Condition.js","webpack:///./src/rule/Date.js","webpack:///./src/rule/Text.js","webpack:///./src/filter/RuleHelper.js","webpack:///./src/datasource/File.js","webpack:///./src/datasource/FileGroup.js","webpack:///./src/datasource/OGCGroup.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./contribs/gmf/src/datasource/ExternalDataSourcesManager.js","webpack:///./src/datasource/DataSources.js","webpack:///./contribs/gmf/src/editing/editFeatureComponent.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/rule/Select.js","webpack:///./src/misc/ToolActivateMgr.js","webpack:///./src/misc/btnComponent.js","webpack:///./src/statemanager/Service.js","webpack:///./src/interaction/common.js","webpack:///./contribs/gmf/src/authentication/Service.js","webpack:///./src/misc/Time.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./src/message/popupComponent.js","webpack:///./src/message/Popup.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/format/XSDAttribute.js","webpack:///./src/datasource/Group.js","webpack:///./src/format/WFSAttribute.js","webpack:///./src/datasource/Helper.js","webpack:///./src/WFSDescribeFeatureType.js","webpack:///./src/query/Querent.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./src/interaction/Translate.js","webpack:///./src/interaction/Rotate.js","webpack:///./src/draw/features.js","webpack:///./src/Menu.js","webpack:///./src/statemanager/Location.js","webpack:///./src/download/service.js","webpack:///./contribs/gmf/src/datasource/DataSourceBeingFiltered.js","webpack:///./src/message/modalComponent.js","webpack:///./src/message/Notification.js","webpack:///./src/misc/php-date-formatter.js","webpack:///./contribs/gmf/src/permalink/ShareService.js","webpack:///./src/interaction/MeasureLength.js","webpack:///./src/interaction/MeasureArea.js","webpack:///./contribs/gmf/src/authentication/component.js","webpack:///./contribs/gmf/src/authentication/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./contribs/gmf/src/backgroundlayerselector/component.js","webpack:///./contribs/gmf/src/datasource/Helper.js","webpack:///./contribs/gmf/src/datasource/OGC.js","webpack:///./contribs/gmf/src/datasource/WFSAliases.js","webpack:///./contribs/gmf/src/datasource/Manager.js","webpack:///./contribs/gmf/src/datasource/module.js","webpack:///./src/message/Disclaimer.js","webpack:///./contribs/gmf/src/disclaimer/component.js","webpack:///./contribs/gmf/src/filters/SavedFilters.js","webpack:///./src/filter/ruleComponent.js","webpack:///./src/filter/component.js","webpack:///./contribs/gmf/src/filters/filterselectorComponent.js","webpack:///./contribs/gmf/src/filters/module.js","webpack:///./contribs/gmf/src/layertree/timeSliderComponent.js","webpack:///./contribs/gmf/src/layertree/module.js","webpack:///./contribs/gmf/src/permalink/module.js","webpack:///./src/map/component.js","webpack:///./src/map/scaleselector.js","webpack:///./src/map/module.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./contribs/gmf/src/map/mousepositionComponent.js","webpack:///./contribs/gmf/src/map/module.js","webpack:///./src/grid/Config.js","webpack:///./src/grid/component.js","webpack:///./contribs/gmf/src/query/gridComponent.js","webpack:///./src/misc/swipe.js","webpack:///./contribs/gmf/src/query/windowComponent.js","webpack:///./contribs/gmf/src/query/extraModule.js","webpack:///./contribs/gmf/src/search/module.js","webpack:///./contribs/gmf/src/theme/selectorComponent.js","webpack:///./contribs/gmf/src/theme/module.js","webpack:///./src/message/displaywindowComponent.js","webpack:///./src/misc/controlComponent.js","webpack:///./src/misc/filereaderComponent.js","webpack:///./src/misc/getBrowserLanguage.js","webpack:///./src/misc/extraModule.js","webpack:///./src/query/mapQueryComponent.js","webpack:///./src/statemanager/WfsPermalink.js","webpack:///./contribs/gmf/src/controllers/AbstractAppController.js","webpack:///./src/interaction/ModifyCircle.js","webpack:///./src/interaction/ModifyRectangle.js","webpack:///./src/interaction/Modify.js","webpack:///./contribs/gmf/src/import/wmsCapabilityLayertreeComponent.js","webpack:///./contribs/gmf/src/import/wmtsCapabilityLayertreeComponent.js","webpack:///./contribs/gmf/src/import/importdatasourceComponent.js","webpack:///./contribs/gmf/src/import/module.js","webpack:///./src/draw/Controller.js","webpack:///./src/draw/point.js","webpack:///./src/draw/rectangle.js","webpack:///./src/draw/text.js","webpack:///./src/measure/area.js","webpack:///./src/measure/azimut.js","webpack:///./src/measure/length.js","webpack:///./src/draw/component.js","webpack:///./contribs/gmf/src/editing/XSDAttributes.js","webpack:///./contribs/gmf/src/editing/EditFeature.js","webpack:///./contribs/gmf/src/raster/RasterService.js","webpack:///./src/proj/somerc.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/search/searchDirective.js","webpack:///./src/misc/colorpickerComponent.js","webpack:///./src/misc/AutoProjection.js","webpack:///./contribs/gmf/src/search/FulltextSearch.js","webpack:///./src/download/Csv.js","webpack:///./src/map/resizemap.js","webpack:///./contribs/gmf/src/permalink/shareComponent.js","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.js","webpack:///./src/statemanager/module.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/misc/datepickerComponent.js","webpack:///./src/format/Attribute.js","webpack:///./contribs/gmf/src/editing/EnumerateAttribute.js","webpack:///./src/misc/File.js","webpack:///./contribs/gmf/src/controllers/AbstractDesktopController.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/format/FeatureHash.js","webpack:///./contribs/gmf/src/contextualdata/component.js","webpack:///./contribs/gmf/src/contextualdata/module.js","webpack:///./src/print/VectorEncoder.js","webpack:///./src/print/Service.js","webpack:///./contribs/gmf/src/editing/editFeatureSelectorComponent.js","webpack:///./contribs/gmf/src/editing/module.js","webpack:///./src/search/createGeoJSONBloodhound.js","webpack:///./src/search/createLocationSearchBloodhound.js","webpack:///./src/search/module.js","webpack:///./contribs/gmf/src/drawing/featureStyleComponent.js","webpack:///./contribs/gmf/src/drawing/drawFeatureComponent.js","webpack:///./contribs/gmf/src/drawing/module.js","webpack:///./src/profile/d3Elevation.js","webpack:///./src/profile/elevationComponent.js","webpack:///./contribs/gmf/src/profile/component.js","webpack:///./contribs/gmf/src/profile/drawLineComponent.js","webpack:///./contribs/gmf/src/profile/module.js","webpack:///./src/query/bboxQueryComponent.js","webpack:///./contribs/gmf/src/raster/component.js","webpack:///./src/print/Utils.js","webpack:///./contribs/gmf/src/print/component.js","webpack:///./src/editing/createfeatureComponent.js","webpack:///./src/misc/datetimepickerComponent.js","webpack:///./src/editing/attributesComponent.js","webpack:///./src/editing/exportfeaturesComponent.js","webpack:///./src/misc/sortableComponent.js","webpack:///./src/message/popoverComponent.js","webpack:///./contribs/gmf/src/search/component.js","webpack:///./src/map/recenter.js","webpack:///./src/misc/syncArrays.js","webpack:///./src/layertree/component.js","webpack:///./src/olcs/constants.js","webpack:///./src/Popover.js","webpack:///./contribs/gmf/src/layertree/component.js","webpack:///./contribs/gmf/apps/appmodule.js","webpack:///./src/googlestreetview/component.js","webpack:///./src/googlestreetview/module.js","webpack:///./src/routing/NominatimService.js","webpack:///./src/routing/RoutingService.js","webpack:///./src/routing/NominatimInputComponent.js","webpack:///./src/routing/RoutingFeatureComponent.js","webpack:///./src/routing/RoutingComponent.js","webpack:///./src/routing/module.js","webpack:///./src/proj/EPSG2056.js","webpack:///./contribs/gmf/apps/desktop_alt/Controller.js","webpack:///./src/routing/routing.html","webpack:///./src/routing/routingfeature.html","webpack:///./src/routing/nominatiminput.html","webpack:///./src/googlestreetview/component.html","webpack:///./contribs/gmf/src/import/importdatasourceComponent.html","webpack:///./contribs/gmf/src/import/wmtsCapabilityLayertreeComponent.html","webpack:///./contribs/gmf/src/import/wmsCapabilityLayertreeComponent.html","webpack:///./contribs/gmf/src/raster/widgetComponent.html","webpack:///./contribs/gmf/src/profile/component.html","webpack:///./contribs/gmf/src/print/component.html","webpack:///./contribs/gmf/src/editing/editFeatureSelectorComponent.html","webpack:///./contribs/gmf/src/editing/editFeatureComponent.html","webpack:///./src/editing/attributescomponent.html","webpack:///./contribs/gmf/src/drawing/drawFeatureComponent.html","webpack:///./contribs/gmf/src/drawing/featureStyleComponent.html","webpack:///./src/message/displaywindowComponent.html","webpack:///./contribs/gmf/src/theme/selectorComponent.html","webpack:///./contribs/gmf/src/search/component.html","webpack:///./src/misc/colorpickerComponent.html","webpack:///./contribs/gmf/src/query/windowComponent.html","webpack:///./contribs/gmf/src/query/gridComponent.html","webpack:///./src/grid/component.html","webpack:///./contribs/gmf/src/map/mousepositionComponent.html","webpack:///./contribs/gmf/src/map/component.html","webpack:///./src/map/scaleselector.html","webpack:///./contribs/gmf/src/permalink/shareComponent.html","webpack:///./contribs/gmf/src/layertree/timesliderComponent.html","webpack:///./contribs/gmf/src/layertree/component.html","webpack:///./src/layertree/component.html","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.html","webpack:///./contribs/gmf/src/filters/filterselectorcomponent.html","webpack:///./src/filter/component.html","webpack:///./src/filter/rulecomponent.html","webpack:///./src/misc/datepickerComponent.html","webpack:///./src/message/popupcomponent.html","webpack:///./contribs/gmf/src/backgroundlayerselector/component.html","webpack:///./contribs/gmf/src/authentication/component.html"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","p","jsonpArray","window","oldJsonpFunction","bind","slice","condition","opt_message","var_args","type","__webpack_exports__","CIRCLE","LINE_STRING","MULTI_LINE_STRING","MULTI_POINT","MULTI_POLYGON","POINT","POLYGON","RECTANGLE","TEXT","ANGLE","COLOR","IS_CIRCLE","IS_RECTANGLE","IS_TEXT","NAME","SHOW_LABEL","OPACITY","AZIMUT","SHOW_MEASURE","SIZE","STROKE","BOOLEAN","DATE","DATETIME","TIME","GEOMETRY","NUMBER","SELECT","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_6__","$http","$injector","$q","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","ol_events_EventTarget_js__WEBPACK_IMPORTED_MODULE_5__","this","addBlankBackgroundLayer_","undefined","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","defer","promise_","promise","loaded","bgLayerPromise_","ol_index_js__WEBPACK_IMPORTED_MODULE_2__","findGroupByLayerNodeName","themes","ii","theme","jj","children","group","childNodes","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","ol_array_js__WEBPACK_IMPORTED_MODULE_3__","findThemeByName","themeName","node","nodes","getBgLayers","_this","layerHelper","callback","item","layer","set","metadata","dimensions","ids","getIds","array","forEach","child","layerLayerCreationFn","ogcServers","gmfLayer","gmfLayerWMTS","goog_asserts_js__WEBPACK_IMPORTED_MODULE_0__","assert","url","createWMTSLayerFromCapabilitites","matrixSet","then","response","message","console","error","resolve","gmfLayerWMS","ogcServer","server","imageType","createBasicWMSLayer","layers","credential","fail","promiseSuccessFn","promises","background_layers","map","itemType","x","reverse","all","collection","filter","ol_Collection_js__WEBPACK_IMPORTED_MODULE_4__","createBasicGroup","layerGroupCreationFn","values","getString","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","getOgcServersObject","hasEditableLayers","hasEditableLayers_","_this2","some","hasNodeEditableLayers_","editable","getSnappingConfig","snappingConfig","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","params","role","cache_version","cache","withCredentials","errors","join","hasParam","alert","dispatchEvent","reject","NodeType","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","WMS","angular","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_1__","service","options","_classCallCheck","active_","active","expression","lowerBoundary_","lowerBoundary","operator_","operator","upperBoundary_","upperBoundary","isCustom_","isCustom","name_","operators_","operators","propertyName_","propertyName","type_","listenerKeys","getExpression","setExpression","reset","destroy","ol_events_js__WEBPACK_IMPORTED_MODULE_1__","_createClass","key","OperatorType","BETWEEN","TemporalOperatorType","DURING","EQUAL_TO","GREATER_THAN","GREATER_THAN_OR_EQUAL_TO","LESSER_THAN","LESSER_THAN_OR_EQUAL_TO","LIKE","NOT_EQUAL_TO","SpatialOperatorType","CONTAINS","INTERSECTS","WITHIN","BEGINS","ENDS","EQUALS","_possibleConstructorReturn","_ngeoDatasourceDataSo","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","ngeo_filter_Condition_js__WEBPACK_IMPORTED_MODULE_2__","AND","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","geometryName","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","queryable","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref","next","done","ogcLayer","wfsFormat","supportsWFS","format","ol_format_GML3_js__WEBPACK_IMPORTED_MODULE_5__","GML2","ol_format_GML2_js__WEBPACK_IMPORTED_MODULE_4__","ol_format_WFS_js__WEBPACK_IMPORTED_MODULE_6__","featureNS","featureType","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","ol_format_WMSGetFeatureInfo_js__WEBPACK_IMPORTED_MODULE_7__","wmsFormat_","_inherits","getAttributes","attributes","setAttributes","updateGeometryNameFromAttributes_","combinableWithDataSourceForWFS","dataSource","combinableForWFS","haveTheSameActiveDimensions","combinableWithDataSourceForWMS","combinableForWMS","isAnyOGCLayerInRange","res","queryableOnly","arguments","getInRangeOGCLayerNames","layerNames","_iterator2","_isArray2","_i2","_ref2","maxRes","minRes","getOGCLayerNames","_iterator3","_isArray3","_i3","_ref3","getFiltrableOGCLayerName","_iterator4","_isArray4","_i4","_ref4","attribute","ngeo_format_AttributeType_js__WEBPACK_IMPORTED_MODULE_3__","share","myActive","activeDimensions","itsActive","time","range","lower","upper","end","start","config","timeRangeValue","_iterator5","_isArray5","_i5","_ref5","ngeo_datasource_DataSource_js__WEBPACK_IMPORTED_MODULE_1__","guessServiceTypeByUrl","test","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BG_LAYER","EXTERNAL_DATASOURCES_NAMES","EXTERNAL_DATASOURCES_URLS","FEATURES","MAP_CROSSHAIR","MAP_TOOLTIP","MAP_X","MAP_Y","MAP_Z","TREE_GROUPS","WFS_LAYER","WFS_NGROUPS","WFS_SHOW_FEATURES","ol_style_Text_js__WEBPACK_IMPORTED_MODULE_24__","$filter","$filter_","decimals_","precision_","numberFormat_","unitPrefixFormat_","ngeoNumberCoordinates_","pointFilterFn_","pointFilterArgs_","filterElements","split","filterName","assertFunction","projection_","download_","setProjection","projection","setStyle","feature","opt_select","styles","getStyle","supportsVertex_","getVertexStyle","unshift","getHaloStyle_","style","getType","ngeo_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__","getLineStringStyle_","getPointStyle_","getPolygonStyle_","getTextStyle_","constructor","strokeWidth","getStrokeProperty","showLabel","getShowLabelProperty","showMeasure","getShowMeasureProperty","color","getRGBAColorProperty","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_23__","stroke","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_22__","width","textLabelValues","getMeasure","getNameProperty","textLabelValue","text","createTextStyle_","size","getSizeProperty","image","ol_style_Circle_js__WEBPACK_IMPORTED_MODULE_19__","radius","fill","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_20__","offsetY","font_size","optNumber","attrib","assertNumber","getNumber","opacity","getOpacityProperty","fillColor","azimut","ngeo_format_FeatureProperties_js__WEBPACK_IMPORTED_MODULE_3__","line","getRadiusLine","ngeo_interaction_Measure_js__WEBPACK_IMPORTED_MODULE_5__","getFormattedLength","geometry","angle","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_14__","getLastCoordinate","offsetX","Math","cos","PI","sin","exceedLength","getAngleProperty","createEditingStyles","white","blue","geom","getGeometry","zIndex","Infinity","opt_incGeomFunc","incGeomFunc","ol_style_RegularShape_js__WEBPACK_IMPORTED_MODULE_21__","points","innerMultiCoordinates","multiCoordinates","coordinates","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_11__","getCoordinates","ol_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_12__","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_15__","ol_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_16__","concat","ol_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_13__","supported","ol_array_js__WEBPACK_IMPORTED_MODULE_7__","haloSize","getFilteredFeatureValues","properties","getProperties","getGeometryName","getColorProperty","assertString","ol_color_js__WEBPACK_IMPORTED_MODULE_8__","assertBoolean","export","features","formatType","FormatType","GPX","exportGPX","KML","exportKML","ol_format_GPX_js__WEBPACK_IMPORTED_MODULE_17__","export_","ol_format_KML_js__WEBPACK_IMPORTED_MODULE_18__","fileName","opt_mimeType","mimeType","clones","clone","ol_Feature_js__WEBPACK_IMPORTED_MODULE_10__","writeOptions","dataProjection","featureProjection","writeFeatures","rotation","font","measure","ngeo_interaction_MeasureAzimut_js__WEBPACK_IMPORTED_MODULE_6__","getFormattedAzimutRadius","getFormattedArea","getFormattedPoint","args","panMapToFeature","opt_panDuration","panDuration","getSize","assertArray","view","getView","extent","calculateExtent","intersectsExtent","mapCenter","getCenter","featureCenter","getCoordinateAt","getInteriorPoint","ol_extent_js__WEBPACK_IMPORTED_MODULE_9__","getExtent","animate","center","duration","y","endPoint","getNonSpatialProperties","nonSpatialProperties","clearNonSpatialProperties","ngeo_download_service_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_misc_filters_js__WEBPACK_IMPORTED_MODULE_1__","toolContext","activePropertyName","getActive","setActive","newVal","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_6__","multiGeom","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_5__","ol_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_2__","appendPoint","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_1__","ol_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_3__","appendLineString","ol_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_4__","appendPolygon","navigator","userAgent","indexOf","hex","rgb","g","b","Error","colorZeroPadding","toString","queryString","queryData","substring","pair","indexOfEquals","decodeURIComponent","queryItem","encodeURIComponent","event","ol_events_condition_js__WEBPACK_IMPORTED_MODULE_0__","showMessage","show","getMessageObjects","ERROR","info","INFORMATION","success","SUCCESS","warn","WARNING","opt_type","msgObjects","msgObject","defaultType","msg","ol_events_Event_js__WEBPACK_IMPORTED_MODULE_1__","detail","ol_index_js__WEBPACK_IMPORTED_MODULE_0__","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_6__","featureUidToGroupIndex_","groups_","source_","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_5__","useSpatialIndex","layer_","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_3__","source","styleFunction_","updateWhileAnimating","updateWhileInteracting","addFeature","groupIndex","featureUid","removeFeature","clear","ol_obj_js__WEBPACK_IMPORTED_MODULE_4__","getLayer","getFeatureOverlay","styleFunction","ngeo_map_FeatureOverlay_js__WEBPACK_IMPORTED_MODULE_1__","init","setMap","defaultFunction","resolution","ngeo_format_AttributeType_js__WEBPACK_IMPORTED_MODULE_1__","_ngeoRuleRule","featureProperties","feature_","ol_Feature_js__WEBPACK_IMPORTED_MODULE_4__","format_","ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_5__","updatingExpression_","updatingGeometry_","geometryChangeListenerKey_","ol_events_js__WEBPACK_IMPORTED_MODULE_3__","handleFeatureGeometryChange_","setGeometryFromExpression_","registerGeometryChange_","writeGeometry","handleGeometryChange_","evt","assertInstanceof","target","ol_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_6__","readGeometry","setGeometry","ngeo_rule_Rule_js__WEBPACK_IMPORTED_MODULE_2__","ol_uri_js__WEBPACK_IMPORTED_MODULE_10__","ngeoTilesPreloadingLimit","tilesPreloadingLimit_","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","LAYERS","olServerType","replace","ol_source_ImageWMS_js__WEBPACK_IMPORTED_MODULE_7__","serverType","crossOrigin","updateParams","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_4__","createBasicWMSLayerFromDataSource","setVisible","visible","id","capabilitiesURL","layerName","opt_matrixSet","opt_dimensions","parser","ol_format_WMTSCapabilities_js__WEBPACK_IMPORTED_MODULE_2__","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_5__","preload","read","ol_source_WMTS_js__WEBPACK_IMPORTED_MODULE_9__","ol_obj_js__WEBPACK_IMPORTED_MODULE_6__","updateDimensions","setSource","ol_array_js__WEBPACK_IMPORTED_MODULE_1__","elt","index","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_3__","setLayers","getGroupFromMap","groupName","getLayerGroup","getLayers","getArray","existingGroup","addLayer","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","opt_legendWidth","opt_legendHeight","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","isLayerVisible","getVisible","currentResolution","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","getSource","ol_source_TileWMS_js__WEBPACK_IMPORTED_MODULE_8__","getParams","random","setZIndexToFirstLevelChildren","element","ZIndex","innerLayer","setZIndex","updateWMSLayerState","names","getQuerySourceIds","ol_layer_Layer_js__WEBPACK_IMPORTED_MODULE_5__","$scope","$rootScope","$attrs","isRoot","nodeExpr","rootScope_","state_","$watch","oldVal","$eval","mapExpr","parent","$parent","$on","uid","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","treeCtrl","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_4__","dataSource_","ngeo_misc_decorate_js__WEBPACK_IMPORTED_MODULE_1__","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","getState","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","getFirstParentTree","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","val","removeLayer","getDataSource","setDataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","traverseDepthFirst","visitor","controller","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_13__","ol_interaction_Interaction_js__WEBPACK_IMPORTED_MODULE_8__","handleEvent","handleEvent_","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","sketchFeature","continueMsg","decimals","precision","displayHelpTooltip_","displayHelpTooltip","startMsg","document","createElement","textContent","changeEventKey_","postcomposeEventKey_","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_11__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_12__","vectorLayer_","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_9__","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_10__","drawInteraction_","createDrawInteraction","sketchStyle","shouldHandleDrawInteractionActiveChange_","ol_events_js__WEBPACK_IMPORTED_MODULE_7__","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","updateState_","polygon","transform","abs","ol_sphere_js__WEBPACK_IMPORTED_MODULE_6__","getFormattedCircleArea","circle","pow","getRadius","lineString","c1","ol_proj_js__WEBPACK_IMPORTED_MODULE_4__","c2","point","opt_template","dragging","helpMsg","ol_dom_js__WEBPACK_IMPORTED_MODULE_3__","appendChild","setPosition","coordinate","getDrawInteraction","prevMap","getMap","removeInteraction","addInteraction","createMeasureTooltip_","handleMeasure","coord","innerHTML","classList","add","setOffset","ngeo_CustomEvent_js__WEBPACK_IMPORTED_MODULE_1__","unlistenerEvent_","createHelpTooltip_","removeHelpTooltip_","ol_Overlay_js__WEBPACK_IMPORTED_MODULE_5__","offset","positioning","addOverlay","removeOverlay","parentNode","removeChild","removeMeasureTooltip_","stopEvent","getTooltipElement","ol_string_js__WEBPACK_IMPORTED_MODULE_1__","Scalify","numberFilter","filterFn","scale","Number","$locale","formats","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","sign","nb_decimal","floor","log","factor","round","decimal","unit","str_number","groups","str_unit","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","divisor","prefix","index_max","postfix","space","NumberCoordinates","opt_fractionDigits","template","fractionDigits","parseInt","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","ol_math_js__WEBPACK_IMPORTED_MODULE_0__","dms","charAt","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","Duration","TimeUnits","freeze","SECONDS","MINUTES","HOURS","DAYS","pluralize","amount","formattedUnit","getPlural","output","remainder","ngeoDataSources","ngeoDataSourcesHelper","ngeoQuerent","ngeoQueryResult","dataSources_","ngeoDataSourcesHelper_","ngeoQuerent_","result_","limit_","limit","queryCountFirst_","queryCountFirst","tolerancePx_","tolerance","dataSourceNames_","$inject","issue","queryableDataSources","dataSources","getQueryableDataSources","tolerancePx","wfsCount","pending","handleResult_","total","sources","queried","tooManyResults","totalFeatureCount","_loop","idStr","querentResultItem","tooManyFeatures","typeSeparatedFeatures","filteredProperties","alias","unset","setProperties","featuresByType","ngeo_datasource_DataSources_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_datasource_Helper_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_query_Querent_js__WEBPACK_IMPORTED_MODULE_1__","ol_obj_js__WEBPACK_IMPORTED_MODULE_9__","$timeout","ngeoNotification","gmfThemes","ngeoStateManager","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","gmfThemes_","root","rootCtrl","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","ngeoStateManager_","ogcServers_","ol_events_js__WEBPACK_IMPORTED_MODULE_8__","handleThemesChange_","refreshFirstLevelGroups_","setFirstLevelGroups","firstLevelGroups","deleteParam","gmf_index_js__WEBPACK_IMPORTED_MODULE_0__","PermalinkParam","addFirstLevelGroups","opt_add","opt_silent","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","treeGroupsParam","updateState","cleanParams","alreadyAdded","groupID","rootChild","grp","cancel","addGroupByName","_this4","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_1__","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_3__","removeGroup","removeAll","cloneGroupNode_","toggleNodeCheck_","_this6","childNode","isChecked","notify","ngeo_message_Message_js__WEBPACK_IMPORTED_MODULE_4__","correspondingTreeCtrl","getOgcServer","mixed","goog_asserts_js__WEBPACK_IMPORTED_MODULE_2__","firstLevelGroupCtrl","gmfGroup","_this7","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this8","isExpanded","isLegendExpanded","nodeElement","$","hasClass","legendElement","is","_this9","ngeo_message_Notification_js__WEBPACK_IMPORTED_MODULE_5__","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_6__","ngeo_misc_Time_js__WEBPACK_IMPORTED_MODULE_1__","formatTimeValue","opt_useISOFormat","opt_toUTC","date","Date","utc","yearResolution","monthResolution","dayResolution","toISOString","formatWMSTimeParam","wmsTimeProperty","times","mode","ol_source_Tile_js__WEBPACK_IMPORTED_MODULE_6__","interaction","ol_interaction_Interaction_js__WEBPACK_IMPORTED_MODULE_1__","ol_layer_Base_js__WEBPACK_IMPORTED_MODULE_2__","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","on","olEvent","ol_layer_Layer_js__WEBPACK_IMPORTED_MODULE_4__","ol_source_Image_js__WEBPACK_IMPORTED_MODULE_5__","$applyAsync","factory_","func","wait","invokeApply","timeout","_len","_key","context","factory","ol_events_js__WEBPACK_IMPORTED_MODULE_0__","listenerKeys_","addListenerKey","initListenerKey_","clearListenerKey","ngeoWMSTime","ngeoWMSTime_","ogcServersObject_","ogcServersObject","sync_","createLayer","dataLayerGroup","opt_position","createGroup_","createLeafInAMixedGroup_","initGmfLayerInANotMixedGroup_","updateLayerState_","goog_asserts_js__WEBPACK_IMPORTED_MODULE_1__","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_5__","groupNode","isFirstLevelGroup","printNativeAngle","createLayerFromGroup_","position","insertAt","isOneParentNotMixed_","timeParam","getTimeParam_","hasActiveChildren","ctrl","updateLayerReferences_","createWMTSLayer_","checked","leafNode","firstLevelGroup","getFirstLevelGroupCtrl_","newLayer","ol_index_js__WEBPACK_IMPORTED_MODULE_4__","querySourceIds","disclaimer","disclaimers","wmsTime","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_2__","timeValues","getOptions","isOneParentNotMix","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_0__","ngeo_misc_WMSTime_js__WEBPACK_IMPORTED_MODULE_3__","NOT","OR","rule_Date","AttributeType","Rule","Text","Text_classCallCheck","Text_possibleConstructorReturn","Text_inherits","RuleHelper_exports","ngeoFeatureHelper","RuleHelper_classCallCheck","ngeoFeatureHelper_","createRulesFromAttributes","opt_isCustom","rules","createRuleFromAttribute","rule","Geometry","Select","choices","goog_asserts_prod","createRules","optionsList","createRule","selectOptions","cloneRule","extendRule","sourceRule","destRule","serializeRules","serializeRule","obj","createFilter","mainFilter","conditions","createFilterFromRule_","srsName","Condition","format_filter","incTime","timeFilter","createTimeFilterFromDataSource_","createFilterString","filterString","filterNode","WFS","XMLSerializer","serializeToString","opt_srsName","rot","rsot","rtot","spatialTypes","numericTypes","beginValue","endValue","moment","subtract","selectedChoices","selectedChoice","numericExpression","stringExpression","String","momentEnd","startValue","FeatureHelper","WMSTime","datasource_File","featuresCollection_","Collection","source_Vector","wrapX","Vector","DataSource","FileGroup","FileGroup_classCallCheck","FileGroup_possibleConstructorReturn","_ngeoDatasourceGroup","injector","unregister_","FileGroup_inherits","addDataSource","registerDataSource_","handleDataSourceVisibleChange_","oldValue","removeDataSource","unregisterDataSource_","Group","OGCGroup","OGCGroup_classCallCheck","OGCGroup_possibleConstructorReturn","url_","OGCGroup_inherits","OGCGroup_createClass","WMSGroup","WMSGroup_classCallCheck","WMSGroup_possibleConstructorReturn","_ngeoDatasourceOGCGro","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","WMSGroup_inherits","OGC","updateLayer_","unregister","WMSGroup_createClass","ExternalDataSourcesManager_exports","ngeoFile","ExternalDataSourcesManager_classCallCheck","injector_","q_","ngeoFile_","extDataSources_","files_","map_","fileGroup_","title","wmsGroupsCollection_","wmtsGroupsCollection_","wmtsCache_","events","handleDataSourcesRemove_","addWMSGroup_","wmsGroup","wmsGroupsCollection","removeWMSGroup_","remove","getWMSGroup","wmsGroups","addWMTSGroup_","wmtsGroup","wmtsGroupsCollection","removeWMTSGroup_","getWMTSGroup","wmtsGroups","isExternalDataSource","addLayer_","layerGroup","removeLayer_","createAndAddDataSourceFromWMSCapability","getId","req","includes","createAndAddDataSourceFromWMTSCapability","layerObj","handleWMTSDataSourceVisibleChange_","createAndAddDataSourceFromFile","file","getFileDataSource_","fileGroup","fit","rejections","content","readOptions","getProjection","isKml","readFeatures","isGpx","removeFileDataSource_","removeOGCDataSource_","ExternalDataSourcesManager_createClass","src","EXTERNALLAYERGROUP_NAME","ol","LayerHelper","File","DataSources","collection_","ol_Collection_js__WEBPACK_IMPORTED_MODULE_2__","handleDataSourcesAdd_","bindMap_","handleViewResolutionChange_","syncDataSourcesToResolution_","unbindMap_","ol_View_js__WEBPACK_IMPORTED_MODULE_4__","syncDataSourceToResolution_","supportsDynamicInRange","inRange","ol_style_Text_js__WEBPACK_IMPORTED_MODULE_36__","gmf_editing_EditFeature_js__WEBPACK_IMPORTED_MODULE_0__","gmf_editing_Snapping_js__WEBPACK_IMPORTED_MODULE_1__","gmf_editing_XSDAttributes_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_editing_attributesComponent_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_editing_createfeatureComponent_js__WEBPACK_IMPORTED_MODULE_9__","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_15__","ngeo_message_modalComponent_js__WEBPACK_IMPORTED_MODULE_17__","ngeo_misc_btnComponent_js__WEBPACK_IMPORTED_MODULE_18__","ngeo_misc_EventHelper_js__WEBPACK_IMPORTED_MODULE_20__","ngeo_misc_FeatureHelper_js__WEBPACK_IMPORTED_MODULE_21__","ngeo_misc_ToolActivateMgr_js__WEBPACK_IMPORTED_MODULE_23__","run","$templateCache","put","component_","scope","dirty","editableTreeCtrl","vectorLayer","bindToController","templateUrl","directive","Controller_","$element","gmfEditFeature","gmfSnapping","gmfXSDAttributes","ngeoEventHelper","ngeoToolActivateMgr","element_","scope_","timeout_","gmfEditFeature_","gmfSnapping_","gmfXSDAttributes_","ngeoEventHelper_","ngeoToolActivateMgr_","editableNode_","editableWMSLayer_","confirmDeferred_","unsavedModificationsModalShown","createActive","createToolActivate","ngeo_misc_ToolActivate_js__WEBPACK_IMPORTED_MODULE_22__","mapSelectActive","mapSelectToolActivate","handleFeatureChange_","featureId","interactions_","ol_Collection_js__WEBPACK_IMPORTED_MODULE_26__","modify_","modifyToolActivate","menu_","ngeo_Menu_js__WEBPACK_IMPORTED_MODULE_16__","actions","cls","translate_","rotate_","rotateToolActivate","translateToolActivate","geomType","showServerError","serverErrorMessage","serverErrorType","$onInit","lang","getCurrentLanguage","datetimepicker","setLocale","setDateFormatter","ngeo_misc_php_date_formatter_js__WEBPACK_IMPORTED_MODULE_5__","getFeaturesCollection","gmf_layertree_SyncLayertreeMap_js__WEBPACK_IMPORTED_MODULE_3__","goog_asserts_js__WEBPACK_IMPORTED_MODULE_4__","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_32__","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_33__","ol_interaction_Modify_js__WEBPACK_IMPORTED_MODULE_31__","deleteCondition","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_10__","ngeo_interaction_Rotate_js__WEBPACK_IMPORTED_MODULE_13__","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_35__","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_34__","ngeo_interaction_Translate_js__WEBPACK_IMPORTED_MODULE_14__","initializeInteractions_","ensureSnapInteractionsOnTop","handleDestroy_","ol_index_js__WEBPACK_IMPORTED_MODULE_24__","ol_events_js__WEBPACK_IMPORTED_MODULE_27__","handleFeatureAdd_","handleMapSelectActiveChange_","newValue","State","STOP_EDITING_PENDING","confirmCancel","STOP_EDITING_EXECUTE","DEACTIVATE_PENDING","DEACTIVATE_EXECUTE","IDLE","setAttributes_","toggle_","save","setId","dateFormatter","parseDate","jsonFormat","setMinutes","getMinutes","getTimezoneOffset","formatDate","updateFeature","insertFeatures","handleEditFeature_","close","checkForModifications_","scopeApply","$apply","continueWithoutSaving","delete","confirm","deleteFeature","submit","find","click","resp","ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_30__","mask","geomAttr","ngeo_format_XSDAttribute_js__WEBPACK_IMPORTED_MODULE_11__","getGeometryAttribute","ol_Feature_js__WEBPACK_IMPORTED_MODULE_29__","keys","createUid","otherUid","toolMgr","handleMenuActionClick_","handleTranslateEnd_","handleRotateEnd_","registerTool","unregisterTool","mapDiv","getViewport","assertElement","handleMapClick_","handleMapContextMenu_","pixel","forEachFeatureAtPixel","ret","ol_array_js__WEBPACK_IMPORTED_MODULE_25__","hitTolerance","buffer","ol_extent_js__WEBPACK_IMPORTED_MODULE_28__","getFeaturesInExtent","handleGetFeatures_","getEventPixel","getCoordinateFromPixel","ngeo_GeometryType_js__WEBPACK_IMPORTED_MODULE_12__","open","preventDefault","stopPropagation","_this10","ngeo_misc_decorate_js__WEBPACK_IMPORTED_MODULE_19__","registerInteractions_","_this11","unregisterInteractions_","_this12","newFeature","oldFeature","_this13","handleFeaturePropertyChange_","action","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_2__","gmfTreeManagerModeFlush","gmfTreeManager","$rootScope_","modeFlush","gmfTreeManager_","themeName_","addTheme","setThemeName","getThemeName","isLoading","$emit","EventType","THEME_NAME_SET","gmf_layertree_TreeManager_js__WEBPACK_IMPORTED_MODULE_0__","inRange_","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","ngeo_rule_Rule_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_format_AttributeType_js__WEBPACK_IMPORTED_MODULE_0__","choices_","tool","opt_defaultActivate","entries","unlisten","deactivateTools_","activateDefault_","defaultTool","ENABLE_ASSERTS","defaultTools","entry","unregisterGroup","activateTool","deactivateTool","hasActiveTool","btnGroupComponent_","$parse","restrict","link","attrs","assign","buttons_","buttonModel","BtnGroupController","activate","expressionFn","addButton","btnComponent_","require","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","$setViewValue","$viewValue","$render","toggleClass","ngeo_statemanager_Location_js__WEBPACK_IMPORTED_MODULE_1__","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","keyRegexp","match","localStorage","getParam","err","getInitialValue","getInitialStringValue","getInitialNumberValue","parseFloat","getInitialBooleanValue","RegExp","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_0__","authenticationBaseUrl","gmfUser","_olEventsEventTarget","baseUrl_","user_","noReloadRole_","load_","RouteSuffix","IS_LOGGED_IN","handleLogin_","changePassword","oldPwd","newPwd","confPwd","CHANGE_PASSWORD","post","param","oldPassword","newPassword","confirmNewPassword","headers","Content-Type","is_password_changed","$digest","login","pwd","LOGIN","password","logout","noReload","LOGOUT","resetUser_","resetPassword","RESET_PASSWORD","successFn","getFunctionalities","functionalities","getRoleId","role_id","checkingLoginStatus","respData","setUser_","ngeo_CustomEvent_js__WEBPACK_IMPORTED_MODULE_0__","user","emitEvent","username","role_name","createDate","defaultValue","getTime","minDate","minValue","maxDate","maxValue","minDefaultDate","minDefValue","maxDefaultDate","maxDefValue","defaultValues","getUTCDate","localDate","getUTCFullYear","getUTCMonth","DrawAzimut_exports","Pointer","handleDownEvent","handleDownEvent_","handleUpEvent","handleUpEvent_","downPx_","started_","sketchFeature_","sketchPoint_","squaredClickTolerance_","sketchLayer_","common","getDefaultDrawStyleFunction","downPx","clickPx","dx","dy","pass","handlePointerMove_","finishDrawing_","startDrawing_","mapBrowserEvent","modifyDrawing_","createOrUpdateSketchPoint_","Feature","Point","updateSketchFeatures_","sketchPointGeom","setCoordinates","sketchFeatures","addFeatures","LineString","Circle","GeometryCollection","CustomEvent","geometries","getGeometriesArray","last","setRadius","getLength","abortDrawing_","shouldStopEvent","functions","DrawAzimut","MeasureAzimut_exports","unitPrefixFormat","numberFormat","Measure","getGeometries","Projection","formatLength","formatAzimut","getFormattedAzimut","getAzimut","coords","rad","acos","sqrt","popupComponent_exports","directive_","ngeoPopupTemplateUrl","addClass","css","popupComponent","Popup_exports","$compile","$new","autoDestroy_","sce_","body","append","getOpen","setOpen","$destroy","setTitle","trustedTitle","setContent","opt_trusted","setUrl","setWidth","setHeight","height","setSize","setAutoDestroy","autoDestroy","Factory","manager","manager_","features_","index_","setFeatures","handleFeatureRemove_","ol_format_XML_js__WEBPACK_IMPORTED_MODULE_4__","ol_index_js__WEBPACK_IMPORTED_MODULE_3__","readFromDocument","doc","nodeType","Node","DOCUMENT_NODE","firstChild","nextSibling","ELEMENT_NODE","readFromNode","localName","elements","getElementsByTagName","readFromElementNode_","getAttribute","nillable","required","ngeo_format_Attribute_js__WEBPACK_IMPORTED_MODULE_1__","setGeometryType","setAttributeByXsdType_","enumerations","ngeo_format_AttributeType_js__WEBPACK_IMPORTED_MODULE_2__","restrictions","restrictionNode","maxLengths","maxLength","numType","NumberType","FLOAT","INTEGER","geomAttribute","dataSourcesCollection_","ol_Collection_js__WEBPACK_IMPORTED_MODULE_1__","title_","getDataSourceState","VisibilityState","ON","OFF","toggleVisibilityState","visibleToSet","visibilityState","INDETERMINATE","WFSAttribute","complexTypeElements","readFromComplexTypeElement_","Attribute","XSDAttribute","Helper_exports","Helper_classCallCheck","cache_","getDataSourceAttributes","wfsDescribeFeatureTypeDefer","wfsDescribeFeatureType","ogcLayerName","complexType","complexContent","Querent","WFSDescribeFeatureType_exports","XML","xml","PARSERS_","readElement_","objectStack","len","pop","readComplexType_","COMPLEX_TYPE_PARSERS_","readComplexContent_","COMPLEX_CONTENT_PARSERS_","readExtension_","EXTENSION_PARSERS_","readSequence_","SEQUENCE_PARSERS_","NAMESPACE_URIS_","extension","sequence","WFSDescribeFeatureType","Querent_exports","ngeoRuleHelper","http_","ngeoRuleHelper_","requestCancelers_","wmsGetCapabilitiesPromises_","wmtsGetCapabilitiesPromises_","cancelStillRunningRequests_","combinedWFSDataSources","getCombinableWFSDataSources_","wfs","issueCombinedWFS_","combinedWMSDataSources","getCombinableWMSDataSources_","wms","issueCombinedWMS_","handleCombinedQueryResult_","isDataSourceQueryable_","supportsAttributes","ogcLayerNames","uri","TYPENAME","wmsFindLayerCapability","layerCapabilities","layerCapability","wmsGetCapabilities","baseUrl","opt_cache","WMSCapabilities","wmtsFindLayerCapability","wmtsGetCapabilities","WMTSCapabilities","combinedHash","hash","dataSourceIdStr","dataSourceId","handleQueryResult_","readAndTypeFeatures_","setUniqueIds_","featureTypes","getSetOlFormatTypes_","opt_types","types","setFeatureType","getFeatureType","combinedDataSources","maxFeatures","getCode","bbox","xmlSerializer","getFeatureCommonOptions","_iterator7","_isArray7","_i7","_ref7","featurePrefix","outputFormat","getFeatureDefer","countPromise","getCountOptions","resultType","featureCountXml","writeGetFeature","featureCountRequest","canceler","registerCanceler_","readFeatureCollectionMetadata","numberOfFeatures","getFeatureOptions","featureRequestXml","featureRequest","_iterator6","_isArray6","_i6","_ref6","FEATURE_COUNT","projCode","_iterator8","_isArray8","_i8","_ref8","INFO_FORMAT","activeDimensionsSet","filtrableLayerName","_iterator9","_isArray9","_i9","_ref9","filterParamValue","filterParamValues","wmsSource","ImageWMS","wmsGetFeatureInfoUrl","getGetFeatureInfoUrl","combinableDataSources","notCombinableDataSources","_iterator10","_isArray10","_i10","_ref10","combined","_iterator11","_isArray11","_i11","_ref11","combinableDataSource","_iterator12","_isArray12","_i12","_ref12","_iterator13","_isArray13","_i13","_ref13","ds","_iterator14","_isArray14","_i14","_ref14","CombinedDataSources","RuleHelper","ol_interaction_Snap_js__WEBPACK_IMPORTED_MODULE_8__","mapViewChangePromise_","treeCtrlsUnregister_","unregisterAllTreeCtrl_","ol_events_js__WEBPACK_IMPORTED_MODULE_5__","$watchCollection","registerTreeCtrl_","handleMapMoveEnd_","wfsConfig","getWFSConfig_","stateWatcherUnregister","handleTreeCtrlStateChange_","ol_Collection_js__WEBPACK_IMPORTED_MODULE_6__","requestDeferred","deactivateItem_","childLayers","ogcServerName","wfsSupport","urlWfs","activateItem_","edge","pixelTolerance","vertex","loadItemFeatures_","loadAllItems_","ol_format_WFS_js__WEBPACK_IMPORTED_MODULE_7__","extend","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_11__","featureListenerKeys_","keyPressListenerKey_","myFeatures_","vectorSource_","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_10__","centerFeatures_","ol_interaction_Translate_js__WEBPACK_IMPORTED_MODULE_9__","ol_index_js__WEBPACK_IMPORTED_MODULE_1__","ol_events_js__WEBPACK_IMPORTED_MODULE_4__","handleKeyUp_","setState_","addFeature_","handleFeaturesAdd_","handleFeaturesRemove_","getTargetElement","cursor","removeFeature_","ol_Feature_js__WEBPACK_IMPORTED_MODULE_3__","ol_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_5__","getGeometryCenterPoint_","centerFeature","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_8__","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_6__","ol_extent_js__WEBPACK_IMPORTED_MODULE_2__","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_7__","keyCode","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_13__","modified_","changingFeature_","pixelTolerance_","coordinate_","centerCoordinate_","overlay_","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_12__","ngeo_interaction_common_js__WEBPACK_IMPORTED_MODULE_1__","getDefaultModifyStyleFunction","ol_interaction_Pointer_js__WEBPACK_IMPORTED_MODULE_7__","handleDown_","handleDragEvent","handleDrag_","handleUp_","ol_events_js__WEBPACK_IMPORTED_MODULE_6__","ol_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_8__","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_9__","getCenterCoordinate_","ol_Feature_js__WEBPACK_IMPORTED_MODULE_5__","willModifyFeatures_","ngeo_CustomEvent_js__WEBPACK_IMPORTED_MODULE_2__","f","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_10__","getFlatMidpoint","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_11__","getFlatInteriorPoint","ol_extent_js__WEBPACK_IMPORTED_MODULE_4__","oldX","oldY","centerX","centerY","dx1","dy1","dx0","dy0","a0","atan2","rotate","ol_Collection_js__WEBPACK_IMPORTED_MODULE_0__","ol_OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_5__","menuOptions","opt_overlayOptions","TOP_LEFT","clickOutListenerKey_","contentEl","class","autoClose_","autoClose","headerEl","appendTo","actionsEl","actions_","data-name","prepend","ol_Overlay_js__WEBPACK_IMPORTED_MODULE_4__","handleActionClick_","handleMapPointerMove_","documentElement","handleClickOut_","getElement","closest","originalEvent","Element","contains","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_1__","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","isNaN","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","$window","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","file_saver__WEBPACK_IMPORTED_MODULE_1__","opt_fileType","fileType","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_0__","isSafari","blob","Blob","ngModel","transclude","bindings","resizable","closable","component","_class","$element_","$scope_","modal_","attr","dialog","draggable","modal","e","$onDestroy","ngeo_message_Message_js__WEBPACK_IMPORTED_MODULE_2__","container","container_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","el","html","delay","_compare","str1","str2","toLowerCase","_lpad","char","chr","_indexOf","arr","defaultSettings","dateSettings","days","daysShort","months","monthsShort","meridiem","ordinal","suffixes","2","3","separators","validParts","intParts","tzParts","tzClip","DateFormatter","_extend","_typeof","getMonth","vDate","vFormat","year","month","day","hour","min","sec","vSettings","vDateFlag","vTimeFlag","vDatePart","iDatePart","vMonth","vMeriIndex","vMeriOffset","mer","vFormatParts","vDateParts","guessDate","vDateStr","vParts","iPart","iSec","vYear","vDigit","substr","setMonth","setDate","getFullYear","setFullYear","setHours","setSeconds","parseFormat","vChar","fmt","self","backslash","doFormat","t","D","w","getDate","N","getDay","z","a","Y","W","F","M","L","A","G","B","H","getUTCHours","getUTCMinutes","getUTCSeconds","getHours","h","getSeconds","u","getMilliseconds","exec","I","UTC","O","tzo","P","T","Z","U","str","gmfShortenerCreateUrl","gmfShortenerCreateUrl_","getShortUrl","postShortUrl_","short_url","status","sendShortUrl","shortUrl","email","URL_MAX_LEN","URL_PATH_MAX_LEN","ol_interaction_Draw_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_interaction_Measure_js__WEBPACK_IMPORTED_MODULE_1__","br","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_3__","proj","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_3__","component_exports","Service","Notification","modalComponent","gmfAuthenticationTemplateUrl","gmfAuthenticationTemplateUrl_","allowPasswordReset","allowPasswordChange","passwordValidator","forcePasswordChange","AuthenticationController_","gmfAuthenticationService","gmfAuthenticationService_","notification_","changingPassword","changePasswordModalShown","resetPasswordModalShown","loginVal","pwdVal","oldPwdVal","newPwdVal","newPwdConfVal","setError_","isPasswordValid","notValidMessage","changePasswordReset","resetError_","resetPasswordSuccessFn","userMustChangeItsPassword","Message","authentication_module","BackgroundLayerMgr_exports","Observable","mapUids_","BACKGROUNDLAYERGROUP_NAME","mapUid","previous","bgGroup","setAt","removeAt","current","getOpacityBgLayer","setOpacityBgLayer","baseBgLayer","Layer","hasUpdates","updatedDimensions","TileWMS","BackgroundLayerMgr","backgroundlayerselector_component_exports","Themes","gmfBackgroundlayerselectorTemplateUrl","opacityOptions","select","ngeoBackgroundLayerMgr","bgLayer","bgLayers","opacityLayer","backgroundLayerMgr_","indexOpa","findIndex","getSetBgLayerOpacity","setLayer","backgroundlayerselector_component","gmfEnumerateAttribute","gmfEnumerateAttribute_","prepareFiltrableDataSource","prepareFiltrableDataSourceDefer","enumAttributes","enumeratedAttributes","getAttributeValues","choice","Helper","EnumerateAttribute","datasource_Helper","datasource_OGC","OGC_classCallCheck","_ngeoDatasourceOGC","gmfLayer_","OGC_createClass","WFSAliases_exports","WFSAliases_classCallCheck","describe","WFSAliases","Manager_exports","gmfWFSAliases","Manager_classCallCheck","ngeoBackgroundLayerMgr_","ngeoDataSources_","gmfWFSAliases_","dataSourcesCache_","treeCtrlCache_","handleNgeoBackgroundLayerChange_","setDatasourceMap","setDimensions","clearDataSources_","clearTreeCtrlCache_","promiseThemes","createDataSource_","promiseBgLayers","backgroundLayers","backgroundLayer","handleTreeManagerRootChildrenChange_","newTreeCtrls","treeCtrls","newTreeCtrl","getTreeCtrlCacheItem_","addTreeCtrlToCache_","removeTreeCtrlCacheItem_","ol_obj","meta","queryLayers","wmsLayers","childLayer","isSingleTile","identifierAttributeField","timeAttribute","filterRulesWatcherUnregister","hasFilters","isVisible","handleDataSourceFilterRulesChange_","timeLowerValueWatcherUnregister","timeUpperValueWatcherUnregister","wmsLayer","handleDataSourceTimeValueChange_","SyncLayertreeMap","Image","treeDataSource","siblingDataSourceIds","_source$updateParams","Tile","layersList","previousBackgroundLayer","currentBackgroundLayer","TreeManager","Manager","datasource_module","DataSourceBeingFiltered","ExternalDataSourcesManager","Disclaimer_exports","ngeoCreatePopup","createPopup_","messages_","closeMessage_","getMessageUid_","popup","button","Popup","Disclaimer","disclaimer_component_exports","EventHelper","ngeoDisclaimer","external","visibility","msgs_","disclaimer_","eventHelper_","dataLayerGroup_","DATALAYERGROUP_NAME","registerLayer_","handleLayersAdd_","Base","handleLayersRemove_","unregisterLayer_","layerUid","showDisclaimerMessage_","closeDisclaimerMessage_","disclaimer_component","SavedFilters_exports","SavedFilters_classCallCheck","currentDataSourceId_","currentDataSourceItems_","localStorageKey_","items_","items","rePopulateCurrentDataSourceItems_","loadItemsFromLocalStorage_","JSON","parse","indexOfItem","idx","saveItemsInLocalStorage_","stringify","SavedFilters_createClass","Item","customRules","directedRules","SavedFilters","ruleComponent_exports","draw_component","FeatureOverlay","datepickerComponent","ToolActivateMgr","ngeoRuleTemplateUrl","RuleController_","_operators","_operatorsShortFormat","ruleComponent_classCallCheck","featureOverlay","toolGroup","operatorType","spatialOperatorType","temporalOperatorType","operatorsShortFormat","timeRangeMode","widget","createDate_","createWeekAgoDate_","interval","timeValueMode","toolActivate_","unlisteners_","drawActive","drawToolActivate","ToolActivate","drawnFeatures","selectedFeatures","Modify","Rotate","Style","Fill","Translate","handleActiveChange_","supportedTypes","GeometryType","hasExpression","isActive","editToolIsActive","toggle","toggleChoiceSelection","onDateSelected","onDateRangeSelected","opt_timeDelta","setTime","timeToDate","toLocaleDateString","oldActive","ruleFeature","cloneFeature","decorate","drawnFeature","geom_Geometry","getRuleGeometryType","removeMenu_","Menu","ruleComponent","filter_component_exports","MapQuerent","ngeoFilterTemplateUrl","aRuleIsActive","datasource","FilterController_","ngeoMapQuerent","component_classCallCheck","ngeoMapQuerent_","geometryAttributes","otherAttributes","ruleUnlisteners_","handleARuleIsActiveChange_","registerRule_","hasARule","getRulesWithValue_","getData","createAndAddCustomRule","setCondition","removeCustomRule","unregisterRule_","handleRuleActiveChange_","unlistener","filter_component","filterselectorComponent_exports","FeatureOverlayMgr","gmfFilterselectorTemplateUrl","gmfDataSourceBeingFiltered","gmfDataSourcesHelper","gmfSavedFilters","ngeoFeatureOverlayMgr","filterselectorComponent_classCallCheck","handleSelectedDataSourceChange_","gmfDataSourcesHelper_","currentDataSourceItems","saveFilterManageModalShown","gmfUser_","handleGmfUserFunctionalitiesChange_","filtrableDataSources","filtrableLayerNodeNames_","gmfDataSources_","readyDataSource","ruleCache_","saveFilterSaveModalShown","saveFilterName","enableDataSourceRegistration_","handleEnableDataSourceRegistrationChange_","defaultFiltrableDataSourceName_","toggleDataSourceRegistration_","usrFunc","newDataSourceRegistration","register","isDataSourceFiltrable_","opt_notify","gettext","msgs","p1","p2","p3","currentDataSourceId","getRuleCacheItem_","setRuleCacheItem_","directedFilterAttributes","directedAttributes","saveFilterShowModal","saveFilterSave","alreadyExist","saveFilterLoadItem","filterItem","cacheItem","saveFilterManage","saveFilterRemoveItem","RuleCache","RuleCacheItem","filterselectorComponent","filters_module","timeSliderComponent_exports","pre","computeDates_","sliderUi","sDate","eDate","wmstime","getClosestValue_","dates","sliderOptions","isModeRange","timeValueList","getTimeValueList_","initialOptions_","max","endDate","nextDate","timestamp","leftIndex","rightIndex","leftDistance","rightDistance","targetDate","startDate","bestDate","bestDistance","distance","getLocalizedDate","timeSliderComponent","layertree_module","layertree_component","datasourceGroupTreeComponent","permalink_module","Permalink","ShareService","shareComponent","map_component_exports","prop","Map","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","map_component","scaleselector_exports","ngeoScaleselectorTemplateUrl","scaleselector_ScaleselectorController","ScaleselectorController","scalesExpr","scales","zoomLevels","newLength","sort","optionsExpr","getOptions_","resolutionChangeKey_","currentScale","currentZoom","getZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","zoom","changeZoom","setZoom","handleResolutionChange_","scaleselector","map_module","recenter","resizemap","src_map_component_exports","Snapping","manageResize","gmfPermalink","ngeoFeatureOverlayMgr_","gmfPermalink_","src_map_component","mousepositionComponent_exports","misc_filters","gmfMapMousepositionTemplateUrl","projections","control_","initOlControl_","removeControl","MousePosition","className","coordinateFormat","filterAndArgs","undefinedHTML","addControl","code","mousepositionComponent","src_map_module","Config_exports","columnDefs","selectedRows","getRowUid","isRowSelected","getSelectedCount","getSelectedRows","row","selectRow","toggleRow","selectAll","unselectAll","rowId","invertSelection","Config","grid_component_exports","ngeoGridTemplateUrl","configuration","sortedBy","sortAscending","floatTheadConfig","scrollContainer","$table","columnName","asc","attributes1","attributes2","clickRow","shiftKey","isShiftKeyOnly_","platformModifierKey","isPlatformModifierKeyOnly_","clickRow_","selectRange_","isSelected","targetUid","posClickedRow","posSelectedRows","currentRow","posClosestRow","currentPos","currentDistance","rangeEnd","preventTextSelection","altKey","metaKey","ctrlKey","grid_component","gridComponent_exports","Csv","gmfDisplayquerygridTemplateUrl","featuresStyleFn","selectedFeatureStyleFn","getMapFn","removeEmptyColumnsFn","maxResultsFn","maxRecenterZoomFn","mergeTabs","ngeoCsvDownload","queryOptions","ngeoCsvDownload_","maxResults","gridSources","loadedGridSources","selectedTab","removeEmptyColumns_","maxRecenterZoom","featuresForSources_","highlightFeatures_","filename_","newQueryResult","oldQueryResult","updateData_","unregisterSelectWatcher_","featuresOverlay","featuresStyle","highlightFeaturesOverlay","highlightFeatureStyle","Stroke","mapFn","getGridSources","sourceLabel","hasOneWithTooManyResults_","getMergedSources_","makeGrid_","escapeValue","collectData_","firstSourceId","selectTab","isInteger","toEscape","gridSource","allSources","mergedSources","mergedSourceId","getMergedSource_","mergeSourceId","currentMergeSourceId","mergeSource","allProperties","featureGeometriesNames","featuresForSource","featureGeometryName","cleanProperties_","removeEmptyColumnsFn_","keysToKeep","keyToRemove","gridConfig","getGridConfiguration_","ol_uid","column","newSelected","oldSelectedRows","onSelectionChanged_","updateFeatures_","reflowGrid_","activePane","removeClass","getActiveGridSource","isOneSelected","getSelectedRowCount","zoomToSelection","ol_extent","maxZoom","downloadCsv","startDownload","gridComponent","swipe_exports","POINTER_EVENTS","mouse","move","touch","pointer","touches","changedTouches","clientX","clientY","getEvents","pointerTypes","eventType","pointerType","eventName","eventHandlers","totalX","totalY","startCoords","lastPos","makeSwipeDirective_","directiveName","direction","$verticalSwipe","MAX_HORIZONTAL_DISTANCE","MAX_HORIZONTAL_RATIO","MIN_VERTICAL_DISTANCE","swipeHandler","valid","isDefined","deltaY","deltaX","validSwipe","triggerHandler","$event","swipe","windowComponent_exports","gmfDisplayquerywindowTemplateUrl","$animateProvider","classNameFilter","draggableContainment","defaultCollapsedFn","desktop","showUnqueriedLayers","collapsed","showUnqueriedLayers_","sourcesFilter","selectedSource","currentResult","isNext","updateQueryResult_","containment","minHeight","minWidth","setCurrentResult_","collectFeatures_","highlightCurrentFeature_","setHighlight","hasChanged","lastFeature","getResultLength","animate_","queryResult","isFirst","isLast","getFeatureValues","opt_lastFeature","setSelectedSource","windowComponent","extraModule","search_module","search_component","FulltextSearch","selectorComponent_exports","theme_Manager","gmfThemeSelectorTemplateUrl","gmfThemeManager","setThemes_","setTheme","selectorComponent","theme_module","displaywindowComponent_exports","ngeoMessageDisplaywindowTemplateUrl","displaywindowComponent_classCallCheck","clearOnClose","contentTemplate","contentScope","compile_","handle","compiled","clear_","displaywindowComponent_createClass","trustAsResourceUrl","displaywindowComponent","controlComponent_exports","control","Control","controlComponent","filereaderComponent_exports","fileContent","changeEvent","fileReader","FileReader","onload","readAsText","files","filereaderComponent","getBrowserLanguage_exports","availableLanguages","nav","browserLanguages","languages","language","browserLanguage","systemLanguage","userLanguage","getBrowserLanguage","misc_extraModule","AutoProjection","btnComponent","debounce","sortableComponent","Time","mapQueryComponent_exports","elem","clickEventKey_","pointerMoveEventKey_","hit","forEachLayerAtPixel","sourceids","cursorHover","mapQueryComponent","WfsPermalink_WfsPermalinkService","ngeoWfsPermalinkOptions","maxFeatures_","wfsTypes_","wfsTypes","wfsType","defaultFeatureNS_","defaultFeatureNS","defaultFeaturePrefix_","defaultFeaturePrefix","pointRecenterZoom_","pointRecenterZoom","clearResult_","typeName","filters","createFilters_","filterGroups","issueRequest_","showFeatures","getExtent_","padding","resultSource","reduce","or_","filterGroup","filterDef","cond","equalTo","and_","joinFilters_","joinFn","combinedFilters","currentFilter","WfsPermalink","AbstractAppController_exports","permalink_","gmfAuthentication","updateHasEditableLayers_","userChange","roleId","open_panel","filterSelectorActive","previousThemeName","updateCurrentTheme_","searchDatasources","labelKey","groupValues","groupActions","srid","gmfDataSourcesManager","defaultDimensions","dim","leftNavVisible","rightNavVisible","queryFill","queryStroke","queryFeatureStyle","queryActive","queryAutoClear","printPanelActive","printActive","measurePointActive","measureLengthActive","drawFeatureActive","drawProfilePanelActive","stateManager","tmhDynamicLocale","defaultLang","langUrls","initLanguage","mapToolsGroup","queryToolActivate","measurePointActivate","measureLengthActivate","drawFeatureActivate","drawProfilePanelActivate","printPanelActivate","$root","setDefaultBackground_","updateCurrentBackgroundLayer_","skipPermalink","background","getBackgroundLayer","defaultBasemapArray","default_basemap","defaultBasemapLabel","gmfx","openIframePopup","opt_width","opt_height","opt_apply","displaywindowUrl","openPopup_","openTextPopup","displaywindowContent","displaywindowTitle","displaywindowOpen","displaywindowWidth","displaywindowHeight","cgxp","tools","openInfoWindow","displaywindowDraggableContainment","getLayerByLabels","labels","switchLanguage","setCurrentLanguage","loadRemote","urlLanguage","fallbackThemeName","defaultThemeNameFromFunctionalities","getLocationIcon","arrow","arrowWrapper","statemanager_module","tmhDynamicLocaleProvider","angularLocaleScript","localeLocationPattern","ModifyCircle_exports","handleDragEvent_","vertexFeature_","lastPixel_","rBush_","RBush","snappedToVertex_","dragSegments_","FeatureProperties","writeCircleGeometry_","handlePointerAtPixel_","removeFeatureSegmentData_","rBush","nodesToRemove","rings","segment","segmentData","insert","createOrUpdateVertexFeature_","vertexFeature","compareIndexes_","vertexExtent","segmentDataMatches","getInExtent","componentSegments","segmentDataMatch","Polygon","setGeometryCoordinates_","MeasureAzimut","MapBrowserPointerEvent","getInteracting","handlingDownUpSequence","pixelCoordinate","lowerLeft","upperRight","box","closestSegment","vertexPixel","getPixelFromCoordinate","pixel1","pixel2","squaredDist1","squaredDist2","dist","vertexSegments","ModifyCircle","ModifyRectangle_exports","vectorPoints_","params_","featureGeom","pointSource","corners","pointFeatures","cornerPoint","cornerFeature","corner","siblingX","siblingY","boxFeature","previousFeature","nextFeature","initializeParams_","origin","originPoint","originCoordinate","originPixel","siblingXPoint","siblingXCoordinate","siblingXPixel","vectorX","vectorXMagnitude","siblingYPoint","siblingYCoordinate","siblingYPixel","vectorY","vectorYMagnitude","destinationPixel","b2Pixel","calculateNewPixel_","b2Coordinate","c2Pixel","c2Coordinate","destination","vector","aVector","abScalarProduct","deltaVector","ModifyRectangle","Modify_exports","otherFeatures_","utils","circleFeatures_","rectangleFeatures_","Interaction","interactions","currentMap","getFeatureCollection_","isCircle","isRectangle","wmsCapabilityLayertreeComponent_exports","gmfWmscapabilitylayertreenodeTemplateUrl","gmfExternalDataSourcesManager","gmfExternalDataSourcesManager_","createAndAddDataSource","getUid","wmsCapabilityLayertreeComponent","wmtsCapabilityLayertreeComponent_exports","gmfWmtscapabilitylayertreTemplateUrl","wmtsCapabilityLayertreeComponent_classCallCheck","wmtsCapabilityLayertreeComponent","importdatasourceComponent_exports","gmfImportdatasourceTemplateUrl","importdatasourceComponent_classCallCheck","fileInput_","hasError","hasErrorPromise_","Mode","ONLINE","modes","LOCAL","wmsCapabilities","wmtsCapabilities","serversEngine_","servers","serverUrls","Bloodhound","datumTokenizer","datum","originalDatumTokenizers","tokenizers","whitespace","datumTokenizers","originalDatumTokenizer","queryTokenizer","identify","local","$urlInput","$connectBtn","typeahead","hint","highlight","minLength","ttAdapter","ev","suggestion","focus","browse","connect","serviceType","startWorking_","stopWorking_","load","opt_hasError","nameAndSize","fileSize","importdatasourceComponent","module_exports","Controller_exports","ngeoFeatures","featureHelper_","ngeoFeatures_","drawPoint","measureLength","measureArea","measureAzimut","drawRectangle","drawText","registerInteraction","handleActiveChange","handleDrawEnd","sketch","draw_features","Controller","point_exports","drawFeatureCtrl","Draw","rectangle_exports","geometryFunction","maxPoints","rectangle","text_exports","draw_text","area_exports","contMsg","MeasureArea","measure_area","azimut_exports","measure_azimut","length_exports","MeasureLength","measure_length","ngeo_format_XSDAttribute_js__WEBPACK_IMPORTED_MODULE_0__","gmfLayersUrl","promises_","handleGetAttributes_","ol_uri_js__WEBPACK_IMPORTED_MODULE_1__","layerIds","getFeaturesWithComparisonFilters","ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_0__","layerId","geoJSON","writeFeature","gmfRasterUrl","getRaster","Param","X","handleGetRaster_","proj4_projections_somerc_js__WEBPACK_IMPORTED_MODULE_1__","proj4__WEBPACK_IMPORTED_MODULE_0__","Proj","proj4__WEBPACK_IMPORTED_MODULE_3__","epsg21781def","ngeo_proj_somerc_js__WEBPACK_IMPORTED_MODULE_2__","defs","ol_proj_proj4_js__WEBPACK_IMPORTED_MODULE_1__","ol_proj_js__WEBPACK_IMPORTED_MODULE_0__","setExtent","typeaheadOptionsExpr","typeaheadOptions","typeaheadDatasetsExpr","typeaheadListenersExpr","typeaheadListeners_","typeaheadListeners","adaptListeners_","dataset","cursorchange","autocomplete","query","empty","datasetsempty","ngeoColorpickerTemplateUrl","colors","DEFAULT_COLORS","setColor","ol_extent_js__WEBPACK_IMPORTED_MODULE_1__","stringToCoordinates","getProjectionList","projectionsCodes","toUpperCase","tryProjections","viewProjection","opt_projections","tryProjectionsWithInversion","defaultParams_","queryParams","Promise","catch","ngeo_download_service_js__WEBPACK_IMPORTED_MODULE_0__","encoding_","extension_","includeHeader_","quote_","separator_","generateCsv","translatedColumnHeaders","columnHeader","header","getRow_","dataRows","rowValues","matchAllQuotesRegex","doubleQuote","ol_Map_js__WEBPACK_IMPORTED_MODULE_1__","stateExpr","animationDelayKey","animationDelay","cancelAnimationFrame","gmf_permalink_ShareService_js__WEBPACK_IMPORTED_MODULE_0__","gmfPermalinkShareTemplateUrl","enableEmail","ShareComponentController","gmfShareService","gmfShareService_","shortLink","showLengthWarning","successfullySent","errorOnsend","errorOnGetShortUrl","when","permalink","$valid","ngeo_datasource_DataSources_js__WEBPACK_IMPORTED_MODULE_0__","gmfLayertreeDatasourceGroupTreeTemplateUrl","getGroupUid","toggleDataSource","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_statemanager_Location_js__WEBPACK_IMPORTED_MODULE_0__","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_24__","ngeoDebounce","mapViewPropertyChangeEventKey_","ngeoDebounce_","featureOverlay_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","ngeoAutoProjection_","sourceProjections_","projectionCodes","crosshairFeature_","crosshairStyle_","crosshairStyle","ol_style_RegularShape_js__WEBPACK_IMPORTED_MODULE_22__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_21__","radius2","mapTooltip_","featureHashFormat_","ngeo_format_FeatureHash_js__WEBPACK_IMPORTED_MODULE_8__","encodeStyles","propertiesType","ngeo_format_FeatureProperties_js__WEBPACK_IMPORTED_MODULE_9__","fillOpacity","fontColor","fontSize","isBox","isLabel","pointRadius","strokeColor","ol_events_js__WEBPACK_IMPORTED_MODULE_18__","handleBackgroundLayerManagerChange_","goog_asserts_js__WEBPACK_IMPORTED_MODULE_15__","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","TREE_OPACITY","TREE_GROUP_OPACITY","getFeatures","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","gmf_theme_Manager_js__WEBPACK_IMPORTED_MODULE_1__","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","registerExternalDSGroup_","initLayers_","getMapCenter","targetProjection","reprojectedCenter","getMapZoom","getMapCrosshair","crosshair","setMapCrosshair","opt_center","crosshairCoordinate","ol_Feature_js__WEBPACK_IMPORTED_MODULE_19__","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_20__","getMapTooltip","setMapTooltip","tooltipText","tooltipPosition","div","ngeo_Popover_js__WEBPACK_IMPORTED_MODULE_3__","DIMENSIONS","unregisterMap_","getFeature","registerMap_","oeFeature","ngeo_olcs_constants_js__WEBPACK_IMPORTED_MODULE_7__","Permalink3dParam","ENABLED","setCenter","wfsPermalinkData","getWfsPermalinkData_","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","decodeURI","tn","defaultTheme","default_theme","groupsNames","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_2__","enable","groupLayers","groupLayersArray","ol_array_js__WEBPACK_IMPORTED_MODULE_17__","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_14__","removeNgeoFeature_","ol_index_js__WEBPACK_IMPORTED_MODULE_16__","handleNgeoFeaturesChange_","wfsLayer","numGroups","createFilterGroup_","showFeaturesParam","paramKey","gmfExtDSManager","layerNamesString","urlsString","ExtDSSeparator","LIST","urls","groupLayerNamesString","groupLayerNames","NAMES","ngeo_datasource_OGC_js__WEBPACK_IMPORTED_MODULE_6__","getCapabilitiesDefer","responses","ngeo_datasource_Group_js__WEBPACK_IMPORTED_MODULE_5__","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","unregisterExternalDSGroup_","_this8$ngeoStateManag","wmsGroupLayerNames","wmsDataSource","wmtsGroupLayerNames","wmtsDataSource","startsWith","_iterator15","_isArray15","_i15","_ref15","ngeo_draw_features_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_misc_debounce_js__WEBPACK_IMPORTED_MODULE_10__","ngeo_misc_EventHelper_js__WEBPACK_IMPORTED_MODULE_11__","ngeo_statemanager_module_js__WEBPACK_IMPORTED_MODULE_12__","OpenLayersLayerProperties","regexp","key1","key2","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_13__","ngeoDatePickerTemplateUrl","sdateOptions","initialMinDate","initialMaxDate","onClose","selectedDate","datepicker","edateOptions","dp","ngeoTime","ngeoTime_","changeMonth","changeYear","sdate","edate","$watchGroup","newDates","oldDates","isDate","promiseId","handleGetAttributeValues_","isValidFileSize","isWmsGetCap","isWmtsGetCap","readyState","LOADING","abort","onerror","reason","onprogress","opt_cancelP","ol_style_Text_js__WEBPACK_IMPORTED_MODULE_28__","viewConfig","ol_proj_js__WEBPACK_IMPORTED_MODULE_14__","ol_obj_js__WEBPACK_IMPORTED_MODULE_15__","mapViewConfig","gmf_controllers_AbstractAppController_js__WEBPACK_IMPORTED_MODULE_0__","ol_Map_js__WEBPACK_IMPORTED_MODULE_17__","pixelRatio","mapPixelRatio","ol_View_js__WEBPACK_IMPORTED_MODULE_18__","controls","mapControls","ol_control_ScaleLine_js__WEBPACK_IMPORTED_MODULE_19__","getElementById","ol_control_Zoom_js__WEBPACK_IMPORTED_MODULE_20__","zoomInTipLabel","zoomOutTipLabel","ol_control_Rotate_js__WEBPACK_IMPORTED_MODULE_21__","tipLabel","mapInteractions","ol_interaction_js__WEBPACK_IMPORTED_MODULE_22__","pinchRotate","altShiftDragRotate","loadTilesWhileAnimating","loadTilesWhileInteracting","loginActive","toolsActive","modalShareShown","editFeatureActive","routingfeatureActive","googleStreetViewActive","googleStreetViewStyle","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_27__","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_25__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_26__","importDataSourceActive","tooltip","trigger","selector","off","drawFeatureLayer","editFeatureVectorLayer","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_23__","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_24__","ol_Collection_js__WEBPACK_IMPORTED_MODULE_16__","editFeatureActivate","ngeo_misc_ToolActivate_js__WEBPACK_IMPORTED_MODULE_10__","googleStreetViewActivate","scaleSelectorOptions","profileLine","ol_index_js__WEBPACK_IMPORTED_MODULE_13__","gmf_contextualdata_module_js__WEBPACK_IMPORTED_MODULE_1__","gmf_drawing_module_js__WEBPACK_IMPORTED_MODULE_2__","gmf_editing_module_js__WEBPACK_IMPORTED_MODULE_3__","gmf_permalink_shareComponent_js__WEBPACK_IMPORTED_MODULE_4__","gmf_print_component_js__WEBPACK_IMPORTED_MODULE_5__","gmf_profile_module_js__WEBPACK_IMPORTED_MODULE_6__","gmf_raster_component_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_draw_features_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_map_resizemap_js__WEBPACK_IMPORTED_MODULE_9__","ngeo_query_bboxQueryComponent_js__WEBPACK_IMPORTED_MODULE_11__","gmf_import_module_js__WEBPACK_IMPORTED_MODULE_12__","FeatureHashStyleType","FeatureHash_exports","opt_options","TextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","propertiesFunction_","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","StyleTypes_","MultiLineString","MultiPoint","MultiPolygon","readFeature","CHAR64_","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","geometryType","encodedStyles","styleType","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","encodeStyleFill_","opt_propertyName","getColor","fillColorRgba","fillColorHex","rgbArrayToHex","strokeColorRgba","strokeColorHex","getWidth","fontStyle","getFont","readLineStringGeometry_","flatCoordinates","decodeCoordinates_","setFlatCoordinates","GeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","readPointGeometry_","readMultiPointGeometry_","multiPoint","readPolygonGeometry_","readMultiPolygonGeometry_","endss","polygons","multipolygon","setStyleInFeature_","getStyleProperties_","setStyleProperties_","castValue_","numProperties","boolProperties","parts","keyVal","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","GEOMETRY_WRITERS_","opt_flatCoordinates","encodedCoordinates","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","attributesAndStylesText","attributesText","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","encoded","getStyleFunction","writeFeaturesText","geometryWriter","transformedGeometry","format_Feature","RasterService","gmfRaster","$compile_","gmfRaster_","hidePopover","preparePopover_","setContent_","showPopover","content_","mapProjection","ol_proj","getRasterSuccess","setAttribute","Overlay","autoPan","autoPanAnimation","contentDirective_","gmfContextualdatacontentTemplateUrl","VectorEncoder_exports","geojsonFormat","GeoJSON","PrintStyleTypes_","PrintStyleType","encodeVectorLayer","geojsonFeatures","mapfishStyleObject","version","originalFeature","styleData","origGeojsonFeature","writeFeatureObject","isOriginalFeatureAdded","geojsonFeature","styledFeature","featureStyleProp","styleId","encodeVectorStyle","geoJson","styleObject","symbolizers","encodeVectorStylePolygon","encodeVectorStyleLine","encodeVectorStylePoint","encodeTextStyle","encodeVectorStyleFill","symbolizer","encodeVectorStyleStroke","Icon","getSrc","externalGraphic","graphicOpacity","graphicWidth","graphicHeight","getRotation","math","RegularShape","getPoints","graphicName","sizeShape","rotationShape","opacityShape","strokeShape","fillShape","strokeOpacity","strokeDashstyle","getLineDash","getLineCap","strokeLinecap","xAlign","yAlign","olTextAlign","getTextAlign","olTextBaseline","getTextBaseline","labelAlign","labelRotation","fontWeight","fontFamily","haloColor","haloOpacity","haloRadius","labelXOffset","getOffsetX","labelYOffset","getOffsetY","VectorEncoder","Service_exports","vectorEncoder_","printNativeAngle_","ref","opt_httpConfig","httpConfig","createSpec","dpi","layout","customAttributes","specMap","encodeMap_","currentLanguage","viewCenter","viewResolution","viewRotation","mapLayerGroup","layer_a","layer_b","getZIndex","encodeLayer","encodeImageLayer_","encodeTileLayer_","layer_Vector","encodeImageWmsLayer_","getUrl","encodeWmsLayer_","url_url","URL","customParams","searchParams","baseURL","getAbsoluteUrl_","imageFormat","useNativeAngle","href","encodeURI","encodeTileWmtsLayer_","encodeTileWmsLayer_","tileGrid","getTileGrid","tilegrid_WMTS","matrixIds","getMatrixIds","matrices","tileRange","getFullTileRange","identifier","scaleDenominator","getMetersPerUnit","tileSize","ol_size","getTileSize","topLeftCorner","getOrigin","matrixSize","maxX","minX","maxY","minY","getDimensions","dimensionKeys","getWmtsUrl_","dimensionParams","getFormat","getMatrixSet","requestEncoding","getRequestEncoding","getVersion","getUrls","createReport","printSpec","getStatus","getReportUrl","getCapabilities","createPrintServiceFactory","editFeatureSelectorComponent_exports","editFeatureComponent","treeCtrlsWatcherUnregister_","editables","editableTreeCtrls","selectedEditableTreeCtrl","stopEditing","editFeatureSelectorComponent","EditFeature","XSDAttributes","createGeoJSONBloodhound_exports","opt_filter","opt_featureProjection","opt_dataProjection","opt_remoteOptions","bloodhoundOptions","remote","prepare","settings","parsedResponse","featureCollection","remoteOptions","createGeoJSONBloodhound","createLocationSearchBloodhound_exports","sourceProjection","EPSG21781","origins","results","parseBbox","geom_st_box2d","removeHtmlTags","extractName","bhOptions","createLocationSearchBloodhound","searchDirective","featureStyleComponent_exports","colorpickerComponent","handleColorSet_","handleFeatureSet_","propName","newColor","getSetAngle","getSetProperty_","getSetName","getSetShowLabel","getSetOpacity","getSetShowMeasure","getSetSize","getSetStroke","featureStyleComponent","drawFeatureComponent_exports","exportfeaturesComponent","longPressTimeout_","selectedFeature","listSelectionInProgress_","nameProperty","drawUid","selectFeatureFromList","getFeaturesArray","clearFeatures","handleMapTouchStart_","handleMapTouchEnd_","setTimeout","clearTimeout","drawFeatureComponent","d3","bisector","d3_array","axisBottom","d3_axis","axisLeft","scaleLinear","d3_scale","d3_selection","area","d3_shape","d3Elevation","light","margin","top","right","bottom","left","hoverCallback","outCallback","distanceExtractor","linesConfiguration","numberOfLines","bisectDistance","poiExtractor","styleDefs","poiLabelAngle","i18n","xAxisLabel","xAxis","yAxisLabel","yAxis","formatter","xhover","units","toPrecision","yhover","ele","xtick","ytick","lightXAxis","svg","scaleModifier","xFactor","xUnits","xDomain","profile","selection","each","clientWidth","clientHeight","y0","y1","firstLineName","zExtractor","svgEnter","enter","gEnter","clearPois","xHover","domain","yDomain","elevationsValues","transition","yHover","tickFormat","tickValues","ticks","tickSize","clearHighlight","mouseX","x0","invert","showPois","elevation","elevations","elevationsRef","lineName","xtranslate","pois","pe","profileData","poiEnterG","exit","elevationComponent_d3","elevationComponent_exports","optionsAttr","elevationData","poiData","refreshData","origHoverCallback","origOutCallback","elevationComponent","gmfProfileTemplateUrl","getLinesConfigurationFn","getHoverPointStyleFn","getNbPointsFn","getOptionsFn","gmfProfileJsonUrl","pointHoverOverlay_","gmfProfileJsonUrl_","linesConfiguration_","layersNames_","nbPoints_","currentPoint","yUnits","profileHighlight","measureTooltip_","snappedPoint_","profileLabels_","profileOptions","pointerMoveKey_","isErrored","updateEventsListening_","newLine","oldLine","update_","hoverPointStyle","hoverPointStyleFn","getZFactory_","getDist_","hoverCallback_","outCallback_","optionsFn","assertObject","getJsonProfile_","onPointerMove_","getEventCoordinate","closestPoint","getClosestPoint","pixelDist","getDistanceOnALine_","pointOnLine","distOnLine","fakeExtent","forEachSegment","firstPoint","lastPoint","getTooltipHTML_","elevationName","translatedElevationName","DistDecimal","lineConfiguration","getLayersNames","nbPoints","method","paramSerializer","getProfileDataSuccess_","getProfileDataError_","hasDistance","rows","drawLineComponent_exports","getStyleFn","overlay","styleFn","drawLineComponent","ol_events_condition_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_query_MapQuerent_js__WEBPACK_IMPORTED_MODULE_0__","ol_interaction_DragBox_js__WEBPACK_IMPORTED_MODULE_1__","gmf_raster_RasterService_js__WEBPACK_IMPORTED_MODULE_0__","ngeo_misc_debounce_js__WEBPACK_IMPORTED_MODULE_2__","gmfElevationwidgetTemplateUrl","loading","toggleActive_","inViewport_","pointerStop_","getRasterSuccess_","getRasterError_","widgetComponent_","WidgetController_","selectedElevationLayer","ol_math_js__WEBPACK_IMPORTED_MODULE_1__","extentHalfHorizontalDistance_","extentHalfVerticalDistance_","INCHES_PER_METER_","DOTS_PER_INCH_","createPrintMaskPostcompose","opt_rotation","frameState","viewState","viewportWidth","viewportHeight","ol_has_js__WEBPACK_IMPORTED_MODULE_0__","ppi","ipm","extentHalfWidth","extentHalfHeight","beginPath","moveTo","lineTo","closePath","drawPrintZoneWithRotation_","drawPrintZone_","minx","miny","maxx","maxy","diagonal","gamma","atan","omega","x1","x2","y2","x3","y3","x4","y4","getOptimalScale","mapSize","mapResolution","printMapSize","printMapScales","mapWidth","mapHeight","scaleWidth","scaleHeight","optimal","getOptimalResolution","printMapScale","dotsPerMeter","resolutionX","resolutionY","getBottomLeftCorner","getBottomRightCorner","getUpLeftCorner","getUpRightCorner","gmf_authentication_Service_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_map_FeatureOverlayMgr_js__WEBPACK_IMPORTED_MODULE_5__","ngeo_misc_FeatureHelper_js__WEBPACK_IMPORTED_MODULE_6__","ngeo_print_Service_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_print_Utils_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_query_MapQuerent_js__WEBPACK_IMPORTED_MODULE_9__","gmfPrintTemplateUrl","PrintStateEnum","NOT_IN_USE","PRINTING","ERROR_ON_REPORT","CAPABILITIES_NOT_LOADED","ERROR_ON_GETCAPABILITIES","rotateMask","fieldValues","hiddenAttributeNames","attributesOut","ngeoPrintUtils","ngeoCreatePrint","gmfPrintUrl","gmfPrintState","gmfPrintState_","featureOverlayLayer_","ngeoPrintUtils_","ngeoPrint_","ngeoQueryResult_","scaleInput","requestCanceler_","statusTimeoutPromise_","onDragPreviousMousePosition_","rotationTimeoutPromise_","postComposeListenerKey_","pointerDragListenerKey_","mapViewResolutionChangeKey_","curRef_","formats_","layouts_","layout_","paperSize_","layoutInfo","scaleManuallySelected_","rotationInput_","setRotation","postcomposeListener_","capabilities_","currentThemes_","togglePrintPanel_","print","currentThemes","getRotationFn","getScaleFn","goog_asserts_js__WEBPACK_IMPORTED_MODULE_3__","ol_array_js__WEBPACK_IMPORTED_MODULE_10__","getOptimalScale_","getCapabilities_","parseCapabilities_","ol_events_js__WEBPACK_IMPORTED_MODULE_11__","onPointerDrag_","render","layouts","updateFields_","mapInfo","isAttributeInCurrentLayout_","clientInfo","updateCustomFields_","legend","dpis","rawType","simpleAttributes","previousAttributes","default","ol_math_js__WEBPACK_IMPORTED_MODULE_16__","p0x","p0y","p1x","p1y","centerToP0","centerToP1","boost","increment","getDataSource_","field","getLegend_","ol_Map_js__WEBPACK_IMPORTED_MODULE_15__","setView","ol_layers","new_ol_layers","print_native_angle","server_name","layer_names","printLayers","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_12__","setLayerGroup","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_14__","spec","handleCreateReportSuccess_","handleCreateReportError_","resetPrintStates_","opt_printState","datasourceObj","columns","datasourceArr","table","getStatus_","handleGetStatusSuccess_","mfResp","classes","icons","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_13__","getMetadataLegendImage_","legendImage","setLayout","layoutName","getSetScale","contrainRes","constrainResolution","setResolution","setDpi","isState","stateEnumKey","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_12__","ngeo_misc_EventHelper_js__WEBPACK_IMPORTED_MODULE_5__","filter_","interaction_","ngeo_GeometryType_js__WEBPACK_IMPORTED_MODULE_2__","ol_interaction_Draw_js__WEBPACK_IMPORTED_MODULE_11__","ngeo_interaction_MeasureLength_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_interaction_MeasureArea_js__WEBPACK_IMPORTED_MODULE_3__","ol_index_js__WEBPACK_IMPORTED_MODULE_7__","ol_events_js__WEBPACK_IMPORTED_MODULE_9__","handleDrawEnd_","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_6__","toMulti","ol_Collection_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_misc_php_date_formatter_js__WEBPACK_IMPORTED_MODULE_0__","fromJson","ngeo_misc_datetimepickerComponent_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_misc_EventHelper_js__WEBPACK_IMPORTED_MODULE_2__","ngeoAttributesTemplateUrl","disabled","form","updating_","handleInputChange","ngeo_misc_FeatureHelper_js__WEBPACK_IMPORTED_MODULE_0__","$menu","aria-labelledby","$item","handleMenuItemClick_","handleElementClick_","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_2__","parentElement","sortable","resetUpDragDrop","handleClassName","callbackFn","callbackCtx","sortableElement","sortableOptions","axis","ui-sortable-helper","ui","oldIndex","newIndex","Function","ngeoPopoverCtrl","anchorElm","bodyElm","shown","popover","placement","dismissPopover","unbind","anchorComponent","contentComponent","hide","PopoverController_","onMouseDown","clickEvent","gmf_layertree_TreeManager_js__WEBPACK_IMPORTED_MODULE_1__","gmf_search_FulltextSearch_js__WEBPACK_IMPORTED_MODULE_2__","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_misc_AutoProjection_js__WEBPACK_IMPORTED_MODULE_6__","ngeo_misc_colorpickerComponent_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_search_module_js__WEBPACK_IMPORTED_MODULE_9__","ngeo_message_popoverComponent_js__WEBPACK_IMPORTED_MODULE_8__","gmfSearchTemplateUrl","gmfSearchTemplateUrl_","inputValue","placeholder","datasources","featuresStyles","clearButton","colorChooser","coordinatesProjections","additionalListeners","onInitCallback","SearchController_","ngeoAutoProjection","ngeoSearchCreateGeoJSONBloodhound","gmfSearchFulltextSearch","fullTextSearch_","ngeoSearchCreateGeoJSONBloodhound_","styles_","datasets","displayColorPicker","listeners","coordProj","initStyles_","getSearchStyle_","ol_obj_js__WEBPACK_IMPORTED_MODULE_13__","initDatasets_","setStyleColor","mergeListeners_","select_","close_","datasetsempty_","searchQuery","resultIndex","mapZoom","fulltextsearch_","filterLayername_","filterAction_","createDataset_","datasetTitle","groupsKey","typeaheadDatasetOptions","createSearchCoordinates_","display","templates","componentScope","compile","typeaheadDataset","createAndInitBloodhound_","act","opt_layerName","featureLayerName","mapProjectionCode","getBloodhoudRemoteOptions_","bloodhound","ol_proj_js__WEBPACK_IMPORTED_MODULE_15__","initialize","rateLimitWait","xhrFields","ol_uri_js__WEBPACK_IMPORTED_MODULE_21__","interface","suggestions","tt_source","COORDINATES_LAYER_NAME","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_20__","ol_style_RegularShape_js__WEBPACK_IMPORTED_MODULE_18__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_19__","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_17__","ol_style_Circle_js__WEBPACK_IMPORTED_MODULE_16__","customStyles","ol_color_js__WEBPACK_IMPORTED_MODULE_11__","setImage","changed","setTTDropdownVisibility_","ttDropdown","onClearButton","ttmenu","inputs","blur","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_12__","layer_name","leaveSearch_","selectFromGMF_","featureGeometry","_loop2","actionName","actionData","datasourcesActionsHaveAddLayer","groupAction","silent","fitArray","menu","opt_zoom","ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_14__","fitOptions","selected","selectedIndex","arr1","arr2","dereg1","dereg2","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_0__","ngeoLayertreeTemplateUrl","ol_Overlay_js__WEBPACK_IMPORTED_MODULE_1__","originalEl","closeEl_","contentEl_","one","gmf_datasource_DataSourceBeingFiltered_js__WEBPACK_IMPORTED_MODULE_1__","gmf_datasource_ExternalDataSourcesManager_js__WEBPACK_IMPORTED_MODULE_2__","gmf_permalink_Permalink_js__WEBPACK_IMPORTED_MODULE_3__","gmf_layertree_datasourceGroupTreeComponent_js__WEBPACK_IMPORTED_MODULE_4__","gmf_layertree_SyncLayertreeMap_js__WEBPACK_IMPORTED_MODULE_5__","gmf_layertree_TreeManager_js__WEBPACK_IMPORTED_MODULE_6__","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_layertree_component_js__WEBPACK_IMPORTED_MODULE_10__","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_11__","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_12__","ngeo_misc_WMSTime_js__WEBPACK_IMPORTED_MODULE_14__","gmfLayertreeTemplate","openLinksInNewWindow","gmfSyncLayertreeMap","goog_asserts_js__WEBPACK_IMPORTED_MODULE_8__","gmfSyncLayertreeMap_","groupNodeStates_","ngeo_misc_syncArrays_js__WEBPACK_IMPORTED_MODULE_13__","updateDimensions_","ol_layer_Layer_js__WEBPACK_IMPORTED_MODULE_16__","updateLayerDimensions_","ol_obj_js__WEBPACK_IMPORTED_MODULE_17__","ol_source_WMTS_js__WEBPACK_IMPORTED_MODULE_20__","ol_source_TileWMS_js__WEBPACK_IMPORTED_MODULE_19__","ol_source_ImageWMS_js__WEBPACK_IMPORTED_MODULE_18__","once","toggleActive","getNodeState","updateWMSTimeLayerState","layertreeCtrl","ngeo_datasource_OGC_js__WEBPACK_IMPORTED_MODULE_9__","getLegendIconURL","iconUrl","legendRule","gmfOgcServer","getLegendsObject","legendsObject","gmfLayerDefaultName","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_15__","wmtsLegendURL","layersNames","getScale_","getNumberOfLegendsObject","displayMetadata","metadataURL","afterReorder","groupNodes","currentTreeCtrls","removeNode","removeAllNodes","nodesCount","getResolutionStyle","zoomToResolution","toggleNodeLegend","legendNodeId","toggleFiltrableDataSource","isNodeLegendVisible","supportsCustomization","supportsLegend","supportsOpacityChange","appmodule_exports","$compileProvider","debugInfoEnabled","appmodule","ngeoGooglestreetviewTemplateUrl","featureStyle","noDataAtLocation","panorama_","google","maps","StreetViewPanorama","pov","heading","pitch","panoramaListener_","point_","streetViewService_","StreetViewService","panoramaPositionChanging_","handleLocationChange_","hasLocation","handleReadyChange_","hasData","oldShow","addListener","handlePanoramaPositionChange_","removeListener","oldLocation","lonLat","toLonLat_","getPanorama","lat","lng","handleStreetViewServiceGetPanorama_","ready","oldReady","panorama","StreetViewStatus","OK","latLng","getPosition","fromLonLat_","googlestreetview_module","NominatimService_exports","nominatimUrl_","searchDefaultParams_","typeaheadDebounceDelay_","typeaheadSourceDebounced","typeaheadSource_","option","syncResults","asyncResults","lon","display_name","NominatimService","RoutingService_exports","routingOptions_","ngeoOsrmBackendUrl_","backendUrl","protocolVersion_","getRoute","getNearest","RoutingService","NominatimInputComponent_exports","ngeoRoutingNominatimInputComponentTemplateUrl","ngeoNominatimService","onSelect","NominatimInputComponent_component","NominatimInputComponent","RoutingFeatureComponent_exports","ngeoRoutingFeatureTemplateUrl","ngeoNominatimService_","featureLabel","onChange","vectorFeatures_","modifyFeature_","draw_","onSelect_","errorMessage","snapFeature_","onFeatureChange_","setFeature_","transformedCoordinate","newCoordinates","getLonLatFromPoint_","onSuccess","onError","RoutingFeatureComponent","RoutingComponent_exports","ngeoRoutingTemplateUrl","ngeoRoutingService","ngeoRoutingService_","routingProfiles","profiles","selectedRoutingProfile","calculateRoute","startFeature_","targetFeature_","viaArray","start.fill","start.stroke","destination.fill","destination.stroke","via.fill","via.stroke","routeSource_","routeLayer_","routeDistance","routeDuration","regexIsFormattedCoord","handleChange","clearRoute","reverseRoute","tmpFeature","parseRoute_","route","parsedRoutes","formatConfig","legs","leg","steps","step","coordFrom","coordTo","vias","via","onSuccess_","routes","startRoute","endRoute","startToRoute","routeToEnd","routeConnections","onError_","addVia","deleteVia","RoutingComponent","routing_module","epsg2056def","somerc","lib","proj4","AbstractDesktopController","resolutions","searchCoordinatesProjections","searchDelay","showInfobar","scaleSelectorValues","elevationLayers","profileLinesconfiguration","srtm","mousePositionProjections","gridMergeTabs","OSM_time_merged","transport (merged)","Learning [merged]","bgOpacityOptions","raven_default","addPlugin","angular_default","install","onKeydown","import_module"],"mappings":"aACA,SAAAA,EAAAC,GAOA,IANA,IAKAC,EAAAC,EALAC,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GAGAM,EAAA,EAAAC,KACQD,EAAAH,EAAAK,OAAoBF,IAC5BJ,EAAAC,EAAAG,GACAG,EAAAP,IACAK,EAAAG,KAAAD,EAAAP,GAAA,IAEAO,EAAAP,GAAA,EAEA,IAAAD,KAAAG,EACAO,OAAAC,UAAAC,eAAAC,KAAAV,EAAAH,KACAc,EAAAd,GAAAG,EAAAH,IAIA,IADAe,KAAAhB,GACAO,EAAAC,QACAD,EAAAU,OAAAV,GAOA,OAHAW,EAAAR,KAAAS,MAAAD,EAAAb,OAGAe,IAEA,SAAAA,IAEA,IADA,IAAAC,EACAf,EAAA,EAAiBA,EAAAY,EAAAV,OAA4BF,IAAA,CAG7C,IAFA,IAAAgB,EAAAJ,EAAAZ,GACAiB,GAAA,EACAC,EAAA,EAAkBA,EAAAF,EAAAd,OAA2BgB,IAAA,CAC7C,IAAAC,EAAAH,EAAAE,GACA,IAAAf,EAAAgB,KAAAF,GAAA,GAEAA,IACAL,EAAAQ,OAAApB,IAAA,GACAe,EAAAM,IAAAC,EAAAN,EAAA,KAGA,OAAAD,EAIA,IAAAQ,KAKApB,GACAqB,EAAA,GAGAZ,KAGA,SAAAS,EAAA1B,GAGA,GAAA4B,EAAA5B,GACA,OAAA4B,EAAA5B,GAAA8B,QAGA,IAAAC,EAAAH,EAAA5B,IACAK,EAAAL,EACAgC,GAAA,EACAF,YAUA,OANAhB,EAAAd,GAAAa,KAAAkB,EAAAD,QAAAC,IAAAD,QAAAJ,GAGAK,EAAAC,GAAA,EAGAD,EAAAD,QAKAJ,EAAAO,EAAAnB,EAGAY,EAAAQ,EAAAN,EAGAF,EAAAS,EAAA,SAAAL,EAAAM,EAAAC,GACAX,EAAAY,EAAAR,EAAAM,IACA1B,OAAA6B,eAAAT,EAAAM,GACAI,cAAA,EACAC,YAAA,EACAC,IAAAL,KAMAX,EAAAiB,EAAA,SAAAb,GACApB,OAAA6B,eAAAT,EAAA,cAAiDc,OAAA,KAIjDlB,EAAAmB,EAAA,SAAAd,GACA,IAAAM,EAAAN,KAAAe,WACA,WAA2B,OAAAf,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAL,EAAAS,EAAAE,EAAA,IAAAA,GACAA,GAIAX,EAAAY,EAAA,SAAAS,EAAAC,GAAsD,OAAAtC,OAAAC,UAAAC,eAAAC,KAAAkC,EAAAC,IAGtDtB,EAAAuB,EAAA,GAEA,IAAAC,EAAAC,OAAA,aAAAA,OAAA,iBACAC,EAAAF,EAAAzC,KAAA4C,KAAAH,GACAA,EAAAzC,KAAAX,EACAoD,IAAAI,QACA,QAAAjD,EAAA,EAAgBA,EAAA6C,EAAA3C,OAAuBF,IAAAP,EAAAoD,EAAA7C,IACvC,IAAAU,EAAAqC,EAIAnC,EAAAR,MAAA,QAEAU,oCCrIA,IAAMW,GAENA,OAAiB,SAASyB,EAAWC,EAAaC,GAChD,OAAOF,GAGTzB,aAAuB,SAASc,EAAOY,EAAaC,GAClD,OAAOb,GAGTd,aAAuB,SAASc,EAAOY,EAAaC,GAClD,OAAOb,GAGTd,eAAyB,SAASc,EAAOY,EAAaC,GACpD,OAAOb,GAGTd,aAAuB,SAASc,EAAOY,EAAaC,GAClD,OAAOb,GAGTd,YAAsB,SAASc,EAAOY,EAAaC,GACjD,OAAOb,GAGTd,cAAwB,SAASc,EAAOY,EAAaC,GACnD,OAAOb,GAGTd,cAAwB,SAASc,EAAOY,EAAaC,GACnD,OAAOb,GAGTd,iBAA2B,SAASc,EAAOc,EAAMF,EAAaC,GAC5D,OAAOb,GAGTd,8BAAwC,cAExC6B,EAAA,+CCgBAA,EAAA,GA5CEC,OAAQ,SAKRC,YAAa,aAKbC,kBAAmB,kBAKnBC,YAAa,aAKbC,cAAe,eAKfC,MAAO,QAKPC,QAAS,UAKTC,UAAW,YAKXC,KAAM,uCCmBRT,EAAA,GA3DEU,MAAO,IAKPC,MAAO,IAKPC,UAAW,IAKXC,aAAc,IAKdC,QAAS,IAKTC,KAAM,IAKNC,WAAY,IAKZC,QAAS,IAKTC,OAAQ,IAKRC,aAAc,IAKdC,KAAM,IAKNC,OAAQ,2CCxBVrB,EAAA,GAhCEsB,QAAS,UAITC,KAAM,OAINC,SAAU,WAIVC,KAAM,OAINC,SAAU,WAIVC,OAAQ,SAIRC,OAAQ,SAIRnB,KAAM,8FCvCRoB,EAAA9D,EAAA,KA6BMI,EAAU,SAAS2D,EAAOC,EAAWC,EAAIC,EAAiBC,EAAgBC,GAE9EC,EAAA,EAAoBlF,KAAKmF,MAMzBA,KAAKC,0BAA2B,OACiBC,IAA7CJ,EAAiBK,0BACnBH,KAAKC,yBAA2BH,EAAiBK,yBAOnDH,KAAKI,IAAMT,EAMXK,KAAKK,OAASZ,EAMdO,KAAKM,cAAWJ,EACZR,EAAUa,IAAI,gBAChBP,KAAKM,SAAWZ,EAAUhD,IAAI,eAGhCsD,KAAKQ,cAAgB,IACjBd,EAAUa,IAAI,kBAChBP,KAAKQ,cAAgBd,EAAUhD,IAAI,iBAOrCsD,KAAKS,cAAgB,KACjBf,EAAUa,IAAI,kBAChBP,KAAKS,cAAgBf,EAAUhD,IAAI,iBAOrCsD,KAAKU,aAAed,EAMpBI,KAAKH,eAAiBA,EAMtBG,KAAKW,UAAYhB,EAAGiB,QAMpBZ,KAAKa,SAAWb,KAAKW,UAAUG,QAK/Bd,KAAKe,QAAS,EAMdf,KAAKgB,gBAAkB,4LAGzBC,EAAA,EAAgBnF,EAASiE,EAAA,GAQzBjE,EAAQoF,yBAA2B,SAASC,EAAQ/E,GAClD,IAAK,IAAI/B,EAAI,EAAG+G,EAAKD,EAAO5G,OAAQF,EAAI+G,EAAI/G,IAE1C,IADA,IAAMgH,EAAQF,EAAO9G,GACZkB,EAAI,EAAG+F,EAAKD,EAAME,SAAShH,OAAQgB,EAAI+F,EAAI/F,IAAK,CACvD,IAAMiG,EAAQH,EAAME,SAAShG,GACvBkG,KAEN,GADA3F,EAAQ4F,aAAaF,EAAOC,GACxB3F,EAAQ6F,iBAAiBF,EAAYrF,GACvC,OAAOoF,EAIb,OAAO,MAST1F,EAAQ8F,gBAAkB,SAAST,EAAQ/E,GACzC,IAAK,IAAI/B,EAAI,EAAG+G,EAAKD,EAAO5G,OAAQF,EAAI+G,EAAI/G,IAE1C,IADA,IAAMgH,EAAQF,EAAO9G,GACZkB,EAAI,EAAG+F,EAAKD,EAAME,SAAShH,OAAQgB,EAAI+F,EAAI/F,IAAK,CACvD,IAAMiG,EAAQH,EAAME,SAAShG,GACvBsG,KAEN,GADA/F,EAAQgG,qBAAqBN,EAAOK,GAChC/F,EAAQ6F,iBAAiBE,EAAezF,GAC1C,OAAOoF,EAIb,OAAO,MAWT1F,EAAQ6F,iBAAmB,SAASI,EAASC,GAC3C,OAAOC,EAAA,EAAaF,EAAS,SAAAhF,GAAA,OAAUA,EAAA,OAAmBiF,KAU5DlG,EAAQoG,gBAAkB,SAASf,EAAQgB,GACzC,OAAOrG,EAAQ6F,iBAAiBR,EAAQgB,IAW1CrG,EAAQgG,qBAAuB,SAASM,EAAMC,GAC5C,IAAMd,EAAWa,EAAKb,SACtB,QAAiBrB,IAAbqB,EAAwB,CAC1Bc,EAAM5H,KAAK2H,GACX,IAAK,IAAI/H,EAAI,EAAGA,EAAIkH,EAAShH,OAAQF,IACnCyB,EAAQgG,qBAAqBP,EAASlH,GAAIgI,KAYhDvG,EAAQ4F,aAAe,SAASU,EAAMC,GACpC,IAAIhI,SACEkH,EAAWa,EAAKb,SACtB,QAAiBrB,IAAbqB,EACF,IAAKlH,EAAI,EAAGA,EAAIkH,EAAShH,OAAQF,IAC/ByB,EAAQ4F,aAAaH,EAASlH,GAAIgI,QAGpCA,EAAM5H,KAAK2H,IASftG,EAAQnB,UAAU2H,YAAc,WAAW,IAAAC,EAAAvC,KACnCH,EAAiBG,KAAKH,eAC5B,GAAIG,KAAKgB,gBACP,OAAOhB,KAAKgB,gBAEd,IAAMrB,EAAKK,KAAKI,IACVoC,EAAcxC,KAAKU,aAmBnB+B,EAAW,SAASC,EAAMC,GAC9BA,EAAMC,IAAI,QAASF,EAAKtG,MACxBuG,EAAMC,IAAI,WAAYF,EAAKG,UAC3BF,EAAMC,IAAI,aAAcF,EAAKI,YAC7B,IAAMC,KAGN,OApBa,SAATC,EAAkBN,EAAMO,GAC5BA,EAAMxI,KAAKwG,EAAA,EAAcyB,KACRA,EAAKnB,cACb2B,QAAQ,SAACC,GAChBH,EAAOG,EAAOF,KAchBD,CAAON,EAAMK,GACbJ,EAAMC,IAAI,iBAAkBG,GACrBJ,GAQHS,EAAuB,SAASC,EAAYC,GAChD,GAAsB,SAAlBA,EAAS5F,KAAiB,CAC5B,IAAM6F,EAAoDD,EAE1D,OADAE,EAAA,EAAYC,OAAOF,EAAaG,IAAK,yBAC9BlB,EAAYmB,iCACjBJ,EAAaG,IACbH,EAAaZ,OAAS,GACtBY,EAAaK,UACbN,EAASR,YACTe,KAAKpB,EAASpF,KAAK,KAAMiG,IAAWO,KAAK,KAAM,SAACC,GAChD,IAAIC,4BAAoCR,EAAaZ,MAAjD,4BAAkFY,EAAaG,IAA/F,KAIJ,OAHAK,2BAAmCD,EAAA,QACnCE,QAAQC,MAAMF,GAEPpE,EAAGuE,aAAQhE,KAEf,GAAsB,QAAlBoD,EAAS5F,KAAgB,CAClC,IAAMyG,EAAkDb,EACxDE,EAAA,EAAYC,OAAOU,EAAYC,UAAW,6BAC1C,IAAMC,EAAShB,EAAWc,EAAYC,WAItC,OAHAZ,EAAA,EAAYC,OAAOY,EAAQ,gCAC3Bb,EAAA,EAAYC,OAAOY,EAAOX,IAAK,8BAC/BF,EAAA,EAAYC,OAAOY,EAAOC,UAAW,qCAC9B7B,EAASa,EAAUd,EAAY+B,oBACpCF,EAAOX,IACPS,EAAYK,QAAU,GACtBH,EAAOC,UACPD,EAAO3G,UACPwC,EACAoD,EAASR,WACTuB,EAAOI,WAAa,kBAAoB,cAG5CjB,EAAA,EAAYkB,KAAZ,qBAAsCpB,EAAS5F,OA6B3CiH,EAAmB,SAAS5K,GAChC,IAAM6K,EAAW7K,EAAK8K,kBAAkBC,IAAI,SAACpC,GAC3C,IAAMqC,EAAWrC,EAAKhF,KACtB,MAAiB,SAAbqH,GAAoC,QAAbA,EAClB3B,EAAqBrJ,EAAKsJ,WAAYX,GACpCA,EAAKnB,SA1BS,SAAS8B,EAAYX,GAEhD,IACMkC,EADkBlC,EAAKnB,SAASuD,IAAI,SAAAE,GAAA,OAAKA,IAAGC,UACjBH,IAAI1B,EAAqB/F,KAAK,KAAMgG,IACrE,OAAO1D,EAAGuF,IAAIN,GAAUf,KAAK,SAACW,GAC5B,IAAIW,SACAX,IACFA,EAASA,EAAOY,OAAO,SAAApJ,GAAA,OAAKA,IAC5BmJ,EAAa,IAAIE,EAAA,EAAab,IAEhC,IAAMhD,EAAQgB,EAAY8C,iBAAiBH,GAE3C,OADA1C,EAASC,EAAMlB,GACRA,IAgBE+D,CAAqBxL,EAAKsJ,WAAYX,QAE7C,GAED1C,MACH,OAAOL,EAAGuF,IAAIN,IACdvH,KAAK2C,MAwBP,OAtBAA,KAAKgB,gBAAkBhB,KAAKa,SAASgD,KAAKc,GAAkBd,KAAK,SAAC2B,GAChE,IAAMhB,KAkBN,OAfIjC,EAAKtC,2BAEPJ,EAAe4F,UAAU,SACzBjB,EAAO/J,KAAK,IAAI+E,EAAA,GACdkG,MAAS,QACT7C,UAAa8C,UAAa,QAK9BH,EAAOtC,QAAQ,SAACP,GACVA,GACF6B,EAAO/J,KAAKkI,KAGT6B,IAGFxE,KAAKgB,iBAUdlF,EAAQnB,UAAUiL,eAAiB,SAASzD,GAC1C,OAAOnC,KAAKa,SAASgD,KAOnB,SAAA9J,GAAA,OAAQ+B,EAAQoG,gBAAgBnI,EAAKoH,OAAQgB,MASjDrG,EAAQnB,UAAUkL,gBAAkB,WAClC,OAAO7F,KAAKa,SAASgD,KAMnB,SAAA9J,GAAA,OAAQA,EAAKoH,UAQjBrF,EAAQnB,UAAUmL,0BAA4B,WAE5C,OADAtC,EAAA,EAAYC,OAAyB,OAAlBzD,KAAKa,UACjBb,KAAKa,SAASgD,KAMnB,SAAA9J,GAAA,OAAQA,EAAK8K,qBAUjB/I,EAAQnB,UAAUoL,oBAAsB,WAEtC,OADAvC,EAAA,EAAYC,OAAyB,OAAlBzD,KAAKa,UACjBb,KAAKa,SAASgD,KAMnB,SAAA9J,GAAA,OAAQA,EAAKsJ,cAQjBvH,EAAQnB,UAAUqL,kBAAoB,WAEpC,OADAxC,EAAA,EAAYC,OAAyB,OAAlBzD,KAAKa,UACjBb,KAAKa,SAASgD,KAAK7D,KAAKiG,mBAAmB5I,KAAK2C,QASzDlE,EAAQnB,UAAUsL,mBAAqB,SAASlM,GAAM,IAAAmM,EAAAlG,KACpD,OAAOjG,EAAKoH,OAAOgF,KAAK,SAAC9E,GAEvB,OAD0BA,EAAME,SAAS4E,KAAKD,EAAKE,uBAAuB/I,KAA5B6I,OAUlDpK,EAAQnB,UAAUyL,uBAAyB,SAAShE,GAClD,GAAIA,EAAKiE,SACP,OAAO,EAGT,IAAIL,GAAoB,EAClBzE,EAAWa,EAAKb,SAItB,OAHIA,GAAYA,EAAShH,SACvByL,EAAoBzE,EAAS4E,KAAKnG,KAAKoG,uBAAuB/I,KAAK2C,QAE9DgG,GAUTlK,EAAQwK,kBAAoB,SAASlE,GAGnC,OAFgBA,EAAKS,eAA6C3C,IAAjCkC,EAAKS,SAAS0D,eAC7CnE,EAAKS,SAAS0D,eAAiB,MAcnCzK,EAAQ0K,qBAAuB,SAASlD,GACtC,IAAMT,EAAWS,EAAST,SACtB4D,EAAgBnD,EAASoD,kBAI7B,YAHsBxG,IAAlBuG,QAA4CvG,IAAb2C,IACjC4D,EAAgB5D,EAAS4D,eAEpBA,GAaT3K,EAAQ6K,qBAAuB,SAASrD,GACtC,IAAMT,EAAWS,EAAST,SACtB+D,EAAgBtD,EAASuD,kBAI7B,YAHsB3G,IAAlB0G,QAA4C1G,IAAb2C,IACjC+D,EAAgB/D,EAAS+D,eAEpBA,GAST9K,EAAQnB,UAAUmM,WAAa,SAASC,GAAY,IAAAC,EAAAhH,KAElDwD,EAAA,EAAYC,OAAOzD,KAAKM,SAAU,iCAE9BN,KAAKe,SAEPf,KAAKW,UAAYX,KAAKI,IAAIQ,QAC1BZ,KAAKa,SAAWb,KAAKW,UAAUG,QAC/Bd,KAAKgB,gBAAkB,KACvBhB,KAAKe,QAAS,GAGhBf,KAAKK,OAAO3D,IAAIsD,KAAKM,UACnB2G,YAAuB/G,IAAf6G,GACNG,KAAQH,EACRI,cAAiBnH,KAAKQ,gBAEtB2G,cAAiBnH,KAAKQ,eAExB4G,OAAO,EACPC,iBAAiB,IAChBxD,KAAK,SAACC,GACP,GAAmC,GAA/BA,EAAS/J,KAAKuN,OAAO/M,OAAa,CACpC,IAAMwJ,sCACJD,EAAS/J,KAAKuN,OAAOC,KAAK,MAC5BvD,QAAQC,MAAMF,GACa,OAAvBiD,EAAKvG,eAA0BuG,EAAKvG,cAAc+G,SAAS,UAC7DrK,OAAOsK,MAAM1D,GAGjBiD,EAAKrG,UAAUuD,QAAQJ,EAAS/J,MAChCiN,EAAKU,cAAc,UACnBV,EAAKjG,QAAS,GACb,SAAC+C,GACFkD,EAAKrG,UAAUgH,OAAO7D,MAQ1BhI,EAAQ8L,UACNC,YAAa,aACbC,gBAAiB,gBACjBC,KAAM,OACNC,IAAK,QAOPlM,EAAQC,OAASkM,QAAQlM,OAAO,aAC9BmM,EAAA,EAAmBnM,OAAOK,QAEbQ,MAAM,uBACrBd,EAAQC,OAAOoM,QAAQ,YAAarM,GAGpC6B,EAAA,ySCrkBA,IAAM7B,aA0BJ,SAAAA,EAAYsM,gGAASC,CAAArI,KAAAlE,GAUnBkE,KAAKsI,SAA6B,IAAnBF,EAAQG,OAcvBvI,KAAKwI,gBAAoCtI,IAAvBkI,EAAQI,WACxBJ,EAAQI,WAAa,KAQvBxI,KAAKyI,oBAA4CvI,IAA3BkI,EAASM,cAC7BN,EAAQM,cAAgB,KAO1B1I,KAAK2I,UAAYP,EAAQQ,UAAY,KAQrC5I,KAAK6I,oBAA4C3I,IAA3BkI,EAASU,cAC7BV,EAAQU,cAAgB,KAU1B9I,KAAK+I,WAAiC,IAArBX,EAAQY,SAOzBhJ,KAAKiJ,MAAQb,EAAQhM,KAOrB4D,KAAKkJ,WAAad,EAAQe,WAAa,KAOvCnJ,KAAKoJ,cAAgBhB,EAAQiB,aAO7BrJ,KAAKsJ,MAAQ9F,EAAA,EAAYC,OAAO2E,EAAQ1K,MASxCsC,KAAKuJ,gBA3HH,OAAAzN,EAAAnB,UA2JJ6O,cA3JI,WA4JF,OAAOxJ,KAAKwI,YA5JV1M,EAAAnB,UAmKJ8O,cAnKI,SAmKUjB,GACZxI,KAAKwI,WAAaA,GApKhB1M,EAAAnB,UAgTJ+O,MAhTI,WAiT2B,OAAzB1J,KAAKwJ,iBACPxJ,KAAKyJ,cAAc,MAEM,OAAvBzJ,KAAK0I,gBACP1I,KAAK0I,cAAgB,MAEI,OAAvB1I,KAAK8I,gBACP9I,KAAK8I,cAAgB,OAxTrBhN,EAAAnB,UA+TJgP,QA/TI,WAgUF3J,KAAKuJ,aAAarG,QAAQ0G,EAAA,GAC1B5J,KAAKuJ,aAAahP,OAAS,GAjUzBsP,EAAA/N,IAAAgO,IAAA,SAAApN,IAAA,WAsIF,OAAOsD,KAAKsI,SAtIV1F,IAAA,SA6IO2F,GACTvI,KAAKsI,QAAUC,KA9IbuB,IAAA,gBAAApN,IAAA,WA4KF,OAAOsD,KAAKyI,gBA5KV7F,IAAA,SAmLc8F,GAChB1I,KAAKyI,eAAiBC,KApLpBoB,IAAA,WAAApN,IAAA,WA4LF,OAAOsD,KAAK2I,WA5LV/F,IAAA,SAmMSgG,GACX5I,KAAK2I,UAAYC,KApMfkB,IAAA,gBAAApN,IAAA,WA4MF,OAAOsD,KAAK6I,gBA5MVjG,IAAA,SAmNckG,GAChB9I,KAAK6I,eAAiBC,KApNpBgB,IAAA,WAAApN,IAAA,WA8NF,OAAOsD,KAAK+I,aA9NVe,IAAA,OAAApN,IAAA,WAsOF,OAAOsD,KAAKiJ,SAtOVa,IAAA,YAAApN,IAAA,WA8OF,OAAOsD,KAAKkJ,cA9OVY,IAAA,eAAApN,IAAA,WAsPF,OAAOsD,KAAKoJ,iBAtPVU,IAAA,OAAApN,IAAA,WA8PF,OAAOsD,KAAKsJ,SA9PVQ,IAAA,QAAApN,IAAA,WAwQF,IAAIE,EAAQ,KAEN4L,EAAaxI,KAAKwJ,gBAClBd,EAAgB1I,KAAK0I,cACrBE,EAAW5I,KAAK4I,SAChBS,EAAerJ,KAAKqJ,aACpBP,EAAgB9I,KAAK8I,cAwB3B,OAtBIF,IACEA,IAAa9M,EAAQiO,aAAaC,SAClCpB,IAAa9M,EAAQmO,qBAAqBC,OACtB,OAAlBxB,GAA4C,OAAlBI,IAC5BlM,GACEgM,WACAF,gBACAW,eACAP,kBAIe,OAAfN,IACF5L,GACE4L,aACAI,WACAS,kBAMDzM,MAtSLd,KA0UNA,EAAQiO,cACNC,QAAS,KACTG,SAAU,IACVC,aAAc,IACdC,yBAA0B,KAC1BC,YAAa,IACbC,wBAAyB,KACzBC,KAAM,IACNC,aAAc,MAOhB3O,EAAQ4O,qBACNC,SAAU,WACVC,WAAY,aACZC,OAAQ,UAOV/O,EAAQmO,sBACNa,OAAQ,aACRZ,OAAQ,cACRa,KAAM,WACNC,OAAQ,cAIVrN,EAAA,kWCrWA,IAAM7B,cAiBJ,SAAAA,EAAYsM,gGAASC,CAAArI,KAAAlE,GAAA,IAAAyG,mKAAA0I,CAAAjL,KAEnBkL,EAAArQ,KAAAmF,KAAMoI,IASN7F,EAAK4I,kBAAoB/C,EAAQgD,kBAAoB,KAOrD7I,EAAK8I,iBAAmBjD,EAAQkD,iBAAmBC,EAAA,EAAoBC,IAQvEjJ,EAAKkJ,aAAerD,EAAQsD,aAAe,KAU3CnJ,EAAKoJ,WAAavD,EAAQwD,WAAa,KAWvCrJ,EAAKsJ,WAAiC,IAArBzD,EAAQ0D,SAOzBvJ,EAAKwJ,YAAc3D,EAAQtF,YAAc,KAOzCP,EAAKyJ,cAAgB5D,EAAQ6D,cAC3BnQ,EAAQoQ,uBAOV3J,EAAK4J,cAAgB/D,EAAQgE,cAAgB,YAS7C7J,EAAK8J,WAAajE,EAAQkE,WAAa,KAOvC/J,EAAKgK,eAAiBnE,EAAQoE,eAC5B1Q,EAAQ2Q,WAAWC,UAOrBnK,EAAKoK,SAAWvE,EAAQwE,SAAW9Q,EAAQ+Q,KAAK7E,IAShDzF,EAAKuK,YAAmC,IAAtB1E,EAAQ2E,UAS1BxK,EAAKyK,kBAA+C,IAA5B5E,EAAQ6E,gBAShC1K,EAAK2K,oBAAmD,IAA9B9E,EAAQ+E,kBAOlC5K,EAAK6K,wBAAmDlN,IAA9BkI,EAAQiF,kBAChCjF,EAAQiF,kBAAoB,GAO9B9K,EAAK+K,mBAAqBlF,EAAQmF,kBAMlChL,EAAKiL,gBAAkBpF,EAAQqF,eAM/BlL,EAAKmL,mBAAyCxN,IAAzBkI,EAAQuF,aAC3BvF,EAAQuF,aAAe,KAMzBpL,EAAKqL,gBAAkBxF,EAAQyF,eAO/BtL,EAAKuL,cAAgB1F,EAAQ2F,cAC3BjS,EAAQkS,aAAazL,EAAKgK,gBAO5BhK,EAAK0L,kBAAoB7F,EAAQ8F,kBAC/BpS,EAAQqS,iBAAiBC,QAO3B7L,EAAK8L,iBAAmBjG,EAAQkG,iBAC9BxS,EAAQyS,gBAAgBC,KAO1BjM,EAAKkM,QAAUrG,EAAQsG,OAOvBnM,EAAKoM,eAAiBvG,EAAQwG,eAC5B9S,EAAQ+S,cAAcC,IAQxBvM,EAAKwM,kBAA+C,IAA5B3G,EAAQ4G,gBAOhCzM,EAAK0M,QAAU7G,EAAQ8G,OAOvB3M,EAAK4M,WAAa/G,EAAQgH,UAO1B7M,EAAK8M,SAAWjH,EAAQkH,QAMxB,IAAM9K,KACN,GAAIjC,EAAKgN,WAAahN,EAAK+J,UACzB,KAAAkD,EAAuBjN,EAAK+J,UAA5BmD,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAAuC,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAjV,OAAA,MAAAwV,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAhT,MAAA,IAA5BsT,EAA4BH,EACjCG,EAASX,WACX/K,EAAO/J,KAAKyV,EAAS9T,OAK3B,IAAI+T,EAAY,KAChB,GAAI5N,EAAK6N,aAAe5L,EAAOjK,OAAQ,CACrC,IAAI8V,OAASnQ,EACTqC,EAAK8L,mBAAqBvS,EAAQyS,gBAAgBC,KACpD6B,EAAS,IAAIC,EAAA,EACJ/N,EAAK8L,mBAAqBvS,EAAQyS,gBAAgBgC,OAC3DF,EAAS,IAAIG,EAAA,GAEfhN,EAAA,EAAYC,OAAO4M,GACnBF,EAAY,IAAIM,EAAA,GACdC,UAAWnO,EAAKwL,aAChB4C,YAAanM,EACboM,UAAWP,IAQf9N,EAAKsO,WAAaV,EAElB,IAAIW,EAAY,KAnQG,OAoQfvO,EAAKwO,aAAevM,EAAOjK,QACzBgI,EAAKqM,gBAAkB9S,EAAQ+S,cAAcC,MAC/CgC,EAAY,IAAIE,EAAA,GACdxM,YAUNjC,EAAK0O,WAAaH,EAjRCvO,EAjBjB,gUAAA2O,CAAApV,EAAAoP,GAAApP,EAAAnB,UA+ZJwW,cA/ZI,WAgaF,OAAOjG,EAAAvQ,UAAMyW,YAhaXtV,EAAAnB,UAsaJ0W,cAtaI,SAsaUD,GACZlG,EAAAvQ,UAAM0W,cAANxW,KAAAmF,KAAoBoR,GACpBpR,KAAKsR,qCAxaHxV,EAAAnB,UAkwBJ4W,+BAlwBI,SAkwB2BC,GAC7B,OAAOxR,KAAKyR,kBAAoBD,EAAWC,kBACzCzR,KAAKoQ,aAAeoB,EAAWpB,aAC/BpQ,KAAKuP,WAAaiC,EAAWjC,WAC7BvP,KAAK0O,SAAW8C,EAAW9C,QAC3B1O,KAAK0R,4BAA4BF,IAvwBjC1V,EAAAnB,UAixBJgX,+BAjxBI,SAixB2BH,GAC7B,OAAOxR,KAAK4R,kBAAoBJ,EAAWI,kBACzC5R,KAAK+Q,aAAeS,EAAWT,aAC/B/Q,KAAKuP,WAAaiC,EAAWjC,WAC7BvP,KAAKkP,SAAWsC,EAAWtC,QAC3BlP,KAAK0R,4BAA4BF,IAtxBjC1V,EAAAnB,UAiyBJkX,qBAjyBI,SAiyBiBC,GAA4B,IAAvBC,EAAuBC,UAAAzX,OAAA,QAAA2F,IAAA8R,UAAA,IAAAA,UAAA,GAC/C,QAAUhS,KAAKiS,wBAAwBH,EAAKC,GAAexX,QAlyBzDuB,EAAAnB,UA8yBJsX,wBA9yBI,SA8yBoBH,GAA4B,IAAvBC,EAAuBC,UAAAzX,OAAA,QAAA2F,IAAA8R,UAAA,IAAAA,UAAA,GAE5CE,KAEN,GAAIlS,KAAKsM,UACP,KAAA6F,EAAuBnS,KAAKsM,UAA5B8F,EAAA1C,MAAAC,QAAAwC,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAtC,OAAAC,cAAuC,KAAAwC,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA5X,OAAA,MAAA+X,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAnC,QAAAC,KAAA,MAAAqC,EAAAD,EAAAzV,MAAA,IAA5BsT,EAA4BoC,EAC/BC,EAASrC,EAASzJ,cAClB+L,EAAStC,EAAStJ,sBACM1G,IAAXsS,GAAwBV,GAAOU,UACpBtS,IAAXqS,GAAwBT,GAAOS,KAGjCR,IAAiB7B,EAASX,WACzC2C,EAAWzX,KAAKyV,EAAS9T,OAK/B,OAAO8V,GAh0BLpW,EAAAnB,UA00BJ8X,iBA10BI,WA00BoC,IAAvBV,EAAuBC,UAAAzX,OAAA,QAAA2F,IAAA8R,UAAA,IAAAA,UAAA,GAEhCE,KAEN,GAAIlS,KAAKsM,UACP,KAAAoG,EAAuB1S,KAAKsM,UAA5BqG,EAAAjD,MAAAC,QAAA+C,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAA7C,OAAAC,cAAuC,KAAA+C,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAnY,OAAA,MAAAsY,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA1C,QAAAC,KAAA,MAAA4C,EAAAD,EAAAhW,MAAA,IAA5BsT,EAA4B2C,EAChCd,IAAiB7B,EAASX,WAC7B2C,EAAWzX,KAAKyV,EAAS9T,OAK/B,OAAO8V,GAt1BLpW,EAAAnB,UA+1BJmY,yBA/1BI,WAg2BFtP,EAAA,EAAYC,OAAOzD,KAAK4L,WACxB,IAAMsG,EAAalS,KAAKyS,mBAExB,OADAjP,EAAA,EAAYC,OAA6B,IAAtByO,EAAW3X,QACvB2X,EAAW,IAn2BhBpW,EAAAnB,UA42BJ2W,kCA52BI,WA62BF,IAAIrF,EAAenQ,EAAQoQ,uBAE3B,GAAIlM,KAAKoR,WACP,KAAA2B,EAAwB/S,KAAKoR,WAA7B4B,EAAAtD,MAAAC,QAAAoD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAlD,OAAAC,cAAyC,KAAAoD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAxY,OAAA,MAAA2Y,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA/C,QAAAC,KAAA,MAAAiD,EAAAD,EAAArW,MAAA,IAA9BuW,EAA8BD,EACvC,GAAIC,EAAUzV,OAAS0V,EAAA,EAAwB/T,SAAU,CACvD4M,EAAekH,EAAU/W,KACzB,QAKN4D,KAAKgM,cAAgBC,GAx3BnBnQ,EAAAnB,UAo4BJ+W,4BAp4BI,SAo4BwBF,GAC1B,IAAI6B,GAAQ,EAENC,EAAWtT,KAAKuT,iBAChBC,EAAYhC,EAAW+B,iBAE7B,IAAK,IAAMzJ,KAAOwJ,EAChB,GAAIA,EAASxJ,KAAS0J,EAAU1J,GAAM,CACpCuJ,GAAQ,EACR,MAIJ,GAAIA,EACF,IAAK,IAAMvJ,KAAO0J,EAChB,GAAIA,EAAU1J,KAASwJ,EAASxJ,GAAM,CACpCuJ,GAAQ,EACR,MAKN,OAAOA,GA15BLxJ,EAAA/N,IAAAgO,IAAA,mBAAApN,IAAA,WA8SF,OAAOsD,KAAKmL,mBA9SVvI,IAAA,SAqTiBwI,GACnBpL,KAAKmL,kBAAoBC,KAtTvBtB,IAAA,kBAAApN,IAAA,WA8TF,OAAOsD,KAAKqL,kBA9TVzI,IAAA,SAqUgB0I,GAClBtL,KAAKqL,iBAAmBC,KAtUtBxB,IAAA,cAAApN,IAAA,WA8UF,OAAOsD,KAAKyL,cA9UV7I,IAAA,SAqVY8I,GACd1L,KAAKyL,aAAeC,KAtVlB5B,IAAA,iBAAApN,IAAA,WA8VF,OAAOsD,KAAKwN,iBA9VV5K,IAAA,SAqWe6Q,GACjBzT,KAAKwN,gBAAkBiG,KAtWrB3J,IAAA,iBAAApN,IAAA,WA8WF,IAAIgX,EAAQ,KACNC,EAAQ3T,KAAKyN,eACbmG,EAAQ5T,KAAK6N,eAOnB,YANc3N,IAAVyT,IACFD,GACEG,IAAKD,EACLE,MAAOH,IAGJD,GAvXL9Q,IAAA,SA8Xe8Q,GACbA,GACF1T,KAAK6N,eAAiB6F,EAAMG,IAC5B7T,KAAKyN,eAAiBiG,EAAMI,QAE5B9T,KAAK6N,oBAAiB3N,EACtBF,KAAKyN,oBAAiBvN,MApYtB4J,IAAA,iBAAApN,IAAA,WA6YF,OAAOsD,KAAK4N,iBA7YVhL,IAAA,SAoZe6Q,GACjBzT,KAAK4N,gBAAkB6F,KArZrB3J,IAAA,WAAApN,IAAA,WAgbF,OAAOsD,KAAK6L,aAhbV/B,IAAA,YAAApN,IAAA,WAwbF,OAAOsD,KAAK2L,YAxbV/I,IAAA,SA+bUgJ,GACZ5L,KAAK2L,WAAaC,KAhchB9B,IAAA,eAAApN,IAAA,WAwcF,OAAOsD,KAAKgM,iBAxcVlC,IAAA,eAAApN,IAAA,WAgdF,OAAOsD,KAAKmM,iBAhdVrC,IAAA,YAAApN,IAAA,WAwdF,OAAOsD,KAAKqM,cAxdVvC,IAAA,gBAAApN,IAAA,WAgeF,OAAOsD,KAAKuM,kBAheVzC,IAAA,UAAApN,IAAA,WAweF,OAAOsD,KAAK2M,YAxeV7C,IAAA,YAAApN,IAAA,WAgfF,OAAOsD,KAAK8M,cAhfVhD,IAAA,kBAAApN,IAAA,WAwfF,OAAOsD,KAAKgN,oBAxfVlD,IAAA,oBAAApN,IAAA,WAggBF,OAAOsD,KAAKkN,sBAhgBVpD,IAAA,oBAAApN,IAAA,WAwgBF,OAAOsD,KAAKoN,sBAxgBVtD,IAAA,oBAAApN,IAAA,WAghBF,OAAOsD,KAAKsN,sBAhhBVxD,IAAA,eAAApN,IAAA,WAwhBF,OAAOsD,KAAK0N,iBAxhBV5D,IAAA,eAAApN,IAAA,WAgiBF,OAAOsD,KAAK8N,iBAhiBVhE,IAAA,mBAAApN,IAAA,WAwiBF,OAAOsD,KAAKiO,qBAxiBVnE,IAAA,kBAAApN,IAAA,WAgjBF,OAAOsD,KAAKqO,oBAhjBVvE,IAAA,SAAApN,IAAA,WAwjBF,OAAOsD,KAAKyO,WAxjBV3E,IAAA,gBAAApN,IAAA,WAgkBF,OAAOsD,KAAK2O,kBAhkBV7E,IAAA,kBAAApN,IAAA,WAwkBF,OAAOsD,KAAK+O,oBAxkBVjF,IAAA,SAAApN,IAAA,WAilBF,OAAOsD,KAAKiP,WAjlBVnF,IAAA,YAAApN,IAAA,WAylBF,OAAOsD,KAAKmP,cAzlBVrF,IAAA,UAAApN,IAAA,WAkmBF,OAAOsD,KAAKqP,YAlmBVvF,IAAA,mBAAApN,IAAA,WA8mBF,IAAM6L,KACAzF,EAAa9C,KAAK+L,gBAClBgI,EAAS/T,KAAKoL,qBAEpB,IAAK,IAAMtB,KAAOiK,EACI,OAAhBA,EAAOjK,QACe5J,IAApB4C,EAAWgH,IAA0C,OAApBhH,EAAWgH,KAC9CvB,EAAOuB,GAAOhH,EAAWgH,IAG3BvB,EAAOuB,GAAOiK,EAAOjK,GAIzB,OAAOvB,KA5nBLuB,IAAA,mBAAApN,IAAA,WA4oBF,OAA6B,OAAtBsD,KAAKyL,cACc,OAAxBzL,KAAKgU,kBA7oBLlK,IAAA,mBAAApN,IAAA,WA6pBF,OAA6B,OAAtBsD,KAAKyL,cACc,OAAxBzL,KAAKgU,kBA9pBLlK,IAAA,YAAApN,IAAA,WAwqBF,IAAI6S,GAAY,EAEhB,IAD2BvP,KAAK+Q,aAAe/Q,KAAKoQ,cAC1BpQ,KAAKsM,UAC7B,KAAA2H,EAAuBjU,KAAKsM,UAA5B4H,EAAAxE,MAAAC,QAAAsE,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAApE,OAAAC,cAAuC,KAAAsE,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA1Z,OAAA,MAAA6Z,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAjE,QAAAC,KAAA,MAAAmE,EAAAD,EAAAvX,MACrC,IAA2B,IADUwX,EACxB7E,UAAoB,CAC/BA,GAAY,EACZ,QAIN,OAAOA,KAlrBLzF,IAAA,cAAApN,IAAA,WA4rBF,YAAuBwD,IAAhBF,KAAK0O,UA5rBV5E,IAAA,qBAAApN,IAAA,WA4sBF,OAA2B,OAApBsD,KAAKoR,YACVpR,KAAKoQ,aACc,OAAnBpQ,KAAKsM,WACqB,IAA1BtM,KAAKsM,UAAU/R,SACiB,IAAhCyF,KAAKsM,UAAU,GAAGiD,aAhtBlBzF,IAAA,cAAApN,IAAA,WA2tBF,YAAuBwD,IAAhBF,KAAKkP,UA3tBVpF,IAAA,eAAApN,IAAA,WAouBF,YAAwBwD,IAAjBF,KAAKsP,WApuBVxF,IAAA,YAAApN,IAAA,WA4uBF,OAAOsD,KAAK6Q,cA5uBV/G,IAAA,YAAApN,IAAA,WAovBF,OAAOsD,KAAKiR,eApvBVnV,GAAwBuY,EAAA,GAq6B9BvY,EAAQwY,sBAAwB,SAAS5Q,GASvC,MANI,UAAU6Q,KAAK7Q,GACV5H,EAAQ+Q,KAAK9E,KAEbjM,EAAQ+Q,KAAK7E,KAYxBlM,EAAQoQ,uBAAyB,WAOjCpQ,EAAQ2Q,YACN+H,UAAW,YACX9H,UAAW,YACX+H,WAAY,cAQd3Y,EAAQ+Q,MACN7E,IAAK,MACLD,KAAM,QAQRjM,EAAQkS,cACN0G,UAAa,iCACbC,UAAa,yCACbC,WAAc,2BAQhB9Y,EAAQqS,kBACNC,QAAS,WAQXtS,EAAQyS,iBACNgC,KAAM,OACN/B,KAAM,QAQR1S,EAAQ+S,eACNC,IAAK,2BAIPnR,EAAA,oCClgCA,IAAM7B,GAWNA,oBAA8B,OAM9BA,wBAAkC,WAMlCA,uBAAiC,0BAMjCA,gBACE+Y,SAAU,gBACVC,2BAA4B,QAC5BC,0BAA2B,QAC3BC,SAAU,cACVC,cAAe,gBACfC,YAAa,cACbC,MAAO,QACPC,MAAO,QACPC,MAAO,WACPC,YAAa,cACbC,UAAW,YACXC,YAAa,cACbC,kBAAmB,qBAIrB9X,EAAA,4PCjDA+X,EAAAha,EAAA,KA8CMI,EAAU,SAAS4D,EAAWiW,GAwDlC,GAlDA3V,KAAK4V,SAAWD,EAMhB3V,KAAK6V,eAAY3V,EACbR,EAAUa,IAAI,yBAChBP,KAAK6V,UAAYnW,EAAUhD,IAAI,wBAQjCsD,KAAK8V,gBAAa5V,EACdR,EAAUa,IAAI,0BAChBP,KAAK8V,WAAapW,EAAUhD,IAAI,yBAMlCsD,KAAK+V,cAA6CJ,EAAQ,UAK1D3V,KAAKgW,kBAAqDL,EAAQ,kBAKlE3V,KAAKiW,uBAAiEN,EAAQ,yBAO9E3V,KAAKkW,eAAiB,KAOtBlW,KAAKmW,oBAEDzW,EAAUa,IAAI,mBAAoB,CACpC,IAAM6V,EAAiB1W,EAAUhD,IAAI,mBAAmB2Z,MAAM,KACxDC,EAAaF,EAAepb,QAC5BoK,EAASpF,KAAK4V,SAASU,GAC7B9S,EAAA,EAAY+S,eAAenR,GAC3BpF,KAAKkW,eAAiB9Q,EACtBpF,KAAKmW,iBAAmBC,OAExBpW,KAAKkW,eAAiB,KAOxBlW,KAAKwW,YAOLxW,KAAKyW,UAAY/W,EAAUhD,IAAI,qFASjCZ,EAAQnB,UAAU+b,cAAgB,SAASC,GACzC3W,KAAKwW,YAAcG,GAerB7a,EAAQnB,UAAUic,SAAW,SAASC,EAASC,GAC7C,IAAMC,EAAS/W,KAAKgX,SAASH,GACzBC,IACE9W,KAAKiX,gBAAgBJ,IACvBE,EAAOtc,KAAKuF,KAAKkX,kBAEnBH,EAAOI,QAAQnX,KAAKoX,cAAcP,KAEpCA,EAAQD,SAASG,IAWnBjb,EAAQnB,UAAUqc,SAAW,SAASH,GACpC,IACIQ,SAEJ,OAHarX,KAAKsX,QAAQT,IAIxB,KAAKU,EAAA,EAAiB1Z,YACpBwZ,EAAQrX,KAAKwX,oBAAoBX,GACjC,MACF,KAAKU,EAAA,EAAiBtZ,MACpBoZ,EAAQrX,KAAKyX,eAAeZ,GAC5B,MACF,KAAKU,EAAA,EAAiB3Z,OACtB,KAAK2Z,EAAA,EAAiBrZ,QACtB,KAAKqZ,EAAA,EAAiBpZ,UACpBkZ,EAAQrX,KAAK0X,iBAAiBb,GAC9B,MACF,KAAKU,EAAA,EAAiBnZ,KACpBiZ,EAAQrX,KAAK2X,cAAcd,GAM/BrT,EAAA,EAAYC,OAAO4T,EAAO,2BAS1B,OANIA,EAAMO,cAAgBlI,MACyB2H,GAEvCA,IAYdvb,EAAQnB,UAAU6c,oBAAsB,SAASX,GAC/C,IAAMgB,EAAc7X,KAAK8X,kBAAkBjB,GACrCkB,EAAY/X,KAAKgY,qBAAqBnB,GACtCoB,EAAcjY,KAAKkY,uBAAuBrB,GAC1CsB,EAAQnY,KAAKoY,qBAAqBvB,GAElCE,GAAU,IAAIsB,EAAA,GAClBC,OAAQ,IAAIC,EAAA,GACVJ,MAAOA,EACPK,MAAOX,OAILY,KAON,GANIR,GACFQ,EAAgBhe,KAAKuF,KAAK0Y,WAAW7B,IAEnCkB,GACFU,EAAgBhe,KAAKuF,KAAK2Y,gBAAgB9B,IAExCkB,GAAcE,EAAa,CAE7B,IAAMW,EAAiBH,EAAgBlR,KAAK,MAC5CwP,EAAOtc,KAAK,IAAI4d,EAAA,GACdQ,KAAM7Y,KAAK8Y,kBACTD,KAAMD,OAIZ,OAAO7B,GASTjb,EAAQnB,UAAU8c,eAAiB,SAASZ,GAC1C,IAAMkC,EAAO/Y,KAAKgZ,gBAAgBnC,GAC5BsB,EAAQnY,KAAKoY,qBAAqBvB,GAClCkB,EAAY/X,KAAKgY,qBAAqBnB,GACtCoB,EAAcjY,KAAKkY,uBAAuBrB,GAC1CE,GAAU,IAAIsB,EAAA,GAClBY,MAAO,IAAIC,EAAA,GACTC,OAAQJ,EACRK,KAAM,IAAIC,EAAA,GACRlB,MAAOA,SAKPM,KAON,GANIR,GACFQ,EAAgBhe,KAAKuF,KAAK0Y,WAAW7B,IAEnCkB,GACFU,EAAgBhe,KAAKuF,KAAK2Y,gBAAgB9B,IAExCkB,GAAcE,EAAa,CAE7B,IAAMW,EAAiBH,EAAgBlR,KAAK,MAI5CwP,EAAOtc,KAAK,IAAI4d,EAAA,GACdQ,KAAM7Y,KAAK8Y,kBACTD,KAAMD,EACNG,KANc,GAOdO,UAAWP,EAAQQ,EAAiBd,EAAgBle,OALpC,IAK2D,QAIjF,OAAOwc,GAWTjb,EAAQnB,UAAU6e,UAAY,SAAS3C,EAAS4C,GAC9C,IAAM7c,EAAQia,EAAQna,IAAI+c,GAC1B,YAAcvZ,IAAVtD,EACkB,iBAATA,GACDA,EAED4G,EAAA,EAAYkW,aAAa9c,QAGlC,GAYJd,EAAQnB,UAAUgf,UAAY,SAAS9C,EAAS4C,GAC9C,IAAM7c,EAAQia,EAAQna,IAAI+c,GAC1B,MAAoB,iBAAT7c,GACDA,EAED4G,EAAA,EAAYkW,aAAa9c,IAUpCd,EAAQnB,UAAU+c,iBAAmB,SAASb,GAC5C,IAAMgB,EAAc7X,KAAK8X,kBAAkBjB,GACrC+C,EAAU5Z,KAAK6Z,mBAAmBhD,GAClCsB,EAAQnY,KAAKoY,qBAAqBvB,GAClCkB,EAAY/X,KAAKgY,qBAAqBnB,GACtCoB,EAAcjY,KAAKkY,uBAAuBrB,GAG1CiD,EAAY3B,EAAM7a,QACxBwc,EAAU,GAAKF,EAEf,IAAMG,EAAS/Z,KAAKwZ,UAAU3C,EAASmD,EAAA,EAA4Bnb,QAE7DkY,GAAU,IAAIsB,EAAA,GAClBe,KAAM,IAAIC,EAAA,GACRlB,MAAO2B,IAETxB,OAAQ,IAAIC,EAAA,GACVJ,MAAOA,EACPK,MAAOX,OAGX,GAAII,GAAeF,EACjB,GAAIE,QAA0B/X,IAAX6Z,EAAsB,CAEvC,IAAME,EAAOja,KAAKka,cAAcrD,EAASkD,GACnCxf,EAAS4f,EAAA,EAAuBC,mBACpCH,EAAMja,KAAKwW,YAAaxW,KAAK8V,WAAY9V,KAAKgW,mBAEhDe,EAAOtc,KAAK,IAAI4d,EAAA,GACdgC,SAAUJ,EACVb,KAAM,IAAIC,EAAA,GACRlB,MAAO2B,IAETxB,OAAQ,IAAIC,EAAA,GACVJ,MAAOA,EACPK,MAAOX,IAETgB,KAAM7Y,KAAK8Y,kBACTD,KAAMte,EACN+f,OAASP,EAAS,IAAO,KAAO,IAAM,QAK1ChD,EAAOtc,KAAK,IAAI4d,EAAA,GACdgC,SAAU,IAAIE,EAAA,EAAYN,EAAKO,qBAC/B3B,KAAM7Y,KAAK8Y,kBACTD,KAAS7Y,KAAK+V,cAAcgE,EAAQ/Z,KAAK6V,WAAzC,IACAkD,KAAM,GACN0B,QAAmD,GAA1CC,KAAKC,KAAKZ,EAAS,IAAMW,KAAKE,GAAK,KAC5CtB,QAAmD,GAA1CoB,KAAKG,KAAKd,EAAS,IAAMW,KAAKE,GAAK,UAK5C7C,GACFhB,EAAOtc,KAAK,IAAI4d,EAAA,GACdQ,KAAM7Y,KAAK8Y,kBACTD,KAAM7Y,KAAK2Y,gBAAgB9B,GAC3ByC,SAAU,EACVwB,cAAc,WAIf,CAEL,IAAMrC,KAON,GANIR,GACFQ,EAAgBhe,KAAKuF,KAAK0Y,WAAW7B,IAEnCkB,GACFU,EAAgBhe,KAAKuF,KAAK2Y,gBAAgB9B,IAExCkB,GAAcE,EAAa,CAE7B,IAAMW,EAAiBH,EAAgBlR,KAAK,MAC5CwP,EAAOtc,KAAK,IAAI4d,EAAA,GACdQ,KAAM7Y,KAAK8Y,kBACTD,KAAMD,EACNkC,cAAc,QAMxB,OAAO/D,GASTjb,EAAQnB,UAAUgd,cAAgB,SAASd,GAEzC,OAAO,IAAIwB,EAAA,GACTQ,KAAM7Y,KAAK8Y,kBACTD,KAAM7Y,KAAK2Y,gBAAgB9B,GAC3BkC,KAAM/Y,KAAKgZ,gBAAgBnC,GAC3ByD,MAAOta,KAAK+a,iBAAiBlE,GAC7BsB,MAAOnY,KAAKoY,qBAAqBvB,GACjC2B,MAAOxY,KAAK8X,kBAAkBjB,QAWpC/a,EAAQnB,UAAUqgB,oBAAsB,SAASnE,GAE/C,IAAMoE,GAAS,IAAK,IAAK,IAAK,GACxBC,GAAQ,EAAG,IAAK,IAAK,GAErBnE,KAEAoE,EAAOtE,EAAQuE,cACrBpX,QAAQP,OAAO0X,GACf,IAAMzd,EAAOyd,EAAK7D,UAsDlB,MApDa,UAAT5Z,EACFqZ,EAAOtc,KACL,IAAI4d,EAAA,GACFY,MAAO,IAAIC,EAAA,GACTC,OAAQX,EACRY,KAAM,IAAIC,EAAA,GACRlB,MAAO+C,IAET5C,OAAQ,IAAIC,EAAA,GACVJ,MAAO8C,EACPzC,MAAOA,QAGX6C,OAAQC,QAIC,eAAT5d,GACFqZ,EAAOtc,KACL,IAAI4d,EAAA,GACFC,OAAQ,IAAIC,EAAA,GACVJ,MAAO8C,EACPzC,MAAOA,OAIbzB,EAAOtc,KACL,IAAI4d,EAAA,GACFC,OAAQ,IAAIC,EAAA,GACVJ,MAAO+C,EACP1C,MArCI,QA0CVzB,EAAOtc,KACL,IAAI4d,EAAA,GACFC,OAAQ,IAAIC,EAAA,GACVJ,MAAO+C,EACP1C,MAAOA,MAETY,KAAM,IAAIC,EAAA,GACRlB,OAAQ,IAAK,IAAK,IAAK,SAO/BpB,EAAOtc,KAAKuF,KAAKkX,gBAAe,KAG3BH,GAeTjb,EAAQnB,UAAUuc,eAAiB,SAASqE,GAC1C,IAAMC,OAAkCtb,IAApBqb,GAAgCA,EAE9CnT,GACJ6Q,MAAO,IAAIwC,EAAA,GACTtC,OAAQ,EACRuC,OAAQ,EACRpB,MAAOI,KAAKE,GAAK,EACjBxB,KAAM,IAAIC,EAAA,GACRlB,OAAQ,IAAK,IAAK,IAAK,MAEzBG,OAAQ,IAAIC,EAAA,GACVJ,OAAQ,EAAG,EAAG,EAAG,QA4CvB,OAvCIqD,IACFpT,EAAQiS,SAAW,SAASxD,GAC1B,IAAMsE,EAAOtE,EAAQuE,cAErB,GAAsB,SAAlBD,EAAK7D,UAAT,CAIA,IAAIqE,SACAC,KACAC,KACAxhB,SAAG+G,SAWP,GAVI+Z,aAAgBW,EAAA,EAClBD,EAAcV,EAAKY,iBACVZ,aAAgBa,EAAA,EACzBJ,EAAmBT,EAAKY,iBACfZ,aAAgBc,EAAA,EACzBJ,EAAcV,EAAKY,iBAAiB,GAC3BZ,aAAgBe,EAAA,IACzBP,EAAwBR,EAAKY,kBAG3BJ,EACF,IAAKthB,EAAI,EAAG+G,EAAKua,EAAsBphB,OAAQF,EAAI+G,EAAI/G,IACrDuhB,EAAmBA,EAAiBO,OAAOR,EAAsBthB,IAGrE,IAAKA,EAAI,EAAG+G,EAAKwa,EAAiBrhB,OAAQF,EAAI+G,EAAI/G,IAChDwhB,EAAcA,EAAYM,OAAOP,EAAiBvhB,IAGpD,OAAIwhB,EAAYthB,OACP,IAAI6hB,EAAA,EAAiBP,GAErBV,KAKN,IAAI9C,EAAA,EAAajQ,IAS1BtM,EAAQnB,UAAUsc,gBAAkB,SAASJ,GAC3C,IAAMwF,GACJ9E,EAAA,EAAiB1Z,YACjB0Z,EAAA,EAAiBrZ,QACjBqZ,EAAA,EAAiBpZ,WAEbT,EAAOsC,KAAKsX,QAAQT,GAC1B,OAAOyF,EAAA,EAAiBD,EAAW3e,IASrC5B,EAAQnB,UAAUyc,cAAgB,SAASP,GACzC,IACIQ,SAGJ,OAJarX,KAAKsX,QAAQT,IAKxB,KAAKU,EAAA,EAAiBtZ,MACpB,IAAM8a,EAAO/Y,KAAKgZ,gBAAgBnC,GAClCQ,EAAQ,IAAIgB,EAAA,GACVY,MAAO,IAAIC,EAAA,GACTC,OAAQJ,EAPC,EAQTK,KAAM,IAAIC,EAAA,GACRlB,OAAQ,IAAK,IAAK,IAAK,SAI7B,MACF,KAAKZ,EAAA,EAAiB1Z,YACtB,KAAK0Z,EAAA,EAAiB3Z,OACtB,KAAK2Z,EAAA,EAAiBrZ,QACtB,KAAKqZ,EAAA,EAAiBpZ,UACpB,IAAM0Z,EAAc7X,KAAK8X,kBAAkBjB,GAC3CQ,EAAQ,IAAIgB,EAAA,GACVC,OAAQ,IAAIC,EAAA,GACVJ,OAAQ,IAAK,IAAK,IAAK,GACvBK,MAAOX,EAAc0E,MAGzB,MACF,KAAKhF,EAAA,EAAiBnZ,KACpBiZ,EAAQ,IAAIgB,EAAA,GACVQ,KAAM7Y,KAAK8Y,kBACTD,KAAM7Y,KAAK2Y,gBAAgB9B,GAC3BkC,KAAM/Y,KAAKgZ,gBAAgBnC,GAC3ByD,MAAOta,KAAK+a,iBAAiBlE,GAC7B2B,MAAO+D,MAUf,OAFA/Y,EAAA,EAAYC,OAAO4T,EAAO,2BAEnBA,GAcTvb,EAAQ0gB,yBAA2B,SAAS3F,GAC1C,IAAM4F,EAAa5F,EAAQ6F,gBAI3B,cAHOD,EAAA,iBACAA,EAAW5F,EAAQ8F,0BACnBF,EAAA,mBACAA,GAQT3gB,EAAQnB,UAAUogB,iBAAmB,SAASlE,GAC5C,IAAMyD,GACJzD,EAAQna,IAAIsd,EAAA,EAA4B3b,OAE1C,OADAmF,EAAA,EAAYkW,aAAaY,GAClBA,GASTxe,EAAQnB,UAAUiiB,iBAAmB,SAAS/F,GAE5C,IAAMsB,EAAQ3U,EAAA,EAAYqZ,aAAahG,EAAQna,IAAIsd,EAAA,EAA4B1b,QAI/E,OAFAkF,EAAA,EAAYqZ,aAAa1E,GAElBA,GASTrc,EAAQnB,UAAUyd,qBAAuB,SAASvB,GAChD,OAAOiG,EAAA,EAAmB9c,KAAK4c,iBAAiB/F,KASlD/a,EAAQnB,UAAUge,gBAAkB,SAAS9B,GAC3C,IAAMza,EAAOoH,EAAA,EAAYqZ,aAAahG,EAAQna,IAAIsd,EAAA,EAA4Btb,OAE9E,OADA8E,EAAA,EAAYqZ,aAAazgB,GAClBA,GASTN,EAAQnB,UAAUkf,mBAAqB,SAAShD,GAC9C,OAAO7W,KAAK2Z,UAAU9C,EAASmD,EAAA,EAA4Bpb,UAS7D9C,EAAQnB,UAAUud,uBAAyB,SAASrB,GAClD,IAAIoB,EAAcpB,EAAQna,IAAIsd,EAAA,EAA4Blb,cAM1D,YALoBoB,IAAhB+X,EACFA,GAAc,EACkB,iBAAhBA,IAChBA,EAA+B,SAAhBA,GAEVzU,EAAA,EAAYuZ,cAAc9E,IAQnCnc,EAAQnB,UAAUqd,qBAAuB,SAASnB,GAChD,IAAIkB,EAAYlB,EAAQna,IAAIsd,EAAA,EAA4Brb,YAMxD,YALkBuB,IAAd6X,EACFA,GAAY,EACkB,iBAAdA,IAChBA,EAA2B,SAAdA,GAERvU,EAAA,EAAYuZ,cAAchF,IAQnCjc,EAAQnB,UAAUqe,gBAAkB,SAASnC,GAC3C,OAAO7W,KAAK2Z,UAAU9C,EAASmD,EAAA,EAA4Bjb,OAS7DjD,EAAQnB,UAAUmd,kBAAoB,SAASjB,GAC7C,OAAO7W,KAAK2Z,UAAU9C,EAASmD,EAAA,EAA4Bhb,SAc7DlD,EAAQnB,UAAUqiB,OAAS,SAASC,EAAUC,GAC5C,OAAQA,GACN,KAAKphB,EAAQqhB,WAAWC,IACtBpd,KAAKqd,UAAUJ,GACf,MACF,KAAKnhB,EAAQqhB,WAAWG,IACtBtd,KAAKud,UAAUN,KAcrBnhB,EAAQnB,UAAU0iB,UAAY,SAASJ,GACrC,IAAM5M,EAAS,IAAImN,EAAA,EAGnBxd,KAAKyd,QAAQR,EAAU5M,EADN,aADA,wBAYnBvU,EAAQnB,UAAU4iB,UAAY,SAASN,GACrC,IAAM5M,EAAS,IAAIqN,EAAA,EAGnB1d,KAAKyd,QAAQR,EAAU5M,EADN,aADA,yCAgBnBvU,EAAQnB,UAAU8iB,QAAU,SAASR,EAAU5M,EAAQsN,EAAUC,GAAc,IAAArb,EAAAvC,KACvE6d,OAA4B3d,IAAjB0d,EAA6BA,EAAe,aAIvDE,KACFC,SACJd,EAAS/Z,QAAQ,SAAC2T,GAChBkH,EAAQ,IAAIC,EAAA,EAAUnH,EAAQ6F,iBAC9Bna,EAAKqU,SAASmH,GAAO,GACrBD,EAAOrjB,KAAKsjB,KAGd,IAAME,EAAeje,KAAKwW,aACxB0H,eAAgB,YAChBC,kBAAmBne,KAAKwW,gBAGpBzc,EAAOsW,EAAO+N,cAAcN,EAAQG,GAC1Cje,KAAKyW,UACH1c,EAAM4jB,EAAaE,EADrB,mBAaF/hB,EAAQnB,UAAUme,iBAAmB,SAAS1Q,GAC5C,GAAIA,EAAQkS,MAAO,CACjB,IACM+D,QAD0Bne,IAAlBkI,EAAQkS,MAAsBlS,EAAQkS,MAAQ,GACnCI,KAAKE,GAAK,IACnCxS,EAAQiW,SAAWA,SACZjW,EAAQkS,MAgBjB,OAbAlS,EAAQkW,MAAQ,UAAalW,EAAQ2Q,MAAQ,IAA9B,KAAsC,SAASxR,KAAK,KAE/Da,EAAQ+P,QACV/P,EAAQgR,KAAO,IAAIC,EAAA,GAAalB,MAAO/P,EAAQ+P,QAAU,EAAG,EAAG,EAAG,YAC3D/P,EAAQ+P,OAGjB/P,EAAQkQ,OAAS,IAAIC,EAAA,GACnBJ,OAAQ,IAAK,IAAK,IAAK,GACvBK,MAAOpQ,EAAQoQ,OAAS,WAEnBpQ,EAAQoQ,MAER,IAAI9C,EAAA,EAAYtN,IAYzBtM,EAAQnB,UAAU+d,WAAa,SAAS7B,GAEtC,IAAMwD,EAAWxD,EAAQuE,cACzB5X,EAAA,EAAYC,OAAO4W,EAAU,6BAE7B,IAAIkE,EAAU,GAEd,GAAIlE,aAAoB4B,EAAA,EACtB,GAAIjc,KAAKsX,QAAQT,KAAaU,EAAA,EAAiB3Z,OAAQ,CACrD,IAAMmc,EAAS/Z,KAAKwZ,UAAU3C,EAASmD,EAAA,EAA4Bnb,QACnE2E,EAAA,EAAYkW,aAAaK,GACzB,IAAME,EAAOja,KAAKka,cAAcrD,EAASkD,GAEzCwE,EAAUC,EAAA,EAA6BC,yBACrCxE,EAAMja,KAAKwW,YAAaxW,KAAK6V,UAAW7V,KAAK8V,WAAY9V,KAAKgW,kBAAmBhW,KAAK+V,oBAExFwI,EAAUpE,EAAA,EAAuBuE,iBAC/BrE,EAAUra,KAAKwW,YAAaxW,KAAK8V,WAAY9V,KAAKgW,wBAEjD,GAAIqE,aAAoByB,EAAA,EAC7ByC,EAAUpE,EAAA,EAAuBC,mBAC/BC,EAAUra,KAAKwW,YAAaxW,KAAK8V,WAAY9V,KAAKgW,wBAC/C,GAAIqE,aAAoBE,EAAA,EAC7B,GAA4B,OAAxBva,KAAKkW,eACPqI,EAAUpE,EAAA,EAAuBwE,kBAC/BtE,EAAUra,KAAK6V,UAAW7V,KAAKiW,4BAC5B,CACL,IAAM4F,EAAcxB,EAAS0B,iBACvB6C,EAAO5e,KAAKmW,iBAAiB7Y,MAAM,GACzCshB,EAAKzH,QAAQ0E,GACb0C,EAAUve,KAAKkW,eAALhb,MAAA8E,KAAuB4e,GAIrC,OAAOL,GAWTziB,EAAQnB,UAAU2c,QAAU,SAAST,GACnC,IAAMwD,EAAWxD,EAAQuE,cACzB5X,EAAA,EAAYC,OAAO4W,EAAU,8BAE7B,IAAI3c,SA4BJ,OA1BI2c,aAAoBE,EAAA,EAEpB7c,EADEmZ,EAAQna,IAAIsd,EAAA,EAA4Bvb,SACnC8Y,EAAA,EAAiBnZ,KAEjBmZ,EAAA,EAAiBtZ,MAEjBoc,aAAoB+B,EAAA,EAC7B1e,EAAO6Z,EAAA,EAAiBxZ,YACfsc,aAAoB4B,EAAA,EAE3Bve,EADEmZ,EAAQna,IAAIsd,EAAA,EAA4Bzb,WACnCgZ,EAAA,EAAiB3Z,OACfiZ,EAAQna,IAAIsd,EAAA,EAA4Bxb,cAC1C+Y,EAAA,EAAiBpZ,UAEjBoZ,EAAA,EAAiBrZ,QAEjBmc,aAAoB6B,EAAA,EAC7Bxe,EAAO6Z,EAAA,EAAiBvZ,cACfqc,aAAoByB,EAAA,EAC7Bpe,EAAO6Z,EAAA,EAAiB1Z,YACfwc,aAAoB2B,EAAA,IAC7Bte,EAAO6Z,EAAA,EAAiBzZ,mBAG1B0F,EAAA,EAAYC,OAAO/F,EAAM,0BAElBA,GAaT5B,EAAQnB,UAAUkkB,gBAAkB,SAAShI,EAAS/R,EACpDga,GAEA,IAAMC,OAAkC7e,IAApB4e,EAAgCA,EAAkB,IAChE/F,EAAOjU,EAAIka,UACjBxb,EAAA,EAAYyb,YAAYlG,GACxB,IAAMmG,EAAOpa,EAAIqa,UACXC,EAASF,EAAKG,gBAAgBtG,GAC9BsB,EAAWxD,EAAQuE,cAEzB,IAAKf,EAASiF,iBAAiBF,GAAS,CACtC,IAAMG,EAAYL,EAAKM,YACvBhc,EAAA,EAAYyb,YAAYM,GAExB,IAAIE,SAEFA,EADEpF,aAAoByB,EAAA,EACNzB,EAASqF,gBAAgB,IAChCrF,aAAoB4B,EAAA,EACb5B,EAASsF,mBAAmB5D,iBACnC1B,aAAoBE,EAAA,EACbF,EAAS0B,iBAET6D,EAAA,EAAmBvF,EAASwF,aAG9CX,EAAKY,SACHC,OAAQR,EACRS,SAAUjB,IAEVgB,OAAQN,EACRO,SAAUjB,MAahBjjB,EAAQnB,UAAUuf,cAAgB,SAASrD,EAASkD,GAClD,IAAMM,EAAWxD,EAAQuE,cAEnBgE,EAAS/E,EAASwF,YAClB1G,GAAUiG,EAAO,GAAKA,EAAO,IAAM,EAEnCW,EAASH,EAAA,EAAmBvF,EAASwF,aAErC7a,EAAI0V,KAAKC,KAAKZ,EAAS,IAAMW,KAAKE,GAAK,KAAOzB,EAC9C8G,GAAKvF,KAAKG,KAAKd,EAAS,IAAMW,KAAKE,GAAK,KAAOzB,EAC/C+G,GAAYlb,EAAI+a,EAAO,GAAIE,EAAIF,EAAO,IAC5C,OAAO,IAAIjE,EAAA,GAAkBiE,EAAQG,KAUvCpkB,EAAQnB,UAAUwlB,wBAA0B,SAAStJ,GACnD,IAAM5K,EAAe4K,EAAQ8F,kBACvByD,KACA3D,EAAa5F,EAAQ6F,gBAC3B,IAAK,IAAM5S,KAAO2S,EACZ3S,IAAQmC,IACVmU,EAAqBtW,GAAO2S,EAAW3S,IAG3C,OAAOsW,GASTtkB,EAAQnB,UAAU0lB,0BAA4B,SAASxJ,GACrD,IAAM5K,EAAe4K,EAAQ8F,kBACvBF,EAAa5F,EAAQ6F,gBAC3B,IAAK,IAAM5S,KAAO2S,EACZ3S,IAAQmC,GACV4K,EAAQjU,IAAIkH,OAAK5J,IAavBpE,EAAQqhB,YAKNC,IAAK,MAKLE,IAAK,QAOPxhB,EAAQC,OAASkM,QAAQlM,OAAO,qBAC9BukB,EAAA,EAAoBlkB,KACpBmkB,EAAA,EAAgBnkB,QAEH+L,QAAQ,oBAAqBrM,GAG5C6B,EAAA,mCCxjCAA,EAAA,EAtBgB,SAAS6iB,EAAaC,GAOpCzgB,KAAK0gB,UAAY,WACf,OAAOF,EAAYC,IAQrBzgB,KAAK2gB,UAAY,SAASC,GACxBJ,EAAYC,GAAsBG,0FCnCtCC,EAAAnlB,EAAA,IAGMI,GAgBNA,QAAkB,SAASue,GACzB,IAAIyG,SAaJ,OAZIzG,aAAoB0G,EAAA,GACtBD,EAAY,IAAIE,EAAA,OACNC,YAAY5G,GACbA,aAAoB6G,EAAA,GAC7BJ,EAAY,IAAIK,EAAA,OACNC,iBAAiB/G,GAClBA,aAAoBwG,EAAA,GAC7BC,EAAY,IAAIO,EAAA,OACNC,cAAcjH,GAExByG,EAAYzG,EAEPyG,GAOThlB,SAAmB,WACjB,OAAiD,GAA1CylB,UAAUC,UAAUC,QAAQ,YAA6D,GAA1CF,UAAUC,UAAUC,QAAQ,WASpF3lB,iBAA2B,SAAS4lB,GAClC,OAAqB,GAAdA,EAAInnB,OAAJ,IAAsBmnB,EAAQA,GAQvC5lB,cAAwB,SAAS6lB,GAC/B,IAAMhlB,EAAIglB,EAAI,GACRC,EAAID,EAAI,GACRE,EAAIF,EAAI,GACd,GAAIhlB,IAAU,IAAJA,IAAYilB,IAAU,IAAJA,IAAYC,IAAU,IAAJA,GAC5C,MAAMC,WAAWnlB,EAAX,IAAgBilB,EAAhB,IAAqBC,EAArB,+BAKR,UAHa/lB,EAAQimB,iBAAiBplB,EAAEqlB,SAAS,KACpClmB,EAAQimB,iBAAiBH,EAAEI,SAAS,KACpClmB,EAAQimB,iBAAiBF,EAAEG,SAAS,MASnDlmB,kBAA4B,SAASmmB,GACnC,IAAMC,KACN,GAAID,EACF,KACAzS,EADcyS,EAAYE,UAAU,GAAG9L,MAAM,KAC7C5G,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAA0B,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAjV,OAAA,MAAAwV,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAhT,MAAA,IAAfwlB,EAAerS,EAClBsS,EAAgBD,EAAKX,QAAQ,KACnC,GAAIY,GAAiB,EAAG,CACtB,IAAMjmB,EAAOgmB,EAAKD,UAAU,EAAGE,GACzBzlB,EAAQwlB,EAAKD,UAAUE,EAAgB,GAC7CH,EAAUI,mBAAmBlmB,IAASkmB,mBAAmB1lB,QAEzDslB,EAAUE,GAAQ,IAIxB,OAAOF,GAQTpmB,kBAA4B,SAASomB,GACnC,IAAMK,KACN,IAAK,IAAMzY,KAAOoY,EAAW,CAC3B,IAAMtlB,EAAQslB,EAAUpY,GACxByY,EAAU9nB,KAAQ+nB,mBAAmB1Y,GAArC,IAA6C0Y,mBAAmB5lB,IAElE,OAAO2lB,EAAUhb,KAAK,MASxBzL,gBAA0B,SAAS2mB,GACjC,OAAOC,EAAA,EAAiCD,IAAUC,EAAA,EAA8BD,KAIlF9kB,EAAA,qCC9GA,IAAM7B,EAAU,aAUhBA,EAAQnB,UAAUgoB,YAAc,SAAS5e,KAWzCjI,EAAQnB,UAAUioB,KAAO,SAAS7lB,GACbiD,KAAK6iB,kBAAkB9lB,GAC/BmG,QAAQlD,KAAK2iB,YAAa3iB,OAUvClE,EAAQnB,UAAUsJ,MAAQ,SAASF,GACjC/D,KAAK4iB,KAAK5iB,KAAK6iB,kBAAkB9e,EAASjI,EAAQ+Q,KAAKiW,SASzDhnB,EAAQnB,UAAUooB,KAAO,SAAShf,GAChC/D,KAAK4iB,KAAK5iB,KAAK6iB,kBAAkB9e,EAASjI,EAAQ+Q,KAAKmW,eASzDlnB,EAAQnB,UAAUsoB,QAAU,SAASlf,GACnC/D,KAAK4iB,KAAK5iB,KAAK6iB,kBAAkB9e,EAASjI,EAAQ+Q,KAAKqW,WASzDpnB,EAAQnB,UAAUwoB,KAAO,SAASpf,GAChC/D,KAAK4iB,KAAK5iB,KAAK6iB,kBAAkB9e,EAASjI,EAAQ+Q,KAAKuW,WAezDtnB,EAAQnB,UAAUkoB,kBAAoB,SAAS9lB,EAAQsmB,GACrD,IAAMC,KACFC,EAAY,KACVC,EAAc1nB,EAAQ+Q,KAAKmW,YAiCjC,MA/BsB,iBAAXjmB,EACTumB,EAAW7oB,MACTgpB,IAAK1mB,EACLW,UAAmBwC,IAAbmjB,EAAyBA,EAAWG,IAEnC9T,MAAMC,QAAQ5S,GACvBA,EAAOmG,QAAQ,SAACugB,GACQ,iBAAX1mB,EACTwmB,GACEE,IAAKA,EACL/lB,UAAmBwC,IAAbmjB,EAAyBA,EAAWG,IAG5CD,EAAYE,OACKvjB,IAAbmjB,IACFE,EAAU7lB,KAAO2lB,IAGrBC,EAAW7oB,KAAK8oB,IACfvjB,OAEHujB,EAAYxmB,OACKmD,IAAbmjB,IACFE,EAAU7lB,KAAO2lB,QAEInjB,IAAnBqjB,EAAU7lB,OACZ6lB,EAAU7lB,KAAO8lB,GAEnBF,EAAW7oB,KAAK8oB,IAGXD,GAQTxnB,EAAQ+Q,MAKNiW,MAAO,QAKPE,YAAa,cAKbE,QAAS,UAKTE,QAAS,WAIXzlB,EAAA,+CC7JA+lB,EAAAhoB,EAAA,IAaMI,EAAU,SAAS4B,GAAmB,IAAbimB,EAAa3R,UAAAzX,OAAA,QAAA2F,IAAA8R,UAAA,GAAAA,UAAA,MAE1C0R,EAAA,EAAc7oB,KAAKmF,KAAMtC,GAKzBsC,KAAK2jB,OAASA,GAIhBC,EAAA,EAAgB9nB,EAAS4nB,EAAA,GAGzB/lB,EAAA,0FC3BAkmB,EAAAnoB,EAAA,IAmCMI,EAAU,WAMdkE,KAAK8jB,2BAML9jB,KAAK+jB,WAML/jB,KAAKgkB,QAAU,IAAIC,EAAA,GACjBC,iBAAiB,IAOnBlkB,KAAKmkB,OAAS,IAAIC,EAAA,GAChBC,OAAQrkB,KAAKgkB,QACb3M,MAAOrX,KAAKskB,eAAejnB,KAAK2C,MAChCukB,sBAAsB,EACtBC,wBAAwB,KAW5B1oB,EAAQnB,UAAU8pB,WAAa,SAAS5N,EAAS6N,GAC/ClhB,EAAA,EAAYC,OAAOihB,GAAc,GACjClhB,EAAA,EAAYC,OAAOihB,EAAa1kB,KAAK+jB,QAAQxpB,QAC7C,IAAMoqB,EAAa1jB,EAAA,EAAc4V,GAASmL,WAC1ChiB,KAAK8jB,wBAAwBa,GAAcD,EAC3C1kB,KAAK+jB,QAAQW,GAAYzH,SAAS0H,GAAc9N,EAChD7W,KAAKgkB,QAAQS,WAAW5N,IAS1B/a,EAAQnB,UAAUiqB,cAAgB,SAAS/N,EAAS6N,GAClDlhB,EAAA,EAAYC,OAAOihB,GAAc,GACjClhB,EAAA,EAAYC,OAAOihB,EAAa1kB,KAAK+jB,QAAQxpB,QAC7C,IAAMoqB,EAAa1jB,EAAA,EAAc4V,GAASmL,kBACnChiB,KAAK8jB,wBAAwBa,UAC7B3kB,KAAK+jB,QAAQW,GAAYzH,SAAS0H,GACzC3kB,KAAKgkB,QAAQY,cAAc/N,IAQ7B/a,EAAQnB,UAAUkqB,MAAQ,SAASH,GACjClhB,EAAA,EAAYC,OAAOihB,GAAc,GACjClhB,EAAA,EAAYC,OAAOihB,EAAa1kB,KAAK+jB,QAAQxpB,QAC7C,IAAMiH,EAAQxB,KAAK+jB,QAAQW,GAC3B,IAAK,IAAMC,KAAcnjB,EAAMyb,SAC7Bjd,KAAK4kB,cAAcpjB,EAAMyb,SAAS0H,GAAaD,GAEjDlhB,EAAA,EAAYC,OAAOqhB,EAAA,EAActjB,EAAMyb,YAQzCnhB,EAAQnB,UAAUoqB,SAAW,WAC3B,OAAO/kB,KAAKmkB,QAQdroB,EAAQnB,UAAUqqB,kBAAoB,WACpC,IAAMN,EAAa1kB,KAAK+jB,QAAQxpB,OAKhC,OAJAyF,KAAK+jB,QAAQtpB,MACXwqB,cAAepB,EAAA,EACf5G,cAEK,IAAIiI,EAAA,EAAsBllB,KAAM0kB,IAQzC5oB,EAAQnB,UAAUwqB,KAAO,SAASrgB,GAChC9E,KAAKmkB,OAAOiB,OAAOtgB,IAUrBhJ,EAAQnB,UAAUic,SAAW,SAASS,EAAOqN,GAC3ClhB,EAAA,EAAYC,OAAOihB,GAAc,GACjClhB,EAAA,EAAYC,OAAOihB,EAAa1kB,KAAK+jB,QAAQxpB,QAC7CyF,KAAK+jB,QAAQW,GAAYO,cAA0B,OAAV5N,EACvCwM,EAAA,EAAawB,gBAAkB3qB,OAAAmpB,EAAA,EAAAnpB,CAAgB2c,IAUnDvb,EAAQnB,UAAU2pB,eAAiB,SAASzN,EAASyO,GACnD,IAAMX,EAAa1jB,EAAA,EAAc4V,GAASmL,WAC1Cxe,EAAA,EAAYC,OAAOkhB,KAAc3kB,KAAK8jB,yBACtC,IAAMY,EAAa1kB,KAAK8jB,wBAAwBa,GAEhD,OADc3kB,KAAK+jB,QAAQW,GACdO,cAAcpO,EAASyO,KAOtCxpB,EAAQC,OAASkM,QAAQlM,OAAO,yBAC9BmpB,EAAA,EAAsBnpB,OAAOK,QAEhB+L,QAAQ,wBAAyBrM,GAGhD6B,EAAA,kVC/KA,IAAM7B,cASJ,SAAAA,EAAYsM,gGAASC,CAAArI,KAAAlE,GAEnBsM,EAAQ1K,KAAO6nB,EAAA,EAAwBlmB,SAFpB,IAAAkD,mKAAA0I,CAAAjL,KAInBwlB,EAAA3qB,KAAAmF,KAAMoI,IAIAqU,EAAarU,EAAQqd,sBARR,OAcnBljB,EAAKmjB,SAAW,IAAIC,EAAA,EAAUlJ,GAM9Bla,EAAKqjB,QAAU,IAAIC,EAAA,EAMnBtjB,EAAKujB,qBAAsB,EAM3BvjB,EAAKwjB,mBAAoB,EAMzBxjB,EAAKyjB,2BAA6B,KAElCzjB,EAAKgH,aAAa9O,KAChBwrB,EAAA,EACE1jB,EAAKmjB,SADP,UAEYnjB,EAAKsU,QAAQ8F,kBACvBpa,EAAK2jB,6BAHP3jB,IAQFA,EAAK4jB,6BAjDc5jB,EATjB,gUAAA2O,CAAApV,EAAA0pB,GAAA1pB,EAAAnB,UA2EJ8O,cA3EI,SA2EUjB,GACZxI,KAAK8lB,qBAAsB,EAC3BN,EAAA7qB,UAAM8O,cAAN5O,KAAAmF,KAAoBwI,GAEfxI,KAAK+lB,mBACR/lB,KAAKmmB,6BAGPnmB,KAAKomB,0BAELpmB,KAAK8lB,qBAAsB,GArFzBhqB,EAAAnB,UAiHJurB,6BAjHI,WAkHF,IAAIlmB,KAAK8lB,oBAAT,CAIA9lB,KAAK+lB,mBAAoB,EAEzB,IAAM1L,EAAWra,KAAK0lB,SAAStK,cAE7Bpb,KAAKwI,WADH6R,EACgBra,KAAK4lB,QAAQS,cAAchM,GAE3B,KAGpBra,KAAKomB,0BAELpmB,KAAK+lB,mBAAoB,IAjIvBjqB,EAAAnB,UA0IJ2rB,sBA1II,SA0IkBC,GACpB,IAAMlM,EAAW7W,EAAA,EAAYgjB,iBAC3BD,EAAIE,OAAQC,EAAA,GAEd1mB,KAAK+lB,mBAAoB,EACzB/lB,KAAKwI,WAAaxI,KAAK4lB,QAAQS,cAAchM,GAC7Cra,KAAK+lB,mBAAoB,GAhJvBjqB,EAAAnB,UAuJJwrB,2BAvJI,WAwJF,IAAI9L,EAAW,KACf,GAAIra,KAAKwI,WAAY,CAEnB,IAAMA,EAAahF,EAAA,EAAYqZ,aAAa7c,KAAKwI,YACjD6R,EAAWra,KAAK4lB,QAAQe,aAAane,GAEvCxI,KAAKqa,SAAWA,GA9Jdve,EAAAnB,UAsKJyrB,wBAtKI,WAyKsC,OAApCpmB,KAAKgmB,6BACPC,EAAA,EAAuBjmB,KAAKgmB,4BAC5BhmB,KAAKgmB,2BAA6B,MAIpC,IAAM3L,EAAWra,KAAK0lB,SAAStK,cAC3Bf,IACFra,KAAKgmB,2BAA6BC,EAAA,EAChC5L,EACA,SACAra,KAAKsmB,sBACLtmB,QArLF6J,EAAA/N,IAAAgO,IAAA,UAAApN,IAAA,WAqEF,OAAOsD,KAAK0lB,YArEV5b,IAAA,WAAApN,IAAA,WA+FF,OAAOsD,KAAK0lB,SAAStK,eAAiB,MA/FpCxY,IAAA,SAsGSyX,GACXra,KAAK0lB,SAASkB,YAAYvM,OAvGxBve,GAAwB+qB,EAAA,GA6L9BlpB,EAAA,oICxMAmpB,EAAAprB,EAAA,KA4BMI,EAAU,SAAS6D,EAAIF,EAAOsnB,GAMlC/mB,KAAKI,IAAMT,EAMXK,KAAKK,OAASZ,EAOdO,KAAKgnB,sBAAwBD,2GAO/BjrB,EAAQmrB,UAAY,YAMpBnrB,EAAQorB,cAAgB,SAkBxBprB,EAAQnB,UAAU4J,oBAAsB,SAAS4iB,EAC/CC,EAAkBC,EAAcC,EAAgBC,EAAUC,EAAYC,GAEtE,IAAMxgB,GACJygB,OAAUL,EACVM,OAAUP,GAERQ,SACAL,IACFtgB,EAAA,KAAiBsgB,GAEfD,IACFrgB,EAAA,WAAuBqgB,EAEvBM,EAAeN,EAAeO,QAAQ,aAAc,SAEtD,IAAMxD,EAAS,IAAIyD,EAAA,GACjBpkB,IAAKyjB,EACLlgB,OAAQA,EACR8gB,WAAYH,EACZI,YAAaP,IAMf,OAJID,GACFnD,EAAO4D,aAAaT,GAGf,IAAIU,EAAA,GAAc7D,YAY3BvoB,EAAQnB,UAAUwtB,kCAAoC,SACpD3W,EAAYiW,GAEZ,IAAM/jB,EAAM8N,EAAWtC,OACvB1L,EAAA,EAAYC,OAAOC,GAEnB,IAAMwO,EAAaV,EAAWiB,mBAAmBlL,KAAK,KAChDwgB,EAAavW,EAAWhF,cACxBlI,EAAYkN,EAAWpF,aAGvBzJ,EAAQ3C,KAAKuE,oBACjBb,EACAwO,EACA5N,EACAyjB,OACA7nB,OACAA,EACAunB,GASF,OALA9kB,EAAMylB,WAAW5W,EAAW6W,SAG5B1lB,EAAMC,IAAI,kBAAmB4O,EAAW8W,KAEjC3lB,GAmBT7G,EAAQnB,UAAUgJ,iCAAmC,SAAS4kB,EAAiBC,EAAWC,EAAeC,GACvG,IAAMC,EAAS,IAAIC,EAAA,EACbjmB,EAAQ,IAAIkmB,EAAA,GAChBC,QAAS9oB,KAAKgnB,wBAEVrnB,EAAKK,KAAKI,IAEhB,OAAOJ,KAAKK,OAAO3D,IAAI6rB,GAAkBnhB,OAAO,IAAOvD,KAAK,SAACC,GAC3D,IAAI1I,SAIJ,GAHI0I,EAAS/J,OACXqB,EAASutB,EAAOI,KAAKjlB,EAAS/J,OAE5BqB,EAAQ,CACV,IAAMgN,EAAU1N,OAAAsuB,EAAA,EAAAtuB,CAAwBU,GACtCwI,UAAW6kB,EACXT,YAAa,YACbrlB,MAAO6lB,IAEThlB,EAAA,EAAYC,OAAO2E,GACnB,IAAMic,EAAS,IAAI2E,EAAA,EAAoD5gB,GACnEsgB,IAAmBO,EAAA,EAAcP,IACnCrE,EAAO6E,iBAAiBR,GAE1B/lB,EAAMwmB,UAAU9E,GAGhB,IAAM7f,EAASpJ,EAAA,eACTY,EAAIotB,EAAA,EAAa5kB,EAAQ,SAAC6kB,EAAKC,EAAOrmB,GAAb,OAAuBomB,EAAA,YAAqBb,IAG3E,OAFA7lB,EAAMC,IAAI,qBAAsB5G,EAAA,OAEzB2D,EAAGuE,QAAQvB,GAEpB,OAAOhD,EAAGgI,OAAH,wCAAkD4gB,MAe7DzsB,EAAQnB,UAAU4uB,oCAAsC,SACtDC,EAAcC,EAAUf,GAGxB,IAAMtgB,EAAU1N,OAAAsuB,EAAA,EAAAtuB,CAAwB8uB,GACtCxB,YAAa,YACbrlB,MAAO8mB,EAAA,aAGTjmB,EAAA,EAAYC,OAAO2E,GACnB,IAAMic,EAAS,IAAI2E,EAAA,EACsB5gB,GAMzC,OAJIsgB,IAAmBO,EAAA,EAAcP,IACnCrE,EAAO6E,iBAAiBR,GAGnB,IAAIG,EAAA,GACTa,mBAAsBD,EAAA,MACtBX,QAASxN,IACT+I,OAAQA,KAaZvoB,EAAQnB,UAAU2K,iBAAmB,SAASqkB,GAC5C,IAAMnoB,EAAQ,IAAIooB,EAAA,EAIlB,OAHID,GACFnoB,EAAMqoB,UAAUF,GAEXnoB,GAcT1F,EAAQnB,UAAUmvB,gBAAkB,SAAShlB,EAAKilB,GAChD,IACIvoB,SAcJ,OAfesD,EAAIklB,gBAAgBC,YAE5BC,WAAW/jB,KAAK,SAACgkB,GACtB,OAAIA,EAAcztB,IAAIZ,EAAQmrB,aAAe8C,IAC3CvoB,EAAuC2oB,GAChC,KAKN3oB,KACHA,EAAQxB,KAAKsF,oBACP1C,IAAI9G,EAAQmrB,UAAW8C,GAC7BjlB,EAAIslB,SAAS5oB,IAERA,GAWT1F,EAAQnB,UAAU0vB,cAAgB,SAAS1nB,GACzC,OAAO3C,KAAKsqB,eAAe3nB,OAY7B7G,EAAQnB,UAAU2vB,eAAiB,SAAS3nB,EAAOM,GAAO,IAAAV,EAAAvC,KACpD2C,aAAiBinB,EAAA,EACDjnB,EAAMsnB,YACd/mB,QAAQ,SAAClH,GACjBuG,EAAK+nB,eAAetuB,EAAGiH,KAGrBA,EAAMwe,QAAQ9e,GAAS,GACzBM,EAAMxI,KAAKkI,GAGf,OAAOM,GAaTnH,EAAQnB,UAAU4vB,eAAiB,SAAS/B,EAAWhkB,GAAQ,IAAA0B,EAAAlG,KACzDwqB,EAAQ,KAWZ,OAVAhmB,EAAO2B,KAAK,SAACxD,GACX,GAAIA,aAAiBinB,EAAA,EAAc,CACjC,IAAMa,EAAY9nB,EAAMsnB,YAAYC,WACpCM,EAAQtkB,EAAKqkB,eAAe/B,EAAWiC,QAC9B9nB,EAAMjG,IAAI,mBAAqB8rB,IACxCgC,EAAQ7nB,GAEV,QAAS6nB,IAGJA,GAWT1uB,EAAQnB,UAAU+vB,iBAAmB,SAAS/nB,GAE5C,IAAIe,SACEqT,EAASpU,EAAMjG,IAAI,sBACzB,QAAewD,IAAX6W,EAAsB,CACxB,IAAM4T,EAAY5T,EAAO,GAAP,eACA7W,IAAdyqB,IACFjnB,EAAMinB,EAAU,GAAV,MAGV,OAAOjnB,GAeT5H,EAAQnB,UAAUiwB,gBAAkB,SAASlnB,EAC3C8kB,EAAWqC,EAAWC,EAAgBC,EAAiBC,GACvD,GAAKtnB,EAAL,CAGA,IAAMue,GACJyF,OAAU,YACVuD,aAAe,EACfC,QAAW,MACXC,QAAW,QACXC,QAAW,mBACXC,MAAS7C,GAcX,YAZkBtoB,IAAd2qB,IACF5I,EAAA,MAAuB4I,QAEF3qB,IAAnB4qB,IACF7I,EAAA,KAAsB6I,OACE5qB,IAApB6qB,IACF9I,EAAA,MAAuB8I,QAEA7qB,IAArB8qB,IACF/I,EAAA,OAAwB+I,IAGrBlE,EAAA,EAAmBpjB,EAAKue,KAUjCnmB,EAAQnB,UAAU2wB,eAAiB,SAAS3oB,EAAOmC,GACjD,IAAKnC,EAAM4oB,aACT,OAAO,EAGT,IAAMC,EAAoB1mB,EAAIqa,UAAUsM,gBACxC,OAAOD,EAAoB7oB,EAAM+oB,oBAC7BF,EAAoB7oB,EAAMgpB,oBAQhC7vB,EAAQnB,UAAUixB,gBAAkB,SAASjpB,GAC3C,IAAMqhB,EAAUrhB,EAAMkpB,YACtBroB,EAAA,EAAYC,OACVugB,aAAmB8D,EAAA,GACnB9D,aAAmB8H,EAAA,GAErB,IAAMzH,EAA8DL,EAC9D/c,EAASod,EAAO0H,YACtB9kB,EAAOnL,EAAQorB,eAAiBxM,KAAKsR,SACrC3H,EAAO4D,aAAahhB,IAStBnL,EAAQnB,UAAUsxB,8BAAgC,SAASC,EAASC,GAC5DD,aAAmBtC,EAAA,GAGAsC,EAAQjC,YAChB/mB,QAAQ,SAAAkpB,GAAA,OAAcA,EAAWC,UAAUF,MAc9DrwB,EAAQnB,UAAU2xB,oBAAsB,SAAS3pB,EAAO4pB,EAAOhF,GAE7D,GAAIgF,EAAMhyB,QAAU,EAClBoI,EAAMylB,YAAW,OACZ,CACLzlB,EAAMylB,YAAW,GACjB,IAAM/D,EAA4C1hB,EAAMkpB,YACpDtE,EACFlD,EAAO4D,cAAcN,OAAU4E,EAAOntB,KAAQmoB,IAE9ClD,EAAO4D,cAAcN,OAAU4E,MAYrCzwB,EAAQnB,UAAU6xB,kBAAoB,SAAS7pB,GAC7C,OACEA,EAAMjG,IAAI,mBAOdZ,EAAQC,OAASkM,QAAQlM,OAAO,sBAC7BoM,QAAQ,kBAAmBrM,GAC3Bc,MAAM,2BAA4B0e,KAGrC3d,EAAA,8EChfA8uB,EAAA/wB,EAAA,KAsBMI,EAAU,SAAS4wB,EAAQC,EAAYC,GAAQ,IAAArqB,EAAAvC,KAE7C6sB,OAA4C3sB,IAAnC0sB,EAAA,qBAMf5sB,KAAK6sB,OAASA,EAEd,IAAMC,EAAWF,EAAA,cAMjB5sB,KAAK+sB,WAAaJ,EAMlB3sB,KAAKyc,cAMLzc,KAAKgtB,OAAS,MAMdhtB,KAAKoC,KAEDyqB,EACFH,EAAOO,OAAOH,EAAU,SAAClM,EAAQsM,GAC/B3qB,EAAKH,KAAOwe,KAGd5gB,KAAKoC,KAA+BsqB,EAAOS,MAAML,GACjDtpB,EAAA,EAAYC,YAAqBvD,IAAdF,KAAKoC,OAG1B,IAAMgrB,EAAUR,EAAA,iBACV9nB,EAA6B4nB,EAAOS,MAAMC,GAChD5pB,EAAA,EAAYC,YAAevD,IAAR4E,GAMnB9E,KAAKqtB,OAASX,EAAOY,QAAP,cAMdttB,KAAKuB,YAEDvB,KAAKqtB,QACPrtB,KAAKqtB,OAAO9rB,SAAS9G,KAAKuF,MAG5B0sB,EAAOa,IAAI,WAAY,WACrB,GAAIhrB,EAAK8qB,OAAQ,CACf,IAAM/D,EAAQ/mB,EAAK8qB,OAAO9rB,SAASkgB,QAArBlf,GACdiB,EAAA,EAAYC,OAAO6lB,GAAS,GAC5B/mB,EAAK8qB,OAAO9rB,SAAS9F,OAAO6tB,EAAO,MAQvCtpB,KAAKwtB,IAAMvsB,EAAA,EAAcjB,MAMzBA,KAAKytB,MAAQZ,EAAS,EAAI7sB,KAAKqtB,OAAOI,MAAQ,EAK9Cf,EAAA,IAAgB1sB,KAAKwtB,IACrBd,EAAA,MAAkB1sB,KAAKytB,MAMvBztB,KAAK8E,IAAMA,EAEX,IAAI4oB,EAAgBd,EAAA,uBACpB,QAAsB1sB,IAAlBwtB,EAA6B,CAC/B,IAAMC,EAAoBf,EAAA,2BACpBgB,EAAmBlB,EAAOS,MAAMQ,GACtCnqB,EAAA,EAAYqZ,aAAa+Q,GACzBF,EAAgBE,EAelB,GAbApqB,EAAA,EAAYC,YAAyBvD,IAAlBwtB,GAMnB1tB,KAAK0tB,cAAgBA,EAMrB1tB,KAAK2C,MAAQ,MACRkqB,EAAQ,CACX,IAAMlqB,EAAQ+pB,EAAOS,MAAMO,GAAgBG,SAAY7tB,QAAU,KAC7D2C,IACFa,EAAA,EAAYC,OACVd,aAAiB8pB,EAAA,GAAgB9pB,aAAiBmrB,EAAA,GAEpD9tB,KAAK2C,MAAQA,GAQjB3C,KAAK+tB,YAAc,KAEf/tB,KAAK2C,QACPqrB,EAAA,EAAiBC,aAAajuB,KAAK2C,MAAO+pB,GAC1CsB,EAAA,EAAiBrrB,MAAM3C,KAAK2C,OAE5BsjB,EAAA,EAAgBjmB,KAAK2C,MAAO,iBAAkB,WAC5CJ,EAAKwqB,WAAWmB,WAAW,yBAA3B3rB,MAIJ,IAAI4rB,EAAgBvB,EAAA,uBACpB,QAAsB1sB,IAAlBiuB,EAA6B,CAC/B,IAAMC,EAAoBxB,EAAA,2BAC1BuB,EAAgBzB,EAAOS,MAAMiB,QAGTluB,IAAlBiuB,GACF3qB,EAAA,EAAYqZ,aAAasR,GAO3BnuB,KAAKmuB,cAAgBA,EAGjBA,GACFzB,EAAOS,MAAMgB,GAAgBE,UAAa3B,EAAQmB,SAAY7tB,OAGhE0sB,EAAA,cAA0B1sB,4FAS5BlE,EAAQnB,UAAU2zB,SAAW,WAC3B,OAAOtuB,KAAKgtB,QAWdlxB,EAAQnB,UAAU4zB,SAAW,SAASC,EAAOC,GAAe,IAAAvoB,EAAAlG,KAC1D,GAAIwuB,IAAUxuB,KAAKgtB,OAAnB,CAGAhtB,KAAK0uB,kBAAkBF,GAGnBxuB,KAAKqtB,QACPrtB,KAAKqtB,OAAOsB,eAGd,IAAMC,EAAe5uB,KAAK6sB,OAAS7sB,KAAKuB,UAAYzF,EAAQ+yB,mBAAmB7uB,aAEzDE,IAAlBuuB,GAA+BA,IACjCG,EAAa1rB,QAAQ,SAAC4rB,GACpB5oB,EAAK6mB,WAAWmB,WAAW,uBAA3BhoB,EAAyD4oB,OAS/DhzB,EAAQnB,UAAU+zB,kBAAoB,SAASF,GAAO,IAAAxnB,EAAAhH,KAEpDA,KAAKgtB,OAAmB,OAAVwB,EAAiB,KAAO,MAEtCxuB,KAAKuB,SAAS2B,QAAQ,SAACC,GACrBA,EAAMurB,kBAAkB1nB,EAAKgmB,WAUjClxB,EAAQnB,UAAUg0B,aAAe,WAC/B,IAAMI,EAAW/uB,KAAKgvB,oBAClBhvB,KAAKgtB,SAAW+B,IAGpB/uB,KAAKgtB,OAAS+B,EACV/uB,KAAKqtB,QACPrtB,KAAKqtB,OAAOsB,iBAUhB7yB,EAAQnB,UAAUq0B,kBAAoB,WACpC,QAA2B9uB,IAAvBF,KAAKoC,KAAKb,SACZ,OAAOvB,KAAKgtB,OAEd,IAAIiC,SACAC,SAUJ,OATAlvB,KAAKuB,SAAS4E,KAAK,SAAChD,GAElB,GADA8rB,EAAa9rB,EAAM6rB,oBACfE,GACEA,IAAuBD,EACzB,OAAOA,EAAa,gBAGxBC,EAAqBD,IAEhBA,GASTnzB,EAAQnB,UAAUw0B,aAAe,SAASC,GACxC,IAAMzsB,EAAQ3C,KAAK2C,MACbmC,EAAM9E,KAAK8E,IACjB,GAAKnC,EAGL,YAAYzC,IAARkvB,EAOKtqB,EAAImlB,YAAYC,WAAWzI,QAAQ9e,IAAU,OAN/CysB,EAGHtqB,EAAIslB,SAASznB,GAFbmC,EAAIuqB,YAAY1sB,KAetB7G,EAAQnB,UAAU20B,cAAgB,WAChC,OAAOtvB,KAAK+tB,aAQdjyB,EAAQnB,UAAU40B,cAAgB,SAAS/d,GACzCxR,KAAK+tB,YAAcvc,GAWrB1V,EAAQ+yB,mBAAqB,SAAShB,GAEpC,IADA,IAAI2B,EAAO3B,GACH2B,EAAKnC,OAAOR,QAClB2C,EAAOA,EAAKnC,OAEd,OAAOmC,GAOT1zB,EAAQ2zB,iBACNC,KAAM,OACNC,KAAM,OACNC,QAAS,WAkBX9zB,EAAQnB,UAAUk1B,mBAAqB,SAASC,GAI9C,OAFiBA,EAAQ9vB,OAASlE,EAAQ2zB,gBAAgBG,SAGxD,KAAK9zB,EAAQ2zB,gBAAgBC,KAC3B,OAAO,EACT,KAAK5zB,EAAQ2zB,gBAAgBE,KAC3B,OAAO,EACT,KAAK7zB,EAAQ2zB,gBAAgBG,QAC3B,IAAK,IAAIv1B,EAAI,EAAGA,EAAI2F,KAAKuB,SAAShH,SAAUF,EAAG,CAG7C,GAFc2F,KAAKuB,SAASlH,GACTw1B,mBAAmBC,GAEpC,OAAO,EAGX,OAAO,EACT,QACEtsB,EAAA,EAAYkB,KAAK,qBAQvB5I,EAAQC,OAASkM,QAAQlM,OAAO,+BACjBg0B,WAAW,0BAA2Bj0B,GAGrD6B,EAAA,iJC1YAqyB,EAAAt0B,EAAA,IA2BMI,EAAU,SAAVA,IAAsF,IAAnEsM,EAAmE4J,UAAAzX,OAAA,QAAA2F,IAAA8R,UAAA,GAAAA,UAAA,MAE1Fie,EAAA,EAAyBp1B,KAAKmF,MAC5BkwB,YAAap0B,EAAQq0B,eAQvBnwB,KAAKowB,oBAAsB,KAQ3BpwB,KAAKqwB,oBAAsB,KAQ3BrwB,KAAKswB,uBAAyB,KAQ9BtwB,KAAKuwB,uBAAyB,KAQ9BvwB,KAAKwwB,4BAA8B,KAQnCxwB,KAAKywB,cAAgB,KAMrBzwB,KAAK0wB,YAAc,KAQnB1wB,KAAK2wB,SAAWvoB,EAAQuoB,SAQxB3wB,KAAK4wB,UAAYxoB,EAAQwoB,UAOzB5wB,KAAK6wB,yBAAqD3wB,IAA/BkI,EAAQ0oB,oBAAmC1oB,EAAQ0oB,mBAM9E9wB,KAAK+wB,cACoB7wB,IAArBkI,EAAQ2oB,SACV/wB,KAAK+wB,SAAW3oB,EAAQ2oB,UAExB/wB,KAAK+wB,SAAWC,SAASC,cAAc,QACvCjxB,KAAK+wB,SAASG,YAAe,2BAQ/BlxB,KAAKmxB,gBAAkB,KAOvBnxB,KAAKoxB,qBAAuB,KAE5B,IAAM/Z,OAA0BnX,IAAlBkI,EAAQiP,MAAsBjP,EAAQiP,OAClD,IAAI2Y,EAAA,GACF5W,KAAM,IAAIiY,EAAA,GACRlZ,MAAO,+BAGX,IAAI6X,EAAA,GACF1X,OAAQ,IAAIgZ,EAAA,GACVnZ,MAAO,QACPK,MAAO,MAGX,IAAIwX,EAAA,GACF1X,OAAQ,IAAIgZ,EAAA,GACVnZ,MAAO,UACPK,MAAO,OAUbxY,KAAKuxB,aAAe,IAAIC,EAAA,GACtBnN,OAAQ,IAAIoN,EAAA,EACZpa,MAAOA,IAQTrX,KAAK0xB,iBAAmB1xB,KAAK2xB,sBAAsBvpB,EAAQwpB,YACzD5xB,KAAKuxB,aAAa1F,aAMpB7rB,KAAK6xB,0CAA2C,EAEhDC,EAAA,EAAgB9xB,KAAK0xB,iBAAkB,gBAAiB1xB,KAAK+xB,mCAAoC/xB,MACjG8xB,EAAA,EAAgB9xB,KAAK0xB,iBAAkB,YAAa1xB,KAAKgyB,aAAchyB,MACvE8xB,EAAA,EAAgB9xB,KAAK0xB,iBAAkB,UAAW1xB,KAAKiyB,WAAYjyB,MAEnE8xB,EAAA,EAAgB9xB,KAAM,gBAAiBA,KAAKkyB,aAAclyB,OAG5DiB,EAAA,EAAgBnF,EAASm0B,EAAA,GAmBzBn0B,EAAQ4iB,iBAAmB,SAASyT,EAASxb,EAAYia,EAAWvgB,GAClE,IAAM8K,EAAuCgX,EAAQpU,QAAQqU,UAAUzb,EAAY,aAEnF,OAAOtG,EADMqK,KAAK2X,IAAIC,EAAA,EAAiBnX,GAAOxE,WAAc,eACxC,KAAM,SAAUia,IAYtC90B,EAAQy2B,uBAAyB,SAASC,EAAQ5B,EAAWvgB,GAE3D,OAAOA,EADMqK,KAAKE,GAAKF,KAAK+X,IAAID,EAAOE,YAAa,GAChC,KAAM,SAAU9B,IAatC90B,EAAQse,mBAAqB,SAASuY,EAAYhc,EAAYia,EAAWvgB,GAGvE,IAFA,IAAI9V,EAAS,EACPshB,EAAc8W,EAAW5W,iBACtB1hB,EAAI,EAAG+G,EAAKya,EAAYthB,OAAS,EAAGF,EAAI+G,IAAM/G,EAAG,CACxD,IAAMu4B,EAAKC,EAAA,EAAiBhX,EAAYxhB,GAAIsc,EAAY,aAClDmc,EAAKD,EAAA,EAAiBhX,EAAYxhB,EAAI,GAAIsc,EAAY,aAC5Dpc,GAAU+3B,EAAA,EAAqBM,EAAIE,GAErC,OAAOziB,EAAO9V,EAAQ,IAAK,OAAQq2B,IAYrC90B,EAAQ6iB,kBAAoB,SAASoU,EAAOpC,EAAUtgB,EAAQ2iB,GAC5D,OAAO3iB,EAAO0iB,EAAMhX,iBAAkB4U,EAAUqC,IAWlDl3B,EAAQq0B,aAAe,SAAS5J,GAC9B,GAAgB,eAAZA,EAAI7oB,MAAyB6oB,EAAI0M,SACnC,OAAO,EAGT,IAAMC,EAAiC,OAAvBlzB,KAAKywB,cAAyBzwB,KAAK+wB,SAAW/wB,KAAK0wB,YAQnE,OANI1wB,KAAK6wB,sBACPsC,EAAA,EAAqBnzB,KAAKowB,qBAC1BpwB,KAAKowB,oBAAoBgD,YAAYF,GACrClzB,KAAKqwB,oBAAoBgD,YAAY9M,EAAI+M,cAGpC,GAOTx3B,EAAQnB,UAAU44B,mBAAqB,WACrC,OAAOvzB,KAAK0xB,kBAcd51B,EAAQnB,UAAUg3B,sBAAwB,SAASta,EAAOgN,KAM1DvoB,EAAQnB,UAAUyqB,OAAS,SAAStgB,GAElCmrB,EAAA,EAAyBt1B,UAAUyqB,OAAOvqB,KAAKmF,KAAM8E,GAErD9E,KAAKuxB,aAAanM,OAAOtgB,GAEzB,IAAM0uB,EAAUxzB,KAAK0xB,iBAAiB+B,SACtB,OAAZD,GACFA,EAAQE,kBAAkB1zB,KAAK0xB,kBAGrB,OAAR5sB,GACFA,EAAI6uB,eAAe3zB,KAAK0xB,mBAU5B51B,EAAQnB,UAAUq3B,aAAe,SAASzL,GAAK,IAAAhkB,EAAAvC,KAC7CA,KAAKywB,cAAgBlK,EAAI1P,SAAW0P,EAAI5C,OAAO9M,QAC/C7W,KAAKuxB,aAAa1F,YAAYhH,OAAM,GACpC7kB,KAAK4zB,wBAEL,IAAMvZ,EAAWra,KAAKywB,cAAcrV,cAEpC5X,EAAA,EAAYC,YAAoBvD,IAAbma,GACnBra,KAAKmxB,gBAAkBW,EAAA,EAAgBzX,EAAU,SAAU,WACzD9X,EAAKsxB,cAAc,SAACtV,EAASuV,GACb,OAAVA,IACFvxB,EAAK+tB,uBAAuByD,UAAYxV,EACxChc,EAAKiuB,4BAA8BsD,OAKzC9zB,KAAKoxB,qBAAuBU,EAAA,EAAgB9xB,KAAKyzB,SAAU,cAAe,WACxElxB,EAAKguB,uBAAuB8C,YAAY9wB,EAAKiuB,gCAUjD10B,EAAQnB,UAAUs3B,WAAa,SAAS1L,GACtCvmB,KAAKswB,uBAAuB0D,UAAUC,IAAI,uBAC1Cj0B,KAAKuwB,uBAAuB2D,WAAW,GAAI,IAE3C,IAAMzR,EAAQ,IAAI0R,EAAA,EAAgB,cAAetd,QAAS7W,KAAKywB,gBAC/DzwB,KAAK0H,cAAc+a,GACnBziB,KAAKywB,cAAgB,KACrBzwB,KAAKo0B,oBAOPt4B,EAAQnB,UAAUy5B,iBAAmB,WACN,OAAzBp0B,KAAKmxB,iBAA0D,OAA9BnxB,KAAKoxB,uBACxCU,EAAA,EAAuB9xB,KAAKmxB,iBAC5BW,EAAA,EAAuB9xB,KAAKoxB,sBAC5BpxB,KAAKmxB,gBAAkB,KACvBnxB,KAAKoxB,qBAAuB,OAQhCt1B,EAAQnB,UAAU05B,mBAAqB,WACrCr0B,KAAKs0B,qBACDt0B,KAAK6wB,sBACP7wB,KAAKowB,oBAAsBY,SAASC,cAAc,OAClDjxB,KAAKowB,oBAAoB4D,UAAUC,IAAI,WACvCj0B,KAAKqwB,oBAAsB,IAAIkE,EAAA,GAC7BrI,QAASlsB,KAAKowB,oBACdoE,QAAS,GAAI,GACbC,YAAa,gBAEfz0B,KAAKyzB,SAASiB,WAAW10B,KAAKqwB,uBASlCv0B,EAAQnB,UAAU25B,mBAAqB,WACjCt0B,KAAK6wB,sBACP7wB,KAAKyzB,SAASkB,cAAc30B,KAAKqwB,qBACA,OAA7BrwB,KAAKowB,qBACPpwB,KAAKowB,oBAAoBwE,WAAWC,YAAY70B,KAAKowB,qBAEvDpwB,KAAKowB,oBAAsB,KAC3BpwB,KAAKqwB,oBAAsB,OAS/Bv0B,EAAQnB,UAAUi5B,sBAAwB,WACxC5zB,KAAK80B,wBACL90B,KAAKswB,uBAAyBU,SAASC,cAAc,OACrDjxB,KAAKswB,uBAAuB0D,UAAUC,IAAI,WAC1Cj0B,KAAKswB,uBAAuB0D,UAAUC,IAAI,wBAC1Cj0B,KAAKuwB,uBAAyB,IAAIgE,EAAA,GAChCrI,QAASlsB,KAAKswB,uBACdkE,QAAS,GAAI,IACbC,YAAa,gBACbM,WAAW,IAEb/0B,KAAKyzB,SAASiB,WAAW10B,KAAKuwB,yBAQhCz0B,EAAQnB,UAAUm6B,sBAAwB,WACJ,OAAhC90B,KAAKswB,yBACPtwB,KAAKswB,uBAAuBsE,WAAWC,YAAY70B,KAAKswB,wBACxDtwB,KAAKswB,uBAAyB,KAC9BtwB,KAAKuwB,uBAAyB,KAC9BvwB,KAAKwwB,4BAA8B,OAQvC10B,EAAQnB,UAAUu3B,aAAe,WAC/B,IAAM3pB,EAASvI,KAAK0gB,YACpB1gB,KAAK6xB,0CAA2C,EAChD7xB,KAAK0xB,iBAAiB/Q,UAAUpY,GAChCvI,KAAK6xB,0CAA2C,EAC3C7xB,KAAKyzB,WAGNlrB,EACGvI,KAAKuwB,yBACRvwB,KAAK4zB,wBACL5zB,KAAKq0B,uBAGPr0B,KAAKuxB,aAAa1F,YAAYhH,OAAM,GACpC7kB,KAAKyzB,SAASkB,cAAc30B,KAAKuwB,wBACjCvwB,KAAK80B,wBACL90B,KAAKs0B,qBACLt0B,KAAKo0B,sBAcTt4B,EAAQnB,UAAUk5B,cAAgB,SAASpxB,KAO3C3G,EAAQnB,UAAUq6B,kBAAoB,WACpC,OAAOh1B,KAAKswB,wBAWdx0B,EAAQnB,UAAUo3B,mCAAqC,WACjD/xB,KAAK6xB,0CACP7xB,KAAK2gB,UAAU3gB,KAAK0xB,iBAAiBhR,cAKzC/iB,EAAA,+CC9fAs3B,EAAAv5B,EAAA,KAKMI,EAAUmM,QAAQlM,OAAO,yBAoB/BD,EAAQo5B,QAAU,SAASvf,GACzB,IAAMwf,EAAexf,EAAQ,UACvByf,EAAW,SAASC,GACxB,IAAMxc,EAAOsc,EAAaE,EAAO,GACjC,OAAOxc,SAAwBA,EAAS,IAG1C,OADAuc,EAAA,WAAwB,EACjBA,GAPTt5B,EAAQo5B,4BAURp5B,EAAQsJ,OAAO,cAAetJ,EAAQo5B,SAsBtCp5B,EAAQw5B,OAAS,SAASC,GACxB,IAAMC,EAAUD,EAAQE,eAwDxB,OAjDe,SAASC,EAAQC,GAC9B,IAAMC,EAAWJ,EAAQK,UACnBC,EAAaN,EAAQO,YAK3B,QAJsB71B,IAAlBy1B,IACFA,EAAgB,GAGdD,IAAWpa,IACb,MAAO,IACF,GAAIoa,KAAW,IACpB,MAAO,KACF,GAAe,IAAXA,EAET,MAAO,IAET,IAAMM,EAAON,EAAS,EACtBA,EAAShb,KAAK2X,IAAIqD,GAElB,IAAMO,EAAaN,EAAgBjb,KAAKwb,MAAMxb,KAAKyb,IAAIT,GAAUhb,KAAKyb,IAAI,KAAO,EAC3EC,EAAS1b,KAAK+X,IAAI,GAAIwD,GAC5BP,EAAShb,KAAK2b,MAAMX,EAASU,GAC7B,IAAIE,EAAU,GACRC,EAAO7b,KAAKwb,MAAMR,EAASU,GAEjC,GAAIH,EAAa,EAAG,CAGlB,IAFA,IAAIO,KAAgBd,EAEbc,EAAWj8B,OAAS07B,GACzBO,MAAiBA,EAGnB,IADAF,EAAUE,EAAWrU,UAAUqU,EAAWj8B,OAAS07B,GACZ,MAAhCK,EAAQA,EAAQ/7B,OAAS,IAC9B+7B,EAAUA,EAAQnU,UAAU,EAAGmU,EAAQ/7B,OAAS,GAMpD,IAFA,IAAMk8B,KACFC,KAAcH,EACXG,EAASn8B,OAAS,GAAG,CAC1B,IAAM+uB,EAAQoN,EAASn8B,OAAS,EAChCk8B,EAAOtf,QAAQuf,EAASvU,UAAUmH,IAClCoN,EAAWA,EAASvU,UAAU,EAAGmH,GAInC,OAFAmN,EAAOtf,QAAQuf,IAEPV,EAAO,IAAM,IAAMS,EAAOlvB,KAAKquB,IAClB,IAAnBU,EAAQ/7B,OAAe,GAAKu7B,EAAaQ,KAtD/Cx6B,EAAQw5B,2BA4DRx5B,EAAQsJ,OAAO,aAActJ,EAAQw5B,QAwBrCx5B,EAAQ66B,WAAa,SAAShhB,GAC5B,IAAMwf,EAAexf,EAAQ,cACvBihB,GAAkB,GAAI,IAAK,IAAK,IAAK,IAAK,KAC1CC,GAAgB,GAAI,KAAM,KAAM,KAAM,KAAM,MAgClD,OAxBe,SAASnB,EAAQoB,EAAUzT,EAAUsS,QACjCz1B,IAAb42B,IACFA,EAAW,IAEb,IAAIC,EAAU,IACVC,EAASJ,EACI,WAAbvT,EACF0T,EAAU,IACY,WAAb1T,IACT0T,EAAU,KACVC,EAASH,GAKX,IAFA,IAAIvN,EAAQ,EACN2N,EAAYD,EAAOz8B,OAAS,EAC3Bm7B,GAAUqB,GAAWzN,EAAQ2N,GAClCvB,GAAkBqB,EAClBzN,IAGF,IAAM4N,EAAUF,EAAO1N,GAASwN,EAC1BK,EAA0B,GAAlBD,EAAQ38B,OAAc,GAAK,IACzC,OAAO46B,EAAaO,EAAQC,GAAiBwB,EAAQD,IAjCzDp7B,EAAQ66B,+BAsCR76B,EAAQsJ,OAAO,iBAAkBtJ,EAAQ66B,YAmCzC76B,EAAQs7B,kBAAoB,SAASzhB,GAoBnC,OATiB,SAASkG,EAAawb,EAAoBrE,GACzD,IAAMsE,EAAWtE,GAA8B,UAC3ChuB,EAAI6W,EAAY,GAChBoE,EAAIpE,EAAY,GACd0b,EAAoD,EAAnCC,SAASH,EAAoB,IAGpD,OAFAryB,EAAI2Q,EAAQ,SAARA,CAAkB3Q,EAAGuyB,GACzBtX,EAAItK,EAAQ,SAARA,CAAkBsK,EAAGsX,GAClBD,EAASzP,QAAQ,MAAO7iB,GAAG6iB,QAAQ,MAAO5H,KAlBrDnkB,EAAQs7B,sCAuBRt7B,EAAQsJ,OAAO,wBAAyBtJ,EAAQs7B,mBAqBhDt7B,EAAQ27B,eAAiB,WACvB,IAAMC,EAAsB,SAASC,EAASC,EAAaL,GACzD,IAAMM,EAAoBC,EAAA,EAAcH,EAAU,IAAK,KAAO,IACxDI,EAAMrd,KAAK2X,IAAI,KAAOwF,GACtB17B,EAAIue,KAAKwb,MAAM6B,EAAM,MACrB97B,EAAIye,KAAKwb,MAAO6B,EAAM,GAAM,IAC5Bp8B,EAAKo8B,EAAM,GACjB,OAAU57B,EAAV,KACE84B,EAAA,EAAmBh5B,EAAG,GADxB,KAEEg5B,EAAA,EAAmBt5B,EAAG,EAAG47B,GAF3B,KAGEK,EAAYI,OAAOH,EAAoB,EAAI,EAAI,IAwBnD,OAXiB,SAAShc,EAAawb,EAAoBrE,GACzD,IAAMuE,EAAoD,EAAnCC,SAASH,EAAoB,IAE9CC,EAAWtE,GAA8B,UAEzCiF,EAAOP,EAAoB7b,EAAY,GAAI,KAAM0b,GACjDW,EAAOR,EAAoB7b,EAAY,GAAI,KAAM0b,GAEvD,OAAOD,EAASzP,QAAQ,MAAOoQ,GAAMpQ,QAAQ,MAAOqQ,KAMxDp8B,EAAQsJ,OAAO,qBAAsBtJ,EAAQ27B,gBAiB7C37B,EAAQq8B,gBAAkB,SAASC,GACjC,OAAO,SAASC,GACd,YAAcn4B,IAAVm4B,GAAiC,OAAVA,EAClBD,EAAKE,YAAL,GAAoBD,GAEpBD,EAAKE,YAAY,YAL9Bx8B,EAAQq8B,iCAURr8B,EAAQsJ,OAAO,gBAAiBtJ,EAAQq8B,iBAoBxCr8B,EAAQy8B,SAAW,SAAS14B,GAE1B,IAAM24B,EAAY99B,OAAO+9B,QACvBC,QAAS7oB,OAAO,WAChB8oB,QAAS9oB,OAAO,WAChB+oB,MAAO/oB,OAAO,SACdgpB,KAAMhpB,OAAO,UAQTipB,EAAY,SAASC,EAAQxC,GACjC,IAAIyC,EAAgB,GACpB,OAAQzC,GACN,KAAKiC,EAAUE,QACbM,EAAgBn5B,EAAeo5B,UAAUF,EAAQ,SAAU,WAC3D,MACF,KAAKP,EAAUG,QACbK,EAAgBn5B,EAAeo5B,UAAUF,EAAQ,SAAU,WAC3D,MACF,KAAKP,EAAUI,MACbI,EAAgBn5B,EAAeo5B,UAAUF,EAAQ,OAAQ,SACzD,MACF,KAAKP,EAAUK,KACbG,EAAgBn5B,EAAeo5B,UAAUF,EAAQ,MAAO,QAK5D,OAAUA,EAAV,IAAoBC,GAiDtB,OA1Ce,SAAShZ,GAKtB,IAAIkZ,SACJ,IAJAlZ,EAAWtF,KAAK2b,MAAMrW,IAIP,GACb,OAAO8Y,EAAU9Y,EAAUwY,EAAUE,SAIvC,IAAIS,EAAYnZ,EAAW,GAE3B,OADAA,EAAWtF,KAAKwb,MAAMlW,EAAW,KAClB,IACbkZ,EAASJ,EAAU9Y,EAAUwY,EAAUG,SACnCQ,EAAY,IACdD,OAAcJ,EAAUK,EAAWX,EAAUE,UAExCQ,IAITC,EAAYnZ,EAAW,IACvBA,EAAWtF,KAAKwb,MAAMlW,EAAW,KAClB,IACbkZ,EAASJ,EAAU9Y,EAAUwY,EAAUI,OACnCO,EAAY,IACdD,OAAcJ,EAAUK,EAAWX,EAAUG,UAExCO,IAITC,EAAYnZ,EAAW,GACvBA,EAAWtF,KAAKwb,MAAMlW,EAAW,IACjCkZ,EAASJ,EAAU9Y,EAAUwY,EAAUK,MACnCM,EAAY,IACdD,OAAcJ,EAAUK,EAAWX,EAAUI,QAExCM,MA9EXp9B,EAAQy8B,oCAoFRz8B,EAAQsJ,OAAO,eAAgBtJ,EAAQy8B,UAGvC56B,EAAA,yFCpaA,IAAM7B,aAkBJ,SAAAA,EAAY4D,EAAW05B,EAAiBC,EAAuBC,EAC7DC,gGAAiBlxB,CAAArI,KAAAlE,GAEjB,IAAMsM,EACJ1I,EAAUa,IAAI,oBACZb,EAAUhD,IAAI,uBAMlBsD,KAAKw5B,aAAeJ,EAAgBj0B,WAMpCnF,KAAKy5B,uBAAyBJ,EAM9Br5B,KAAK05B,aAAeJ,EAMpBt5B,KAAK25B,QAAUJ,EAMfv5B,KAAK45B,YAA2B15B,IAAlBkI,EAAQyxB,MAAsBzxB,EAAQyxB,MAAQ,GAW5D75B,KAAK85B,sBAA+C55B,IAA5BkI,EAAQ2xB,iBAC9B3xB,EAAQ2xB,gBAMV/5B,KAAKg6B,kBAAqC95B,IAAtBkI,EAAQ6xB,UAC1B7xB,EAAQ6xB,UAAY,EAOtBj6B,KAAKk6B,oBA/EH,OAAAp+B,EAAAq+B,SAAA,uFAAAr+B,EAAAnB,UAsFJy/B,MAtFI,SAsFEhyB,GAEJpI,KAAK6kB,QAGL,IAAIwV,cACwBn6B,IAAxBkI,EAAQkyB,kBACyBp6B,IAAjCkI,EAAQiyB,uBAEVA,EAAuBr6B,KAAK05B,aAAaa,wBACvCv6B,KAAKw5B,aAAatP,WAClB9hB,EAAQtD,MAMZ,IAAM+0B,OAA0B35B,IAAlBkI,EAAQyxB,MAAsBzxB,EAAQyxB,MAAQ75B,KAAK45B,OACjE9U,EAAA,EAAa1c,GACXiyB,qBAAsBA,EACtBR,MAAOA,EACPW,YAAax6B,KAAKg6B,aAClBS,SAAUz6B,KAAK85B,mBAEjB95B,KAAK25B,QAAQe,SAAU,EACvB16B,KAAK05B,aAAaU,MAAMhyB,GAASvE,KAAK7D,KAAK26B,cAAct9B,KAAK2C,QA/G5DlE,EAAAnB,UAuHJkqB,MAvHI,WAwHF7kB,KAAK25B,QAAQiB,MAAQ,EACrB,IAAAprB,EAAqBxP,KAAK25B,QAAQkB,QAAlCprB,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAA2C,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAjV,OAAA,MAAAwV,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAhT,MAAA,IAAhCynB,EAAgCtU,EACzCsU,EAAOpH,SAAS1iB,OAAS,EACzB8pB,EAAOqW,SAAU,EACjBrW,EAAOyW,SAAU,EACjBzW,EAAO0W,gBAAiB,EACxB1W,EAAO2W,uBAAoB96B,EAE7BF,KAAK25B,QAAQkB,QAAQtgC,OAAS,EAC9ByF,KAAK25B,QAAQe,SAAU,GAjIrB5+B,EAAAnB,UA0IJggC,cA1II,SA0IU72B,GAAU,IAAAvB,EAAAvC,KAClB46B,EAAQ,EADUK,EAAA,SAIXC,GACT,IAAM5S,EAAKgN,OAAO4F,GACZ1pB,EAAajP,EAAKk3B,uBAAuBnK,cAAchH,GACzD5iB,EAAQ8L,EAAWpV,KACvBoH,EAAA,EAAYC,OAAO+N,GAEnB,IAAM2pB,EAAoBr3B,EAASwkB,GAC7BrL,EAAWke,EAAkBle,SAC7B4c,EAAQsB,EAAkBtB,MAC1BkB,GAAuD,IAAtCI,EAAkBC,gBACnCJ,EAAoBG,EAAkBH,kBAEtCK,KAwBN,IAAK,IAAM39B,KAvBXuf,EAAS/Z,QAAQ,SAAC2T,GAChB,IAAMnZ,EAAO8F,EAAA,EAAYqZ,aAAahG,EAAQna,IAAI,uBAKlD,GAJK2+B,EAAsB39B,KACzB29B,EAAsB39B,OAGpB8T,EAAWJ,YAAcI,EAAWJ,WAAW7W,OAAQ,CACzD,IAAMkiB,EAAa5F,EAAQ6F,gBACrB4e,KACN9pB,EAAWJ,WAAWlO,QAAQ,SAACiQ,GACzBA,EAAUooB,OACZD,EAAmBnoB,EAAUooB,OAAS9e,EAAWtJ,EAAU/W,MAC3Dya,EAAQ2kB,MAAMroB,EAAU/W,MAAmB,IAG3Ck/B,EAAmBnoB,EAAU/W,MAAQqgB,EAAWtJ,EAAU/W,QAG9Dya,EAAQ4kB,cAAcH,GAAiC,GAEzDD,EAAsB39B,GAAMjD,KAAKoc,KAGhBwkB,EAAuB,CACxC31B,EAAQhI,GAAcgI,EACtB,IAAMg2B,EAAiBL,EAAsB39B,GAC7C6E,EAAKo3B,QAAQkB,QAAQpgC,MACnBwiB,SAAUye,EACVpT,GAAIA,EACJ5iB,MAAOA,EACPm0B,MAAOA,EACPa,SAAS,EACTI,SAAS,EACTC,eAAgBA,EAChBC,kBAAmBA,IAErBJ,GAAS3d,EAAS1iB,SAjDtB,IAAK,IAAM2gC,KAASp3B,EAAUm3B,EAAnBC,GAsDXl7B,KAAK25B,QAAQiB,MAAQA,EACrB56B,KAAK25B,QAAQe,SAAU,GArMrB5+B,KA8MNA,EAAQC,OAASkM,QAAQlM,OAAO,kBAC9B4/B,EAAA,EAA0B5/B,OAAOK,KACjCw/B,EAAA,EAAqB7/B,OAAOK,KAC5By/B,EAAA,EAAiB9/B,OAAOK,OAE1BN,EAAQC,OAAOoM,QAAQ,iBAAkBrM,GAOzCA,EAAQC,OAAOa,MAAM,mBACnBi+B,WACAD,MAAO,EACPF,SAAS,IAIX/8B,EAAA,0HC1OAm+B,EAAApgC,EAAA,IAuCMI,EAAU,SAASigC,EAAUr8B,EAAWG,EAAgBD,EAC5Do8B,EAAkBC,EAAWC,GAM7Bl8B,KAAKm8B,UAAYJ,EAMjB/7B,KAAKo8B,WAAa18B,EAMlBM,KAAKq8B,gBAAkBx8B,EAMvBG,KAAKU,aAAed,EAMpBI,KAAKs8B,kBAAoBN,EAMzBh8B,KAAKu8B,WAAaN,EAQlBj8B,KAAKw8B,MACHj7B,aAUFvB,KAAKy8B,SAAW,KAQhBz8B,KAAK08B,oCAAsC,EAM3C18B,KAAK28B,gCAML38B,KAAK48B,uCAAyC,KAM9C58B,KAAK68B,kBAAoBX,EAOzBl8B,KAAK88B,YAAc,KAEnBC,EAAA,EAAgB/8B,KAAKu8B,WAAY,SAAUv8B,KAAKg9B,oBAAqBh9B,uPAUvElE,EAAQnB,UAAUqiC,oBAAsB,WAAW,IAAAz6B,EAAAvC,KACjDA,KAAKu8B,WAAWx2B,sBAAsBlC,KAAK,SAACR,GAC1Cd,EAAKu6B,YAAcz5B,IAGjBrD,KAAKy8B,UAAYz8B,KAAKy8B,SAASl7B,UACjCvB,KAAKu8B,WAAW12B,kBAAkBhC,KAAK,SAAC1C,GACtCoB,EAAK06B,yBAAyB97B,MAapCrF,EAAQnB,UAAUuiC,oBAAsB,SAASC,GAG/C,OAFAn9B,KAAKw8B,KAAKj7B,SAAShH,OAAS,EAC5ByF,KAAK68B,kBAAkBO,YAAYC,EAAA,EAAQC,eAAehoB,aACnDtV,KAAKu9B,oBAAoBJ,IAclCrhC,EAAQnB,UAAU4iC,oBAAsB,SAASJ,EAC/CK,EAASC,GAAY,IAAAv3B,EAAAlG,KACf09B,KAWN,OATAP,EAAiB7/B,QAAQ2H,UAAU/B,QAAQ,SAAC1B,GACrC0E,EAAKy3B,oBAAoBn8B,IAC5Bk8B,EAAcjjC,KAAK+G,KAGnBk8B,EAAcnjC,OAAS,IAAMkjC,GAC/Bz9B,KAAK49B,qBAAqBF,GAGI,IAAzBA,EAAcnjC,QASvBuB,EAAQnB,UAAUkjC,uBAAyB,SAASpH,GAClD,IAAMqH,KACNA,EAAgBT,EAAA,EAAQC,eAAehoB,aAAemhB,EAAO3xB,IAAI,SAAA1C,GAAA,OAAQA,EAAKhG,OAAMmL,KAAK,KACzFvH,KAAK68B,kBAAkBkB,YAAYD,GAC/B99B,KAAKo8B,WAAW77B,IAAI,iBACiBP,KAAKo8B,WAAW1/B,IAAI,gBAAiBshC,YAAYvH,IAY5F36B,EAAQnB,UAAUgjC,oBAAsB,SAASn8B,GAAO,IAAAwF,EAAAhH,KAClDi+B,GAAe,EACbC,EAAU18B,EAAM8mB,GAWtB,OAVAtoB,KAAKw8B,KAAKj7B,SAAS4E,KAAK,SAACg4B,GACvB,GAAID,IAAYC,EAAU7V,GACxB,OAAO2V,GAAe,GAEvBj+B,MACHA,KAAK28B,6BAA6Bx2B,KAAK,SAACi4B,GACtC,GAAIF,IAAYE,EAAI9V,GAClB,OAAO2V,GAAe,GAEvBj+B,OACCi+B,IAMJj+B,KAAK28B,6BAA6BliC,KAAK+G,GACvCxB,KAAK08B,oCAAsC,EAGS,OAAhD18B,KAAK48B,wCACP58B,KAAKm8B,UAAUkC,OAAOr+B,KAAK48B,wCAM7B58B,KAAK48B,uCAAyC58B,KAAKm8B,UAAU,WAE3Dn1B,EAAK01B,oCAAsC11B,EAAK21B,6BAA6BpiC,OAE7EyM,EAAK21B,6BAA6Bz5B,QAAQ,SAACk7B,GACzCp3B,EAAKw1B,KAAKj7B,SAAS4V,QAAQinB,KAG7Bp3B,EAAK62B,uBAAuB72B,EAAKw1B,KAAKj7B,UAKtCyF,EAAK21B,6BAA6BpiC,OAAS,EAC3CyM,EAAK41B,uCAAyC,QAGzC,IAWT9gC,EAAQnB,UAAU2jC,eAAiB,SAASvU,EAAWyT,GAAS,IAAAe,EAAAv+B,KAC9DA,KAAKu8B,WAAW12B,kBAAkBhC,KAAK,SAAC1C,GACtC,IAAMK,EAAQg9B,EAAA,EAAe58B,gBAAgBT,EAAQ4oB,GACjDvoB,GACF+8B,EAAKhB,qBAAqB/7B,GAAQg8B,GAAS,MAejD1hC,EAAQnB,UAAU8jC,oBAAsB,SAASjW,EAAWgV,EAASC,GAAY,IAAAiB,EAAA1+B,KAC/EA,KAAKu8B,WAAW12B,kBAAkBhC,KAAK,SAAC1C,GACtC,IAAMK,EAAQg9B,EAAA,EAAet9B,yBAAyBC,EAAQqnB,GAC9D,GAAIhnB,EAAO,CACT,IAAMm9B,EAAaD,EAAKnB,qBAAqB/7B,GAAQg8B,EAASC,GAC9DiB,EAAKvC,UAAU,WACb,IAAMtO,EAAW6Q,EAAKE,oBAAoBp9B,EAAM8mB,IAChD,GAAKuF,EAAL,CAIA,IAAIgR,SACJhR,EAASgC,mBAAmB,SAAChC,GAC3B,GAAIA,EAASzrB,KAAKhG,OAASosB,EAEzB,OADAqW,EAAmBhR,EACZiR,EAAA,EAAwBrP,gBAAgBC,OAK/CiP,GACF9Q,EAASU,SAAS,OAIhBsQ,GACFA,EAAiBtQ,SAAS,WAlB1BvqB,QAAQmf,KAAK,4DAgCvBrnB,EAAQnB,UAAUokC,YAAc,SAASv9B,GACvC,IAAMD,EAAWvB,KAAKw8B,KAAKj7B,SACvB+nB,EAAQ,EAAGkB,GAAQ,EACvBjpB,EAAS4E,KAAK,SAAChD,GACb,GAAIA,EAAM/G,OAASoF,EAAMpF,KACvB,OAAOouB,GAAQ,EAEjBlB,MAEEkB,IACFjpB,EAAS9F,OAAO6tB,EAAO,GACvBtpB,KAAK69B,uBAAuBt8B,KAShCzF,EAAQnB,UAAUqkC,UAAY,WAC5B,KAAOh/B,KAAKw8B,KAAKj7B,SAAShH,QACxByF,KAAK++B,YAAY/+B,KAAKw8B,KAAKj7B,SAAS,KAcxCzF,EAAQnB,UAAUskC,gBAAkB,SAASz9B,EAAO+qB,GAClD,IAAMxO,EAA2C+d,EAAA,KAAiBt6B,GAElE,OADAxB,KAAKk/B,iBAAiBnhB,EAAOwO,GACtBxO,GAYTjiB,EAAQnB,UAAUukC,iBAAmB,SAAS98B,EAAMmqB,GAAO,IAAA4S,EAAAn/B,KACpDoC,EAAKb,UAGVa,EAAKb,SAAS2B,QAAQ,SAACk8B,GACjBA,EAAU79B,SACZ49B,EAAKD,iBAAiBE,EAAW7S,GACxB6S,EAAUv8B,WACnBu8B,EAAUv8B,SAASw8B,UAAY/iB,EAAA,EAAiBiQ,EAAO6S,EAAUhjC,UAavEN,EAAQnB,UAAUijC,qBAAuB,SAASnH,GAChD,IAAMlK,KACA1sB,EAAiBG,KAAKq8B,gBAC5B5F,EAAOvzB,QAAQ,SAAC1B,GACd+qB,EAAM9xB,KAAK+G,EAAMpF,QAEnB,IAAMqnB,EAAO8I,EAAMhyB,OAAS,EAC1BsF,EAAe4F,UAAU,4BACzB5F,EAAe4F,UAAU,8BAC3BzF,KAAKs8B,kBAAkBgD,QACrB7b,IAAQ8I,EAAMhlB,KAAK,MAAnB,IAA4Bkc,EAC5B/lB,KAAM6hC,EAAA,EAAmB1yB,KAAKmW,eAWlClnB,EAAQnB,UAAUikC,oBAAsB,SAAStW,GAC/C,IAAIkX,EAAwB,KAS5B,OARIx/B,KAAKy8B,UAAYz8B,KAAKy8B,SAAS5M,oBACjC7vB,KAAKy8B,SAAS5M,mBAAmB,SAAChC,GAChC,GAAIA,EAASzrB,KAAKkmB,KAAOA,EAEvB,OADAkX,EAAwB3R,EACjBiR,EAAA,EAAwBrP,gBAAgBC,OAI9C8P,GAUT1jC,EAAQnB,UAAU8kC,aAAe,SAAS5R,GACxC,GAAIA,EAASR,OAAOjrB,KAAKs9B,MAAO,CAC9B,IAAMv7B,EAAoD0pB,EAASzrB,KAEnE,OADAu9B,EAAA,EAAYl8B,OAAOU,EAAYC,WACxBpE,KAAK88B,YAAY34B,EAAYC,WAGpC,IADA,IAAIw7B,EAAsB/R,GAClB+R,EAAoBvS,OAAOR,QACjC+S,EAAsBA,EAAoBvS,OAE5C,IAAMwS,EAA8CD,EAAoBx9B,KAExE,OADAu9B,EAAA,EAAYl8B,OAAOo8B,EAASz7B,WACrBpE,KAAK88B,YAAY+C,EAASz7B,YAcrCtI,EAAQnB,UAAUsiC,yBAA2B,SAAS97B,GAAQ,IAAA2+B,EAAA9/B,KACtD+/B,KAGN//B,KAAKy8B,SAASl7B,SAASuD,IAAI,SAAC+oB,GAC1B,IAAMzxB,EAAOyxB,EAASzrB,KAAKhG,KAC3B2jC,EAA0B3jC,GAAQ0jC,EAAKE,6BAA6BnS,KAItE,IAAMoS,KAENjgC,KAAKw8B,KAAKj7B,SAASuD,IAAI,SAAC1C,GACtB,IAAMhG,EAAOgG,EAAKhG,KAGZ8jC,EAAgB1B,EAAA,EAAe58B,gBAAgBT,EAAQ/E,GAC7D,GAAI8jC,EAAe,CAEjB,IAAMC,EAAYJ,EAA0B3jC,GACxC+jC,GACFL,EAAKM,8BAA8BF,EAAeC,GAEpDF,EAAexlC,KAAKylC,MAKxBlgC,KAAKk9B,oBAAoB+C,GAGzBjgC,KAAKm8B,UAAU,WACb2D,EAAKjC,uBAAuBiC,EAAKtD,KAAKj7B,aAa1CzF,EAAQnB,UAAUqlC,6BAA+B,SAASnS,GAAU,IAAAwS,EAAArgC,KAC5DuB,KAENssB,EAAStsB,SAASuD,IAAI,SAAC3B,GACrB5B,EAAS4B,EAAMf,KAAKhG,MAAQikC,EAAKL,6BAA6B78B,KAGhE,IAAIk8B,SAAWiB,SAAYC,SAC3B,GAAI1S,EAAStsB,SAAShH,OAAS,EAAG,CAChC,IAAMimC,EAAcC,gCAAgC5S,EAASL,KAEzDgT,IACFF,EAAaE,EAAYE,SAAS,WAE/B,CAIHrB,EADgB,QADlBA,EAAYxR,EAASS,aAGI,QAAd+Q,QAGGn/B,EAEd,IAAMygC,EAAgBF,yBAAyB5S,EAASL,IAAlC,WAClBmT,IACFJ,EAAmBI,EAAcC,GAAG,aAIxC,OACEr/B,WACA89B,YACAiB,aACAC,qBAcJzkC,EAAQnB,UAAUylC,8BAAgC,SAASh+B,EAAM+9B,GAAW,IAAAU,EAAA7gC,KAC1E,IAAKmgC,EACH,OAAO/9B,EAILA,EAAKb,UACPa,EAAKb,SAASuD,IAAI,SAAC3B,GACjB09B,EAAKT,8BAA8Bj9B,EAAOg9B,EAAU5+B,SAAS4B,EAAM/G,SAKvE,IAAMyG,EAAWT,EAAKS,SAKtB,OAJAA,EAASw8B,UAAYc,EAAUd,UAC/Bx8B,EAASy9B,WAAaH,EAAUG,WAChCz9B,EAAS09B,iBAAmBJ,EAAUI,iBAE/Bn+B,IAOTtG,EAAQC,OAASkM,QAAQlM,OAAO,kBAC9ByiC,EAAA,EAAeziC,OAAOK,KACtB0iC,EAAA,EAAwB/iC,OAAOK,KAC/B0kC,EAAA,EAAwB/kC,OAAOK,KAC/B2kC,EAAA,EAAwBhlC,OAAOK,QAElB+L,QAAQ,iBAAkBrM,GAGzC6B,EAAA,yECxlBAsD,EAAAvF,EAAA,GAkBMI,EAAU,SAAS6Z,EAAS9V,GAMhCG,KAAK4V,SAAWD,EAMhB3V,KAAKq8B,gBAAkBx8B,EAEvBmhC,EAAA,EAAanmC,KAAKmF,qFAGpBiB,EAAA,EAAgBnF,EAASklC,EAAA,GAYzBllC,EAAQnB,UAAUsmC,gBAAkB,SAASxtB,EAAM6R,EAAY4b,EAAkBC,GAC/E,IAAMC,EAAO,IAAIC,KAAK5tB,GAChB6tB,EAAMH,EAAY,WAAQjhC,EAG5BqhC,EAAiB,OACjBC,EAAkB,UAClBC,EAAgB,aAGpB,IAAKP,EAAkB,CACrB,IAAMrhC,EAAiBG,KAAKq8B,gBAC5BkF,EAAiB1hC,EAAe4F,UAAU,QAC1C+7B,EAAkB3hC,EAAe4F,UAAU,UAC3Cg8B,EAAgB5hC,EAAe4F,UAAU,YAG3C,OAAQ6f,GACN,IAAK,OACH,OAAOtlB,KAAK4V,SAAS,OAAd5V,CAAsBohC,EAAMG,EAAgBD,GACrD,IAAK,QACH,OAAOthC,KAAK4V,SAAS,OAAd5V,CAAsBohC,EAAMI,EAAiBF,GACtD,IAAK,MACH,OAAOthC,KAAK4V,SAAS,OAAd5V,CAAsBohC,EAAMK,EAAeH,GACpD,QAEE,OAAOF,EAAKM,cAAc7Z,QAAQ,UAAW,MAcnD/rB,EAAQnB,UAAUgnC,mBAAqB,SAASC,EAAiBC,EAAOV,GAEtE,OADA39B,EAAA,EAAYC,YAAsCvD,IAA/B0hC,EAAgBtc,YACN,UAAzBsc,EAAgBE,MAClBt+B,EAAA,EAAYC,YAAqBvD,IAAd2hC,EAAMhuB,KAEpB7T,KAAKihC,gBAAgBY,EAAM/tB,MAAO8tB,EAAgBtc,YAAY,EAAM6b,GADzE,IAEInhC,KAAKihC,gBAAgBY,EAAMhuB,IAAK+tB,EAAgBtc,YAAY,EAAM6b,IAG/DnhC,KAAKihC,gBAAgBY,EAAM/tB,MAAO8tB,EAAgBtc,YAAY,EAAM6b,KAQ/ErlC,EAAQC,OAASkM,QAAQlM,OAAO,eAC9BilC,EAAA,EAAajlC,OAAOK,QAEP+L,QAAQ,cAAerM,GAGtC6B,EAAA,6FC9GAokC,EAAArmC,EAAA,KAGMI,GAqBNA,YAAsB,SAASkmC,GAC7Bx+B,EAAA,EAAYgjB,iBAAiBwb,EAAaC,EAAA,GAE1CvnC,OAAO6B,eAAeylC,EAAa,UACjCtlC,IAAK,kBAAMslC,EAAYthB,aACvB9d,IAAK,SAACwsB,GACJ4S,EAAYrhB,UAAUyO,OAiB5BtzB,MAAgB,SAAS6G,GACvBa,EAAA,EAAYgjB,iBAAiB7jB,EAAOu/B,EAAA,GAEpCxnC,OAAO6B,eAAeoG,EAAO,WAC3BnG,cAAc,EAIdE,IAAK,kBAAMiG,EAAM4oB,cAIjB3oB,IAAK,SAACwsB,GACJzsB,EAAMylB,WAAWgH,MAIrB10B,OAAO6B,eAAeoG,EAAO,WAC3BnG,cAAc,EAIdE,IAAK,kBAAMiG,EAAMw/B,cAIjBv/B,IAAK,SAACwsB,GACJzsB,EAAMy/B,WAAWhT,OAmBvBtzB,aAAuB,SAAS6G,EAAO+pB,GAErC,IAAIrI,SAKAge,EAAkB,KAKlBC,EAAkB,KAMhBC,EAoDN,SAASC,EAAW7/B,GAClB,IAAI8/B,EAAoC9/B,EAAMjG,IAAI,cAClD,IAAM2wB,EAAuC1qB,EAAMjG,IAAI,gBACvDiG,EAAMC,IAAI,eAAgB6/B,GAAY,GAClCpV,GACFmV,EAAWnV,IAnDTqV,EA4DN,SAASC,EAAWhgC,GAClB,IAAI8/B,EAAoC9/B,EAAMjG,IAAI,cAClD,IAAM2wB,EAAuC1qB,EAAMjG,IAAI,gBACvDiG,EAAMC,IAAI,eAAgB6/B,GAAY,GAClCpV,GACFsV,EAAWtV,IAtDf,GATA1qB,EAAMC,IAAI,aAAc,GAAG,GAEvBD,aAAiBinB,EAAA,GACnBjnB,EAAMsnB,YAAY2Y,GAAG,MAAO,SAACC,GACVA,EAAQ3W,QAChBtpB,IAAI,eAAgBD,KAI7BA,aAAiBmgC,EAAA,EAAc,CAEjC,GAAe,QADfze,EAAS1hB,EAAMkpB,aAEb,OACSxH,aAAkB0d,EAAA,GAC3BM,GAAmB,iBACnBC,GAAmB,cAAe,kBACzBje,aAAkB0e,EAAA,GAC3BV,GAAmB,kBACnBC,GAAmB,eAAgB,mBAEnC9+B,EAAA,EAAYkB,KAAK,2BAGnB2f,EAAOue,GAAGP,EAAiB,WACzBE,EAAoB5/B,GACpB+pB,EAAOsW,gBAGT3e,EAAOue,GAAGN,EAAiB,WACzBI,EAAoB//B,GACpB+pB,EAAOsW,gBAIXtoC,OAAO6B,eAAeoG,EAAO,WAC3BnG,cAAc,EACdE,IAAK,kBAA6BiG,EAAMjG,IAAI,cAAiB,OAiCjEiB,EAAA,qCCtLA,IAAM7B,EAAUmM,QAAQlM,OAAO,mBAc/BD,EAAQmnC,SAAW,SAASlH,GAC1B,gBASWmH,EAAMC,EAAMC,GAInB,IAAIC,EAAU,KACd,OACE,WAAkB,QAAAC,EAAAtxB,UAAAzX,OAANqkB,EAAMlP,MAAA4zB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAN3kB,EAAM2kB,GAAAvxB,UAAAuxB,GAChB,IAAMC,EAAUxjC,KAKA,OAAZqjC,GACFtH,EAASsC,OAAOgF,GAElBA,EAAUtH,EAPI,WACZsH,EAAU,KACVH,EAAKhoC,MAAMsoC,EAAS5kB,IAKIukB,EAAMC,MAzB1CtnC,EAAQmnC,8BA8BRnnC,EAAQ2nC,QAAQ,eAAgB3nC,EAAQmnC,UAGxCtlC,EAAA,kCCrDA,IAAA+lC,EAAAhoC,EAAA,GAcMI,EAAU,WAMdkE,KAAK2jC,kBAYP7nC,EAAQnB,UAAUipC,eAAiB,SAASpW,EAAK1jB,GAC1C9J,KAAK2jC,cAAcnW,IACtBxtB,KAAK6jC,iBAAiBrW,GAExBxtB,KAAK2jC,cAAcnW,GAAK/yB,KAAkCqP,IAS5DhO,EAAQnB,UAAUmpC,iBAAmB,SAAStW,GAC5CxtB,KAAK6jC,iBAAiBrW,IAaxB1xB,EAAQnB,UAAUkpC,iBAAmB,SAASrW,GACvCxtB,KAAK2jC,cAAcnW,GAGlBxtB,KAAK2jC,cAAcnW,GAAKjzB,SAC1ByF,KAAK2jC,cAAcnW,GAAKtqB,QAAQwgC,EAAA,GAChC1jC,KAAK2jC,cAAcnW,GAAKjzB,OAAS,GAJnCyF,KAAK2jC,cAAcnW,QAavB1xB,EAAQC,OAASkM,QAAQlM,OAAO,uBACjBoM,QAAQ,kBAAmBrM,GAG1C6B,EAAA,8FC9EA6B,EAAA9D,EAAA,KA0BMI,EAAU,SAAS6wB,EAAY/sB,EAAiBmkC,EACpD9H,GAAW,IAAA15B,EAAAvC,KAMXA,KAAKU,aAAed,EAMpBI,KAAKgkC,aAAeD,EAMpB/jC,KAAKikC,kBAELhI,EAAUl2B,sBAAsBlC,KAAK,SAACqgC,GACpC3hC,EAAK0hC,kBAAoBC,IAG3BvX,EAAWY,IAAI,uBAAwB,SAACzoB,EAAK+oB,EAAUiB,GACrDvsB,EAAK4hC,MAA2Br/B,EAAMgqB,gJAkB1ChzB,EAAQnB,UAAUypC,YAAc,SAASvW,EAAU/oB,EAAKu/B,EAAgBC,GAItE,IAAI3hC,EAAQ,KAmBZ,YAlB+BzC,IAA3B2tB,EAASzrB,KAAKb,UAA0BssB,EAASzrB,KAAKs9B,MAExD/8B,EAAQ3C,KAAKukC,aAAa1W,EAAU/oB,EAAKu/B,EAAgBC,QACrBpkC,IAA3B2tB,EAASzrB,KAAKb,UAA0BssB,EAASR,OAAOjrB,KAAKs9B,MAEtE/8B,EAAQ3C,KAAKwkC,yBAAyB3W,EAAU/oB,QACZ5E,IAA3B2tB,EAASzrB,KAAKb,SAEvBvB,KAAKykC,8BAA8B5W,EAAU/oB,GACjB,IAAnB+oB,EAASJ,OAAgBI,EAASzrB,KAAKs9B,QAEhD/8B,EAAQ3C,KAAKukC,aAAa1W,EAAU/oB,EAAKu/B,EAAgBC,IAGvD3hC,GAASkrB,EAASzrB,KAAKS,SAAS+W,SAClCjX,EAAMy/B,WAAWvU,EAASzrB,KAAKS,SAAS+W,SAGnCjX,GAWT7G,EAAQnB,UAAUwpC,MAAQ,SAASr/B,EAAK+oB,GAAU,IAAA3nB,EAAAlG,KAChD6tB,EAASgC,mBAAmB,SAAChC,GACvBA,EAASlrB,QAAUkrB,EAASzrB,KAAKs9B,OACnCx5B,EAAKw+B,kBAA6D7W,EAASlrB,MAAQkrB,MAYzF/xB,EAAQnB,UAAU+pC,kBAAoB,SAAS/hC,EAAOkrB,GACpD,IAAMtlB,EAAiC,OAAxBslB,EAASS,WACxB,GAA2B,SAAvBT,EAASzrB,KAAK1E,KAChBiF,EAAMylB,WAAW7f,QACZ,GAAKslB,EAASzrB,KAAKs9B,OAA4B,IAAnB7R,EAASJ,MAoB1CkX,EAAA,EAAYne,iBAAiB7jB,EAAOiiC,EAAA,GACpCjiC,EAAMylB,WAAW7f,OArBsC,CAEvDo8B,EAAA,EAAYne,iBAAiB7jB,EAAOiiC,EAAA,GACpC,IAAMrY,KACNsB,EAASgC,mBAAmB,SAAChC,QACI3tB,IAA3B2tB,EAASzrB,KAAKb,UAAkD,OAAxBssB,EAASS,YACnD/B,EAAM9xB,KAAKozB,EAASzrB,KAAKoC,UAGR,IAAjB+nB,EAAMhyB,QACRoI,EAAMylB,YAAW,GAEgBzlB,EAAMkpB,YAAa5D,cACpDN,OAAU4E,EAAMtnB,UAAUsC,KAAK,OAEZ,IAAjBglB,EAAMhyB,QACRoI,EAAMylB,YAAW,KAwBvBtsB,EAAQnB,UAAU4pC,aAAe,SAAS1W,EAAU/oB,EAClDu/B,EAAgBC,GAChB,IAAMO,EAA+ChX,EAASzrB,KAC1DO,EAAQ,KACNmiC,EAAoBjX,EAASR,OAAOR,OAEtCkY,GAAmB,EAKvB,QAJ4C7kC,IAAxC2kC,EAAUhiC,SAASkiC,mBACrBA,EAAmBF,EAAUhiC,SAASkiC,kBAGpCD,EAAmB,CACrBniC,EAAQ3C,KAAKglC,sBAAsBnX,IAAYgX,EAAUnF,OAEzD,IAAMuF,EAA0B,EAAfX,EACjBD,EAAepa,YAAYib,SAASD,EAAUtiC,OAEzC,CAEL,IADuB3C,KAAKmlC,qBAAqBtX,GAE/ClrB,EAAQ3C,KAAKglC,sBAAsBnX,GAAU,GAE3C/xB,EAAQipB,SAAS8I,EAASR,QACjBpD,YAAYib,SAAS,EAAGviC,GAKvC,OADAA,EAAMC,IAAI,mBAAoBmiC,GACvBpiC,GAYT7G,EAAQnB,UAAUqqC,sBAAwB,SAASnX,EACjD6R,GAAO,IAAA14B,EAAAhH,KACH2C,SACEkiC,EAA+ChX,EAASzrB,KAC9D,GAAIs9B,EACF/8B,EAAQ3C,KAAKU,aAAa4E,uBACrB,CACL,IAAM8/B,EAAYplC,KAAKqlC,cAAcxX,GAC/BzpB,EAAYpE,KAAKikC,kBAAkBY,EAAUzgC,WAAa,IAChEugC,EAAA,EAAYlhC,OAAOW,GACnBugC,EAAA,EAAYlhC,OAAOW,EAAUV,KAC7BihC,EAAA,EAAYlhC,OAAOW,EAAU1G,MAC7BinC,EAAA,EAAYlhC,OAAOW,EAAUE,WAC7B3B,EAAQ3C,KAAKU,aAAa6D,oBACxBH,EAAUV,IACV,GACAU,EAAUE,UACVF,EAAU1G,KACV0nC,OACAllC,EACAkE,EAAUK,WAAa,kBAAoB,aAE7C,IAAI6gC,GAAoB,EACxBzX,EAASgC,mBAAmB,SAAC0V,GAE3Bv+B,EAAKw+B,uBAAwDD,EAAKnjC,KAAOO,GACrE4iC,EAAKnjC,KAAKS,SAASw8B,YACrBkG,EAAKhX,SAAS,MAAM,GACpBvnB,EAAK09B,kBAAiD/hC,EAAQ4iC,GAC9DD,GAAoB,KAGxB3iC,EAAMylB,WAAWkd,GACjB3iC,EAAMC,IAAI,gBAAiBiiC,EAAUzoC,MAEvC,OAAOuG,GAWT7G,EAAQnB,UAAU6pC,yBAA2B,SAAS3W,EAAU/oB,GAC9D,IAAMxB,EAA8CuqB,EAASzrB,KACzDO,SAEJ,GAAsB,SAAlBW,EAAS5F,KACXiF,EAAQ3C,KAAKylC,iBAAsDniC,OAC9D,CACL,IAAMa,EAAkDb,EAClD8hC,EAAYplC,KAAKqlC,cAAcxX,GAC/BzpB,EAAYpE,KAAKikC,kBAAuC9/B,EAAYC,WAC1EugC,EAAA,EAAYlhC,OAAOW,GACnBugC,EAAA,EAAYlhC,OAAOW,EAAUV,KAC7BihC,EAAA,EAAYlhC,OAAOW,EAAU1G,MAC7BinC,EAAA,EAAYlhC,OAAOU,EAAYK,QAC/BmgC,EAAA,EAAYlhC,OAAOW,EAAUE,WAC7B3B,EAAQ3C,KAAKU,aAAa6D,oBACxBH,EAAUV,IACVS,EAAYK,OACZJ,EAAUE,UACVF,EAAU1G,KACV0nC,OACAllC,EACAkE,EAAUK,WAAa,kBAAoB,aAI/C9B,EAAMC,IAAI,gBAAiBU,EAASlH,MACpC4D,KAAKwlC,uBAAuBliC,EAAUX,GACtC,IAAM+iC,GAA0C,IAAhCpiC,EAAST,SAASw8B,UASlC,OARIqG,GACF7X,EAASU,SAAS,MAAM,GAE1B5rB,EAAMylB,WAAWsd,GAGf5pC,EAAQipB,SAAS8I,EAASR,QACjBpD,YAAYib,SAAS,EAAGviC,GAC5BA,GAYT7G,EAAQnB,UAAU8pC,8BAAgC,SAAS5W,EAAU/oB,GACnE,IAAM6gC,EAA8C9X,EAASzrB,KACvDwjC,EAAkB5lC,KAAK6lC,wBAAwBhY,GACrD8W,EAAA,EAAYlhC,OAAOmiC,GACnB,IAAMjjC,EAAuCijC,EAAgBjjC,MAC7DgiC,EAAA,EAAYne,iBAAiB7jB,EAAOiiC,EAAA,GAEpC5kC,KAAKwlC,uBAAuBG,EAAUhjC,GAClCgjC,EAAS9iC,SAASw8B,WACpBxR,EAASU,SAAS,MAAM,GACxBvuB,KAAK0kC,kBAAkB/hC,EAAOijC,IAE9B/X,EAASR,OAAOsB,gBAYpB7yB,EAAQnB,UAAU8qC,iBAAmB,SAASliC,GAC5C,IAAMuiC,EAAW,IAAItmC,EAAA,EAQrB,OAPAmlC,EAAA,EAAYlhC,OAAOF,EAAaG,KAChCihC,EAAA,EAAYlhC,OAAOF,EAAaZ,OAChC3C,KAAKU,aAAaiD,iCAAiCJ,EAAaG,IAC9DH,EAAaZ,MAAOY,EAAaK,UAAWL,EAAaT,YAAYe,KAAK,SAAClB,GAC3EmjC,EAAS3c,UAAUxmB,EAAMkpB,aACzBia,EAASljC,IAAI,qBAAsBD,EAAMjG,IAAI,yBAExCopC,GAUThqC,EAAQnB,UAAU6qC,uBAAyB,SAASG,EAAUhjC,GAC5D,IAAM2lB,EAAKyd,EAAA,EAAcJ,GACnBK,EAAiBrjC,EAAMjG,IAAI,sBAKjC,GAJAspC,EAAevrC,KAAK6tB,GACpB3lB,EAAMC,IAAI,iBAAkBojC,GAETL,EAAS9iC,SAASojC,WACrB,CACd,IAAMC,EAAcvjC,EAAMjG,IAAI,mBAC9BwpC,EAAYzrC,KAAKkrC,EAAS9iC,SAASojC,YACnCtjC,EAAMC,IAAI,cAAesjC,KAY7BpqC,EAAQnB,UAAU0qC,cAAgB,SAASxX,GACzC,IAAIsY,SACAf,SACEhjC,EAAOyrB,EAASzrB,KAWtB,GAVIA,EAAKqR,KACP0yB,EAAU/jC,EAAKqR,KACNrR,EAAKb,UACdssB,EAASgC,mBAAmB,SAAChC,GAC3B,QAA+B3tB,IAA3B2tB,EAASzrB,KAAKb,UAA0BssB,EAASzrB,KAAKqR,KAExD,OADA0yB,EAAUtY,EAASzrB,KAAKqR,KACjB2yB,EAAA,EAAwB3W,gBAAgBC,OAIjDyW,EAAS,CACX,IAAME,EAAarmC,KAAKgkC,aAAasC,WAAWH,GAA7B,OACnBf,EAAYplC,KAAKgkC,aAAarC,mBAAmBwE,GAC/CryB,MAAOuyB,EAAW,IAAMA,EACxBxyB,IAAKwyB,EAAW,KAGpB,OAAOjB,GAUTtpC,EAAQnB,UAAUwqC,qBAAuB,SAAStX,GAChD,IAAI2B,EAAO3B,EAASR,OAChBkZ,GAAoB,EACxB,GACEA,GAAwC,IAApB/W,EAAKptB,KAAKs9B,MAC9BlQ,EAAOA,EAAKnC,aAEPmC,EAAKnC,SAAWkZ,GACvB,OAAOA,GAUTzqC,EAAQnB,UAAUkrC,wBAA0B,SAC1ChY,GAEA,IADA,IAAI2B,EAAO3B,GACH2B,EAAKnC,OAAOR,QAClB2C,EAAOA,EAAKnC,OAEd,OAAOmC,GAUT1zB,EAAQipB,SAAW,SAAS8I,GAG1B,IAFA,IAAI2B,EAAO3B,EACPlrB,EAAQ,MACJ6sB,EAAK3C,QAAoB,OAAVlqB,GACjB6sB,EAAK7sB,QACPA,EAAQ6sB,EAAK7sB,OAEf6sB,EAAOA,EAAKnC,OAEd,OAAO1qB,IAOT7G,EAAQC,OAASkM,QAAQlM,OAAO,uBAC9ByqC,EAAA,EAAezqC,OAAOK,KACtBgqC,EAAA,EAAwBrqC,OAAOK,KAC/BqqC,EAAA,EAAgB1qC,OAAOK,QAEV+L,QAAQ,sBAAuBrM,GAG9C6B,EAAA,kCC1aAA,EAAA,GAdE6N,IAAK,KAKLk7B,IAAK,IAKLC,GAAI,gGChBN,IAiBAC,EAjBM9qC,YAQJ,SAAAA,EAAYsM,GAAS,mGAAAC,CAAArI,KAAAlE,GAEnBsM,EAAQ1K,KAAO0K,EAAQ1K,MAAQmpC,EAAA,EAAwB3nC,sKAFpC+L,CAAAjL,KAInBwlB,EAAA3qB,KAAAmF,KAAMoI,IAZJ,gUAAA8I,CAAApV,EAAA0pB,GAAA1pB,GAAwBgrC,EAAA,oBCA9B,IAoBAC,EApBMjrC,YASJ,SAAAA,EAAYsM,GAAS,mGAAA4+B,CAAAhnC,KAAAlE,GAEnBsM,EAAQQ,SAAWR,EAAQQ,UAAYk+B,EAAA,EAAa/8B,aAAaS,KACjEpC,EAAQ1K,KAAOmpC,EAAA,EAAwBzoC,sKAHpB6oC,CAAAjnC,KAKnBwlB,EAAA3qB,KAAAmF,KAAMoI,IAdJ,gUAAA8+B,CAAAprC,EAAA0pB,GAAA1pB,GAAwBgrC,EAAA,oCCc9B,IAAMK,EAAArrC,WAcJ,SAAAA,EAAY+D,EAAgBunC,EAAmBrD,gGAAasD,CAAArnC,KAAAlE,GAM1DkE,KAAKq8B,gBAAkBx8B,EAMvBG,KAAKsnC,mBAAqBF,EAM1BpnC,KAAKgkC,aAAeD,EAhClB,OAAAjoC,EAAAq+B,SAAA,oDAAAr+B,EAAAnB,UA0CJ4sC,0BA1CI,SA0CsBn2B,EAAYo2B,GACpC,IAAMC,KACNj4B,EAAwB4B,EAAxB3B,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAAoC,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAjV,OAAA,MAAAwV,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAhT,MAAA,IAAzBuW,EAAyBpD,EAClC03B,EAAMhtC,KAAKuF,KAAK0nC,wBAAwBv0B,EAAWq0B,IAErD,OAAOC,GA/CL3rC,EAAAnB,UAyDJ+sC,wBAzDI,SAyDoBv0B,EAAWq0B,GAEjC,IAAIG,SACE3+B,GAA4B,IAAjBw+B,EAKXprC,EAAO4D,KAAKq8B,gBAAgB52B,UAAU0N,EAAU/W,MAItD,OAAQ+W,EAAUzV,MAChB,KAAKmpC,EAAA,EAAwB3nC,KAC7B,KAAK2nC,EAAA,EAAwB1nC,SAEzBwoC,EAAO,IAAIf,EADT59B,GAEA5M,KAAMA,EACNwM,SAAUk+B,EAAA,EAAa78B,qBAAqBe,OAC5C7B,WACE29B,EAAA,EAAa78B,qBAAqBe,OAClC87B,EAAA,EAAa78B,qBAAqBa,OAClCg8B,EAAA,EAAa78B,qBAAqBc,MAEpC1B,aAAc8J,EAAU/W,KACxBsB,KAAMyV,EAAUzV,OAIhBtB,KAAMA,EACNwM,SAAUk+B,EAAA,EAAa78B,qBAAqBC,OAC5Cb,aAAc8J,EAAU/W,KACxBsB,KAAMyV,EAAUzV,OAGpB,MACF,KAAKmpC,EAAA,EAAwBxnC,SAC3BsoC,EAAO,IAAIC,EAAA,GACTxrC,KAAMA,EACNwM,SAAUk+B,EAAA,EAAap8B,oBAAoBG,OAC3C1B,WACE29B,EAAA,EAAap8B,oBAAoBC,SACjCm8B,EAAA,EAAap8B,oBAAoBE,WACjCk8B,EAAA,EAAap8B,oBAAoBG,QAEnCxB,aAAc8J,EAAU/W,KACxBsB,KAAMyV,EAAUzV,OAElB,MACF,KAAKmpC,EAAA,EAAwBvnC,OAEzBqoC,EADE3+B,EACK,IAAI89B,EAAA,GACT1qC,KAAMA,EACNwM,SAAUk+B,EAAA,EAAa/8B,aAAaI,SACpChB,WACE29B,EAAA,EAAa/8B,aAAaI,SAC1B28B,EAAA,EAAa/8B,aAAaK,aAC1B08B,EAAA,EAAa/8B,aAAaM,yBAC1By8B,EAAA,EAAa/8B,aAAaO,YAC1Bw8B,EAAA,EAAa/8B,aAAaQ,wBAC1Bu8B,EAAA,EAAa/8B,aAAaU,cAE5BpB,aAAc8J,EAAU/W,KACxBsB,KAAMmpC,EAAA,EAAwBvnC,SAGzB,IAAIwnC,EAAA,GACT1qC,KAAMA,EACNwM,SAAUk+B,EAAA,EAAa/8B,aAAaC,QACpCX,aAAc8J,EAAU/W,KACxBsB,KAAMmpC,EAAA,EAAwBvnC,SAGlC,MACF,KAAKunC,EAAA,EAAwBtnC,OAC3BooC,EAAO,IAAIE,EAAA,GACTC,QAASC,EAAA,EAAYtkC,OAAO0P,EAAU20B,SACtC1rC,KAAMA,EACNiN,aAAc8J,EAAU/W,OAE1B,MACF,QAEIurC,EAAO,IAAIZ,EADT/9B,GAEA5M,KAAMA,EACNwM,SAAUk+B,EAAA,EAAa/8B,aAAaS,KACpCrB,WACE29B,EAAA,EAAa/8B,aAAaS,KAC1Bs8B,EAAA,EAAa/8B,aAAaI,SAC1B28B,EAAA,EAAa/8B,aAAaU,cAE5BpB,aAAc8J,EAAU/W,OAIxBA,KAAMA,EACNwM,SAAUk+B,EAAA,EAAa/8B,aAAaS,KACpCnB,aAAc8J,EAAU/W,OAMhC,OAAOurC,GAhKL7rC,EAAAnB,UAwKJqtC,YAxKI,SAwKQC,GACV,IAAMR,KACNt1B,EAAsB81B,EAAtB71B,EAAA1C,MAAAC,QAAAwC,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAtC,OAAAC,cAAmC,KAAAwC,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA5X,OAAA,MAAA+X,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAnC,QAAAC,KAAA,MAAAqC,EAAAD,EAAAzV,MAAA,IAAxBwL,EAAwBkK,EACjCm1B,EAAMhtC,KAAKuF,KAAKkoC,WAAW9/B,IAE7B,OAAOq/B,GA7KL3rC,EAAAnB,UAqLJutC,WArLI,SAqLO9/B,GACT,IAAIu/B,SACJ,OAAQv/B,EAAQ1K,MACd,KAAKmpC,EAAA,EAAwB3nC,KAC7B,KAAK2nC,EAAA,EAAwB1nC,SAC3BwoC,EAAO,IAAIf,EAAax+B,GACxB,MACF,KAAKy+B,EAAA,EAAwBxnC,SAC3BsoC,EAAO,IAAIC,EAAA,EAAiBx/B,GAC5B,MACF,KAAKy+B,EAAA,EAAwBtnC,OAC3B,IAAM4oC,EACJ//B,EACF2/B,EAAA,EAAYtkC,OAAO0kC,EAAcL,SACjCH,EAAO,IAAIE,EAAA,EAAeM,GAC1B,MACF,QACER,EAAO,IAAIZ,EAAa3+B,GAG5B,OAAOu/B,GAzML7rC,EAAAnB,UAmNJytC,UAnNI,SAmNMT,GAER,IAAI5pB,SAEAvV,EAAam/B,EAAKn+B,gBACH,OAAfhB,IACFA,OAAatI,GAEf,IAWMkI,GACJI,aACAQ,SAbe2+B,EAAK3+B,SAcpBN,cAb2C,OAAvBi/B,EAAKj/B,cAAyBi/B,EAAKj/B,mBACvDxI,EAaA9D,KAZWurC,EAAKvrC,KAahBwM,SAZiC,OAAlB++B,EAAK/+B,SAAoB++B,EAAK/+B,cAAW1I,EAaxDiJ,UAZgBw+B,EAAKx+B,UAAYw+B,EAAKx+B,UAAU7L,MAAM,QAAK4C,EAa3DmJ,aAZmBs+B,EAAKt+B,aAaxB3L,KAZyB,OAAdiqC,EAAKjqC,KAAgBiqC,EAAKjqC,UAAOwC,EAa5C4I,cAZ2C,OAAvB6+B,EAAK7+B,cAAyB6+B,EAAK7+B,mBACvD5I,GA8BF,OAhBIynC,aAAgBf,EAClB7oB,EAAQ,IAAI6oB,EAAax+B,GAChBu/B,aAAgBC,EAAA,GACzB7pB,EAAQ,IAAI6pB,EAAA,EAAiBx/B,IACvByO,QAAQ4kB,cACZz7B,KAAKsnC,mBAAmBnnB,wBAAwBwnB,EAAK9wB,UAE9C8wB,aAAgBE,EAAA,GACzBz/B,EAAQ0/B,QAAUH,EAAKG,QAAQxqC,MAAM,GACrCygB,EAAQ,IAAI8pB,EAAA,EAAez/B,IAE3B2V,EADS4pB,aAAgBZ,EACjB,IAAIA,EAAa3+B,GAEjB,IAAI0+B,EAAA,EAAa1+B,GAGpB2V,GAlQLjiB,EAAAnB,UA+QJ0tC,WA/QI,SA+QOC,EAAYC,GAEjBA,EAAS/+B,kBAAoB8+B,EAAW9+B,iBAC1C++B,EAAS9+B,cAAc6+B,EAAW9+B,iBAGhC++B,EAAS7/B,gBAAkB4/B,EAAW5/B,gBACxC6/B,EAAS7/B,cAAgB4/B,EAAW5/B,eAGlC6/B,EAAS3/B,WAAa0/B,EAAW1/B,WACnC2/B,EAAS3/B,SAAW0/B,EAAW1/B,UAG7B2/B,EAASz/B,gBAAkBw/B,EAAWx/B,gBACxCy/B,EAASz/B,cAAgBw/B,EAAWx/B,eAGlCw/B,aAAsBV,EAAA,GACvBW,aAAoBX,EAAA,IAErB5nC,KAAKsnC,mBAAmBjnB,0BAA0BkoB,EAAS1xB,SAC3D0xB,EAAS1xB,QAAQ4kB,cACfz7B,KAAKsnC,mBAAmBnnB,wBAAwBmoB,EAAWzxB,YAtS7D/a,EAAAnB,UAgTJ6tC,eAhTI,SAgTWf,GAAO,IAAAllC,EAAAvC,KACpB,OAAOynC,EAAM3iC,IAAI,SAAC6iC,GAEhB,OADuBplC,EAAKkmC,cAAcd,MAlT1C7rC,EAAAnB,UA6TJ8tC,cA7TI,SA6TUd,GACZ,IAAMe,GACJtsC,KAAMurC,EAAKvrC,KACXiN,aAAcs+B,EAAKt+B,aACnB3L,KAAMiqC,EAAKjqC,MAgCb,OA7BwB,OAApBiqC,EAAKn/B,aACPkgC,EAAIlgC,WAAam/B,EAAKn/B,YAGG,OAAvBm/B,EAAKj/B,gBACPggC,EAAIhgC,cAAgBi/B,EAAKj/B,eAGL,OAAlBi/B,EAAK/+B,WACP8/B,EAAI9/B,SAAW++B,EAAK/+B,UAGC,OAAnB++B,EAAKx+B,YACPu/B,EAAIv/B,UAAYw+B,EAAKx+B,UAAU7L,MAAM,IAGZ,OAAvBqqC,EAAK7+B,gBACP4/B,EAAI5/B,cAAgB6+B,EAAK7+B,eAGvB6+B,aAAgBC,EAAA,IAClBc,EAAIjjB,kBAAoBzlB,KAAKsnC,mBAAmBnnB,wBAC9CwnB,EAAK9wB,UAGL8wB,aAAgBE,EAAA,IAClBa,EAAIZ,QAAUH,EAAKG,SAGdY,GAjWL5sC,EAAAnB,UA4WJguC,aA5WI,SA4WSvgC,GAEX,IAAMoJ,EAAiDpJ,EAAQoJ,WAC3Do3B,EAAa,KAEjB,GAAIxgC,EAAQhD,OACVwjC,EAAaxgC,EAAQhD,WAChB,CACL,IAAMqiC,EAAQr/B,EAAQsD,aAAe8F,EAAW9F,YAC1Cm9B,KAEN,GAAIpB,GAASA,EAAMltC,OACjB,KAAAmY,EAAmB+0B,EAAnB90B,EAAAjD,MAAAC,QAAA+C,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAA7C,OAAAC,cAA0B,KAAA+C,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAnY,OAAA,MAAAsY,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA1C,QAAAC,KAAA,MAAA4C,EAAAD,EAAAhW,MAAA,IAAf+qC,EAAe90B,EAClBzN,EAASpF,KAAK8oC,sBAClBnB,EACAn2B,EACApJ,EAAQ2gC,SAEN3jC,GACFyjC,EAAWpuC,KAAK2K,IAKtB,IAAM7H,EAAYiU,EAAWlG,gBACH,IAAtBu9B,EAAWtuC,OACbquC,EAAaC,EAAW,GACfA,EAAWtuC,QAAU,IAC1BgD,IAAcyrC,EAAA,EAAoBx9B,IACpCo9B,EAAaK,EAAA,IAAmB/tC,MAAM,KAAM2tC,GACnCtrC,IAAcyrC,EAAA,EAAoBrC,IAClCppC,IAAcyrC,EAAA,EAAoBtC,MAE3CkC,EAAaK,EAAA,GAAkB/tC,MAAM,KAAM2tC,KAG3CD,GAAcrrC,IAAcyrC,EAAA,EAAoBtC,MAClDkC,EAAaK,EAAA,IAAmBL,IAIpC,GAAIxgC,EAAQ8gC,QAAS,CACnB,IAAMC,EAAanpC,KAAKopC,gCAAgC53B,GACpD23B,IAEAP,EADEA,EACWK,EAAA,IAAmB/tC,MAC9B,MAEE0tC,EACAO,IAISA,GAKnB,OAAOP,GAtaL9sC,EAAAnB,UA8aJ0uC,mBA9aI,SA8aejhC,GACjB,IAAIkhC,EAAe,KACblkC,EAASpF,KAAK2oC,aAAavgC,GACjC,GAAIhD,EAAQ,CACV,IAAMmkC,EAAa7uC,OAAA8uC,EAAA,EAAA9uC,CAAY0K,GAE/BkkC,GADsB,IAAIG,eACGC,kBAAkBH,GAEjD,OAAOD,GAtbLxtC,EAAAnB,UAicJmuC,sBAjcI,SAickBnB,EAAMn2B,EAAYm4B,GAEtC,IAAIvkC,EAAS,KAEPxI,EAAQ+qC,EAAK/qC,MACnB,IAAKA,EACH,OAAO,KAGT,IAAM4L,EAAa5L,EAAM4L,WACnBE,EAAgB9L,EAAM8L,cACtBE,EAAWhM,EAAMgM,SACjBS,EAAezM,EAAMyM,aACrBP,EAAgBlM,EAAMkM,cAEtB8gC,EAAO9C,EAAA,EAAa/8B,aACpB8/B,EAAO/C,EAAA,EAAap8B,oBACpBo/B,EAAOhD,EAAA,EAAa78B,qBAEpB8/B,GACJF,EAAKl/B,SACLk/B,EAAKj/B,WACLi/B,EAAKh/B,QAGDm/B,GACJJ,EAAIx/B,aACJw/B,EAAIv/B,yBACJu/B,EAAIt/B,YACJs/B,EAAIr/B,yBAGN,GAAIo9B,aAAgBf,EAAc,CAChC,IAAIqD,SACAC,SAEAthC,IAAakhC,EAAK5/B,QACpB+/B,EAAavvC,OAAAyvC,EAAA,EAAAzvC,CAAOgO,GAAe2H,OAAO,cAC1C65B,EAAWxvC,OAAAyvC,EAAA,EAAAzvC,CAAOoO,GAAeuH,OAAO,eAC/BzH,IAAakhC,EAAK9+B,QAC3Bi/B,EAAavvC,OAAAyvC,EAAA,EAAAzvC,CACX8N,GACA6H,OACA,uBAEF65B,EAAWxvC,OAAAyvC,EAAA,EAAAzvC,CACT8N,GACAyrB,IACA,EAAG,QACHmW,SACA,EAAG,WACH/5B,OACA,wBAEOzH,IAAakhC,EAAKh/B,QAC3Bm/B,EAAavvC,OAAAyvC,EAAA,EAAAzvC,CACX8N,GACA6H,OACA,cAGF65B,EAAWxvC,OAAAyvC,EAAA,EAAAzvC,CACT8N,GACAyrB,IACA,GAAI,SACJ5jB,OACA,eAEOzH,IAAakhC,EAAK/+B,OAE3Bk/B,EAAa,aACbC,EAAWxvC,OAAAyvC,EAAA,EAAAzvC,CACT8N,GACA6H,OACA,eAGA45B,GAAcC,IAChB9kC,EAAS6jC,EAAA,OACP5/B,EACA4gC,EACAC,SAGC,GAAIvC,aAAgBE,EAAA,EAAgB,CACzC,IAAMwC,EAAkB1C,EAAK0C,gBAC7B,GAA+B,IAA3BA,EAAgB9vC,OAClB6K,EAAS6jC,EAAA,QACP5/B,EACAghC,EAAgB,SAEb,GAAIA,EAAgB9vC,QAAU,EAAG,CACtC,IAAMsuC,KACN91B,EAA6Bs3B,EAA7Br3B,EAAAtD,MAAAC,QAAAoD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAlD,OAAAC,cAA8C,KAAAoD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAxY,OAAA,MAAA2Y,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA/C,QAAAC,KAAA,MAAAiD,EAAAD,EAAArW,MAAA,IAAnC0tC,EAAmCp3B,EAC5C21B,EAAWpuC,KACTwuC,EAAA,QACE5/B,EACAihC,IAINllC,EAAS6jC,EAAA,GAAkB/tC,MAAM,KAAM2tC,SAEpC,GAAI5lC,EAAA,EAAiB8mC,EAAcnhC,GAAW,CACnD,IAAMqD,EAAeuF,EAAWvF,aAChC87B,EAAA,EAAYvhB,iBAAiBmhB,EAAMC,EAAA,GACnC,IAAMvtB,EAAW0tB,EAAA,EAAYtkC,OAAOkkC,EAAKttB,UACrCzR,IAAaihC,EAAKl/B,SACpBvF,EAAS6jC,EAAA,SACPh9B,EACAoO,EACAsvB,GAEO/gC,IAAaihC,EAAKj/B,WAC3BxF,EAAS6jC,EAAA,WACPh9B,EACAoO,EACAsvB,GAEO/gC,IAAaihC,EAAKh/B,SAC3BzF,EAAS6jC,EAAA,OACPh9B,EACAoO,EACAsvB,SAGC,GAAI1mC,EAAA,EAAiB+mC,EAAcphC,GAAW,CACnD,IAAM2hC,EAAoBxC,EAAA,EAAYruB,aAAalR,GAC/CI,IAAaghC,EAAIx/B,aACnBhF,EAAS6jC,EAAA,YACP5/B,EACAkhC,GAEO3hC,IAAaghC,EAAIv/B,yBAC1BjF,EAAS6jC,EAAA,qBACP5/B,EACAkhC,GAEO3hC,IAAaghC,EAAIt/B,YAC1BlF,EAAS6jC,EAAA,SACP5/B,EACAkhC,GAEO3hC,IAAaghC,EAAIr/B,0BAC1BnF,EAAS6jC,EAAA,kBACP5/B,EACAkhC,SAGC,GAAI3hC,IAAaghC,EAAI5/B,QAC1B5E,EAAS6jC,EAAA,QACP5/B,EACAX,EACAI,QAEG,GAAIF,IAAaghC,EAAIz/B,SAC1B/E,EAAS6jC,EAAA,QACP5/B,EACAb,QAEG,GAAII,IAAaghC,EAAIp/B,KAAM,CAChC,IAAMggC,EAAmBC,OAAOjiC,GAC7Bqf,QAAQ,KAAM,MACdA,QAAQ,MAAO,MACfA,QAAQ,MAAO,MAClBziB,EAAS6jC,EAAA,KACP5/B,EADO,IAEHmhC,EAFG,IAGP,IACA,IACA,KACA,QAEO5hC,IAAaghC,EAAIn/B,eAC1BrF,EAAS6jC,EAAA,WACP5/B,EACAb,IAIJ,OAAOpD,GArnBLtJ,EAAAnB,UAgoBJyuC,gCAhoBI,SAgoB4B53B,GAC9B,IAAIpM,EAAS,KACPsO,EAAQlC,EAAWwC,eACnBrG,EAAe6D,EAAW7D,aAC1BvR,EAAOoV,EAAWjE,kBAExB,GAAImG,GAAS/F,GAAgBvR,EAE3B,QAAkB8D,IAAdwT,EAAMG,IAAmB,CAI3B,IAAMrO,EAASxF,KAAKgkC,aAAarC,mBAC/Bh0B,EACA+F,GACA2C,MAAM,KAERjR,EAAS6jC,EAAA,OAAsB7sC,EAAMoJ,EAAO,GAAIA,EAAO,QAClD,CAKL,IAAM8f,EAAa3X,EAAa2X,YAAc,UACxC1oB,EAAQoD,KAAKgkC,aAAarC,mBAC9Bh0B,EACA+F,GAEEg3B,SAEJ,OAAQplB,GACN,IAAK,OACHolB,EAAYhwC,OAAAyvC,EAAA,EAAAzvC,CAAOkC,GAAOq3B,IAAI,EAAG,SAASmW,SAAS,EAAG,WACtD,MACF,IAAK,QACHM,EAAYhwC,OAAAyvC,EAAA,EAAAzvC,CAAOkC,GAAOq3B,IAAI,EAAG,UAAUmW,SAAS,EAAG,WACvD,MACF,IAAK,MACHM,EAAYhwC,OAAAyvC,EAAA,EAAAzvC,CAAOkC,GAAOq3B,IAAI,EAAG,QAAQmW,SAAS,EAAG,WAQzD,GAAIM,EAAW,CACb,IAAMC,EAAajwC,OAAAyvC,EAAA,EAAAzvC,CAAOkC,GAAOyT,OAAO,uBAClC65B,EAAWQ,EAAUr6B,OAAO,uBAClCjL,EAAS6jC,EAAA,OAAsB7sC,EAAMuuC,EAAYT,IAKvD,OAAO9kC,GAtrBLtJ,KA8rBNqrC,EAAQprC,OAASkM,QAAQlM,OAAO,kBAC9B6uC,EAAA,EAAsB7uC,OAAOK,KAC7ByuC,EAAA,EAAgB9uC,OAAOK,OAEzB+qC,EAAQprC,OAAOoM,QAAQ,iBAAkBg/B,GAGzCxpC,EAAA,qWCjtBA,IAwFAmtC,EAxFMhvC,YAQJ,SAAAA,EAAYsM,gGAASC,CAAArI,KAAAlE,GAAA,IAAAyG,mKAAA0I,CAAAjL,KAEnBkL,EAAArQ,KAAAmF,KAAMoI,IAFa,OAWnB7F,EAAKwoC,oBAAsB3iC,EAAQ6U,UAAY,IAAI+tB,EAAA,EAMnDzoC,EAAKyhB,QAAU,IAAIinB,EAAA,GACjBhuB,SAAU1a,EAAKwoC,oBACfG,OAAO,IAOT3oC,EAAK4hB,OAAS,IAAIgnB,EAAA,GAChB9mB,OAAQ9hB,EAAKyhB,UA3BIzhB,EARjB,gUAAA2O,CAAApV,EAAAoP,GAAArB,EAAA/N,IAAAgO,IAAA,WAAApN,IAAA,WAiDF,OAAOsD,KAAK+qC,oBAAoB7gB,cAjD9BpgB,IAAA,qBAAApN,IAAA,WA8DF,OAAOsD,KAAK+qC,uBA9DVjhC,IAAA,QAAApN,IAAA,WAsEF,OAAOsD,KAAKmkB,UAtEVra,IAAA,SAAApN,IAAA,WAmFF,OAAOsD,KAAKgkB,QAAQnE,gBAnFlB/jB,GAAwBsvC,EAAA,YCD9B,IAsFAC,EAtFMvvC,YAUJ,SAAAA,EAAYsM,gGAASkjC,CAAAtrC,KAAAlE,GAAA,IAAAyG,mKAAAgpC,CAAAvrC,KAEnBwrC,EAAA3wC,KAAAmF,KAAMoI,IAEAqjC,EAAWrjC,EAAQqjC,SAJN,OAanBlpC,EAAKwqB,WAAa0e,EAAS/uC,IAAI,cAQ/B6F,EAAKmpC,eArBcnpC,EAVjB,gUAAAopC,CAAA7vC,EAAA0vC,GAAA1vC,EAAAnB,UAqCJixC,cArCI,SAqCUp6B,GACZg6B,EAAA7wC,UAAMixC,cAAN/wC,KAAAmF,KAAoBwR,GACpBu2B,EAAA,EAAYvhB,iBAAiBhV,EAAYs5B,GACzC9qC,KAAK6rC,oBAAoBr6B,IAxCvB1V,EAAAnB,UA+CJkxC,oBA/CI,SA+CgBr6B,GAClBxR,KAAK0rC,YAAYl6B,EAAW8W,IAAMtoB,KAAK+sB,WAAWE,OAChD,kBAAMzb,EAAW6W,SACjBroB,KAAK8rC,+BAA+BzuC,KAAK2C,KAAMwR,KAlD/C1V,EAAAnB,UA4DJmxC,+BA5DI,SA4D2Bt6B,EAAY5U,EAAOmvC,QAClC7rC,IAAVtD,GACF4U,EAAW7O,MAAMylB,WAAWxrB,IA9D5Bd,EAAAnB,UAqEJqxC,iBArEI,SAqEax6B,GACfg6B,EAAA7wC,UAAMqxC,iBAANnxC,KAAAmF,KAAuBwR,GACvBu2B,EAAA,EAAYvhB,iBAAiBhV,EAAYs5B,GACzC9qC,KAAKisC,sBAAsBz6B,IAxEzB1V,EAAAnB,UA+EJsxC,sBA/EI,SA+EkBz6B,GACpBxR,KAAK0rC,YAAYl6B,EAAW8W,aACrBtoB,KAAK0rC,YAAYl6B,EAAW8W,KAjFjCxsB,GAAwBowC,EAAA,gQCF9B,IA6BAC,EA7BMrwC,YAQJ,SAAAA,EAAYsM,gGAASgkC,CAAApsC,KAAAlE,GAAA,IAAAyG,mKAAA8pC,CAAArsC,KAEnBwrC,EAAA3wC,KAAAmF,KAAMoI,IAFa,OAQnB7F,EAAK+pC,KAAOlkC,EAAQ1E,IARDnB,EARjB,gUAAAgqC,CAAAzwC,EAAA0vC,GAAAgB,EAAA1wC,IAAAgO,IAAA,MAAApN,IAAA,WAwBF,OAAOsD,KAAKssC,SAxBVxwC,GAAwBowC,EAAA,+PCG9B,IAoMAO,EApMM3wC,YAcJ,SAAAA,EAAYsM,EAASxI,gGAAiB8sC,CAAA1sC,KAAAlE,GAAA,IAAAyG,mKAAAoqC,CAAA3sC,KAEpC4sC,EAAA/xC,KAAAmF,KAAMoI,IAEAqjC,EAAWrjC,EAAQqjC,SAJW,OAapClpC,EAAK4hB,OAML5hB,EAAKsqC,iBAAmBjtC,EAMxB2C,EAAKwqB,WAAa0e,EAAS/uC,IAAI,cAQ/B6F,EAAKuqC,4BAGLvqC,EAAKwqC,QApC+BxqC,EAdlC,gUAAAyqC,CAAAlxC,EAAA8wC,GAAA9wC,EAAAnB,UAwDJoyC,MAxDI,WAyDFhF,EAAA,EAAYtkC,OACVzD,KAAKs6B,YAAY//B,OAAQ,yCAE3B,IAAAiV,EAAyBxP,KAAKs6B,YAA9B7qB,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAA2C,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAjV,OAAA,MAAAwV,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAhT,MAAA,IAAhC4U,EAAgCzB,EACzCg4B,EAAA,EAAYvhB,iBAAiBhV,EAAYy7B,EAAA,GACzCjtC,KAAK6rC,oBAAoBr6B,KA9DzB1V,EAAAnB,UAqEJgP,QArEI,WAsEF,IAAAwI,EAAyBnS,KAAKs6B,YAA9BloB,EAAA1C,MAAAC,QAAAwC,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAtC,OAAAC,cAA2C,KAAAwC,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA5X,OAAA,MAAA+X,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAnC,QAAAC,KAAA,MAAAqC,EAAAD,EAAAzV,MAAA,IAAhC4U,EAAgCc,EACzCy1B,EAAA,EAAYvhB,iBAAiBhV,EAAYy7B,EAAA,GACzCjtC,KAAKisC,sBAAsBz6B,GAE7Bo7B,EAAAjyC,UAAMgP,QAAN9O,KAAAmF,OA1EElE,EAAAnB,UAkGJixC,cAlGI,SAkGUp6B,GACZo7B,EAAAjyC,UAAMixC,cAAN/wC,KAAAmF,KAAoBwR,GACpBu2B,EAAA,EAAYvhB,iBAAiBhV,EAAYy7B,EAAA,GACzCjtC,KAAK6rC,oBAAoBr6B,IArGvB1V,EAAAnB,UA4GJkxC,oBA5GI,SA4GgBr6B,GAElB,IAAM8W,EAAK9W,EAAW8W,GAEtBtoB,KAAK8sC,yBAAyBxkB,GAAMtoB,KAAK+sB,WAAWE,OAClD,kBAAMzb,EAAW6W,SACjBroB,KAAK8rC,+BAA+BzuC,KAAK2C,OAGtCA,KAAKmkB,QAKRnkB,KAAKmkB,OAAOznB,IAAI,kBAAkBjC,KAAK6tB,GACvCtoB,KAAKktC,gBALLltC,KAAKmkB,OAASnkB,KAAK6sC,iBAAiB1kB,kCAClC3W,IAvHF1V,EAAAnB,UAoIJmxC,+BApII,SAoI2BlvC,EAAOmvC,QACtB7rC,IAAVtD,GAAuBA,IAAUmvC,GACnC/rC,KAAKktC,gBAtILpxC,EAAAnB,UA6IJuyC,aA7II,WA8IF,IAAMvqC,EAAQ3C,KAAK2C,MACfuP,KAGJQ,EAAyB1S,KAAKs6B,YAA9B3nB,EAAAjD,MAAAC,QAAA+C,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAA7C,OAAAC,cAA2C,KAAA+C,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAnY,OAAA,MAAAsY,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA1C,QAAAC,KAAA,MAAA4C,EAAAD,EAAAhW,MAAA,IAAhC4U,EAAgCqB,EACzCk1B,EAAA,EAAYvhB,iBAAiBhV,EAAYy7B,EAAA,GACrCz7B,EAAW6W,UACbnW,EAAaA,EAAWiK,OAAO3K,EAAWiB,qBAK9CzS,KAAK6sC,iBAAiBvgB,oBAAoB3pB,EAAOuP,EAAW3K,KAAK,OA1J/DzL,EAAAnB,UAgKJqxC,iBAhKI,SAgKax6B,GACfo7B,EAAAjyC,UAAMqxC,iBAANnxC,KAAAmF,KAAuBwR,GACvBu2B,EAAA,EAAYvhB,iBAAiBhV,EAAYy7B,EAAA,GACzCjtC,KAAKisC,sBAAsBz6B,IAnKzB1V,EAAAnB,UA0KJsxC,sBA1KI,SA0KkBz6B,GAEpB,IAAM8W,EAAK9W,EAAW8W,GAChB3lB,EAAQ3C,KAAK2C,OAInBwqC,EADmBntC,KAAK8sC,yBAAyBxkB,aAE1CtoB,KAAK8sC,yBAAyBxkB,GAGrCrlB,EAAA,EAAejD,KAAKs6B,YAAa9oB,GAGjC,IAAMzO,EAAM/C,KAAK6sC,iBAAiBrgB,kBAAkB7pB,GAChDI,GACFE,EAAA,EAAeF,EAAKulB,GAGlBtoB,KAAKs6B,YAAY//B,QACnByF,KAAKktC,gBA9LLE,EAAAtxC,IAAAgO,IAAA,QAAApN,IAAA,WAuFF,OAAOsD,KAAKmkB,WAvFVroB,GAAwBqwC,wRCc9B,IAAMkB,EAAAvxC,WAmBJ,SAAAA,EAAY+D,EAAgBH,EAAWC,EAAIgtB,EAAYyM,EACrDkU,EAAU1tC,gGAAiB2tC,CAAAvtC,KAAAlE,GAQ3BkE,KAAKwtC,UAAY9tC,EAMjBM,KAAKytC,GAAK9tC,EAMVK,KAAK+sB,WAAaJ,EAQlB3sB,KAAKw5B,aAAeJ,EAAgBj0B,WAMpCnF,KAAK0tC,UAAYJ,EAMjBttC,KAAK6sC,iBAAmBjtC,EAgBxBI,KAAK2tC,mBAOL3tC,KAAK4tC,UAML5tC,KAAK6tC,KAAO,KAOZ7tC,KAAK8tC,WAAa,IAAIzC,GACpB/Q,eACAmR,SAAUzrC,KAAKwtC,UACfO,MAAOluC,EAAe4F,UAAU,iBAQlCzF,KAAKguC,qBAAuB,IAAIhD,EAAA,EAOhChrC,KAAKiuC,sBAAwB,IAAIjD,EAAA,EAQjChrC,KAAKkuC,cAELC,EAAA,EAAgBnuC,KAAKw5B,aAAc,SAAUx5B,KAAKouC,yBAA0BpuC,MA5H1E,OAAAlE,EAAAq+B,SAAA,+FAAAr+B,EAAAnB,UAiJJ0zC,aAjJI,SAiJSC,GACXtuC,KAAKuuC,oBAAoB9zC,KAAK6zC,IAlJ5BxyC,EAAAnB,UAyJJ6zC,gBAzJI,SAyJYF,GACdtuC,KAAKuuC,oBAAoBE,OAAOH,IA1J9BxyC,EAAAnB,UAiKJ+zC,YAjKI,SAiKQhrC,GACV,IAAI8mB,EAAQ,KACZhb,EAAuBxP,KAAK2uC,UAA5Bl/B,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAAuC,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAjV,OAAA,MAAAwV,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAhT,MAAA,IAA5B0xC,EAA4Bv+B,EACrC,GAAIu+B,EAAS5qC,MAAQA,EAAK,CACxB8mB,EAAQ8jB,EACR,OAGJ,OAAO9jB,GAzKL1uB,EAAAnB,UAoMJi0C,cApMI,SAoMUC,GACZ7uC,KAAK8uC,qBAAqBr0C,KAAKo0C,IArM7B/yC,EAAAnB,UA4MJo0C,iBA5MI,SA4MaF,GACf7uC,KAAK8uC,qBAAqBL,OAAOI,IA7M/B/yC,EAAAnB,UAoNJq0C,aApNI,SAoNStrC,GACX,IAAI8mB,EAAQ,KACZrY,EAAwBnS,KAAKivC,WAA7B78B,EAAA1C,MAAAC,QAAAwC,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAtC,OAAAC,cAAyC,KAAAwC,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA5X,OAAA,MAAA+X,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAnC,QAAAC,KAAA,MAAAqC,EAAAD,EAAAzV,MAAA,IAA9BiyC,EAA8Bv8B,EACvC,GAAIu8B,EAAUnrC,MAAQA,EAAK,CACzB8mB,EAAQqkB,EACR,OAGJ,OAAOrkB,GA5NL1uB,EAAAnB,UA0PJu0C,qBA1PI,SA0PiB19B,GACnB,QAASxR,KAAK2tC,gBAAgBn8B,EAAW8W,KA3PvCxsB,EAAAnB,UAsRJw0C,UAtRI,SAsRMxsC,GACR3C,KAAKovC,WAAWnlB,YAAYxvB,KAAKkI,IAvR/B7G,EAAAnB,UA8RJ00C,aA9RI,SA8RS1sC,GACX3C,KAAKovC,WAAWnlB,YAAYwkB,OAAO9rC,IA/RjC7G,EAAAnB,UAwSJ20C,wCAxSI,SAwSoC3sC,EAAO6mB,EAAc9lB,GAE3D,IAAM4kB,EAAKxsB,EAAQyzC,MAAM5sC,GACnBwF,EAAUqhB,EAAA,QAEZhY,SAGJ,GAAIxR,KAAK2tC,gBAAgBrlB,GACvB9W,EAAaxR,KAAK2tC,gBAAgBrlB,OAC7B,CACL,IAAMknB,EAAMhmB,EAAA,mBAGNgM,EAAUga,EAAA,cAEVpjC,EAAeopB,EAAQia,SADR,yBAEJja,EAAQ,GAInB5mB,EADc4gC,EAAA,sBACcC,SAChCxC,EAAA,EAAkBp+B,cAAcC,KAC9Bm+B,EAAA,EAAkBp+B,cAAcC,SAAM5O,EAGpCqP,GAAmC,IAAvB5M,EAAA,gBACIzC,IAAlB0O,EAIJ4C,EAAa,IAAIy7B,EAAA,GACf3kB,GAAIA,EACJlsB,KAAMuG,EAAA,MACNyJ,aAAcA,EACdE,YACElQ,KAAMuG,EAAA,KACN4M,UAAWA,IAEb3C,QAASqgC,EAAA,EAAkBpgC,KAAK7E,IAChCqgB,SAAS,EACTzZ,cAAeA,EACfM,OAAQxL,IAIV1D,KAAK2tC,gBAAgBrlB,GAAM9W,EAO7B,IAAI88B,EAAWtuC,KAAK0uC,YAAYhrC,GAC5B4qC,EACGA,EAAShU,YAAYmV,SAASj+B,KACjC88B,EAAS1C,cAAcp6B,GACvBxR,KAAKw5B,aAAa/+B,KAAK+W,KAGzB88B,EAAW,IAAI7B,GACbnS,aAAc9oB,GACdi6B,SAAUzrC,KAAKwtC,UACfO,MAAO5lC,EAAA,MACPzE,IAAKA,GACJ1D,KAAK6sC,kBACR7sC,KAAKmvC,UAAUb,EAAS3rC,OACxB3C,KAAKquC,aAAaC,GAClBtuC,KAAKw5B,aAAa/+B,KAAK+W,KA5WvB1V,EAAAnB,UAsXJ+0C,yCAtXI,SAsXqC/sC,EAAO6mB,EAAcla,GAC5D,IAAMgZ,EAAKxsB,EAAQyzC,MAAM5sC,GAIzB,IAAI3C,KAAKkuC,WAAW5lB,GAApB,CAIA,IAAI9W,SAGJ,GAAIxR,KAAK2tC,gBAAgBrlB,GACvB9W,EAAaxR,KAAK2tC,gBAAgBrlB,OAC7B,CAEL,IAAMlsB,EAAO2rC,EAAA,EAAYlrB,aAAala,EAAA,OAChCyM,EAAY24B,EAAA,EAAYlrB,aAAala,EAAA,YAI3C6O,EAAa,IAAIy7B,EAAA,GACf3kB,GAAIA,EACJlsB,KAAMA,EACNwQ,QAASqgC,EAAA,EAAkBpgC,KAAK9E,KAChCsgB,SAAS,EACTjZ,UAAWA,EACXE,QAASA,IAIXtP,KAAK2tC,gBAAgBrlB,GAAM9W,EAI7B,IAAIq9B,EAAY7uC,KAAKgvC,aAAa1/B,GAC7Bu/B,IACHA,EAAY,IAAI1C,GACd7R,eACAyT,MAAOvkB,EAAA,4BACP9lB,IAAK4L,IAEPtP,KAAK4uC,cAAcC,IAErBA,EAAUjD,cAAcp6B,GAGxB,IAAMm+B,EAAW3vC,KAAK6sC,iBAAiBtjB,oCACrCC,EACA7mB,GAEF3C,KAAKmvC,UAAUQ,GAGf3vC,KAAKw5B,aAAa/+B,KAAK+W,GAGvBxR,KAAKkuC,WAAW5lB,IACdqnB,SAAUA,EAGVxC,WAAYntC,KAAK+sB,WAAWE,OAC1B,kBAAMzb,EAAW6W,SACjBroB,KAAK4vC,mCAAmCvyC,KAAK2C,KAAM2vC,OArbrD7zC,EAAAnB,UA8bJk1C,+BA9bI,SA8b2BC,GAAM,IAAAvtC,EAAAvC,KACnCA,KAAK+vC,mBAAmBD,GAAMjsC,KAC5B,SAAC2N,GACC,IAAMw+B,EAAYztC,EAAKurC,WAGnBkC,EAAU1V,YAAYmV,SAASj+B,KAMnCjP,EAAK4sC,UAAU39B,EAAW7O,OAG1BqtC,EAAUpE,cAAcp6B,GAGxBjP,EAAKsrC,KAAK1uB,UAAU8wB,IAAIz+B,EAAW4N,QAGnC7c,EAAKi3B,aAAa/+B,KAAK+W,KAEzB,SAAC0+B,GACCnI,EAAA,EAAYrjC,KAAZ,wBAAyCorC,EAAK1zC,SAtdhDN,EAAAnB,UAieJo1C,mBAjeI,SAieeD,GAAM,IAAA5pC,EAAAlG,KAEjBY,EAAQZ,KAAKytC,GAAG7sC,QAEtB,GAAIZ,KAAK4tC,OAAOkC,EAAK1zC,MACnBwE,EAAMsD,QAAQlE,KAAK4tC,OAAOkC,EAAK1zC,WAC1B,CACL,IAAMkxC,EAAWttC,KAAK0tC,UACtBJ,EAASvkB,KAAK+mB,GAAMjsC,KAAK,SAACssC,GACxB,IAAIlzB,SACEmzB,GACJjyB,kBAAmBjY,EAAK2nC,KAAK1uB,UAAUkxB,iBASzC,GANI/C,EAASgD,MAAMH,GACjBlzB,GAAW,IAAIK,EAAA,GAAcizB,aAAaJ,EAASC,GAC1C9C,EAASkD,MAAML,KACxBlzB,GAAW,IAAIG,EAAA,GAAcmzB,aAAaJ,EAASC,IAGjDnzB,EAAU,CACZ,IAAMqL,EAAKxsB,EAAQyzC,MAAMO,GAEnBt+B,EAAa,IAAIs5B,GACrB7tB,SAAU,IAAI+tB,EAAA,EAAa/tB,GAC3BqL,GAAIA,EACJlsB,KAAM0zC,EAAK1zC,KACXisB,SAAS,IAIXniB,EAAK0nC,OAAOkC,EAAK1zC,MAAQoV,EACzBtL,EAAKynC,gBAAgBrlB,GAAM9W,EAE3B5Q,EAAMsD,QAAQsN,QAEd5Q,EAAM+G,WAKZ,OAAO/G,EAAME,SA1gBXhF,EAAAnB,UAmhBJi1C,mCAnhBI,SAmhB+BjtC,EAAO/F,EAAOmvC,QACjC7rC,IAAVtD,GAAuBA,IAAUmvC,GACnCppC,EAAMylB,WAAWxrB,IArhBjBd,EAAAnB,UAgiBJyzC,yBAhiBI,SAgiBqB7nB,GACvB,IAAM/U,EAAa+U,EAAI2F,QACnBlsB,KAAK2tC,gBAAgBn8B,EAAW8W,MAAQ9W,IACtCA,aAAsBs5B,EACxB9qC,KAAKywC,sBAAsBj/B,GAClBA,aAAsBy7B,EAAA,GAC/BjtC,KAAK0wC,qBAAqBl/B,KAtiB5B1V,EAAAnB,UAojBJ81C,sBApjBI,SAojBkBj/B,GACpBxR,KAAKqvC,aAAa79B,EAAW7O,OAC7B3C,KAAK8tC,WAAW9B,iBAAiBx6B,IAtjB/B1V,EAAAnB,UAokBJ+1C,qBApkBI,SAokBiBl/B,GACnB,GAAIA,EAAW5E,UAAYqgC,EAAA,EAAkBpgC,KAAK7E,IAAK,CAErD,IAAMtE,EAAM8N,EAAWtC,OACvB64B,EAAA,EAAYtkC,OAAOC,GAEnB,IAAM4qC,EAAWtuC,KAAK0uC,YAAYhrC,GAC9B4qC,GAAYA,EAAShU,YAAYmV,SAASj+B,KAE5C88B,EAAStC,iBAAiBx6B,GAIrB88B,EAAShU,YAAY//B,SACxByF,KAAKqvC,aAAaf,EAAS3rC,OAC3B2rC,EAAS3kC,UACT3J,KAAKwuC,gBAAgBF,UAGpB,GAAI98B,EAAW5E,UAAYqgC,EAAA,EAAkBpgC,KAAK9E,KAAM,CAE7D,IAAMrE,EAAM8N,EAAWlC,QACvBy4B,EAAA,EAAYtkC,OAAOC,GAEnB,IAAMmrC,EAAY7uC,KAAKgvC,aAAatrC,GACpC,GAAImrC,GAAaA,EAAUvU,YAAYmV,SAASj+B,GAAa,CAE3Dq9B,EAAU7C,iBAAiBx6B,GAI3B,IAAM8W,EAAK9W,EAAW8W,GACtBtoB,KAAKqvC,aAAarvC,KAAKkuC,WAAW5lB,GAAIqnB,UACtC3vC,KAAKkuC,WAAW5lB,GAAI6kB,oBACbntC,KAAKkuC,WAAW5lB,GAIlBumB,EAAUvU,YAAY//B,SACzBs0C,EAAUllC,UACV3J,KAAK+uC,iBAAiBF,OA5mB1B8B,EAAA70C,IAAAgO,IAAA,YAAApN,IAAA,WAuIF,OAAOsD,KAAK8tC,cAvIVhkC,IAAA,YAAApN,IAAA,WAiLF,OAAOsD,KAAKguC,qBAAqB9jB,cAjL/BpgB,IAAA,sBAAApN,IAAA,WA0LF,OAAOsD,KAAKguC,wBA1LVlkC,IAAA,aAAApN,IAAA,WAqOF,OAAOsD,KAAKiuC,sBAAsB/jB,cArOhCpgB,IAAA,uBAAApN,IAAA,WA8OF,OAAOsD,KAAKiuC,yBA9OVnkC,IAAA,aAAApN,IAAA,WAmQF,IAAMoI,EAAM9E,KAAK6tC,KAEjB,OADA9F,EAAA,EAAYtkC,OAAOqB,GACZ9E,KAAK6sC,iBAAiB/iB,gBAC3BhlB,EACA8rC,EAAA,EAAQC,4BAvQR/mC,IAAA,MAAAlH,IAAA,SA8QIkC,GACN9E,KAAK6tC,KAAO/oC,MA/QVhJ,KAioBNuxC,EAAQkC,MAAQ,SAAS5sC,GACvB,OAAOmuC,EAAA,EAAcnuC,GAAS,KAIhC0qC,EAAQtxC,OAASkM,QAAQlM,OAAO,iCAC9Bg1C,EAAA,EAAmBh1C,OAAOK,KAC1B40C,EAAA,EAAaj1C,OAAOK,KACpB60C,EAAA,EAA0Bl1C,OAAOK,OAEnCixC,EAAQtxC,OAAOoM,QAAQ,gCACrBklC,GAGF1vC,EAAA,mUC5pBA,IAAM7B,aAkBJ,SAAAA,iGAAcuM,CAAArI,KAAAlE,GAMZkE,KAAKkxC,YAAc,IAAIC,EAAA,EAMvBnxC,KAAK6tC,KAAO,KAMZ7tC,KAAK2jC,iBAEL1d,EAAA,EAAgBjmB,KAAKkxC,YAAa,MAAOlxC,KAAKoxC,sBAAuBpxC,MAtCnE,OAAAlE,EAAAnB,UAsEJ02C,SAtEI,SAsEKvsC,GAGP,IAAMoa,EAAOpa,EAAIqa,UACjBnf,KAAK2jC,cAAclpC,KACjBwrB,EAAA,EAAgB/G,EAAM,oBAAqBlf,KAAKsxC,4BAA6BtxC,OAI/E,IAAMslB,EAAapG,EAAKuM,gBACxBjoB,EAAA,EAAYkW,aAAa4L,GACzBtlB,KAAKuxC,6BAA6BjsB,IAjFhCxpB,EAAAnB,UAyFJ62C,WAzFI,SAyFO1sC,GACT9E,KAAK2jC,cAAczgC,QAAQ+iB,EAAA,GAC3BjmB,KAAK2jC,kBA3FH7nC,EAAAnB,UAoGJ22C,4BApGI,SAoGwB/qB,GAC1B,IAAMrH,EAAOqH,EAAIE,OACjBjjB,EAAA,EAAYgjB,iBAAiBtH,EAAMuyB,EAAA,GACnC,IAAMnsB,EAAapG,EAAKuM,gBACxBjoB,EAAA,EAAYkW,aAAa4L,GACzBtlB,KAAKuxC,6BAA6BjsB,IAzGhCxpB,EAAAnB,UAiHJ42C,6BAjHI,SAiHyBjsB,GAAY,IAAA/iB,EAAAvC,KACvCA,KAAKkxC,YAAYhuC,QAAQ,SAACsO,GACxBjP,EAAKmvC,4BAA4BlgC,EAAY8T,MAnH7CxpB,EAAAnB,UA6HJ+2C,4BA7HI,SA6HwBlgC,EAAY8T,GAGtC,GAAK9T,EAAWmgC,uBAAhB,CAIA,IAAMlrC,EAAgB+K,EAAW/K,cAC3BG,EAAgB4K,EAAW5K,cAQ3BgrC,GAN+B,OAAlBhrC,QACG1G,IAAlB0G,GACA0e,GAAc1e,KACmB,OAAlBH,QACGvG,IAAlBuG,GACA6e,GAAc7e,GAGlB+K,EAAWogC,QAAUA,IA/InB91C,EAAAnB,UAwJJy2C,sBAxJI,SAwJkB3uB,GACpB,IAAMjR,EAAahO,EAAA,EAAYgjB,iBAC7B/D,EAAMyJ,QAAS7X,EAAA,GACjB,GAAIrU,KAAK6tC,KAAM,CACb,IAAMvoB,EAAatlB,KAAK6tC,KAAK1uB,UAAUsM,gBACvCjoB,EAAA,EAAYkW,aAAa4L,GACzBtlB,KAAK0xC,4BAA4BlgC,EAAY8T,KA9J7Czb,EAAA/N,IAAAgO,IAAA,MAAAlH,IAAA,SA6CIkC,GACF9E,KAAK6tC,OAAS/oC,IAId9E,KAAK6tC,MACP7tC,KAAKwxC,WAAWxxC,KAAK6tC,MAGvB7tC,KAAK6tC,KAAO/oC,EAERA,GACF9E,KAAKqxC,SAASvsC,OAzDdgF,IAAA,aAAApN,IAAA,WA8DF,OAAOsD,KAAKkxC,gBA9DVp1C,KAwKNA,EAAQC,OAASkM,QAAQlM,OAAO,sBAEhCD,EAAQC,OAAOoM,QAAQ,kBAAmBrM,GAG1C6B,EAAA,mWCtLAk0C,EAAAn2C,EAAA,KA6DMI,EAAUmM,QAAQlM,OAAO,8BAC7B+1C,EAAA,EAAsB/1C,OAAOK,KAC7B21C,EAAA,EAAmBh2C,OAAOK,KAC1B41C,EAAA,EAAwBj2C,OAAOK,KAC/B61C,EAAA,EAA+B71C,KAC/B81C,EAAA,EAAkC91C,KAClC+1C,EAAA,EAAmBp2C,OAAOK,KAC1Bg2C,EAAA,EAA0Bh2C,KAC1Bi2C,EAAA,EAAqBj2C,KACrBk2C,EAAA,EAAoBv2C,OAAOK,KAC3Bm2C,EAAA,EAAsBx2C,OAAOK,KAC7Bo2C,EAAA,EAAwBz2C,OAAOK,OAIjCN,EAAQ22C,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,mCAAoCj3C,EAAQ,SA4CjEI,EAAQ82C,WAAa,WACnB,OACE7iB,WAAY,qCACZ8iB,OACEC,MAAS,uBACTC,iBAAoB,kCACpBjuC,IAAO,qBACP0pB,MAAS,uBACTyL,UAAa,4BACb+Y,YAAe,yBAEjBC,kBAAkB,EAClBC,YAAa,qCAKjBp3C,EAAQq3C,UAAU,iBAChBr3C,EAAQ82C,YAuBV92C,EAAQs3C,YAAc,SAASC,EAAU1zC,EAAI+sB,EAAQqP,EACnDl8B,EAAgByzC,EAAgBC,EAAaC,EAC7CC,EAAiBrM,EAAmBxnC,EAAiB8zC,GAAqB,IAAAnxC,EAAAvC,KAW1EA,KAAK8yC,MAML9yC,KAAK+yC,iBAML/yC,KAAK8E,IAQL9E,KAAKwuB,MAMLxuB,KAAKi6B,UAMLj6B,KAAKgzC,YASLhzC,KAAK2zC,SAAWN,EAMhBrzC,KAAKytC,GAAK9tC,EAMVK,KAAK4zC,OAASlnB,EAMd1sB,KAAK6zC,SAAW9X,EAMhB/7B,KAAKq8B,gBAAkBx8B,EAMvBG,KAAK8zC,gBAAkBR,EAMvBtzC,KAAK+zC,aAAeR,EAMpBvzC,KAAKg0C,kBAAoBR,EAMzBxzC,KAAKi0C,iBAAmBR,EAMxBzzC,KAAKsnC,mBAAqBF,EAM1BpnC,KAAK6sC,iBAAmBjtC,EAMxBI,KAAKk0C,qBAAuBR,EAS5B1zC,KAAKm0C,cAMLn0C,KAAKo0C,kBAQLp0C,KAAKq0C,iBAAmB,KAQxBr0C,KAAKs0C,gCAAiC,EAOtCt0C,KAAK06B,SAAU,EAMf16B,KAAKuI,QAAS,EAMdvI,KAAKu0C,cAAe,EAMpBv0C,KAAKw0C,mBAAqB,IAAIC,EAAA,EAAqBz0C,KAAM,gBAMzDA,KAAK00C,iBAAkB,EAMvB10C,KAAK20C,sBAAwB,IAAIF,EAAA,EAAqBz0C,KAAM,mBAM5DA,KAAK6W,QAAU,KAEf7W,KAAK4zC,OAAO3mB,OACV,kBAAM1qB,EAAKsU,SACX7W,KAAK40C,qBAAqBv3C,KAAK2C,OAOjCA,KAAK60C,eAAY30C,EAMjBF,KAAKid,SAMLjd,KAAK80C,cAAgB,IAAIC,EAAA,EAMzB/0C,KAAKg1C,QAMLh1C,KAAKi1C,mBAMLj1C,KAAKk1C,MAAQ,IAAIC,EAAA,GACfC,UACEC,IAAK,eACL3vC,MAAO7F,EAAe4F,UAAU,QAChCrJ,KAAM,SAENi5C,IAAK,qBACL3vC,MAAO7F,EAAe4F,UAAU,UAChCrJ,KAAM,aAQV4D,KAAKs1C,WAMLt1C,KAAKu1C,QAMLv1C,KAAKw1C,mBAMLx1C,KAAKy1C,sBAMLz1C,KAAK2jC,iBAML3jC,KAAKoR,WAAa,KAMlBpR,KAAK01C,SAML11C,KAAK21C,iBAAkB,EAMvB31C,KAAK41C,mBAAqB,KAM1B51C,KAAK61C,gBAAkB,MAjTzB/5C,EAAQs3C,2MAwTRt3C,EAAQs3C,YAAYz4C,UAAUm7C,QAAU,WAAW,IAAA5vC,EAAAlG,KAC3C+1C,EAAO/1C,KAAKq8B,gBAAgB2Z,qBAClCvV,EAAEwV,eAAeC,UAAUH,GAC3BtV,EAAEwV,eAAeE,iBAAiB,IAAIC,EAAA,GAGtCp2C,KAAK8yC,OAAuB,IAAf9yC,KAAK8yC,MAClB9yC,KAAKm0C,cACHn0C,KAAK+yC,iBAAiB3wC,KACxBpC,KAAKid,SAAWjd,KAAKgzC,YAAYnnB,YAAYwqB,wBAC7Cr2C,KAAKi6B,eAA+B/5B,IAAnBF,KAAKi6B,UAA0Bj6B,KAAKi6B,UAAY,GAGjE,IAAMt3B,EAAQ2zC,EAAA,EAA6BvxB,SAAS/kB,KAAK+yC,kBACzDwD,EAAA,EAAY9yC,OACVd,aAAiB6zC,EAAA,GAAgB7zC,aAAiB8zC,EAAA,GACpDz2C,KAAKo0C,kBAAoBzxC,EAGzB3C,KAAKg1C,QAAU,IAAI0B,EAAA,GACjBC,gBAAiBC,EAAA,EAAUD,gBAC3B15B,SAAUjd,KAAKid,SACf5F,MAAOrX,KAAKsnC,mBAAmBpwB,gBAAe,KAEhDlX,KAAK80C,cAAcr6C,KAAKuF,KAAKg1C,SAE7Bh1C,KAAKu1C,QAAU,IAAIsB,EAAA,GACjB55B,SAAUjd,KAAKid,SACf5F,MAAO,IAAIy/B,EAAA,GACTj+B,KAAM,IAAIg5B,EAAA,GACRh5B,KAAM,IACNyF,KAAM,0BACNlF,KAAM,IAAI29B,EAAA,GACR5+B,MAAO,kBAKfnY,KAAK80C,cAAcr6C,KAAKuF,KAAKu1C,SAE7Bv1C,KAAKs1C,WAAa,IAAI0B,EAAA,GACpB/5B,SAAUjd,KAAKid,SACf5F,MAAO,IAAIy/B,EAAA,GACTj+B,KAAM,IAAIg5B,EAAA,GACRh5B,KAAM,IACNyF,KAAM,0BACNlF,KAAM,IAAI29B,EAAA,GACR5+B,MAAO,kBAKfnY,KAAK80C,cAAcr6C,KAAKuF,KAAKs1C,YAE7Bt1C,KAAKi3C,0BAELj3C,KAAKi1C,mBAAqB,IAAIR,EAAA,EAAqBz0C,KAAKg1C,QAAS,UACjEh1C,KAAKw1C,mBAAqB,IAAIf,EAAA,EAAqBz0C,KAAKu1C,QAAS,UACjEv1C,KAAKy1C,sBAAwB,IAAIhB,EAAA,EAAqBz0C,KAAKs1C,WAAY,UAGvEt1C,KAAK8E,IAAI4vB,WAAW10B,KAAKk1C,OAIzBl1C,KAAK4zC,OAAO3mB,OACV,kBAAM/mB,EAAKquC,cACX,SAAC3zB,EAAQsM,GACHtM,GACF1a,EAAK6tC,aAAamD,gCAKxBl3C,KAAK4zC,OAAOrmB,IAAI,WAAYvtB,KAAKm3C,eAAe95C,KAAK2C,OAErD,IAAMwtB,EAAM4pB,EAAA,EAAcp3C,MAC1BA,KAAKi0C,iBAAiBrQ,eACpBpW,EACA6pB,EAAA,EACEr3C,KAAKid,SACL,MACAjd,KAAKs3C,kBACLt3C,OAIJA,KAAK4zC,OAAO3mB,OACV,kBAAM/mB,EAAKwuC,iBACX10C,KAAKu3C,6BAA6Bl6C,KAAK2C,OAGzCA,KAAK4zC,OAAO3mB,OACV,kBAAM/mB,EAAKsoB,OACX,SAACgpB,EAAUzL,GACT,IAAMvd,EAAQ1yB,EAAQ27C,MAClBD,IAAahpB,EAAMkpB,qBACrBxxC,EAAKyxC,gBAAgB9zC,KAAK,WACxBqC,EAAKsoB,MAAQA,EAAMopB,uBAEZJ,IAAahpB,EAAMqpB,oBAC5B3xC,EAAKyxC,gBAAgB9zC,KAAK,WACxBqC,EAAKsoB,MAAQA,EAAMspB,uBAM3B93C,KAAK4zC,OAAO3mB,OACV,kBAAM/mB,EAAKouC,gCACX,SAACkD,EAAUzL,GAELA,IAAayL,IACftxC,EAAKsoB,MAAQ1yB,EAAQ27C,MAAMM,QAOjC/3C,KAAKg0C,kBAAkB7iC,cAAcnR,KAAKm0C,cAAc7rB,IAAIzkB,KAC1D7D,KAAKg4C,eAAe36C,KAAK2C,OAI3BA,KAAKi4C,SAAQ,IASfn8C,EAAQs3C,YAAYz4C,UAAUu9C,KAAO,WAAW,IAAAlxC,EAAAhH,KAC9Cu2C,EAAA,EAAY9yC,OAAOzD,KAAKoR,YAExB,IAAMyF,EAAU7W,KAAK6W,QAAQkH,QAC7BlH,EAAQshC,MAAMn4C,KAAK6W,QAAQ04B,SAC3B,IAAMjnB,EAAKtoB,KAAK60C,UAEhB70C,KAAK06B,SAAU,EAEf,IAAM0d,EAAgB,IAAIhC,EAAA,EAC1B5mC,EAAwBxP,KAAKoR,WAA7B3B,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAAyC,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAjV,OAAA,MAAAwV,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAhT,MAAA,IAA9BuW,EAA8BpD,EACvC,GAAIoD,EAAU9C,OACZ,GAAIrQ,KAAK6W,QAAQna,IAAIyW,EAAU/W,MAAO,CACpC,IAAMA,EAAO4D,KAAK6W,QAAQna,IAAIyW,EAAU/W,MACxCm6C,EAAA,EAAY15B,aAAazgB,GACzB,IAAMQ,EAAQw7C,EAAcC,UAAUj8C,EAAM+W,EAAU9C,QAClDioC,EAAa,gBACM,SAAnBnlC,EAAUzV,KACZ46C,EAAa,QACe,SAAnBnlC,EAAUzV,KACnB46C,EAAa,QACe,aAAnBnlC,EAAUzV,MAEnBd,EAAM27C,WAAW37C,EAAM47C,aAAe57C,EAAM67C,qBAE9C5hC,EAAQjU,IAAIuQ,EAAU/W,KAAMg8C,EAAcM,WAAW97C,EAAO07C,SAG5DzhC,EAAQjU,IAAIuQ,EAAU/W,KAAM,OAKlBksB,EACdtoB,KAAK8zC,gBAAgB6E,cACnB34C,KAAKm0C,cAAc7rB,GACnBzR,GAEF7W,KAAK8zC,gBAAgB8E,eACnB54C,KAAKm0C,cAAc7rB,IAClBzR,KAEGhT,KACN,SAACC,GACCkD,EAAK8rC,OAAQ,EACb9rC,EAAK0zB,SAAU,EACf1zB,EAAK6xC,mBAAmB/0C,IAE1B,SAACA,GACCkD,EAAK2uC,iBAAkB,EACvB3uC,EAAK0zB,SAAU,EACf1zB,EAAK6uC,gBAAL,gBAAwC/xC,EAAS/J,KAAT,WACxCiN,EAAK4uC,mBAAL,mBAA6C9xC,EAAS/J,KAAT,WASnD+B,EAAQs3C,YAAYz4C,UAAU0jC,OAAS,WACrCr+B,KAAK8yC,OAAQ,EACb9yC,KAAK6W,QAAU,KACf7W,KAAKid,SAAS4H,QACd7kB,KAAKk1C,MAAM4D,QACX94C,KAAKs0C,gCAAiC,GAWxCx4C,EAAQs3C,YAAYz4C,UAAUg9C,cAAgB,WAAW,IAAApZ,EAAAv+B,KACvD,OAAOA,KAAK+4C,yBAAyBl1C,KAAK,WACxC06B,EAAKF,YAcTviC,EAAQs3C,YAAYz4C,UAAUo+C,uBAAyB,SACrDC,GAWA,OAVAh5C,KAAKq0C,iBAAmBr0C,KAAKytC,GAAG7sC,QAC5BZ,KAAK6W,SAAW7W,KAAK8yC,OACvB9yC,KAAKs0C,gCAAiC,EAClC0E,GACFh5C,KAAK4zC,OAAOqF,UAGdj5C,KAAKq0C,iBAAiBnwC,UAGjBlE,KAAKq0C,iBAAiBvzC,SAO/BhF,EAAQs3C,YAAYz4C,UAAUu+C,sBAAwB,WACpDl5C,KAAKq+B,SACLr+B,KAAKq0C,iBAAiBnwC,WAOxBpI,EAAQs3C,YAAYz4C,UAAUw+C,OAAS,WAAW,IAAAza,EAAA1+B,KAC1CyjB,EAAMzjB,KAAKq8B,gBAAgB52B,UAC/B,sDAEE2zC,QAAQ31B,KACVzjB,KAAK06B,SAAU,EAGf16B,KAAK8zC,gBAAgBuF,cACnBr5C,KAAKm0C,cAAc7rB,GACnBtoB,KAAK6W,SACLhT,KACA,SAACC,GACC46B,EAAKoU,OAAQ,EACbpU,EAAKhE,SAAU,EACfgE,EAAKmO,iBAAiBjhB,gBAAgB8S,EAAK0V,mBAG3C1V,EAAKL,UAEP,SAACv6B,GACC46B,EAAKiX,iBAAkB,EACvBjX,EAAKhE,SAAU,EACfgE,EAAKmX,gBAAL,gBAAwC/xC,EAAS/J,KAAT,WACxC2kC,EAAKkX,mBAAL,mBAA6C9xC,EAAS/J,KAAT,YAcrD+B,EAAQs3C,YAAYz4C,UAAU2+C,OAAS,WAAW,IAAAna,EAAAn/B,KAGhDA,KAAK6zC,SAAS,WACZ1U,EAAKwU,SAAS4F,KAAK,wBAAwBC,SAC1C,IAQL19C,EAAQs3C,YAAYz4C,UAAUk+C,mBAAqB,SAASY,GAC1D,IAAMx8B,GAAW,IAAIy8B,EAAA,GAAkBnJ,aAAakJ,EAAK1/C,MACrDkjB,EAAS1iB,SACXyF,KAAK6W,QAAQshC,MAAMl7B,EAAS,GAAGsyB,SAC/BvvC,KAAK6sC,iBAAiBjhB,gBAAgB5rB,KAAKo0C,oBAEzCp0C,KAAKq0C,kBACPr0C,KAAKq0C,iBAAiBnwC,WAS1BpI,EAAQs3C,YAAYz4C,UAAUq9C,eAAiB,SAAS5mC,GAEtDpR,KAAKoR,WAAaA,EAClB,IAAAe,EAAwBf,EAAxBgB,EAAA1C,MAAAC,QAAAwC,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAtC,OAAAC,cAAoC,KAAAwC,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA5X,OAAA,MAAA+X,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAnC,QAAAC,KAAA,MAAAqC,EAAAD,EAAAzV,MAAA,IAAzBuW,EAAyBb,EACZ,QAAlBa,EAAUzV,MACZyV,EAAU9C,OAAS,QACnB8C,EAAUwmC,KAAO,cACU,QAAlBxmC,EAAUzV,MACnByV,EAAU9C,OAAS,MACnB8C,EAAUwmC,KAAO,SACU,YAAlBxmC,EAAUzV,OACnByV,EAAU9C,OAAS,YACnB8C,EAAUwmC,KAAO,oBAKrB,IAAMC,EAAWC,EAAA,EAAuBC,qBACtC95C,KAAKoR,YAEHwoC,GAAYA,EAASlE,WACvB11C,KAAK01C,SAAWkE,EAASlE,WAS7B55C,EAAQs3C,YAAYz4C,UAAU28C,kBAAoB,SAAS/wB,GAAK,IAAAuZ,EAAA9/B,KAC9DA,KAAK6W,QAAU,KACf7W,KAAK6zC,SAAS,WACZ0C,EAAA,EAAY9yC,OAAOq8B,EAAK1uB,YACxB,IAAMyF,EAAU0P,EAAI2F,QACpBqqB,EAAA,EAAY/vB,iBAAiB3P,EAASkjC,EAAA,GACtC,IAAM3B,EAAgB,IAAIhC,EAAA,EAC1B1jC,EAAwBotB,EAAK1uB,WAA7BuB,EAAAjD,MAAAC,QAAA+C,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAA7C,OAAAC,cAAyC,KAAA+C,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAnY,OAAA,MAAAsY,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA1C,QAAAC,KAAA,MAAA4C,EAAAD,EAAAhW,MAAA,IAA9BuW,EAA8BN,EACvC,GAAIM,EAAU9C,OACZ,GAAIwG,EAAQna,IAAIyW,EAAU/W,MAAO,CAC/B,IAAIQ,SACJ,GAAuB,aAAnBuW,EAAUzV,MACZd,EAAQ,IAAIykC,KAAKxqB,EAAQna,IAAIyW,EAAU/W,QAEjCm8C,WAAW37C,EAAM47C,aAAe57C,EAAM67C,yBACvC,CACL,IAAIH,EAAa,GACM,SAAnBnlC,EAAUzV,KACZ46C,EAAa,QACe,SAAnBnlC,EAAUzV,OACnB46C,EAAa,SAEf,IAAMl8C,EAAOya,EAAQna,IAAIyW,EAAU/W,MACnCm6C,EAAA,EAAY15B,aAAazgB,GACzBQ,EAAQw7C,EAAcC,UAAUj8C,EAAMk8C,GAExCzhC,EAAQjU,IAAIuQ,EAAU/W,KAAMg8C,EAAcM,WAAW97C,EAAOuW,EAAU9C,cAGtEwG,EAAQjU,IAAIuQ,EAAU/W,KAAM,MAIlC0jC,EAAKjpB,QAAUA,EACfipB,EAAKyU,cAAe,EACf19B,EAAQ04B,UACXzP,EAAKgT,OAAQ,GAEfhT,EAAK8T,OAAOqF,UACX,IASLn9C,EAAQs3C,YAAYz4C,UAAUs9C,QAAU,SAAS1vC,GAE/C,IAAMyxC,EAAOh6C,KAAK2jC,cACZsW,GAAa,UAAW7C,EAAA,EAAcp3C,OAAOuH,KAAK,KAClD2yC,GAAY,SAAU9C,EAAA,EAAcp3C,OAAOuH,KAAK,KAChD4yC,EAAUn6C,KAAKk0C,qBAEjB3rC,GAKFyxC,EAAKv/C,KAAK48C,EAAA,EAAgBr3C,KAAKk1C,MAAO,cACpCl1C,KAAKo6C,uBAAwBp6C,OAE/Bg6C,EAAKv/C,KAAK48C,EAAA,EAAgBr3C,KAAKs1C,WAC7B,eACAt1C,KAAKq6C,oBAAqBr6C,OAE5Bg6C,EAAKv/C,KAAK48C,EAAA,EAAgBr3C,KAAKu1C,QAAS,YAAav1C,KAAKs6C,iBAAkBt6C,OAE5Em6C,EAAQI,aAAaN,EAAWj6C,KAAKw0C,oBAAoB,GACzD2F,EAAQI,aAAaN,EAAWj6C,KAAK20C,uBAAuB,GAE5DwF,EAAQI,aAAaL,EAAUl6C,KAAKw0C,oBAAoB,GACxD2F,EAAQI,aAAaL,EAAUl6C,KAAKi1C,oBAAoB,GACxDkF,EAAQI,aAAaL,EAAUl6C,KAAKy1C,uBAAuB,GAC3D0E,EAAQI,aAAaL,EAAUl6C,KAAKw1C,oBAAoB,KAOxDwE,EAAK92C,QAAQm0C,EAAA,GACb2C,EAAKz/C,OAAS,EAEd4/C,EAAQK,eAAeP,EAAWj6C,KAAKw0C,oBACvC2F,EAAQK,eAAeP,EAAWj6C,KAAK20C,uBAEvCwF,EAAQK,eAAeN,EAAUl6C,KAAKw0C,oBACtC2F,EAAQK,eAAeN,EAAUl6C,KAAKi1C,oBACtCkF,EAAQK,eAAeN,EAAUl6C,KAAKy1C,uBACtC0E,EAAQK,eAAeN,EAAUl6C,KAAKw1C,oBAEtCx1C,KAAKu0C,cAAe,EACpBv0C,KAAKq+B,UAGPr+B,KAAKg1C,QAAQr0B,UAAUpY,GACvBvI,KAAK00C,gBAAkBnsC,EACvBvI,KAAK+yC,iBAAiBt2B,WAAtB,QAA8ClU,GAUhDzM,EAAQs3C,YAAYz4C,UAAU48C,6BAA+B,SAC3DhvC,GAEA,IAAMkyC,EAASz6C,KAAK8E,IAAI41C,cACxBnE,EAAA,EAAYoE,cAAcF,GAEtBlyC,GACF8uC,EAAA,EAAgBr3C,KAAK8E,IAAK,QACxB9E,KAAK46C,gBAAiB56C,MAExBq3C,EAAA,EAAgBoD,EAAQ,cACtBz6C,KAAK66C,sBAAuB76C,QAG9Bq3C,EAAA,EAAkBr3C,KAAK8E,IAAK,QAC1B9E,KAAK46C,gBAAiB56C,MAExBq3C,EAAA,EAAkBoD,EAAQ,cACxBz6C,KAAK66C,sBAAuB76C,QAsBlClE,EAAQs3C,YAAYz4C,UAAUigD,gBAAkB,SAASr0B,GAAK,IAAA8Z,EAAArgC,KACtDszB,EAAa/M,EAAI+M,WACjBwnB,EAAQv0B,EAAIu0B,MAIF96C,KAAK8E,IAAIi2C,sBACvBD,EACA,SAACjkC,GACC,IAAImkC,GAAM,EAIV,OAHIC,EAAA,EAAiB5a,EAAKpjB,SAASiN,WAAYrT,KAC7CmkC,EAAMnkC,GAEDmkC,IAGPE,aAAc,KAUlBl7C,KAAK+4C,wBAAuB,GAAMl1C,KAAK,WAErC,IAGMs3C,EAHM9a,EAAKv7B,IACAqa,UACOsM,gBACI4U,EAAKpG,UAC3B7a,EAASg8B,EAAA,GACZ9nB,EAAW,GAAIA,EAAW,GAAIA,EAAW,GAAIA,EAAW,IACzD6nB,GAIF9a,EAAKyT,gBAAgBuH,qBAClBhb,EAAK8T,cAAc7rB,IACpBlJ,GACAvb,KAAKw8B,EAAKib,mBAAmBj+C,KAAxBgjC,IAGPA,EAAKhC,SAGLgC,EAAK3F,SAAU,KASnB5+B,EAAQs3C,YAAYz4C,UAAUkgD,sBAAwB,SAASt0B,GAAK,IAAAsa,EAAA7gC,KAC5D86C,EAAQ96C,KAAK8E,IAAIy2C,cAAch1B,GAC/B+M,EAAatzB,KAAK8E,IAAI02C,uBAAuBV,GAE/CjkC,EAAU7W,KAAK8E,IAAIi2C,sBACrBD,EACA,SAACjkC,GACC,IAAImkC,GAAM,EAIV,OAHIC,EAAA,EAAiBpa,EAAK5jB,SAASiN,WAAYrT,KAC7CmkC,EAAMnkC,GAEDmkC,IAGPE,aAAc,IAOlB,GAHArkC,EAAUA,GAAoB,KAGjB,CACX,IAAMnZ,EAAOsC,KAAKsnC,mBAAmBhwB,QAAQT,GACzCnZ,IAAS+9C,EAAA,EAAiBv9C,SAAWR,IAAS+9C,EAAA,EAAiBz9C,eAC/DN,IAAS+9C,EAAA,EAAiB59C,aAAeH,IAAS+9C,EAAA,EAAiB39C,mBACrEkC,KAAKk1C,MAAMwG,KAAKpoB,GAElB/M,EAAIo1B,iBACJp1B,EAAIq1B,oBASR9/C,EAAQs3C,YAAYz4C,UAAU2gD,mBAAqB,SAASr+B,GAAU,IAAA4+B,EAAA77C,KACpEA,KAAK06B,SAAU,EAEf16B,KAAK6zC,SAAS,WACZ,GAAI52B,EAAS1iB,OAAQ,CACnB,IAAMsc,EAAUoG,EAAS,GACzB4+B,EAAKhlC,QAAUA,EACfglC,EAAK5+B,SAASxiB,KAAKoc,KAEpB,IAQL/a,EAAQs3C,YAAYz4C,UAAUs8C,wBAA0B,WACtDj3C,KAAK80C,cAAc5xC,QAAQ,SAAC8+B,GAC1BA,EAAYrhB,WAAU,GACtBm7B,EAAA,EAAiB9Z,YAAYA,MASjClmC,EAAQs3C,YAAYz4C,UAAUohD,sBAAwB,WAAW,IAAAC,EAAAh8C,KAC/DA,KAAK80C,cAAc5xC,QAAQ,SAAC8+B,GAC1Bga,EAAKl3C,IAAI6uB,eAAeqO,MAS5BlmC,EAAQs3C,YAAYz4C,UAAUshD,wBAA0B,WAAW,IAAAC,EAAAl8C,KACjEA,KAAK80C,cAAc5xC,QAAQ,SAAC8+B,GAC1Bka,EAAKp3C,IAAI4uB,kBAAkBsO,MAU/BlmC,EAAQs3C,YAAYz4C,UAAUi6C,qBAAuB,SACnDuH,EAAYC,GACZ,IAAAC,EAAAr8C,KAEImb,SACAihC,IACF/E,EAAA,EAAkB+E,EAAY,iBAAkBp8C,KAAKs8C,6BAA8Bt8C,MACnFmb,EAAOihC,EAAWhhC,cAClBm7B,EAAA,EAAY9yC,OAAO0X,GACnBk8B,EAAA,EACEl8B,EACA,SACAnb,KAAKkmB,6BACLlmB,MAEFA,KAAKi8C,2BAGHE,GACFn8C,KAAK60C,UAAYsH,EAAW5M,QAC5B8H,EAAA,EAAgB8E,EAAY,iBAAkBn8C,KAAKs8C,6BAA8Bt8C,MACjFmb,EAAOghC,EAAW/gC,cAClBm7B,EAAA,EAAY9yC,OAAO0X,GACnBk8B,EAAA,EACEl8B,EACA,SACAnb,KAAKkmB,6BACLlmB,MAEFA,KAAK+7C,wBAEL/7C,KAAK+zC,aAAamD,8BAMdl3C,KAAK60C,WACP70C,KAAK6zC,SAAS,WACZwI,EAAKvJ,OAAQ,EACbuJ,EAAKzI,OAAOqF,UACX,IAGLj5C,KAAK60C,eAAY30C,GASrBpE,EAAQs3C,YAAYz4C,UAAU2hD,6BAA+B,WAC3Dt8C,KAAK8yC,OAAQ,GAOfh3C,EAAQs3C,YAAYz4C,UAAUurB,6BAA+B,WAC3DlmB,KAAK8yC,OAAQ,EACb9yC,KAAK4zC,OAAOqF,UAQdn9C,EAAQs3C,YAAYz4C,UAAUy/C,uBAAyB,SAAS7zB,GAG9D,OAFeA,EAAI5C,OAAO44B,QAGxB,IAAK,OACHv8C,KAAKs1C,WAAW30B,WAAU,GAC1B3gB,KAAK4zC,OAAOqF,SACZ,MACF,IAAK,SACHj5C,KAAKu1C,QAAQ50B,WAAU,GACvB3gB,KAAK4zC,OAAOqF,WAYlBn9C,EAAQs3C,YAAYz4C,UAAU0/C,oBAAsB,SAAS9zB,GAC3DvmB,KAAKs1C,WAAW30B,WAAU,GAC1B3gB,KAAK4zC,OAAOqF,UAQdn9C,EAAQs3C,YAAYz4C,UAAU2/C,iBAAmB,SAAS/zB,GACxDvmB,KAAKu1C,QAAQ50B,WAAU,GACvB3gB,KAAK4zC,OAAOqF,UAOdn9C,EAAQs3C,YAAYz4C,UAAUw8C,eAAiB,WAC7Cn3C,KAAKid,SAAS4H,QACd7kB,KAAK40C,qBAAqB,KAAM50C,KAAK6W,SACrC7W,KAAK6W,QAAU,KACf,IAAM2W,EAAM4pB,EAAA,EAAcp3C,MAC1BA,KAAKi0C,iBAAiBnQ,iBAAiBtW,GACvCxtB,KAAKi4C,SAAQ,GACbj4C,KAAKu3C,8BAA6B,GAClCv3C,KAAKi8C,2BAIPngD,EAAQi0B,WAAW,2BACjBj0B,EAAQs3C,aAOVt3C,EAAQ27C,OAKNM,KAAM,OAMND,mBAAoB,qBAMpBD,mBAAoB,qBAOpBD,qBAAsB,uBAMtBF,qBAAsB,wBAIxB/5C,EAAA,mFCtwCA6+C,EAAA9gD,EAAA,KA8BMI,EAAU,SAAS6wB,EAAYsP,EAAWwgB,EAC9CC,EAAgBxgB,GAMhBl8B,KAAK28C,YAAchwB,EAMnB3sB,KAAKu8B,WAAaN,EAMlBj8B,KAAK48C,UAAYH,EAMjBz8C,KAAK68C,gBAAkBH,EAMvB18C,KAAK68B,kBAAoBX,EAMzBl8B,KAAK88C,WAAa,0MAYpBhhD,EAAQnB,UAAUoiD,SAAW,SAAS17C,EAAOo8B,GACvCz9B,KAAK48C,WACP58C,KAAK68B,kBAAkBkB,aACrB18B,MAASA,EAAMjF,OAEjB4D,KAAKg9C,aAAa37C,EAAMjF,MACxB4D,KAAK68C,gBAAgB3f,oBAAoB77B,EAAME,WAE/CvB,KAAK68C,gBAAgBtf,oBAAoBl8B,EAAME,UAAU,EAAOk8B,IASpE3hC,EAAQnB,UAAUsiD,aAAe,WAC/B,OAAOj9C,KAAK88C,YAQdhhD,EAAQnB,UAAUuiD,UAAY,WAC5B,OAAQl9C,KAAKu8B,WAAWx7B,QAO1BjF,EAAQnB,UAAUqiD,aAAe,SAAS5gD,EAAMqhC,GAC9Cz9B,KAAK88C,WAAa1gD,EACbqhC,GACHz9B,KAAK28C,YAAYQ,MAAMrhD,EAAQshD,UAAUC,eAAgBjhD,IAS7DN,EAAQnB,UAAUqkC,UAAY,WAC5Bh/B,KAAK68C,gBAAgB7d,aAOvBljC,EAAQshD,WAINC,eAAgB,oCAOlBvhD,EAAQC,OAASkM,QAAQlM,OAAO,mBAC9BuhD,EAAA,EAAwBvhD,OAAOK,KAC/BoiC,EAAA,EAAeziC,OAAOK,KACtBogD,EAAA,EAAwBzgD,OAAOK,QAMlBQ,MAAM,2BAA2B,GAEhDd,EAAQC,OAAOoM,QAAQ,kBAAmBrM,GAG1C6B,EAAA,2RCxJA,IAAM7B,aAkBJ,SAAAA,EAAYsM,gGAASC,CAAArI,KAAAlE,GAiBnBkE,KAAKu9C,UAA+B,IAApBn1C,EAAQwpC,QAQxB5xC,KAAKw9C,UAA+B,IAApBp1C,EAAQigB,QAcxBroB,KAAKoR,WAAahJ,EAAQgJ,YAAc,KAOxCpR,KAAKy9C,IAAMr1C,EAAQkgB,GASnBtoB,KAAK09C,qBAAuBt1C,EAAQu1C,oBAOpC39C,KAAK49C,eAAiBx1C,EAAQ3B,cAO9BzG,KAAK69C,eAAiBz1C,EAAQxB,cAO9B5G,KAAKiJ,MAAQb,EAAQhM,KA9FnB,OAAAN,EAAAnB,UA6IJwW,cA7II,WA8IF,OAAOnR,KAAKoR,YA9IVtV,EAAAnB,UAqJJ0W,cArJI,SAqJUD,GACZpR,KAAKoR,WAAaA,GAtJhBvH,EAAA/N,IAAAgO,IAAA,UAAApN,IAAA,WA0GF,OAAOsD,KAAKu9C,UA1GV36C,IAAA,SAiHQgvC,GACV5xC,KAAKu9C,SAAW3L,KAlHd9nC,IAAA,UAAApN,IAAA,WA0HF,OAAOsD,KAAKw9C,UA1HV56C,IAAA,SAiIQylB,GACVroB,KAAKw9C,SAAWn1B,KAlIdve,IAAA,KAAApN,IAAA,WA8JF,OAAOsD,KAAKy9C,OA9JV3zC,IAAA,sBAAApN,IAAA,WAsKF,OAAOsD,KAAK09C,wBAtKV5zC,IAAA,gBAAApN,IAAA,WA8KF,OAAOsD,KAAK49C,kBA9KV9zC,IAAA,gBAAApN,IAAA,WAsLF,OAAOsD,KAAK69C,kBAtLV/zC,IAAA,OAAApN,IAAA,WA8LF,OAAOsD,KAAKiJ,SA9LVa,IAAA,YAAApN,IAAA,WA4MF,OAAO,KA5MLoN,IAAA,yBAAApN,IAAA,WAqNF,OAA8B,OAAvBsD,KAAKyG,eAAiD,OAAvBzG,KAAK4G,kBArNzC9K,KA0NN6B,EAAA,2SC1NA,IAAM7B,cAYJ,SAAAA,EAAYsM,gGAASC,CAAArI,KAAAlE,GAEnBsM,EAAQQ,SAAWk1C,EAAA,EAAa/zC,aAAaI,SAC7C/B,EAAQ1K,KAAOqgD,EAAA,EAAwBx+C,OAHpB,IAAAgD,mKAAA0I,CAAAjL,KAKnBwlB,EAAA3qB,KAAAmF,KAAMoI,IALa,OAanB7F,EAAKy7C,SAAW51C,EAAQ0/B,QAbLvlC,EAZjB,gUAAA2O,CAAApV,EAAA0pB,GAAA3b,EAAA/N,IAAAgO,IAAA,UAAApN,IAAA,WAoCF,OAAOsD,KAAKg+C,YApCVl0C,IAAA,kBAAApN,IAAA,WA8CF,IAAI2tC,SACArqC,KAAKwI,WAEP6hC,EADyBI,OAAOzqC,KAAKwI,YACF6N,MAAM,KAEzCg0B,KAEF,OAAOA,MArDLvuC,GAAwBgiD,EAAA,GA2D9BngD,EAAA,uCCjEA,IAAA6F,EAAA9H,EAAA,GAiCMI,EAAU,SAAS6wB,GAMvB3sB,KAAK+jB,WAOL/jB,KAAK4zC,OAASjnB,qDAYhB7wB,EAAQnB,UAAU4/C,aAAe,SAASxwB,EAAWk0B,EACnDC,GAAqB,IAAA37C,EAAAvC,KACjBm+C,EAAUn+C,KAAK+jB,QAAQgG,GACtBo0B,IACHA,EAAUn+C,KAAK+jB,QAAQgG,OAGzB,IAAMq0B,EAAWp+C,KAAK4zC,OAAO3mB,OAC3BgxB,EAAKv9B,UACL,SAACE,EAAQsM,GACHtM,IAAWsM,IAGXtM,EACFre,EAAK87C,iBAAiBt0B,EAAWk0B,GAEjC17C,EAAK+7C,iBAAiBv0B,MAU5B,GANAo0B,EAAQ1jD,MACNwjD,KAAMA,EACNM,YAAaL,IAAuB,EACpCE,SAAUA,IAGR56C,EAAA,EAAYg7C,eAAgB,CAE9B,IAAIC,EAAe,EACnBN,EAAQj7C,QAAQ,SAACw7C,GACXA,EAAMH,aACRE,MAGJj7C,EAAA,EAAYC,OACVg7C,GAAgB,EADlB,uCAC4D10B,KAWhEjuB,EAAQnB,UAAU6/C,eAAiB,SAASzwB,EAAWk0B,GACrD,IAAME,EAAUn+C,KAAK+jB,QAAQgG,GAC7B,GAAIo0B,EACF,IAAK,IAAI9jD,EAAI,EAAGA,EAAI8jD,EAAQ5jD,OAAQF,IAClC,GAAI8jD,EAAQ9jD,GAAG4jD,MAAQA,EAAM,CAC3BE,EAAQ9jD,GAAG+jD,WACXD,EAAQ1iD,OAAOpB,EAAG,GAClB,QAYRyB,EAAQnB,UAAUgkD,gBAAkB,SAAS50B,GAC3C,IAAMo0B,EAAUn+C,KAAK+jB,QAAQgG,GAC7B,GAAIo0B,EAAS,CACX,IAAK,IAAI9jD,EAAI,EAAGA,EAAI8jD,EAAQ5jD,OAAQF,IAClC8jD,EAAQ9jD,GAAG+jD,kBAENp+C,KAAK+jB,QAAQgG,KAUxBjuB,EAAQnB,UAAUikD,aAAe,SAASX,GACxCA,EAAKt9B,WAAU,IASjB7kB,EAAQnB,UAAUkkD,eAAiB,SAASZ,GAC1CA,EAAKt9B,WAAU,IAWjB7kB,EAAQnB,UAAU0jD,iBAAmB,SAASt0B,EAAWk0B,GAEvD,IADA,IAAME,EAAUn+C,KAAK+jB,QAAQgG,GACpB1vB,EAAI,EAAGA,EAAI8jD,EAAQ5jD,OAAQF,IAC9B4jD,GAAQE,EAAQ9jD,GAAG4jD,MACrBE,EAAQ9jD,GAAG4jD,KAAKt9B,WAAU,IAYhC7kB,EAAQnB,UAAU2jD,iBAAmB,SAASv0B,GAK5C,IAJA,IAAMo0B,EAAUn+C,KAAK+jB,QAAQgG,GACzBw0B,EAAc,KACdO,GAAgB,EAEXzkD,EAAI,EAAGA,EAAI8jD,EAAQ5jD,OAAQF,IAClCykD,EAAgBA,GAAiBX,EAAQ9jD,GAAG4jD,KAAKv9B,YAE7Cy9B,EAAQ9jD,GAAGkkD,cACbA,EAAcJ,EAAQ9jD,GAAG4jD,MAIxBa,GAAiC,OAAhBP,GACpBA,EAAY59B,WAAU,KAK1B7kB,EAAQC,OAASkM,QAAQlM,OAAO,2BACjBoM,QAAQ,sBAAuBrM,GAG9C6B,EAAA,kCClMA,IAAM7B,EAAUmM,QAAQlM,OAAO,uBAoC/BD,EAAQijD,mBAAqB,SAASC,GACpC,OACEC,SAAU,IACVlvB,WAAY,yBAOZmvB,KAAM,SAACrM,EAAO3mB,EAASizB,EAAOpvB,GAC5B,IAAMpP,EAAYq+B,EAAOG,EAAA,oBAA6BC,OAElDz+B,GACFkyB,EAAM5lB,OAEJ,kBAAM8C,EAAWsvB,SAASl5C,KAAK,SAAAm5C,GAAA,OAAsC,IAAvBA,EAAYzM,MAC1D,SAAC2E,GACC72B,EAAUkyB,EAAO2E,QAlB7B17C,EAAQijD,sCA2BRjjD,EAAQq3C,UAAU,eAAgBr3C,EAAQijD,oBAW1CjjD,EAAQyjD,mBAAqB,SAAS7yB,GAKpC1sB,KAAKq/C,YAMLr/C,KAAK4zC,OAASlnB,GAXhB5wB,EAAQyjD,sCAkBRzjD,EAAQyjD,mBAAmB5kD,UAAU6kD,SAAW,SAASl2B,GAAO,IAAA/mB,EAAAvC,KAC9DA,KAAKq/C,SAASn8C,QAAQ,SAACu8C,EAAcplD,GAC/BA,GAAKivB,GACPm2B,EAAaL,OAAO78C,EAAKqxC,QAAQ,MAUvC93C,EAAQyjD,mBAAmB5kD,UAAU+kD,UAAY,SAASD,GAExD,OADAz/C,KAAKq/C,SAAS5kD,KAAKglD,GACZz/C,KAAKq/C,SAAS9kD,OAAS,GAIhCuB,EAAQi0B,WAAW,yBACjBj0B,EAAQyjD,oBAqBVzjD,EAAQ6jD,cAAgB,SAASX,GAC/B,OACEY,SAAU,iBAAkB,WAC5BX,SAAU,IAOVC,KAAM,SAACrM,EAAO3mB,EAASizB,EAAOU,GAC5B,IAAMC,EAAcD,EAAM,GACpBE,EAAcF,EAAM,GACtBG,GAAgB,EAEdC,EAAajB,EAAOG,EAAA,SACpBe,EAAaD,EAAWb,YAGJl/C,IAAtB+/C,EAAWpN,IACbqN,EAAWrN,GAAO,GAEA,OAAhBiN,IACFE,EAAeF,EAAYJ,UAAUO,IAIvC/zB,EAAQ0W,GAAG,QAAS,WAClBiQ,EAAMoG,OAAO,WACX8G,EAAYI,eAAeJ,EAAYK,YACvCL,EAAYM,cAKhBN,EAAYM,QAAU,WAChBN,EAAYK,YAA8B,OAAhBN,GAC5BA,EAAYN,SAASQ,GAEvB9zB,EAAQo0B,YAAY,SAAUP,EAAYK,gBAvClDtkD,EAAQ6jD,iCA8CR7jD,EAAQq3C,UAAU,UAAWr3C,EAAQ6jD,eAGrChiD,EAAA,6CC5LA4iD,EAAA7kD,EAAA,KAeMI,EAAU,SAAS0kD,EAAcC,GAAmB,IAAAl+C,EAAAvC,KAMxDA,KAAK0gD,gBAKL1gD,KAAKwgD,aAAeA,EAMpBxgD,KAAK2gD,cAAgBF,EAMrBzgD,KAAK4gD,iBAEL5gD,KAAK6gD,oBAAmB,GAMxB,IAAMC,EAAYN,EAAaO,eAAe37C,OAAO,SAAA0E,GAAA,MAAc,SAAPA,GAAyB,eAAPA,IAE9E,GAAyB,IAArBg3C,EAAUvmD,QACZ,GAAIyF,KAAK4gD,iBAAkB,KAAA3lB,EAAA,SACdnxB,GACTtG,EAAA,EAAYC,OAAOqG,GAEnBvH,EAAKo+C,cAAcx6C,KAAK,SAAC66C,GACvB,GAAIl3C,EAAIm3C,MAAMD,GAAY,CACxB,IAAMpkD,EAAQO,OAAO+jD,aAAap3C,GAMlC,OAJEvH,EAAKm+C,aAAa52C,QADN5J,IAAVtD,GAAiC,OAAVA,EACAA,EAEA,IAEpB,MAXb,IAAK,IAAMkN,KAAO3M,OAAO+jD,aAAcjmB,EAA5BnxB,SAiBbg3C,EAAU59C,QAAQ,SAAC4G,GACjBvH,EAAKo+C,cAAcx6C,KAAK,SAAC66C,GACvB,GAAIl3C,EAAIm3C,MAAMD,GAAY,CACxB,IAAMpkD,EAAQ2F,EAAKi+C,aAAaW,SAASr3C,GACzC,QAAc5J,IAAVtD,EAEF,OADA2F,EAAKm+C,aAAa52C,GAAOlN,GAClB,sGAanBd,EAAQnB,UAAUkmD,mBAAqB,SAASjkD,GAI9C,GAHAoD,KAAK4gD,iBAAmBhkD,EAGpBoD,KAAK4gD,iBACP,IACM,iBAAkBzjD,QACpBA,OAAO+jD,aAAP,KAA8B,UACvB/jD,OAAO+jD,aAAP,MAEPlhD,KAAK4gD,kBAAmB,EAE1B,MAAOQ,GACPp9C,QAAQC,MAAMm9C,GACdphD,KAAK4gD,kBAAmB,EAG5B,OAAO5gD,KAAK4gD,kBAQd9kD,EAAQnB,UAAU0mD,gBAAkB,SAASv3C,GAC3C,OAAO9J,KAAK0gD,aAAa52C,IAS3BhO,EAAQnB,UAAU2mD,sBAAwB,SAASx3C,GACjD,IAAMlN,EAAQoD,KAAK0gD,aAAa52C,GAChC,QAAc5J,IAAVtD,EAGJ,OAAOA,GASTd,EAAQnB,UAAU4mD,sBAAwB,SAASz3C,GACjD,IAAMlN,EAAQoD,KAAK0gD,aAAa52C,GAChC,QAAc5J,IAAVtD,EAGJ,OAAO4kD,WAAW5kD,IASpBd,EAAQnB,UAAU8mD,uBAAyB,SAAS33C,GAClD,IAAMlN,EAAQoD,KAAK0gD,aAAa52C,GAChC,QAAc5J,IAAVtD,EAGJ,MAAiB,SAAVA,GAQTd,EAAQnB,UAAUojC,YAAc,SAAShhC,GAEvC,GADAiD,KAAKwgD,aAAav4B,aAAalrB,GAC3BiD,KAAK4gD,iBACP,IAAK,IAAM92C,KAAO/M,EAAQ,CACxByG,EAAA,EAAYC,OAAOqG,GACnB,IAAMlN,EAAQG,EAAO+M,GACrBtG,EAAA,EAAYC,YAAiBvD,IAAVtD,GACnBO,OAAO+jD,aAAap3C,GAAOlN,IAUjCd,EAAQnB,UAAUyiC,YAAc,SAAStzB,GACvC9J,KAAKwgD,aAAapjB,YAAYtzB,GAC1B9J,KAAK4gD,yBACAzjD,OAAO+jD,aAAap3C,KAQ/BhO,EAAQC,OAASkM,QAAQlM,OAAO,oBAC9BwkD,EAAA,EAAyBxkD,OAAOK,QAEnB+L,QAAQ,mBAAoBrM,GAC3CA,EAAQC,OAAOa,MAAM,qBAAsB,IAAI8kD,OAAO,QAGtD/jD,EAAA,mCCrMA,IAAAgkD,EAAAjmD,EAAA,IAGMI,GAONA,4BAAsC,WACpC,IAAMub,EAAQ3c,OAAAinD,EAAA,EAAAjnD,GACd,OAAO,SAASmc,EAASyO,GACvB,OAAOjO,EAAMR,EAAQuE,cAAc9D,aAQvCxb,8BAAwC,WACtC,IAAMub,EAAQ3c,OAAAinD,EAAA,EAAAjnD,GACd,OAAO,SAASmc,EAASyO,GACvB,OAAOjO,EAAA,SAKX1Z,EAAA,2DCTA,IAAM7B,cAUJ,SAAAA,EAAY2D,EAAOC,EAAWitB,EAAYi1B,EAAuBC,gGAASx5C,CAAArI,KAAAlE,GAAA,IAAAyG,mKAAA0I,CAAAjL,KAExE8hD,EAAAjnD,KAAAmF,OAFwE,OAQxEuC,EAAKlC,OAASZ,EAMd8C,EAAKo6C,YAAchwB,EAOnBpqB,EAAKw/C,SAAWH,EAAsB/5B,QAAQ,MAAO,IAMrDtlB,EAAKy/C,MAAQH,EAQbt/C,EAAK0/C,cAAiBviD,EAAUa,IAAI,iCAChCb,EAAUhD,IAAI,iCACd,KAEJ6F,EAAK2/C,QAvCmE3/C,EAVtE,OAAAzG,EAAAq+B,SAAA,6XAAAjpB,CAAApV,EAAAgmD,GAAAhmD,EAAAnB,UAyDJunD,MAzDI,WA0DF,IAAMx+C,EAAS1D,KAAK+hD,SAAd,IAA0BjmD,EAAQqmD,YAAYC,aACpDpiD,KAAKK,OAAO3D,IAAIgH,GAAM2D,iBAAiB,IAAOxD,KAC5C7D,KAAKqiD,aAAahlD,KAAK2C,MAAM,KA5D7BlE,EAAAnB,UAuEJ2nD,eAvEI,SAuEWC,EAAQC,EAAQC,GAAS,IAAAv8C,EAAAlG,KAChC0D,EAAS1D,KAAK+hD,SAAd,IAA0BjmD,EAAQqmD,YAAYO,gBAEpD,OAAO1iD,KAAKK,OAAOsiD,KAAKj/C,EAAK+8B,EAAEmiB,OAC7BC,YAAeN,EACfO,YAAeN,EACfO,mBAAsBN,KAEtBO,SAAUC,eAAgB,qCAC1B57C,iBAAiB,IAChBxD,KAAM,SAACC,GACRoC,EAAK87C,MAAMkB,qBAAsB,EACjCh9C,EAAKy2C,YAAYwG,WAChB9lD,KAAK2C,QApFNlE,EAAAnB,UA6FJyoD,MA7FI,SA6FEA,EAAOC,GACX,IAAM3/C,EAAS1D,KAAK+hD,SAAd,IAA0BjmD,EAAQqmD,YAAYmB,MAEpD,OAAOtjD,KAAKK,OAAOsiD,KAAKj/C,EAAK+8B,EAAEmiB,OAAOQ,MAASA,EAAOG,SAAYF,KAChEL,SAAUC,eAAgB,qCAC1B57C,iBAAiB,IAChBxD,KACD7D,KAAKqiD,aAAahlD,KAAK2C,MAAM,KApG7BlE,EAAAnB,UA2GJ6oD,OA3GI,WA2GK,IAAAx8C,EAAAhH,KACDyjD,EAAWzjD,KAAKgiD,MAAL,YAA4BhiD,KAAKiiD,cAC5Cv+C,EAAS1D,KAAK+hD,SAAd,IAA0BjmD,EAAQqmD,YAAYuB,OACpD,OAAO1jD,KAAKK,OAAO3D,IAAIgH,GAAM2D,iBAAiB,IAAOxD,KAAK,WACxDmD,EAAK28C,WAAWF,MA/GhB3nD,EAAAnB,UAwHJipD,cAxHI,SAwHUR,GACZ,IAAM1/C,EAAS1D,KAAK+hD,SAAd,IAA0BjmD,EAAQqmD,YAAY0B,eAM9CC,EAAY,SAASrK,GAGzB,OADEA,EAAK1/C,MAEPsD,KAAK2C,MAEP,OAAOA,KAAKK,OAAOsiD,KAAKj/C,EAAK+8B,EAAEmiB,OAAOQ,MAASA,KAC7CJ,SAAUC,eAAgB,uCACzBp/C,KAAKigD,IAvINhoD,EAAAnB,UA6IJopD,mBA7II,WA8IF,OAAO/jD,KAAKgiD,MAAMgC,iBA9IhBloD,EAAAnB,UAoJJspD,UApJI,WAqJF,OAAOjkD,KAAKgiD,MAAMkC,SArJhBpoD,EAAAnB,UA8JJ0nD,aA9JI,SA8JS8B,EAAqB1K,GAChC,IAAM2K,EAA4D3K,EAAK1/C,KAEvE,GADAiG,KAAKqkD,SAASD,GAAWD,GACrBA,EAAqB,CAEvB,IAAM1hC,EAAQ,IAAI6hC,EAAA,EAAgB,SAAUC,KAAMvkD,KAAKgiD,QACvDhiD,KAAK0H,cAAc+a,GAErB,OAAOg3B,GAtKL39C,EAAAnB,UA8KJ0pD,SA9KI,SA8KKD,EAAUI,GACjB,IAAK,IAAM16C,KAAOs6C,EAChBpkD,KAAKgiD,MAAMl4C,GAAOs6C,EAASt6C,GAE7B,GAAI06C,QAAmCtkD,IAAtBkkD,EAASK,SAAwB,CAEhD,IAAMhiC,EAAQ,IAAI6hC,EAAA,EAAgB,SAAUC,KAAMvkD,KAAKgiD,QACvDhiD,KAAK0H,cAAc+a,KArLnB3mB,EAAAnB,UA8LJgpD,WA9LI,SA8LOF,GAET,IAAK,IAAM35C,KADX25C,EAAWA,IAAY,EACLzjD,KAAKgiD,MACrBhiD,KAAKgiD,MAAMl4C,GAAO,KAGpB,IAAM2Y,EAAQ,IAAI6hC,EAAA,EAAgB,UAAWC,KAAMvkD,KAAKgiD,QACxDhiD,KAAK0H,cAAc+a,GACdghC,GACHzjD,KAAKkiD,SAvMLpmD,SAAwB,GA+M9BA,EAAQqmD,aACNO,gBAAiB,cACjBN,aAAc,YACdkB,MAAO,QACPI,OAAQ,SACRG,eAAgB,sBAMlB/nD,EAAQC,OAASkM,QAAQlM,OAAO,+BAChCD,EAAQC,OAAOoM,QAAQ,2BAA4BrM,GAEnDA,EAAQC,OAAOa,MAAM,WACnBonD,gBAAmB,KACnBd,oBAAuB,KACvBgB,QAAW,KACXQ,UAAa,KACbD,SAAY,OAId9mD,EAAA,sDC/OA,IAAM7B,EAAU,aAOhBA,EAAQnB,UAAUgqD,WAAa,SAAS/nD,GAA4B,IAArBgoD,EAAqB5yC,UAAAzX,OAAA,QAAA2F,IAAA8R,UAAA,GAAAA,UAAA,GAAN,KAC5D,OAAiB,OAAVpV,EAAiB,IAAIykC,KAAKzkC,GAASgoD,GAQ5C9oD,EAAQnB,UAAUkqD,QAAU,SAASzjB,GAA2B,IAArBwjB,EAAqB5yC,UAAAzX,OAAA,QAAA2F,IAAA8R,UAAA,GAAAA,UAAA,GAAN,KACxD,OAAOovB,EAAOA,EAAKyjB,UAAYD,GAcjC9oD,EAAQnB,UAAU2rC,WAAa,SAAS7yB,GAEtC,IAAMqxC,EAAU9kD,KAAK2kD,WAAWlxC,EAAKsxC,UAC/BC,EAAUhlD,KAAK2kD,WAAWlxC,EAAKwxC,UAE/BC,EAAiBllD,KAAK2kD,WAAWlxC,EAAK0xC,YAAaL,GACnDM,EAAiBplD,KAAK2kD,WAAWlxC,EAAK4xC,YAAaL,GAEnDM,EAA+B,UAAd7xC,EAAKquB,MACzB9hC,KAAK6kD,QAAQK,GAAiBllD,KAAK6kD,QAAQO,IAC5CplD,KAAK6kD,QAAQK,GAEf,OACEJ,QAAS9kD,KAAK6kD,QAAQC,GACtBE,QAAShlD,KAAK6kD,QAAQG,GACtBx/C,OAAQ8/C,IAYZxpD,EAAQnB,UAAU4qD,WAAa,SAASC,GACtC,OAAO,IAAInkB,KACTmkB,EAAUC,iBACVD,EAAUE,cACVF,EAAUD,gBAOdzpD,EAAQC,OAASkM,QAAQlM,OAAO,gBACjBoM,QAAQ,WAAYrM,GAGnC6B,EAAA,gKCzDMgoD,EAAU,SAAV7pD,EAAmBsM,GAEvBw9C,EAAA,EAAqB/qD,KAAKmF,MACxB6lD,gBAAiB/pD,EAAQgqD,iBACzB51B,YAAap0B,EAAQq0B,aACrB41B,cAAejqD,EAAQkqD,iBAOzBhmD,KAAKimD,QAAU,KAOfjmD,KAAKgkB,aAA6B9jB,IAAnBkI,EAAQic,OAAuBjc,EAAQic,OAAS,KAO/DrkB,KAAKkmD,UAAW,EAOhBlmD,KAAKmmD,eAAiB,KAOtBnmD,KAAKomD,aAAe,KAUpBpmD,KAAKqmD,uBAAyB,EAQ9BrmD,KAAKsmD,aAAe,IAAInb,EAAA,GACtB9mB,OAAQ,IAAI4mB,EAAA,GACV/mB,iBAAiB,EACjBgnB,OAAO,IAET7zB,MAAOjP,EAAQiP,OAASkvC,EAAA,EAAsBC,gCAGhDrY,EAAA,EAAgBnuC,KAAM,gBAAiBA,KAAKkyB,aAAclyB,OAG5D8wC,EAAA,EAAgB6U,EAASC,EAAA,GASzBD,EAAQG,iBAAmB,SAASrjC,GAElC,OADAziB,KAAKimD,QAAUxjC,EAAMq4B,OACd,GAUT6K,EAAQK,eAAiB,SAASvjC,GAChC,IAAMgkC,EAASzmD,KAAKimD,QACdS,EAAUjkC,EAAMq4B,MAChB6L,EAAKF,EAAO,GAAKC,EAAQ,GACzBE,EAAKH,EAAO,GAAKC,EAAQ,GAE3BG,GAAO,EAUX,OAXwBF,EAAKA,EAAKC,EAAKA,GAEhB5mD,KAAKqmD,yBAC1BrmD,KAAK8mD,mBAAmBrkC,GACnBziB,KAAKkmD,SAGRlmD,KAAK+mD,iBAFL/mD,KAAKgnD,cAAcvkC,GAIrBokC,GAAO,GAEFA,GAUTlB,EAAQx1B,aAAe,SAAS82B,GAC9B,IAAIJ,GAAO,EAMX,MAL6B,gBAAzBI,EAAgBvpD,KAClBmpD,EAAO7mD,KAAK8mD,mBAAmBG,GACG,aAAzBA,EAAgBvpD,OACzBmpD,GAAO,GAEFjB,EAAA,EAAmB/qD,KAAKmF,KAAMinD,IAAoBJ,GAU3DlB,EAAQhrD,UAAUmsD,mBAAqB,SAASrkC,GAM9C,OALIziB,KAAKkmD,SACPlmD,KAAKknD,eAAezkC,GAEpBziB,KAAKmnD,2BAA2B1kC,IAE3B,GAQTkjC,EAAQhrD,UAAUwsD,2BAA6B,SAAS1kC,GACtD,IAAM5G,EAAc4G,EAAM6Q,WAAWh2B,QACrC,GAA0B,OAAtB0C,KAAKomD,aACPpmD,KAAKomD,aAAe,IAAIgB,EAAA,EAAU,IAAIC,EAAA,EAAYxrC,IAClD7b,KAAKsnD,4BACA,CACL,IAAMC,EAAkBvnD,KAAKomD,aAAahrC,cAC1C2sB,EAAA,EAAYvhB,iBAAiB+gC,EAAiBF,EAAA,GAC9CE,EAAgBC,eAAe3rC,KASnC8pC,EAAQhrD,UAAU2sD,sBAAwB,WACxC,IAAMG,KACsB,OAAxBznD,KAAKmmD,gBACPsB,EAAehtD,KAAKuF,KAAKmmD,gBAED,OAAtBnmD,KAAKomD,cACPqB,EAAehtD,KAAKuF,KAAKomD,cAE3B,IAAM/hC,EAASrkB,KAAKsmD,aAAaz6B,YACjCxH,EAAOQ,OAAM,GACbR,EAAOqjC,YAAYD,IASrB9B,EAAQhrD,UAAUqsD,cAAgB,SAASvkC,GACzC,IAAM3O,EAAQ2O,EAAM6Q,WACpBtzB,KAAKkmD,UAAW,EAChB,IAAMjsC,EAAO,IAAI0tC,EAAA,GAAkB7zC,EAAMxW,QAASwW,EAAMxW,UAClDk1B,EAAS,IAAIo1B,EAAA,EAAa9zC,EAAO,GACjCuG,EAAW,IAAIwtC,EAAA,GAA0B5tC,EAAMuY,IACrDuV,EAAA,EAAYtkC,YAAoBvD,IAAbma,GACnBra,KAAKmmD,eAAiB,IAAIiB,EAAA,EAC1BpnD,KAAKmmD,eAAev/B,YAAYvM,GAChCra,KAAKsnD,wBAEL,IAAM/gC,EAAM,IAAIuhC,EAAA,EAAgB,aAAcjxC,QAAS7W,KAAKmmD,iBAC5DnmD,KAAK0H,cAAc6e,IASrBo/B,EAAQhrD,UAAUusD,eAAiB,SAASzkC,GAC1C,IAAM6Q,EAAa7Q,EAAM6Q,WAGnBy0B,EAFWhgB,EAAA,EAAYvhB,iBAC3BxmB,KAAKmmD,eAAe/qC,cAAeysC,EAAA,GACTG,qBACtB/tC,EAAO8tC,EAAW,GACxBhgB,EAAA,EAAYvhB,iBAAiBvM,EAAM0tC,EAAA,GACnC,IAAM9rC,EAAc5B,EAAK8B,iBACnBwrC,EAAkBvnD,KAAKomD,aAAahrC,cAC1C2sB,EAAA,EAAYvhB,iBAAiB+gC,EAAiBF,EAAA,GAC9CE,EAAgBC,eAAel0B,GAC/B,IAAM20B,EAAOpsC,EAAYA,EAAYthB,OAAS,GAC9C0tD,EAAK,GAAK30B,EAAW,GACrB20B,EAAK,GAAK30B,EAAW,GACrByU,EAAA,EAAYvhB,iBAAiBvM,EAAM0tC,EAAA,GACnC1tC,EAAKutC,eAAe3rC,GACLksB,EAAA,EAAYvhB,iBAAiBuhC,EAAW,GAAIH,EAAA,GACpDM,UAAUjuC,EAAKkuC,aACtBnoD,KAAKsnD,yBASP3B,EAAQhrD,UAAUytD,cAAgB,WAChCpoD,KAAKkmD,UAAW,EAChB,IAAMz1B,EAAgBzwB,KAAKmmD,eAM3B,OALsB,OAAlB11B,IACFzwB,KAAKmmD,eAAiB,KACtBnmD,KAAKomD,aAAe,KACpBpmD,KAAKsmD,aAAaz6B,YAAYhH,OAAM,IAE/B4L,GAOTk1B,EAAQhrD,UAAU0tD,gBAAkBC,EAAA,EAMpC3C,EAAQhrD,UAAUu3B,aAAe,WAC/B,IAAMptB,EAAM9E,KAAKyzB,SACXlrB,EAASvI,KAAK0gB,YACR,OAAR5b,GAAiByD,GACnBvI,KAAKooD,gBAEPpoD,KAAKsmD,aAAalhC,OAAO7c,EAASzD,EAAM,OAQ1C6gD,EAAQhrD,UAAUosD,eAAiB,WACjC,IAAMt2B,EAAgBzwB,KAAKooD,gBAC3BrgB,EAAA,EAAYtkC,OAAyB,OAAlBgtB,GAEE,OAAjBzwB,KAAKgkB,SACPhkB,KAAKgkB,QAAQS,WAAWgM,GAI1B,IAAMhO,EAAQ,IAAIqlC,EAAA,EAAgB,WAAYjxC,QAAS7W,KAAKmmD,iBAC5DnmD,KAAK0H,cAAc+a,IAOrBkjC,EAAQhrD,UAAUyqB,OAAS,SAAStgB,GAClC8gD,EAAA,EAAqBjrD,UAAUyqB,OAAOvqB,KAAKmF,KAAM8E,GACjD9E,KAAKkyB,gBAIP,IAAAq2B,EAAA,mBCnSMC,EAAU,SAASC,EAAkBC,GAA6E,IAA/DtgD,EAA+D4J,UAAAzX,OAAA,QAAA2F,IAAA8R,UAAA,GAAAA,UAAA,MAEtH22C,EAAA,EAAuB9tD,KAAKmF,KAA0DoI,GAOtFpI,KAAK0wB,iBACuBxwB,IAAxBkI,EAAQsoB,YACV1wB,KAAK0wB,YAActoB,EAAQsoB,aAE3B1wB,KAAK0wB,YAAcM,SAASC,cAAc,QAC1CjxB,KAAK0wB,YAAYQ,YAAc,oBAOjClxB,KAAK0oD,aAAe3gB,EAAA,EAAYtkC,OAAOilD,GAMvC1oD,KAAKyoD,iBAAmB1gB,EAAA,EAAYtkC,OAAOglD,IAI7C3X,EAAA,EAAgB0X,EAASG,EAAA,GAMzBH,EAAQ7tD,UAAUg3B,sBAAwB,SAASta,EACjDgN,GAEA,OAAO,IAAIkkC,GACTlkC,SACAhN,WAUJmxC,EAAQ7tD,UAAUk5B,cAAgB,SAASpxB,GACzC,IAAM0Y,EAAO4sB,EAAA,EAAYvhB,iBAAiBxmB,KAAKywB,cAAcrV,cAAeysC,EAAA,GACtE5tC,EAAO8tB,EAAA,EAAYvhB,iBAAiBrL,EAAKytC,gBAAgB,GAAIjB,EAAA,GAInEllD,EAHe+lD,EAAQ/pC,yBACrBxE,EAAM8tB,EAAA,EAAYvhB,iBAAiBxmB,KAAKyzB,SAAStU,UAAUkxB,gBAAiBwY,EAAA,GAC5E7oD,KAAK2wB,SAAU3wB,KAAK4wB,UAAW5wB,KAAKyoD,iBAAkBzoD,KAAK0oD,cAC5CzuC,EAAKO,sBAcxBguC,EAAQ/pC,yBAA2B,SACjCxE,EAAMtD,EAAYga,EAAUC,EAAWk4B,EAAcC,GAErD,IAAI7vB,EAASsvB,EAAQQ,mBAAmB/uC,EAAM0W,EAAUo4B,GAKxD,OAHA7vB,QAAeyvB,EAAA,EAAuBvuC,mBACpCH,EAAMtD,EAAYia,EAAWk4B,IAajCN,EAAQQ,mBAAqB,SAAS/uC,EAAM0W,EAAUtgB,GAEpD,OAAUA,EADKm4C,EAAQS,UAAUhvC,GACR0W,GAAzB,KASF63B,EAAQS,UAAY,SAAShvC,GAC3B,IAAMivC,EAASjvC,EAAK8B,iBACd4qC,EAAKuC,EAAO,GAAG,GAAKA,EAAO,GAAG,GAC9BtC,EAAKsC,EAAO,GAAG,GAAKA,EAAO,GAAG,GAC9BC,EAAMzuC,KAAK0uC,KAAKxC,EAAKlsC,KAAK2uC,KAAK1C,EAAKA,EAAKC,EAAKA,IAEpD,OADeD,EAAK,EAAI,GAAK,GACZwC,EAAM,IAAMzuC,KAAKE,GAAM,KAI1Cjd,EAAA,6CClIM2rD,UAAUrhD,QAAQlM,OAAO,aAC7B,gBAIFutD,EAAQ1sD,MAAM,uBAMZ,SAACsvB,EAASizB,GACR,IAAMjM,EAAciM,EAAA,qBACpB,YAAuBj/C,IAAhBgzC,EAA4BA,EACjC,gCAGNoW,EAAQ7W,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,8BAA+Bj3C,EAAQ,SA0B5D4tD,EAAQC,WAAa,SAASC,GAC5B,OACEvK,SAAU,IACV/L,YAAasW,EAMbtK,KAAM,SAACrM,EAAO3mB,EAASizB,GACrBjzB,EAAQu9B,SAAS,WAKjB5W,EAAMiG,MAAQ,SAASvyB,GACjBA,IACFA,EAAIq1B,kBACJr1B,EAAIo1B,kBAENzvB,EAAQu9B,SAAS,WAInB5W,EAAM5lB,OAAO,OAAQ,SAACrM,EAAQsM,GAC5BhB,EAAQw9B,IAAI,UAAW9oC,EAAS,QAAU,aAzBlD0oC,EAAQC,4CA+BRD,EAAQnW,UAAU,YAAamW,EAAQC,YAGvC,IAAAI,EAAA,ECrDMC,EAAU,SAASC,EAAUl9B,EAAYyL,EAAM2D,GAAU,IAAAx5B,EAAAvC,KAO7DA,KAAK6yC,MAAQlmB,EAAWm9B,MAAK,GAG7B9pD,KAAK6yC,MAAM5lB,OACT,kBAAM1qB,EAAKswC,MAAL,MACN,SAAC6I,IACMA,GAAQn5C,EAAKwnD,cAChBxnD,EAAKsxC,SAAS,WACZtxC,EAAKoH,cAUb3J,KAAKgqD,KAAO5xB,EAMZp4B,KAAK6zC,SAAW9X,EAOhB/7B,KAAK2zC,SAAW1rC,QAAQikB,QAAQ,0BAMhClsB,KAAK+pD,cAAe,EAIpBF,EAAS7pD,KAAK2zC,SAAdkW,CAAwB7pD,KAAK6yC,OAC7B5qC,QAAQikB,QAAQ8E,SAASi5B,MAAMC,OAAOlqD,KAAK2zC,WAS7CiW,EAAQjvD,UAAUwvD,QAAU,WAC1B,OAAOnqD,KAAK6yC,MAAL,MAST+W,EAAQjvD,UAAUyvD,QAAU,SAAS1O,GACnC17C,KAAK6yC,MAAL,KAAqB6I,GAQvBkO,EAAQjvD,UAAUgP,QAAU,WAC1B3J,KAAK6yC,MAAMwX,WACXrqD,KAAK2zC,SAASlF,UAShBmb,EAAQjvD,UAAU2vD,SAAW,SAASvc,GACpC,IAAMwc,EAAevqD,KAAKgqD,KAAK1xB,YAAYyV,GAC3C/tC,KAAK6yC,MAAL,MAAsB0X,GAaxBX,EAAQjvD,UAAU6vD,WAAa,SAASra,EAASsa,GAC/CzqD,KAAK6yC,MAAL,QAAwB4X,EAAczqD,KAAKgqD,KAAK1xB,YAAmC6X,GAAYA,GASjGyZ,EAAQjvD,UAAU+vD,OAAS,SAAShnD,GAClC,IAAMysC,EAAUnwC,KAAKgqD,KAAK1xB,YAAV,gBACE50B,EADF,0CAGhB1D,KAAKwqD,WAAWra,IASlByZ,EAAQjvD,UAAUgwD,SAAW,SAASnyC,GACpCxY,KAAK2zC,SAASn7B,MAAMA,IAStBoxC,EAAQjvD,UAAUiwD,UAAY,SAASC,GACrC7qD,KAAK2zC,SAASkX,OAAOA,IAUvBjB,EAAQjvD,UAAUmwD,QAAU,SAAStyC,EAAOqyC,GAC1C7qD,KAAK2qD,SAASnyC,GACdxY,KAAK4qD,UAAUC,IAUjBjB,EAAQjvD,UAAUowD,eAAiB,SAASC,GAC1ChrD,KAAK+pD,aAAeiB,GAStBpB,EAAQjvD,UAAU8uD,SAAW,SAASpU,GACpCr1C,KAAK2zC,SAAS8V,SAASpU,IASzBuU,EAAQjvD,UAAU+gD,KAAO,SAAStzC,GAE5BA,EAAQ1E,IACV1D,KAAK0qD,OAAOtiD,EAAQ1E,KACX0E,EAAQ+nC,QACjBnwC,KAAKwqD,WAAWpiD,EAAQ+nC,SAExBpI,EAAA,EAAYrjC,KAAK,iEAGSxE,IAAxBkI,EAAQ4iD,aACVhrD,KAAK+qD,eAAe3iD,EAAQ4iD,kBAGV9qD,IAAhBkI,EAAQitC,KACVr1C,KAAKypD,SAASrhD,EAAQitC,UAGDn1C,IAAnBkI,EAAQyiD,QACV7qD,KAAK4qD,UAAUxiD,EAAQyiD,aAGH3qD,IAAlBkI,EAAQ2lC,OACV/tC,KAAKsqD,SAASliD,EAAQ2lC,YAGF7tC,IAAlBkI,EAAQoQ,OACVxY,KAAK2qD,SAASviD,EAAQoQ,OAGxBxY,KAAKoqD,SAAQ,KAYfR,EAAQqB,QAAU,SAASpB,EAAUl9B,EAAYyL,EAAM2D,GACrD,kBAKI,OAAO,IAAI6tB,EAAQC,EAAUl9B,EAAYyL,EAAM2D,2DAQrD6tB,EAAQ7tD,OAASkM,QAAQlM,OAAO,mBAC9B4tD,EAA0BvtD,QAEbqnC,QAAQ,kBAAmBmmB,EAAQqB,SAGlDttD,EAAA,kCCjRA,IAAA+lC,EAAAhoC,EAAA,GAUMI,EAAU,SAASovD,EAAS5hC,GAMhCtpB,KAAKmrD,SAAWD,EAMhBlrD,KAAKorD,UAAY,KAMjBprD,KAAKqrD,OAAS/hC,GAShBxtB,EAAQnB,UAAU8pB,WAAa,SAAS5N,GACtC7W,KAAKmrD,SAAS1mC,WAAW5N,EAAS7W,KAAKqrD,SASzCvvD,EAAQnB,UAAUiqB,cAAgB,SAAS/N,GACzC7W,KAAKmrD,SAASvmC,cAAc/N,EAAS7W,KAAKqrD,SAQ5CvvD,EAAQnB,UAAUkqB,MAAQ,WACxB7kB,KAAKmrD,SAAStmC,MAAM7kB,KAAKqrD,SAa3BvvD,EAAQnB,UAAU2wD,YAAc,SAASruC,GAAU,IAAA1a,EAAAvC,KAC1B,OAAnBA,KAAKorD,YACPprD,KAAKorD,UAAUvmC,QACf6e,EAAA,EAAkB1jC,KAAKorD,UAAW,MAAOprD,KAAKs3C,kBAAmBt3C,MACjE0jC,EAAA,EAAkB1jC,KAAKorD,UAAW,SAAUprD,KAAKurD,qBAAsBvrD,OAExD,OAAbid,IACFA,EAAS/Z,QAAQ,SAAC2T,GAChBtU,EAAKkiB,WAAW5N,KAElB6sB,EAAA,EAAgBzmB,EAAU,MAAOjd,KAAKs3C,kBAAmBt3C,MACzD0jC,EAAA,EAAgBzmB,EAAU,SAAUjd,KAAKurD,qBAAsBvrD,OAEjEA,KAAKorD,UAAYnuC,GAUnBnhB,EAAQnB,UAAUic,SAAW,SAASS,GACpCrX,KAAKmrD,SAASv0C,SAASS,EAAOrX,KAAKqrD,SAQrCvvD,EAAQnB,UAAU28C,kBAAoB,SAAS/wB,GAC7C,IAAM1P,EAAqC0P,EAAI2F,QAC/ClsB,KAAKykB,WAAW5N,IAQlB/a,EAAQnB,UAAU4wD,qBAAuB,SAAShlC,GAChD,IAAM1P,EAAqC0P,EAAI2F,QAC/ClsB,KAAK4kB,cAAc/N,IAMrB/a,EAAQC,OAASkM,QAAQlM,OAAO,yBAGhC4B,EAAA,sEC3HA6tD,EAAA9vD,EAAA,KAiBMI,EAAU,WACd0vD,EAAA,EAAY3wD,KAAKmF,OAGnByrD,EAAA,EAAgB3vD,EAAS0vD,EAAA,GAQzB1vD,EAAQnB,UAAUouB,KAAO,SAAS1E,GAChC,OACyCmnC,EAAA,EAAY7wD,UAAUouB,KAAKluB,KAAKmF,KAAMqkB,IAUjFvoB,EAAQnB,UAAU+wD,iBAAmB,SAASC,GAC5CnoD,EAAA,EAAYC,OAAOkoD,EAAIC,UAAYC,KAAKC,cACtC,mCACF,IAAK,IAAIjvD,EAAI8uD,EAAII,WAAYlvD,EAAGA,EAAIA,EAAEmvD,YACpC,GAAInvD,EAAE+uD,UAAYC,KAAKI,aACrB,OAAOjsD,KAAKksD,aAAarvD,GAG7B,OAAO,MASTf,EAAQnB,UAAUuxD,aAAe,SAAS9pD,GACxCoB,EAAA,EAAYC,OAAOrB,EAAKwpD,UAAYC,KAAKI,aACvC,mCACFzoD,EAAA,EAAYC,OAAyB,UAAlBrB,EAAK+pD,UACtB,8BAEF,IAAIC,EAAWhqD,EAAKiqD,qBAAqB,WACpCD,EAAS7xD,SACZ6xD,EAAWhqD,EAAKiqD,qBAAqB,gBAKvC,IAHA,IAAMj7C,KAEF+B,SACK9Y,EAAI,EAAG+G,EAAKgrD,EAAS7xD,OAAQF,EAAI+G,EAAI/G,KAC5C8Y,EAAYnT,KAAKssD,qBAAqBF,EAAS/xD,MAE7C+W,EAAW3W,KAAK0Y,GAIpB,OAAO/B,GASTtV,EAAQnB,UAAU2xD,qBAAuB,SAASlqD,GAEhD,IAAMhG,EAAOgG,EAAKmqD,aAAa,QAC/B/oD,EAAA,EAAYqZ,aAAazgB,EAAM,2CAE/B,IAAMm/B,EAAQn5B,EAAKmqD,aAAa,SAC1BC,EAAWpqD,EAAKmqD,aAAa,YAG7Bp5C,GACJ/W,OACAm/B,QACAkxB,YAL8B,IAAbD,GAAkC,SAAbA,IAQlC9uD,EAAO0E,EAAKmqD,aAAa,QAC/B,GAAI7uD,EACGgvD,EAAA,EAAoBC,gBAAgBx5C,EAAWzV,IAClDsC,KAAK4sD,uBAAuBz5C,EAAWzV,OAEpC,CAKL,IAAImvD,EAAezqD,EAAKiqD,qBAAqB,eAI7C,GAHKQ,EAAatyD,SAChBsyD,EAAezqD,EAAKiqD,qBAAqB,oBAEvCQ,EAAatyD,OAAQ,CACvB4Y,EAAUzV,KAAOovD,EAAA,EAAwBvtD,OAEzC,IADA,IAAMuoC,KACGztC,EAAI,EAAG+G,EAAKyrD,EAAatyD,OAAQF,EAAI+G,EAAI/G,IAChDytC,EAAQrtC,KAAKoyD,EAAaxyD,GAAGkyD,aAAa,UAE5Cp5C,EAAU20B,QAAUA,MACf,CAEL,IAAIilB,EAAe3qD,EAAKiqD,qBAAqB,eAI7C,GAHKU,EAAaxyD,SAChBwyD,EAAe3qD,EAAKiqD,qBAAqB,oBAEvCU,EAAaxyD,QAAUwyD,EAAa,GAAI,CAC1C,IAAMC,EAAkBD,EAAa,GACrC/sD,KAAK4sD,uBACHz5C,EACA65C,EAAgBT,aAAa,SAG/B,IAAIU,EAAa7qD,EAAKiqD,qBAAqB,aACtCY,EAAW1yD,SACd0yD,EAAa7qD,EAAKiqD,qBAAqB,kBAErCY,EAAW1yD,QAAU0yD,EAAW,KAClC95C,EAAU+5C,UAAY53B,OAAO23B,EAAW,GAAGV,aAAa,aAMhE,OAAKp5C,EAAUzV,MAIf8F,EAAA,EAAYC,OAAO0P,EAAUzV,MAEtByV,GALE,MAiBXrX,EAAQnB,UAAUiyD,uBAAyB,SACzCz5C,EAAWzV,GAEE,gBAATA,EACFyV,EAAUzV,KAAOovD,EAAA,EAAwB7tD,QACvB,aAATvB,EACTyV,EAAUzV,KAAOovD,EAAA,EAAwB5tD,KACvB,iBAATxB,EACTyV,EAAUzV,KAAOovD,EAAA,EAAwB3tD,SACvB,aAATzB,EACTyV,EAAUzV,KAAOovD,EAAA,EAAwB1tD,KACvB,gBAAT1B,GAAmC,eAATA,GACnCyV,EAAUzV,KAAOovD,EAAA,EAAwBxtD,OACzC6T,EAAUg6C,QAAUrxD,EAAQsxD,WAAWC,OACrB,gBAAT3vD,GACTyV,EAAUzV,KAAOovD,EAAA,EAAwBxtD,OACzC6T,EAAUg6C,QAAUrxD,EAAQsxD,WAAWE,SACrB,eAAT5vD,IACTyV,EAAUzV,KAAOovD,EAAA,EAAwB1uD,OAU7CtC,EAAQg+C,qBAAuB,SAAS1oC,GAEtC,IADA,IAAIm8C,EAAgB,KACXlzD,EAAI,EAAG+G,EAAKgQ,EAAW7W,OAAQF,EAAI+G,EAAI/G,IAC9C,GAAI+W,EAAW/W,GAAGqD,OAASovD,EAAA,EAAwBztD,SAAU,CAC3DkuD,EAAgBn8C,EAAW/W,GAC3B,MAGJ,OAAOkzD,GAQTzxD,EAAQsxD,YAKNC,MAAO,QAKPC,QAAS,WAIX3vD,EAAA,0SCzNA,IAAM7B,aAWJ,SAAAA,EAAYsM,gGAASC,CAAArI,KAAAlE,GAQnBkE,KAAKwtD,uBAAyB,IAAIC,EAAA,EAAarlD,EAAQkyB,aASvDt6B,KAAK0tD,OAAStlD,EAAQ2lC,MA5BpB,OAAAjyC,EAAAnB,UAkCJgP,QAlCI,WAmCF3J,KAAKwtD,uBAAuB3oC,SAnC1B/oB,EAAAnB,UAiHJgzD,mBAjHI,SAiHen8C,GACjB,OAAOA,EAAW6W,QAChBvsB,EAAQ8xD,gBAAgBC,GACxB/xD,EAAQ8xD,gBAAgBE,KApHxBhyD,EAAAnB,UA2HJixC,cA3HI,SA2HUp6B,GACZxR,KAAKwtD,uBAAuB/yD,KAAK+W,IA5H/B1V,EAAAnB,UAmIJqxC,iBAnII,SAmIax6B,GACfxR,KAAKwtD,uBAAuB/e,OAAOj9B,IApIjC1V,EAAAnB,UAiJJozD,sBAjJI,WAkJF,IAAMC,EACFhuD,KAAKiuD,kBAAoBnyD,EAAQ8xD,gBAAgBC,GACrDr+C,EAAyBxP,KAAKs6B,YAA9B7qB,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAA2C,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAjV,OAAA,MAAAwV,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAhT,MAAA,IAAhC4U,EAAgCzB,EACrCyB,EAAW6W,UAAY2lC,IACzBx8C,EAAW6W,QAAU2lC,KAtJvBnkD,EAAA/N,IAAAgO,IAAA,cAAApN,IAAA,WA+CF,OAAOsD,KAAKwtD,uBAAuBtjC,cA/CjCpgB,IAAA,wBAAApN,IAAA,WAwDF,OAAOsD,KAAKwtD,0BAxDV1jD,IAAA,QAAApN,IAAA,WAqEF,OAAOsD,KAAK0tD,UArEV5jD,IAAA,kBAAApN,IAAA,WAkFF,IAAI8xB,SAEJrc,EAAyBnS,KAAKs6B,YAA9BloB,EAAA1C,MAAAC,QAAAwC,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAtC,OAAAC,cAA2C,KAAAwC,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA5X,OAAA,MAAA+X,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAnC,QAAAC,KAAA,MAAAqC,EAAAD,EAAAzV,MAAA,IAAhC4U,EAAgCc,EACzC,QAAcpS,IAAVsuB,EACFA,EAAQxuB,KAAK2tD,mBAAmBn8C,QAEbxR,KAAK2tD,mBAAmBn8C,KACxBgd,IACjBA,EAAQ1yB,EAAQ8xD,gBAAgBM,eAGpC,GAAI1/B,IAAU1yB,EAAQ8xD,gBAAgBM,cACpC,MAMJ,OAFA1qD,EAAA,EAAYqZ,aAAa2R,GAElBA,MApGL1yB,KAgKNA,EAAQ8xD,iBACNM,cAAe,gBACfJ,IAAK,MACLD,GAAI,MAINlwD,EAAA,kGCrKA,IAiEAwwD,EAjEMryD,WAAA,SAAAA,iGAAAuM,CAAArI,KAAAlE,GAAA,OAAAA,EAAAnB,UAcJouB,KAdI,SAcCqlC,GACH,OAAOA,EAAoBtpD,IAAI9E,KAAKquD,8BAflCvyD,EAAAnB,UAwBJ0zD,4BAxBI,SAwBwBtxD,GAE1B,IAKMoW,GACJ/W,KANW2rC,EAAA,EAAYlrB,aAAa9f,EAAA,MAOpCw+B,MANY,UAAWx+B,EACvBgrC,EAAA,EAAYlrB,aAAa9f,EAAA,OAAmB,KAM5C0vD,SALsC,KAAvB1vD,EAAA,WAQXW,EAAOqqC,EAAA,EAAYlrB,aAAa9f,EAAA,MAsBtC,OApBKuxD,EAAA,EAAoB3B,gBAAgBx5C,EAAWzV,KACrC,wBAATA,GAA2C,aAATA,EACpCyV,EAAUzV,KAAOmpC,EAAA,EAAwB1nC,SACvB,SAATzB,EACTyV,EAAUzV,KAAOmpC,EAAA,EAAwB3nC,KACvB,SAATxB,EACTyV,EAAUzV,KAAOmpC,EAAA,EAAwBznC,KACvB,YAAT1B,GAA+B,WAATA,GAC/ByV,EAAUzV,KAAOmpC,EAAA,EAAwBvnC,OACzC6T,EAAUg6C,QAAUoB,EAAA,EAAuBnB,WAAWC,OACpC,YAAT3vD,GAA+B,SAATA,GAC/ByV,EAAUzV,KAAOmpC,EAAA,EAAwBvnC,OACzC6T,EAAUg6C,QAAUoB,EAAA,EAAuBnB,WAAWE,SAEtDn6C,EAAUzV,KADQ,YAATA,EACQmpC,EAAA,EAAwB5nC,QAExB4nC,EAAA,EAAwBzoC,MAItC+U,GA3DLrX,0QCEN,IAAM0yD,EAAA1yD,WAaJ,SAAAA,EAAY6D,EAAIy5B,EAAiBE,gGAAam1B,CAAAzuD,KAAAlE,GAQ5CkE,KAAKytC,GAAK9tC,EAMVK,KAAKkxC,YAAc9X,EAAgBj0B,WAMnCnF,KAAK05B,aAAeJ,EASpBt5B,KAAK0uD,UAILvgB,EAAA,EAAgBnuC,KAAKkxC,YAAa,MAAOlxC,KAAKoxC,sBAAuBpxC,MACrEmuC,EAAA,EAAgBnuC,KAAKkxC,YAAa,SAAUlxC,KAAKouC,yBAA0BpuC,MA/CzE,OAAAlE,EAAAq+B,SAAA,sCAAAr+B,EAAAnB,UAgEJ20B,cAhEI,SAgEUhH,GACZ,OAAOtoB,KAAK0uD,OAAOpmC,IAAO,MAjExBxsB,EAAAnB,UAgFJg0D,wBAhFI,SAgFoBn9C,GAEtB,IAAMo9C,EAA8B5uD,KAAKytC,GAAG7sC,QA4B5C,OA1BI4Q,EAAWJ,WACbw9C,EAA4B1qD,QAAQsN,EAAWJ,YAE/CpR,KAAK05B,aAAam1B,uBAChBr9C,GACA3N,KAAK,SAAC8M,GAGN,IAAMm+C,EAAet9C,EAAWiB,mBAAmB,GACnDs1B,EAAA,EAAYlrB,aACViyC,EAAc,kDAChB,IAAM5iC,EAAUvb,EAAYub,QAAQ,GACpC6b,EAAA,EAAYtkC,OAAOyoB,EAAQ9vB,OAAS0yD,GACpC/mB,EAAA,EAAYtkC,OACVkN,EAAYo+C,YAAY,GAAG3yD,OAAS8vB,EAAQxuB,MAE9C,IAAMsxD,EAAiBr+C,EAAA,YAA2B,GAA3B,eACjBS,GAAa,IAAI+8C,GAAyBplC,KAAKimC,GAGrDx9C,EAAWH,cAAcD,GAEzBw9C,EAA4B1qD,QAAQkN,KAIjCw9C,EAA4B9tD,SA9GjChF,EAAAnB,UAuHJy2C,sBAvHI,SAuHkB7qB,GACpB,IAAM/U,EAAau2B,EAAA,EAAYvhB,iBAC7BD,EAAI2F,QAASkf,EAAA,GACfprC,KAAK0uD,OAAOl9C,EAAW8W,IAAM9W,GA1H3B1V,EAAAnB,UAmIJyzC,yBAnII,SAmIqB7nB,GACvB,IAAM/U,EAAau2B,EAAA,EAAYvhB,iBAC7BD,EAAI2F,QAASkf,EAAA,UACRprC,KAAK0uD,OAAOl9C,EAAW8W,KAtI5Bze,EAAA/N,IAAAgO,IAAA,aAAApN,IAAA,WAuDF,OAAOsD,KAAKkxC,gBAvDVp1C,KA+IN0yD,EAAQzyD,OAASkM,QAAQlM,OAAO,yBAC9Bk1C,EAAA,EAA0Bl1C,OAAOK,KACjC6yD,EAAA,EAAiBlzD,OAAOK,OAE1BoyD,EAAQzyD,OAAOoM,QAAQ,wBAAyBqmD,GAGhD7wD,EAAA,uGChJMuxD,EAAU,WAEdC,EAAA,EAAYt0D,KAAKmF,OAInB8wC,EAAA,EAAgBoe,EAASC,EAAA,GAWzBD,EAAQv0D,UAAUouB,KAMlBmmC,EAAQv0D,UAAU+wD,iBAAmB,SAASC,GAC5C,IAAK,IAAI9uD,EAAI8uD,EAAII,WAAYlvD,EAAGA,EAAIA,EAAEmvD,YACpC,GAAInvD,EAAE+uD,UAAYC,KAAKI,aACrB,OAAOjsD,KAAKksD,aAAarvD,GAG7B,OAAO,MAOTqyD,EAAQv0D,UAAUuxD,aAAe,SAAS9pD,GACxC,IAAIhH,KAOJ,OANAA,EAASg0D,EAAA,EACPh0D,EACA8zD,EAAQG,SACRjtD,OAaJ8sD,EAAQI,aAAe,SAASltD,EAAMmtD,GAEpC,IADA,IAAMn+C,KACG/W,EAAI,EAAGm1D,EAAMptD,EAAKgP,WAAW7W,OAAQF,EAAIm1D,EAAKn1D,IAAK,CAC1D,IAAM8Y,EAAY/Q,EAAKgP,WAAW1O,KAAKrI,GACvC+W,EAAW+B,EAAU/W,MAAQ+W,EAAUvW,MAMzC,OAJ2B,IAAvB2yD,EAAYh1D,SAEd6W,EAAA,KAAqBA,EAAA,KAAmBiF,MAAM,KAAKo5C,OAE9Cr+C,GAUT89C,EAAQQ,iBAAmB,SAASttD,EAAMmtD,GACxC,IAAMnzD,EAAOgG,EAAKmqD,aAAa,QACzBxvD,EAASqyD,EAAA,GACZhzD,KAAQA,GACT8yD,EAAQS,sBACRvtD,EAAMmtD,GAKR,OAFAxyD,EAAA,eACEA,EAAA,0CACKA,GAUTmyD,EAAQU,oBAAsB,SAC5BxtD,EAAMmtD,GAEN,OAAOH,EAAA,KAELF,EAAQW,yBACRztD,EACAmtD,IAWJL,EAAQY,eAAiB,SAAS1tD,EAAMmtD,GACtC,OAAOH,EAAA,KAELF,EAAQa,mBACR3tD,EACAmtD,IAWJL,EAAQc,cAAgB,SAAS5tD,EAAMmtD,GACrC,OAAOH,EAAA,KAELF,EAAQe,kBACR7tD,EACAmtD,IAUJL,EAAQgB,iBACN,KACA,oCASFhB,EAAQG,SAAWtnB,EAAA,EAAYtkC,OAAO2rD,EAAA,EACpCF,EAAQgB,iBACNhkC,QAAWkjC,EAAA,EACTF,EAAQI,cAEVP,YAAeK,EAAA,EACbF,EAAQQ,qBAUdR,EAAQS,sBAAwB5nB,EAAA,EAAYtkC,OAAO2rD,EAAA,EACjDF,EAAQgB,iBACNlB,eAAkBI,EAAA,EAChBF,EAAQU,wBAUdV,EAAQW,yBAA2B9nB,EAAA,EAAYtkC,OAAO2rD,EAAA,EACpDF,EAAQgB,iBACNC,UAAaf,EAAA,EACXF,EAAQY,mBAUdZ,EAAQa,mBAAqBhoB,EAAA,EAAYtkC,OAAO2rD,EAAA,EAC9CF,EAAQgB,iBACNE,SAAYhB,EAAA,EACVF,EAAQc,kBAUdd,EAAQe,kBAAoBloB,EAAA,EAAYtkC,OAAO2rD,EAAA,EAC7CF,EAAQgB,iBACNhkC,QAAWkjC,EAAA,EACTF,EAAQI,iBAKd,IAAAe,EAAA,qDCzNA,IAAMC,EAAAx0D,WAwBJ,SAAAA,EAAY2D,EAAOE,EAAI4wD,EAAgBxsB,gGAAa17B,CAAArI,KAAAlE,GAQlDkE,KAAKwwD,MAAQ/wD,EAMbO,KAAKytC,GAAK9tC,EAMVK,KAAKywD,gBAAkBF,EAMvBvwD,KAAKgkC,aAAeD,EAUpB/jC,KAAK0wD,qBAQL1wD,KAAK2wD,+BAQL3wD,KAAK4wD,gCA5EH,OAAA90D,EAAAq+B,SAAA,6CAAAr+B,EAAAnB,UA0FJy/B,MA1FI,SA0FEhyB,GAEJ,IAAMxD,KACAE,EAAMsD,EAAQtD,IAGpB9E,KAAK6wD,8BAGL,IAAIx2B,SACJ,GAAIjyB,EAAQiyB,qBACVA,EAAuBjyB,EAAQiyB,yBAC1B,CACL,IAAMC,EAAclyB,EAAQkyB,YAC5ByN,EAAA,EAAYtkC,OAAO62B,EAAa,6BAChCD,EAAuBr6B,KAAKu6B,wBAAwBD,EAAax1B,GAMnE,IAAMgsD,EAAyB9wD,KAAK+wD,6BAClC12B,EAAqB22B,KAOvB,GANApsD,EAASnK,KAAKuF,KAAKixD,kBAAkBH,EAAwB1oD,IAK1CA,EAAQkrB,WACX,CACd,IAAM49B,EAAyBlxD,KAAKmxD,6BAClC92B,EAAqB+2B,KACvBxsD,EAASnK,KAAKuF,KAAKqxD,kBAAkBH,EAAwB9oD,IAG/D,OAAOpI,KAAKytC,GAAGvoC,IAAIN,GAAUf,KAC3B7D,KAAKsxD,2BAA2Bj0D,KAAK2C,QA9HrClE,EAAAnB,UA8IJ4/B,wBA9II,SA8IoBD,EAAax1B,GAEnC,IAAMu1B,GACJ22B,OACAI,QAEI9rC,EAAayiB,EAAA,EAAYruB,aAAa5U,EAAIqa,UAAUsM,iBAE1Djc,EAAyB8qB,EAAzB7qB,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAAsC,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAjV,OAAA,MAAAwV,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAhT,MAAA,IAA3B4U,EAA2BzB,EAG/B/P,KAAKuxD,uBAAuB//C,EAAY8T,KAIzC9T,aAAsBy7B,EAAA,IAEpBz7B,EAAWpB,YACbiqB,EAAqB22B,IAAIv2D,KAAK+W,GAE9B6oB,EAAqB+2B,IAAI32D,KAAK+W,KAKpC,OAAO6oB,GAvKLv+B,EAAAnB,UA+KJk0D,uBA/KI,SA+KmBr9C,GAErBu2B,EAAA,EAAYtkC,OACV+N,EAAWggD,mBADb,wIAMA,IAAMC,EAAgBjgD,EAAWiB,mBAE3B/O,EAAMguD,EAAA,EACV3pB,EAAA,EAAYlrB,aAAarL,EAAW9C,SAElC0c,QAAW,sBACXF,QAAW,MACXC,QAAW,QACXwmC,SAAYF,IAIhB,OAAOzxD,KAAKwwD,MAAM9zD,IAAIgH,GAAKG,KAAK,SAACC,GAE/B,OADe,IAAIusD,GACLtnC,KAAKjlB,EAAS/J,SArM5B+B,EAAAnB,UA+MJi3D,uBA/MI,SA+MmBC,EAAmBrpC,GAExC,IAAIgC,EAAQ,KAEZrY,EAA8B0/C,EAA9Bz/C,EAAA1C,MAAAC,QAAAwC,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAtC,OAAAC,cAAiD,KAAAwC,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA5X,OAAA,MAAA+X,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAnC,QAAAC,KAAA,MAAAqC,EAAAD,EAAAzV,MAAA,IAAtCk1D,EAAsCx/C,EAC/C,GAAIw/C,EAAA,OAA4BtpC,EAAW,CACzCgC,EAAQsnC,EACR,MACK,GAAIA,EAAA,QACTtnC,EAAQxqB,KAAK4xD,uBACXE,EAAA,MAA0BtpC,IAE1B,MAKN,OAAOgC,GAhOL1uB,EAAAnB,UA2OJo3D,mBA3OI,SA2OeC,EAASC,GAE1B,IAAM7qD,GAAsB,IAAd6qD,EAQRvuD,EAAMguD,EAAA,EAAmBM,GAL7B5mC,QAAW,kBACXF,QAAW,MACXC,QAAW,UAITrqB,SAiBJ,OAfKsG,GAAUpH,KAAK2wD,4BAA4BqB,GAKrC5qD,GAASpH,KAAK2wD,4BAA4BqB,KACnDlxD,EAAUd,KAAK2wD,4BAA4BqB,IAL3ClxD,EAAUd,KAAKwwD,MAAM9zD,IAAIgH,GAAKG,KAAK,SAACC,GAElC,OADe,IAAIouD,EAAA,GACLnpC,KAAKjlB,EAAS/J,QAMhCguC,EAAA,EAAYtkC,OAAO3C,GAEfsG,IAAUpH,KAAK2wD,4BAA4BqB,KAC7ChyD,KAAK2wD,4BAA4BqB,GAAWlxD,GAGvCA,GAvQLhF,EAAAnB,UAgRJw3D,wBAhRI,SAgRoBN,EAAmBrpC,GACzC,IAAIgC,EAAQ,KACZ9X,EAA8Bm/C,EAA9Bl/C,EAAAjD,MAAAC,QAAA+C,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAA7C,OAAAC,cAAiD,KAAA+C,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAnY,OAAA,MAAAsY,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA1C,QAAAC,KAAA,MAAA4C,EAAAD,EAAAhW,MAAA,IAAtCk1D,EAAsCj/C,EAC/C,GAAIi/C,EAAA,aAAkCtpC,EAAW,CAC/CgC,EAAQsnC,EACR,OAGJ,OAAOtnC,GAxRL1uB,EAAAnB,UAoSJy3D,oBApSI,SAoSgB1uD,EAAKuuD,GAEvB,IAAM7qD,GAAsB,IAAd6qD,EACVnxD,SAiBJ,OAfKsG,GAAUpH,KAAK4wD,6BAA6BltD,GAKtC0D,GAASpH,KAAK4wD,6BAA6BltD,KACpD5C,EAAUd,KAAK4wD,6BAA6BltD,IAL5C5C,EAAUd,KAAKwwD,MAAM9zD,IAAIgH,GAAKG,KAAK,SAACC,GAElC,OADe,IAAIuuD,EAAA,GACLtpC,KAAKjlB,EAAS/J,QAMhCguC,EAAA,EAAYtkC,OAAO3C,GAEfsG,IAAUpH,KAAK4wD,6BAA6BltD,KAC9C1D,KAAK4wD,6BAA6BltD,GAAO5C,GAGpCA,GAxTLhF,EAAAnB,UA8UJ22D,2BA9UI,SA8UuBxtD,GACzB,IAAMwuD,KACNv/C,EAAmBjP,EAAnBkP,EAAAtD,MAAAC,QAAAoD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAlD,OAAAC,cAA6B,KAAAoD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAxY,OAAA,MAAA2Y,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA/C,QAAAC,KAAA,MAAAiD,EAAAD,EAAArW,MAAA,IAAlB21D,EAAkBr/C,EAC3B,IAAK,IAAMs/C,KAAmBD,EAAM,CAClC,IAAME,EAAen9B,OAAOk9B,GAC5BF,EAAaG,GAAgBF,EAAKE,IAGtC,OAAOH,GAtVLx2D,EAAAnB,UAsWJ+3D,mBAtWI,SAsWep4B,EAAaT,EAAOm3B,EAAKltD,GAC1C,IAAMyuD,KAENt+C,EAAyBqmB,EAAzBpmB,EAAAxE,MAAAC,QAAAsE,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAApE,OAAAC,cAAsC,KAAAsE,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA1Z,OAAA,MAAA6Z,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAjE,QAAAC,KAAA,MAAAmE,EAAAD,EAAAvX,MAAA,IAA3B4U,EAA2B4C,EAChC6I,SACAme,SACAJ,SAEoB,iBAAbl3B,GACTmZ,KACAme,GAAkB,EAClBJ,EAAoBl3B,GAGlBmZ,EADEzL,aAAsBy7B,EAAA,EACbjtC,KAAK2yD,qBAAqBnhD,EAAY1N,EAAS/J,KAAMi3D,MAKpE,IAAMyB,EAAejhD,EAAW8W,GAChCtoB,KAAK4yD,cAAc31C,EAAUzL,EAAW8W,IACxCiqC,EAAKE,IACHx1C,WACA4c,QACAuB,kBACAJ,qBAIJ,OAAOu3B,GAnYLz2D,EAAAnB,UAgZJg4D,qBAhZI,SAgZiBnhD,EAAYzX,EAAMi3D,GAAK,IAAAzuD,EAAAvC,KACpCid,KACFszB,SAEEsiB,EAAe7yD,KAAK8yD,qBAAqBthD,EAAYw/C,GAAK1zD,QAmBhE,OAlBAu1D,EAAa3vD,QAAQ,SAACxF,GAEpB6E,EAAKuwD,qBAAqBthD,EAAYw/C,GAAMtzD,KAE1C6yC,EADEygB,EACax/C,EAAWrB,UAAUogC,aAAax2C,GAElCyX,EAAWV,UAAUy/B,aAAax2C,IAElCQ,OAAS,GACxBg2C,EAAartC,QAAQ,SAAC2T,GACpBA,EAAQjU,IAAI,qBAAsBlF,GAClCuf,EAASxiB,KAAKoc,OAMpB7W,KAAK8yD,qBAAqBthD,EAAYw/C,EAAK6B,GACpC51C,GAvaLnhB,EAAAnB,UAobJm4D,qBApbI,SAobiBthD,EAAYw/C,EAAK+B,GACpC,IAAIC,SAYJ,OAXIhC,GACE+B,GACFvhD,EAAWrB,UAAU8iD,eAAeF,GAEtCC,EAAQxhD,EAAWrB,UAAU+iD,mBAEzBH,GACFvhD,EAAWV,UAAU+Y,UAAUkpC,GAEjCC,EAAQxhD,EAAWV,UAAUmZ,aAE1B+oC,EAGGtjD,MAAMC,QAAQqjD,GAAUA,GAASA,OApcvCl3D,EAAAnB,UAidJs2D,kBAjdI,SAidckC,EAAqB/qD,GAAS,IAAAlC,EAAAlG,KAExC4E,KAGAwuD,EAAcrrB,EAAA,EAAYruB,aAAatR,EAAQyxB,OAG/C3a,EADM9W,EAAQtD,IACHqa,UACXmG,EAAayiB,EAAA,EAAYruB,aAAawF,EAAKuM,iBAE3Csd,EADa7pB,EAAKmxB,gBACGgjB,UACrB54B,GAAgC,IAArBryB,EAAQqyB,SAGrB64B,SACEhgC,EAAalrB,EAAQkrB,WAC3B,GAAIA,EAAY,CACd,IAAMkH,EAAcpyB,EAAQoyB,YAC5BuN,EAAA,EAAYtkC,OAAO+2B,GACnB,IAAMP,EAAYO,EAAclV,EAChCguC,EAAOl0C,EAAA,EACLA,EAAA,EAAsCkU,GACtC2G,QAGFq5B,EAAOlrD,EAAQgX,OAIjB,IAAMjP,EAAY,IAAIq5B,EAAA,EAChB+pB,EAAgB,IAAI9pB,cA/BoBxO,EAAA,SAgCnCX,GAET,IAAIk5B,SACA9iD,SACAmiD,KACAnvD,SACEuD,KAGNwsD,EAAyBn5B,EAAzBo5B,EAAAhkD,MAAAC,QAAA8jD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAA5jD,OAAAC,cAAsC,KAAA8jD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAl5D,OAAA,MAAAq5D,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAzjD,QAAAC,KAAA,MAAA2jD,EAAAD,EAAA/2D,MAAA,IAA3B4U,EAA2BoiD,EAGpC,IAAKJ,EAAyB,CAC5B9iD,EAAYc,EAAWzD,aACvB,IAAM8lD,EAAgBriD,EAAWtD,iBAC3BjC,EAAeuF,EAAWvF,aAC1B6nD,EAAetiD,EAAWlD,gBAEhCklD,GACEF,OACA5iD,YACAmjD,gBACA5nD,eACA6nD,eACA/qB,WAGFrlC,EAAM8N,EAAW9C,OAGjBg6B,EAAA,EAAazhC,EAAQuK,EAAW+B,kBAIlCs/C,EAAeA,EAAa12C,OAC1B3K,EAAWS,wBAAwBqT,GAAY,IAIjD,IAAIlgB,SACAgD,EAAQhD,OACVA,EAASc,EAAKuqD,gBAAgB9nB,cAC5Bn3B,WAAYA,EACZpM,OAAQgD,EAAQhD,OAChB8jC,SAAS,KAED13B,EAAW9F,aAAe8F,EAAW9F,YAAYnR,QACzDiX,EAAWwC,kBAEb+zB,EAAA,EAAYtkC,OACa,IAAvB62B,EAAY//B,OADd,uGAMA6K,EAASc,EAAKuqD,gBAAgB9nB,cAC5Bn3B,WAAYA,EACZ03B,SAAS,EACTH,QAASA,KAIT3jC,IACFouD,EAAA,OAAoCpuD,GAIxC2iC,EAAA,EAAYtkC,OAAO+vD,GACnBA,EAAwBX,aAAeA,EACvC9qB,EAAA,EAAYtkC,OAAOC,GAYnB,IAAMqwD,EAAkB7tD,EAAKunC,GAAG7sC,QAChCgE,EAASnK,KACPs5D,EAAgBjzD,QAAQ+C,KACtBqC,EAAKwsD,mBAAmBr1D,KAAxB6I,EAAmCo0B,EAAa84B,GAAa,KAKjE,IAAIY,SACJ,GAAIv5B,EAAU,CACZ,IAAMw5B,EACJvrB,EAAA,GAEIwrB,WAAY,QAEdV,GAGEW,EAAkBhkD,EAAUikD,gBAAgBH,GAC5CI,EAAsBd,EAAc7pB,kBACxCyqB,GACIG,EAAWpuD,EAAKquD,oBACtBP,EAAe9tD,EAAKsqD,MAAM7N,KACxBj/C,EACA2wD,GAEEptD,OAAQA,EACR+7C,SAAUC,eAAgB,2BAC1B5f,QAASixB,EAASxzD,UAEpB+C,KAAM,SAACC,GAIP,OAHaw2B,EAAY,GAAGnqB,UAAUqkD,8BACpC1wD,EAAS/J,MAEJ,kBACNsD,KALI6I,SAOP8tD,EAAe9tD,EAAKunC,GAAGvpC,UAIzB8vD,EAAanwD,KAAK,SAAC4wD,GAGjB,QAAyBv0D,IAArBu0D,GAAkCA,EAAmBrB,EAAa,CAEpE,IAAMsB,EACJhsB,EAAA,GAEI0qB,eAEFI,GAGEmB,EAAoBxkD,EAAUikD,gBAClCM,GACIE,EAAiBrB,EAAc7pB,kBACnCirB,GACF5sB,EAAA,EAAYlrB,aAAanZ,GACzB,IAAM4wD,EAAWpuD,EAAKquD,oBACtBruD,EAAKsqD,MAAM7N,KACTj/C,EACAkxD,GAEE3tD,OAAQA,EACR+7C,SAAUC,eAAgB,2BAC1B5f,QAASixB,EAASxzD,UAEpB+C,KAAK,SAACC,GACNiwD,EAAgB7vD,QAAQJ,UAI1BiwD,EAAgB7vD,QAAQuwD,MA1J9BI,EAA0B1B,EAA1B2B,EAAAplD,MAAAC,QAAAklD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAhlD,OAAAC,cAA+C,KAAAklD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAt6D,OAAA,MAAAy6D,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA7kD,QAAAC,KAAA,MAAA+kD,EAAAD,EAAAn4D,MAAAq+B,EAAA+5B,GA+J/C,OAAOh1D,KAAKytC,GAAGvoC,IAAIN,GAAUf,KAC3B7D,KAAKsxD,2BAA2Bj0D,KAAK2C,QAjpBrClE,EAAAnB,UA+pBJ02D,kBA/pBI,SA+pBc8B,EAAqB/qD,GAErC,IAAMxD,KAGAqwD,EAAgBltB,EAAA,EAAYruB,aAAatR,EAAQyxB,OAGjD3a,EADM9W,EAAQtD,IACHqa,UACXmG,EAAayiB,EAAA,EAAYruB,aAAawF,EAAKuM,iBAE3CypC,EADah2C,EAAKmxB,gBACIgjB,UAGtB//B,EAAalrB,EAAQkrB,WAC3ByU,EAAA,EAAYtkC,OAAO6vB,GAGnB,IAAA6hC,EAA0BhC,EAA1BiC,EAAA1lD,MAAAC,QAAAwlD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAtlD,OAAAC,cAA+C,KAAAwlD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA56D,OAAA,MAAA+6D,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAnlD,QAAAC,KAAA,MAAAqlD,EAAAD,EAAAz4D,MAAA,IAApC09B,EAAoCg7B,EAEzC5xD,SACAikB,KACA4tC,SACAC,GAAsB,EACpBvuD,KACFqiC,EAAe,KACfmsB,EAAqB,KAGzBC,EAAyBp7B,EAAzBq7B,EAAAjmD,MAAAC,QAAA+lD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAA7lD,OAAAC,cAAsC,KAAA+lD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAn7D,OAAA,MAAAs7D,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA1lD,QAAAC,KAAA,MAAA4lD,EAAAD,EAAAh5D,MAAA,IAA3B4U,EAA2BqkD,EAG/BN,IACHA,EAAc/jD,EAAW5C,cACzBlL,EAAM8N,EAAWtC,QAInByY,EAASA,EAAOxL,OACd3K,EAAWS,wBAAwBqT,GAAY,IAO5CkwC,IACH9sB,EAAA,EAAazhC,EAAQuK,EAAW+B,kBAChCiiD,GAAsB,GAMpBhkD,EAAW9F,aAAe8F,EAAW9F,YAAYnR,SACnDwtC,EAAA,EAAYtkC,OAA8B,IAAvB62B,EAAY//B,QAC/Bk7D,EAAqBjkD,EAAWsB,2BAChCw2B,EAAetpC,KAAKywD,gBAAgBpnB,oBAClC73B,WAAYA,EACZu3B,QAASmsB,KAOqB,OAA9B1jD,EAAWwC,gBAA2BxC,EAAW7D,eACnDo6B,EAAA,EAAYtkC,OAA8B,IAAvB62B,EAAY//B,QAC/B0M,EAAA,KAAiBjH,KAAKgkC,aAAarC,mBACjCnwB,EAAW7D,aACX6D,EAAWwC,iBASjB,GAJA/M,EAAA,OAAmB0gB,EACnB1gB,EAAA,aAAyB0gB,EAGrB2hB,GAAgBmsB,EAAoB,CACtC,IAAIK,EAAmB,KACvB,GAAsB,IAAlBnuC,EAAOptB,OAGTu7D,EAAmBxsB,MACd,CAKL,IADA,IAAMysB,KACG17D,EAAI,EAAG+G,EAAKumB,EAAOptB,OAAQF,EAAI+G,EAAI/G,IACtCstB,EAAOttB,KAAOo7D,EAChBM,EAAkBt7D,KAAlB,IAA2B6uC,EAA3B,KAEAysB,EAAkBt7D,KAAK,MAG3Bq7D,EAAmBC,EAAkBxuD,KAAK,IAE5CN,EAAA,OAAmB6uD,EAGrB/tB,EAAA,EAAYtkC,OAAOC,GACnB,IAAMsyD,EAAY,IAAIC,EAAA,GACpBhvD,SACAvD,QAIIwyD,EAAuBnuB,EAAA,EAAYlrB,aACvCm5C,EAAUG,qBACR7iC,EAAYhO,EAAY4vC,GAEtBD,cAAiBA,EACjBM,YAAeA,KAKfjB,EAAWt0D,KAAKu0D,oBACtB3vD,EAASnK,KACPuF,KAAKwwD,MAAM9zD,IACTw5D,GAEE7yB,QAASixB,EAASxzD,UAEpB+C,KACA7D,KAAK0yD,mBAAmBr1D,KAAK2C,KAAMs6B,EAAa26B,GAAe,KAKrE,OAAOj1D,KAAKytC,GAAGvoC,IAAIN,GAAUf,KAC3B7D,KAAKsxD,2BAA2Bj0D,KAAK2C,QApyBrClE,EAAAnB,UA8yBJo2D,6BA9yBI,SA8yByBz2B,GAC3B,IAAM87B,KACAC,KAENC,EAAyBh8B,EAAzBi8B,EAAA7mD,MAAAC,QAAA2mD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAzmD,OAAAC,cAAsC,KAAA2mD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA/7D,OAAA,MAAAk8D,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAtmD,QAAAC,KAAA,MAAAwmD,EAAAD,EAAA55D,MAAA,IAA3B4U,EAA2BilD,EACpC,GAAIjlD,EAAWC,iBAAkB,CAC/B,IAAIilD,GAAW,EACfC,EAAmCP,EAAnCQ,EAAAlnD,MAAAC,QAAAgnD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAA9mD,OAAAC,cAA0D,KAAAgnD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAp8D,OAAA,MAAAu8D,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA3mD,QAAAC,KAAA,MAAA6mD,EAAAD,EAAAj6D,MAAA,IAA/Cm6D,EAA+CD,EACpDtlD,EAAWD,+BAA+BwlD,EAAqB,MACjEA,EAAqBt8D,KAAK+W,GAC1BklD,GAAW,GAGVA,GACHN,EAAsB37D,MAAM+W,SAG9B6kD,EAAyB57D,MAAM+W,IAInC,OAAO4kD,EAAsBj6C,OAAOk6C,IAn0BlCv6D,EAAAnB,UA40BJw2D,6BA50BI,SA40ByB72B,GAC3B,IAAM87B,KACAC,KAENW,EAAyB18B,EAAzB28B,EAAAvnD,MAAAC,QAAAqnD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAnnD,OAAAC,cAAsC,KAAAqnD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAz8D,OAAA,MAAA48D,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAhnD,QAAAC,KAAA,MAAAknD,EAAAD,EAAAt6D,MAAA,IAA3B4U,EAA2B2lD,EACpC,GAAI3lD,EAAWI,iBAAkB,CAC/B,IAAI8kD,GAAW,EACfU,EAAmChB,EAAnCiB,EAAA3nD,MAAAC,QAAAynD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAvnD,OAAAC,cAA0D,KAAAynD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA78D,OAAA,MAAAg9D,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAApnD,QAAAC,KAAA,MAAAsnD,EAAAD,EAAA16D,MAAA,IAA/Cm6D,EAA+CQ,EACpD/lD,EAAWG,+BAA+BolD,EAAqB,MACjEA,EAAqBt8D,KAAK+W,GAC1BklD,GAAW,GAGVA,GACHN,EAAsB37D,MAAM+W,SAG9B6kD,EAAyB57D,MAAM+W,IAInC,OAAO4kD,EAAsBj6C,OAAOk6C,IAj2BlCv6D,EAAAnB,UAg3BJ42D,uBAh3BI,SAg3BmBiG,EAAI1lD,GACzB,IAAIvC,EAAYioD,EAAGnvC,SAAWmvC,EAAG5lB,SAAW4lB,EAAGjoD,UAC3CA,GAAaioD,aAAcvqB,EAAA,IAE7B19B,EADmDioD,EACjC3lD,qBAAqBC,GAAK,IAE9C,OAAOvC,GAt3BLzT,EAAAnB,UAg4BJi4D,cAh4BI,SAg4BU31C,EAAUw1C,GACtBx1C,EAAS/Z,QAAQ,SAAC2T,GAChB,QAAwB3W,IAApB2W,EAAQ04B,QAAuB,CACjC,IAAMjnB,EAAQmqC,EAAR,IAAwB57C,EAAQ04B,QACtC14B,EAAQshC,MAAM7vB,OAp4BhBxsB,EAAAnB,UA84BJ45D,kBA94BI,WA+4BF,IAAMD,EAAWt0D,KAAKytC,GAAG7sC,QAEzB,OADAZ,KAAK0wD,kBAAkBj2D,KAAK65D,GACrBA,GAj5BLx4D,EAAAnB,UAu5BJk2D,4BAv5BI,WAw5BF,IAAA4G,EAAuBz3D,KAAK0wD,kBAA5BgH,EAAAhoD,MAAAC,QAAA8nD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAA5nD,OAAAC,cAA+C,KAAA8nD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAl9D,OAAA,MAAAq9D,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAznD,QAAAC,KAAA,MAAA2nD,EAAAD,EAAA/6D,MAAAg7D,EACpC1zD,UAEXlE,KAAK0wD,kBAAkBn2D,OAAS,GA35B9BuB,KAm6BNw0D,EAAQuH,oBAMRvH,EAAQv0D,OAASkM,QAAQlM,OAAO,eAC9B+7D,EAAA,EAAqB/7D,OAAOK,KAC5ByuC,EAAA,EAAgB9uC,OAAOK,OAEzBk0D,EAAQv0D,OAAOoM,QAAQ,cAAemoD,GAGtC3yD,EAAA,sGCh8BAo6D,EAAAr8D,EAAA,KAmCMI,EAAU,SAAS2D,EAAOE,EAAIgtB,EAAYoP,EAAUE,EACxDygB,GAQA18C,KAAKwwD,MAAQ/wD,EAMbO,KAAKytC,GAAK9tC,EAMVK,KAAK+sB,WAAaJ,EAMlB3sB,KAAK6zC,SAAW9X,EAMhB/7B,KAAKu8B,WAAaN,EAMlBj8B,KAAK68C,gBAAkBH,EAWvB18C,KAAK0uD,UAML1uD,KAAK2jC,iBAML3jC,KAAK6tC,KAAO,KASZ7tC,KAAKg4D,sBAAwB,KAO7Bh4D,KAAK88B,YAAc,kKAcrBhhC,EAAQnB,UAAUu8C,4BAA8B,WAC9C,IAAMpyC,EAAM9E,KAAK6tC,KACjBlO,EAAA,EAAYl8B,OAAOqB,GAEnB,IAAIpC,SACJ,IAAK,IAAM8qB,KAAOxtB,KAAK0uD,QACrBhsD,EAAO1C,KAAK0uD,QAAQlhC,IACXjlB,SACPo3B,EAAA,EAAYl8B,OAAOf,EAAKs/B,aACxBl9B,EAAI4uB,kBAAkBhxB,EAAKs/B,aAC3Bl9B,EAAI6uB,eAAejxB,EAAKs/B,eAW9BlmC,EAAQnB,UAAUyqB,OAAS,SAAStgB,GAAK,IAAAvC,EAAAvC,KAEjCg6C,EAAOh6C,KAAK2jC,cAEd3jC,KAAK6tC,OACP7tC,KAAKi4D,uBACLj4D,KAAKk4D,yBACLle,EAAK92C,QAAQi1D,EAAA,GACbne,EAAKz/C,OAAS,GAGhByF,KAAK6tC,KAAO/oC,EAERA,IACF9E,KAAKi4D,qBAAuBj4D,KAAK+sB,WAAWqrC,iBAAiB,WAC3D,GAAI71D,EAAKs6C,gBAAgBpgB,SACvB,OAAOl6B,EAAKs6C,gBAAgBpgB,SAASl7B,UAEtC,SAAC3E,GAGF2F,EAAKsxC,SAAS,WACRj3C,IACF2F,EAAK21D,yBACL31D,EAAKs6C,gBAAgBpgB,SAAS5M,mBAAmBttB,EAAK81D,kBAAkBh7D,KAAvBkF,MAElD,KAGLy3C,EAAKv/C,KACH09D,EAAA,EAAgBn4D,KAAKu8B,WAAY,SAAUv8B,KAAKg9B,oBAAqBh9B,MACrEm4D,EAAA,EAAgBrzD,EAAK,UAAW9E,KAAKs4D,kBAAmBt4D,SAW9DlE,EAAQnB,UAAUqiC,oBAAsB,WAAW,IAAA92B,EAAAlG,KACjDA,KAAK88B,YAAc,KACnB98B,KAAKu8B,WAAWx2B,sBAAsBlC,KAAK,SAACR,GAC1C6C,EAAK42B,YAAcz5B,KAavBvH,EAAQnB,UAAU09D,kBAAoB,SAASxqC,GAG7C,IAAIzrB,EAA6DyrB,EAASzrB,KAC1E,IAAIA,EAAKb,SAAT,CAMAa,EAA0CyrB,EAASzrB,KACnD,IAAMmE,EAAiBi4B,EAAA,EAAel4B,kBAAkBlE,GACxD,GAAImE,EAAgB,CAClB,IAAMgyD,EAAYv4D,KAAKw4D,cAAc3qC,GACrC,GAAI0qC,EAAW,CACb,IAAM/qC,EAAMuY,EAAA,EAAclY,GAEpB4qC,EAAyBz4D,KAAK+sB,WAAWE,OAC7C,kBAAMY,EAASS,YACftuB,KAAK04D,2BAA2Br7D,KAAK2C,KAAM6tB,IAK7C7tB,KAAK0uD,OAAOlhC,IACVjlB,QAAQ,EACRmI,UAAW,yCACXmjD,cAAe,UACf52C,SAAU,IAAI07C,EAAA,EACd1sD,aAAc,OACd+1B,YAAa,KACboxB,YAAa,GACbwF,gBAAiB,KACjBryD,eAAgBA,EAChBsnB,SAAUA,EACV0qC,UAAWA,EACXE,uBAAwBA,GAI1Bz4D,KAAK04D,2BAA2B7qC,EAAUA,EAASS,gBAYzDxyB,EAAQnB,UAAUu9D,uBAAyB,WACzC,IAAK,IAAM1qC,KAAOxtB,KAAK0uD,OAAQ,CAC7B,IAAMhsD,EAAO1C,KAAK0uD,QAAQlhC,GACtB9qB,IACFA,EAAK+1D,yBACLz4D,KAAK64D,gBAAgBn2D,UACd1C,KAAK0uD,QAAQlhC,MA0B1B1xB,EAAQnB,UAAU69D,cAAgB,SAAS3qC,GAGzC,GAAyB,OAArB7tB,KAAK88B,YACP,OAAO,KAGT,IAAMx5B,EAA8CuqB,EAASzrB,KAG7D,GAAIkB,EAAS5F,OAAS8gC,EAAA,EAAe52B,SAASI,IAC5C,OAAO,KAOT,IAJA,IAAM7D,EAAoDb,EAGpDuvD,KACGx4D,EAAI,EAAG+G,EAAK+C,EAAY20D,YAAYv+D,OAAQF,EAAI+G,EAAI/G,IACvD8J,EAAY20D,YAAYz+D,GAAGkV,WAC7BsjD,EAAap4D,KAAK0J,EAAY20D,YAAYz+D,GAAG+B,MAGjD,IAAKy2D,EAAat4D,OAChB,OAAO,KAIT,IAAIw+D,SACgDlrC,EAASR,OAAOjrB,KACvDs9B,MACXq5B,EAAgB50D,EAAYC,UAI5B20D,EAFsBj6B,EAAA,EAAwBjQ,mBAAmBhB,GACEzrB,KACzCgC,UAE5B,IAAK20D,EACH,OAAO,KAIT,IAAM30D,EAAYpE,KAAK88B,YAAYi8B,GACnC,IAAK30D,EAAU40D,WACb,OAAO,KAKT,IAAMC,EAAS70D,EAAU60D,OAGzB,OAFAt5B,EAAA,EAAYl8B,OAAOw1D,EAAQ,8BAGzBpG,aAAcA,EAAatrD,KAAK,KAChC7D,IAAKu1D,IAUTn9D,EAAQnB,UAAU+9D,2BAA6B,SAAS7qC,EAAUjN,GAEhE,IAAM4M,EAAMuY,EAAA,EAAclY,GACpBnrB,EAAO1C,KAAK0uD,OAAOlhC,GAIV,OAAX5M,EACF5gB,KAAKk5D,cAAcx2D,GAEnB1C,KAAK64D,gBAAgBn2D,IAYzB5G,EAAQnB,UAAUu+D,cAAgB,SAASx2D,GAGzC,IAAIA,EAAK6F,OAAT,CAIA,IAAMzD,EAAM9E,KAAK6tC,KACjBlO,EAAA,EAAYl8B,OAAOqB,GAEnB,IAAMk9B,EAAc,IAAI+1B,EAAA,GACtBoB,KAAMz2D,EAAK6D,eAAe4yD,KAC1Bl8C,SAAUva,EAAKua,SACfm8C,eAAgB12D,EAAK6D,eAAe0zB,UACpCo/B,OAAQ32D,EAAK6D,eAAe8yD,SAG9Bv0D,EAAI6uB,eAAeqO,GAEnBt/B,EAAKs/B,YAAcA,EACnBt/B,EAAK6F,QAAS,EAGdvI,KAAKs5D,kBAAkB52D,KAWzB5G,EAAQnB,UAAUk+D,gBAAkB,SAASn2D,GAG3C,GAAKA,EAAK6F,OAAV,CAIA,IAAMzD,EAAM9E,KAAK6tC,KACjBlO,EAAA,EAAYl8B,OAAOqB,GAEnB,IAAMk9B,EAAct/B,EAAKs/B,YACzBl9B,EAAI4uB,kBAAkBsO,GAEtBt/B,EAAKs/B,YAAc,KACnBt/B,EAAKua,SAAS4H,QAGVniB,EAAKk2D,kBACPl2D,EAAKk2D,gBAAgB10D,UACrBxB,EAAKk2D,gBAAkB,MAGzBl2D,EAAK6F,QAAS,IAOhBzM,EAAQnB,UAAU4+D,cAAgB,WAChCv5D,KAAKg4D,sBAAwB,KAC7B,IAAIt1D,SACJ,IAAK,IAAM8qB,KAAOxtB,KAAK0uD,QACrBhsD,EAAO1C,KAAK0uD,QAAQlhC,IACXjlB,QACPvI,KAAKs5D,kBAAkB52D,IAc7B5G,EAAQnB,UAAU2+D,kBAAoB,SAAS52D,GAGzCA,EAAKk2D,iBACPl2D,EAAKk2D,gBAAgB10D,UAGvB,IAAMY,EAAM9E,KAAK6tC,KACjBlO,EAAA,EAAYl8B,OAAOqB,GAEnB,IAAMoa,EAAOpa,EAAIqa,UACXpG,EAAOjU,EAAIka,UACjB2gB,EAAA,EAAYl8B,OAAOsV,GAEnB,IAAMqG,EAASF,EAAKG,gBAAgBtG,GAC9Bm8C,EAAWh2C,EAAKmxB,gBAAgBgjB,UAChCR,EAAenwD,EAAK61D,UAAU1F,aAAax8C,MAAM,KAEjDq+C,GACJ3rB,QAASmsB,EACTxkD,UAAWhO,EAAKgO,UAChBmjD,cAAenxD,EAAKmxD,cACpBhB,aAAcA,EACdiB,aAAc,OACdR,KAAMl0C,EACNnT,aAAcvJ,EAAKuJ,aACnBmnD,YAAa1wD,EAAK0wD,aAGdjjD,EAAY,IAAIqpD,EAAA,EAChBjG,EAAgB,IAAI9pB,cACpBkrB,EAAoBxkD,EAAUikD,gBAAgBM,GAC9CE,EAAiBrB,EAAc7pB,kBAAkBirB,GACjDjxD,EAAMhB,EAAK61D,UAAU70D,IAE3BhB,EAAKk2D,gBAAkB54D,KAAKytC,GAAG7sC,QAE/BZ,KAAKwwD,MAAM7N,KAAKj/C,EAAKkxD,GAAiBvxB,QAAS3gC,EAAKk2D,gBAAgB93D,UACjE+C,KAAK,SAACC,GAELpB,EAAKk2D,gBAAkB,KAGvBl2D,EAAKua,SAAS4H,QAGd,IAAM0rB,GAAe,IAAIipB,EAAA,GAAcjpB,aAAazsC,EAAS/J,MACzDw2C,GACF7tC,EAAKua,SAASw8C,OAAOlpB,MAY7Bz0C,EAAQnB,UAAU29D,kBAAoB,WAChCt4D,KAAKg4D,uBACPh4D,KAAK6zC,SAASxV,OAAOr+B,KAAKg4D,uBAE5Bh4D,KAAKg4D,sBAAwBh4D,KAAK6zC,SAChC7zC,KAAKu5D,cAAcl8D,KAAK2C,MACxB,OA0CJlE,EAAQC,OAASkM,QAAQlM,OAAO,eAC9BuhD,EAAA,EAAwBvhD,OAAOK,KAC/BoiC,EAAA,EAAeziC,OAAOK,KACtB0iC,EAAA,EAAwB/iC,OAAOK,QAElB+L,QAAQ,cAAerM,GAGtC6B,EAAA,2HC/jBA+7D,EAAAh+D,EAAA,IA6BMI,EAAU,SAASsM,GAMvBpI,KAAK2jC,iBAML3jC,KAAK25D,wBAML35D,KAAK45D,qBAAuB,KAM5B55D,KAAK65D,iBAAmC35D,IAArBkI,EAAQ6U,SAAyB7U,EAAQ6U,SAAW,KAMvEjd,KAAK85D,cAAgB,IAAIJ,EAAA,GACvBx1C,iBAAiB,IAOnBlkB,KAAKuxB,aAAe,IAAIwoC,EAAA,GACtB11C,OAAQrkB,KAAK85D,cACbziD,MAAOjP,EAAQiP,MACfkN,sBAAsB,EACtBC,wBAAwB,IAO1BxkB,KAAKg6D,mBAELC,EAAA,EAAuBp/D,KACrBmF,KAAuDoI,IAG3D8xD,EAAA,EAAgBp+D,EAASm+D,EAAA,GAQzBn+D,EAAQnB,UAAUgmB,UAAY,SAASpY,GAEjCvI,KAAK45D,uBACPO,EAAA,EAAuBn6D,KAAK45D,sBAC5B55D,KAAK45D,qBAAuB,MAG9BK,EAAA,EAAuBt/D,UAAUgmB,UAAU9lB,KAAKmF,KAAMuI,GAElDA,IACFvI,KAAK45D,qBAAuBO,EAAA,EAC1BnpC,SACA,QACAhxB,KAAKo6D,aACLp6D,OAIJA,KAAKq6D,aAWPv+D,EAAQnB,UAAUyqB,OAAS,SAAStgB,GAEf9E,KAAKyzB,UAEtBzzB,KAAKuxB,aAAanM,OAAO,MAG3B60C,EAAA,EAAuBt/D,UAAUyqB,OAAOvqB,KAAKmF,KAAM8E,GAE/CA,GACF9E,KAAKuxB,aAAanM,OAAOtgB,GAG3B9E,KAAKq6D,aAOPv+D,EAAQnB,UAAU0/D,UAAY,WAAW,IAAA93D,EAAAvC,KACjC8E,EAAM9E,KAAKyzB,SACXlrB,EAASvI,KAAK0gB,YACdzD,EAAWjd,KAAK65D,YAChB7f,EAAOh6C,KAAK2jC,cAElB,GAAI7+B,GAAOyD,GAAU0U,EACnBA,EAAS/Z,QAAQ,SAAA2T,GAAA,OAAWtU,EAAK+3D,YAAYzjD,KAC7CmjC,EAAKv/C,KACH0/D,EAAA,EAAgBl9C,EAAU,MAAOjd,KAAKu6D,mBAAoBv6D,MAC1Dm6D,EAAA,EAAgBl9C,EAAU,SAAUjd,KAAKw6D,sBAAuBx6D,WAE7D,CAEL,GAAI8E,EACWA,EAAI21D,mBACZpjD,MAAMqjD,OAAS,UAGtB1gB,EAAK92C,QAAQi3D,EAAA,GACbngB,EAAKz/C,OAAS,EACd0iB,EAAS/Z,QAAQ,SAAA2T,GAAA,OAAWtU,EAAKo4D,eAAe9jD,OASpD/a,EAAQnB,UAAU4/D,mBAAqB,SAASh0C,GAC9C,IAAM1P,EAAU0P,EAAI2F,QACpB1oB,EAAA,EAAYgjB,iBAAiB3P,EAAS+jD,EAAA,EACpC,mCACF56D,KAAKs6D,YAAYzjD,IAQnB/a,EAAQnB,UAAU6/D,sBAAwB,SAASj0C,GACjD,IAAM1P,EAAqC0P,EAAI2F,QAC/ClsB,KAAK26D,eAAe9jD,IAQtB/a,EAAQnB,UAAU2/D,YAAc,SAASzjD,GACvC,IAAM2W,EAAM0sC,EAAA,EAAcrjD,GACpBwD,EAAWxD,EAAQuE,cACzB5X,EAAA,EAAYgjB,iBAAiBnM,EAAUwgD,EAAA,GAEvC76D,KAAK25D,qBAAqBnsC,GAAO2sC,EAAA,EAC/B9/C,EACA,SACAra,KAAKsmB,sBAAsBjpB,KAAK2C,KAAM6W,GACtC7W,MAGF,IAAM+yB,EAAQ/yB,KAAK86D,wBAAwBzgD,GACrC0gD,EAAgB,IAAIH,EAAA,EAAU7nC,GACpC/yB,KAAKg6D,gBAAgBxsC,GAAOutC,EAC5B/6D,KAAK85D,cAAcr1C,WAAWs2C,IAQhCj/D,EAAQnB,UAAUggE,eAAiB,SAAS9jD,GAC1C,IAAM2W,EAAM0sC,EAAA,EAAcrjD,GACtB7W,KAAK25D,qBAAqBnsC,KAC5B2sC,EAAA,EAAuBn6D,KAAK25D,qBAAqBnsC,WAC1CxtB,KAAK25D,qBAAqBnsC,GAEjCxtB,KAAK85D,cAAcl1C,cAAc5kB,KAAKg6D,gBAAgBxsC,WAC/CxtB,KAAKg6D,gBAAgBxsC,KAUhC1xB,EAAQnB,UAAU2rB,sBAAwB,SAASzP,EACjD0P,GACA,IAAMlM,EAAWkM,EAAIE,OACrBjjB,EAAA,EAAYgjB,iBAAiBnM,EAAUwgD,EAAA,GAEvC,IAAM9nC,EAAQ/yB,KAAK86D,wBAAwBzgD,GACrCmT,EAAM0sC,EAAA,EAAcrjD,GAC1B7W,KAAKg6D,gBAAgBxsC,GAAK5G,YAAYmM,IASxCj3B,EAAQnB,UAAUmgE,wBAA0B,SAC1CzgD,GAEA,IAAI0F,SACAgT,SAEJ,GAAI1Y,aAAoB2gD,EAAA,EACtBjoC,EAAQ1Y,EAASsF,wBACZ,GAAItF,aAAoB4gD,EAAA,EAC7Bl7C,EAAS1F,EAASqF,gBAAgB,QAC7B,CACL,IAAMN,EAAS/E,EAASwF,YACxBE,EAASm7C,EAAA,EAAmB97C,GAS9B,OANK2T,GAAShT,IACZgT,EAAQ,IAAIooC,EAAA,EAAYp7C,IAG1Bvc,EAAA,EAAYC,OAAOsvB,EAAO,2BAEnBA,GASTj3B,EAAQnB,UAAUy/D,aAAe,SAAS7zC,GAEpB,KAAhBA,EAAI60C,SACNp7D,KAAK2gB,WAAU,IAKnBhjB,EAAA,2IC/RA09D,EAAA3/D,EAAA,IA6BMI,EAAU,SAASsM,GAEvB5E,EAAA,EAAYC,OAAO2E,EAAQ6U,UAM3Bjd,KAAK2jC,iBAML3jC,KAAKs7D,WAAY,EAMjBt7D,KAAK45D,qBAAuB,KAQ5B55D,KAAKu7D,kBAAmB,EAMxBv7D,KAAKw7D,qBAA6Ct7D,IAA3BkI,EAAQgxD,eAC7BhxD,EAAQgxD,eAAiB,GAM3Bp5D,KAAKorD,UAAYhjD,EAAQ6U,SAOzBjd,KAAK0lB,SAAW,KAMhB1lB,KAAKy7D,YAAc,KAMnBz7D,KAAK07D,kBAAoB,KAOzB17D,KAAK27D,SAAW,IAAIC,EAAA,GAClBv3C,OAAQ,IAAIg3C,EAAA,GACVn3C,iBAAiB,EACjBgnB,QAAS9iC,EAAQ8iC,QAEnB7zB,MAAOjP,EAAQiP,OAASwkD,EAAA,EAAsBC,gCAC9Cv3C,sBAAsB,EACtBC,wBAAwB,IAO1BxkB,KAAKg6D,mBAEL+B,EAAA,EAAqBlhE,KAAKmF,MACxB6lD,gBAAiB7lD,KAAKg8D,YACtBC,gBAAiBj8D,KAAKk8D,YACtBnW,cAAe/lD,KAAKm8D,aAKxB1Q,EAAA,EAAgB3vD,EAASigE,EAAA,GAQzBjgE,EAAQnB,UAAUgmB,UAAY,SAASpY,GAAQ,IAAAhG,EAAAvC,KAEzCA,KAAK45D,uBACPwC,EAAA,EAAuBp8D,KAAK45D,sBAC5B55D,KAAK45D,qBAAuB,MAG9BmC,EAAA,EAAqBphE,UAAUgmB,UAAU9lB,KAAKmF,KAAMuI,GAEhDA,GACFvI,KAAK45D,qBAAuBwC,EAAA,EAC1BprC,SACA,QACAhxB,KAAKo6D,aACLp6D,MAEFA,KAAKorD,UAAUloD,QAAQ,SAAA2T,GAAA,OAAWtU,EAAK+3D,YAAYzjD,KACnD7W,KAAK2jC,cAAclpC,KACjB2hE,EAAA,EAAgBp8D,KAAKorD,UAAW,MAAOprD,KAAKs3C,kBAAmBt3C,MAC/Do8D,EAAA,EAAgBp8D,KAAKorD,UAAW,SAAUprD,KAAKurD,qBAAsBvrD,SAIvEA,KAAK2jC,cAAczgC,QAAQk5D,EAAA,GAC3Bp8D,KAAK2jC,cAAcppC,OAAS,EAC5ByF,KAAKorD,UAAUloD,QAAQ,SAAA2T,GAAA,OAAWtU,EAAKo4D,eAAe9jD,OAS1D/a,EAAQnB,UAAU2/D,YAAc,SAASzjD,GACvC,IAAMwD,EAAWxD,EAAQuE,cACzB5X,EAAA,EAAYgjB,iBAAiBnM,EAAUgiD,EAAA,GAEvCxlD,EAAQjU,IAAI,QAAS,GAGrB,IAAM4qB,EAAMi+B,EAAA,EAAc50C,GACpBkc,EAAQ,IAAIupC,EAAA,EAAYt8D,KAAKu8D,qBAAqBliD,IAClD0gD,EAAgB,IAAIyB,EAAA,EAAUzpC,GACpC/yB,KAAKg6D,gBAAgBxsC,GAAOutC,EAC5B/6D,KAAK27D,SAAS9vC,YAAYpH,WAAWs2C,IASvCj/D,EAAQnB,UAAU8hE,oBAAsB,SAASl2C,GAC/C,IAAKvmB,KAAKs7D,UAAW,CACnBt7D,KAAKs7D,WAAY,EAEjB,IAAM74C,EAAQ,IAAIi6C,EAAA,EAAgB,eAAgBz/C,SAAUjd,KAAKorD,YACjEprD,KAAK0H,cAAc+a,KASvB3mB,EAAQnB,UAAUggE,eAAiB,SAAS9jD,GAI1C,GAHA7W,KAAK0lB,SAAW,KAGZ7O,EAAS,CACX,IAAM2W,EAAMi+B,EAAA,EAAc50C,GAEtB7W,KAAKg6D,gBAAgBxsC,KACvBxtB,KAAK27D,SAAS9vC,YAAYjH,cAAc5kB,KAAKg6D,gBAAgBxsC,WACtDxtB,KAAKg6D,gBAAgBxsC,MASlC1xB,EAAQnB,UAAUyqB,OAAS,SAAStgB,GAClC9E,KAAK27D,SAASv2C,OAAOtgB,GACrBi3D,EAAA,EAAqBphE,UAAUyqB,OAAOvqB,KAAKmF,KAAM8E,IAQnDhJ,EAAQnB,UAAU28C,kBAAoB,SAAS/wB,GAC7C,IAAM1P,EAAU0P,EAAI2F,QACpB1oB,EAAA,EAAYgjB,iBAAiB3P,EAAS2lD,EAAA,EACpC,mCACFx8D,KAAKs6D,YAAYzjD,IAQnB/a,EAAQnB,UAAU4wD,qBAAuB,SAAShlC,GAChD,IAAM1P,EAAqC0P,EAAI2F,QAC/ClsB,KAAK26D,eAAe9jD,IAStB/a,EAAQnB,UAAUqhE,YAAc,SAASz1C,GACvC,IAEI1P,EAFQ0P,EAAIzhB,IAEEi2C,sBAAsBx0B,EAAIu0B,MAC1C,SAACjkC,EAASlU,GAAV,OAAoBkU,QAAS3W,GAE/B,GAAI2W,EAAS,CACX,IAAI2T,GAAQ,EACZxqB,KAAKorD,UAAUloD,QAAQ,SAACy5D,GAClBlR,EAAA,EAAckR,IAAMlR,EAAA,EAAc50C,KACpC2T,GAAQ,KAGPA,IACH3T,EAAU,MAId,GAAIA,EAAS,CACX7W,KAAKy7D,YAAcl1C,EAAI+M,WACvBtzB,KAAK0lB,SAAW7O,EAChB,IAAMwD,EAAYra,KAAK0lB,SAAStK,cAKhC,YAJiBlb,IAAbma,IACFra,KAAK07D,kBAAoB17D,KAAKu8D,qBAAqBliD,KAG9C,EAGT,OAAO,GASTve,EAAQnB,UAAU4hE,qBAAuB,SACvCliD,GAEA,IAAI0F,SAEJ,GAAI1F,aAAoBuiD,EAAA,EACtB78C,EAAS1F,EAASwiD,uBACb,GAAIxiD,aAAoByiD,EAAA,EAC7B/8C,EAAS1F,EAAS0iD,2BACb,CACL,IAAM39C,EAAS/E,EAASwF,YACxBE,EAASi9C,EAAA,EAAmB59C,GAG9B,OAAOW,GAQTjkB,EAAQnB,UAAUuhE,YAAc,SAAS31C,GACvCvmB,KAAKy8D,oBAAoBl2C,GAEzB,IAAMlM,EACDra,KAAK0lB,SAAStK,cAEb6hD,EAAOj9D,KAAKy7D,YAAY,GACxByB,EAAOl9D,KAAKy7D,YAAY,GAExB0B,EAAUn9D,KAAK07D,kBAAkB,GACjC0B,EAAUp9D,KAAK07D,kBAAkB,GAEjC2B,EAAMJ,EAAOE,EACbG,EAAMJ,EAAOE,EACbG,EAAMh3C,EAAI+M,WAAW,GAAK6pC,EAC1BK,EAAMj3C,EAAI+M,WAAW,GAAK8pC,EAEhCp9D,KAAKy7D,YAAY,GAAKl1C,EAAI+M,WAAW,GACrCtzB,KAAKy7D,YAAY,GAAKl1C,EAAI+M,WAAW,GAErC,IAAMmqC,EAAK/iD,KAAKgjD,MAAMF,EAAKD,GAErBjjD,EADKI,KAAKgjD,MAAMJ,EAAKD,GACRI,EAEnBpjD,EAASsjD,QAAQrjD,GAAQ6iD,EAASC,KASpCthE,EAAQnB,UAAUwhE,UAAY,SAAS51C,GACrC,GAAIvmB,KAAKs7D,UAAW,CAElB,IAAM74C,EAAQ,IAAIi6C,EAAA,EAAgB,aAAc7lD,QAAS7W,KAAK0lB,WAC9D1lB,KAAK0H,cAAc+a,GACnBziB,KAAKs7D,WAAY,EACjBt7D,KAAK2gB,WAAU,GAEjB,OAAO,GAST7kB,EAAQnB,UAAUy/D,aAAe,SAAS7zC,GAEpB,KAAhBA,EAAI60C,SACNp7D,KAAK2gB,WAAU,IAKnBhjB,EAAA,kCC7WA,IAAAigE,EAAAliE,EAAA,IAQMI,EAAUmM,QAAQlM,OAAO,mBAE/BD,EAAQc,MAAM,eAAgB,IAAIghE,EAAA,GAGlCjgE,EAAA,yFCbAkgE,EAAAniE,EAAA,KAqBMI,EAAU,SAASgiE,EAAaC,GAAoB,IAAAx7D,EAAAvC,KAElDoI,OAAiClI,IAAvB69D,EAAmCA,KAEnD31D,EAAQqsB,YAAcopC,EAAA,EAAqBG,SAM3Ch+D,KAAK2jC,iBAML3jC,KAAKi+D,qBAAuB,KAE5B,IAAMC,EAAYz9B,EAAE,UAClB09B,MAAS,wBAWX,GAJAn+D,KAAKo+D,gBAAuCl+D,IAA1B49D,EAAYO,WAC5BP,EAAYO,UAGVP,EAAY/vB,MAAO,CACrB,IAAMuwB,EAAW79B,EAAE,SACjB09B,MAAS,kBACRI,SAASL,GAEZz9B,EAAE,UACA5nB,KAAMilD,EAAY/vB,QACjBwwB,SAASD,GAId,IAAME,EAAY/9B,EAAE,SAClB09B,MAAS,eACRI,SAASL,GAMZl+D,KAAKy+D,YAELX,EAAY1oB,QAAQlyC,QAAQ,SAACq5C,GAC3Bh6C,EAAKk8D,SAAShkE,KACZgmC,EAAE,YACA09B,MAAS,kBACTO,YAAaniB,EAAOngD,KACpByc,MACE,SACmB3Y,IAAlBq8C,EAAO72C,MAAuB62C,EAAO72C,MAAQ62C,EAAOngD,MACrDmL,KAAK,MAENg3D,SAASC,GACTG,QAAQl+B,EAAE,UACT09B,WAAwBj+D,IAAfq8C,EAAOlH,IAAoBkH,EAAOlH,IAAM,SAKzDjtC,EAAQ8jB,QAAUgyC,EAAU,GAE5BU,EAAA,EAAU/jE,KAAKmF,KAAMoI,IAIvBnH,EAAA,EAAgBnF,EAAS8iE,EAAA,GAQzB9iE,EAAQnB,UAAUyqB,OAAS,SAAStgB,GAAK,IAAAoB,EAAAlG,KAEpBA,KAAKyzB,WAEtBzzB,KAAK2jC,cAAczgC,QAAQ+iB,EAAA,GAC3BjmB,KAAK2jC,cAAcppC,OAAS,GAG9BqkE,EAAA,EAAUjkE,UAAUyqB,OAAOvqB,KAAKmF,KAAM8E,GAElCA,IACF9E,KAAKy+D,SAASv7D,QAAQ,SAACq5C,GACrB,IAAMxiD,EAAOwiD,EAAOxiD,OACpBmM,EAAKy9B,cAAclpC,KACjBwrB,EAAA,EACEs2B,EAAO,GACP,QACAr2C,EAAK24D,mBAAmBxhE,KAAxB6I,EAAmCnM,EAAKqC,UAM9C4D,KAAK2jC,cAAclpC,KACjBwrB,EAAA,EACEnhB,EACA,cACA9E,KAAK8+D,sBACL9+D,SAcRlE,EAAQnB,UAAU+gD,KAAO,SAASpoB,GAChCtzB,KAAKqzB,YAAYC,GACbtzB,KAAKo+D,aACPp+D,KAAKi+D,qBAAuBh4C,EAAA,EAC1B+K,SAAS+tC,gBACT,YACA/+D,KAAKg/D,gBACLh/D,QAUNlE,EAAQnB,UAAUm+C,MAAQ,WACxB94C,KAAKqzB,iBAAYnzB,GAEiB,OAA9BF,KAAKi+D,sBACPh4C,EAAA,EAAuBjmB,KAAKi+D,uBAUhCniE,EAAQnB,UAAUkkE,mBAAqB,SAAStiB,EAAQh2B,GAEtDvmB,KAAK0H,cAAc,IAAIysB,EAAA,EAAgB,eACrCooB,OAAQA,KAGNv8C,KAAKo+D,YACPp+D,KAAK84C,QAGPvyB,EAAIq1B,mBASN9/C,EAAQnB,UAAUqkE,gBAAkB,SAASz4C,GAC3C,IAAM2F,EAAUlsB,KAAKi/D,aACjB/yC,GAAqD,IAA1CuU,EAAEla,EAAIE,QAAQy4C,QAAQhzC,GAAS3xB,QAC5CyF,KAAK84C,SAcTh9C,EAAQnB,UAAUmkE,sBAAwB,SAASv4C,GACjD,IAAME,EAASF,EAAI44C,cAAc14C,OACjCjjB,EAAA,EAAYgjB,iBAAiBC,EAAQ24C,SAErC,IAAMlzC,EAAUlsB,KAAKi/D,aACrBz7D,EAAA,EAAYgjB,iBAAiB0F,EAASkzC,SAElClzC,EAAQmzC,SAAS54C,KACnBF,EAAI+M,YAAchY,IAAUA,KAC5BiL,EAAIu0B,OAASx/B,IAAUA,OAK3B3d,EAAA,gEClOA2hE,EAAA5jE,EAAA,IAiCMI,EAAU,SAASyjE,EAAUC,GAKjCx/D,KAAKy/D,SAAWD,EAMhBx/D,KAAK0/D,QAAUH,EAASI,SAASx9C,UAAU,EAAGo9C,EAASI,SAASplE,OAAS,GAMzEyF,KAAK4/D,QAAUL,EAASM,SAMxB7/D,KAAK8/D,MAAQP,EAASQ,KAAOvoC,SAAS+nC,EAASQ,KAAM,SAAM7/D,EAM3DF,KAAKggE,MAAQT,EAASU,SAMtBjgE,KAAKkgE,WAAaZ,EAAA,EAAUa,kBAAkBZ,EAASa,QAMvDpgE,KAAKqgE,UAAYf,EAAA,EAAUa,kBAAkBZ,EAAShN,OAQxDz2D,EAAQwkE,aAAe,SAASd,EAAShxC,GACvC,IACEgxC,EAAQc,aAAa,KAAM,GAAI9xC,GAC/B,MAAOvqB,MAYXnI,EAAQnB,UAAU4lE,QAAU,WAC1B,OAAOvgE,KAAKggE,OASdlkE,EAAQnB,UAAU6lE,aAAe,WAC/B,IAAMC,KAEFzgE,KAAK0/D,SACPe,EAAIhmE,KAAKuF,KAAK0/D,QAAS,MAGrB1/D,KAAK4/D,SAA4B,SAAjB5/D,KAAK0/D,WACvBe,EAAIhmE,KAAK,MAETgmE,EAAIhmE,KAAKuF,KAAK4/D,cAEK1/D,IAAfF,KAAK8/D,OACPW,EAAIhmE,KAAK,IAAKgwC,OAAOzqC,KAAK8/D,SAI1B9/D,KAAKggE,QACHhgE,KAAK4/D,SAAoC,MAAzB5/D,KAAKggE,MAAMhoC,OAAO,IACpCyoC,EAAIhmE,KAAK,KAEXgmE,EAAIhmE,KAAKuF,KAAKggE,QAGhB,IAAMU,EAAmBpB,EAAA,EAAUqB,kBAAkB3gE,KAAKkgE,YACtDQ,EAAiBnmE,OAAS,GAC5BkmE,EAAIhmE,KAAK,IAAKimE,GAGhB,IAAME,EAAkBtB,EAAA,EAAUqB,kBAAkB3gE,KAAKqgE,WAIzD,OAHIO,EAAgBrmE,OAAS,GAC3BkmE,EAAIhmE,KAAK,IAAKmmE,GAETH,EAAIl5D,KAAK,KAUlBzL,EAAQnB,UAAU6M,SAAW,SAASsC,GACpC,OAAOA,KAAO9J,KAAKkgE,YAUrBpkE,EAAQnB,UAAUkmE,iBAAmB,SAAS/2D,GAC5C,OAAOA,KAAO9J,KAAKqgE,WAUrBvkE,EAAQnB,UAAUwmD,SAAW,SAASr3C,GACpC,OAAO9J,KAAKkgE,WAAWp2D,IAUzBhO,EAAQnB,UAAUmmE,iBAAmB,SAASh3D,GAC5C,OAAO9J,KAAKqgE,UAAUv2D,IAWxBhO,EAAQnB,UAAUomE,cAAgB,SAASj3D,GACzC,IAAMlN,EAAQoD,KAAKmhD,SAASr3C,GAC5B,QAAc5J,IAAVtD,EAAJ,CAGA4G,EAAA,EAAYqZ,aAAajgB,GACzB,IAAMokE,EAAaxpC,SAAS56B,EAAO,IACnC,OAAQqkE,MAAMD,QAAe9gE,EAAY8gE,IAY3CllE,EAAQnB,UAAUumE,gBAAkB,SAASp3D,GAC3C,IAAMlN,EAAQoD,KAAKmhD,SAASr3C,GAC5B,QAAc5J,IAAVtD,EAAJ,CAGA4G,EAAA,EAAYqZ,aAAajgB,GACzB,IAAMukE,EAAe3f,WAAW5kD,GAChC,OAAOqkE,MAAME,QAAgBjhE,EAAYihE,IAW3CrlE,EAAQnB,UAAUymE,sBAAwB,SAASt3D,GACjD,IAAMlN,EAAQoD,KAAK8gE,iBAAiBh3D,GACpC,QAAc5J,IAAVtD,EAAJ,CAGA4G,EAAA,EAAYqZ,aAAajgB,GACzB,IAAMokE,EAAaxpC,SAAS56B,EAAO,IACnC,OAAQqkE,MAAMD,QAAe9gE,EAAY8gE,IAS3CllE,EAAQnB,UAAUomD,aAAe,WAC/B,IAAM/G,KACN,IAAK,IAAMlwC,KAAO9J,KAAKkgE,WACrBlmB,EAAKv/C,KAAKqP,GAEZ,OAAOkwC,GASTl+C,EAAQnB,UAAU0mE,qBAAuB,WACvC,IAAMrnB,KACN,IAAK,IAAMlwC,KAAO9J,KAAKqgE,UACrBrmB,EAAKv/C,KAAKqP,GAEZ,OAAOkwC,GAWTl+C,EAAQnB,UAAU2mE,uBAAyB,SAAStqC,GAClD,IAAMgjB,KACN,IAAK,IAAMlwC,KAAO9J,KAAKkgE,WACM,GAAvBp2D,EAAI2X,QAAQuV,IACdgjB,EAAKv/C,KAAKqP,GAGd,OAAOkwC,GAWTl+C,EAAQnB,UAAU4mE,+BAAiC,SAASvqC,GAC1D,IAAMgjB,KACN,IAAK,IAAMlwC,KAAO9J,KAAKqgE,UACM,GAAvBv2D,EAAI2X,QAAQuV,IACdgjB,EAAKv/C,KAAKqP,GAGd,OAAOkwC,GASTl+C,EAAQnB,UAAUstB,aAAe,SAAShhB,GACxC,IAAK,IAAM6C,KAAO7C,EAChBjH,KAAKkgE,WAAWp2D,GAAO7C,EAAO6C,IAUlChO,EAAQnB,UAAU6mE,qBAAuB,SAASv6D,GAChD,IAAK,IAAM6C,KAAO7C,EAChBjH,KAAKqgE,UAAUv2D,GAAO7C,EAAO6C,IAUjChO,EAAQnB,UAAUyiC,YAAc,SAAStzB,UAChC9J,KAAKkgE,WAAWp2D,IASzBhO,EAAQnB,UAAU8mE,oBAAsB,SAAS33D,UACxC9J,KAAKqgE,UAAUv2D,IAQxBhO,EAAQnB,UAAU+mE,QAAU,WAC1B5lE,EAAQwkE,aAAatgE,KAAKy/D,SAAUz/D,KAAKwgE,iBAS3C1kE,EAAQnB,UAAUgnE,QAAU,SAASC,GACnC5hE,KAAKggE,MAAQ4B,IAYf9lE,EAAQ+lE,gBAAkB,SAASl1C,EAAYm1C,GAC7C,IAAMtC,EAAUsC,EAAQtC,QAClBr3D,EAAU,IAAIrM,EAAQgmE,EAAQvC,SAAUuC,EAAQtC,SAElDuC,EAAU55D,EAAQq4D,eActB,OAbA7zC,EAAWM,OAAO,WAChB,IAAM+0C,EAAS75D,EAAQq4D,eACnBuB,IAAYC,GACdr1C,EAAWs1C,WAAW,WACpBF,EAAUC,OACM9hE,IAAZs/D,QAAkDt/D,IAAzBs/D,EAAQc,cACnCxkE,EAAQwkE,aAAad,EAASwC,GAEhCr1C,EAAWuB,WAAW,0BAKrB/lB,sCAcTrM,EAAQomE,aAAe,SAASC,GAI9BA,EAAA,KAA4B,WA0D1B,OArDEC,OAJqD,WAKnD,MAAO,IAMT7P,KAXqD,SAWhD8P,GACH,YAAoBniE,IAAbmiE,EAAyBriE,KAAO,IAKzCsiE,KAjBqD,WAkBnD,MAAO,IAMTV,KAxBqD,SAwBhDS,GACH,YAAoBniE,IAAbmiE,EAAyBriE,KAAO,IAKzC+/D,KA9BqD,WA+BnD,OAAO,GAKTJ,SApCqD,WAqCnD,MAAO,IAET93C,QAvCqD,aA8CrDu4C,OA9CqD,SA8C9CmC,EAAYC,GACjB,YAAsBtiE,IAAfqiE,EAA2BviE,SAMpC0D,IArDqD,SAqDjD++D,GACF,MAAO,uCAaf3mE,EAAQC,OAASkM,QAAQlM,OAAO,oBACjB0nC,QAAQ,eAAgB3nC,EAAQ+lE,iBAG/ClkE,EAAA,8CCteA+kE,EAAAhnE,EAAA,KAUMI,EAAUmM,QAAQlM,OAAO,mBAS/BD,EAAQmnC,SAAW,WAoBjB,OAbA,SAAkBkN,EAASxyB,EAAUglD,GAMnC,IAAMC,OAA4B1iE,IAAjByiE,GAA+BE,EAAA,EAAUC,WACzC,2BAAfH,EAEII,EAAO,IAAIC,MAAM7yB,IAAWzyC,KAAMklE,IACxCloE,OAAAgoE,EAAA,OAAAhoE,CAAOqoE,EAAMplD,KAMjB7hB,EAAQ2nC,QAAQ,eAAgB3nC,EAAQmnC,UAGxCtlC,EAAA,mCC1CA,IAAM7B,KAMNA,EAAQC,OAASkM,QAAQlM,OAAO,iCAEhCD,EAAQC,OAAOa,MAAM,8BACnB4U,WAAY,OAId7T,EAAA,2DCNA,IAAM7B,EAAUmM,QAAQlM,OAAO,gBAqC/BD,EAAQ82C,YACNtb,gNAOAsoB,SACEqjB,QAAW,WAEbC,YAAY,EACZnzC,WAAY,sBACZozC,UACEC,UAAa,sBACbC,SAAY,uBAIhBvnE,EAAQwnE,UAAU,YAAaxnE,EAAQ82C,YAEvC92C,EAAQs3C,YAAR,WAME,SAAAmwB,EAAY72C,EAAQ2mB,gGAAUhrC,CAAArI,KAAAujE,GAK5BvjE,KAAKwjE,UAAYnwB,EAMjBrzC,KAAKyjE,QAAU/2C,EAMf1sB,KAAK0jE,OAML1jE,KAAKqjE,SAMLrjE,KAAKojE,UAMLpjE,KAAKijE,QAzCT,OAAAM,EAAAppC,SAAA,qBAAAopC,EAAA5oE,UA4CEm7C,QA5CF,WA4CY,IAAAvzC,EAAAvC,KACRA,KAAKqjE,UAA6B,IAAlBrjE,KAAKqjE,SAErBrjE,KAAK0jE,OAAS1jE,KAAKwjE,UAAUjiE,WAExBvB,KAAKqjE,WACRrjE,KAAK0jE,OAAOC,KAAK,iBAAiB,GAClC3jE,KAAK0jE,OAAOC,KAAK,gBAAiB,WAGpC3jE,KAAKojE,YAAcpjE,KAAKojE,UAExB,IAAMQ,EAAS5jE,KAAK0jE,OAAOnqB,KAAK,iBAChCqqB,EAAOC,YACH7jE,KAAKojE,WACPQ,EAAOR,YAGTpjE,KAAKijE,QAAQ5iB,QAAU,WACrB99C,EAAKmhE,OAAOI,MAAMvhE,EAAK0gE,QAAQ7iB,WAAa,OAAS,SAGvDpgD,KAAK0jE,OAAO9gC,GAAG,iCAAkC,SAACmhC,GAChD,IAAMrmE,EAAOqmE,EAAErmE,KACfiiC,EAAA,EAAYl8B,OAAe,SAAR/F,GAA2B,UAARA,GACtC6E,EAAK0gE,QAAQ9iB,cAAsB,SAARziD,MArEjC6lE,EAAA5oE,UAyEEqpE,WAzEF,WA2EIhkE,KAAK0jE,OAAOI,MAAM,QAClB9jE,KAAK0jE,OAAOI,MAAM,kBAElB,IAAMF,EAAS5jE,KAAK0jE,OAAOnqB,KAAK,iBAChCqqB,EAAOC,UAAU,WACb7jE,KAAKojE,WACPQ,EAAOR,UAAU,YAjFvBG,EAAA,GAsFAznE,EAAQi0B,WAAW,sBAAuBj0B,EAAQs3C,aAGlDz1C,EAAA,4DC7JA8tD,EAAA/vD,EAAA,GAuBMI,EAAU,SAASigC,GAEvBkoC,EAAA,EAAmBppE,KAAKmF,MAMxBA,KAAK6zC,SAAW9X,EAEhB,IAAMmoC,EAAYj8D,QAAQikB,QAAQ,yCAClCjkB,QAAQikB,QAAQ8E,SAASi5B,MAAMC,OAAOga,GAMtClkE,KAAKmkE,WAAaD,EAMlBlkE,KAAK0uD,yDAIPjD,EAAA,EAAgB3vD,EAASmoE,EAAA,GAQzBnoE,EAAQsoE,eAAiB,IAazBtoE,EAAQnB,UAAU2kC,OAAS,SAASviC,GAClCiD,KAAK4iB,KAAK7lB,IAQZjB,EAAQnB,UAAUkqB,MAAQ,WACxB,IAAK,IAAM2I,KAAOxtB,KAAK0uD,OACrB1uD,KAAKqkE,yBAAyBrkE,KAAK0uD,OAAOl3B,SAAShK,EAAK,OAQ5D1xB,EAAQnB,UAAUgoB,YAAc,SAAS5e,GAAS,IAAAxB,EAAAvC,KAC1CtC,EAAOqG,EAAQrG,KACrBinC,EAAA,EAAY9nB,aAAanf,EAAM,uBAE/B,IAAM4mE,GAAc,QAAS,QAC7B,OAAQ5mE,GACN,KAAKumE,EAAA,EAAmBp3D,KAAKiW,MAC3BwhD,EAAW7pE,KAAK,gBAChB,MACF,KAAKwpE,EAAA,EAAmBp3D,KAAKmW,YAC3BshD,EAAW7pE,KAAK,cAChB,MACF,KAAKwpE,EAAA,EAAmBp3D,KAAKqW,QAC3BohD,EAAW7pE,KAAK,iBAChB,MACF,KAAKwpE,EAAA,EAAmBp3D,KAAKuW,QAC3BkhD,EAAW7pE,KAAK,iBAMpB,IAAM8pE,EAAKt8D,QAAQikB,QAAR,eAA+Bo4C,EAAW/8D,KAAK,KAA/C,aAGPxD,EAAQ0iB,OACExe,QAAQikB,QAAQnoB,EAAQ0iB,QAExBzmB,KAAKmkE,YAGTja,OAAOqa,GACjBA,EAAGC,KAAKzgE,EAAQ0f,KAAKgmC,SAAS,MAE9B,IAAMgb,OAA0BvkE,IAAlB6D,EAAQ0gE,MAAsB1gE,EAAQ0gE,MAClD3oE,EAAQsoE,eAEJ1hE,GACJ6hE,MAKI/2C,EAAMi+B,EAAA,EAAc8Y,GAC1B7hE,EAAK5B,QAAUd,KAAK6zC,SAAS,WAC3B0wB,EAAG98D,MAAM,gBACFlF,EAAKmsD,OAAOlhC,IAClBi3C,GAEHzkE,KAAK0uD,OAAOlhC,GAAO9qB,GASrB5G,EAAQnB,UAAU0pE,yBAA2B,SAAS3hE,GACpD,IAAM6hE,EAAK7hE,EAAK6hE,GACVzjE,EAAU4B,EAAK5B,QACf0sB,EAAMi+B,EAAA,EAAc8Y,GAG1BA,EAAG98D,MAAM,SAITzH,KAAK6zC,SAASxV,OAAOv9B,UAGdd,KAAK0uD,OAAOlhC,KAgBrB1xB,EAAQC,OAASkM,QAAQlM,OAAO,wBAGjBoM,QAAQ,mBAAoBrM,GAG3C6B,EAAA,kPCxKM+mE,EAAW,SAASC,EAAMC,GAC9B,MAAyB,iBAAVD,GAAwC,iBAAVC,GAAsBD,EAAKE,gBAAkBD,EAAKC,eAE3FC,EAAQ,SAARA,EAAiBloE,EAAOrC,EAAQwqE,GACpC,IAAMC,EAAMD,GAAQ,IACd31C,EAAMxyB,EAAMolB,WAClB,OAAOoN,EAAI70B,OAASA,EAASuqE,EAAME,EAAM51C,EAAK70B,GAAU60B,GAsBpD61C,EAAW,SAAS71C,EAAK81C,GAC7B,IAAK,IAAI7qE,EAAI,EAAGA,EAAI6qE,EAAI3qE,OAAQF,IAC9B,GAAI6qE,EAAI7qE,GAAGwqE,gBAAkBz1C,EAAIy1C,cAC/B,OAAOxqE,EAGX,OAAQ,GAEJ8qE,GACJC,cACEC,MAAO,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YACzEC,WAAY,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACtDC,QACE,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OACxD,SAAU,YAAa,UAAW,WAAY,YAEhDC,aAAc,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3FC,UAAW,KAAM,MACjBC,QAAS,SAAShwC,GAChB,IAAM74B,EAAI64B,EAAS,GAAIiwC,GAAY9pE,EAAG,KAAM+pE,EAAG,KAAMC,EAAG,MACxD,OAAyC,IAAlCnrD,KAAKwb,MAAMR,EAAS,IAAM,KAAciwC,EAAS9oE,GAAY8oE,EAAS9oE,GAAhB,OAGjEipE,WAAY,iBACZC,WAAY,2CACZC,SAAU,qBACVC,QAAS,uIACTC,OAAQ,eAGJC,EAAgB,SAAS/9D,GAC7B,IACM2L,EApDQ,SAAVqyD,EAAmB3F,GACvB,IAAIpmE,SAAGquC,SAEP,IADA+3B,EAAMA,MACDpmE,EAAI,EAAGA,EAAI2X,UAAUzX,OAAQF,IAEhC,GADAquC,EAAM12B,UAAU3X,GAIhB,IAAK,IAAMyP,KAAO4+B,EACZA,EAAI9tC,eAAekP,KACG,WAApBu8D,EAAO39B,EAAI5+B,IACbs8D,EAAQ3F,EAAI32D,GAAM4+B,EAAI5+B,IAEtB22D,EAAI32D,GAAO4+B,EAAI5+B,IAKvB,OAAO22D,EAkCQ2F,CAAQjB,EAAiB/8D,GAD3BpI,KAERolE,aAAerxD,EAAOqxD,aAFdplE,KAGR8lE,WAAa/xD,EAAO+xD,WAHZ9lE,KAIR+lE,WAAahyD,EAAOgyD,WAJZ/lE,KAKRgmE,SAAWjyD,EAAOiyD,SALVhmE,KAMRimE,QAAUlyD,EAAOkyD,QANTjmE,KAORkmE,OAASnyD,EAAOmyD;;;;;;;;;;GAGvBC,EAAcxrE,WACZid,YAAauuD,EACbG,SAAU,SAASl3C,GACjB,IACI/0B,SAKJ,OAHU,KADVA,EAAI4qE,EAAS71C,EAFApvB,KAEUolE,aAAaI,aAAe,KAEjDnrE,EAAI4qE,EAAS71C,EAJFpvB,KAIYolE,aAAaG,QAAU,GAEzClrE,GAETg+C,UAAW,SAASkuB,EAAOC,GACzB,IAAmB/F,GAAOr/B,KAAM,KAAMqlC,KAAM,KAAMC,MAAO,KAAMC,IAAK,KAAMC,KAAM,EAAGC,IAAK,EAAGC,IAAK,GAAIC,EAAvF/mE,KAAwGolE,aACjH/qE,SAAG2sE,GAAY,EAAOC,GAAY,EAAOC,SAAWC,SACpDC,SAAQC,SAAYC,SAAa9X,SAAK+X,SAC1C,IAAKhB,EACH,OAAO,KAET,GAAIA,aAAiBllC,KACnB,OAAOklC,EAET,GAAgB,MAAZC,EAEF,OADAnsE,EAAIm9B,SAAS+uC,IACF,IAAIllC,KAAS,IAAJhnC,GAAYksE,EAElC,gBAAeA,EAAf,YAAAF,EAAeE,IACb,IAAK,SACH,OAAO,IAAIllC,KAAKklC,GAClB,IAAK,SACH,MACF,QACE,OAAO,KAEX,IAAMiB,EAAehB,EAAQvlB,MArBhBjhD,KAqB2B+lE,YACxC,IAAKyB,GAAwC,IAAxBA,EAAajtE,OAChC,MAAM,IAAIunB,MAAM,mCAElB,IAAM2lD,EAAalB,EAAM1+C,QAzBZ7nB,KAyByB8lE,WAAY,MAAMzvD,MAAM,MAC9D,IAAKhc,EAAI,EAAGA,EAAIotE,EAAWltE,OAAQF,IAGjC,OAFA6sE,EAAYO,EAAWptE,GACvB8sE,EAAY3vC,SAAS0vC,GACbM,EAAantE,IACnB,IAAK,IACL,IAAK,IACH,IAAI8sE,EAIF,OAAO,KAHP3X,EAAM0X,EAAU3sE,OAChBkmE,EAAIgG,KAAe,IAARjX,EAAYh4B,UAAU2vC,EAAY,GAAK,KAAO,MAAQD,GAAaC,EAIhFH,GAAY,EACZ,MACF,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACH,GAAI/F,MAAMkG,GAAY,CAEpB,MADAC,EA7CKpnE,KA6CSsmE,SAASY,IACV,GAGX,OAAO,KAFPzG,EAAIiG,MAAQU,MAIT,CACL,KAAID,GAAa,GAAKA,GAAa,IAGjC,OAAO,KAFP1G,EAAIiG,MAAQS,EAKhBH,GAAY,EACZ,MACF,IAAK,IACL,IAAK,IACH,KAAIG,GAAa,GAAKA,GAAa,IAGjC,OAAO,KAFP1G,EAAIkG,IAAMQ,EAIZH,GAAY,EACZ,MACF,IAAK,IACL,IAAK,IAIH,GADAO,EAAME,EAFNJ,EAAcG,EAAa/lD,QAAQ,MAAQ,EAAK+lD,EAAa/lD,QAAQ,KAClE+lD,EAAa/lD,QAAQ,MAAQ,EAAK+lD,EAAa/lD,QAAQ,MAAQ,GAE9D4lD,GAAc,EAChBC,EAAc5C,EAAS6C,EAAKR,EAAUtB,SAAS,IAAM,EAClDf,EAAS6C,EAAKR,EAAUtB,SAAS,IAAM,IAAM,EAC5C0B,GAAa,GAAKA,GAAa,IAAMG,GAAe,EACtD7G,EAAImG,KAAOO,EAAYG,EAAc,EAC5BH,GAAa,GAAKA,GAAa,KACxC1G,EAAImG,KAAOO,OAER,CACL,KAAIA,GAAa,GAAKA,GAAa,IAGjC,OAAO,KAFP1G,EAAImG,KAAOO,EAKfF,GAAY,EACZ,MACF,IAAK,IACL,IAAK,IACH,KAAIE,GAAa,GAAKA,GAAa,IAGjC,OAAO,KAFP1G,EAAImG,KAAOO,EAIbF,GAAY,EACZ,MACF,IAAK,IACH,KAAIE,GAAa,GAAKA,GAAa,IAGjC,OAAO,KAFP1G,EAAIoG,IAAMM,EAIZF,GAAY,EACZ,MACF,IAAK,IACH,KAAIE,GAAa,GAAKA,GAAa,IAGjC,OAAO,KAFP1G,EAAIqG,IAAMK,EAIZF,GAAY,EAIlB,IAAkB,IAAdD,GAAsBvG,EAAIgG,MAAQhG,EAAIiG,OAASjG,EAAIkG,IACrDlG,EAAIr/B,KAAO,IAAIC,KAAKo/B,EAAIgG,KAAMhG,EAAIiG,MAAQ,EAAGjG,EAAIkG,IAAKlG,EAAImG,KAAMnG,EAAIoG,IAAKpG,EAAIqG,IAAK,OAC7E,CACL,IAAkB,IAAdG,EACF,OAAO,KAETxG,EAAIr/B,KAAO,IAAIC,KAAK,EAAG,EAAG,EAAGo/B,EAAImG,KAAMnG,EAAIoG,IAAKpG,EAAIqG,IAAK,GAE3D,OAAOrG,EAAIr/B,MAEbsmC,UAAW,SAASC,EAAUnB,GAC5B,GAAwB,iBAAbmB,EACT,OAAOA,EAET,IAAmBC,EAASD,EAAS9/C,QAAxB7nB,KAAqC8lE,WAAY,MAAMzvD,MAAM,MAA8BmxD,EAAehB,EAAQvlB,MAAlHjhD,KAA6H+lE,YAAaQ,EAAQ,IAAIllC,KAC/JmuB,SAAKn1D,SAAGwC,SAAGgrE,SAAOC,SAAMC,SAE5B,IAH4F,WAG9ExzD,KAAKizD,EAAa,IAC9B,OAAOG,EAGT,IAAKttE,EAAI,EAAGA,EAAIutE,EAAOrtE,OAAQF,IAAK,CAClC,IAAI2tE,EAAS,EAGb,GAFAH,EAAQD,EAAOvtE,GACfytE,EAAOtwC,SAASqwC,EAAMI,OAAO,EAAG,IAC5BhH,MAAM6G,GACR,OAAO,KAET,OAAQztE,GACN,KAAK,EACqB,MAApBmtE,EAAa,IAAkC,MAApBA,EAAa,GAC1CjB,EAAM2B,SAASJ,EAAO,GAEtBvB,EAAM4B,QAAQL,GAEhB,MACF,KAAK,EACqB,MAApBN,EAAa,IAAkC,MAApBA,EAAa,GAC1CjB,EAAM4B,QAAQL,GAEdvB,EAAM2B,SAASJ,EAAO,GAExB,MACF,KAAK,EAKH,GAJAC,EAAQxB,EAAM6B,cAEdJ,GADAxY,EAAMqY,EAAMttE,QACG,EAAIi1D,EAAM,IACzBuY,EAAQvwC,SAASg4B,EAAM,EAAIuY,EAAM/lD,WAAWimD,OAAO,EAAG,EAAIzY,GAAOqY,EAAQA,EAAMI,OAAO,EAAG,KAEvF,OAAO,KAET1B,EAAM8B,YAAYN,GAClB,MACF,KAAK,EACHxB,EAAM+B,SAASR,GACf,MACF,KAAK,EACHvB,EAAMhuB,WAAWuvB,GACjB,MACF,KAAK,EACHvB,EAAMgC,WAAWT,IAGrBjrE,EAAIgrE,EAAMI,OAAOD,IACXztE,OAAS,GACbqtE,EAAOnsE,OAAOpB,EAAI,EAAG,EAAGwC,GAG5B,OAAO0pE,GAETiC,YAAa,SAASC,EAAOlC,GAC3B,IAAImC,SACEC,EAAO3oE,KAAM+mE,EAAY4B,EAAKvD,aAAcwD,EAAY,YAAaC,EAAW,SAASC,EAAGntE,GAChG,OAAO+sE,EAAII,GAAKJ,EAAII,KAAOntE,GAuS7B,OArSA+sE,GAQEvsE,EAAG,WACD,OAAO2oE,EAAM4D,EAAIntE,IAAK,IAMxBwtE,EAAG,WACD,OAAOhC,EAAUzB,UAAUoD,EAAIM,MAMjCztE,EAAG,WACD,OAAOgrE,EAAM0C,WAMfjtE,EAAG,WACD,OAAO+qE,EAAU1B,KAAKqD,EAAIM,MAM5BE,EAAG,WACD,OAAOR,EAAIM,KAAO,GAMpBA,EAAG,WACD,OAAOzC,EAAM4C,UAMfC,EAAG,WACD,IAAMC,EAAI,IAAIhoC,KAAKqnC,EAAIY,IAAKZ,EAAI7rE,IAAM,EAAG6rE,EAAIntE,KAAMsmB,EAAI,IAAIwf,KAAKqnC,EAAIY,IAAK,EAAG,GAC5E,OAAO5uD,KAAK2b,OAAOgzC,EAAIxnD,GAzUnB,QAmVN0nD,EAAG,WACD,IAAMF,EAAI,IAAIhoC,KAAKqnC,EAAIY,IAAKZ,EAAI7rE,IAAM,EAAG6rE,EAAIntE,IAAMmtE,EAAIQ,IAAM,GAAIrnD,EAAI,IAAIwf,KAAKgoC,EAAEjB,cAAe,EAAG,GAClG,OAAOtD,EAAM,EAAIpqD,KAAK2b,OAAOgzC,EAAIxnD,GArV7B,MAqVwC,GAAI,IAUlD2nD,EAAG,WACD,OAAOzC,EAAUxB,OAAOgB,EAAMD,aAMhCrqE,EAAG,WACD,OAAO6oE,EAAM4D,EAAI7rE,IAAK,IAMxB4sE,EAAG,WACD,OAAO1C,EAAUvB,YAAYe,EAAMD,aAMrCzpE,EAAG,WACD,OAAO0pE,EAAMD,WAAa,GAM5BwC,EAAG,WACD,OAAQ,IAAIznC,KAAKqnC,EAAIY,IAAKZ,EAAI7rE,IAAK,GAAIosE,WAUzCS,EAAG,WACD,IAAMJ,EAAIZ,EAAIY,IACd,OAAQA,EAAI,GAAM,GAAKA,EAAI,KAAQ,GAAKA,EAAI,KAAQ,EAAK,EAAI,GAM/DhtE,EAAG,WACD,IAAMO,EAAI6rE,EAAI7rE,IAAK0sE,EAAIb,EAAIa,IAC3B,OADoCb,EAAIY,KACtB,KAANzsE,GAAY0sE,EAAI,EAAI,EAAU,IAAN1sE,GAAW0sE,EAAI,GAAK,EAAI,IAM9DD,EAAG,WACD,OAAO/C,EAAM6B,eAMfnoD,EAAG,WACD,OAAOyoD,EAAIY,IAAItnD,WAAW1kB,OAAO,IAUnC+rE,EAAG,WACD,OAAOX,EAAIiB,IAAI9E,eAMjB8E,EAAG,WACD,IAAM9sE,EAAI6rE,EAAIkB,IAAM,GAAK,EAAI,EAC7B,OAAO7C,EAAUtB,SAAS5oE,IAM5BgtE,EAAG,WACD,IAAMC,EAvbD,KAubKvD,EAAMwD,cAAsB1vE,EAA4B,GAAxBksE,EAAMyD,gBAAsBruE,EAAI4qE,EAAM0D,gBAChF,OAAOnF,EAAMpqD,KAAKwb,OAAO4zC,EAAIzvE,EAAIsB,EAxb5B,MAwbwC,MAAQ,IAAM,IAM7DimB,EAAG,WACD,OAAO8mD,EAAIkB,IAAM,IAAM,IAMzBA,EAAG,WACD,OAAOrD,EAAM2D,YAMfC,EAAG,WACD,OAAOrF,EAAM4D,EAAI9mD,IAAK,IAMxBkoD,EAAG,WACD,OAAOhF,EAAM4D,EAAIkB,IAAK,IAMxBvvE,EAAG,WACD,OAAOyqE,EAAMyB,EAAM/tB,aAAc,IAMnC78C,EAAG,WACD,OAAOmpE,EAAMyB,EAAM6D,aAAc,IAMnCC,EAAG,WACD,OAAOvF,EAAgC,IAA1ByB,EAAM+D,kBAA0B,IAU/CvG,EAAG,WAED,MADY,WAAWwG,KAAK9/B,OAAO87B,IAAQ,IAC7B,8BAMhBiE,EAAG,WAGD,OAFU,IAAInpC,KAAKqnC,EAAIY,IAAK,GAAQjoC,KAAKopC,IAAI/B,EAAIY,IAAK,IAC9C,IAAIjoC,KAAKqnC,EAAIY,IAAK,GAAQjoC,KAAKopC,IAAI/B,EAAIY,IAAK,GACrB,EAAI,GAMrCoB,EAAG,WACD,IAAMC,EAAMpE,EAAM9tB,oBAAqB4wB,EAAI3uD,KAAK2X,IAAIs4C,GACpD,OAAQA,EAAM,EAAI,IAAM,KAAO7F,EAA2B,IAArBpqD,KAAKwb,MAAMmzC,EAAI,IAAYA,EAAI,GAAI,IAM1EuB,EAAG,WACD,IAAMF,EAAIhC,EAAIgC,IACd,OAAWA,EAAEzC,OAAO,EAAG,GAAvB,IAA6ByC,EAAEzC,OAAO,EAAG,IAM3C4C,EAAG,WAED,OADapgC,OAAO87B,GAAOtlB,MAAM0nB,EAAK1C,WAAa,KAAKxW,MAAM5nC,QAAQ8gD,EAAKzC,OAAQ,KACrE,OAMhB4E,EAAG,WACD,OAAoC,IAA5BvE,EAAM9tB,qBAUhBv8C,EAAG,WACD,MAAO,iBAAiB2rB,QAAQ+gD,EAAWC,IAM7ClsE,EAAG,WACD,MAAO,mBAAmBkrB,QAAQ+gD,EAAWC,IAM/CkC,EAAG,WACD,OAAOxE,EAAM1hB,UAAY,KAAQ,IAG9BgkB,EAASJ,EAAOA,IAEzB/vB,WAAY,SAAS6tB,EAAOC,GAC1B,IACInsE,SAAGwC,SAAG2yD,SAAKwb,SAAKvC,SAAOd,EAAW,GAEtC,GAAqB,iBAAVpB,KACTA,EAJWvmE,KAIEq4C,UAAUkuB,EAAOC,IAE5B,OAAO,KAGX,GAAID,aAAiBllC,KAAM,CAEzB,IADAmuB,EAAMgX,EAAQjsE,OACTF,EAAI,EAAGA,EAAIm1D,EAAKn1D,IAEL,OADdouE,EAAQjC,EAAQxuC,OAAO39B,KAVT,OAWOouE,IAGjBpuE,EAAI,GAdM,OAcDmsE,EAAQxuC,OAAO39B,EAAI,GAC9BstE,GAAYc,GAGduC,EApBShrE,KAoBEwoE,YAAYC,EAAOlC,GAC1BlsE,IAAOm1D,EAAM,GArBRxvD,KAqBmBgmE,SAASzxD,KAAKk0D,IAAoC,MAA1BjC,EAAQxuC,OAAO39B,EAAI,KACrEwC,EAAI26B,SAASwzC,IAAQ,EACrBA,GAvBOhrE,KAuBKolE,aAAaM,QAAQ7oE,IAEnC8qE,GAAYqD,IAEd,OAAOrD,EAET,MAAO,KAKXhqE,EAAA,mCC3mBA,SAAA8iC,GAaA,IAAM3kC,EAAU,SAAS2D,EAAOwrE,GAM9BjrE,KAAKK,OAASZ,EAOdO,KAAKkrE,uBAAyBD,2FAYhCnvE,EAAQnB,UAAUwwE,YAAc,SAASznE,GACvC,IAAMuD,GACJvD,OAGF,OAAK1D,KAAKkrE,uBASHlrE,KAAKorE,cAAcnkE,IAPtBlN,MACEsxE,UAAW3nE,GAEb4nE,OAAQ,MAgBdxvE,EAAQnB,UAAU4wE,aAAe,SAASC,EAAUC,EAAOjuE,GACzD,IAAMyJ,GACJvD,IAAK8nE,EACLC,MAAOA,GAOT,OAJIjuE,IACFyJ,EAAA,QAAoBzJ,GAGfwC,KAAKorE,cAAcnkE,IAS5BnL,EAAQnB,UAAUywE,cAAgB,SAASnkE,GAEzC,OAAOjH,KAAKK,OAAOsiD,KAAK3iD,KAAKkrE,uBAAwBzqC,EAAEmiB,MAAM37C,IAC3D+7C,SAAUC,eAAgB,wCAW9BnnD,EAAQ4vE,YAAc,KAQtB5vE,EAAQ6vE,iBAAmB,MAE3B7vE,EAAQC,OAASkM,QAAQlM,OAAO,uBAEjBoM,QAAQ,kBAAmBrM,GAG1C6B,EAAA,qGChHAiuE,EAAAlwE,EAAA,KAsBMI,EAAU,SAASuU,EAAQxQ,GAA+E,IAA/DuI,EAA+D4J,UAAAzX,OAAA,QAAA2F,IAAA8R,UAAA,GAAAA,UAAA,MAK9G,GAHA65D,EAAA,EAAuBhxE,KAAKmF,KAA0DoI,QAG1DlI,IAAxBkI,EAAQsoB,YACV1wB,KAAK0wB,YAActoB,EAAQsoB,gBACtB,CACL1wB,KAAK0wB,YAAcM,SAASC,cAAc,QAC1CjxB,KAAK0wB,YAAYQ,YAAcrxB,EAAe4F,UAAU,uCACxD,IAAMqmE,EAAK96C,SAASC,cAAc,MAClC66C,EAAG56C,YAAcrxB,EAAe4F,UAAU,+CAC1CzF,KAAK0wB,YAAY0C,YAAY04C,GAO/B9rE,KAAKqQ,OAASA,GAIhBpP,EAAA,EAAgBnF,EAAS+vE,EAAA,GAMzB/vE,EAAQnB,UAAUg3B,sBAAwB,SAASta,EAAOgN,GACxD,OAAO,IAAIunD,EAAA,GACTluE,KAA2C,aAC3C2mB,OAAQA,EACRhN,MAAOA,KAQXvb,EAAQnB,UAAUk5B,cAAgB,SAASpxB,GACzC,IAAM0Y,EAAO3X,EAAA,EAAYgjB,iBAAiBxmB,KAAKywB,cAAcrV,cAAe2wD,EAAA,GACtEC,EAAOhsE,KAAKyzB,SAAStU,UAAUkxB,gBACrC7sC,EAAA,EAAYC,OAAOuoE,GAGnBvpE,EAFeopE,EAAA,EAAuBzxD,mBAAmBe,EAAM6wD,EAAMhsE,KAAK4wB,UAAW5wB,KAAKqQ,QAC5E8K,EAAKX,sBAKrB7c,EAAA,oECzEAiuE,EAAAlwE,EAAA,KAsBMI,EAAU,SAASuU,EAAQxQ,GAA8B,IAAduI,EAAc4J,UAAAzX,OAAA,QAAA2F,IAAA8R,UAAA,GAAAA,UAAA,MAU7D,GARA65D,EAAA,EAAuBhxE,KAAKmF,KAA0DoI,GAOtFpI,KAAK0wB,iBACuBxwB,IAAxBkI,EAAQsoB,YACV1wB,KAAK0wB,YAActoB,EAAQsoB,gBACtB,CACL1wB,KAAK0wB,YAAcM,SAASC,cAAc,QAC1CjxB,KAAK0wB,YAAYQ,YAAcrxB,EAAe4F,UAAU,0CACxD,IAAMqmE,EAAK96C,SAASC,cAAc,MAClC66C,EAAG56C,YAAcrxB,EAAe4F,UAAU,mDAC1CzF,KAAK0wB,YAAY0C,YAAY04C,GAO/B9rE,KAAKqQ,OAASA,GAIhBpP,EAAA,EAAgBnF,EAAS+vE,EAAA,GAMzB/vE,EAAQnB,UAAUg3B,sBAAwB,SAASta,EAAOgN,GACxD,OAAO,IAAIunD,EAAA,GACTluE,KAA2C,UAC3C2mB,OAAQA,EACRhN,MAAOA,KAQXvb,EAAQnB,UAAUk5B,cAAgB,SAASpxB,GACzC,IAAM0Y,EAAO3X,EAAA,EAAYgjB,iBAAiBxmB,KAAKywB,cAAcrV,cAAe6wD,EAAA,GACtED,EAAOhsE,KAAKyzB,SAAStU,UAAUkxB,gBACrC7sC,EAAA,EAAYC,OAAOuoE,GACnB,IAAM9yC,EAAS2yC,EAAA,EAAuBntD,iBAAiBvD,EAAM6wD,EAAMhsE,KAAK4wB,UAAW5wB,KAAKqQ,QAEpFyjB,EAAQ,KADU3Y,EAAKY,iBAAiB,GAAGxhB,OAE3B,IAClBu5B,EAAQ3Y,EAAKwE,mBAAmB5D,kBAElCtZ,EAASy2B,EAAQpF,IAInBn2B,EAAA,wGCrEA,IAAMuuE,EAAUjkE,QAAQlM,OAAO,qBAC7BowE,EAAA,EAAyBpwE,OAAOK,KAChCgwE,EAAA,EAAwBrwE,OAAOK,KAC/BiwE,EAAA,EAA0BjwE,OA4B5B,SAASkwE,EAA6Bj5B,EAAUzmB,EAAQ0/C,GACtD,OAAOA,EAA6Bj5B,EAAUzmB,GApBhDs/C,EAAQK,8BAAgC,SAACrgD,EAASizB,GAChD,IAAMjM,EAAciM,EAAA,6BACpB,YAAuBj/C,IAAhBgzC,EAA4BA,EACjC,sBAIJg5B,EAAQz5B,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,qBAAsBj3C,EAAQ,wEAuEnDwwE,EAAQt5B,YACNuwB,UACEqJ,mBAAsB,wCACtBC,oBAAuB,yCACvBC,kBAAqB,uCACrBC,oBAAuB,0CAEzB58C,WAAY,8BACZmjB,YAAao5B,GAGfJ,EAAQtvE,MAAM,+BACZsvE,EAAQK,+BAEVL,EAAQ5I,UAAU,oBAAqB4I,EAAQt5B,YAM/Cs5B,EAAQU,0BAAR,WAYE,SAAArJ,EAAYlwB,EAAUxzC,EAAgBgtE,EAA0BhrB,EAAS7lB,gGAAkB3zB,CAAArI,KAAAujE,GAMzFvjE,KAAKwjE,UAAYnwB,EAMjBrzC,KAAK6hD,QAAUA,EAMf7hD,KAAKH,eAAiBA,EAMtBG,KAAK8sE,0BAA4BD,EAMjC7sE,KAAK+sE,cAAgB/wC,EAMrBh8B,KAAKwsE,mBAMLxsE,KAAKysE,oBAMLzsE,KAAK0sE,kBAAoB,KAMzB1sE,KAAK2sE,oBAML3sE,KAAKgtE,kBAAmB,EAMxBhtE,KAAKitE,0BAA2B,EAMhCjtE,KAAKktE,yBAA0B,EAM/BltE,KAAKiE,OAAQ,EAQbjE,KAAKmtE,SAAW,GAMhBntE,KAAKotE,OAAS,GAQdptE,KAAKqtE,UAAY,GAMjBrtE,KAAKstE,UAAY,GAMjBttE,KAAKutE,cAAgB,GA5HzB,OAAAhK,EAAAppC,SAAA,qFAAAopC,EAAA5oE,UAkIEm7C,QAlIF,WAmII91C,KAAKwsE,oBAAiD,IAA5BxsE,KAAKwsE,mBAC/BxsE,KAAKysE,qBAAmD,IAA7BzsE,KAAKysE,oBAChCzsE,KAAK2sE,qBAAmD,IAA7B3sE,KAAK2sE,oBAC5B3sE,KAAK2sE,sBACP3sE,KAAKgtE,kBAAmB,IAvI9BzJ,EAAA5oE,UAkJE2nD,eAlJF,WAkJmB,IAAA//C,EAAAvC,KACTH,EAAiBG,KAAKH,eAEtB0iD,EAASviD,KAAKqtE,UACd7qB,EAASxiD,KAAKstE,UACd7qB,EAAUziD,KAAKutE,cAEfjmE,KAYN,GAVe,KAAXi7C,GACFj7C,EAAO7M,KAAKoF,EAAe4F,UAAU,kCAExB,KAAX+8C,GACFl7C,EAAO7M,KAAKoF,EAAe4F,UAAU,kCAEvB,KAAZg9C,GACFn7C,EAAO7M,KAAKoF,EAAe4F,UAAU,2CAGnC6B,EAAO/M,OACTyF,KAAKwtE,UAAUlmE,QAgBf,GAbIi7C,IAAWC,GACbl7C,EAAO7M,KAAKoF,EAAe4F,UAAU,4CAEnC+8C,IAAWC,GACbn7C,EAAO7M,KAAKoF,EAAe4F,UAAU,+BAGnCzF,KAAK0sE,oBACF1sE,KAAK0sE,kBAAkBe,gBAAgBlrB,IAC1Cj7C,EAAO7M,KAAKoF,EAAe4F,UAAUzF,KAAK0sE,kBAAkBgB,mBAI5DpmE,EAAO/M,OACTyF,KAAKwtE,UAAUlmE,OACV,CAEL,IAAMrD,EAAQpE,EAAe4F,UAAU,2BACvCzF,KAAK8sE,0BAA0BxqB,eAAeC,EAAQC,EAAQC,GAAS5+C,KACrE,WACEtB,EAAK0qE,0BAA2B,EAChC1qE,EAAKorE,uBAEP3tE,KAAKwtE,UAAUnwE,KAAK2C,KAAMiE,MAhMpCs/D,EAAA5oE,UAyMEyoD,MAzMF,WA0MI,IAAMvjD,EAAiBG,KAAKH,eAEtByH,KAON,GANsB,KAAlBtH,KAAKmtE,UACP7lE,EAAO7M,KAAKoF,EAAe4F,UAAU,8BAEnB,KAAhBzF,KAAKotE,QACP9lE,EAAO7M,KAAKoF,EAAe4F,UAAU,8BAEnC6B,EAAO/M,OACTyF,KAAKwtE,UAAUlmE,OACV,CACL,IAAMrD,EAAQpE,EAAe4F,UAAU,8CACvCzF,KAAK8sE,0BAA0B1pB,MAAMpjD,KAAKmtE,SAAUntE,KAAKotE,QAAQvpE,KAC/D7D,KAAK4tE,YAAYvwE,KAAK2C,MACtBA,KAAKwtE,UAAUnwE,KAAK2C,KAAMiE,MAzNlCs/D,EAAA5oE,UAiOE6oD,OAjOF,WAkOI,IACMv/C,EADiBjE,KAAKH,eACC4F,UAAU,sBACvCzF,KAAK8sE,0BAA0BtpB,SAAS3/C,KACtC7D,KAAK4tE,YAAYvwE,KAAK2C,MACtBA,KAAKwtE,UAAUnwE,KAAK2C,KAAMiE,KAtOhCs/D,EAAA5oE,UA6OEipD,cA7OF,WA8OI,IAAM/jD,EAAiBG,KAAKH,eAE5B,GAAKG,KAAKmtE,SAAV,CAKA,IAAMlpE,EAAQpE,EAAe4F,UAAU,mDAKjCooE,EAAyB,SAASzpB,GACtCpkD,KAAKktE,yBAA0B,EAC/BltE,KAAK4tE,eACLvwE,KAAK2C,MAEPA,KAAK8sE,0BAA0BlpB,cAAc5jD,KAAKmtE,UAAUtpE,KAC1DgqE,EACA7tE,KAAKwtE,UAAUnwE,KAAK2C,KAAMiE,SAhB1BjE,KAAKwtE,UAAU3tE,EAAe4F,UAAU,8BAjP9C89D,EAAA5oE,UA4QEgzE,oBA5QF,WA6QI3tE,KAAK4tE,cACL5tE,KAAKgtE,kBAAmB,EACxBhtE,KAAKqtE,UAAY,GACjBrtE,KAAKstE,UAAY,GACjBttE,KAAKutE,cAAgB,IAjRzBhK,EAAA5oE,UAyREmzE,0BAzRF,WA0RI,OAA6C,IAArC9tE,KAAK6hD,QAAQqB,qBAAiCljD,KAAK2sE,qBA1R/DpJ,EAAA5oE,UAiSE6yE,UAjSF,SAiSYlmE,GACJtH,KAAKiE,OACPjE,KAAK4tE,cAGP5tE,KAAKiE,OAAQ,EAEb,IAAMigE,EAAYlkE,KAAKwjE,UAAUjqB,KAAK,6BAEjC7pC,MAAMC,QAAQrI,KACjBA,GAAUA,IAGZA,EAAOpE,QAAQ,SAASe,GACtBjE,KAAK+sE,cAAcztC,QACjB7b,IAAKxf,EACLwiB,OAAQy9C,EACRxmE,KAAMqwE,EAAA,EAAmBlhE,KAAKiW,SAE/B9iB,OApTPujE,EAAA5oE,UA0TEizE,YA1TF,WA2TI5tE,KAAK+sE,cAAcloD,QACnB7kB,KAAKiE,OAAQ,GA5TjBs/D,EAAA,GAgUA2I,EAAQn8C,WAAW,8BACjBm8C,EAAQU,2BAGV,IAAAtJ,EAAA,EC/aA0K,EANgB/lE,QAAQlM,OAAO,2BAC7BunE,EAA2BlnE,KAC3B+vE,EAAA,EAAyBpwE,OAAOK,mGC+C5B6xE,EAAU,SAASruE,GAEvBsuE,EAAA,EAAarzE,KAAKmF,MAOlBA,KAAKmuE,YAMLnuE,KAAK6sC,iBAAmBjtC,+DAI1BkxC,EAAA,EAAgBm9B,EAASC,EAAA,GAUzBD,EAAQtzE,UAAU+B,IAAM,SAASoI,GAE/B,OADegsC,EAAA,EAAchsC,GAAKkd,aACjBhiB,KAAKmuE,SAAWnuE,KAAK6sC,iBAAiB/iB,gBAAgBhlB,EACrEmpE,EAAQG,2BAA2BnkD,YAAYvnB,KAAK,GAAK,MAY7DurE,EAAQtzE,UAAUiI,IAAM,SAASkC,EAAKnC,GACpC,IACM0rE,EAASv9B,EAAA,EAAchsC,GAAKkd,WAC5BssD,EAAWtuE,KAAKtD,IAAIoI,GACZ,OAAVnC,IACFA,EAAM0pB,WAJO,KAKbrsB,KAAK6sC,iBAAiB5gB,8BAA8BtpB,GALvC,MAQf,IAAM4rE,EAAUvuE,KAAK6sC,iBAAiB/iB,gBAAgBhlB,EAAKmpE,EAAQG,2BAElD,OAAbE,GACFvmC,EAAA,EAAYtkC,OAAO4qE,KAAUruE,KAAKmuE,UACpB,OAAVxrE,EACF4rE,EAAQtkD,YAAYukD,MAAM,EAAG7rE,IAE7B4rE,EAAQtkD,YAAYwkD,SAAS,UACtBzuE,KAAKmuE,SAASE,KAEJ,OAAV1rE,IACT4rE,EAAQtkD,YAAYib,SAAS,EAAGviC,GAChC3C,KAAKmuE,SAASE,IAAU,GAG1B,IAAM5rD,EAAQ,IAAIqlC,EAAA,EAAgB,UAChC4mB,QAAS/rE,EACT2rE,SAAUA,IAIZ,OAFAtuE,KAAK0H,cAAc+a,GAEZ6rD,GAUTL,EAAQtzE,UAAUg0E,kBAAoB,SAAS7pE,GAE7C,OADegsC,EAAA,EAAchsC,GAAKkd,aACjBhiB,KAAKmuE,SAAWnuE,KAAK6sC,iBAAiB/iB,gBAAgBhlB,EACrEmpE,EAAQG,2BAA2BnkD,YAAYvnB,KAAK,GAAK,MAS7DurE,EAAQtzE,UAAUi0E,kBAAoB,SAAS9pE,EAAKnC,GAElDA,EAAMy/B,WAAW,GACjBz/B,EAAMylB,YAAW,GACjBzlB,EAAM0pB,WAHS,KAIfrsB,KAAK6sC,iBAAiB5gB,8BAA8BtpB,GAJrC,KAKf,IAAM4rE,EAAUvuE,KAAK6sC,iBAAiB/iB,gBAAgBhlB,EAAKmpE,EAAQG,4BAGpD,IADDG,EAAQtkD,YAAYC,WAAWzI,QAAQ9e,IAEnD4rE,EAAQtkD,YAAYxvB,KAAKkI,IAS7BsrE,EAAQtzE,UAAUuuB,iBAAmB,SAASpkB,EAAKhC,GACjD,IAAM+rE,EAAc7uE,KAAKtD,IAAIoI,GAC7B,GAAI+pE,EAAa,CACf,IAAIrqE,GAAUqqE,GACVA,aAAuB3iC,EAAA,IAEzB1nC,EAASqqE,EAAY5kD,YAAYC,YAGnC1lB,EAAOtB,QAAQ,SAACP,GAEd,GADAolC,EAAA,EAAYvhB,iBAAiB7jB,EAAOmsE,EAAA,GAChCnsE,EAAO,CACT,IAAIosE,GAAa,EACXC,KACN,IAAK,IAAMllE,KAAOnH,EAAMjG,IAAI,cAAe,CACzC,IAAME,EAAQkG,EAAWgH,QACX5J,IAAVtD,IACFoyE,EAAkBllE,GAAOlN,EACzBmyE,GAAa,GAGjB,GAAIA,EAAY,CACd,IAAM1qD,EAAS1hB,EAAMkpB,YACjBxH,aAAkBtc,EAAA,GACpBsc,EAAO6E,iBAAiB8lD,GACxB3qD,EAAOq9C,YACEr9C,aAAkB4qD,EAAA,GAAmB5qD,aAAkB4xC,EAAA,KAChE5xC,EAAO4D,aAAa+mD,GACpB3qD,EAAOq9C,kBAWnBuM,EAAQlyE,OAASkM,QAAQlM,OAAO,0BAC9Bg1C,EAAA,EAAgBh1C,OAAOK,QAEV+L,QAAQ,yBAA0B8lE,GAKjDA,EAAQG,0BAA4B,aAGpC,IAAAc,EAAA,SCvNMC,EAAUlnE,QAAQlM,OAAO,8BAC7BqzE,EAAA,EAAerzE,OAAOK,KACtB8yE,EAA0BnzE,OAAOK,OA8BnC,SAASizE,EAAsCh8B,EAAUzmB,EAAQyiD,GAC/D,OAAOA,EAAsCh8B,EAAUzmB,GA3BzDuiD,EAAQvyE,MAAM,wCAMZ,SAACy2C,EAAUzmB,GACT,IAAMsmB,EAActmB,EAAA,sCACpB,YAAuB1sB,IAAhBgzC,EAA4BA,EACjC,gCAKNi8B,EAAQ18B,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,8BAA+Bj3C,EAAQ,iFAuC5DyzE,EAAQv8B,YACN7iB,WAAY,+CACZozC,UACEr+D,IAAO,iCACPwqE,eAAkB,oCAClBC,OAAU,sCAEZr8B,YAAam8B,GAIfF,EAAQ7L,UAAU,6BAChB6L,EAAQv8B,YAcVu8B,EAAQ/7B,YAAc,SAAS1mB,EAAQ8iD,EAAwBvzC,GAAW,IAAA15B,EAAAvC,KAMxEA,KAAK8E,IAML9E,KAAKsvE,eAOLtvE,KAAKuvE,OAMLvvE,KAAKyvE,QAMLzvE,KAAK0vE,SAML1vE,KAAK2vE,aAML3vE,KAAKu8B,WAAaN,EAMlBj8B,KAAK2jC,iBAEL3jC,KAAK2jC,cAAclpC,KAAK0zC,EAAA,EAAgBlS,EAAW,SAAUj8B,KAAKg9B,oBAAqBh9B,OAMvFA,KAAK4vE,oBAAsBJ,EAE3BxvE,KAAK2jC,cAAclpC,KAAK0zC,EAAA,EAAgBnuC,KAAK4vE,oBAAqB,SAIhE,SAACntD,GACClgB,EAAKktE,QAAUhtD,EAAMkB,OAAO+qD,WAGhChiD,EAAOa,IAAI,WAAYvtB,KAAKm3C,eAAe95C,KAAK2C,QAnElDmvE,EAAQ/7B,oEA0ER+7B,EAAQ/7B,YAAYz4C,UAAUm7C,QAAU,WACtC91C,KAAKg9B,uBAQPmyC,EAAQ/7B,YAAYz4C,UAAUqiC,oBAAsB,WAAW,IAAA92B,EAAAlG,KAC7DA,KAAKu8B,WAAWj6B,cAAcuB,KAAK,SAACW,GAGlC,GAFA0B,EAAKwpE,SAAWlrE,OAEYtE,IAAxBgG,EAAKopE,eAA8B,CACrC,IAAMK,EAAenrE,EAAO+0C,KAAK,SAAA52C,GAAA,OAASA,EAAMjG,IAAI,WAAawJ,EAAKopE,iBACtE,QAAqBpvE,IAAjByvE,EAA4B,CAC9BzpE,EAAK0oE,kBAAkBe,GACvBzpE,EAAKypE,aAAeA,EAGpBzpE,EAAKwpE,SAAWxpE,EAAKwpE,SAASpyE,QAC9B,IAAMuyE,EAAW3pE,EAAKwpE,SAASI,UAAU,SAAAntE,GAAA,OAASA,IAAUuD,EAAKypE,eACjEzpE,EAAKwpE,SAASj0E,OAAOo0E,EAAU,GAC/B3pE,EAAKwpE,SAASj1E,KAAKk1E,QAY3BR,EAAQ/7B,YAAYz4C,UAAUo1E,qBAAuB,SAAS3gD,GAI5D,OAHIA,GACFpvB,KAAK2vE,aAAavtC,WAAWhT,GAExBpvB,KAAK2vE,aAAaxtC,cAQ3BgtC,EAAQ/7B,YAAYz4C,UAAUq1E,SAAW,SAASrtE,EAAO86B,GACvDz9B,KAAKyvE,QAAU9sE,EACf3C,KAAK4vE,oBAAoBhtE,IAAI5C,KAAK8E,IAAKnC,IAClC86B,GAAcz9B,KAAKuvE,QACtBvvE,KAAKuvE,UASTJ,EAAQ/7B,YAAYz4C,UAAUi0E,kBAAoB,SAASjsE,GACzD3C,KAAK4vE,oBAAoBhB,kBAAkB5uE,KAAK8E,IAAKnC,IAMvDwsE,EAAQ/7B,YAAYz4C,UAAUw8C,eAAiB,WAC7Cn3C,KAAK2jC,cAAczgC,QAAQirC,EAAA,GAC3BnuC,KAAK2jC,cAAcppC,OAAS,GAI9B40E,EAAQp/C,WAAW,uCACjBo/C,EAAQ/7B,aAGV,IAAA68B,EAAA,0SC/OA,IAAMzhB,EAAA1yD,WAgBJ,SAAAA,EAAY6D,EAAIuwE,EAAuB72C,gGAAuBo1B,CAAAzuD,KAAAlE,GAQ5DkE,KAAKytC,GAAK9tC,EAMVK,KAAKmwE,uBAAyBD,EAM9BlwE,KAAKy5B,uBAAyBJ,EAS9Br5B,KAAKkxC,YAMLlxC,KAAK0uD,OAnDH,OAAA5yD,EAAAq+B,SAAA,sDAAAr+B,EAAAnB,UAsEJ20B,cAtEI,SAsEUhH,GACZ,OACEtoB,KAAKy5B,uBAAuBnK,cAAchH,IAxE1CxsB,EAAAnB,UAiFJy1E,2BAjFI,SAiFuB5+D,GAAY,IAAAjP,EAAAvC,KAE/BqwE,EAAkCrwE,KAAKytC,GAAG7sC,QAqChD,OAjCAZ,KAAKy5B,uBAAuBk1B,wBAC1Bn9C,GACA3N,KAAK,SAACuN,GAIN,IACMk/D,GADO9+D,EAAWlO,SAAST,cACL0tE,qBAC5B,GAAID,GAAkBA,EAAe/1E,OAAQ,CAC3C,IAAMqK,KADqCq2B,EAAA,SAEhC9nB,IACLlQ,EAAA,EAAiBqtE,EAAgBn9D,EAAU/W,OAC5C+W,EAAUzV,OAASmpC,EAAA,EAAwBtnC,QACzC4T,EAAU20B,SAAY30B,EAAU20B,QAAQvtC,QAC3CqK,EAASnK,KACP8H,EAAK4tE,uBAAuBK,mBAC1Bh/D,EAAY2B,EAAU/W,MACtByH,KAAK,SAAC2B,GACN,IAAMsiC,EAAUtiC,EAAOV,IAAI,SAAA2rE,GAAA,OAAUA,EAAO7zE,QAC5CuW,EAAUzV,KAAOmpC,EAAA,EAAwBtnC,OACzC4T,EAAU20B,QAAUA,MAV5Bt4B,EAAwB4B,EAAxB3B,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAAoC,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAjV,OAAA,MAAAwV,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAhT,MAAAq+B,EAAAlrB,GAepC,OAAOxN,EAAKkrC,GAAGvoC,IAAIN,GAAUf,KAC3BwsE,EAAgCnsE,QAAQsN,IAG1C6+D,EAAgCnsE,QAAQsN,KAIrC6+D,EAAgCvvE,SAxHrC+I,EAAA/N,IAAAgO,IAAA,aAAApN,IAAA,WA2DF,OACEsD,KAAKy5B,uBADP,eA3DE39B,KAiIN0yD,EAAQzyD,OAASkM,QAAQlM,OAAO,wBAC9B20E,EAAA,EAAqB30E,OAAOK,KAC5Bu0E,EAAA,EAA6B50E,OAAOK,OAEtCoyD,EAAQzyD,OAAOoM,QAAQ,uBAAwBqmD,GAG/C,IAAAoiB,EAAA,+PC3IA,IAoCAC,EApCM/0E,YASJ,SAAAA,EAAYsM,gGAAS0oE,CAAA9wE,KAAAlE,GAAA,IAAAyG,mKAAA0I,CAAAjL,KAEnB+wE,EAAAl2E,KAAAmF,KAAMoI,IAFa,OAUnB7F,EAAKyuE,UAAY5oE,EAAQ9E,SAVNf,EATjB,gUAAA2O,CAAApV,EAAAi1E,GAAAE,EAAAn1E,IAAAgO,IAAA,WAAApN,IAAA,WA8BF,OAAOsD,KAAKgxE,cA9BVl1E,GAAwBmxC,EAAA,GCA9B,IAAMikC,EAAAp1E,WAaJ,SAAAA,EAAYu9B,gGAAuB83C,CAAAnxE,KAAAlE,GAQjCkE,KAAKy5B,uBAAyBJ,EArB5B,OAAAv9B,EAAAq+B,SAAA,yBAAAr+B,EAAAnB,UA6BJy2E,SA7BI,SA6BK5/D,GAE0B,eAA7BA,EAAWhF,eAAmCgF,EAAWJ,YAG3DpR,KAAKy5B,uBAAuBk1B,wBAAwBn9C,IAlCpD1V,KAwCNo1E,EAAQn1E,OAASkM,QAAQlM,OAAO,2BAC9B20E,EAAA,EAAqB30E,OAAOK,OAE9B80E,EAAQn1E,OAAOoM,QAAQ,gBAAiB+oE,GAGxC,IAAAG,EAAA,yECtBA,IAAMC,EAAAx1E,WA6BJ,SAAAA,EAAY6D,EAAIgtB,EAAYoP,EAAUE,EAAWygB,EAC/C8yB,EAAwBp2C,EAAiBx5B,EAAiB2wD,EAC1DxsB,EAAawtC,gGACbC,CAAAxxE,KAAAlE,GAQAkE,KAAKytC,GAAK9tC,EAMVK,KAAK+sB,WAAaJ,EAMlB3sB,KAAK6zC,SAAW9X,EAMhB/7B,KAAKu8B,WAAaN,EAMlBj8B,KAAK68C,gBAAkBH,EAMvB18C,KAAKyxE,wBAA0BjC,EAM/BxvE,KAAK0xE,iBAAmBt4C,EASxBp5B,KAAKw5B,aAAeJ,EAAgBj0B,WAMpCnF,KAAK6sC,iBAAmBjtC,EAMxBI,KAAKywD,gBAAkBF,EAMvBvwD,KAAKgkC,aAAeD,EAMpB/jC,KAAK2xE,eAAiBJ,EAWtBvxE,KAAK4xE,qBAOL5xE,KAAK+L,YASL/L,KAAK6xE,kBAQL7xE,KAAKi4D,qBAAuB,KAI5B9pB,EAAA,EACEnuC,KAAKyxE,wBACL,SACAzxE,KAAK8xE,iCACL9xE,MAEFmuC,EAAA,EAAgBnuC,KAAKu8B,WAAY,SAAUv8B,KAAKg9B,oBAAqBh9B,MA1JnE,OAAAlE,EAAAq+B,SAAA,uKAAAr+B,EAAAnB,UAmKJo3E,iBAnKI,SAmKajtE,GACf9E,KAAK0xE,iBAAiB5sE,IAAMA,GApK1BhJ,EAAAnB,UA2KJq3E,cA3KI,SA2KUlvE,GACZ9C,KAAK+L,YAAcjJ,GA5KjBhH,EAAAnB,UAoLJqiC,oBApLI,WAoLkB,IAAAz6B,EAAAvC,KAEpBA,KAAKiyE,oBACDjyE,KAAKi4D,sBACPj4D,KAAKi4D,uBAEPj4D,KAAKkyE,sBAGLlyE,KAAKu8B,WAAWx2B,sBAAsBlC,KAAK,SAACR,GAC1C,IAAM8uE,EAAgB5vE,EAAKg6B,WAAW12B,kBAAkBhC,KAAK,SAAC1C,GAE5D,IAAAqO,EAAoBrO,EAApBsO,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAA4B,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAjV,OAAA,MAAAwV,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAhT,MAAA,IAC1BuV,EAD0BpC,EACAxO,SAA1B6Q,EAAA1C,MAAAC,QAAAwC,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAtC,OAAAC,cAAoC,KAAAwC,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA5X,OAAA,MAAA+X,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAnC,QAAAC,KAAA,MAAAqC,EAAAD,EAAAzV,MAAA,IAAzBuG,EAAyBmP,EAClCy1B,EAAA,EAAYtkC,OAAON,GACnBZ,EAAK6vE,kBAAkBjvE,EAAOA,EAAOE,OAKrCgvE,EAAkB9vE,EAAKg6B,WAAWz2B,4BAA4BjC,KAClE,SAACyuE,GAEC,IAAA5/D,EAA8B4/D,EAA9B3/D,EAAAjD,MAAAC,QAAA+C,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAA7C,OAAAC,cAAgD,KAAA+C,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAnY,OAAA,MAAAsY,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA1C,QAAAC,KAAA,MAAA4C,EAAAD,EAAAhW,MAAA,IAArC21E,EAAqC1/D,EAC9CtQ,EAAK6vE,kBAAkB,KAAMG,EAAiBlvE,MAMpDd,EAAKkrC,GAAGvoC,KAAKitE,EAAeE,IAAkBxuE,KAAK,WACjDtB,EAAK01D,qBAAuB11D,EAAKwqB,WAAWqrC,iBAC1C,WACE,GAAI71D,EAAKs6C,gBAAgBpgB,SACvB,OAAOl6B,EAAKs6C,gBAAgBpgB,SAASl7B,UAGzCgB,EAAKiwE,qCAAqCn1E,KAA1CkF,SAzNJzG,EAAAnB,UAgPJ63E,qCAhPI,SAgPiC51E,GAAO,IAAAsJ,EAAAlG,KAE1CA,KAAK6zC,SAAS,WAGZ,GAAKj3C,EAAL,CAcA,IATA,IAAM61E,KACA3iD,EAAU,SAAC4iD,EAAW7kD,GAExBA,EAASzrB,KACWb,UAEpBmxE,EAAUj4E,KAAKozB,IAGVxzB,EAAI,EAAG+G,EAAKxE,EAAMrC,OAAQF,EAAI+G,EAAI/G,IACzCuC,EAAMvC,GAAGw1B,mBAAmBC,EAAQzyB,KAAR6I,EAAmBusE,IAIjD,IAAK,IAAIp4E,EAAI,EAAG+G,EAAKqxE,EAAal4E,OAAQF,EAAI+G,EAAI/G,IAAK,CACrD,IAAMs4E,EAAcF,EAAap4E,GACf6L,EAAK0sE,sBAAsBD,IAE3CzsE,EAAK2sE,oBAAoBF,GAK7B,IAAMvrE,EAAQlB,EAAK2rE,eACnB,IAAK,IAAMvpD,KAAMpiB,EAAK2rE,eAAgB,CACpC,IAAMnvE,EAAO0E,EAAMkhB,GACdmqD,EAAahjC,SAAS/sC,EAAKmrB,WAC9B3nB,EAAK4sE,yBAAyBpwE,QArRlC5G,EAAAnB,UAgSJs3E,kBAhSI,WAoSF,IADA,IAAM33C,EAAct6B,KAAKw5B,aAAatP,WAC7B7vB,EAAIigC,EAAY//B,OAAS,EAAWF,GAAH,EAAYA,IAChD2F,KAAK4xE,kBAAkBt3C,EAAYjgC,GAAGiuB,KAIxCtoB,KAAKw5B,aAAaiV,OAAOnU,EAAYjgC,IAKzC04E,EAAA,EAAY/yE,KAAK4xE,oBA9Sf91E,EAAAnB,UA+TJy3E,kBA/TI,SA+TcxsC,EAAiBxjC,EAAMiB,GAEvC,IAAM9B,EAAWa,EAAKb,SAKtB,GAAIA,EACF,KAAAwR,EAAoBxR,EAApByR,EAAAtD,MAAAC,QAAAoD,GAAAoB,EAAA,MAAApB,EAAAC,EAAAD,IAAAlD,OAAAC,cAA8B,KAAAoD,EAAA,GAAAF,EAAA,IAAAmB,GAAApB,EAAAxY,OAAA,MAAA2Y,EAAAH,EAAAoB,SAAA,KAAAA,EAAApB,EAAA/C,QAAAC,KAAA,MAAAiD,EAAAiB,EAAAvX,MAAA,IAAnBuG,EAAmB+P,EAC5B60B,EAAA,EAAYtkC,OAAON,GACnBnD,KAAKoyE,kBAAkBxsC,EAAiBziC,EAAOE,QAHnD,CASA,IAAMC,EAA4ClB,EAG5CkmB,EAAKwoB,EAAA,EAAcxtC,GACzB,IAAItD,KAAK4xE,kBAAkBtpD,GAA3B,CAKA,IAAM0qD,EAAO1vE,EAAST,SAChB+J,EAAUtJ,EAAS5F,KACrB+I,SACAG,SACA0F,SACAlI,SACAgL,SACAE,SACAlD,SACAuB,SAEJ,GAAIf,IAAYwiE,EAAA,EAAexnE,SAASG,KAAM,CAE5C,IAAMxE,EAAsDD,EAG5D8L,EAAY7L,EAAaZ,MACzB2M,EAAU/L,EAAaG,IACvB+C,EAAgBusE,EAAKvsE,cACrBG,EAAgBosE,EAAKpsE,cAGrB,IAAMpC,EAASwuE,EAAKC,aAAeD,EAAKE,UACpC1uE,IACF8H,EAAY9H,EAAO6R,MAAM,KAAKvR,IAAI,SAACnC,GACjC,OACE8D,cAAeA,EACfG,cAAeA,EACfxK,KAAMuG,EACN4M,WAAW,MAMbyjE,EAAK5uE,WAAaf,EAAW2vE,EAAK5uE,aACpCA,EAAYf,EAAW2vE,EAAK5uE,YAE9BgI,EAAe7I,EAAae,eACvB,GAAIsI,IAAYwiE,EAAA,EAAexnE,SAASI,IAAK,CAElD,IAAM7D,EAAoDb,EAG1DmD,EAAgBtC,EAAYuC,kBAC5BE,EAAgBzC,EAAY0C,kBAG5ByF,EAAYnI,EAAY20D,YAAYh0D,IAAI,SAACquE,GACvC,OACE1sE,cAAe0sE,EAAWzsE,kBAC1BE,cAAeusE,EAAWtsE,kBAC1BzK,KAAM+2E,EAAW/2E,KACjBmT,UAAW4jE,EAAW5jE,aAK1B,IAAMwpD,GAAkBnzB,GAAmBA,EAAgBlG,MACzDv7B,EAAYC,UAAYwhC,EAAgBxhC,UAC1C2jC,EAAA,EAAYtkC,OAAOs1D,GAEnB3sD,GADAhI,EAAYf,EAAW01D,IACEz0D,UAGrBH,EAAYsP,KACd9F,EAAexJ,EAAYsP,KAClBmyB,GAAmBA,EAAgBnyB,OAC5C9F,EAAei4B,EAAgBnyB,MAKnC,IAAMjH,EAAgBpI,EAAYA,EAAU1G,UAAOwC,EAC7C8O,EAAkB5K,EAAYA,EAAUgvE,kBAAelzE,EACvDwO,EAAStK,GAAaA,EAAU40D,WACpC50D,EAAU60D,YAAS/4D,EACfgP,EAAS9K,EAAYA,EAAUV,SAAMxD,EAEvCoO,EAAkB2+B,EAAA,EAAkB1+B,gBAAgBC,KAEpDhC,IAAkBygC,EAAA,EAAkBxgC,WAAWgI,aACjDnG,EAAkB2+B,EAAA,EAAkB1+B,gBAAgBgC,MAItD,IAAMxD,IAAcimE,EAAKzsE,eACnB8G,EAAoB2lE,EAAKzsE,eAC7BysE,EAAKzsE,eAAe0zB,eAAY/5B,EAC5B+M,EAAkB+lE,EAAKzsE,eAC3BysE,EAAKzsE,eAAe4yD,UAAOj5D,EACvBiN,EAAoB6lE,EAAKzsE,eAC7BysE,EAAKzsE,eAAe8yD,YAASn5D,EAGzB4C,EAAa9C,KAAK+L,YAClBX,EAAmBhJ,EAAKU,YAAc8iC,EAAgB9iC,WAGxD2K,SACAI,SACJ,GAAIF,EAAc,CAChB,IAAM04B,EAAarmC,KAAKgkC,aAAasC,WAAW34B,GAA7B,OACf+B,MAAMC,QAAQ02B,IAChB54B,EAAiB44B,EAAW,GAC5Bx4B,EAAiBw4B,EAAW,IAE5B54B,EAAiB44B,EAKrB,IAAMv6B,EAAWknE,EAAKlnE,SAChB6xC,EAAsBq1B,EAAKK,yBAC3Bj3E,EAAOkH,EAASlH,KAChBmR,EAAoBylE,EAAKM,cACzBjrD,GAA6B,IAAnB2qD,EAAK3zC,UAGrBr/B,KAAK4xE,kBAAkBtpD,GAAM,IAAIuoD,GAC/B/kE,WACAhJ,aACAsI,mBACA9H,WACAglB,KACAq1B,sBACAl3C,gBACAG,gBACAxK,OACAgQ,eACAE,YACAE,gBACAI,UACAG,YACAM,oBACAJ,kBACAE,oBACAI,oBACAE,iBACAE,eACAE,iBACAwa,UACA/Z,kBACAI,SACAM,kBACAE,SACAE,YACAE,eA3eAxT,EAAAnB,UAufJk4E,oBAvfI,SAufgBhlD,GAElB,IAAMvF,EAAKwoB,EAAA,EAAcjjB,EAASzrB,MAC5BoP,EAAaxR,KAAK4xE,kBAAkBtpD,GAC1Cyf,EAAA,EAAYtkC,OAAO+N,EAAY,4BAC/Bqc,EAAS0B,cAAc/d,GAEvB,IAAMinD,EAAyBz4D,KAAK+sB,WAAWE,OAC7C,kBAAMY,EAASS,YACftuB,KAAK04D,2BAA2Br7D,KAAK2C,KAAM6tB,IAGvC0lD,EAA+BvzE,KAAK+sB,WAAWE,OACnD,WACE,IAAMumD,EAAwC,OAA3BhiE,EAAW9F,YACxB+nE,EAAYjiE,EAAW6W,QAC7B,OAAOmrD,GAAcC,GAEvBzzE,KAAK0zE,mCAAmCr2E,KAAK2C,KAAMwR,IAIjDmiE,SACAC,SACAC,SACAriE,EAAW7D,cACX6D,EAAW5E,UAAYqgC,EAAA,EAAkBpgC,KAAK7E,MAEhD2rE,EAAkC3zE,KAAK+sB,WAAWE,OAChD,kBAAMzb,EAAW/D,gBACjBzN,KAAK8zE,iCAAiCz2E,KAAK2C,KAAMwR,IAGd,UAAjCA,EAAW7D,aAAam0B,OAC1B8xC,EAAkC5zE,KAAK+sB,WAAWE,OAChD,kBAAMzb,EAAW3D,gBACjB7N,KAAK8zE,iCAAiCz2E,KAAK2C,KAAMwR,KAIrDqiE,EAAW9rC,EAAA,EAAYvhB,iBACrButD,EAAA,EAA6BhvD,SAAS8I,GACtCmmD,EAAA,IAIJh0E,KAAK6xE,eAAevpD,IAClBirD,+BACA9a,yBACAkb,kCACAC,kCACA/lD,WACAgmD,YAGF7zE,KAAKw5B,aAAa/+B,KAAK+W,GAEvBxR,KAAK2xE,eAAeP,SAAS5/D,IAhjB3B1V,EAAAnB,UA2jBJm4E,yBA3jBI,SA2jBqBpwE,GAGvB,IAAM8O,EAAa9O,EAAKmrB,SAASyB,gBACjCyY,EAAA,EAAYtkC,OAAO+N,EAAY,4BAC/BxR,KAAKw5B,aAAaiV,OAAOj9B,GAGzB9O,EAAKmrB,SAAS0B,cAAc,MAC5B7sB,EAAK6wE,+BACL7wE,EAAK+1D,yBACD/1D,EAAKixE,iCACPjxE,EAAKixE,kCAEHjxE,EAAKkxE,iCACPlxE,EAAKkxE,yCAEA5zE,KAAK6xE,eAAe/gC,EAAA,EAAcpuC,EAAKmrB,SAASzrB,QA5kBrDtG,EAAAnB,UAslBJu3E,oBAtlBI,WAulBF,IAAK,IAAM5pD,KAAMtoB,KAAK6xE,eACpB7xE,KAAK8yE,yBAAyB9yE,KAAK6xE,eAAevpD,KAxlBlDxsB,EAAAnB,UAwmBJ+9D,2BAxmBI,SAwmBuB7qC,EAAUjN,GACnC,IAAMqzD,EAAiBpmD,EAASyB,gBAChCyY,EAAA,EAAYtkC,OAAOwwE,EAAgB,4BACnC,IAAM5rD,EAAqB,OAAXzH,EAChBqzD,EAAe5rD,QAAUA,EAQzB,IAAM6rD,EAAuBH,EAAA,EAA6BhvD,SACxD8I,GAAUnxB,IAAI,kBAChB,GAAIgT,MAAMC,QAAQukE,GAChB,KACAjgE,EADoBjU,KAAKw5B,aAAatP,WACtChW,EAAAxE,MAAAC,QAAAsE,GAAA8gD,EAAA,MAAA9gD,EAAAC,EAAAD,IAAApE,OAAAC,cAAsC,KAAAsE,EAAA,GAAAF,EAAA,IAAA6gD,GAAA9gD,EAAA1Z,OAAA,MAAA6Z,EAAAH,EAAA8gD,SAAA,KAAAA,EAAA9gD,EAAAjE,QAAAC,KAAA,MAAAmE,EAAA2gD,EAAAn4D,MAAA,IAA3B4U,EAA2B4C,EACpC,GAAI5C,aAAsBq/D,GACK,OAA3Br/D,EAAW9F,aACX8F,EAAW8W,KAAO2rD,EAAe3rD,IACjC4rD,EAAqBzkC,SAASj+B,EAAW8W,KACzC9W,EAAW6W,QACb,CACAroB,KAAK0zE,mCAAmCliE,GAAY,GACpD,UAhoBJ1V,EAAAnB,UA6oBJi4E,sBA7oBI,SA6oBkB/kD,GACpB,OAAO7tB,KAAK6xE,eAAe/gC,EAAA,EAAcjjB,EAASzrB,QAAU,MA9oB1DtG,EAAAnB,UA6pBJ+4E,mCA7pBI,SA6pB+BliE,EAAY5U,GAAO,IAAAu3E,EAKpD,IAA6B,IAAzB3iE,EAAW5F,WACX4F,EAAW5E,UAAYqgC,EAAA,EAAkBpgC,KAAK7E,IADlD,CAMA,IAAMsgB,EAAKwoB,EAAA,EAAct/B,EAAWlO,UAC9BZ,EAAO1C,KAAK6xE,eAAevpD,GACjCyf,EAAA,EAAYtkC,OAAOf,GACnB,IAAMmrB,EAAWnrB,EAAKmrB,SAEhBlrB,EAAQoxE,EAAA,EAA6BhvD,SAAS8I,GACpDka,EAAA,EAAYtkC,OACVd,aAAiBqxE,EAAA,GACjBrxE,aAAiByxE,EAAA,GAGnB,IAAM/vD,EAAS1hB,EAAMkpB,YACrBkc,EAAA,EAAYtkC,OACV4gB,aAAkB4xC,EAAA,GAClB5xC,aAAkB4qD,EAAA,GAGpB,IAAMxZ,EAAqBjkD,EAAWsB,2BAChCoiD,EAAWrnC,EAAS/oB,IAAIqa,UAAUkxB,gBAAgBgjB,UAClD/pB,EAAe93B,EAAW6W,QAC9BroB,KAAKywD,gBAAgBpnB,oBACnB73B,aACA0jD,aAEF,KAGEY,EAAmB,KAEvB,GAAIxsB,EAAc,CAChB,IAEM+qC,EAFShwD,EAAO0H,YACF,OACW1V,MAAM,KAGrC,GAFA0xB,EAAA,EAAYtkC,OAAO4wE,EAAW95E,QAAU,GAEd,IAAtB85E,EAAW95E,OAGbu7D,EAAmBxsB,MACd,CAKL,IADA,IAAMysB,KACG17D,EAAI,EAAG+G,EAAKizE,EAAW95E,OAAQF,EAAI+G,EAAI/G,IAC1Cg6E,EAAWh6E,KAAOo7D,EACpBM,EAAkBt7D,KAAlB,IAA2B6uC,EAA3B,KAEAysB,EAAkBt7D,KAAK,MAG3Bq7D,EAAmBC,EAAkBxuD,KAAK,KAI9C8c,EAAO4D,eAAPksD,MAAA,OACiBre,EADjBqe,MA/tBEr4E,EAAAnB,UA8uBJm5E,iCA9uBI,SA8uB6BtiE,GAE/B,IAAM8W,EAAKwoB,EAAA,EAAct/B,EAAWlO,UAC9BZ,EAAO1C,KAAK6xE,eAAevpD,GACjCyf,EAAA,EAAYtkC,OAAOf,GACnB,IAAMmxE,EAAW9rC,EAAA,EAAYtkC,OAAOf,EAAKmxE,UACnC7d,EAAYjuB,EAAA,EAAYvhB,iBAC5BqtD,EAAShoD,YACToqC,EAAA,GAGItoD,EAAeo6B,EAAA,EAAYtkC,OAAO+N,EAAW7D,cAC/Cy3B,SACE1xB,EAAQlC,EAAWwC,eACrBN,IACF0xB,EAAYplC,KAAKgkC,aAAarC,mBAAmBh0B,EAAc+F,IAIlDsiD,EAAUjqC,YACA,OACAqZ,GAMzBplC,KAAK6sC,iBAAiBvgB,oBACpBunD,EACA7d,EAAUjqC,YAAV,OACAqZ,IA5wBAtpC,EAAAnB,UA2xBJm3E,iCA3xBI,SA2xB6BvrD,GAE/B,IAAM+tD,EAA0B/tD,EAAI5C,OAAO2qD,SACrCiG,EAAyBhuD,EAAI5C,OAAO+qD,QACpCtnE,EAAQpH,KAAK4xE,kBAGnB,GAAI0C,EAAyB,CAC3B,IAAMvxE,EAAMuxE,EAAwB53E,IAAI,kBACxC,GAAIgT,MAAMC,QAAQ5M,GAChB,KAAA8xD,EAAiB9xD,EAAjB+xD,EAAAplD,MAAAC,QAAAklD,GAAAlB,EAAA,MAAAkB,EAAAC,EAAAD,IAAAhlD,OAAAC,cAAsB,KAAAklD,EAAA,GAAAF,EAAA,IAAAnB,GAAAkB,EAAAt6D,OAAA,MAAAy6D,EAAAH,EAAAlB,SAAA,KAAAA,EAAAkB,EAAA7kD,QAAAC,KAAA,MAAA+kD,EAAArB,EAAA/2D,MAAA,IACd4U,EAAapK,EADC4tD,GAEhBxjD,IACFA,EAAW6W,SAAU,EACrBroB,KAAKw5B,aAAaiV,OAAOj9B,MAOjC,GAAI+iE,EAAwB,CAC1B,IAAMxxE,EAAMwxE,EAAuB73E,IAAI,kBACvC,GAAIgT,MAAMC,QAAQ5M,GAChB,KAAA0wD,EAAiB1wD,EAAjB2wD,EAAAhkD,MAAAC,QAAA8jD,GAAA4B,EAAA,MAAA5B,EAAAC,EAAAD,IAAA5jD,OAAAC,cAAsB,KAAA8jD,EAAA,GAAAF,EAAA,IAAA2B,GAAA5B,EAAAl5D,OAAA,MAAAq5D,EAAAH,EAAA4B,SAAA,KAAAA,EAAA5B,EAAAzjD,QAAAC,KAAA,MAAA2jD,EAAAyB,EAAAz4D,MAAA,IACd4U,EAAapK,EADCwsD,GAEhBpiD,IACFA,EAAW6W,SAAU,EACrBroB,KAAKw5B,aAAa/+B,KAAK+W,QAvzB7B1V,KAm0BNw1E,EAAQv1E,OAASkM,QAAQlM,OAAO,yBAC9Bs1E,EAAwBt1E,OAAOK,KAC/B23E,EAAA,EAA6Bh4E,OAAOK,KACpCo4E,EAAA,EAAwBz4E,OAAOK,KAC/BgzE,EAAA,EAAerzE,OAAOK,KACtB07D,EAAA,EAAqB/7D,OAAOK,KAC5B60C,EAAA,EAA0Bl1C,OAAOK,KACjC8yE,EAA0BnzE,OAAOK,KACjC20C,EAAA,EAAmBh1C,OAAOK,KAC1ByuC,EAAA,EAAgB9uC,OAAOK,OAEzBk1E,EAAQv1E,OAAOoM,QAAQ,wBAAyBmpE,GAGhD,IAAAmD,EAAA,ECz1BAC,EATgBzsE,QAAQlM,OAAO,uBAC7B44E,EAAA,EAAqC54E,OAAOK,KAC5Cw4E,EAAA,EAAwC74E,OAAOK,KAC/Cw0E,EAAoB70E,OAAOK,KAC3Bq4E,EAAqB14E,OAAOK,KAC5Bi1E,EAAwBt1E,OAAOK,4CCS3By4E,WAAU,SAASz8C,EAAMv4B,EAAgBi1E,GAM7C90E,KAAKgqD,KAAO5xB,EAMZp4B,KAAKq8B,gBAAkBx8B,EAMvBG,KAAK+0E,aAAeD,EAEpB/G,EAAA,EAAmBlzE,KAAKmF,MAExB,IAAMkkE,EAAYj8D,QAAQikB,QAAQ,uCAClCjkB,QAAQikB,QAAQ8E,SAASi5B,MAAMC,OAAOga,GAMtClkE,KAAKmkE,WAAaD,EAOlBlkE,KAAKg1E,6HAIPlkC,EAAA,EAAgB+jC,GAAS9G,EAAA,GAUzB8G,GAAQl6E,UAAU8M,MAAQ,SAAS1K,GACjCiD,KAAK4iB,KAAK7lB,IAWZ83E,GAAQl6E,UAAUm+C,MAAQ,SAAS/7C,GACdiD,KAAK6iB,kBAAkB9lB,GAC/BmG,QAAQlD,KAAKi1E,cAAej1E,OAUzC60E,GAAQl6E,UAAUgoB,YAAc,SAAS5e,GAAS,IAAAxB,EAAAvC,KAC1CH,EAAiBG,KAAKq8B,gBACtB3+B,EAAOqG,EAAQrG,KACrBqqC,EAAA,EAAYlrB,aAAanf,EAAM,uBAG/B,IAAM8vB,EAAMxtB,KAAKk1E,eAAenxE,GAChC,QAA4B7D,IAAxBF,KAAKg1E,UAAUxnD,GAMnB,IAFsC,IAAlBzpB,EAAQoxE,MAEX,CAEf,IAAMA,EAAQn1E,KAAK+0E,eACb5kC,EAAUnwC,KAAKgqD,KAAK1xB,YAAYv0B,EAAQ0f,KAC9C0xD,EAAMz5B,MACJsP,aAAa,EACb7a,QAASA,EACTpC,MAAO,WAITonC,EAAMtiC,MAAM5lB,OAAO,OAAQ,SAACrM,EAAQsM,GAC7BtM,GACHre,EAAK0yE,cAAclxE,KAIvB/D,KAAKg1E,UAAUxnD,GAAQ2nD,MAElB,CAEL,IAAM7Q,GAAc,QAAS,OAAQ,qBACrC,OAAQ5mE,GACN,KAAKqwE,EAAA,EAAmBlhE,KAAKiW,MAC3BwhD,EAAW7pE,KAAK,gBAChB,MACF,KAAKszE,EAAA,EAAmBlhE,KAAKmW,YAC3BshD,EAAW7pE,KAAK,cAChB,MACF,KAAKszE,EAAA,EAAmBlhE,KAAKqW,QAC3BohD,EAAW7pE,KAAK,iBAChB,MACF,KAAKszE,EAAA,EAAmBlhE,KAAKuW,QAC3BkhD,EAAW7pE,KAAK,iBAMpB,IAAM8pE,EAAKt8D,QAAQikB,QAAR,4BACmBo4C,EAAW/8D,KAAK,KADnC,YAEL6tE,EAASntE,QAAQikB,QAAR,wEAEXrsB,EAAe4F,UAAU,SAFd,mEAITge,EAAMxb,QAAQikB,QAAQ,YAAYs4C,KAAKzgE,EAAQ0f,KACrD8gD,EAAGra,OAAOkrB,GAAQlrB,OAAOzmC,IAIrB1f,EAAQ0iB,OACExe,QAAQikB,QAAQnoB,EAAQ0iB,QAExBzmB,KAAKmkE,YAGTja,OAAOqa,GACjBA,EAAG9a,SAAS,MAGZ8a,EAAG3hC,GAAG,kBAAmB,WACvBrgC,EAAK0yE,cAAclxE,KAGrB/D,KAAKg1E,UAAUxnD,GAAQ+2C,IAU3BsQ,GAAQl6E,UAAUu6E,eAAiB,SAASnxE,GAC1C,OAAUA,EAAQ0f,IAAlB,IAAyB1f,EAAQrG,MASnCm3E,GAAQl6E,UAAUs6E,cAAgB,SAASlxE,GACzC,IAAMypB,EAAMxtB,KAAKk1E,eAAenxE,GAC1B2kC,EAAM1oC,KAAKg1E,UAAUxnD,QAGfttB,IAARwoC,IAKAA,aAAe2sC,GAAA,EAEb3sC,EAAIyhB,WACNzhB,EAAI0hB,SAAQ,GAKV1hB,EAAIhI,SAAS,OACfgI,EAAIjhC,MAAM,gBAKPzH,KAAKg1E,UAAUxnD,MAOxBqnD,GAAQ94E,OAASkM,QAAQlM,OAAO,kBAC9Bs5E,GAAA,EAAiBt5E,OAAOK,QAGX+L,QAAQ,iBAAkB0sE,IAGzC,IAAAS,GAAA,aCxNMC,WAAUttE,QAAQlM,OAAO,iBAC7B,aACAg1C,EAAA,EAAmBh1C,OAAOK,KAC1Bk5E,GAAsBv5E,OAAOK,KAC7Bo5E,GAAA,EAAoBz5E,OAAOK,QAqB7Bm5E,GAAQniC,YAAc,SAASC,EAAU3mB,EAAQ0L,EAAM2D,EACrDl8B,EAAgBi1E,EAAiBW,EAAgBhiC,EAAiB7zC,GAMlEI,KAAK8E,IAML9E,KAAK01E,SAML11E,KAAKm1E,MAOLn1E,KAAK21E,YAAa,EAOlB31E,KAAKyjB,IAMLzjB,KAAK41E,SAML51E,KAAKgqD,KAAO5xB,EAMZp4B,KAAK6zC,SAAW9X,EAMhB/7B,KAAKq8B,gBAAkBx8B,EAMvBG,KAAK2zC,SAAWN,EAMhBrzC,KAAK+0E,aAAeD,EAMpB90E,KAAK61E,YAAcJ,EAMnBz1E,KAAK81E,aAAeriC,EAMpBzzC,KAAK6sC,iBAAmBjtC,EAMxBI,KAAK+1E,gBAAkB,MA7FzBR,GAAQniC,oJAoGRmiC,GAAQniC,YAAYz4C,UAAUm7C,QAAU,WACtC91C,KAAK+1E,gBAAkB/1E,KAAK6sC,iBAAiB/iB,gBAAgB9pB,KAAK8E,IAChE8rC,GAAA,EAAQolC,qBACVh2E,KAAKi2E,eAAej2E,KAAK+1E,kBAO3BR,GAAQniC,YAAYz4C,UAAUu7E,iBAAmB,SAAS3vD,GAAK,IAAAhkB,EAAAvC,KAC7DA,KAAK6zC,SAAS,WACZ,IAAMlxC,EAAQ4jB,EAAI2F,QAClB6b,EAAA,EAAYvhB,iBAAiB7jB,EAAOwzE,EAAA,GACpC5zE,EAAK0zE,eAAetzE,MASxB4yE,GAAQniC,YAAYz4C,UAAUy7E,oBAAsB,SAAS7vD,GAC3D,IAAM5jB,EAAQ4jB,EAAI2F,QAClB6b,EAAA,EAAYvhB,iBAAiB7jB,EAAOwzE,EAAA,GACpCn2E,KAAKq2E,iBAAiB1zE,IAQxB4yE,GAAQniC,YAAYz4C,UAAUs7E,eAAiB,SAAStzE,GAAO,IAAAuD,EAAAlG,KAEvDs2E,EAAWxlC,EAAA,EAAcnuC,GAE/B,GAAIA,aAAiBupC,EAAA,EAGnBlsC,KAAK81E,aAAalyC,eAChB0yC,EACAnoC,EAAA,EACExrC,EAAMsnB,YACN,MACAjqB,KAAKk2E,iBACLl2E,OAGJA,KAAK81E,aAAalyC,eAChB0yC,EACAnoC,EAAA,EACExrC,EAAMsnB,YACN,SACAjqB,KAAKo2E,oBACLp2E,OAKJ2C,EAAMsnB,YAAY/mB,QAAQ,SAACP,GACzBuD,EAAK+vE,eAAetzE,SAGjB,CAGL,IAAMujC,EAAcvjC,EAAMjG,IAAI,eAC1BwpC,GAAex2B,MAAMC,QAAQu2B,IAC/BA,EAAYhjC,QAAQ,SAAC+iC,GACnB//B,EAAKqwE,uBAAuBtwC,OAWpCsvC,GAAQniC,YAAYz4C,UAAU07E,iBAAmB,SAAS1zE,GAAO,IAAAqE,EAAAhH,KAEzDs2E,EAAWxlC,EAAA,EAAcnuC,GAE/B,GAAIA,aAAiBupC,EAAA,EAGnBlsC,KAAK81E,aAAahyC,iBAAiBwyC,GAGnC3zE,EAAMsnB,YAAY/mB,QAAQ,SAAAP,GAAA,OAASqE,EAAKqvE,iBAAiB1zE,SAEpD,CAGL,IAAMujC,EAAcvjC,EAAMjG,IAAI,eAC1BwpC,GAAex2B,MAAMC,QAAQu2B,IAC/BA,EAAYhjC,QAAQ,SAAC+iC,GACnBj/B,EAAKwvE,wBAAwBvwC,OAQrCsvC,GAAQniC,YAAYz4C,UAAUqpE,WAAa,WACzChkE,KAAKq2E,iBAAiBr2E,KAAK+1E,kBAQ7BR,GAAQniC,YAAYz4C,UAAU47E,uBAAyB,SAAS9yD,GAC9DA,EAAMzjB,KAAKq8B,gBAAgB52B,UAAUge,GACjCzjB,KAAK01E,UACH11E,KAAK41E,MAAMn0D,QAAQgC,GAAO,GAC5BzjB,KAAK41E,MAAMn7E,KAAKgpB,GAElBzjB,KAAKyjB,IAAL,GAAczjB,KAAKgqD,KAAK1xB,YAAYt4B,KAAK41E,MAAMruE,KAAK,WACpDvH,KAAK21E,YAAa,GAElB31E,KAAK61E,YAAYpuE,OACf0tE,MAAOn1E,KAAKm1E,MACZ1xD,IAAKA,EACLgD,OAAQzmB,KAAK2zC,SACbj2C,KAAMqwE,EAAA,EAAmBlhE,KAAKuW,WAUpCmyD,GAAQniC,YAAYz4C,UAAU67E,wBAA0B,SAAS/yD,GAC/DA,EAAMzjB,KAAKq8B,gBAAgB52B,UAAUge,GACjCzjB,KAAK01E,UACP11E,KAAK21E,YAAa,EAClB31E,KAAK41E,MAAMr7E,OAAS,EACpByF,KAAKyjB,IAAM,IAEXzjB,KAAK61E,YAAY/8B,OACfq8B,MAAOn1E,KAAKm1E,MACZ1xD,IAAKA,EACLgD,OAAQzmB,KAAK2zC,SACbj2C,KAAMqwE,EAAA,EAAmBlhE,KAAKuW,WAuDpCmyD,GAAQ3iC,YACN7iB,WAAYwlD,GAAQniC,YACpB+vB,UACEgS,MAAS,uBACTrwE,IAAO,oBACP4wE,SAAY,0BACZC,WAAc,oCACdlyD,IAAO,+BAKX8xD,GAAQjS,UAAU,gBAAiBiS,GAAQ3iC,YAG3C,IAAA6jC,GAAA,yPCvWA,IAAMC,GAAA56E,WAqBJ,SAAAA,EAAY6wB,GAAY,IAAApqB,EAAAvC,kGAAA22E,CAAA32E,KAAAlE,GAMtBkE,KAAK+sB,WAAaJ,EAQlB3sB,KAAK42E,qBAAuB,KAM5B52E,KAAK62E,2BAOL72E,KAAK82E,iBAAmB,mBAMxB92E,KAAK4gD,kBAAmB,EAExB,IACM,iBAAkBzjD,QACpBA,OAAO+jD,aAAP,KAA8B,UACvB/jD,OAAO+jD,aAAP,MAEPlhD,KAAK4gD,kBAAmB,EAE1B,MAAOQ,GACPp9C,QAAQC,MAAMm9C,GACdphD,KAAK4gD,kBAAmB,EAO1B5gD,KAAK+2E,UAEL/2E,KAAK+sB,WAAWqrC,iBACd,kBAAM71D,EAAKy0E,OACX,WACEz0E,EAAK00E,sCAILj3E,KAAK4gD,kBACP5gD,KAAKk3E,6BAlFL,OAAAp7E,EAAAq+B,SAAA,cAAAr+B,EAAAnB,UAqHJu8E,2BArHI,WAsHF,GAAI/5E,OAAO+jD,aAAalhD,KAAK82E,kBAAmB,CAC9C,IAAME,EAAQG,KAAKC,MAAMj6E,OAAO+jD,aAAalhD,KAAK82E,mBAClD/uC,EAAA,EAAY9oB,YAAY+3D,GACxBh3E,KAAK+2E,OAASC,IAzHdl7E,EAAAnB,UAqIJ08E,YArII,SAqIQj7E,EAAMksB,GAIhB,IAFA,IAAI5lB,SACA40E,GAAO,EACFj9E,EAAI,EAAG+G,EAAKpB,KAAK+2E,OAAOx8E,OAAQF,EAAI+G,EAAI/G,IAE/C,IADAqI,EAAO1C,KAAKg3E,MAAM38E,IACTo4D,eAAiBnqC,GAAM5lB,EAAKtG,OAASA,EAAM,CAClDk7E,EAAMj9E,EACN,MAIJ,OAAOi9E,GAjJLx7E,EAAAnB,UAwJJu9C,KAxJI,SAwJCx1C,GAGH,IAAM40E,EAAMt3E,KAAKq3E,YAAY30E,EAAKtG,KAAMsG,EAAK+vD,eAChC,IAAT6kB,EACFt3E,KAAKg3E,MAAMM,GAAO50E,EAElB1C,KAAKg3E,MAAMv8E,KAAKiI,GAId1C,KAAK4gD,kBACP5gD,KAAKu3E,4BApKLz7E,EAAAnB,UA4KJ8zC,OA5KI,SA4KG/rC,GAGSO,EAAA,EAAejD,KAAKg3E,MAAOt0E,IAG5B1C,KAAK4gD,kBAChB5gD,KAAKu3E,4BAnLLz7E,EAAAnB,UA2LJ48E,yBA3LI,WA4LFp6E,OAAO+jD,aAAalhD,KAAK82E,kBAAoBK,KAAKK,UAAUx3E,KAAKg3E,QA5L/Dl7E,EAAAnB,UAkMJs8E,kCAlMI,WAuMF,GAHAj3E,KAAK62E,wBAAwBt8E,OAAS,EAGJ,OAA9ByF,KAAK42E,qBACP,KAAApnE,EAAmBxP,KAAKg3E,MAAxBvnE,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAA+B,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAjV,OAAA,MAAAwV,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAhT,MAAA,IAApB8F,EAAoBqN,EACzBrN,EAAK+vD,eAAiBzyD,KAAK42E,sBAC7B52E,KAAK62E,wBAAwBp8E,KAAKiI,MA1MtC+0E,GAAA37E,IAAAgO,IAAA,yBAAApN,IAAA,WA4FF,OAAOsD,KAAK62E,2BA5FV/sE,IAAA,sBAAAlH,IAAA,SAmGoB0lB,GACtBtoB,KAAK42E,qBAAuBtuD,EAC5BtoB,KAAKi3E,uCArGHntE,IAAA,QAAApN,IAAA,WA6GF,OAAOsD,KAAK+2E,WA7GVj7E,KAmNN46E,GAAQ36E,OAASkM,QAAQlM,OAAO,sBAEhC26E,GAAQ36E,OAAOoM,QAAQ,kBAAmBuuE,IAS1CA,GAAQgB,KAAO,aAQfhB,GAAQgB,KAAK/8E,UAAU4C,UAQvBm5E,GAAQgB,KAAK/8E,UAAUg9E,YAQvBjB,GAAQgB,KAAK/8E,UAAU83D,aAQvBikB,GAAQgB,KAAK/8E,UAAUi9E,cAQvBlB,GAAQgB,KAAK/8E,UAAUyB,KAGvB,IAAAy7E,GAAA,+NCtOA,IAAMC,GAAU7vE,QAAQlM,OAAO,YAC7Bg8E,GAAA,EAAkB37E,KAClB07D,EAAA,EAAqB/7D,OAAOK,KAC5B47E,GAAA,EAAsBj8E,OAAOK,KAC7B67E,GAAA,EAA4B77E,KAC5BwuC,GAAA,EAAsB7uC,OAAOK,KAC7B87E,GAAA,EAAwBn8E,OAAOK,OA0BjC,SAAS+7E,GAAoBvrD,EAAQurD,GACnC,OAAOA,EAAoBvrD,GAvB7BkrD,GAAQrlC,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,4BAA6Bj3C,EAAQ,SAI1Do8E,GAAQl7E,MAAM,sBAKZ,SAACgwB,GACC,IAAMsmB,EAActmB,EAAA,oBACpB,YAAuB1sB,IAAhBgzC,EAA4BA,EACjC,0EAiBN4kC,GAAQM,gBAAR,WAgBE,SAAA7U,EAAY1jE,EAAgB6sB,EAAQqP,EAAUqL,EAC5CmpB,EAAgB7c,GAAqB,IAAA2kC,EAAAC,+FAAAC,CAAAv4E,KAAAujE,GAQrCvjE,KAAKw4E,eAMLx4E,KAAK8E,IAOL9E,KAAK2nC,KAML3nC,KAAKy4E,UASLz4E,KAAKq8B,gBAAkBx8B,EAMvBG,KAAK4zC,OAASlnB,EAMd1sB,KAAK6zC,SAAW9X,EAMhB/7B,KAAKsnC,mBAAqBF,EAM1BpnC,KAAKywD,gBAAkBF,EAMvBvwD,KAAKk0C,qBAAuBR,EAY5B1zC,KAAK+d,MAEL,IAAM26D,EAAe5xC,GAAA,EAAa/8B,aAC5B4uE,EAAsB7xC,GAAA,EAAap8B,oBACnCkuE,EAAuB9xC,GAAA,EAAa78B,qBAM1CjK,KAAKmJ,YAALkvE,MACGK,EAAavuE,UAAWtK,EAAe4F,UAAU,eADpD4yE,EAEGK,EAAatuE,cAAevK,EAAe4F,UAAU,mBAFxD4yE,EAGGK,EAAaruE,0BAA2BxK,EAAe4F,UACtD,+BAJJ4yE,EAKGK,EAAapuE,aAAczK,EAAe4F,UAAU,kBALvD4yE,EAMGK,EAAanuE,yBAA0B1K,EAAe4F,UACrD,8BAPJ4yE,EAQGK,EAAajuE,cAAe5K,EAAe4F,UAAU,mBARxD4yE,EASGK,EAAaluE,MAAO3K,EAAe4F,UAAU,YAThD4yE,EAUGM,EAAoBhuE,UAAW9K,EAAe4F,UAAU,YAV3D4yE,EAWGM,EAAoB/tE,YAAa/K,EAAe4F,UAAU,cAX7D4yE,EAYGM,EAAoB9tE,QAAShL,EAAe4F,UAAU,gBAZzD4yE,EAaGO,EAAqB9tE,QAASjL,EAAe4F,UAAU,aAb1D4yE,EAcGO,EAAqB1uE,QAASrK,EAAe4F,UAAU,UAd1D4yE,EAeGO,EAAqB7tE,MAAOlL,EAAe4F,UAAU,WAfxD4yE,EAgBGO,EAAqB5tE,QAASnL,EAAe4F,UAAU,eAhB1D4yE,GAuBAr4E,KAAK64E,uBAALP,MACGI,EAAavuE,UAAW,IAD3BmuE,EAEGI,EAAatuE,cAAe,IAF/BkuE,EAGGI,EAAaruE,0BAA2B,KAH3CiuE,EAIGI,EAAapuE,aAAc,IAJ9BguE,EAKGI,EAAanuE,yBAA0B,KAL1C+tE,EAMGI,EAAajuE,cAAe,KAN/B6tE,EAOGI,EAAaluE,MAAO,IAPvB8tE,EAQGM,EAAqB9tE,QAAS,KARjCwtE,EASGM,EAAqB7tE,MAAO,KAT/ButE,EAUGM,EAAqB5tE,QAAS,IAVjCstE,GAmBAt4E,KAAK84E,eACHC,OAAQ,aACR9zB,SAAU,KACVF,SAAU,KACVM,YAAarlD,KAAKg5E,cAClB7zB,YAAanlD,KAAKi5E,qBAClBn3C,KAAM,QACNo3C,UAAW,EAAG,EAAG,EAAG,IAStBl5E,KAAKm5E,eACHJ,OAAQ,aACR9zB,SAAU,KACVF,SAAU,KACVM,YAAarlD,KAAKg5E,cAClB7zB,YAAanlD,KAAKg5E,cAClBl3C,KAAM,QACNo3C,UAAW,EAAG,EAAG,EAAG,IAOtBl5E,KAAKo5E,cAMLp5E,KAAKq5E,gBASLr5E,KAAKs5E,YAAa,EAMlBt5E,KAAKu5E,iBAAmB,IAAIC,GAAA,EAAqBx5E,KAAM,cAMvDA,KAAKy5E,cAAgB,IAAIzuC,GAAA,EAMzBhrC,KAAKk1C,MAAQ,KAMbl1C,KAAK05E,iBAAmB,IAAI1uC,GAAA,EAM5BhrC,KAAK80C,cAAgB,IAAI9J,GAAA,EAMzBhrC,KAAKg1C,QAAU,IAAI2kC,GAAA,GACjB18D,SAAUjd,KAAK05E,iBACfriE,MAAO+vB,EAAkBlwB,gBAAe,KAE1ClX,KAAK80C,cAAcr6C,KAAKuF,KAAKg1C,SAM7Bh1C,KAAKu1C,QAAU,IAAIqkC,GAAA,GACjB38D,SAAUjd,KAAK05E,iBACfriE,MAAO,IAAIwiE,GAAA,GACThhE,KAAM,IAAIkuB,GAAA,GACRluB,KAAM,IACNyF,KAAM,0BACNlF,KAAM,IAAI0gE,GAAA,GACR3hE,MAAO,kBAKfnY,KAAK80C,cAAcr6C,KAAKuF,KAAKu1C,SAM7Bv1C,KAAKs1C,WAAa,IAAIykC,GAAA,GACpB98D,SAAUjd,KAAK05E,iBACfriE,MAAO,IAAIwiE,GAAA,GACThhE,KAAM,IAAIkuB,GAAA,GACRluB,KAAM,IACNyF,KAAM,0BACNlF,KAAM,IAAI0gE,GAAA,GACR3hE,MAAO,kBAKfnY,KAAK80C,cAAcr6C,KAAKuF,KAAKs1C,YAM7Bt1C,KAAK2jC,iBAEL3jC,KAAKi3C,0BAMLj3C,KAAKi1C,mBAAqB,IAAIukC,GAAA,EAC5Bx5E,KAAKg1C,QACL,UAOFh1C,KAAKw1C,mBAAqB,IAAIgkC,GAAA,EAC5Bx5E,KAAKu1C,QACL,UAOFv1C,KAAKy1C,sBAAwB,IAAI+jC,GAAA,EAC/Bx5E,KAAKs1C,WACL,UAQFt1C,KAAK01C,SAAW,KAtTpB,OAAA6tB,EAAAppC,SAAA,iGAAAopC,EAAA5oE,UA8TEm7C,QA9TF,WA8TY,IAAAvzC,EAAAvC,KACRA,KAAK+d,MAAQ/d,KAAKywD,gBAAgBroB,UAAUpoC,KAAK2nC,MAEjD3nC,KAAKo5E,cAAgB,IAAII,GAAA,EAAqBx5E,KAAK2nC,KAAM,UAEzD3nC,KAAKk0C,qBAAqBqG,aACxBv6C,KAAKy4E,UAAWz4E,KAAKo5E,eAEvBp5E,KAAK4zC,OAAO3mB,OACV,kBAAM1qB,EAAKolC,KAAKp/B,QAChBvI,KAAKg6E,oBAAoB38E,KAAK2C,OAU5BA,KAAK+d,MAAMrgB,OAASmpC,EAAA,EAAwB3nC,MAC5Cc,KAAK+d,MAAMrgB,OAASmpC,EAAA,EAAwB1nC,UAG9Ca,KAAKq5E,aAAa5+E,KAAKuF,KAAK4zC,OAAO3mB,OACjC,kBAAM1qB,EAAKwb,MAAMvU,iBACjB,SAACoX,GACCre,EAAK42E,cAAcp0B,SAAWnkC,KAIlC5gB,KAAKq5E,aAAa5+E,KAAKuF,KAAK4zC,OAAO3mB,OACjC,kBAAM1qB,EAAKwb,MAAMrV,eACjB,SAACkY,GACCre,EAAKu2E,cAAc/zB,SAAWnkC,KAIlC5gB,KAAKq5E,aAAa5+E,KAAKuF,KAAK4zC,OAAO3mB,OACjC,kBAAM1qB,EAAKwb,MAAMjV,eACjB,SAAC8X,GACCre,EAAKu2E,cAAc7zB,SAAWrkC,MAGzB5gB,KAAK+d,MAAMrgB,OAASmpC,EAAA,EAAwBxnC,WAKrDW,KAAKq5E,aAAa5+E,KAAKuF,KAAK4zC,OAAO3mB,OACjC,kBAAM1qB,EAAKwb,MAAMnV,UACjB,SAACgY,GACC,GAAIA,GACAA,IAAWkmB,GAAA,EAAap8B,oBAAoBC,SAC9C,CACA,IAAMoT,EAAQgqB,EAAA,EAAYvhB,iBACxBjkB,EAAKwb,MAAO6pB,GAAA,GAEd,GADiB7pB,EAAMlH,QAAQuE,cACjB,CACZ,IAAMs6B,EAAWnzC,EAAK+kC,mBAAmBhwB,QAAQyG,EAAMlH,SACjDojE,GACJC,GAAA,EAAiBt8E,OACjBs8E,GAAA,EAAiBh8E,QACjBg8E,GAAA,EAAiB/7E,WAEd8E,EAAA,EAAiBg3E,EAAgBvkC,IACpCnzC,EAAKwb,MAAMtU,cAAc,WAQnCzJ,KAAKq5E,aAAa5+E,KAAKuF,KAAK4zC,OAAO3mB,OACjC,kBAAM1qB,EAAKwb,MAAMvV,YACjB,SAACoY,GACC,GAAIA,EAAQ,CACV,IAAM7C,EAAQgqB,EAAA,EAAYvhB,iBACxBjkB,EAAKwb,MAAO6pB,GAAA,GACdrlC,EAAKmzC,SAAWnzC,EAAK+kC,mBAAmBhwB,QAAQyG,EAAMlH,cAEtDtU,EAAKmzC,SAAW,QAQtB11C,KAAKq5E,aAAa5+E,KAAKuF,KAAK4zC,OAAO3mB,OACjC,WACE,IAAMktD,EAA+C,OAA/B53E,EAAKwb,MAAMvU,gBAC3B4wE,GAAgC,IAArB73E,EAAKolC,KAAKp/B,OACrB8xE,EAAmB93E,EAAKyyC,QAAQt0B,aAChCne,EAAKgzC,QAAQ70B,aACbne,EAAK+yC,WAAW50B,YACtB,OAAOy5D,GAAiBC,GAAYC,GAEtC,SAACz5D,GACC,GAAIA,EAAQ,CACV,IAAM7C,EAAQgqB,EAAA,EAAYvhB,iBACxBjkB,EAAKwb,MAAO6pB,GAAA,GACdrlC,EAAKm3E,iBAAiBj/E,KAAKsjB,EAAMlH,cAEjCtU,EAAKm3E,iBAAiB70D,aAvalC0+C,EAAA5oE,UAibEqpE,WAjbF,WAkbQhkE,KAAK2nC,KAAKp/B,SACZvI,KAAK2nC,KAAKp/B,QAAS,EAGnBvI,KAAKg6E,qBAAoB,GAAO,IAElCh6E,KAAKk0C,qBAAqBsG,eACxBx6C,KAAKy4E,UAAWz4E,KAAKo5E,eACvB,IAAK,IAAI/+E,EAAI,EAAG+G,EAAKpB,KAAKq5E,aAAa9+E,OAAQF,EAAI+G,EAAI/G,IACrD2F,KAAKq5E,aAAah/E,KAEpB2F,KAAKq5E,aAAa9+E,OAAS,EAC3ByF,KAAK+d,MAAMpU,WA9bf45D,EAAA5oE,UAocE2/E,OApcF,WAqcQt6E,KAAK2nC,KAAKp/B,OACZvI,KAAKq+B,SAELr+B,KAAK2nC,KAAKp/B,QAAS,GAxczBg7D,EAAA5oE,UAgdEO,MAhdF,WAidI8E,KAAKywD,gBAAgBpoB,WAAWroC,KAAK+d,MAAO/d,KAAK2nC,MACjD3nC,KAAK2nC,KAAKp/B,QAAS,GAldvBg7D,EAAA5oE,UAydE0jC,OAzdF,WA0dIr+B,KAAKywD,gBAAgBpoB,WAAWroC,KAAK2nC,KAAM3nC,KAAK+d,OAChD/d,KAAK2nC,KAAKp/B,QAAS,GA3dvBg7D,EAAA5oE,UAkeE+O,MAleF,WAmeI1J,KAAK+d,MAAMrU,QACX1J,KAAK2nC,KAAKj+B,SAped65D,EAAA5oE,UA6eE4/E,sBA7eF,SA6ewB9J,GACpB,IAAM9oC,EAAOI,EAAA,EAAYvhB,iBAAiBxmB,KAAK+d,MAAO8pB,GAAA,GAChDC,EAAUH,EAAKn+B,gBAAkBm+B,EAAKn+B,gBAAgB6M,MAAM,QAC5DihE,EAAMxvC,EAAQrmB,QAAQgvD,GACxB6G,GAAO,EACTxvC,EAAQrsC,OAAO67E,EAAK,GAEpBxvC,EAAQrtC,KAAKg2E,GAEf9oC,EAAKl+B,cAAcq+B,EAAQvtC,OAASutC,EAAQvgC,KAAK,KAAO,OAtf5Dg8D,EAAA5oE,UA8fE6/E,eA9fF,SA8fiBp5C,GACbphC,KAAK+d,MAAMtU,cAAc23B,EAAA,QA/f7BmiC,EAAA5oE,UAsgBE8/E,oBAtgBF,SAsgBsBr5C,GAClBphC,KAAK+d,MAAMrV,cAAgB04B,EAAA,MAC3BphC,KAAK+d,MAAMjV,cAAgBs4B,EAAA,KAxgB/BmiC,EAAA5oE,UAghBEq+E,YAhhBF,SAghBc0B,GAEV,IAAMt5C,EAAO,IAAIC,KAEjB,QAAsBnhC,IAAlBw6E,EAA6B,CAC/B,IAAMjnE,EAAO2tB,EAAKyjB,UAAY61B,EAC9Bt5C,EAAKu5C,QAAQlnE,GAGf,OAAO2tB,EAAKM,eAzhBhB6hC,EAAA5oE,UAgiBEs+E,mBAhiBF,WAiiBI,OAAOj5E,KAAKg5E,YAAY,SAjiB5BzV,EAAA5oE,UAyiBEigF,WAziBF,SAyiBannE,GAET,OADa,IAAI4tB,KAAK5tB,GACVonE,sBA3iBhBtX,EAAA5oE,UA4jBEq/E,oBA5jBF,SA4jBsBzxE,EAAQuyE,GAE1B,GAAM96E,KAAK2nC,gBAAgBC,GAAA,GACrB5nC,KAAK+d,iBAAiB6pB,GAAA,GACxBr/B,IAAWuyE,EAFf,CAOA,IAAM9gC,EAAOh6C,KAAK2jC,cACZnW,GAAO,aAAcsjB,EAAA,EAAc9wC,OAAOuH,KAAK,KAC/C4yC,EAAUn6C,KAAKk0C,qBAEf6mC,EAAc/6E,KAAK2nC,KAAK9wB,QACxBmkE,EAAeh7E,KAAK+d,MAAMlH,QAE1B4jC,EAASz6C,KAAK8E,IAAI41C,cACxB3S,EAAA,EAAY4S,cAAcF,GAEtBlyC,GACFyxC,EAAKv/C,KACH0zC,EAAA,EACEnuC,KAAKy5E,cACL,MACAz5E,KAAKu6D,mBACLv6D,OAIJg6C,EAAKv/C,KACH0zC,EAAA,EACEsM,EACA,cACAz6C,KAAK66C,sBACL76C,OAIJg6C,EAAKv/C,KACH0zC,EAAA,EACEnuC,KAAKs1C,WACL,eACAt1C,KAAKq6C,oBACLr6C,OAIJg6C,EAAKv/C,KACH0zC,EAAA,EACEnuC,KAAKu1C,QACL,YACAv1C,KAAKs6C,iBACLt6C,OAIJA,KAAKw4E,eAAe5zD,cAAcm2D,GAClC/6E,KAAKw4E,eAAe/zD,WAAWu2D,GAE/Bh7E,KAAK+7C,wBAEL5B,EAAQI,aAAa/sB,EAAKxtB,KAAKu5E,kBAAkB,GACjDp/B,EAAQI,aAAa/sB,EAAKxtB,KAAKi1C,oBAAoB,GACnDkF,EAAQI,aAAa/sB,EAAKxtB,KAAKw1C,oBAAoB,GACnD2E,EAAQI,aAAa/sB,EAAKxtB,KAAKy1C,uBAAuB,GAEtDz1C,KAAKg1C,QAAQr0B,WAAU,GAEnBq6D,EAAa5/D,eACfpb,KAAKsnC,mBAAmB1wB,SAASokE,GAAc,KAIjDA,EAAapkE,SAAS,MACtBojC,EAAK92C,QAAQirC,EAAA,GACb6L,EAAKz/C,OAAS,EAEdyF,KAAKs5E,YAAa,EAElBn/B,EAAQK,eAAehtB,EAAKxtB,KAAKu5E,kBACjCp/B,EAAQK,eAAehtB,EAAKxtB,KAAKi1C,oBACjCkF,EAAQK,eAAehtB,EAAKxtB,KAAKw1C,oBACjC2E,EAAQK,eAAehtB,EAAKxtB,KAAKy1C,uBAEjCz1C,KAAKg1C,QAAQr0B,WAAU,GAEvB3gB,KAAKi8C,0BAEDj8C,KAAK05E,iBAAiBvxB,aACxBnoD,KAAKw4E,eAAe5zD,cAAco2D,GAEpCh7E,KAAKw4E,eAAe/zD,WAAWs2D,GAE/B/6E,KAAK05E,iBAAiB70D,WAzpB5B0+C,EAAA5oE,UAiqBEs8C,wBAjqBF,WAkqBIj3C,KAAK80C,cAAc5xC,QAAQ,SAAC8+B,GAC1BA,EAAYrhB,WAAU,GACtBs6D,GAAA,EAAiBj5C,YAAYA,MApqBnCuhC,EAAA5oE,UA4qBEohD,sBA5qBF,WA4qB0B,IAAA71C,EAAAlG,KACtBA,KAAK80C,cAAc5xC,QAAQ,SAAC8+B,GAC1B97B,EAAKpB,IAAI6uB,eAAeqO,MA9qB9BuhC,EAAA5oE,UAsrBEshD,wBAtrBF,WAsrB4B,IAAAj1C,EAAAhH,KACxBA,KAAK80C,cAAc5xC,QAAQ,SAAC8+B,GAC1Bh7B,EAAKlC,IAAI4uB,kBAAkBsO,MAxrBjCuhC,EAAA5oE,UAgsBE4/D,mBAhsBF,SAgsBqBh0C,GAAK,IAAAgY,EAAAv+B,KAEtBA,KAAK6zC,SAAS,WAEZ,IAAM91B,EAAQgqB,EAAA,EAAYvhB,iBACxB+X,EAAKxgB,MAAO6pB,GAAA,GACR/wB,EAAUkH,EAAMlH,QAGhBqkE,EAAenzC,EAAA,EAAYvhB,iBAC/BD,EAAI2F,QACJk7B,GAAA,GAEI/sC,EAAW0tB,EAAA,EAAYvhB,iBAC3B00D,EAAa9/D,cACb+/D,GAAA,GAEFp9D,EAAM1D,SAAWA,EAGjBkkB,EAAK+6C,YAAa,EAGlB,IAAM78D,EAAa8hB,EAAK+I,mBAAmBnnB,wBACzC+6D,GACF38C,EAAK+I,mBAAmBjnB,0BAA0BxJ,GAClDA,EAAQ4kB,cAAchf,GACtB8hB,EAAK+I,mBAAmB1wB,SAASC,GAAS,GAE1C0nB,EAAKqV,OAAOqF,YA7tBlBsqB,EAAA5oE,UAsuBEygF,oBAtuBF,WAuuBI,IAAMzzC,EAAOI,EAAA,EAAYvhB,iBAAiBxmB,KAAK2nC,KAAMC,GAAA,GACrD,OAAO5nC,KAAKsnC,mBAAmBhwB,QAAQqwB,EAAK9wB,UAxuBhD0sD,EAAA5oE,UA+uBEkgD,sBA/uBF,SA+uBwBt0B,GAAK,IAAAmY,EAAA1+B,KAGzBA,KAAKq7E,cAGL,IAAMvgC,EAAQ96C,KAAK8E,IAAIy2C,cAAch1B,GAC/B+M,EAAatzB,KAAK8E,IAAI02C,uBAAuBV,GAE/CjkC,EAAU7W,KAAK8E,IAAIi2C,sBACrBD,EACA,SAACjkC,GACC,IAAImkC,GAAM,EAIV,OAHI/3C,EAAA,EAAiBy7B,EAAKg7C,iBAAiBxvD,WAAYrT,KACrDmkC,EAAMnkC,GAEDmkC,IAQL5F,KACN,GALAv+B,EAAUA,GAAoB,KAKjB,CAEX,IAAMnZ,EAAOsC,KAAKsnC,mBAAmBhwB,QAAQT,GACtChX,EAAiBG,KAAKq8B,gBAEzB3+B,GAAQw8E,GAAA,EAAiBt8E,QACzBF,GAAQw8E,GAAA,EAAiBr8E,aACzBH,GAAQw8E,GAAA,EAAiBh8E,SACzBR,GAAQw8E,GAAA,EAAiB/7E,WAC3Bi3C,EAAQ36C,MACN46C,IAAK,eACL3vC,MAAO7F,EAAe4F,UAAU,QAChCrJ,KAAM,SAGNsB,GAAQw8E,GAAA,EAAiBr8E,aACzBH,GAAQw8E,GAAA,EAAiBh8E,SACzBR,GAAQw8E,GAAA,EAAiB/7E,WAC3Bi3C,EAAQ36C,MACN46C,IAAK,qBACL3vC,MAAO7F,EAAe4F,UAAU,UAChCrJ,KAAM,WAKRg5C,EAAQ76C,SAEVyF,KAAKk1C,MAAQ,IAAIomC,GAAA,GACflmC,YAGFjH,EAAA,EACEnuC,KAAKk1C,MACL,cACAl1C,KAAKo6C,uBACLp6C,MAEFA,KAAK8E,IAAI4vB,WAAW10B,KAAKk1C,OAEzBl1C,KAAKk1C,MAAMwG,KAAKpoB,GAEhB/M,EAAIo1B,iBACJp1B,EAAIq1B,kBAEJ57C,KAAK4zC,OAAOqF,WArzBlBsqB,EAAA5oE,UA6zBE0gF,YA7zBF,WA8zBQr7E,KAAKk1C,QACP/G,EAAA,EACEnuC,KAAKk1C,MACL,cACAl1C,KAAKo6C,uBACLp6C,MAEFA,KAAK8E,IAAI6vB,cAAc30B,KAAKk1C,OAC5Bl1C,KAAKk1C,MAAQ,OAt0BnBquB,EAAA5oE,UA80BEy/C,uBA90BF,SA80ByB7zB,GACrB,IAAMg2B,EAASh2B,EAAI5C,OAAO44B,OAE1B,OAAQA,GACN,IAAK,OACHv8C,KAAKs1C,WAAW30B,WAAU,GAC1B3gB,KAAK4zC,OAAOqF,SACZ,MACF,IAAK,SACHj5C,KAAKu1C,QAAQ50B,WAAU,GACvB3gB,KAAK4zC,OAAOqF,SACZ,MACF,QACEj1C,QAAQmyB,IAAR,oBAAgComB,KA31BxCgnB,EAAA5oE,UAo2BE2/C,iBAp2BF,SAo2BmB/zB,GACfvmB,KAAKu1C,QAAQ50B,WAAU,GACvB3gB,KAAK4zC,OAAOqF,UAt2BhBsqB,EAAA5oE,UA62BE0/C,oBA72BF,SA62BsB9zB,GAClBvmB,KAAKs1C,WAAW30B,WAAU,GAC1B3gB,KAAK4zC,OAAOqF,UA/2BhBsqB,EAAA,GA63BAuU,GAAQxU,UAAU,YAChBH,UACEqV,eAAkB,IAClB1zE,IAAO,IACP6iC,KAAQ,IACR8wC,UAAa,KAEf1oD,WAAY+nD,GAAQM,gBACpBllC,YAAailC,KAIf,IAAAoD,GAAA,GCn8BA,IAAMC,GAAUvzE,QAAQlM,OAAO,cAC7B+7D,EAAA,EAAqB/7D,OAAOK,KAC5Bm/E,GAAwBn/E,KACxB47E,GAAA,EAAsBj8E,OAAOK,KAC7Bq/E,GAAA,EAAoB1/E,OAAOK,OA0B7B,SAASs/E,GAAsB9uD,EAAQ8uD,GACrC,OAAOA,EAAsB9uD,GAvB/B4uD,GAAQ/oC,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,cAAej3C,EAAQ,SAI5C8/E,GAAQ5+E,MAAM,wBAKZ,SAACgwB,GACC,IAAMsmB,EAActmB,EAAA,sBACpB,YAAuB1sB,IAAhBgzC,EAA4BA,EACjC,8DAcNsoC,GAAQlY,UAAU,cAChBH,UACEwY,cAAiB,IACjBhE,YAAe,IAGfiE,WAAc,IACdhE,cAAiB,IACjBY,eAAkB,IAClB1zE,IAAO,IACP2zE,UAAa,KAEf1oD,WAAY,uBACZmjB,YAAawoC,KAMfF,GAAQK,kBAAR,WAcE,SAAAtY,EAAY1jE,EAAgB6sB,EAAQqP,EAAU+/C,EAC5CvrB,gGAAgBwrB,CAAA/7E,KAAAujE,GAQhBvjE,KAAK27E,cAML37E,KAAK23E,YAML33E,KAAK47E,WAML57E,KAAK43E,cAML53E,KAAKw4E,eAMLx4E,KAAK8E,IAML9E,KAAKy4E,UASLz4E,KAAKq8B,gBAAkBx8B,EAMvBG,KAAK4zC,OAASlnB,EAMd1sB,KAAK6zC,SAAW9X,EAMhB/7B,KAAKg8E,gBAAkBF,EAMvB97E,KAAKywD,gBAAkBF,EASvBvwD,KAAK6oC,aAEDhwB,KAAMhZ,EAAe4F,UAAU,OAC/B7I,MAAOosC,GAAA,EAAoBx9B,MAG3BqN,KAAMhZ,EAAe4F,UAAU,gBAC/B7I,MAAOosC,GAAA,EAAoBrC,KAG3B9tB,KAAMhZ,EAAe4F,UAAU,QAC/B7I,MAAOosC,GAAA,EAAoBtC,MAS/B1mC,KAAKi8E,sBAOLj8E,KAAKk8E,mBAMLl8E,KAAKm8E,oBAtIT,OAAA5Y,EAAAppC,SAAA,wEAAAopC,EAAA5oE,UAgJEm7C,QAhJF,WAgJY,IAAAvzC,EAAAvC,KAERA,KAAK4zC,OAAO3mB,OACV,kBAAM1qB,EAAKo5E,eACX37E,KAAKo8E,2BAA2B/+E,KAAK2C,OAIvC,IACAwP,EADmBu4B,EAAA,EAAYtkC,OAAOzD,KAAK47E,WAAWxqE,YACtD3B,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAAoC,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAjV,OAAA,MAAAwV,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAhT,MAAA,IAAzBuW,EAAyBpD,EAC9BoD,EAAUzV,OAASmpC,EAAA,EAAwBxnC,SAC7CW,KAAKi8E,mBAAmBxhF,KAAK0Y,GAE7BnT,KAAKk8E,gBAAgBzhF,KAAK0Y,GAK9B,IACAhB,KADiBgK,OAAOnc,KAAK23E,YAAa33E,KAAK43E,eAC/CxlE,EAAA1C,MAAAC,QAAAwC,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAtC,OAAAC,cAA0B,KAAAwC,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA5X,OAAA,MAAA+X,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAnC,QAAAC,KAAA,MAAAqC,EAAAD,EAAAzV,MAAA,IAAf+qC,EAAer1B,EACxBtS,KAAKq8E,cAAc10C,GAIrB3nC,KAAK9E,SAxKTqoE,EAAA5oE,UAkLEqpE,WAlLF,WAmLwC,OAAhChkE,KAAK47E,WAAWlwE,cAClB1L,KAAK47E,WAAWlwE,YAAc,MAEhC1L,KAAKw4E,eAAe3zD,SAtLxB0+C,EAAA5oE,UA8LE2hF,SA9LF,WA+LI,SAAUngE,OAAOnc,KAAK23E,YAAa33E,KAAK43E,eAAer9E,OAAS,GA/LpEgpE,EAAA5oE,UAwMEO,MAxMF,WAwMU,IAAAgL,EAAAlG,KAENA,KAAK47E,WAAWlwE,YAAc,KAG9B1L,KAAK6zC,SAAS,WACZ,IAAMnoC,EAAcxF,EAAKq2E,qBACrB7wE,EAAYnR,SACd2L,EAAK01E,WAAWlwE,YAAcA,EAE9BxF,EAAK81E,gBAAgBn3D,YAlN7B0+C,EAAA5oE,UA6NE6hF,QA7NF,WA8NI,IAAM9wE,EAAc1L,KAAKu8E,qBAGzB,GAAK7wE,EAAYnR,OAAjB,CAIA,IAAMiX,EAAaxR,KAAK47E,WAElB92E,EAAM9E,KAAK8E,IACXowD,EAAWpwD,EAAIqa,UAAUkxB,gBAAgBgjB,UACzCjuD,EAASpF,KAAKywD,gBAAgB9nB,cAClCn3B,WAAYA,EACZ9F,YAAaA,EACbq9B,QAASmsB,IAEXntB,EAAA,EAAYtkC,OAAO2B,GAEnBpF,KAAKg8E,gBAAgB5hD,OACnBE,aAAc9oB,GACdpM,OAAQA,EACRy0B,MAbY,IAcZ/0B,IAAKA,MApPXy+D,EAAA5oE,UA8PE4hF,mBA9PF,WA+PI,IAAM7wE,KAENgH,KADiByJ,OAAOnc,KAAK23E,YAAa33E,KAAK43E,eAC/CjlE,EAAAjD,MAAAC,QAAA+C,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAA7C,OAAAC,cAA0B,KAAA+C,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAnY,OAAA,MAAAsY,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA1C,QAAAC,KAAA,MAAA4C,EAAAD,EAAAhW,MAAA,IAAf+qC,EAAe90B,EACpB80B,EAAK/qC,OACP8O,EAAYjR,KAAKktC,GAGrB,OAAOj8B,GAtQX63D,EAAA5oE,UAiRE8hF,uBAjRF,SAiRyBtpE,GACrB,IAAMw0B,EAAO3nC,KAAKywD,gBAAgB/oB,wBAAwBv0B,GAAW,GACrEnT,KAAKq8E,cAAc10C,GACnB3nC,KAAK23E,YAAYl9E,KAAKktC,GAGtB3nC,KAAK6zC,SAAS,WACZlM,EAAKp/B,QAAS,GACb,IAzRPg7D,EAAA5oE,UAiSE+hF,aAjSF,SAiSen/E,GACPyC,KAAK47E,WAAWtwE,kBAAoB/N,EAAUX,QAChDoD,KAAK47E,WAAWtwE,gBAAkB/N,EAAUX,QAnSlD2mE,EAAA5oE,UA6SEgiF,iBA7SF,SA6SmBh1C,GAAM,IAAA3gC,EAAAhH,KACrB2nC,EAAKp/B,QAAS,EACdvI,KAAK6zC,SAAS,WACZ5wC,EAAA,EAAe+D,EAAK2wE,YAAahwC,GACjC3gC,EAAK41E,gBAAgBj1C,GACrBA,EAAKh+B,aAlTX45D,EAAA5oE,UA0TE0hF,cA1TF,SA0TgB10C,GACZ,IAAMna,EAAMsjB,EAAA,EAAcnJ,GAC1B3nC,KAAKm8E,iBAAiB3uD,GAAOxtB,KAAK4zC,OAAO3mB,OACvC,kBAAM0a,EAAKp/B,QACXvI,KAAK68E,wBAAwBx/E,KAAK2C,OAGhC2nC,aAAgBC,GAAA,GAClB5nC,KAAKw4E,eAAe/zD,WAAWkjB,EAAK9wB,UAlU1C0sD,EAAA5oE,UA0UEiiF,gBA1UF,SA0UkBj1C,GACd,IAAMna,EAAMsjB,EAAA,EAAcnJ,GACpBm1C,EAAa98E,KAAKm8E,iBAAiB3uD,GACzCua,EAAA,EAAYtkC,OAAOq5E,GACnBA,WACO98E,KAAKm8E,iBAAiB3uD,GAEzBma,aAAgBC,GAAA,GAClB5nC,KAAKw4E,eAAe5zD,cAAc+iB,EAAK9wB,UAlV7C0sD,EAAA5oE,UA2VEkiF,wBA3VF,WA4VI,IAAIlB,GAAgB,EAEpB5oE,KADiBoJ,OAAOnc,KAAK23E,YAAa33E,KAAK43E,eAC/C5kE,EAAAtD,MAAAC,QAAAoD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAlD,OAAAC,cAA0B,KAAAoD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAxY,OAAA,MAAA2Y,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA/C,QAAAC,KAAA,MAAAiD,EAAAD,EAAArW,MACxB,GADwBsW,EACf3K,OAAQ,CACfozE,GAAgB,EAChB,OAGJ37E,KAAK27E,cAAgBA,GApWzBpY,EAAA5oE,UA4WEyhF,2BA5WF,WA6WI,IAAIp8E,KAAK27E,cAGT,KACA1nE,KADiBkI,OAAOnc,KAAK23E,YAAa33E,KAAK43E,eAC/C1jE,EAAAxE,MAAAC,QAAAsE,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAApE,OAAAC,cAA0B,KAAAsE,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA1Z,OAAA,MAAA6Z,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAjE,QAAAC,KAAA,MAAAmE,EAAAD,EAAAvX,MAAA,IAAf+qC,EAAevzB,EACxB,GAAIuzB,EAAKp/B,OAAQ,CACfo/B,EAAKp/B,QAAS,EACd,UApXRg7D,EAAA,GA2XAiY,GAAQzrD,WAAW,uBAAwByrD,GAAQK,mBAGnD,IAAAkB,GAAA,mBC1aA,IAAMC,GAAU/0E,QAAQlM,OAAO,qBAC7BowE,EAAA,EAAyBpwE,OAAOK,KAChCu4E,EAAA,EAAqC54E,OAAOK,KAC5Cw0E,EAAoB70E,OAAOK,KAC3B6gF,GAAA,EAAyBlhF,OAAOK,KAChCgwE,EAAA,EAAwBrwE,OAAOK,KAC/BiwE,EAAA,EAA0BjwE,KAC1B07D,EAAA,EAAqB/7D,OAAOK,KAC5B2gF,GAAoB3gF,KACpBy7E,GAAuB97E,OAAOK,OA0BhC,SAAS8gF,GAA6BtwD,EAAQswD,GAC5C,OAAOA,EAA6BtwD,GAvBtCowD,GAAQvqC,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,sCAAuCj3C,EAAQ,SAGpEshF,GAAQpgF,MAAM,+BAKZ,SAACgwB,GACC,IAAMsmB,EAActmB,EAAA,6BACpB,YAAuB1sB,IAAhBgzC,EAA4BA,EACjC,6FAkBN8pC,GAAQ5pC,YAAR,WAuBE,SAAAmwB,EAAY72C,EAAQqP,EAAUl8B,EAAgBs9E,EAC5CC,EAAsBC,EAAiBx7B,EAAS7lB,EAChDshD,EAAuB/sB,GACvB,IAAAhuD,EAAAvC,kGAAAu9E,CAAAv9E,KAAAujE,GAQAvjE,KAAKuI,OAELmkB,EAAOO,OACL,kBAAM1qB,EAAKgG,QACXvI,KAAKg6E,oBAAoB38E,KAAK2C,OAOhCA,KAAK8E,IAML9E,KAAKy4E,UASLz4E,KAAK6zC,SAAW9X,EAMhB/7B,KAAKq8B,gBAAkBx8B,EASvBG,KAAKm9E,2BAA6BA,EAElCzwD,EAAOO,OACL,kBAAM1qB,EAAK46E,2BAA2B3rE,YACtCxR,KAAKw9E,gCAAgCngF,KAAK2C,OAO5CA,KAAKy9E,sBAAwBL,EAM7Bp9E,KAAKq9E,gBAAkBA,EAGvB3wD,EAAO0rC,iBACL,kBAAM71D,EAAK86E,gBAAgBK,wBAC3B,WAC6D,IAAvDn7E,EAAK86E,gBAAgBK,uBAAuBnjF,QAC7CgI,EAAKo7E,6BACNp7E,EAAKo7E,4BAA6B,KASxC39E,KAAK49E,SAAW/7B,EAEhBn1B,EAAOO,OACL,kBAAM1qB,EAAKq7E,SAAS55B,iBACpBhkD,KAAK69E,oCAAoCxgF,KAAK2C,OAOhDA,KAAKs8B,kBAAoBN,EAMzBh8B,KAAKw4E,eAAiBzwC,EAAA,EAAYtkC,OAChC65E,EAAsBt4D,qBAOxBhlB,KAAKywD,gBAAkBF,EASvBvwD,KAAK27E,eAAgB,EAMrB37E,KAAK23E,YAAc,KAMnB33E,KAAK43E,cAAgB,KAMrB53E,KAAK89E,wBAML99E,KAAK+9E,yBAA2B,KAMhC/9E,KAAKg+E,gBAAkBZ,EAAqBj4E,WAM5CnF,KAAK2jC,iBAQL3jC,KAAKi+E,gBAAkB,KAMvBj+E,KAAKk+E,cAMLl+E,KAAKm+E,0BAA2B,EAGhCzxD,EAAOO,OACL,kBAAM1qB,EAAK47E,0BACX,WACE57E,EAAK67E,eAAiB,KAQ1Bp+E,KAAKo+E,eAAiB,GAMtBp+E,KAAK29E,4BAA6B,EAMlC39E,KAAKq+E,+BAAgC,EAErC3xD,EAAOO,OACL,kBAAM1qB,EAAK87E,+BACXr+E,KAAKs+E,0CAA0CjhF,KAAK2C,OAStDA,KAAKu+E,gCAGLv+E,KAAKw+E,gCAjPT,OAAAjb,EAAAppC,SAAA,kLAAAopC,EAAA5oE,UAwPEkjF,oCAxPF,WAyPI,IAAMY,EAAUz+E,KAAK49E,SAAS55B,gBAC1By6B,GAAWA,EAAA,kBACbz+E,KAAK+9E,yBAA2BU,EAAA,kBAEhCz+E,KAAK+9E,yBAA2B,KAE9BU,GACAA,EAAA,qBACAA,EAAA,oBAA+B,GAEjCz+E,KAAKu+E,gCAAkCE,EAAA,oBAA+B,GAEtEz+E,KAAKu+E,qCAAkCr+E,EAEzCF,KAAKw+E,iCAvQTjb,EAAA5oE,UA8QE6jF,8BA9QF,WA+QI,IAAME,IAA8B1+E,KAAK+9E,yBACrC/9E,KAAKq+E,gCAAkCK,IACzC1+E,KAAKq+E,8BAAgCK,IAjR3Cnb,EAAA5oE,UA4REq/E,oBA5RF,SA4RsBzxE,GAAQ,IAAArC,EAAAlG,KACrBuI,IACHvI,KAAK27E,eAAgB,EACrB37E,KAAK6zC,SAAS,WACZ3tC,EAAKi3E,2BAA2B3rE,WAAa,SAhSrD+xD,EAAA5oE,UA0SE2jF,0CA1SF,SA0S4CK,GACxC,IAAM3kC,EAAOh6C,KAAK2jC,cAEdg7C,GAEF3kC,EAAKv/C,KACH0zC,EAAA,EAAgBnuC,KAAKg+E,gBAAiB,MAAOh+E,KAAKoxC,sBAAuBpxC,MACzEmuC,EAAA,EAAgBnuC,KAAKg+E,gBAAiB,SAAUh+E,KAAKouC,yBAA0BpuC,OAIjFA,KAAKg+E,gBAAgB96E,QAAQlD,KAAK6rC,oBAAqB7rC,QAGvDg6C,EAAK92C,QAAQirC,EAAA,GACb6L,EAAKz/C,OAAS,EAGdyF,KAAK89E,qBAAqBvjF,OAAS,IA5TzCgpE,EAAA5oE,UAyUEy2C,sBAzUF,SAyUwB7qB,GACpB,IAAM/U,EAAa+U,EAAI2F,QACnB1a,aAAsBq/D,GACxB7wE,KAAK6rC,oBAAoBr6B,IA5U/B+xD,EAAA5oE,UAyVEyzC,yBAzVF,SAyV2B7nB,GACvB,IAAM/U,EAAa+U,EAAI2F,QACnB1a,aAAsBq/D,GACxB7wE,KAAKisC,sBAAsBz6B,IA5VjC+xD,EAAA5oE,UAyWEkxC,oBAzWF,SAyWsBr6B,GACW,OAAzBA,EAAW5F,YACb4F,EAAW5F,UAAY5L,KAAK4+E,uBAAuBptE,IAGjDA,EAAW5F,YACb5L,KAAK89E,qBAAqBrjF,KAAK+W,QAEctR,IAAzCF,KAAKu+E,iCACL/sE,EAAWpV,OAAS4D,KAAKu+E,kCAE3Bv+E,KAAKm9E,2BAA2B3rE,WAAaA,KApXrD+xD,EAAA5oE,UAgYEsxC,sBAhYF,SAgYwBz6B,GAChBA,EAAW5F,YACb3I,EAAA,EAAejD,KAAK89E,qBAAsBtsE,GAEtCxR,KAAKm9E,2BAA2B3rE,aAAeA,IACjDxR,KAAKm9E,2BAA2B3rE,WAAa,QArYrD+xD,EAAA5oE,UAkaEikF,uBAlaF,SAkayBptE,EAAYqtE,GACjC,IAAIjzE,GAAY,EACVkzE,EAAU9+E,KAAKq8B,gBACfiD,GAAwB,IAAfu/C,EACTtyD,EAAQwb,EAAA,EAAYtkC,OAAOzD,KAAK+9E,0BAChCgB,KAGN,GAAI97E,EAAA,EAAiBspB,EAAO/a,EAAWpV,OA0BrC,GAvBKoV,EAAWpB,aACd2uE,EAAKtkF,KAAKqkF,EAAQr5E,UAChB,8GAMC+L,EAAWlF,WAAckF,EAAWlF,UAAU/R,OAIvCiX,EAAWlF,UAAU,GAAGiD,WAElCwvE,EAAKtkF,KAAKqkF,EAAQr5E,UAChB,2DANFs5E,EAAKtkF,KAAKqkF,EAAQr5E,UAChB,uDASJmG,GAAamzE,EAAKxkF,OAId+kC,IAAW1zB,EAAW,CACxB,IAAMozE,EAAKF,EAAQr5E,UAAR,yGAILw5E,EAAQztE,EAAWpV,KAAnB,KAA4BoV,EAAW8W,GAAvC,KACA42D,EAAKJ,EAAQr5E,UAAR,oFAIXs5E,EAAK5nE,QAAW6nE,EAAhB,IAAsBC,EAAtB,IAA4BC,GAC5Bl7E,QAAQmf,KAAK47D,EAAKx3E,KAAK,MACvBvH,KAAKs8B,kBAAkBgD,QACrB7b,IAAKs7D,EAAKx3E,KAAK,KACf7J,KAAMqwE,EAAA,EAAmBlhE,KAAKuW,gBAIlCxX,GAAY,EAGd,OAAOA,GAzdX23D,EAAA5oE,UAieE6iF,gCAjeF,SAiekChsE,GAAY,IAAAxK,EAAAhH,KAE1CA,KAAK27E,eAAgB,EACrB37E,KAAK23E,YAAc,KACnB33E,KAAK43E,cAAgB,KACrB53E,KAAKi+E,gBAAkB,KACvBj+E,KAAKq9E,gBAAgB8B,oBAAsB,KAGtC3tE,IAKAxR,KAAKuI,SACRvI,KAAKuI,QAAS,GAGhBvI,KAAKy9E,sBAAsBrN,2BACzB5+D,GACA3N,KAAK,SAAC2N,GAIN,IAAI9O,EAAOsE,EAAKo4E,kBAAkB5tE,GAClC,IAAK9O,IACHA,GACEi1E,eACAC,kBAEF5wE,EAAKq4E,kBAAkB7tE,EAAY9O,GAC/B8O,EAAWlO,SAAST,UACpB2O,EAAWlO,SAAST,SAASy8E,0BAC7B9tE,EAAWlO,SAAST,SAASy8E,yBAAyB/kF,QAExD,KAAMglF,EACF/tE,EAAWlO,SAAST,SAASy8E,yBAEjC9vE,EADmBu4B,EAAA,EAAYtkC,OAAO+N,EAAWJ,YACjD3B,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAAoC,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAjV,OAAA,MAAAwV,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAhT,MAAA,IAAzBuW,EAAyBpD,EAC9B9M,EAAA,EAAiBs8E,EAAoBpsE,EAAU/W,OACjDsG,EAAKk1E,cAAcn9E,KACjBuM,EAAKypD,gBAAgB/oB,wBAAwBv0B,KAOvDnM,EAAK2wE,YAAcj1E,EAAKi1E,YACxB3wE,EAAK4wE,cAAgBl1E,EAAKk1E,cAC1B5wE,EAAKi3E,gBAAkBzsE,EACvBxK,EAAKq2E,gBAAgB8B,oBAAsB3tE,EAAW8W,OAphB5Di7C,EAAA5oE,UA8hBEykF,kBA9hBF,SA8hBoB5tE,GAChB,OAAOxR,KAAKk+E,WAAW1sE,EAAW8W,KAAO,MA/hB7Ci7C,EAAA5oE,UAuiBE0kF,kBAviBF,SAuiBoB7tE,EAAY9O,GAC5B1C,KAAKk+E,WAAW1sE,EAAW8W,IAAM5lB,GAxiBrC6gE,EAAA5oE,UA8iBE6kF,oBA9iBF,WA+iBIx/E,KAAKm+E,0BAA2B,GA/iBpC5a,EAAA5oE,UAqjBE8kF,eArjBF,WAujBI,IAAMrjF,EAAO4D,KAAKo+E,eACZ5sE,EAAau2B,EAAA,EAAYtkC,OAAOzD,KAAKi+E,iBACrCxrB,EAAejhD,EAAW8W,GAC1Bo3D,GACqB,IADL1/E,KAAKq9E,gBAAgBhG,YACzCj7E,EAAMq2D,GACFl1D,EAAYiU,EAAWlG,gBAEvBmY,EAAMzjB,KAAKq8B,gBAAgB52B,UAArB,mFAIZ,IAAKi6E,GAAgBtmC,QAAQ31B,GAAM,CAEjC,IAMM/gB,GACJnF,YACAo6E,YARkB33E,KAAK23E,YACvB33E,KAAKywD,gBAAgBjoB,eAAexoC,KAAK23E,gBAQzCllB,eACAmlB,cARoB53E,KAAK43E,cACzB53E,KAAKywD,gBAAgBjoB,eAAexoC,KAAK43E,kBAQzCx7E,QAEF4D,KAAKq9E,gBAAgBnlC,KAAKx1C,GAG1B1C,KAAKm+E,0BAA2B,IAplBtC5a,EAAA5oE,UA6lBEglF,mBA7lBF,SA6lBqBC,GAAY,IAAArhD,EAAAv+B,KAEvBwR,EAAau2B,EAAA,EAAYtkC,OAAOzD,KAAKi+E,iBAG3Cj+E,KAAK23E,YAAc,KACnB33E,KAAK43E,cAAgB,KAErB,IAAMD,EAAc33E,KAAKywD,gBAAgBzoB,YACvC43C,EAAWjI,aACPC,EAAgB53E,KAAKywD,gBAAgBzoB,YACzC43C,EAAWhI,eAIb53E,KAAK6zC,SAAS,WAEZtV,EAAKo5C,YAAcA,EACnBp5C,EAAKq5C,cAAgBA,EAGrBpmE,EAAWlG,gBAAkBs0E,EAAWriF,UAGxC,IAAMsiF,EAAY93C,EAAA,EAAYtkC,OAAO86B,EAAK6gD,kBAAkB5tE,IAC5DquE,EAAUlI,YAAcA,EACxBkI,EAAUjI,cAAgBA,KAvnBhCrU,EAAA5oE,UA8nBEmlF,iBA9nBF,WA+nBI9/E,KAAK29E,4BAA6B,GA/nBtCpa,EAAA5oE,UAuoBEolF,qBAvoBF,SAuoBuBr9E,GACnB1C,KAAKq9E,gBAAgB5uC,OAAO/rC,IAxoBhC6gE,EAAA,GAipBAyZ,GAAQ5pC,YAAY4sC,UASpBhD,GAAQ5pC,YAAY6sC,cAGpBjD,GAAQ1Z,UAAU,qBAChBH,UACE56D,OAAQ,IACRzD,IAAK,IACL2zE,UAAW,KAEb1oD,WAAYitD,GAAQ5pC,YACpBF,YAAagqC,KAIf,IAAAgD,GAAA,GCruBAC,GANgBl4E,QAAQlM,OAAO,oBAC7BmkF,GAAkC9jF,KAClCy7E,GAAuB97E,OAAOK,2BCC1BgkF,yBAAUn4E,QAAQlM,OAAO,mCAC7B8uC,EAAA,EAAgB9uC,OAAOK,KACvB,eAIFgkF,GAAQ3tC,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,oCAAqCj3C,EAAQ,SA0BlE0kF,GAAQ72B,WAAa,SAASxtB,EAAUpmB,GACtC,OACEk9B,OACE2nC,eAAgB,+BAChB/mE,KAAM,sBAERw/B,kBAAkB,EAClBljB,WAAY,wCACZkvB,SAAU,KACV/L,YAAa,oCACbgM,MACEmhC,IAAK,SAAiBxtC,EAAO3mB,EAASizB,EAAO5Z,GAa3C,SAAS+6C,EAAcvc,EAAGwc,GACxB,IAAIC,SAAOC,SAAOC,SAiBlB,OAhBIH,EAAS/6E,QACXg7E,EAAQ,IAAIn/C,KAAKkE,EAAKo7C,iBAAiBJ,EAAS/6E,OAAO,KACvDi7E,EAAQ,IAAIp/C,KAAKkE,EAAKo7C,iBAAiBJ,EAAS/6E,OAAO,KACvD+/B,EAAKq7C,OAASJ,EAAOC,GACrBC,GACE5sE,MAAO0sE,EAAM37B,UACbhxC,IAAK4sE,EAAM57B,aAGb27B,EAAQ,IAAIn/C,KAAKkE,EAAKo7C,iBAAiBJ,EAAS3jF,QAChD2oC,EAAKq7C,MAAQJ,EACbE,GACE5sE,MAAO0sE,EAAM37B,YAGjBhS,EAAMoG,SACCynC,EA9BTn7C,EAAKpgB,OAELogB,EAAKs7C,cAAL,KAGA,SAA2B9c,EAAGwc,GAC5Bh7C,EAAKi1C,gBACH/mE,KAAM6sE,EAAcvc,EAAGwc,KAEzB1tC,EAAMoG,UANR1T,EAAKs7C,cAAL,MAA8BP,MAftCF,GAAQ72B,0CAkDR62B,GAAQjtC,UAAU,gBAAiBitC,GAAQ72B,YAa3C62B,GAAQhtC,YAAc,SAAS1mB,EAAQqX,GAMrC/jC,KAAKgkC,aAAeD,EAOpB/jC,KAAKw6E,eAQLx6E,KAAKyT,KAOLzT,KAAK8gF,YAOL9gF,KAAK+kD,SAOL/kD,KAAKilD,SAMLjlD,KAAK+gF,cAWL/gF,KAAK6gF,cAOL7gF,KAAK4gF,OAlEPR,GAAQhtC,6CAyERgtC,GAAQhtC,YAAYz4C,UAAUwqB,KAAO,WACnCnlB,KAAK+gF,cAAgB/gF,KAAKghF,oBAG1B,IAAMC,EAAkBjhF,KAAKgkC,aAAasC,WAAWtmC,KAAKyT,MAC1DzT,KAAK8gF,YAAiC,UAAnB9gF,KAAKyT,KAAKquB,KAC7B9hC,KAAK+kD,SAAWk8B,EAAgBn8B,QAChC9kD,KAAKilD,SAAWg8B,EAAgBj8B,QAChChlD,KAAK4gF,MAAQ5gF,KAAK8gF,aAAeG,EAAgBz7E,OAAO,GAAIy7E,EAAgBz7E,OAAO,IACjFy7E,EAAgBz7E,OAClBxF,KAAK6gF,eACHntE,MAAO1T,KAAK8gF,YACZja,IAAK7mE,KAAK+kD,SACVm8B,IAAKlhF,KAAKilD,WAUdm7B,GAAQhtC,YAAYz4C,UAAUqmF,kBAAoB,WAChD,IAAM76C,EAAUnmC,KAAKyT,KACjBstE,EAAgB,KACdj8B,EAAU,IAAIzjB,KAAKrhC,KAAK+kD,UACxBC,EAAU,IAAI3jB,KAAKrhC,KAAKilD,UAE9B,GAAI9e,EAAQ3gC,OACVu7E,KACA56C,EAAQ3gC,OAAOtC,QAAQ,SAACk+B,GACtB2/C,EAActmF,KAAK,IAAI4mC,KAAKD,GAAMyjB,iBAE/B,CACL,IACMs8B,EAAU,IAAI9/C,KAAKyjB,EAAQD,WAMjC,GALAs8B,EAAQ9Y,YAAYvjB,EAAQsjB,cAFR,KAEsCjiC,EAAQ+yC,SAAS,IAC3EiI,EAAQjZ,SAASpjB,EAAQwhB,WAHL,KAGgCngC,EAAQ+yC,SAAS,GACnEp0B,EAAQmkB,UAJU,KAIgB9iC,EAAQ+yC,SAAS,IACrDiI,EAAQ5Y,WAAWzjB,EAAQslB,aALP,KAKoCjkC,EAAQ+yC,SAAS,IAErEiI,EAAUn8B,EAAS,CAGrB+7B,KACA,IAAK,IAAI1mF,EAAI,GAAKA,IAAK,CACrB,IAAM+mF,EAAW,IAAI//C,KAAKyjB,EAAQD,WAKlC,GAJAu8B,EAAS/Y,YAAYvjB,EAAQsjB,cAAgB/tE,EAAI8rC,EAAQ+yC,SAAS,IAClEkI,EAASlZ,SAASpjB,EAAQwhB,WAAajsE,EAAI8rC,EAAQ+yC,SAAS,GAC1Dp0B,EAAQmkB,UAAY5uE,EAAI8rC,EAAQ+yC,SAAS,IAC3CkI,EAAS7Y,WAAWzjB,EAAQslB,aAAe/vE,EAAI8rC,EAAQ+yC,SAAS,MAC5DkI,GAAYp8B,GAGd,MAFA+7B,EAActmF,KAAK2mF,EAASv8B,aAOpC,OAAOk8B,GAUTX,GAAQhtC,YAAYz4C,UAAUgmF,iBAAmB,SAASU,GACxD,GAAIA,GAAarhF,KAAK+kD,SACpB,OAAO/kD,KAAK+kD,SAGd,GAAIs8B,GAAarhF,KAAKilD,SACpB,OAAOjlD,KAAKilD,SAGd,GAAIjlD,KAAK+gF,cAAe,CAMtB,IAJA,IAAIz3D,SACAg4D,EAAY,EACZC,EAAavhF,KAAK+gF,cAAcxmF,OAAS,EAErCgnF,EAAaD,EAAa,GAChCh4D,EAAQ5O,KAAKwb,OAAOorD,EAAYC,GAAc,GAC1CvhF,KAAK+gF,cAAcz3D,IAAU+3D,EAC/BE,EAAaj4D,EAEbg4D,EAAYh4D,EAIhB,IAAMk4D,EAAe9mE,KAAK2X,IAAIryB,KAAK+gF,cAAcO,GAAaD,GACxDI,EAAgB/mE,KAAK2X,IAAIryB,KAAK+gF,cAAcQ,GAAcF,GAEhE,OAAOrhF,KAAK+gF,cAAcS,EAAeC,EAAgBH,EAAYC,GASrE,IANA,IAAMG,EAAa,IAAIrgD,KAAKggD,GACtBM,EAAY,IAAItgD,KAAKrhC,KAAK+kD,UAC5B68B,EAAW,IAAIvgD,KAAKrhC,KAAK+kD,UACvBC,EAAU,IAAI3jB,KAAKrhC,KAAKilD,UAC1B48B,EAAennE,KAAK2X,IAAIqvD,EAAaE,GAEhCvnF,EAAI,GAAKA,IAAK,CAIrB,IAAM2V,EAAO,IAAIqxB,KAAKsgD,EAAU98B,WAMhC,GALA70C,EAAKq4D,YAAYsZ,EAAUvZ,cAAgB/tE,EAAI2F,KAAKyT,KAAKylE,SAAS,IAClElpE,EAAKk4D,SAASyZ,EAAUrb,WAAajsE,EAAK2F,KAAKyT,KAAKylE,SAAS,GAC3DyI,EAAU1Y,UAAY5uE,EAAI2F,KAAKyT,KAAKylE,SAAS,IAC/ClpE,EAAKu4D,WAAWoZ,EAAUvX,aAAe/vE,EAAI2F,KAAKyT,KAAKylE,SAAS,IAE5DlpE,EAAOg1C,EACT,MAGF,IAAM88B,EAAWpnE,KAAK2X,IAAIqvD,EAAa1xE,GACvC,KAAI8xE,GAAYD,GAId,MAHAD,EAAW5xE,EACX6xE,EAAeC,EAMnB,OAAOF,EAAS/8B,WAWpBu7B,GAAQhtC,YAAYz4C,UAAUonF,iBAAmB,SAAStuE,GACxD,OAAOzT,KAAKgkC,aAAa/C,gBAAgBxtB,EAAMzT,KAAKyT,KAAK6R,aAI3D86D,GAAQrwD,WAAW,0BACjBqwD,GAAQhtC,aAGV,IAAA4uC,GAAA,GCnTAC,WATgBh6E,QAAQlM,OAAO,sBAC7BmmF,GAAA,EAAsB9lF,KACtB+lF,GAAA,EAAyC/lF,KACzC23E,EAAA,EAA6Bh4E,OAAOK,KACpC4lF,GAAgC5lF,KAChCo4E,EAAA,EAAwBz4E,OAAOK,sCCAjCgmF,WAPgBn6E,QAAQlM,OAAO,sBAC7BsmF,GAAA,EAAsBtmF,OAAOK,KAC7BkmF,GAAA,EAAyBvmF,OAAOK,KAChCmmF,GAAA,EAA2BnmF,4BCLvBomF,GAAUv6E,QAAQlM,OAAO,cAgC/BymF,GAAQj5B,WAAa,SAASuY,GAC5B,OACE7iB,SAAU,IAMVC,KAAM,SAACrM,EAAO3mB,EAASizB,GAErB,IACMsjC,EAAOtjC,EAAA,QAEPr6C,EAAM+tC,EAAM1lB,MAAMs1D,GACxB16C,EAAA,EAAYvhB,iBAAiB1hB,EAAK49E,GAAA,GAElC59E,EAAI69E,UAAUz2D,EAAQ,IAOtB,IACM02D,EAAmBzjC,EAAA,oBAGzB,GAFqBtM,EAAM1lB,MAAMy1D,GAEf,CAChB,IACMC,EAAuB1jC,EAAA,wBAEvB2jC,EACJjwC,EAAM1lB,MAAM01D,GAEd10C,EAAA,EACE2zB,EACA,SACA,WACE,GAAIghB,EAAkB,CAEpB,IAAMhvE,EAAQutB,KAAK0hD,MACfC,GAAO,GACQ,SAAbC,IACJn+E,EAAIo+E,aACJp+E,EAAIq+E,aACAH,GACFlhB,EAAQshB,sBAAsBH,GAE5B5hD,KAAK0hD,MAAQjvE,EAAQgvE,IACvBE,GAAO,GAGXC,QAGAn+E,EAAIo+E,mBAvDlBV,GAAQj5B,+BAiERi5B,GAAQrvC,UAAU,UAAWqvC,GAAQj5B,YAGrC,IAAA85B,GAAA,uBClGMC,GAAUr7E,QAAQlM,OAAO,wBAG/BunF,GAAQ1mF,MAAM,+BAMZ,SAACsvB,EAASizB,GACR,IAAMjM,EAAciM,EAAA,6BACpB,YAAuBj/C,IAAhBgzC,EAA4BA,EACjC,2BAGNowC,GAAQ7wC,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,yBAA0Bj3C,EAAQ,SAuDvD,IAAMy3C,GAAY,SAASowC,GACzB,OACEtkC,SAAU,IACVpM,OAAO,EACP9iB,WAAY,8BACZmjB,YAAaqwC,4FAKjBD,GAAQnwC,UAAU,oBAAqBA,IAcvC,IAAMqwC,GAA0B,SAA1BC,EAAmC/2D,EAAQ2mB,EAAUzmB,GAAQ,IAAArqB,EAAAvC,KAE3D0jF,EAAa92D,EAAA,kBAOnB5sB,KAAK2jF,OACFj3D,EAAOS,MAAMu2D,GAChB37C,EAAA,EAAYtkC,YAAuBvD,IAAhBF,KAAK2jF,QAMxB3jF,KAAK4jF,WAELl3D,EAAOO,OAAO,kBAAMvyB,OAAOs/C,KAAKz3C,EAAKohF,QAAQppF,QAAQ,SAACspF,GACpDthF,EAAKqhF,WAAalpF,OAAOs/C,KAAKz3C,EAAKohF,QAAQ7+E,IAAIwwB,QAC/C/yB,EAAKqhF,WAAWE,KAAK7gF,EAAA,KAGvB,IAAMmqB,EAAUR,EAAA,qBAMhB5sB,KAAK6tC,KAA8BnhB,EAAOS,MAAMC,GAChD2a,EAAA,EAAYvhB,iBAAiBxmB,KAAK6tC,KAAM60C,GAAA,GAExC,IAAMqB,EAAcn3D,EAAA,yBACdxkB,EAAUskB,EAAOS,MAAM42D,GA2B7B,GArBA/jF,KAAKoI,QAAUq7E,EAAwBO,YAAY57E,GAMnDpI,KAAKyjE,QAAU/2C,EAMf1sB,KAAKikF,qBAAuB,KAM5BjkF,KAAKkkF,kBAAehkF,EAGP,OADAF,KAAK6tC,KAAK1uB,UACJ,CACjB,IAAMglE,EAAcnkF,KAAK6tC,KAAK1uB,UAAUilE,eACpBlkF,IAAhBikF,IACFnkF,KAAKkkF,aAAelkF,KAAKqkF,SAASF,IAItCh2C,EAAA,EAAgBnuC,KAAK6tC,KAAM,cAAe7tC,KAAKskF,kBAAmBtkF,MAElEA,KAAKukF,oCAEL73D,EAAA,kBAA8B1sB,0FAUhCwjF,GAAwBQ,YAAc,SAAS57E,GAC7C,IAAIo8E,GAAS,EAIb,YAHgBtkF,IAAZkI,IACFo8E,EAA8B,GAArBp8E,EAAA,SAGTo8E,OAAQA,IAUZhB,GAAwB7oF,UAAU0pF,SAAW,SAASI,GACpD,OAAOzkF,KAAK2jF,OAAOc,IAQrBjB,GAAwB7oF,UAAU+pF,WAAa,SAASD,GACtDzkF,KAAK6tC,KAAK1uB,UAAUwlE,QAAQF,IAQ9BjB,GAAwB7oF,UAAUiqF,wBAA0B,SAAS7gB,GAAG,IAAA79D,EAAAlG,KAChEkf,EAAOlf,KAAK6tC,KAAK1uB,UACjB+kE,EAAelkF,KAAK2jF,OAA8BzkE,EAAKklE,gBAaxClkF,IAAjBgkF,GACFlkF,KAAKyjE,QAAQzgC,YAAY,WACvB98B,EAAKg+E,aAAeA,KAU1BV,GAAwB7oF,UAAU2pF,kBAAoB,SAASvgB,GAC7D/jE,KAAKukF,oCACLvkF,KAAK4kF,wBAAwB,OAO/BpB,GAAwB7oF,UAAU4pF,kCAAoC,WAClC,OAA9BvkF,KAAKikF,sBACP91C,EAAA,EAAuBnuC,KAAKikF,sBAE9B,IAAM/kE,EAAOlf,KAAK6tC,KAAK1uB,UACvBnf,KAAKikF,qBAAuB91C,EAAA,EAAgBjvB,EAC1C,oBAAqBlf,KAAK4kF,wBAC1B5kF,OAIJsjF,GAAQvzD,WAAW,8BAA+ByzD,IAGlD,IAAAqB,GAAA,GCvPAC,GAVgB78E,QAAQlM,OAAO,iBAC7BmzE,EAA0BnzE,OAAOK,KACjCinF,GAAiBjnF,KACjB6gF,GAAA,EAAyBlhF,OAAOK,KAChC2oF,GAAA,EAAgB3oF,KAChB4oF,GAAA,EAAiB5oF,KACjByoF,GAAqBzoF,OCXjB6oF,GAAUh9E,QAAQlM,OAAO,mBAC7BqmF,GAAmBhmF,KACnB8oF,GAAA,EAAmBnpF,OAAOK,KAC1B0oF,GAAc1oF,KACd6gF,GAAA,EAAyBlhF,OAAOK,OAIlC6oF,GAAQxyC,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,UAAWj3C,EAAQ,SAuBxCupF,GAAQ17B,WAAa,WACnB,OACE1W,OACE/tC,IAAO,aACPqgF,aAAgB,sBAChBrC,iBAAoB,2BAEtB/yD,WAAY,2BACZkjB,kBAAkB,EAClBC,YAAa,YAIjB+xC,GAAQ9xC,UAAU,SAAU8xC,GAAQ17B,YAapC07B,GAAQ7xC,YAAc,SAASkqC,EAAuB8H,EAAc7xC,GAQlEvzC,KAAK8E,IAML9E,KAAKmlF,aAMLnlF,KAAK8iF,iBASL9iF,KAAKqlF,uBAAyB/H,EAM9Bt9E,KAAKslF,cAAgBF,EAMrBplF,KAAK+zC,aAAeR,GAzCtB0xC,GAAQ7xC,2EAgDR6xC,GAAQ7xC,YAAYz4C,UAAUm7C,QAAU,WACtC91C,KAAKqlF,uBAAuBlgE,KAAKnlB,KAAK8E,KACtC9E,KAAKslF,cAAclgE,OAAOplB,KAAK8E,KAC/B9E,KAAK+zC,aAAa3uB,OAAOplB,KAAK8E,MAIhCmgF,GAAQl1D,WAAW,mBAAoBk1D,GAAQ7xC,aAG/C,IAAAmyC,GAAA,+BCjHMC,GAAUv9E,QAAQlM,OAAO,uBAC7B0pF,GAAA,EAAgBrpF,OA2BlB,SAASspF,GAA+B94D,EAAQ84D,GAC9C,OAAOA,EAA+B94D,GAxBxC44D,GAAQ/yC,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,iCAAkCj3C,EAAQ,SAI/D8pF,GAAQ5oF,MAAM,iCAKZ,SAACgwB,GACC,IAAMsmB,EAActmB,EAAA,+BACpB,YAAuB1sB,IAAhBgzC,EAA4BA,EACjC,0FAgCNsyC,GAAQ5yC,YACN7iB,WAAY,qCACZozC,UACEr+D,IAAO,uBACP6gF,YAAe,gCAEjBzyC,YAAawyC,IAGfF,GAAQliB,UAAU,mBAChBkiB,GAAQ5yC,YAcV4yC,GAAQpyC,YAAc,SAASC,EAAU19B,EAAS+W,EAAQ7sB,GAKxDG,KAAK8E,IAML9E,KAAK2lF,YAML3lF,KAAK2W,WAML3W,KAAKyjE,QAAU/2C,EAMf1sB,KAAKq8B,gBAAkBx8B,EAMvBG,KAAKwjE,UAAYnwB,EAMjBrzC,KAAK4V,SAAWD,EAMhB3V,KAAK4lF,SAAW,MA/ClBJ,GAAQpyC,qEAsDRoyC,GAAQpyC,YAAYz4C,UAAUm7C,QAAU,WAAW,IAAAvzC,EAAAvC,KACjDA,KAAKyjE,QAAQl2C,IAAI,yBAA0B,WACzChrB,EAAKsjF,mBAIP7lF,KAAK6lF,kBAQPL,GAAQpyC,YAAYz4C,UAAUkrF,eAAiB,WACvB,OAAlB7lF,KAAK4lF,UACP5lF,KAAK8E,IAAIghF,cAAc9lF,KAAK4lF,UAI9B,IASM/lF,EAAiBG,KAAKq8B,gBAC5Br8B,KAAK4lF,SAAW,IAAIG,GAAA,GAClBC,UAAW,4BACXC,iBAZe,SAASpqE,GACxB,IAAMqqE,EAAgBlmF,KAAK2W,WAAWvR,OAAOiR,MAAM,KAC7CjR,EAASpF,KAAK4V,SAASswE,EAAclrF,SAC3C+sC,EAAA,EAAYxxB,eAAenR,GAC3B,IAAMwZ,EAAOsnE,EAEb,OADAtnE,EAAKzH,QAAQ0E,GACNzW,EAAOlK,MAAM8E,KAAM4e,IAMCvhB,KAAK2C,MAChCymB,OAAQxe,QAAQikB,QAAQ,oCAAqClsB,KAAKwjE,WAAW,GAC7E2iB,cAAetmF,EAAe4F,UAAU,iBAG1CzF,KAAK0W,cAAc1W,KAAK2lF,YAAY,IAEpC3lF,KAAK8E,IAAIshF,WAAWpmF,KAAK4lF,WAQ3BJ,GAAQpyC,YAAYz4C,UAAU+b,cAAgB,SAASC,GACrD3W,KAAK4lF,SAASlvE,cAAcs1D,GAAA,EAAWr1D,EAAW0vE,OAClDrmF,KAAK2W,WAAaA,GAGpB6uE,GAAQz1D,WAAW,6BACjBy1D,GAAQpyC,aAGV,IAAAkzC,GAAA,GCvLAC,GANgBt+E,QAAQlM,OAAO,gBAC7BwpF,GAAgBnpF,KAChBkqF,GAA6BlqF,2BCCzBoqF,GAAU,SAASzsF,EAAM0sF,GAK7BzmF,KAAKjG,KAAOA,EAMZiG,KAAKymF,WAAaA,EAMlBzmF,KAAK0mF,iBAUPF,GAAQG,UAAY,SAASv1E,GAC3B,SAAU0/B,EAAA,EAAc1/B,IAU1Bo1E,GAAQ7rF,UAAUisF,cAAgB,SAASx1E,GACzC,QAASpR,KAAK0mF,aAAaF,GAAQG,UAAUv1E,KAS/Co1E,GAAQ7rF,UAAUksF,iBAAmB,WACnC,OAAOnsF,OAAOs/C,KAAKh6C,KAAK0mF,cAAcnsF,QASxCisF,GAAQ7rF,UAAUmsF,gBAAkB,WAAW,IAAAvkF,EAAAvC,KAC7C,OAAOA,KAAKjG,KAAKqL,OAAO,SAAA2hF,GAAA,OAAOxkF,EAAKqkF,cAAcG,MAQpDP,GAAQ7rF,UAAUqsF,UAAY,SAAS51E,GACrC,IAAMoc,EAAMg5D,GAAQG,UAAUv1E,GAC9BpR,KAAK0mF,aAAal5D,GAAOpc,GAQ3Bo1E,GAAQ7rF,UAAUssF,UAAY,SAAS71E,GACrC,IAAMoc,EAAMg5D,GAAQG,UAAUv1E,GACXpR,KAAK4mF,cAAcx1E,UAE7BpR,KAAK0mF,aAAal5D,GAEzBxtB,KAAK0mF,aAAal5D,GAAOpc,GAS7Bo1E,GAAQ7rF,UAAUusF,UAAY,WAAW,IAAAhhF,EAAAlG,KACvCA,KAAKjG,KAAKmJ,QAAQ,SAACkO,GACjBlL,EAAK8gF,UAAU51E,MASnBo1E,GAAQ7rF,UAAUwsF,YAAc,WAC9B,IAAK,IAAMC,KAASpnF,KAAK0mF,oBAChB1mF,KAAK0mF,aAAaU,IAS7BZ,GAAQ7rF,UAAU0sF,gBAAkB,WAAW,IAAArgF,EAAAhH,KAC7CA,KAAKjG,KAAKmJ,QAAQ,SAACkO,GACjBpK,EAAKigF,UAAU71E,MAOnBo1E,GAAQzqF,OAASkM,QAAQlM,OAAO,qBAGhC,IAAAurF,GAAA,YC1HMC,kBAAUt/E,QAAQlM,OAAO,YAC7BurF,GAAevrF,OAAOK,KACtBqpF,GAAA,EAAgBrpF,KAChB,gBA2BF,SAASorF,GAAoB56D,EAAQ46D,GACnC,OAAOA,EAAoB56D,GAxB7B26D,GAAQ90C,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,YAAaj3C,EAAQ,SAI1C6rF,GAAQ3qF,MAAM,sBAKZ,SAACgwB,GACC,IAAMsmB,EAActmB,EAAA,oBACpB,YAAuB1sB,IAAhBgzC,EAA4BA,EACjC,0DAgCNq0C,GAAQ30C,YACN7iB,WAAY,6BACZozC,UACEskB,cAAiB,0BAEnBv0C,YAAas0C,IAGfD,GAAQjkB,UAAU,WAAYikB,GAAQ30C,YAYtC20C,GAAQn0C,YAAc,SAAS1mB,GAM7B1sB,KAAK4zC,OAASlnB,EAMd1sB,KAAKynF,cAMLznF,KAAK0mF,aAOL1mF,KAAK0nF,SAML1nF,KAAK2nF,eAAgB,EAOrB3nF,KAAK4nF,kBACHC,gBAAmB,SAASC,GAC1B,OAAOA,EAAO5oB,QAAQ,iCAxC5BqoB,GAAQn0C,+BAiDRm0C,GAAQn0C,YAAYz4C,UAAUm7C,QAAU,WACtC91C,KAAK0mF,aAAe1mF,KAAKynF,cAAcf,cAYzCa,GAAQn0C,YAAYz4C,UAAUmpF,KAAO,SAASiE,GAC5C/nF,KAAK2nF,cAAgB3nF,KAAK0nF,WAAaK,IAAc/nF,KAAK2nF,cAC1D3nF,KAAK0nF,SAAWK,EAEhB,IAAMC,EAAMhoF,KAAK2nF,cAAgB,GAAK,EACtC3nF,KAAKynF,cAAc1tF,KAAK+pF,KAAK,SAACmE,EAAaC,GACzC,OAAKD,EAAYF,GAGZG,EAAYH,GAGVE,EAAYF,GAAcG,EAAYH,GAAcC,GAAOA,GAFxD,EAHD,KAgBbT,GAAQn0C,YAAYz4C,UAAUwtF,SAAW,SAAS/2E,EAAYqR,GAC5D,IAAM2lE,EAAWpoF,KAAKqoF,gBAAgB5lE,GAChC6lE,EAAsBtoF,KAAKuoF,2BAA2B9lE,GAE5DziB,KAAKwoF,UAAUp3E,EAAYg3E,EAAUE,IAUvCf,GAAQn0C,YAAYz4C,UAAU6tF,UAAY,SACxCp3E,EAAYg3E,EAAUE,GAEtB,GAAIF,IAAaE,EACftoF,KAAKyoF,aAAar3E,QACb,IAAKg3E,GAAYE,EACtBtoF,KAAKynF,cAAcR,UAAU71E,OACxB,CACL,IAAMs3E,EAAa1oF,KAAKynF,cAAcb,cAAcx1E,GACpDpR,KAAKynF,cAAcN,cACduB,GACH1oF,KAAKynF,cAAcT,UAAU51E,KAWnCm2E,GAAQn0C,YAAYz4C,UAAU8tF,aAAe,SAASr3E,GACpD,IAAMu3E,EAAYrB,GAAeX,UAAUv1E,GACrCrX,EAAOiG,KAAKynF,cAAc1tF,KAEhC,IAAIiG,KAAKynF,cAAcb,cAAcx1E,GAArC,CAQA,IAFA,IAAIw3E,OAAgB1oF,EACd2oF,KACGxuF,EAAI,EAAGA,EAAIN,EAAKQ,OAAQF,IAAK,CACpC,IAAMyuF,EAAa/uF,EAAKM,GAGpBsuF,IAFerB,GAAeX,UAAUmC,GAG1CF,EAAgBvuF,EACP2F,KAAKynF,cAAcb,cAAckC,IAC1CD,EAAgBpuF,KAAKJ,GAGzB0tC,EAAA,EAAYtkC,YAAyBvD,IAAlB0oF,GAEW,GAA1BC,EAAgBtuF,QAElByF,KAAKynF,cAAcT,UAAU51E,GAM/B,IAFA,IAAI0wE,EAAWxmE,IACXytE,EAAgBF,EAAgB,GAC3BttF,EAAI,EAAGA,EAAIstF,EAAgBtuF,OAAQgB,IAAK,CAC/C,IAAMytF,EAAaH,EAAgBttF,GAC7B0tF,EAAkBvuE,KAAK2X,IAAI22D,EAAaJ,GAC1C9G,EAAWmH,IACbnH,EAAWmH,EACXF,EAAgBC,GASpB,IAHA,IACME,EAAYN,EAAgBG,EAAiBH,EAAgBG,EAE1D/sF,EAHW4sF,EAAgBG,EAAiBH,EAAgBG,EAG5C/sF,GAAKktF,EAAUltF,IACtCgE,KAAKynF,cAAcT,UAAUjtF,EAAKiC,MAWtCurF,GAAQn0C,YAAYz4C,UAAUwuF,qBAAuB,SAAS1mE,GAC5D,IAAM2lE,EAAWpoF,KAAKqoF,gBAAgB5lE,GAChC6lE,EAAsBtoF,KAAKuoF,2BAA2B9lE,IAExD2lE,GAAYE,IACd7lE,EAAMk5B,kBAWV4rC,GAAQn0C,YAAYz4C,UAAU4tF,2BAA6B,SAAS9lE,GAClE,OAAQA,EAAM2mE,SACX7oF,GAAA,EAAYkiB,EAAM4mE,QAAU5mE,EAAM6mE,WAClC7mE,EAAM2lE,UAUXb,GAAQn0C,YAAYz4C,UAAU0tF,gBAAkB,SAAS5lE,GACvD,OACGA,EAAM2mE,UACH3mE,EAAM4mE,SAAW5mE,EAAM6mE,UACzB7mE,EAAM2lE,UAIZb,GAAQx3D,WAAW,qBAAsBw3D,GAAQn0C,aAGjD,IAAAm2C,GAAA,8BCjRMC,GAAUvhF,QAAQlM,OAAO,yBAC7B0tF,GAAA,EAAgB1tF,OAAOK,KACvB+L,GAAA,EAAoB/L,KACpBmtF,GAAkBntF,KAClBkrF,GAAevrF,OAAOK,KACtB6gF,GAAA,EAAyBlhF,OAAOK,KAChCq/E,GAAA,EAAoB1/E,OAAOK,OA6B7B,SAASstF,GAA+Br2C,EAAUzmB,EAAQ88D,GACxD,OAAOA,EAA+Br2C,EAAUzmB,GA1BlD48D,GAAQ5sF,MAAM,iCAMZ,SAACy2C,EAAUzmB,GACT,IAAMsmB,EAActmB,EAAA,+BACpB,YAAuB1sB,IAAhBgzC,EAA4BA,EACjC,4BAINs2C,GAAQ/2C,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,0BAA2Bj3C,EAAQ,2EAuDxD8tF,GAAQ52C,YACN7iB,WAAY,wCACZozC,UACE56D,OAAU,8BACVohF,gBAAmB,oCACnBC,uBAA0B,2CAC1BC,SAAY,0BACZC,qBAAwB,0CACxBC,aAAgB,kCAChBC,kBAAqB,uCACrBC,UAAa,kCAEf/2C,YAAaw2C,IAIfF,GAAQlmB,UAAU,sBAAuBkmB,GAAQ52C,YAqBjD42C,GAAQp2C,YAAc,SAAS1zC,EAAWgtB,EAAQ6M,EAAiBuiD,EACjEwB,EAAuBvhD,EAAUmuD,EAAiB72C,GAAU,IAAA9wC,EAAAvC,KAEtDmqF,EACJzqF,EAAUa,IAAI,oBACZb,EAAUhD,IAAI,uBAMlBsD,KAAKyjE,QAAU/2C,EAMf1sB,KAAKm8B,UAAYJ,EAMjB/7B,KAAKu5B,gBAAkBA,EAMvBv5B,KAAKg8E,gBAAkBF,EAMvB97E,KAAKoqF,iBAAmBF,EAMxBlqF,KAAKwjE,UAAYnwB,EAMjBrzC,KAAKqqF,gBAAoCnqF,IAAvBiqF,EAAatwD,MAAsBswD,EAAatwD,MAAQ,GAM1E75B,KAAKuI,QAAS,EAMdvI,KAAK06B,SAAU,EAMf16B,KAAKsqF,eAOLtqF,KAAKuqF,qBAOLvqF,KAAKwqF,YAAc,KAMnBxqF,KAAKyqF,qBAAsB,EAM3BzqF,KAAK0qF,gBAML1qF,KAAKiqF,aAQLjqF,KAAK2qF,uBAQL3qF,KAAKorD,UAAY,IAAIpgB,GAAA,EAMrBhrC,KAAKqlF,uBAAyB/H,EAM9Bt9E,KAAK4qF,mBAAqB,IAAI5/C,GAAA,EAO9BhrC,KAAK6qF,UAAYnrF,EAAUa,IAAI,kBAC7Bb,EAAUhD,IAAI,kBAAoB,oBAMpCsD,KAAK6tC,KAAO,KAGZ7tC,KAAKyjE,QAAQrL,iBACX,kBAAM7+B,GACN,SAACuxD,EAAgBC,GACXD,IAAmBC,GACrBxoF,EAAKyoF,gBAUXhrF,KAAKirF,yBAA2B,MA5JlCzB,GAAQp2C,8IAkKRo2C,GAAQp2C,YAAYz4C,UAAUm7C,QAAU,WACtC91C,KAAKyqF,sBAAsBzqF,KAAA,uBAAkE,IAAnCA,KAAA,uBAC1DA,KAAK0qF,gBAAkB1qF,KAAA,kBAA4BA,KAAA,yBAA8BE,EAEjF,IAAMgrF,EAAkBlrF,KAAKqlF,uBAAuBrgE,oBACpDkmE,EAAgB5/B,YAAYtrD,KAAKorD,WACjC,IAAM+/B,EAAgBnrF,KAAA,uBACAE,IAAlBirF,IACFpjD,EAAA,EAAYvhB,iBAAiB2kE,EAAetR,GAAA,GAC5CqR,EAAgBt0E,SAASu0E,IAG3B,IAAMC,EAA2BprF,KAAKqlF,uBAAuBrgE,oBAC7DomE,EAAyB9/B,YAAYtrD,KAAK4qF,oBAC1C,IAAIS,EAAwBrrF,KAAA,yBAC5B,QAA8BE,IAA1BmrF,EACFtjD,EAAA,EAAYvhB,iBAAiB6kE,EAAuBxR,GAAA,OAC/C,CACL,IAAMzgE,EAAO,IAAI0gE,GAAA,GAAa3hE,OAAQ,IAAK,EAAG,EAAG,MAC3CG,EAAS,IAAIgzE,GAAA,GAAenzE,OAAQ,IAAK,EAAG,EAAG,GAAIK,MAAO,IAChE6yE,EAAwB,IAAIxR,GAAA,GAC1BzgE,KAAMA,EACNH,MAAO,IAAI2uC,GAAA,GACTxuC,KAAMA,EACND,OAAQ,EACRb,OAAQA,IAEVA,OAAQA,EACR+C,OAAQ,KAGZ+vE,EAAyBx0E,SAASy0E,GAElC,IAAME,EAAQvrF,KAAA,SACd,GAAIurF,EAAO,CACT,IAAMzmF,EAAMymF,IACZxjD,EAAA,EAAYvhB,iBAAiB1hB,EAAK49E,GAAA,GAClC1iF,KAAK6tC,KAAO/oC,IAShB0kF,GAAQp2C,YAAYz4C,UAAU6wF,eAAiB,WAAW,IAAAtlF,EAAAlG,KACxD,OAAOA,KAAKuqF,kBAAkBzlF,IAAI,SAAA2mF,GAAA,OAAevlF,EAAKokF,YAAYmB,MAOpEjC,GAAQp2C,YAAYz4C,UAAUqwF,YAAc,WAAW,IAAAhkF,EAAAhH,KAErD,GAAmC,IAA/BA,KAAKu5B,gBAAgBqB,QAAgB56B,KAAK0rF,4BAA6B,CACzE,IAAM5Q,EAAY96E,KAAKuI,OAOvB,OANAvI,KAAK6kB,aACDi2D,IAEF96E,KAAKuI,OAASvI,KAAKu5B,gBAAgBmB,QACnC16B,KAAK06B,QAAU16B,KAAKu5B,gBAAgBmB,UAKxC16B,KAAKuI,QAAS,EACdvI,KAAK06B,SAAU,EACf,IAAIG,EAAU76B,KAAKu5B,gBAAgBsB,QAE/BngC,OAAOs/C,KAAKh6C,KAAKiqF,WAAW1vF,OAAS,IACvCsgC,EAAU76B,KAAK2rF,kBAAkB9wD,IAInCA,EAAQ33B,QAAQ,SAACmhB,GACXA,EAAO0W,eACT/zB,EAAK4kF,UAAU,KAAMvnE,IAErBA,EAAOiE,GAAKthB,EAAK6kF,YAAYxnE,EAAOiE,IACnBjE,EAAOpH,SACX1iB,OAAS,GACpByM,EAAK8kF,aAAaznE,MAKc,IAAlCrkB,KAAKuqF,kBAAkBhwF,OAOF,OAArByF,KAAKwqF,aAA0B,GAAIxqF,KAAKwqF,eAAkBxqF,KAAKsqF,aAGjEtqF,KAAKm8B,UAAU,WACb,IAAM4vD,EAAgB/kF,EAAKujF,kBAAkB,GAC7CvjF,EAAKglF,UAAUhlF,EAAKsjF,YAAYyB,KAC/B,GAXH/rF,KAAKuI,QAAS,GAoBlBihF,GAAQp2C,YAAYz4C,UAAU+wF,0BAA4B,WACxD,OAAO1rF,KAAKu5B,gBAAgBsB,QAAQ10B,KAAK,SAAAke,GAAA,OAAUA,EAAO0W,kBAS5DyuD,GAAQp2C,YAAYz4C,UAAUkxF,YAAc,SAASjvF,GAEnD,GAAI04B,OAAO22D,UAAiCrvF,GAC1C,OAAOA,EAEP,IAAMsvF,EAAW,uCACjB,OAA8B,OAA1BtvF,EAAMqkD,MAAMirC,GACPtvF,EAAMirB,QAAQqkE,EAAU,KAExBtvF,GAYb4sF,GAAQp2C,YAAYz4C,UAAU+tF,WAAa,SAASyD,GAClD,OAAOnsF,KAAKwqF,cAAgB2B,EAAW9nE,OAAO3e,OAUhD8jF,GAAQp2C,YAAYz4C,UAAUgxF,kBAAoB,SAAS9wD,GAAS,IAAA0D,EAAAv+B,KAC5DosF,KAEAC,KAYN,IAAK,IAAMC,KAVXzxD,EAAQ33B,QAAQ,SAACmhB,GAIM,OAFAka,EAAKguD,iBAAiBloE,EAAQgoE,IAIjDD,EAAW3xF,KAAK4pB,KAISgoE,EAC3BD,EAAW3xF,KAAK4xF,EAAcC,IAGhC,OAAOF,GAcT5C,GAAQp2C,YAAYz4C,UAAU4xF,iBAAmB,SAASloE,EAAQgoE,GAChE,IAAIG,EAAgB,KAEpB,IAAK,IAAMC,KAAwBzsF,KAAKiqF,UAAW,CAGjD,GAFqBjqF,KAAKiqF,UAAUwC,GACAtmF,KAAK,SAAAslF,GAAA,OAAeA,GAAepnE,EAAO3e,QAC1D,CAClB8mF,EAAgBC,EAChB,OAIJ,GAAsB,OAAlBD,EAEF,OAAO,KAIT,IAAIE,SAmCJ,OAlCIF,KAAiBH,EACnBK,EAAcL,EAAcG,IAE5BE,GACEzvE,YACAqL,GAAIkkE,EACJ9mF,MAAO8mF,EACP3yD,MAAO75B,KAAKqqF,WACZ3vD,SAAS,EACTI,SAAS,EACTC,gBAAgB,EAChBC,uBAAmB96B,GAErBmsF,EAAcG,GAAiBE,GAIjCroE,EAAOpH,SAAS/Z,QAAQ,SAAC2T,GACvB61E,EAAYzvE,SAASxiB,KAAKoc,KAK5B61E,EAAY3xD,eAAiB2xD,EAAY3xD,gBAAkB1W,EAAO0W,eAC9D2xD,EAAY3xD,iBACd2xD,EAAY1xD,uBAAuD96B,IAAlCwsF,EAAY1xD,kBAC3C0xD,EAAY1xD,kBAAoB0xD,EAAYzvE,SAAS1iB,OAASmyF,EAAYzvE,SAAS1iB,OACrFmyF,EAAYzvE,kBAEmB/c,IAA7BmkB,EAAO2W,oBACT0xD,EAAY1xD,uBAAuD96B,IAAlCwsF,EAAY1xD,kBAC3C0xD,EAAY1xD,kBAAoB3W,EAAO2W,kBAAoB3W,EAAO2W,mBAG/D0xD,GASTlD,GAAQp2C,YAAYz4C,UAAUmxF,aAAe,SAASznE,GACpD,IACMsoE,KACAC,KACAC,KACFpwE,SAAYqwE,UAJCzoE,EAAOpH,SAKf/Z,QAAQ,SAAC2T,QAEG3W,KADnBuc,EAAa5F,EAAQ6F,mBAGnBowE,EAAsBj2E,EAAQ8F,mBAC+B,IAAzDiwE,EAAuBnrE,QAAQqrE,IACjCF,EAAuBnyF,KAAKqyF,GAG9BH,EAAclyF,KAAKgiB,GACnBowE,EAAkBvF,GAAeX,UAAUlqE,IAAe5F,KAI9D7W,KAAK+sF,iBAAiBJ,EAAeC,GACjCD,EAAcpyF,OAAS,KACLyF,KAAK4rF,UAAUe,EAAetoE,KAEhDrkB,KAAK2qF,oBAAL,GAA4BtmE,EAAO3e,OAAWmnF,KAYpDrD,GAAQp2C,YAAYz4C,UAAUoyF,iBAAmB,SAC/CJ,EAAeC,GACfD,EAAczpF,QAAQ,SAACuZ,GACrBmwE,EAAuB1pF,QAAQ,SAAC4pF,UACvBrwE,EAAWqwE,YAEbrwE,EAAA,iBACAA,EAAA,sBAGwB,IAA7Bzc,KAAKyqF,qBACPzqF,KAAKgtF,sBAAsBL,IAU/BnD,GAAQp2C,YAAYz4C,UAAUqyF,sBAAwB,SACpDL,GAEA,IAAMM,KACF5yF,SAAGyP,SACP,IAAKA,KAAO6iF,EAAc,GACxB,IAAKtyF,EAAI,EAAGA,EAAIsyF,EAAcpyF,OAAQF,IACpC,QAA8B6F,IAA1BysF,EAActyF,GAAGyP,GAAoB,CACvCmjF,EAAWxyF,KAAKqP,GAChB,MAKN,IAAIojF,SACJP,EAAczpF,QAAQ,SAACuZ,GAErB,IAAK3S,KADLojF,KACYzwE,GACuB,IAA7BwwE,EAAWxrE,QAAQ3X,IACrBojF,EAAYzyF,KAAKqP,GAIrBojF,EAAYhqF,QAAQ,SAAC4G,UACZ2S,EAAW3S,QAYxB0/E,GAAQp2C,YAAYz4C,UAAUixF,UAAY,SAAS7xF,EAAMsqB,GACvD,IAAMonE,KAAiBpnE,EAAO3e,MAC1BynF,EAAa,KACjB,OAAa,OAATpzF,GAEiB,QADnBozF,EAAantF,KAAKotF,sBAAsBrzF,QAKU,GAAhDiG,KAAKuqF,kBAAkB9oE,QAAQgqE,IACjCzrF,KAAKuqF,kBAAkB9vF,KAAKgxF,GAE9BzrF,KAAKsqF,YAAYmB,IACfhE,cAAe0F,EACf9oE,OAAQA,IAEH,IASTmlE,GAAQp2C,YAAYz4C,UAAUyyF,sBAAwB,SACpDrzF,GACAguC,EAAA,EAAYtkC,OAAO1J,EAAKQ,OAAS,GACjC,IAAMwjB,KACNrjB,OAAO0kD,OAAOrhC,EAAOhkB,EAAK,WACnBgkB,EAAMsvE,OACb,IAGM5G,KAON,OAVgB/rF,OAAOs/C,KAAKj8B,GAIpB7a,QAAQ,SAACoqF,GACf7G,EAAWhsF,MACT2B,KAAMkxF,MAIN7G,EAAWlsF,OAAS,EACf,IAAI+sF,GAAevtF,EAAM0sF,GAGzB,MAUX+C,GAAQp2C,YAAYz4C,UAAUkqB,MAAQ,WACpC7kB,KAAKuI,QAAS,EACdvI,KAAK06B,SAAU,EACf16B,KAAKsqF,eACLtqF,KAAKuqF,qBACLvqF,KAAKwqF,YAAc,KACnBxqF,KAAK+6B,gBAAiB,EACtB/6B,KAAKorD,UAAUvmC,QACf7kB,KAAK4qF,mBAAmB/lE,QACxB7kB,KAAKg8E,gBAAgBn3D,QACrB7kB,KAAK2qF,uBACD3qF,KAAKirF,0BACPjrF,KAAKirF,4BAUTzB,GAAQp2C,YAAYz4C,UAAUqxF,UAAY,SAASG,GAAY,IAAAztD,EAAA1+B,KACvDqkB,EAAS8nE,EAAW9nE,OAC1BrkB,KAAKwqF,YAAcnmE,EAAO3e,MAEtB1F,KAAKirF,2BACPjrF,KAAKirF,2BACLjrF,KAAKirF,yBAA2B,MAGD,OAA7BkB,EAAW1E,gBACbznF,KAAKirF,yBAA2BjrF,KAAKyjE,QAAQrL,iBAC3C,kBAAM+zB,EAAW1E,cAAcf,cAC/B,SAAC6G,EAAaC,GACR9yF,OAAOs/C,KAAKuzC,KAAiB7yF,OAAOs/C,KAAKwzC,IAC3C9uD,EAAK+uD,yBAIbztF,KAAK0tF,gBAAgBvB,GAErBnsF,KAAK2tF,eAOPnE,GAAQp2C,YAAYz4C,UAAUgzF,YAAc,WAM1C,IAAMrlE,EAAKtoB,KAAK6rF,YAAY7rF,KAAKwqF,aAAe,IAC1CoD,EAAa5tF,KAAKwjE,UAAUjqB,KAAf,gBAAoCjxB,GACvDslE,EAAWC,YAAY,UAAUpkC,SAAS,UAC1CzpD,KAAKm8B,UAAU,WACbyxD,EAAWr0C,KAAK,uCAAhB,QAAkE,aAStEiwC,GAAQp2C,YAAYz4C,UAAU8yF,oBAAsB,WAClD,GAAyB,OAArBztF,KAAKwqF,YAAT,CAIA,IAAM2B,EAAansF,KAAKsqF,YAAL,GAAoBtqF,KAAKwqF,aAC5CxqF,KAAK0tF,gBAAgBvB,KAQvB3C,GAAQp2C,YAAYz4C,UAAU+yF,gBAAkB,SAASvB,GAIvD,GAHAnsF,KAAKorD,UAAUvmC,QACf7kB,KAAK4qF,mBAAmB/lE,QAES,OAA7BsnE,EAAW1E,cAAf,CAIA,IAAMgE,KAAiBU,EAAW9nE,OAAO3e,MACnCmnF,EAAoB7sF,KAAK2qF,oBAAoBc,GAC7C/E,EAAeyF,EAAW1E,cAAcf,aAE9C,IAAK,IAAMU,KAASyF,EAAmB,CACrC,IAAMh2E,EAAUg2E,EAAkBzF,GAC9BA,KAASV,EACX1mF,KAAK4qF,mBAAmBnwF,KAAKoc,GAE7B7W,KAAKorD,UAAU3wD,KAAKoc,MAW1B2yE,GAAQp2C,YAAYz4C,UAAUmzF,oBAAsB,WAClD,OAAyB,OAArB9tF,KAAKwqF,YACA,KAEAxqF,KAAKsqF,YAAL,GAAoBtqF,KAAKwqF,cAUpChB,GAAQp2C,YAAYz4C,UAAUozF,cAAgB,WAC5C,IAAM1pE,EAASrkB,KAAK8tF,sBACpB,OAAe,OAAXzpE,GAA4C,OAAzBA,EAAOojE,eAGrBpjE,EAAOojE,cAAcZ,mBAAqB,GAUrD2C,GAAQp2C,YAAYz4C,UAAUqzF,oBAAsB,WAClD,IAAM3pE,EAASrkB,KAAK8tF,sBACpB,OAAe,OAAXzpE,GAA4C,OAAzBA,EAAOojE,cACrB,EAEApjE,EAAOojE,cAAcZ,oBAShC2C,GAAQp2C,YAAYz4C,UAAUusF,UAAY,WACxC,IAAM7iE,EAASrkB,KAAK8tF,sBACL,OAAXzpE,GACFA,EAAOojE,cAAcP,aASzBsC,GAAQp2C,YAAYz4C,UAAUwsF,YAAc,WAC1C,IAAM9iE,EAASrkB,KAAK8tF,sBACL,OAAXzpE,GACFA,EAAOojE,cAAcN,eASzBqC,GAAQp2C,YAAYz4C,UAAU0sF,gBAAkB,WAC9C,IAAMhjE,EAASrkB,KAAK8tF,sBACL,OAAXzpE,GACFA,EAAOojE,cAAcJ,mBASzBmC,GAAQp2C,YAAYz4C,UAAUszF,gBAAkB,WAE9C,GAAe,OADAjuF,KAAK8tF,sBACC,CACnB,IAAM1uE,EAAS8uE,GAAA,IACfluF,KAAK4qF,mBAAmB1nF,QAAQ,SAAC2T,GAC/Bq3E,GAAA,EAAgB9uE,EAAQvI,EAAQuE,cAAcyE,eAEhD,IAAM9G,EAAO/Y,KAAK6tC,KAAK7uB,UACvB+oB,EAAA,EAAYtkC,YAAgBvD,IAAT6Y,GACnB,IAAMo1E,EAAUnuF,KAAK0qF,gBACrB1qF,KAAK6tC,KAAK1uB,UAAU8wB,IAAI7wB,GAASrG,OAAMo1E,cAS3C3E,GAAQp2C,YAAYz4C,UAAUyzF,YAAc,WAC1C,IAAM/pE,EAASrkB,KAAK8tF,sBACpB,GAAe,OAAXzpE,EAAiB,CACnB,IAAMoiE,EAAapiE,EAAOojE,cAAchB,WACxC1+C,EAAA,EAAYtkC,YAAsBvD,IAAfumF,GACnB,IAAMC,EAAeriE,EAAOojE,cAAcX,kBAE1C9mF,KAAKoqF,iBAAiBiE,cACpB3H,EAAcD,EAAYzmF,KAAK6qF,aAKrCrB,GAAQz5D,WAAW,gCACjBy5D,GAAQp2C,aAGV,IAAAk7C,GAAA,GC95BMC,GAAUtmF,QAAQlM,OAAO,oBA+B/BwyF,GAAQ9qD,QAAQ,kBAAmB,WAEjC,IAEM+qD,GACJC,OACE36E,MAAO,YACP46E,KAAM,YACN76E,IAAK,WAEP86E,OACE76E,MAAO,aACP46E,KAAM,YACN76E,IAAK,WACLwqB,OAAQ,eAEVuwD,SACE96E,MAAO,cACP46E,KAAM,cACN76E,IAAK,YACLwqB,OAAQ,kBAIZ,SAAStiB,EAAe0G,GACtB,IAAM08C,EAAgB18C,EAAM08C,eAAiB18C,EACvCosE,EAAU1vB,EAAc0vB,SAAW1vB,EAAc0vB,QAAQt0F,OAAS4kE,EAAc0vB,SAAW1vB,GAC3F4E,EAAK5E,EAAc2vB,gBAAkB3vB,EAAc2vB,eAAe,IAAOD,EAAQ,GAEvF,OACE7pF,EAAG++D,EAAEgrB,QACL9uE,EAAG8jD,EAAEirB,SAIT,SAASC,EAAUC,EAAcC,GAC/B,IAAMr9E,KAON,OANA7J,QAAQ/E,QAAQgsF,EAAc,SAACE,GAC7B,IAAMC,EAAYb,EAAeY,GAAaD,GAC1CE,GACFv9E,EAAIrX,KAAK40F,KAGNv9E,EAAIvK,KAAK,KAGlB,OAqCElK,KArCK,SAqCA6uB,EAASojE,EAAeJ,GAE3B,IAAIK,SAAQC,SAERC,SAEAC,SAEAnnF,GAAS,EAEb2mF,EAAeA,IAAiB,QAAS,QAAS,WAClDhjE,EAAQ0W,GAAGqsD,EAAUC,EAAc,SAAU,SAACzsE,GAC5CgtE,EAAc1zE,EAAe0G,GAC7Bla,GAAS,EACTgnF,EAAS,EACTC,EAAS,EACTE,EAAUD,EACNH,EAAA,OACFA,EAAA,MAAuBG,EAAahtE,KAGxC,IAAM0rB,EAAS8gD,EAAUC,EAAc,UACnC/gD,GACFjiB,EAAQ0W,GAAGuL,EAAQ,SAAC1rB,GAClBla,GAAS,EACL+mF,EAAA,QACFA,EAAA,OAAwB7sE,KAK9ByJ,EAAQ0W,GAAGqsD,EAAUC,EAAc,QAAS,SAACzsE,GAC3C,GAAKla,GAUAknF,EAAL,CAGA,IAAMvmC,EAASntC,EAAe0G,GAO9B,GALA8sE,GAAU70E,KAAK2X,IAAI62B,EAAOlkD,EAAI0qF,EAAQ1qF,GACtCwqF,GAAU90E,KAAK2X,IAAI62B,EAAOjpC,EAAIyvE,EAAQzvE,GAEtCyvE,EAAUxmC,IAENqmC,EArIiB,IAqIcC,EArId,IA0IrB,OAAID,EAASC,GAEXjnF,GAAS,OACL+mF,EAAA,QACFA,EAAA,OAAwB7sE,MAK1BA,EAAMk5B,sBACF2zC,EAAA,MACFA,EAAA,KAAsBpmC,EAAQzmC,QAKpCyJ,EAAQ0W,GAAGqsD,EAAUC,EAAc,OAAQ,SAACzsE,GACrCla,IAGLA,GAAS,EACL+mF,EAAA,KACFA,EAAA,IAAqBvzE,EAAe0G,GAAQA,WAOtD8rE,GAAQoB,oBAAsB,SAASC,EAAeC,EAAWR,GAC/Dd,GAAQp7C,UAAUy8C,GAAgB,SAAU,iBAAkB,SAAS5wC,EAAQ8wC,GAE7E,IAAMC,EAA0B,GAE1BC,EAAuB,GAEvBC,EAAwB,GAE9B,OAAO,SAASp9C,EAAO3mB,EAASy3C,GAC9B,IAAMusB,EAAelxC,EAAO2kB,EAAKisB,IAE7BH,SAAaU,SAuBjB,IAAMjB,GAAgB,SACjBjnF,QAAQmoF,UAAUzsB,EAAA,wBACrBurB,EAAaz0F,KAAK,SAEpBq1F,EAAezyF,KAAK6uB,GAClBpY,MAAS,SAASo1C,EAAQzmC,GACxBgtE,EAAcvmC,EACdinC,GAAQ,GAEV9xD,OAAU,SAAS5b,GACjB0tE,GAAQ,GAEVt8E,IAAO,SAASq1C,EAAQzmC,IAjC1B,SAAoBymC,GASlB,IAAKumC,EACH,OAAO,EAET,IAAMY,GAAUnnC,EAAOjpC,EAAIwvE,EAAYxvE,GAAK4vE,EACtCS,EAAS51E,KAAK2X,IAAI62B,EAAOlkD,EAAIyqF,EAAYzqF,GAC/C,OAAOmrF,GACHG,EAASP,GACTM,EAAS,GACTA,EAASJ,GACTK,EAASD,EAASL,GAgBhBO,CAAWrnC,IACbrW,EAAMoG,OAAO,WACX/sB,EAAQskE,eAAenB,GACvBa,EAAar9C,GAAQ49C,OAAQhuE,QAIlCysE,QAMTX,GAAQoB,oBAAoB,gBAAiB,EAAG,aAChDpB,GAAQoB,oBAAoB,eAAgB,EAAG,WAG/C,IAAAe,GAAA,GCjPMC,gCAAU1oF,QAAQlM,OAAO,2BAC7BkhF,GAAA,EAAyBlhF,OAAOK,KAChCwuC,GAAA,EAAsB7uC,OAAOK,KAC7Bs0F,GAAct0F,KACdq/E,GAAA,EAAoB1/E,OAAOK,KAC3B,YACA,aAwCF,SAASw0F,GAAiCv9C,EAAUzmB,EAAQgkE,GAC1D,OAAOA,EAAiCv9C,EAAUzmB,GArCpD+jE,GAAQ58E,QAAQ,mBAMd,SAAS88E,GACPA,EAAiBC,gBAAgB,qBAKrCH,GAAQ/zF,MAAM,mCAMZ,SAACy2C,EAAUzmB,GACT,IAAMsmB,EAActmB,EAAA,iCACpB,YAAuB1sB,IAAhBgzC,EAA4BA,EACjC,8BAGNy9C,GAAQl+C,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,4BAA6Bj3C,EAAQ,6EA+C1Di1F,GAAQ/9C,YACN7iB,WAAY,0CACZozC,UACE4tB,qBAAwB,8CACxBpH,gBAAmB,sCACnBC,uBAA0B,6CAC1BoH,mBAAsB,0CACtBC,QAAW,gCACXC,oBAAuB,6CAEzBh+C,YAAa09C,IAIfD,GAAQrtB,UAAU,wBAAyBqtB,GAAQ/9C,YAgBnD+9C,GAAQv9C,YAAc,SAASC,EAAU3mB,EAAQ6M,EAAiBuiD,EAChEwB,GAAuB,IAAA/6E,EAAAvC,KAMvBA,KAAK+wF,qBAML/wF,KAAKixF,SAAU,EAQfjxF,KAAKmxF,WAAanxF,KAAKixF,QAMvBjxF,KAAKoxF,sBAAuB,EAO5BpxF,KAAKqxF,eAAiBv2D,SAAW,GAMjC96B,KAAKu5B,iBACHsB,WACAD,MAAO,EACPF,SAAS,GAOX16B,KAAKg8E,gBAAkBF,EAMvB97E,KAAKsxF,eAAiB,KAMtBtxF,KAAKorD,UAAY,IAAIpgB,GAAA,EAMrBhrC,KAAKqlF,uBAAyB/H,EAM9Bt9E,KAAK4qF,mBAAqB,IAAI5/C,GAAA,EAM9BhrC,KAAKqkB,OAAS,KAMdrkB,KAAK6W,QAAU,KAMf7W,KAAKuxF,eAAiB,EAMtBvxF,KAAKwxF,QAAS,EAMdxxF,KAAK8f,QAAU,EAMf9f,KAAK07C,MAAO,EAMZ17C,KAAK2zC,SAAWN,EAEhB3mB,EAAO0rC,iBACL,kBAAM7+B,GACN,SAACuxD,EAAgBC,GACfxoF,EAAKkvF,mBAAmB3G,GACpBA,EAAelwD,MAAQ,EACzBr4B,EAAKqgB,OACImoE,IAAmBD,GAC5BvoF,EAAKu2C,WA7Hb63C,GAAQv9C,qGAqIRu9C,GAAQv9C,YAAYz4C,UAAUm7C,QAAU,WACtC91C,KAAK+wF,qBAAuB/wF,KAAK+wF,sBAAwB,WACzD/wF,KAAKixF,QAAUjxF,KAAKixF,QACpBjxF,KAAKmxF,UAAYnxF,KAAA,oBACkB,IAAjCA,KAAA,sBAAyCA,KAAKixF,QAEhDjxF,KAAKoxF,uBAAuBpxF,KAAA,sBACM,IAAhCA,KAAA,oBAEFA,KAAKqxF,cAAgBrxF,KAAKoxF,yBAA6Bt2D,SAAW,GAElE,IAAMowD,EAAkBlrF,KAAKqlF,uBAAuBrgE,oBACpDkmE,EAAgB5/B,YAAYtrD,KAAKorD,WACjC,IAAM+/B,EAAgBnrF,KAAA,uBACAE,IAAlBirF,IACFpjD,EAAA,EAAYvhB,iBAAiB2kE,EAAetR,GAAA,GAC5CqR,EAAgBt0E,SAASu0E,IAG3B,IAAMC,EAA2BprF,KAAKqlF,uBAAuBrgE,oBAC7DomE,EAAyB9/B,YAAYtrD,KAAK4qF,oBAC1C,IAAIS,EAAwBrrF,KAAA,yBAC5B,QAA8BE,IAA1BmrF,EACFtjD,EAAA,EAAYvhB,iBAAiB6kE,EAAuBxR,GAAA,OAC/C,CACL,IAAMzgE,EAAO,IAAI0gE,GAAA,GAAa3hE,OAAQ,IAAK,EAAG,EAAG,MAC3CG,EAAS,IAAIgzE,GAAA,GAAenzE,OAAQ,IAAK,EAAG,EAAG,GAAIK,MAAO,IAChE6yE,EAAwB,IAAIxR,GAAA,GAC1BzgE,KAAMA,EACNH,MAAO,IAAI2uC,GAAA,GACTxuC,KAAMA,EACND,OAAQ,EACRb,OAAQA,IAEVA,OAAQA,IAGZ8yE,EAAyBx0E,SAASy0E,GAE9BrrF,KAAKixF,UACPjxF,KAAK2zC,SAAS4F,KAAK,4CAA4CsqB,WAC7DxlC,OAAU,yCACVqzD,YAAe1xF,KAAK+wF,uBAEtB/wF,KAAK2zC,SAAS4F,KAAK,4CAA4C6pB,WAC7DuuB,UAAa,IACbC,SAAY,QAYlBjB,GAAQv9C,YAAYz4C,UAAUioB,KAAO,WACnC5iB,KAAK6kB,QACL7kB,KAAK0tF,mBAOPiD,GAAQv9C,YAAYz4C,UAAU+yF,gBAAkB,WAC9C1tF,KAAK6xF,kBAAkB,GAAG,GACN,OAAhB7xF,KAAKqkB,SACPrkB,KAAK8xF,mBACL9xF,KAAK+xF,2BACL/xF,KAAK07C,MAAO,IAYhBi1C,GAAQv9C,YAAYz4C,UAAUk3F,kBAAoB,SAChD5sD,EAAU+sD,GACV,IAAIC,GAAa,EACjB,GAAIhtD,IAAajlC,KAAKuxF,cAAe,CACnC,IAAIl3F,SAAGgqB,SAAQpH,SACTi1E,EAAclyF,KAAK6W,QACnBgkB,EAAU76B,KAAKu5B,gBAAgBsB,QAErC,IADA76B,KAAKuxF,cAAgBtsD,EAChB5qC,EAAI,EAAGA,EAAIwgC,EAAQtgC,OAAQF,IAE9B,GADAgqB,EAASwW,EAAQxgC,GACW,OAAxB2F,KAAKsxF,gBAA2BtxF,KAAKsxF,iBAAmBjtE,EAA5D,CAKA,KAAI4gB,IADJhoB,EAAWoH,EAAOpH,UACO1iB,QAElB,CACLyF,KAAKqkB,OAASA,EACdrkB,KAAK6W,QAAUwN,EAAOpH,SAASgoB,GAC/BgtD,GAAa,EACb,MALAhtD,GAAYhoB,EAAS1iB,OAQrBy3F,GACFhyF,KAAK+xF,yBAAyBG,GAGlC,OAAOD,GASTtB,GAAQv9C,YAAYz4C,UAAU2zE,SAAW,WACvC,IAAIrpC,EAAWjlC,KAAKuxF,cAAgB,EAChCtsD,EAAW,IACbA,EAAWjlC,KAAKmyF,kBAAoB,GAEnBnyF,KAAK6xF,kBAAkB5sD,GAAU,IAElDjlC,KAAKoyF,UAAS,IAUlBzB,GAAQv9C,YAAYz4C,UAAUqV,KAAO,WACnC,IAAIi1B,EAAWjlC,KAAKuxF,cAAgB,EAEhCtsD,EADgBjlC,KAAKmyF,kBAAoB,IAE3CltD,EAAW,GAEMjlC,KAAK6xF,kBAAkB5sD,GAAU,IAElDjlC,KAAKoyF,UAAS,IAUlBzB,GAAQv9C,YAAYz4C,UAAU82F,mBAAqB,SAASY,GAC1DryF,KAAKu5B,gBAAgBqB,MAAQ,EAC7B56B,KAAKu5B,gBAAgBsB,QAAQtgC,OAAS,EACtC,IAAK,IAAIF,EAAI,EAAGA,EAAIg4F,EAAYx3D,QAAQtgC,OAAQF,IAAK,CACnD,IAAMgqB,EAASguE,EAAYx3D,QAAQxgC,GACnCgqB,EAAOpH,SAAWoH,EAAOpH,SAAS7X,OAAO,SAACyR,GAExC,OADAkxB,EAAA,EAAYtkC,OAAOoT,IACXk8D,EAAA,EAAcnoC,GAAA,EAAsBpuB,yBAAyB3F,MAEvE7W,KAAKu5B,gBAAgBsB,QAAQpgC,KAAK4pB,GAClCrkB,KAAKu5B,gBAAgBqB,OAASvW,EAAOpH,SAAS1iB,SAUlDo2F,GAAQv9C,YAAYz4C,UAAUw3F,gBAAkB,WAC9C,OAA4B,OAAxBnyF,KAAKsxF,eACAtxF,KAAKu5B,gBAAgBqB,MAErB56B,KAAKsxF,eAAer0E,SAAS1iB,QASxCo2F,GAAQv9C,YAAYz4C,UAAU23F,QAAU,WACtC,OAA6B,GAAtBtyF,KAAKuxF,eAQdZ,GAAQv9C,YAAYz4C,UAAU43F,OAAS,WACrC,OAAOvyF,KAAKuxF,eAAiBvxF,KAAKmyF,kBAAoB,GAUxDxB,GAAQv9C,YAAYz4C,UAAU63F,iBAAmB,WAC/C,OAAKxyF,KAAK6W,QAGH+zB,GAAA,EAAsBpuB,yBAAyBxc,KAAK6W,SAFlD,MAeX85E,GAAQv9C,YAAYz4C,UAAUy3F,SAAW,SAASZ,GAChDxxF,KAAKwxF,OAASA,EACdxxF,KAAK8f,WAQP6wE,GAAQv9C,YAAYz4C,UAAUm3F,iBAAmB,WAC/C,IAAMj3D,EAAU76B,KAAKu5B,gBAAgBsB,QACrC76B,KAAKorD,UAAUvmC,QACf,IAAK,IAAIxqB,EAAI,EAAGA,EAAIwgC,EAAQtgC,OAAQF,IAAK,CACvC,IAAMgqB,EAASwW,EAAQxgC,GACvB,GAA4B,OAAxB2F,KAAKsxF,gBAA2BtxF,KAAKsxF,iBAAmBjtE,EAK5D,IADA,IAAMpH,EAAWoH,EAAOpH,SACf7b,EAAK,EAAGA,EAAK6b,EAAS1iB,OAAQ6G,IACrCpB,KAAKorD,UAAU3wD,KAAKwiB,EAAS7b,MAYnCuvF,GAAQv9C,YAAYz4C,UAAUo3F,yBAC9B,SAASU,GACPzyF,KAAK4qF,mBAAmB/lE,QACxB7kB,KAAKorD,UAAU3c,OAAOzuC,KAAK6W,SAC3B7W,KAAK4qF,mBAAmBnwF,KAAKuF,KAAK6W,cACV3W,IAApBuyF,GACFzyF,KAAKorD,UAAU3wD,KAAKg4F,IAUxB9B,GAAQv9C,YAAYz4C,UAAUm+C,MAAQ,WACpC94C,KAAK07C,MAAO,EACZ17C,KAAK6kB,QACL7kB,KAAKg8E,gBAAgBn3D,SASvB8rE,GAAQv9C,YAAYz4C,UAAUkqB,MAAQ,WACpC7kB,KAAK6W,QAAU,KACf7W,KAAKqkB,OAAS,KACdrkB,KAAKuxF,eAAiB,EACtBvxF,KAAKorD,UAAUvmC,QACf7kB,KAAK4qF,mBAAmB/lE,QACxB7kB,KAAKsxF,eAAiB,MAQxBX,GAAQv9C,YAAYz4C,UAAU+3F,kBAAoB,SAASruE,GAC1C,OAAXA,GAAmBA,EAAOpH,SAAS1iB,QAAU,IAIjDyF,KAAK6kB,QACL7kB,KAAKsxF,eAAiBjtE,EACtBrkB,KAAK0tF,oBAIPiD,GAAQ5gE,WAAW,kCACjB4gE,GAAQv9C,aAGV,IAAAu/C,GAAA,GC7jBAC,kBANgB3qF,QAAQlM,OAAO,uBAC7BuyF,GAAsBlyF,KACtBu2F,GAAwBv2F,4BCG1By2F,WANgB5qF,QAAQlM,OAAO,mBAC7B+2F,GAAA,EAAmB12F,KACnB22F,GAAA,EAAwBh3F,OAAOK,kBCA3B42F,GAAU/qF,QAAQlM,OAAO,6BAC7Bk3F,GAAA,EAAgBl3F,OAAOK,KACvBgzE,EAAA,EAAerzE,OAAOK,OA2BxB,SAAS82F,GAA4BtmE,EAAQsmE,GAC3C,OAAOA,EAA4BtmE,GAxBrComE,GAAQvgD,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,8BAA+Bj3C,EAAQ,SAI5Ds3F,GAAQp2F,MAAM,8BAKZ,SAACgwB,GACC,IAAMsmB,EAActmB,EAAA,4BACpB,YAAuB1sB,IAAhBgzC,EAA4BA,EACjC,oFAkEN8/C,GAAQpgD,YACNuwB,UACE/9D,OAAU,2BAEZ2qB,WAAY,6BACZmjB,YAAaggD,IAGfF,GAAQ1vB,UAAU,mBAAoB0vB,GAAQpgD,YAa9CogD,GAAQ5/C,YAAc,SAAS1mB,EAAQymE,EAAiBl3D,GAMtDj8B,KAAKmzF,gBAAkBA,EAMvBnzF,KAAKu8B,WAAaN,EAMlBj8B,KAAKmB,OAMLnB,KAAKoF,OAMLpF,KAAK2jC,iBAEL3jC,KAAK2jC,cAAclpC,KAAK0zC,EAAA,EAAgBnuC,KAAKu8B,WAAY,SAAUv8B,KAAKozF,WAAYpzF,OAEpF0sB,EAAOa,IAAI,WAAYvtB,KAAKm3C,eAAe95C,KAAK2C,QAlClDgzF,GAAQ5/C,6DA2CR4/C,GAAQ5/C,YAAYz4C,UAAUy4F,WAAa,WAAW,IAAA7wF,EAAAvC,KACpDA,KAAKu8B,WAAW12B,kBAAkBhC,KAAK,SAAC1C,GAEtCoB,EAAKpB,OAASoB,EAAK6C,OAASjE,EAAOiE,OAAO7C,EAAK6C,QAAUjE,KAW7D6xF,GAAQ5/C,YAAYz4C,UAAU04F,SAAW,SAAShyF,EAAOo8B,GACnDp8B,GACFrB,KAAKmzF,gBAAgBp2C,SAAS17C,EAAOo8B,IAQzCu1D,GAAQ5/C,YAAYz4C,UAAUw8C,eAAiB,WAC7Cn3C,KAAK2jC,cAAczgC,QAAQirC,EAAA,GAC3BnuC,KAAK2jC,cAAcppC,OAAS,GAI9By4F,GAAQjjE,WAAW,6BACjBijE,GAAQ5/C,aAGV,IAAAkgD,GAAA,GCnLAC,GAPgBtrF,QAAQlM,OAAO,kBAC7Bu3F,GAA0Bl3F,KAC1B62F,GAAA,EAAgBl3F,OAAOK,KACvBgzE,EAAA,EAAerzE,OAAOK,sQCCxB,IAAMo3F,GAAUvrF,QAAQlM,OAAO,qCAC7B,eA0BF,SAAS03F,GAAoC7mE,EAAQ6mE,GACnD,OAAOA,EAAoC7mE,GAvB7C4mE,GAAQ/gD,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,sCAAuCj3C,EAAQ,SAIpE83F,GAAQ52F,MAAM,sCAKZ,SAACgwB,GACC,IAAMsmB,EAActmB,EAAA,oCACpB,YAAuB1sB,IAAhBgzC,EAA4BA,EACjC,oGAiBNsgD,GAAQpgD,YAAR,WAYE,SAAAmwB,EAAYlwB,EAAUjb,EAAM1L,EAAQm9B,gGAAU6pC,CAAA1zF,KAAAujE,GAQ5CvjE,KAAK2zF,aAML3zF,KAAKmwC,QAAU,KAKfnwC,KAAK4zF,gBAAkB,KAKvB5zF,KAAK6zF,aAAe,KAMpB7zF,KAAK6jE,UAML7jE,KAAK+wF,qBAML/wF,KAAKixF,QAMLjxF,KAAK6qD,OAAS,KAMd7qD,KAAK07C,KAML17C,KAAKojE,UAMLpjE,KAAK+tC,MAAQ,KAMb/tC,KAAK0D,IAAM,KAMX1D,KAAKwY,MAAQ,KASbxY,KAAK2zC,SAAWN,EAMhBrzC,KAAKgqD,KAAO5xB,EAMZp4B,KAAK4zC,OAASlnB,EAMd1sB,KAAK8zF,SAAWjqC,EArHpB,OAAA0Z,EAAAppC,SAAA,uCAAAopC,EAAA5oE,UA2HEm7C,QA3HF,WA2JI,GA7BA91C,KAAK2zF,cAAqC,IAAtB3zF,KAAK2zF,aACzB3zF,KAAKmwC,QAAUnwC,KAAKmwC,SAAW,KAC/BnwC,KAAK4zF,gBAAkB5zF,KAAK4zF,iBAAmB,KAC/C5zF,KAAK6zF,aAAe7zF,KAAK6zF,cAAgB,KACzC7zF,KAAKixF,SAA2B,IAAjBjxF,KAAKixF,QACpBjxF,KAAK+wF,qBAAuB/wF,KAAK+wF,sBAAwB,WACzD/wF,KAAK07C,MAAqB,IAAd17C,KAAK07C,KAEjB17C,KAAK6jE,eAA+B3jE,IAAnBF,KAAK6jE,UACpB7jE,KAAK6jE,UAAY7jE,KAAKixF,QACxBjxF,KAAKojE,eAA+BljE,IAAnBF,KAAKojE,UACpBpjE,KAAKojE,UAAYpjE,KAAKixF,QAGpBjxF,KAAK6jE,WACP7jE,KAAK2zC,SAAS4F,KAAK,wCAAwCsqB,WACzD6tB,YAAe1xF,KAAK+wF,qBACpBgD,OAAU,eAKV/zF,KAAKojE,WACPpjE,KAAK2zC,SAAS4F,KAAK,wCAAwC6pB,WACzDuuB,UAAa,IACbC,SAAY,MAIZ5xF,KAAK4zF,gBAAiB,CACxB,IAAM/gD,EAAQ9K,EAAA,EAAYtkC,OAAOzD,KAAK6zF,cAAgB7zF,KAAK4zC,QACrDogD,EAAWh0F,KAAK8zF,SAAS9zF,KAAK4zF,gBAAnB5zF,CAAoC6yC,GAC/B7yC,KAAK2zC,SAAS4F,KAAK,6DAC3B2Q,OAAyB8pC,KA/J7CzwB,EAAA5oE,UAsKEm+C,MAtKF,WAuKI94C,KAAK07C,MAAO,EACR17C,KAAK2zF,cACP3zF,KAAKi0F,UAzKX1wB,EAAA5oE,UAqMEs5F,OArMF,WAsMIj0F,KAAKmwC,QAAU,KACfnwC,KAAK6qD,OAAS,KACd7qD,KAAK+tC,MAAQ,KACb/tC,KAAK0D,IAAM,KACX1D,KAAKwY,MAAQ,MA1MjB07E,GAAA3wB,IAAAz5D,IAAA,QAAApN,IAAA,WAkLI,OACEmuD,OAAU7qD,KAAK6qD,QAAU,QACzBryC,MAASxY,KAAKwY,OAAS,YApL7B1O,IAAA,aAAApN,IAAA,WA6LI,GAAIsD,KAAK0D,IACP,OAA8B1D,KAAKgqD,KAAKmqC,mBAAmBn0F,KAAK0D,SA9LtE6/D,EAAA,GA4PAiwB,GAAQlwB,UAAU,qBAChBH,UACEwwB,aAAgB,KAChBxjD,QAAW,KACXyjD,gBAAmB,KACnBC,aAAgB,KAChB5C,QAAW,KACXptB,UAAa,KACbktB,qBAAwB,KACxBlmC,OAAU,KACVnP,KAAQ,KACR0nB,UAAa,KACbr1B,MAAS,KACTrqC,IAAO,KACP8U,MAAS,MAEXuX,WAAYyjE,GAAQpgD,YACpBF,YAAaugD,KAIf,IAAAW,GAAA,gCCxTMC,GAAUpsF,QAAQlM,OAAO,kBAuB/Bs4F,GAAQzhD,WAAa,WACnB,OACEqM,SAAU,IAMVC,KAAM,SAACrM,EAAO3mB,EAASizB,GAErB,IAAMm1C,EACGzhD,EAAM1lB,MAAMgyB,EAAA,aACrBpX,EAAA,EAAYvhB,iBAAiB8tE,EAASC,GAAA,GAEtC,IAAMzvF,EACG+tC,EAAM1lB,MAAMgyB,EAAA,gBACrBpX,EAAA,EAAYvhB,iBAAiB1hB,EAAK49E,GAAA,GAElC4R,EAAQ3R,UAAUz2D,EAAQ,IAC1BpnB,EAAIshF,WAAWkO,MAMrBD,GAAQlhD,UAAU,cAAekhD,GAAQzhD,YAGzC,IAAA4hD,GAAA,uBCvDMC,GAAUxsF,QAAQlM,OAAO,qBAwB/B04F,GAAQ7hD,WAAa,SAASkvB,GAC5B,OACE7iB,SAAU,IACVpM,OACE6hD,YAAe,kBACfr4E,UAAa,6BAOf6iC,KAAM,SAACrM,EAAO3mB,EAASizB,GACrB,IAAM9iC,EAAY,eAAgBylD,EAClCjvB,EAAA,UAAqBx2B,EAChBA,GAGL6P,EAAQ0W,GAAG,SAAU,SAAC+xD,GAEpB,IAAMC,EAAa,IAAI9yB,EAAQ+yB,WAC/BD,EAAWE,OAIT,SAASvuE,GACPssB,EAAMoG,OAAO,WACXpG,EAAA,YAAuBtsB,EAAIE,OAAOrrB,UAGxCw5F,EAAWG,WAAWJ,EAAYluE,OAAOuuE,MAAM,SA9BvDP,GAAQ7hD,+BAqCR6hD,GAAQthD,UAAU,iBAChBshD,GAAQ7hD,YAGV,IAAAqiD,GAAA,GCjEMC,GAAUjtF,QAAQlM,OAAO,6BAe/Bm5F,GAAQjyD,SAAW,SAAS6+B,GAC1B,gBAKWqzB,GACP,IAAMC,EAAMtzB,EAAQvgD,UAChB8zE,EAAmBD,EAAIE,WAAaF,EAAIG,UACtCH,EAAII,iBAAmBJ,EAAIK,gBAAkBL,EAAIM,aAQvD,OAPKhmF,MAAMC,QAAQ0lF,KACjBA,GAAoBA,KAItBA,GAFAA,EAAmBA,EAAiBvwF,IAAI,SAAApC,GAAA,OAAQA,EAAKyf,UAAU,EAAG,MAE9B/c,OAAO,SAAC1C,EAAM4mB,EAAO47C,GAAd,OAAsBA,EAAIzjD,QAAQ/e,IAAS4mB,KAC1ClkB,OAAO,SAAA1C,GAAA,OAA6C,GAArCyyF,EAAmB1zE,QAAQ/e,KAC5D,KAjBhCwyF,GAAQjyD,6BAqBRiyD,GAAQzxD,QAAQ,yBAA0ByxD,GAAQjyD,UAGlD,IAAA0yD,GAAA,uBCJAC,GAnBgB3tF,QAAQlM,OAAO,uBAC7B85F,GAAA,EAAuB95F,OAAOK,KAC9B05F,GAAA,EAAqB15F,KACrBo4F,GAAyBp4F,KACzB67E,GAAA,EAA4B77E,KAC5B25F,GAAA,EAAiB35F,KACjBo5E,GAAA,EAAoBz5E,OAAOK,KAC3BwuC,GAAA,EAAsB7uC,OAAOK,KAC7B40C,GAAA,EAAaj1C,OAAOK,KACpB64F,GAA4B74F,KAC5BqpF,GAAA,EAAgBrpF,KAChBu5F,GAA2Bv5F,KAC3B45F,GAAA,EAA0B55F,KAC1B65F,GAAA,EAAal6F,OAAOK,KACpB87E,GAAA,EAAwBn8E,OAAOK,KAC/ByuC,EAAA,EAAgB9uC,OAAOK,OC7BnB85F,GAAUjuF,QAAQlM,OAAO,gBAC7B0/E,GAAA,EAAoB1/E,OAAOK,OAiC7B85F,GAAQ3sC,WAAa,SAASuyB,EAAgBp8E,GAC5C,OACEu/C,SAAU,IACVpM,OAAO,EACPqM,KAAM,SAACrM,EAAOsjD,EAAMh3C,GAClB,IAAMr6C,EAAM+tC,EAAM1lB,MAAMgyB,EAAA,iBACpBi3C,EAAiB,KACjBC,EAAuB,KAOrBz7C,EAAkB,SAASr0B,GAC/B,IAAM+M,EAAa/M,EAAI+M,WACvBwoD,EAAe1hD,OACb9G,aACAxuB,SAUEgiD,EAAqB,SAASvgC,GAClC,IAAKA,EAAI0M,SAAU,CACjB,IAAM6nB,EAAQh2C,EAAIy2C,cAAch1B,EAAI44C,eAM9Bm3B,EAAMxxF,EAAIyxF,oBAAoBz7C,EAAO,kBAAM,QAAM56C,EALrC,SAASyC,GACzB,IAAM0lB,EAAU1lB,EAAMjG,IAAI,WACpB85F,EAAY7zF,EAAMjG,IAAI,kBAC5B,OAAO2rB,KAAamuE,IAGtB1xF,EAAI21D,mBAAmBpjD,MAAMqjD,OAAS47B,EAAM,UAAY,KAmC5DzjD,EAAM5lB,OAAOkyB,EAAA,mBACX,SAACv+B,EAAQsM,GACHtM,GA7BNw1E,EAAiBjoD,EAAA,EAAgBrpC,EAAK,cAAe81C,IAEnDl7C,EAAUa,IAAI,oBAAsBb,EAAUhD,IAAI,wBAEnC+5F,cACfJ,EAAuBloD,EAAA,EAAgBrpC,EAAK,cAAegiD,MAQtC,OAAnBsvC,IACFjoD,EAAA,EAAuBioD,GACvBA,EAAiB,MAEU,OAAzBC,IACFloD,EAAA,EAAuBkoD,GACvBA,EAAuB,OAE2B,IAAhDxjD,EAAM1lB,MAAMgyB,EAAA,wBACd28B,EAAej3D,cAnEzBqxE,GAAQ3sC,kDAqFR2sC,GAAQ/iD,UAAU,eAAgB+iD,GAAQ3sC,YAG1C,IAAAmtC,GAAA,gCC/EMC,GAAsB,SAASl3F,EAAO85B,EAAiBq9D,GAAyB,IAAAr0F,EAAAvC,KAE9EoI,EAAUwuF,EAMhB52F,KAAKssC,KAAOlkC,EAAQ1E,IAMpB1D,KAAK62F,kBAAuC32F,IAAxBkI,EAAQgrD,YAA4BhrD,EAAQgrD,YAAc,GAM9EpzD,KAAK82F,aAEL/uD,EAAA,EAAY9oB,YAAY7W,EAAQ2uF,SAAU,iCAC1C3uF,EAAQ2uF,SAAS7zF,QAAQ,SAAC8zF,GACxBz0F,EAAKu0F,UAAUE,EAAQrmF,aAAeqmF,IAOxCh3F,KAAKi3F,kBAAoB7uF,EAAQ8uF,iBAMjCl3F,KAAKm3F,sBAAwB/uF,EAAQgvF,qBAMrCp3F,KAAKq3F,mBAAqBjvF,EAAQkvF,kBAMlCt3F,KAAKK,OAASZ,EAMdO,KAAK25B,QAAUJ,qIAQjBo9D,GAAoBh8F,UAAUkqB,MAAQ,WACpC7kB,KAAKu3F,gBAYPZ,GAAoBh8F,UAAUy/B,MAAQ,SAASlY,EAAWpd,GACxDijC,EAAA,EAAYtkC,OAAOzD,KAAKssC,KACtB,6FAEFtsC,KAAKu3F,eAEL,IAAMC,EAAWt1E,EAAU80E,QAC3B,GAAKh3F,KAAK82F,UAAUl8F,eAAe48F,GAAnC,CAGA,IAAMR,EAAUh3F,KAAK82F,UAAUU,GAEzBC,EAAUz3F,KAAK03F,eAAex1E,EAAUy1E,cAC9B,OAAZF,GAIJz3F,KAAK43F,cAAcZ,EAASS,EAAS3yF,EAAKod,EAAU21E,gBAWtDlB,GAAoBh8F,UAAUi9F,cAAgB,SAASZ,EAAS5xF,EAAQN,EAAK+yF,GAAc,IAAA3xF,EAAAlG,KACnFmQ,EAAY,IAAIq5B,GAAA,EAChBmrB,EAAoBxkD,EAAUikD,iBAClCrrB,QAASjkC,EAAIqa,UAAUkxB,gBAAgBgjB,UACvC3iD,eAAkCxQ,IAAtB82F,EAAQtmF,UAClBsmF,EAAQtmF,UAAY1Q,KAAKi3F,kBAC3BpjC,mBAA0C3zD,IAA1B82F,EAAQnjC,cACtBmjC,EAAQnjC,cAAgB7zD,KAAKm3F,sBAC/BtkC,cAAemkC,EAAQrmF,aACvBmjD,aAAc,OACd1uD,OAAQA,EACRguD,YAAapzD,KAAK62F,eAGdjiC,GAAiB,IAAInrB,eAAgBC,kBAAkBirB,GAI7D30D,KAAKK,OAAOsiD,KAAK3iD,KAAKssC,KAAMsoB,GAF1B5R,SAAUC,eAAgB,6BAEwBp/C,KAAK,SAACC,GACxD,IAAMmZ,EAAW9M,EAAUogC,aAAazsC,EAAS/J,MACjD,GAAuB,GAAnBkjB,EAAS1iB,OAAb,CAKA,IAAMwe,EAAOjU,EAAIka,UACjB,QAAa9e,IAAT6Y,EAAoB,CACtB,IAAMo1E,EAAUjoF,EAAKmxF,mBAErBvyF,EAAIqa,UAAU8wB,IAAI/pC,EAAK4xF,WAAW76E,IAAYlE,OAAMo1E,UAAS4J,SAD5C,GAAI,GAAI,GAAI,MAK/B,GAAIF,EAAc,CAChB,IAAMG,GACJ/6E,SAAYA,EACZqL,GAAM0uE,EAAQrmF,YACd0iE,yBAA4B2jB,EAAQtxF,MACpCA,MAASsxF,EAAQrmF,YACjB+pB,SAAW,GAGbx0B,EAAKyzB,QAAQkB,QAAQpgC,KAAKu9F,GAC1B9xF,EAAKyzB,QAAQiB,MAAQ3d,EAAS1iB,YAWpCo8F,GAAoBh8F,UAAUm9F,WAAa,SAAS76E,GAClD,OAAOA,EAASg7E,OAAO,SAAC74E,EAAQvI,GAAT,OAAqBq3E,GAAA,EAAgB9uE,EAAQvI,EAAQuE,cAAcyE,cAAcquE,GAAA,MAU1GyI,GAAoBh8F,UAAU+8F,eAAiB,SAASC,GACtD,GAA2B,GAAvBA,EAAap9F,OACf,OAAO,KAET,IAAMoiE,EAAI1zB,GAYV,OAAO0tD,GAAoBuB,IAAIP,EAAa7yF,IAXd,SAASqzF,GACrC,IAAMV,EAAUU,EAAYV,QAAQ3yF,IAAI,SAACszF,GACvC,IAAM76F,EAAY66F,EAAU76F,UAC5B,OAAImS,MAAMC,QAAQpS,GACTo5F,GAAoBuB,IAAI36F,EAAUuH,IAAI,SAAAuzF,GAAA,OAAQ17B,EAAE27B,QAAQF,EAAUp7F,SAAUq7F,MAE5E17B,EAAE27B,QAAQF,EAAUp7F,SAAUo7F,EAAU76F,aAGnD,OAAOo5F,GAAoB4B,KAAKd,OAapCd,GAAoB4B,KAAO,SAASd,GAClC,OAAOd,GAAoB6B,aAAaf,EAASxuD,GAAA,MAWnD0tD,GAAoBuB,IAAM,SAAST,GACjC,OAAOd,GAAoB6B,aAAaf,EAASxuD,GAAA,KAanD0tD,GAAoB6B,aAAe,SAASf,EAASgB,GACnD,OAAOhB,EAAQQ,OAAO,SAACS,EAAiBC,GACtC,OAAwB,OAApBD,EACKC,GAEP5wD,EAAA,EAAYtkC,OAAyB,OAAlBk1F,GACZF,EAAOC,EAAiBC,KAEhC,OASLhC,GAAoBh8F,UAAU48F,aAAe,WAC3Cv3F,KAAK25B,QAAQiB,MAAQ,EACrB56B,KAAK25B,QAAQkB,QAAQ33B,QAAQ,SAACmhB,GAC5BA,EAAOpH,SAAS1iB,OAAS,MAQ7Bo8F,GAAoB56F,OAASkM,QAAQlM,OAAO,wBASjBa,MAAM,2BAE7B8G,IAAK,GACLqzF,YACAG,iBAAkB,GAClBE,qBAAsB,KAK1BT,GAAoB56F,OAAOoM,QAAQ,mBAAoBwuF,IAGvD,IAAAiC,GAAA,GChRMC,GAAU,SAAS9kF,EAAQ2Y,EAAQhtB,GAAW,IAAAwG,EAAAlG,KAMlDA,KAAKwgD,aAAe9gD,EAAUhD,IAAI,gBAC9BsD,KAAKwgD,aAAah5C,SAAS,WAE7BrK,OAAOsuC,SAAW/rC,GAGpBqoC,EAAA,EAAYvhB,iBAAiBxmB,KAAK8E,IAAK49E,GAAA,GAMbhjF,EAAUhD,IAAI,qBACtBga,cAAcqxB,EAAA,EAAYtkC,OAAOzD,KAAK8E,IAAIqa,UAAUkxB,kBAMtErwC,KAAKmzF,gBAAkBzzF,EAAUhD,IAAI,mBAMrCsD,KAAK68C,gBAAkBn9C,EAAUhD,IAAI,kBAOrCsD,KAAKu8B,WAAa78B,EAAUhD,IAAI,aAOhCsD,KAAK84F,WAAap5F,EAAUhD,IAAI,gBAMhC,IAAMq8F,EAAoBr5F,EAAUhD,IAAI,4BAMxCsD,KAAKgG,mBAAoB,EAKzBhG,KAAKg5F,yBAA2B,WAAW,IAAAz2F,EAAAvC,KACzCA,KAAKu8B,WAAWv2B,oBAAoBnC,KAAK,SAACmC,GACxCzD,EAAKyD,kBAAoBA,KAO7B,IAAMizF,EAAa,SAAC1yE,GAClB,IAAMg+B,EAAOh+B,EAAI5C,OAAO4gC,KAClB20C,EAA4B,OAAlB30C,EAAKE,SAAqBF,EAAKL,aAAUhkD,EAIzDgG,EAAKq2B,WAAW12B,kBAAkBhC,KAAK,SAAC1C,GACtC,IAAM6iD,EAAkB99C,EAAK27C,QAAQmC,gBACjCA,GACAA,EAAgBm1C,YACkB,iBAAlCn1C,EAAgBm1C,WAAW,KAC7BjzF,EAAKkzF,sBAAuB,KAKhC,IAAMC,EAAoBnzF,EAAKitF,gBAAgBl2C,eAC/C/2C,EAAKitF,gBAAgBn2C,aAAa,IAAI,GACrB,UAAbz2B,EAAI7oB,MACNwI,EAAKozF,oBAAoBD,GAG3BnzF,EAAKq2B,WAAWz1B,WAAWoyF,GAC3BhzF,EAAK8yF,4BAGP7qD,EAAA,EAAgB4qD,EAAmB,QAASE,GAC5C9qD,EAAA,EAAgB4qD,EAAmB,QAASE,GAC5C9qD,EAAA,EAAgB4qD,EAAmB,SAAUE,GAM7Cj5F,KAAKu5F,oBACHC,SAAU,QACVC,YAA6C/5F,EAAUhD,IAAI,mBAC3Dg9F,aAA8Ch6F,EAAUhD,IAAI,oBAC5Dia,oBAAoB5C,EAAO4lF,MAAQ,OACnCj2F,IAA6BhE,EAAUhD,IAAI,uBAO7CsD,KAAK8C,cAGL9C,KAAK84F,WAAW9mB,cAAchyE,KAAK8C,YAGnC,IAAM82F,EAAwBl6F,EAAUhD,IAAI,yBAM5C,GAJAk9F,EAAsB7nB,iBAAiB/xE,KAAK8E,KAE5C80F,EAAsB5nB,cAAchyE,KAAK8C,YAErCpD,EAAUa,IAAI,wBAAyB,CAEzC,IAAMs5F,EAAoBn6F,EAAUhD,IAAI,wBACxC,IAAK,IAAMo9F,KAAOD,OACa35F,IAAzBF,KAAK8C,WAAWg3F,KAClB95F,KAAK8C,WAAWg3F,GAAOD,EAAkBC,IAS/C95F,KAAK4vE,oBAAsBlwE,EAAUhD,IAAI,0BAGzCgwB,EAAO0rC,iBAAiB,kBAAMlyD,EAAKpD,YAAY,WAC7CoD,EAAK0pE,oBAAoB1mD,iBAAiBhjB,EAAKpB,IAAKoB,EAAKpD,cAG3D9C,KAAK4vE,oBAAoBhtC,GAAG,SAAU,WACpC18B,EAAK0pE,oBAAoB1mD,iBAAiBhjB,EAAKpB,IAAKoB,EAAKpD,cAO3D9C,KAAK+5F,gBAAiB,EAMtB/5F,KAAKg6F,iBAAkB,EAEvB,IAAMC,EAAY,IAAIngB,GAAA,GAAa3hE,OAAQ,IAAK,IAAK,EAAG,MAClD+hF,EAAc,IAAI5O,GAAA,GAAenzE,OAAQ,IAAK,IAAK,EAAG,GAAIK,MAAO,IAOvExY,KAAKm6F,kBAAoB,IAAItgB,GAAA,GAC3BzgE,KAAM6gF,EACNhhF,MAAO,IAAI2uC,GAAA,GACTxuC,KAAM6gF,EACN9gF,OAAQ,EACRb,OAAQ4hF,IAEV5hF,OAAQ4hF,IAOVl6F,KAAKo5F,sBAAuB,EAO5Bp5F,KAAKo6F,aAAc,EAOnBp6F,KAAKq6F,gBAAiB,EAMtBr6F,KAAKs6F,kBAAmB,EAMxBt6F,KAAKu6F,aAAc,EAMnBv6F,KAAKg8E,gBAAkBt8E,EAAUhD,IAAI,kBAGrCgwB,EAAOO,OAAO,kBAAM/mB,EAAKo0F,kBAAkB,SAAC15E,GAGrCA,GAAW1a,EAAKk0F,aACnBl0F,EAAK81E,gBAAgBn3D,QAEvB3e,EAAKm0F,gBAAkBz5E,EACvB1a,EAAKq0F,YAAc35E,IAQrB5gB,KAAKw6F,oBAAqB,EAO1Bx6F,KAAKy6F,qBAAsB,EAM3Bz6F,KAAK06F,mBAAoB,EAMzB16F,KAAK26F,wBAAyB,EAM9B36F,KAAK6hD,QAAUniD,EAAUhD,IAAI,WAK7BsD,KAAK21F,mBAAqBj2F,EAAUhD,IAAI,0BAKxCsD,KAAK46F,aAAel7F,EAAUhD,IAAI,oBAKlCsD,KAAK66F,iBAAmBn7F,EAAUhD,IAAI,oBAKtCsD,KAAK0sB,OAASA,EAMd1sB,KAAK+1C,KAML/1C,KAAK86F,YAAcp7F,EAAUhD,IAAI,eAMjCsD,KAAK+6F,SAAWr7F,EAAUhD,IAAI,YAM9BsD,KAAKH,eAAiBH,EAAUhD,IAAI,kBAEpCsD,KAAKg7F,eAQLh7F,KAAKi7F,cANY,WAYav7F,EAAUhD,IAAI,yBACtByoB,KAAKnlB,KAAK8E,KAMhC,IAAM4uC,EAAsBh0C,EAAUhD,IAAI,uBAEpCw+F,EAAoB,IAAI1hB,GAAA,EAAqBx5E,KAAM,eACzD0zC,EAAoB6G,aAtBH,WAsB0B2gD,GAAmB,GAE9D,IAAMC,EAAuB,IAAI3hB,GAAA,EAAqBx5E,KAAM,sBAC5D0zC,EAAoB6G,aAzBH,WAyB0B4gD,GAAsB,GAEjE,IAAMC,EAAwB,IAAI5hB,GAAA,EAAqBx5E,KAAM,uBAC7D0zC,EAAoB6G,aA5BH,WA4B0B6gD,GAAuB,GAElE,IAAMC,EAAsB,IAAI7hB,GAAA,EAAqBx5E,KAAM,qBAC3D0zC,EAAoB6G,aA/BH,WA+B0B8gD,GAAqB,GAEhE,IAAMC,EAA2B,IAAI9hB,GAAA,EAAqBx5E,KAAM,0BAChE0zC,EAAoB6G,aAlCH,WAkC0B+gD,GAA0B,GAErE,IAAMC,EAAqB,IAAI/hB,GAAA,EAAqBx5E,KAAM,oBAC1D0zC,EAAoB6G,aArCH,WAqC0BghD,GAAoB,GAE/D7uE,EAAO8uE,MAAMjuE,IAAI0lE,GAAA,EAAgB71C,UAAUC,eAAgB,SAAC56B,EAAOrmB,GACjE8J,EAAKq2B,WAAW32B,eAAexJ,GAAMyH,KAAK,SAACxC,GACzC6E,EAAKu1F,sBAAsBp6F,OAS/BrB,KAAK07F,8BAAgC,SAASC,GAAe,IAAA30F,EAAAhH,KAC3DA,KAAKu8B,WAAWj6B,cAAcuB,KAAK,SAACW,GAClC,IAAIo3F,SAKJ,GAJKD,IAEHC,EAAa50F,EAAK8xF,WAAW+C,mBAAmBr3F,KAE7Co3F,EAAY,CAEf,IAAM53C,EAAkBh9C,EAAK66C,QAAQmC,gBACrC,GAAIA,EAAiB,CACnB,IAAM83C,EAAsB93C,EAAgB+3C,gBAC5C,GAAID,EAAoBvhG,OAAS,EAAG,CAClC,IAAMyhG,EAAsBF,EAAoB,GAChDF,EAAa34F,EAAA,EAAauB,EAAQ,SAAA7B,GAAA,OAASA,EAAMjG,IAAI,WAAas/F,OAInEJ,GAAcp3F,EAAO,KAGxBo3F,EAAap3F,EAAO,IAGlBo3F,GACF50F,EAAK4oE,oBAAoBhtE,IAAIoE,EAAKlC,IAAK82F,MAG3Cv+F,KAAK2C,MAEPA,KAAK07F,+BAA8B,GAKnC,IAAMO,EAAO9+F,OAAO8+F,SAIpB9+F,OAAO8+F,KAAOA,EAWdA,EAAKC,gBAAkB,SACrBx4F,EAAKqqC,EAAOouD,EAAWC,EAAYC,GAEnCn2F,EAAKo2F,iBAAmB54F,EACxBu4F,EAAKM,WAAWxuD,EAAOouD,EAAWC,EAAYC,IAYhDJ,EAAKO,cAAgB,SACnBrsD,EAASpC,EAAOouD,EAAWC,EAAYC,GAEvCn2F,EAAKu2F,qBAAuBtsD,EAC5B8rD,EAAKM,WAAWxuD,EAAOouD,EAAWC,EAAYC,IAShDJ,EAAKM,WAAa,SAACxuD,EAAOouD,EAAWC,EAAYC,GAE/Cn2F,EAAKw2F,mBAAqB3uD,EAC1B7nC,EAAKy2F,mBAAoB,EAErBR,IACFj2F,EAAK02F,mBAAwBT,EAA7B,MAEEC,IACFl2F,EAAK22F,oBAAyBT,EAA9B,OAEgB,IAAdC,GACFn2F,EAAKwmB,OAAOusB,UAShBj5C,KAAKmlF,cAAe,EASpBnlF,KAAK8iF,iBAEL,IAAMga,EAAO3/F,OAAO2/F,SAIpB3/F,OAAO2/F,KAAOA,EAIdA,EAAKC,MAAQ5/F,OAAO2/F,KAAKC,UAUzBD,EAAKC,MAAMC,eAAiB,SAASt5F,EAAKqqC,EAAOouD,EAAWC,EAAYC,GACtEJ,EAAKC,gBAAgBx4F,EAAKqqC,EAAOouD,EAAWC,EAAYC,IAO1Dr8F,KAAKy8F,qBAAuB,KAM5Bz8F,KAAKi9F,kCAAoC,WAMzCj9F,KAAK68F,oBAAsB,KAM3B78F,KAAK28F,mBAAoB,EAMzB38F,KAAK08F,mBAAqB,KAM1B18F,KAAKs8F,iBAAmB,KAMxBt8F,KAAK48F,mBAAqB,4FAS5B/D,GAAQl+F,UAAUmzE,0BAA4B,WAC5C,OAA4C,IAArC9tE,KAAK6hD,QAAQqB,qBAStB21C,GAAQqE,iBAAmB,SAAS14F,EAAQ24F,GAC1C,OAAIA,GAAUA,EAAO5iG,OAAS,EACrB0I,EAAA,EAAauB,EAAQ,SAAA7B,GAAA,OAASA,EAAMjG,IAAI,WAAaygG,EAAO,KAE9D,MAQTtE,GAAQl+F,UAAUyiG,eAAiB,SAASrnD,GAC1ChO,EAAA,EAAYtkC,OAAOsyC,KAAQ/1C,KAAK+6F,UAChC/6F,KAAKH,eAAew9F,mBAAmBtnD,GACvC/1C,KAAKH,eAAey9F,WAAWt9F,KAAK+6F,SAAShlD,IAC7C/1C,KAAK66F,iBAAiBj4F,IAAImzC,GAC1B/1C,KAAK+1C,KAAOA,GAMd8iD,GAAQl+F,UAAUqgG,aAAe,WAAW,IAAAz8D,EAAAv+B,KAC1CA,KAAK0sB,OAAOO,OAAO,kBAAMsR,EAAKwX,MAAM,SAACyB,GACnCjZ,EAAKq8D,aAAa78D,aAChBgY,KAAQyB,MAIZ,IAAMg+C,EACDx1F,KAAK21F,mBAAmBj7F,OAAOs/C,KAAKh6C,KAAK+6F,WACxCwC,EACDv9F,KAAK46F,aAAav5C,gBAAgB,QAEvC,YAAoBnhD,IAAhBq9F,GAA6BA,KAAev9F,KAAK+6F,cACnD/6F,KAAKo9F,eAAeG,QAESr9F,IAApBs1F,GAAiCA,KAAmBx1F,KAAK+6F,cAClE/6F,KAAKo9F,eAAe5H,QAMpBx1F,KAAKo9F,eAAep9F,KAAK86F,cAU7BjC,GAAQl+F,UAAU8gG,sBAAwB,SAASp6F,GAAO,IAAAq9B,EAAA1+B,KACxDA,KAAKu8B,WAAWj6B,cAAcuB,KAAK,SAACW,GAClC,IAAI7B,WAGJA,EAAQ+7B,EAAKo6D,WAAW+C,mBAAmBr3F,KAE7Bk6B,EAAKmjB,QAAQmC,kBAEzBrhD,EAAQk2F,GAAQqE,iBAAiB14F,EAAQk6B,EAAKmjB,QAAQmC,gBAAgB+3C,mBAGnEp5F,GAAStB,IAEZsB,EAAQk2F,GAAQqE,iBAAiB14F,EAAQnD,EAAM2iD,gBAAgB+3C,kBAG5Dp5F,IAEHA,EAAQ6B,EAAOA,EAAOjK,OAAS,EAAI,EAAI,IAGzCwtC,EAAA,EAAYtkC,OAAOd,GACnB+7B,EAAKkxC,oBAAoBhtE,IAAI87B,EAAK55B,IAAKnC,MAQ3Ck2F,GAAQl+F,UAAU2+F,oBAAsB,SAASkE,GAAmB,IAAAr+D,EAAAn/B,KAClEA,KAAKu8B,WAAW12B,kBAAkBhC,KAAK,SAAC1C,GACtC,IAAMgB,EAAYg9B,EAAK25D,WAAW2E,sCAClC,GAAIt7F,EAAW,CACb,IAAMd,EAAQ+tE,EAAA,EAAeltE,gBAAgBf,EAA+BgB,GACxEd,GACF89B,EAAKg0D,gBAAgBp2C,SAAS17C,GAAO,QAGvC89B,EAAKg0D,gBAAgBn2C,aAAawgD,MASxC3E,GAAQl+F,UAAU+iG,gBAAkB,WAClC,IAAMC,EAAQ3sE,SAASC,cAAc,QACrC0sE,EAAM3X,UAAY,uBAClB2X,EAAMtmF,MAAM+a,UAAY,mBACxB,IAAMwrE,EAAe5sE,SAASC,cAAc,QAE5C,OADA2sE,EAAaxqE,YAAYuqE,GAClBC,IAIT/E,GAAQ98F,OAASkM,QAAQlM,OAAO,kCAC9B,UACA,oBACAiyE,EAAwB5xE,KACxB6zE,EAAoC7zE,KACpCs4E,EAAoBt4E,KACpBq6E,GAAuBr6E,KACvB+jF,GAAiB/jF,KACjB6lF,GAAmB7lF,KACnBmqF,GAAanqF,KACbw2F,GAAoBx2F,KACpBy2F,GAAgBz2F,KAChBm3F,GAAen3F,KACfg4F,GAAkCh4F,KAClCw5F,GAAoBx5F,KACpBwuC,GAAA,EAAsB7uC,OAAOK,KAC7Bq/E,GAAA,EAAoB1/E,OAAOK,KAC3Bs6F,GAA2Bt6F,KAC3ByhG,GAAA,EAAuBzhG,KACvBw8F,GAA6B78F,OAAOK,QAIvB2zB,WAAW,qBAAsB8oE,IAGhDA,GAAQ98F,OAAOa,MAAM,4BACnBguC,GAAA,EAAsBztB,WAAWG,IACjCstB,GAAA,EAAsBztB,WAAWC,MAGnCy7E,GAAQ98F,OAAOgY,QAAQ,2BAA4B,sBAKjD,SAAS+pF,EAA0BC,GAEjCD,EAAyBE,sBAAsBD,MAKnDpgG,EAAA,mNCvtBMsgG,EAAU,SAAVniG,EAAmBsM,GAAS,IAAA7F,EAAAvC,KAEhC+nC,EAAA,EAAYtkC,OAAO2E,EAAQ6U,UAE3B2oC,EAAA,EAAqB/qD,KAAKmF,MACxB6lD,gBAAiB/pD,EAAQgqD,iBACzBmW,gBAAiBngE,EAAQoiG,iBACzBhuE,YAAap0B,EAAQo0B,YACrB61B,cAAejqD,EAAQkqD,iBAQzBhmD,KAAKm+F,eAAiB,KAMtBn+F,KAAKo+F,YAAc,EAAG,GAMtBp+F,KAAKs7D,WAAY,EAOjBt7D,KAAKq+F,OAAS,IAAIC,EAAA,EAMlBt+F,KAAKw7D,qBAA6Ct7D,IAA3BkI,EAAQgxD,eAC7BhxD,EAAQgxD,eAAiB,GAM3Bp5D,KAAKu+F,kBAAmB,EAQxBv+F,KAAKu7D,kBAAmB,EAMxBv7D,KAAKw+F,cAAgB,KAOrBx+F,KAAK27D,SAAW,IAAIxwB,EAAA,GAClB9mB,OAAQ,IAAI4mB,EAAA,GACV/mB,iBAAiB,EACjBgnB,QAAS9iC,EAAQ8iC,QAEnB7zB,MAAOjP,EAAQiP,OAASkvC,EAAA,EAAsBuV,gCAC9Cv3C,sBAAsB,EACtBC,wBAAwB,IAO1BxkB,KAAKorD,UAAYhjD,EAAQ6U,SAEzBjd,KAAKorD,UAAUloD,QAAQ,SAAA2T,GAAA,OAAWtU,EAAK+3D,YAAYzjD,KACnDs3B,EAAA,EAAgBnuC,KAAKorD,UAAW,MAAOprD,KAAKs3C,kBAAmBt3C,MAC/DmuC,EAAA,EAAgBnuC,KAAKorD,UAAW,SAAUprD,KAAKurD,qBAAsBvrD,OAIvE8wC,EAAA,EAAgBmtD,EAASr4C,EAAA,GAOzBq4C,EAAQtjG,UAAU2/D,YAAc,SAASzjD,GACvC,GAAwC,YAApCA,EAAQuE,cAAc9D,WACpBT,EAAQna,IAAI+hG,EAAA,EAA4BlgG,WAAY,CACxD,IAAM8b,EAA0CxD,EAAQuE,cACxDpb,KAAK0+F,qBAAqB7nF,EAASwD,GAEnC,IAAMvV,EAAM9E,KAAKyzB,SACb3uB,GACF9E,KAAK2+F,sBAAsB3+F,KAAKo+F,WAAYt5F,KAUlDm5F,EAAQtjG,UAAU8hE,oBAAsB,SAASl2C,GAC/C,IAAKvmB,KAAKs7D,UAAW,CACnBt7D,KAAKs7D,WAAY,EAEjB,IAAM74C,EAAQ,IAAIqlC,EAAA,EAAgB,eAAgB7qC,SAAUjd,KAAKorD,YACjEprD,KAAK0H,cAAc+a,KASvBw7E,EAAQtjG,UAAUggE,eAAiB,SAAS9jD,GAC1C7W,KAAK4+F,0BAA0B/nF,GAG3B7W,KAAKm+F,gBAAiD,IAA/Bn+F,KAAKorD,UAAUjD,cACxCnoD,KAAK27D,SAAS9vC,YAAYjH,cAAc5kB,KAAKm+F,gBAC7Cn+F,KAAKm+F,eAAiB,OAS1BF,EAAQtjG,UAAUikG,0BAA4B,SAAS/nF,GACrD,IAAMgoF,EAAQ7+F,KAAKq+F,OACmCS,KACtDD,EAAM37F,QAIJ,SAACd,GACKyU,IAAYzU,EAAKyU,SACnBioF,EAAcrkG,KAAK2H,KAGzB,IAAK,IAAI/H,EAAIykG,EAAcvkG,OAAS,EAAGF,GAAK,IAAKA,EAC/CwkG,EAAMpwD,OAAOqwD,EAAczkG,KAQ/B4jG,EAAQtjG,UAAUyqB,OAAS,SAAStgB,GAClC9E,KAAK27D,SAASv2C,OAAOtgB,GACrB8gD,EAAA,EAAqBjrD,UAAUyqB,OAAOvqB,KAAKmF,KAAM8E,IAQnDm5F,EAAQtjG,UAAU28C,kBAAoB,SAAS/wB,GAC7C,IAAM1P,EAAU0P,EAAI2F,QACpB6b,EAAA,EAAYvhB,iBAAiB3P,EAASuwC,EAAA,EACpC,mCACFpnD,KAAKs6D,YAAYzjD,IAQnBonF,EAAQtjG,UAAU4wD,qBAAuB,SAAShlC,GAChD,IAAM1P,EAAqC0P,EAAI2F,QAC/ClsB,KAAK26D,eAAe9jD,IAStBonF,EAAQtjG,UAAU+jG,qBAAuB,SAAS7nF,EAASwD,GACzD,IAC2B/Y,EADrBy9F,EAAQ1kF,EAAS0B,iBACnBF,SAAaxhB,SAAG+G,SAAI7F,SAAOyjG,SAASC,SACxC,IAAK1jG,EAAI,EAAG+F,EAAKy9F,EAAMxkG,OAAQgB,EAAI+F,IAAM/F,EAEvC,IAAKlB,EAAI,EAAG+G,GADZya,EAAckjF,EAAMxjG,IACShB,OAAS,EAAGF,EAAI+G,IAAM/G,EAEjD4kG,GACEpoF,QAASA,EACTwD,SAAUA,EACVoT,OAAQlyB,GACR+tB,MAAOjvB,EACP2kG,QANFA,EAAUnjF,EAAYve,MAAMjD,EAAGA,EAAI,IAQnC2F,KAAKq+F,OAAOa,OAAO9/E,EAAA,EAAwB4/E,GAAUC,IAW3DhB,EAAQtjG,UAAUwkG,6BAA+B,SAAStjF,GACxD,IAAIujF,EAAgBp/F,KAAKm+F,eACpBiB,EAK4CA,EAAchkF,cACpDosC,eAAe3rC,IALxBujF,EAAgB,IAAIh4C,EAAA,EAAU,IAAIC,EAAA,EAAYxrC,IAC9C7b,KAAKm+F,eAAiBiB,EACtBp/F,KAAK27D,SAAS9vC,YAAYpH,WAAW26E,IAKvC,OAAOA,GAUTnB,EAAQoB,gBAAkB,SAASh2B,EAAGxnD,GACpC,OAAOwnD,EAAE//C,MAAQzH,EAAEyH,OAUrB20E,EAAQn4C,iBAAmB,SAASv/B,GAClCvmB,KAAK2+F,sBAAsBp4E,EAAIu0B,MAAOv0B,EAAIzhB,KAC1C9E,KAAKw+F,iBACLx+F,KAAKs7D,WAAY,EACjB,IAAM8jC,EAAgBp/F,KAAKm+F,eAC3B,GAAIiB,EAAe,CACjB,IACM/lC,EADyC+lC,EAAchkF,cACrCW,iBAClBujF,EAAelgF,EAAA,GAAyBi6C,IACxCkmC,EAAqBv/F,KAAKq+F,OAAOmB,YAAYF,GAC7CG,KACNF,EAAmBzb,KAAKma,EAAQoB,iBAChC,IAAK,IAAIhlG,EAAI,EAAG+G,EAAKm+F,EAAmBhlG,OAAQF,EAAI+G,IAAM/G,EAAG,CAC3D,IAAMqlG,EAAmBH,EAAmBllG,GACtC2kG,EAAUU,EAAiBV,QAC7BxxE,EAAMsjB,EAAA,EAAc4uD,EAAiB7oF,SACnC4W,EAAQiyE,EAAiBjyE,MAC3BA,IACFD,OAAWC,EAAMlmB,KAAK,MAEnBk4F,EAAkBjyE,KACrBiyE,EAAkBjyE,GAAO,IAAI9d,MAAM,IAEjC4jB,EAAA,EAAoB0rE,EAAQ,GAAI3lC,KAC/BomC,EAAkBjyE,GAAK,IAC1BxtB,KAAKw+F,cAAc/jG,MAAMilG,EAAkB,IAC3CD,EAAkBjyE,GAAK,GAAKkyE,GACnBpsE,EAAA,EAAoB0rE,EAAQ,GAAI3lC,KACtComC,EAAkBjyE,GAAK,KAC1BxtB,KAAKw+F,cAAc/jG,MAAMilG,EAAkB,IAC3CD,EAAkBjyE,GAAK,GAAKkyE,IAIlC,QAAS1/F,KAAKm+F,gBAShBF,EAAQC,iBAAmB,SAAS33E,GAClCvmB,KAAKy8D,oBAAoBl2C,GACzB,IAAM8yC,EAAS9yC,EAAI+M,WACbjZ,EAA0Cra,KAAKw+F,cAAc,GAAG,GAAGnkF,SACnE0F,EAASX,EAAA,EAAmB/E,EAASwF,aAErC5F,EAAO,IAAI0tC,EAAA,GAAkB5nC,EAAQs5C,IAMrC7mC,EAAS,IAAIo1B,EAAA,EAAa7nC,EAAQ9F,EAAKkuC,aACvCtsC,EAAcnhB,OAAAilG,EAAA,EAAAjlG,CAAW83B,EAAQ,IAAIzW,iBAC3C/b,KAAK4/F,wBAAwBvlF,EAAUwB,GAGvC,IAAM9B,EAAS8lF,EAAA,EAA6B52C,UAAUhvC,GACtDja,KAAKorD,UAAUlhC,WAAW,GAAGtnB,IAAI67F,EAAA,EAA4B5/F,OAAQkb,GAErE/Z,KAAKm/F,6BAA6B9lC,IAUpC4kC,EAAQj4C,eAAiB,SAASz/B,GAKhC,GAJAvmB,KAAKq+F,OAAOx5E,QACZ7kB,KAAK0+F,qBAAqB1+F,KAAKw+F,cAAc,GAAG,GAAG3nF,QACjD7W,KAAKw+F,cAAc,GAAG,GAAGnkF,UAEvBra,KAAKs7D,UAAW,CAElB,IAAM74C,EAAQ,IAAIqlC,EAAA,EAAgB,aAAc7qC,SAAUjd,KAAKorD,YAC/DprD,KAAK0H,cAAc+a,GACnBziB,KAAKs7D,WAAY,EAEnB,OAAO,GAYT2iC,EAAQ/tE,YAAc,SAAS+2B,GAC7B,KAAMA,aAA2B64C,EAAA,GAC/B,OAAO,EAST,OALK74C,EAAgBniD,IAAIqa,UAAU4gF,kBACP,eAAxB94C,EAAgBvpD,MAA0BsC,KAAKggG,wBACjDhgG,KAAK8mD,mBAAmBG,GAGnBrB,EAAA,EAAmB/qD,KAAKmF,KAAMinD,KACjC,GAQNg3C,EAAQtjG,UAAUmsD,mBAAqB,SAASvgC,GAC9CvmB,KAAKo+F,WAAa73E,EAAIu0B,MACtB96C,KAAK2+F,sBAAsBp4E,EAAIu0B,MAAOv0B,EAAIzhB,MAS5Cm5F,EAAQtjG,UAAUgkG,sBAAwB,SAAS7jD,EAAOh2C,GACxD,IAAMm7F,EAAkBn7F,EAAI02C,uBAAuBV,GAM7ColD,EAAYp7F,EAAI02C,wBACnBV,EAAM,GAAK96C,KAAKw7D,gBAAiB1gB,EAAM,GAAK96C,KAAKw7D,kBAC9C2kC,EAAar7F,EAAI02C,wBACpBV,EAAM,GAAK96C,KAAKw7D,gBAAiB1gB,EAAM,GAAK96C,KAAKw7D,kBAC9C4kC,EAAMhhF,EAAA,GAAyB8gF,EAAWC,IAG1C99F,EADQrC,KAAKq+F,OACCmB,YAAYY,GAChC,GAAI/9F,EAAM9H,OAAS,EAAG,CACpB8H,EAAMyhF,KAde,SAASza,EAAGxnD,GACjC,OAAOyR,EAAA,EAAsC2sE,EAAiB52B,EAAE21B,SAC5D1rE,EAAA,EAAsC2sE,EAAiBp+E,EAAEm9E,WAa7D,IACMqB,EADOh+F,EAAM,GACS28F,QACxB3lC,EAAU/lC,EAAA,EAA8B2sE,EAC1CI,GACIC,EAAcx7F,EAAIy7F,uBAAuBlnC,GAC/C,GAAI3+C,KAAK2uC,KAAK/1B,EAAA,EAA6BwnB,EAAOwlD,KAC9CtgG,KAAKw7D,gBAAiB,CACxB,IAAMglC,EAAS17F,EAAIy7F,uBAAuBF,EAAe,IACnDI,EAAS37F,EAAIy7F,uBAAuBF,EAAe,IACnDK,EAAeptE,EAAA,EAA6BgtE,EAAaE,GACzDG,EAAertE,EAAA,EAA6BgtE,EAAaG,GACzDG,EAAOlmF,KAAK2uC,KAAK3uC,KAAKmsD,IAAI65B,EAAcC,IAE9C,GADA3gG,KAAKu+F,iBAAmBqC,GAAQ5gG,KAAKw7D,gBACjCx7D,KAAKu+F,iBAAkB,CACzBllC,EAASqnC,EAAeC,EACtBN,EAAe,GAAKA,EAAe,GACrCrgG,KAAKm/F,6BAA6B9lC,GAClC,IAAMwnC,KACNA,EAAe/vD,EAAA,EAAcuvD,KAAmB,EAEhD,IADA,IAAIrB,SACK3kG,EAAI,EAAG+G,EAAKiB,EAAM9H,OAAQF,EAAI+G,IACrC49F,EAAU38F,EAAMhI,GAAG2kG,QACd1rE,EAAA,EAAoB+sE,EAAe,GAAIrB,EAAQ,KAChD1rE,EAAA,EAAoB+sE,EAAe,GAAIrB,EAAQ,KAC9C1rE,EAAA,EAAoB+sE,EAAe,GAAIrB,EAAQ,KAChD1rE,EAAA,EAAoB+sE,EAAe,GAAIrB,EAAQ,OALR3kG,EAMzCwmG,EAAe/vD,EAAA,EAAckuD,KAAY,EAK7C,SAIFh/F,KAAKm+F,iBACPn+F,KAAK27D,SAAS9vC,YAAYjH,cAAc5kB,KAAKm+F,gBAC7Cn+F,KAAKm+F,eAAiB,OAU1BF,EAAQtjG,UAAUilG,wBAA0B,SAASvlF,EAAUwB,GAC7D7b,KAAKu7D,kBAAmB,EACxBlhD,EAASmtC,eAAe3rC,GACxB7b,KAAKu7D,kBAAmB,GAI1B,IAAAulC,EAAA,EC7cMC,EAAU,SAAS34F,GAAS,IAAA7F,EAAAvC,KAEhC+nC,EAAA,EAAYtkC,OAAO2E,EAAQ6U,UAE3B2oC,EAAA,EAAqB/qD,KAAKmF,MACxB6lD,gBAAiB7lD,KAAKg8D,YACtBC,gBAAiBj8D,KAAKk8D,YACtBnW,cAAe/lD,KAAKm8D,YAOtBn8D,KAAKs7D,WAAY,EAMjBt7D,KAAKghG,cAAgB,IAAI71D,EAAA,GACvB9mB,OAAQ,IAAI4mB,EAAA,GACVC,QAAS9iC,EAAQ8iC,QAEnB7iB,QAASroB,KAAK0gB,YACdrJ,MAAOjP,EAAQiP,OAASkvC,EAAA,EAAsBuV,gCAC9Cv3C,sBAAsB,EACtBC,wBAAwB,IAO1BxkB,KAAKorD,UAAYhjD,EAAQ6U,SAOzBjd,KAAK0lB,SAAW,KAMhB1lB,KAAK0uD,UAML1uD,KAAKihG,QAAU,KAEf9yD,EAAA,EAAgBnuC,KAAKorD,UAAW,MAAOprD,KAAKs3C,kBAAmBt3C,MAC/DmuC,EAAA,EAAgBnuC,KAAKorD,UAAW,SAAUprD,KAAKurD,qBAAsBvrD,MAErEA,KAAKorD,UAAUloD,QAAQ,SAAC2T,GACtBtU,EAAK+3D,YAAYzjD,MAKrBi6B,EAAA,EAAgBiwD,EAASn7C,EAAA,GAOzBm7C,EAAQpmG,UAAUgmB,UAAY,SAASpY,GACrCq9C,EAAA,EAAqBjrD,UAAUgmB,UAAU9lB,KAAKmF,KAAMuI,GAChDvI,KAAKghG,eACPhhG,KAAKghG,cAAc54E,WAAW7f,IAQlCw4F,EAAQpmG,UAAU2/D,YAAc,SAASzjD,GACvC,IAAMqqF,EAAcrqF,EAAQuE,cAC5B,GAAI8lF,aAAuBvB,EAAA,EAAe,CAGxC,IAAMnyE,EAAMsjB,EAAA,EAAcj6B,GACtBnU,EAAO1C,KAAK0uD,OAAOlhC,GACvB,GAAI9qB,EACF,OAUF,IAPA,IAAMy+F,EAAcnhG,KAAKghG,cAAcn1E,YAMjCu1E,EAAUF,EAAYnlF,iBAAiB,GACtCqlF,EAAQ7mG,OAAS,GAClB6mG,EAAQ,GAAG,GAAKA,EAAQ,GAAG,IAAMA,EAAQ,GAAG,IAAMA,EAAQ,GAAG,GAC/DA,EAAQ3xC,MAER2xC,EAAQpmG,QAGZ,IAAMqmG,KACFC,SACAC,SACJH,EAAQl+F,QAAQ,SAACs+F,GACfF,EAAc,IAAIj6C,EAAA,EAAYm6C,GAC9BD,EAAgB,IAAIn6C,EAAA,GAClBo6C,QAAU,EACVnnF,SAAYinF,EACZG,SAAY,KACZC,SAAY,KACZC,WAAc9qF,IAGhBwqF,EAAc5mG,KAAK8mG,IAClBvhG,MACH0C,GACE0+F,QAASC,GAEXrhG,KAAK0uD,OAAOlhC,GAAO9qB,EAEnB,IAAIk/F,SACAC,SACJR,EAAcn+F,QAAQ,SAACq+F,EAAej4E,IACpCs4E,EAAkBP,EAAc/3E,EAAQ,MAEtCs4E,EAAkBP,EAAcA,EAAc9mG,OAAS,KAGzDsnG,EAAcR,EAAc/3E,EAAQ,MAElCu4E,EAAcR,EAAc,IAG1B/3E,EAAQ,GAAM,GAChBi4E,EAAc3+F,IAAI,WAAYi/F,GAC9BN,EAAc3+F,IAAI,WAAYg/F,KAE9BL,EAAc3+F,IAAI,WAAYg/F,GAC9BL,EAAc3+F,IAAI,WAAYi/F,KAG/B7hG,MACHmhG,EAAYz5C,YAAY25C,KAU5BN,EAAQpmG,UAAU8hE,oBAAsB,SAASl2C,GAC/C,IAAKvmB,KAAKs7D,UAAW,CACnBt7D,KAAKs7D,WAAY,EAEjB,IAAM74C,EAAQ,IAAIqlC,EAAA,EAAgB,eAAgB7qC,SAAUjd,KAAKorD,YACjEprD,KAAK0H,cAAc+a,GACnBziB,KAAKihG,QAAUjhG,KAAK8hG,sBASxBf,EAAQpmG,UAAUmnG,kBAAoB,WACpC,IAIMJ,EAJU1hG,KAAK0lB,SAIIhpB,IAAI,YAC7BqrC,EAAA,EAAYvhB,iBAAiBk7E,EAAUt6C,EAAA,GAEvC,IAAM26C,EAASL,EAAShlG,IAAI,YAC5BqrC,EAAA,EAAYvhB,iBAAiBu7E,EAAQ36C,EAAA,GACrC,IAAM46C,EAAcD,EAAO3mF,cAC3B2sB,EAAA,EAAYvhB,iBAAiBw7E,EAAa36C,EAAA,GAC1C,IAAM46C,EAAmBD,EAAYjmF,iBAC/BmmF,EAAcliG,KAAKyzB,SAAS8sE,uBAAuB0B,GAGnDR,EAAWM,EAAOrlG,IAAI,YAC5BqrC,EAAA,EAAYvhB,iBAAiBi7E,EAAUr6C,EAAA,GACvC,IAAM+6C,EAAgBV,EAASrmF,cAC/B2sB,EAAA,EAAYvhB,iBAAiB27E,EAAe96C,EAAA,GAC5C,IAAM+6C,EAAqBD,EAAcpmF,iBACnCsmF,EAAgBriG,KAAKyzB,SAAS8sE,uBAAuB6B,GACvDE,GACFD,EAAc,GAAKH,EAAY,GAC/BG,EAAc,GAAKH,EAAY,IAE3BK,EAAmB7nF,KAAK2uC,KAAKi5C,EAAQ,GAAKA,EAAQ,GAAKA,EAAQ,GAAKA,EAAQ,IAClFA,EAAQ,IAAMC,EACdD,EAAQ,IAAMC,EAGd,IAAMC,EAAgBd,EAAStmF,cAC/B2sB,EAAA,EAAYvhB,iBAAiBg8E,EAAen7C,EAAA,GAC5C,IAAMo7C,EAAqBD,EAAczmF,iBACnC2mF,EAAgB1iG,KAAKyzB,SAAS8sE,uBAAuBkC,GACvDE,GACFD,EAAc,GAAKR,EAAY,GAC/BQ,EAAc,GAAKR,EAAY,IAE3BU,EAAmBloF,KAAK2uC,KAAKs5C,EAAQ,GAAKA,EAAQ,GAAKA,EAAQ,GAAKA,EAAQ,IAelF,OAdAA,EAAQ,IAAMC,EACdD,EAAQ,IAAMC,EAGV3hC,MAAMqhC,EAAQ,KAAOrhC,MAAM0hC,EAAQ,KAErCL,GAAW,EAAG,GACdK,GAAW,EAAG,IACL1hC,MAAMqhC,EAAQ,IACvBA,GAAWK,EAAQ,IAAKA,EAAQ,IACvB1hC,MAAM0hC,EAAQ,MACvBA,GAAWL,EAAQ,IAAKA,EAAQ,MAIhCL,mBACAC,cACAC,gBACAK,gBACAF,UACAK,YASJ5B,EAAQpmG,UAAUggE,eAAiB,SAAS9jD,GAI1C,IAHA,IAAM2W,EAAMsjB,EAAA,EAAcj6B,GAEpBuqF,EADOphG,KAAK0uD,OAAOlhC,GACJ4zE,QACZ/mG,EAAI,EAAGA,EAAI+mG,EAAQ7mG,OAAQF,IAClC2F,KAAKghG,cAAcn1E,YAAYjH,cAAcw8E,EAAQ/mG,IAEvD2F,KAAK0lB,SAAW,KAChB07E,EAAQ7mG,OAAS,SACVyF,KAAK0uD,OAAOlhC,IAOrBuzE,EAAQpmG,UAAUyqB,OAAS,SAAStgB,GAClC9E,KAAKghG,cAAc57E,OAAOtgB,GAC1B8gD,EAAA,EAAqBjrD,UAAUyqB,OAAOvqB,KAAKmF,KAAM8E,IAQnDi8F,EAAQpmG,UAAU28C,kBAAoB,SAAS/wB,GAC7C,IAAM1P,EAAU0P,EAAI2F,QACpB6b,EAAA,EAAYvhB,iBAAiB3P,EAASuwC,EAAA,EACpC,mCACFpnD,KAAKs6D,YAAYzjD,IAQnBkqF,EAAQpmG,UAAU4wD,qBAAuB,SAAShlC,GAChD,IAAM1P,EAAqC0P,EAAI2F,QAC/ClsB,KAAK26D,eAAe9jD,IAUtBkqF,EAAQpmG,UAAUqhE,YAAc,SAASz1C,GACvC,IAEM1P,EAFM0P,EAAIzhB,IAEIi2C,sBAAsBx0B,EAAIu0B,MAAO,SAAAjkC,GAAA,OAClDA,EAAQna,IAAI,aAAema,EAAQna,IAAI,YAAcma,OAAU3W,IAGlE,QAAI2W,IACF7W,KAAK0lB,SAAW7O,GAET,IAYXkqF,EAAQpmG,UAAUuhE,YAAc,SAAS31C,GACvCvmB,KAAKy8D,oBAAoBl2C,GACzB,IAAM1P,EAAU7W,KAAK0lB,SAEfrL,EACDxD,EAAQuE,cAEb,GAAIf,aAAoBgtC,EAAA,EAAa,CACnChtC,EAASmtC,eAAejhC,EAAI+M,YAE5B,IAAMuvE,EAAmBt8E,EAAIu0B,MAEvBonD,EAAcliG,KAAKihG,QAAQiB,YAC3BC,EAAgBniG,KAAKihG,QAAQkB,cAC7BK,EAAgBxiG,KAAKihG,QAAQuB,cAC7BF,EAAUtiG,KAAKihG,QAAQqB,QACvBK,EAAU3iG,KAAKihG,QAAQ0B,QACvBV,EAAmBjiG,KAAKihG,QAAQgB,iBAGhCa,EAAU9iG,KAAK+iG,mBACnBb,EAAaW,EAAkBP,GAC3BU,EAAehjG,KAAKyzB,SAAS+nB,uBAAuBsnD,GAC1DX,EAAc36C,eAAew7C,GAE7B,IAAMC,EAAUjjG,KAAK+iG,mBACnBb,EAAaW,EAAkBF,GAC3BO,EAAeljG,KAAKyzB,SAAS+nB,uBAAuBynD,GAC1DT,EAAch7C,eAAe07C,GAI7B,IACM/nF,EADatE,EAAQna,IAAI,cACP0e,cACxB2sB,EAAA,EAAYvhB,iBAAiBrL,EAAMwkF,EAAA,GACnCxkF,EAAKqsC,iBAAiBjhC,EAAI+M,WAAY0vE,EAAcf,EAAkBiB,EAAc38E,EAAI+M,gBAc5FytE,EAAQpmG,UAAUooG,mBAAqB,SACrChB,EAAQoB,EAAaC,GAErB,IAAMC,GAAWF,EAAY,GAAKpB,EAAO,GAAIoB,EAAY,GAAKpB,EAAO,IAE/DuB,EAAkBD,EAAQ,GAAKD,EAAO,GAAKC,EAAQ,GAAKD,EAAO,GAE/DG,GACHH,EAAO,GAAKE,EACZF,EAAO,GAAKE,GAGf,OAAQC,EAAY,GAAKxB,EAAO,GAAIwB,EAAY,GAAKxB,EAAO,KAU9DhB,EAAQpmG,UAAUwhE,UAAY,SAAS51C,GACrC,GAAIvmB,KAAKs7D,UAAW,CAElB,IAAM74C,EAAQ,IAAIqlC,EAAA,EAAgB,aAAc7qC,SAAUjd,KAAKorD,YAC/DprD,KAAK0H,cAAc+a,GACnBziB,KAAKihG,QAAU,KACfjhG,KAAKs7D,WAAY,EAEnB,OAAO,GAyBT,IAAAkoC,EAAA,mCCxZMC,EAAU,SAASr7F,GAEvB2/B,EAAA,EAAYtkC,OAAO2E,EAAQ6U,UAM3Bjd,KAAKorD,UAAYhjD,EAAQ6U,SAMzBjd,KAAK2jC,iBAML3jC,KAAK80C,iBAML90C,KAAK0jG,eAAiB,IAAI14D,EAAA,EAE1BhrC,KAAK80C,cAAcr6C,KAAK,IAAIk/E,EAAA,GAC1BhjC,gBAAiBgtD,EAAA,EAAUhtD,gBAC3B15B,SAAUjd,KAAK0jG,eACftqC,eAAgBhxD,EAAQgxD,eACxB/hD,MAAOjP,EAAQiP,MACf6zB,MAAO9iC,EAAQ8iC,SAOjBlrC,KAAK4jG,gBAAkB,IAAI54D,EAAA,EAE3BhrC,KAAK80C,cAAcr6C,KAAK,IAAIqmG,GAC1B7jF,SAAUjd,KAAK4jG,gBACfxqC,eAAgBhxD,EAAQgxD,eACxB/hD,MAAOjP,EAAQiP,MACf6zB,MAAO9iC,EAAQ8iC,SAOjBlrC,KAAK6jG,mBAAqB,IAAI74D,EAAA,EAE9BhrC,KAAK80C,cAAcr6C,KAAK,IAAI+oG,GAC1BvmF,SAAUjd,KAAK6jG,mBACfzqC,eAAgBhxD,EAAQgxD,eACxB/hD,MAAOjP,EAAQiP,MACf6zB,MAAO9iC,EAAQ8iC,SAIjB44D,EAAA,EAAyBjpG,KAAKmF,MAC5BkwB,YAAao4B,EAAA,KAKjBxX,EAAA,EAAgB2yD,EAASK,EAAA,GAQzBL,EAAQ9oG,UAAUgmB,UAAY,SAASpY,GACrCu7F,EAAA,EAAyBnpG,UAAUgmB,UAAU9lB,KAAKmF,KAAMuI,GACxDvI,KAAKq6D,aAWPopC,EAAQ9oG,UAAUyqB,OAAS,SAAStgB,GAElC,IAAMi/F,EAAe/jG,KAAK80C,cAEpBkvD,EAAahkG,KAAKyzB,SACpBuwE,GACFD,EAAa7gG,QAAQ,SAAC8+B,GACpBgiE,EAAWtwE,kBAAkBsO,KAIjC8hE,EAAA,EAAyBnpG,UAAUyqB,OAAOvqB,KAAKmF,KAAM8E,GAEjDA,GACFi/F,EAAa7gG,QAAQ,SAAC8+B,GACpBl9B,EAAI6uB,eAAeqO,KAIvBhiC,KAAKq6D,aAQPopC,EAAQ9oG,UAAU0/D,UAAY,WAAW,IAAA93D,EAAAvC,KACjC8E,EAAM9E,KAAKyzB,SACXlrB,EAASvI,KAAK0gB,YACdqjF,EAAe/jG,KAAK80C,cACpBkF,EAAOh6C,KAAK2jC,cAElBogE,EAAa7gG,QAAQ,SAAC8+B,GACpBA,EAAYrhB,UAAUpY,KAAYzD,KAGhCyD,GAAUzD,GACZ9E,KAAKorD,UAAUloD,QAAQ,SAAA2T,GAAA,OAAWtU,EAAK+3D,YAAYzjD,KACnDmjC,EAAKv/C,KACH0zC,EAAA,EAAgBnuC,KAAKorD,UAAW,MAAOprD,KAAKu6D,mBAAoBv6D,MAChEmuC,EAAA,EAAgBnuC,KAAKorD,UAAW,SAAUprD,KAAKw6D,sBAAuBx6D,SAGxEg6C,EAAK92C,QAAQirC,EAAA,GACb6L,EAAKz/C,OAAS,EACdyF,KAAKorD,UAAUloD,QAAQ,SAAA2T,GAAA,OAAWtU,EAAKo4D,eAAe9jD,OAS1D4sF,EAAQ9oG,UAAU4/D,mBAAqB,SAASh0C,GAC9C,IAAM1P,EAAU0P,EAAI2F,QACpB6b,EAAA,EAAYvhB,iBAAiB3P,EAASuwC,EAAA,EACpC,mCACFpnD,KAAKs6D,YAAYzjD,IAQnB4sF,EAAQ9oG,UAAU6/D,sBAAwB,SAASj0C,GACjD,IAAM1P,EAAqC0P,EAAI2F,QAC/ClsB,KAAK26D,eAAe9jD,IAQtB4sF,EAAQ9oG,UAAU2/D,YAAc,SAASzjD,GACpB7W,KAAKikG,sBAAsBptF,GACnCpc,KAAKoc,IAQlB4sF,EAAQ9oG,UAAUggE,eAAiB,SAAS9jD,GACvB7W,KAAKikG,sBAAsBptF,GACnC43B,OAAO53B,IASpB4sF,EAAQ9oG,UAAUspG,sBAAwB,SAASptF,GACjD,IACMqtF,EAAWrtF,EAAQna,IAAI+hG,EAAA,EAA4BlgG,WACnD4lG,EAActtF,EAAQna,IAAI+hG,EAAA,EAA4BjgG,cAQ5D,OAPiB,IAAb0lG,GAAkC,SAAbA,EACZlkG,KAAK4jG,iBACS,IAAhBO,GAAwC,SAAhBA,EACtBnkG,KAAK6jG,mBAEL7jG,KAAK0jG,gBAMpB/lG,EAAA,sECjOA,IAAMymG,EAAUn8F,QAAQlM,OAAO,iCAC7B64E,EAAA,EAAwC74E,OAAOK,KAC/Ci5E,EAAA,EAAiBt5E,OAAOK,OA2B1B,SAASioG,EAAyCz3E,EAAQy3E,GACxD,OAAOA,EAAyCz3E,GAxBlDw3E,EAAQ3xD,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,6CAA8Cj3C,EAAQ,SAI3E0oG,EAAQxnG,MAAM,2CAKZ,SAACgwB,GACC,IAAMsmB,EAActmB,EAAA,yCACpB,YAAuB1sB,IAAhBgzC,EAA4BA,EACjC,+GAkBNkxD,EAAQhxD,YAAR,WAYE,SAAAmwB,EAAY+gC,gGAA+Bj8F,CAAArI,KAAAujE,GASzCvjE,KAAKwpB,aAOLxpB,KAAK2C,MAQL3C,KAAK0D,IASL1D,KAAKukG,+BAAiCD,EA7C1C,OAAA/gC,EAAAppC,SAAA,iCAAAopC,EAAA5oE,UAoDE6pG,uBApDF,SAoDyB7hG,GACrB3C,KAAKukG,+BAA+Bj1D,wCAClC3sC,EACA3C,KAAKwpB,aACLxpB,KAAK0D,MAxDX6/D,EAAA5oE,UAiEE8pG,OAjEF,SAiES9hG,GACL,OAAOmuC,EAAA,EAAcnuC,IAlEzB4gE,EAAA,GAuEA6gC,EAAQ9gC,UAAU,iCAChBH,UACE35C,aAAgB,IAChB7mB,MAAS,IACTe,IAAO,KAETqsB,WAAYq0E,EAAQhxD,YACpBF,YAAamxD,IAIf,IAAAK,EAAA,EC1HA,IAAMC,EAAU18F,QAAQlM,OAAO,8BAC7B64E,EAAA,EAAwC74E,OAAOK,KAC/Ci5E,EAAA,EAAiBt5E,OAAOK,OA2B1B,SAASwoG,EAAqCh4E,EAAQg4E,GACpD,OAAOA,EAAqCh4E,GAxB9C+3E,EAAQlyD,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,+CAAgDj3C,EAAQ,SAI7EipG,EAAQ/nG,MAAM,uCAKZ,SAACgwB,GACC,IAAMsmB,EAActmB,EAAA,qCACpB,YAAuB1sB,IAAhBgzC,EAA4BA,EACjC,6GAkBNyxD,EAAQvxD,YAAR,WAYE,SAAAmwB,EAAY+gC,gGAA+BO,CAAA7kG,KAAAujE,GASzCvjE,KAAKwpB,aAOLxpB,KAAKwE,OAQLxE,KAAK0D,IASL1D,KAAKukG,+BAAiCD,EA7C1C,OAAA/gC,EAAAppC,SAAA,iCAAAopC,EAAA5oE,UAoDE6pG,uBApDF,SAoDyB7hG,GACL3C,KAAKukG,+BACb70D,yCACN/sC,EACA3C,KAAKwpB,aACLxpB,KAAK0D,MAzDX6/D,EAAA5oE,UAkEE8pG,OAlEF,SAkES9hG,GACL,OAAOmuC,EAAA,EAAcnuC,IAnEzB4gE,EAAA,GAwEAohC,EAAQrhC,UAAU,8BAChBH,UACE35C,aAAgB,IAChBhlB,OAAU,IACVd,IAAO,KAETqsB,WAAY40E,EAAQvxD,YACpBF,YAAa0xD,IAIf,IAAAE,EAAA,+QCnHA,IAAMC,EAAU98F,QAAQlM,OAAO,uBAC7B64E,EAAA,EAAwC74E,OAAOK,KAC/CsoG,EAAyCtoG,KACzC0oG,EAA0C1oG,KAC1C6yD,EAAA,EAAiBlzD,OAAOK,OA2B1B,SAAS4oG,EAA+Bp4E,EAAQo4E,GAC9C,OAAOA,EAA+Bp4E,GAxBxCm4E,EAAQtyD,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,uCAAwCj3C,EAAQ,SAIrEqpG,EAAQnoG,MAAM,iCAKZ,SAACgwB,GACC,IAAMsmB,EAActmB,EAAA,+BACpB,YAAuB1sB,IAAhBgzC,EAA4BA,EACjC,+FAkBN6xD,EAAQ3xD,YAAR,WAkBE,SAAAmwB,EAAYlwB,EAAU19B,EAASjW,EAAWgtB,EAAQqP,EAChDuoE,EAA+BhrE,GAAa,IAAA/2B,EAAAvC,kGAAAilG,CAAAjlG,KAAAujE,GAQ5CvjE,KAAK8E,IASL9E,KAAK2zC,SAAWN,EAMhBrzC,KAAK4zC,OAASlnB,EAMd1sB,KAAK6zC,SAAW9X,EAMhB/7B,KAAKukG,+BAAiCD,EAMtCtkG,KAAK05B,aAAeJ,EASpBt5B,KAAK8vC,KAML9vC,KAAK0D,IASL1D,KAAKklG,WAAa7xD,EAASkG,KAAK,oBAMhCv5C,KAAKmlG,UAAW,EAMhBnlG,KAAKolG,iBAAmB,KAMxBplG,KAAK8hC,KAAOijE,EAAQ3xD,YAAYiyD,KAAKC,OAMrCtlG,KAAKulG,OACHR,EAAQ3xD,YAAYiyD,KAAKG,MACzBT,EAAQ3xD,YAAYiyD,KAAKC,QAO3BtlG,KAAK06B,SAAU,EAMf16B,KAAKgW,kBACHL,EAAQ,kBAOV3V,KAAKylG,gBAAkB,KAOvBzlG,KAAK0lG,iBAAmB,KAMxB1lG,KAAK2lG,eAEL,IAAMC,EAAUlmG,EAAUa,IAAI,yBAE1Bb,EAAUhD,IAAI,8BACZwD,EAEN,GAAI0lG,EAAS,CACX,IAAMC,EAAaD,EAAQ9gG,IAAI,SAAAT,GAAA,OAAUA,EAAA,MACzCrE,KAAK2lG,eAAiB,IAAIG,YAYxBC,eAAgB,SAACC,GACfj+D,EAAA,EAAYlrB,aAAampF,GACzB,IAAMC,EAA0BH,WAAWI,WAAWC,WACpDH,GACFj+D,EAAA,EAAYtkC,OAAOwiG,GACnB,IAAMG,KACN52F,EAAqCy2F,EAArCx2F,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAA8D,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAjV,OAAA,MAAAwV,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAhT,MAE5D,IAF4D,IAAnDypG,EAAmDt2F,EACxD1V,EAAI,EACAA,EAAI,EAAKgsG,EAAuB9rG,QACtC6rG,EAAgB3rG,KACd4rG,EAAuBp+B,OACrB5tE,EACAgsG,EAAuB9rG,SAG3BF,IAGJ,OAAO+rG,GAETE,eAAgBR,WAAWI,WAAWC,WACtCI,UAAU,EACVC,MAAOX,IAKX7lG,KAAKklG,WAAWtiE,GAAG,SAAU,WAC3BrgC,EAAKutC,KAAOvtC,EAAK2iG,WAAW,GAAGlQ,OAASzyF,EAAK2iG,WAAW,GAAGlQ,MAAM,GAC/DzyF,EAAK2iG,WAAW,GAAGlQ,MAAM,QAAK90F,EAChCqC,EAAKqxC,OAAOqF,WAnMlB,OAAAsqB,EAAAppC,SAAA,oGAAAopC,EAAA5oE,UA0MEm7C,QA1MF,WA0MY,IAAA5vC,EAAAlG,KACRA,KAAKukG,+BAA+Bz/F,IAAM9E,KAAK8E,IAG3C9E,KAAK2lG,gBAGP3lG,KAAK6zC,SAAS,WACZ9L,EAAA,EAAYtkC,OAAOyC,EAAKy/F,gBACxB,IAAMc,EAAYvgG,EAAKytC,SAAS4F,KAAK,mBAC/BmtD,EAAcxgG,EAAKytC,SAAS4F,KAAK,2CACvCktD,EAAUE,WACRC,MAAM,EACNC,WAAW,EACXC,UAAW,IAEX1qG,KAAM,MACNioB,OAAQne,EAAKy/F,eAAeoB,cAC3B1pG,KAAK,mBAAoB,SAAC2pG,EAAIC,GAC/B/gG,EAAK2tC,SAAS,WACZ3tC,EAAKxC,IAAMujG,EACX/gG,EAAK0tC,OAAOqF,SACZytD,EAAYQ,eAhOxB3jC,EAAA5oE,UA2OEwsG,OA3OF,WA4OInnG,KAAK2zC,SAAS4F,KAAK,+BAA+BC,SA5OtD+pB,EAAA5oE,UAmPEysG,QAnPF,WAmPY,IAAApgG,EAAAhH,KACF0D,EAAMqkC,EAAA,EAAYlrB,aAAa7c,KAAK0D,KACpC2jG,EAAcp6D,EAAA,EAAkB34B,sBAAsB5Q,GAE5D1D,KAAKsnG,gBACDD,IAAgBp6D,EAAA,EAAkBpgC,KAAK7E,IACzChI,KAAK05B,aAAaq4B,mBAAmBruD,GAAKG,KACxC,SAAC4hG,GACCz+F,EAAKy+F,gBAAkBA,EACvBz+F,EAAKugG,gBAEP,WAEEvgG,EAAKugG,cAAa,KAGbF,IAAgBp6D,EAAA,EAAkBpgC,KAAK9E,KAChD/H,KAAK05B,aAAa04B,oBAAoB1uD,GAAKG,KACzC,SAAC6hG,GACC1+F,EAAK0+F,iBAAmBA,EACxB1+F,EAAKugG,gBAEP,WAEEvgG,EAAKugG,cAAa,KAKtBvnG,KAAK6zC,SAAS,WACZ7sC,EAAKugG,cAAa,MAjR1BhkC,EAAA5oE,UA0RE6sG,KA1RF,WA2RI,IAAM13D,EAAO/H,EAAA,EAAYtkC,OAAOzD,KAAK8vC,MACrC9vC,KAAKukG,+BAA+B10D,+BAA+BC,IA5RvEyzB,EAAA5oE,UAqTE2sG,cArTF,WAsTItnG,KAAK06B,SAAU,EACf16B,KAAKmlG,UAAW,EAGhBnlG,KAAKylG,gBAAkB,KACvBzlG,KAAK0lG,iBAAmB,MA3T5BniC,EAAA5oE,UAmUE4sG,aAnUF,WAmUqC,IAAAhpE,EAAAv+B,KAAtBynG,EAAsBz1F,UAAAzX,OAAA,QAAA2F,IAAA8R,UAAA,IAAAA,UAAA,GACjChS,KAAK06B,SAAU,EACX+sE,IACFznG,KAAKmlG,UAAW,EACZnlG,KAAKolG,kBACPplG,KAAK6zC,SAASxV,OAAOr+B,KAAKolG,kBAE5BplG,KAAKolG,iBAAmBplG,KAAK6zC,SAAS,WACpCtV,EAAK4mE,UAAW,EAChB5mE,EAAK6mE,iBAAmB,MACvB,OA7UTv7F,EAAA05D,IAAAz5D,IAAA,kBAAApN,IAAA,WAoSI,IAAIgrG,EAAc,GAEZ53D,EAAO9vC,KAAK8vC,KAClB,QAAa5vC,IAAT4vC,EAAoB,CACtB,IAAM63D,EAAW3nG,KAAKgW,kBAAkB85B,EAAK/2B,KAAM,KACnD2uF,EAAiB53D,EAAK1zC,KAAtB,KAA+BurG,EAGjC,OAAOD,MA5SXnkC,EAAA,GAsVAwhC,EAAQ3xD,YAAYiyD,MAClBG,MAAO,QACPF,OAAQ,UAIVP,EAAQzhC,UAAU,uBAChBH,UACEr+D,IAAO,KAETirB,WAAYg1E,EAAQ3xD,YACpBF,YAAa8xD,IAIf,IAAA4C,EAAA,ECjZMC,UAAU5/F,QAAQlM,OAAO,mBAC7B6rG,EAAmCxrG,KACnCsoG,EAAyCtoG,KACzC0oG,EAA0C1oG,QAI5CuB,EAAA,wGCSMmqG,EAAU,SAASp7E,EAAQ0L,EAAMv4B,EACrCunC,EAAmB2gE,GAAc,IAAAxlG,EAAAvC,KAMjCA,KAAKuI,YAEerI,IAAhBF,KAAKuI,SACPvI,KAAKuI,QAAS,GAShBvI,KAAKid,SAMLjd,KAAK8E,IAML9E,KAAKiY,YAMLjY,KAAKq8B,gBAAkBx8B,EAEvBA,EAAe4F,UAAU,SACzB5F,EAAe4F,UAAU,cACzB5F,EAAe4F,UAAU,WACzB5F,EAAe4F,UAAU,UACzB5F,EAAe4F,UAAU,aACzB5F,EAAe4F,UAAU,QAMzBzF,KAAKgoG,eAAiB5gE,EAMtBpnC,KAAKioG,cAAgBF,EAMrB/nG,KAAK80C,iBAML90C,KAAKkoG,UAMLloG,KAAKmoG,cAMLnoG,KAAKooG,YAMLpoG,KAAKqoG,cAMLroG,KAAKsoG,cAMLtoG,KAAKuoG,SAKL77E,EAAOO,OACL,kBAAM1qB,EAAKgG,QACX,SAACqY,IACgB,IAAXA,GACFre,EAAKuyC,cAAc5xC,QAAQ,SAAC8+B,GAC1BA,EAAYrhB,WAAU,wKAehCmnF,EAAQntG,UAAU6tG,oBAAsB,SACtCxmE,GACAhiC,KAAK80C,cAAcr6C,KAAKunC,GACxBA,EAAYrhB,WAAU,GACtBs6D,EAAA,EAAiBj5C,YAAYA,GAC7BhiC,KAAK8E,IAAI6uB,eAAeqO,IAW1B8lE,EAAQntG,UAAU8tG,mBAAqB,SAAShmF,GAC9CziB,KAAKuI,OAASvI,KAAK80C,cAAc3uC,KAAK,SAAA67B,GAAA,OAAeA,EAAYthB,aAAa1gB,OAWhF8nG,EAAQntG,UAAU+tG,cAAgB,SAAShrG,EAAM+kB,GAC/C,IAAIkmF,SAGFA,EAFElmF,EAAM5L,QAEC4L,EAAM5L,QAGN4L,EAAMkB,OAAO9M,QAExBkxB,EAAA,EAAYtkC,OAAOklG,GAEnB,IAAM5uF,EAAS4uF,EAAOjsG,IAAI,UAEpBugB,EAAWjd,KAAKid,UAAYjd,KAAKioG,cAEjCpxF,EAAU,IAAIuwC,EAAA,EAAUuhD,EAAOvtF,eAE/BqnE,EAAOgc,EAAA,EAEb,OAAQ/gG,GACN,KAAKw8E,EAAA,EAAiBt8E,OACpBiZ,EAAQjU,IAAI6/E,EAAKlkF,WAAW,QACb2B,IAAX6Z,GACFlD,EAAQjU,IAAI6/E,EAAK5jF,OAAQkb,GAE3B,MACF,KAAKmgE,EAAA,EAAiB97E,KACpByY,EAAQjU,IAAI6/E,EAAKhkF,SAAS,GAC1B,MACF,KAAKy7E,EAAA,EAAiB/7E,UACpB0Y,EAAQjU,IAAI6/E,EAAKjkF,cAAc,GASnC,IAAMpC,EAAO4D,KAAKq8B,gBAAgB52B,UAAU/H,GAC5CmZ,EAAQjU,IAAI6/E,EAAK/jF,KAAStC,EAA1B,KAAkC6gB,EAASkrC,YAAc,IAKzD,IAAMhwC,EAAQza,IAASw8E,EAAA,EAAiB97E,KAAO,UAAY,UAC3DyY,EAAQjU,IAAI6/E,EAAKnkF,MAAO6Z,GAExBtB,EAAQjU,IAAI6/E,EAAKpkF,MAAO,GACxBwY,EAAQjU,IAAI6/E,EAAK7jF,QAAS,IAC1BiY,EAAQjU,IAAI6/E,EAAK3jF,eAAckB,KAAKiY,aACpCpB,EAAQjU,IAAI6/E,EAAK9jF,YAAY,GAC7BkY,EAAQjU,IAAI6/E,EAAK1jF,KAAM,IACvB8X,EAAQjU,IAAI6/E,EAAKzjF,OAAQ,GAGzBgB,KAAKgoG,eAAepxF,SAASC,GAG7BoG,EAASxiB,KAAKoc,KAOhBixF,EAAQ/rG,OAASkM,QAAQlM,OAAO,6BAC9B6sG,EAAA,EAAiBxsG,KACjB05F,EAAA,EAAqB15F,KACrBwuC,EAAA,EAAsB7uC,OAAOK,QAEhB2zB,WAAW,4BAA6B+3E,GAGvD,IAAAe,EAAA,kBCnPMC,EAAU7gG,QAAQlM,OAAO,oBAS/B+sG,EAAQv/C,WAAa,WACnB,OACEtK,SAAU,IACVW,QAAS,oBAOTV,KAAM,SAACxyB,EAAQR,EAASizB,EAAO4pD,GAE7B,IAAMb,EAAY,IAAIc,EAAA,GACpBtrG,KAA2C,UAG7CqrG,EAAgBP,oBAAoBN,GACpCa,EAAgBb,UAAYA,EAE5B/5D,EAAA,EACE+5D,EACA,UACAa,EAAgBL,cAAcrrG,KAC5B0rG,EAAiB7uB,EAAA,EAAiBj8E,OACpC8qG,GAEF56D,EAAA,EACE+5D,EACA,gBACAa,EAAgBN,mBAChBM,MAORD,EAAQ31D,UAAU,gBAAiB21D,EAAQv/C,YAG3C,IAAAx2B,EAAA,UChDMk2E,EAAUhhG,QAAQlM,OAAO,wBAS/BktG,EAAQ1/C,WAAa,WACnB,OACEtK,SAAU,IACVW,QAAS,oBAOTV,KAAM,SAACxyB,EAAQR,EAASizB,EAAO4pD,GAE7B,IAAMT,EAAgB,IAAIU,EAAA,GACxBtrG,KAA2C,aAC3CwrG,iBAAkB,SAACrtF,EAAaxB,GACzBA,IACHA,EAAW,IAAIslF,EAAA,EAAc,OAE/B,IAAM7rF,EAAQ+H,EAAY,GACpBhI,EAAMgI,EAAY,GAIxB,OAHAxB,EAASmtC,iBACN1zC,GAAQA,EAAM,GAAID,EAAI,IAAKA,GAAMA,EAAI,GAAIC,EAAM,IAAKA,KAEhDuG,GAET8uF,UAAW,IAGbJ,EAAgBP,oBAAoBF,GACpCS,EAAgBT,cAAgBA,EAEhCn6D,EAAA,EACEm6D,EACA,UACAS,EAAgBL,cAAcrrG,KAC5B0rG,EAAiB7uB,EAAA,EAAiB/7E,WACpC4qG,GAEF56D,EAAA,EACEm6D,EACA,gBACAS,EAAgBN,mBAChBM,MAORE,EAAQ91D,UAAU,oBAAqB81D,EAAQ1/C,YAG/C,IAAA6/C,EAAA,EC9DMC,EAAUphG,QAAQlM,OAAO,mBAS/BstG,EAAQ9/C,WAAa,WACnB,OACEtK,SAAU,IACVW,QAAS,oBAOTV,KAAM,SAACxyB,EAAQR,EAASizB,EAAO4pD,GAE7B,IAAMR,EAAW,IAAIS,EAAA,GACnBtrG,KAA2C,UAG7CqrG,EAAgBP,oBAAoBD,GACpCQ,EAAgBR,SAAWA,EAE3Bp6D,EAAA,EACEo6D,EACA,UACAQ,EAAgBL,cAAcrrG,KAC5B0rG,EAAiB7uB,EAAA,EAAiB97E,MACpC2qG,GAEF56D,EAAA,EACEo6D,EACA,gBACAQ,EAAgBN,mBAChBM,MAORM,EAAQl2D,UAAU,eAAgBk2D,EAAQ9/C,YAG1C,IAAA+/C,EAAA,mBC/CMC,EAAUthG,QAAQlM,OAAO,mBAC7B8sG,EAAmB9sG,OAAOK,OAc5BmtG,EAAQhgD,WAAa,SAASM,EAAUhqD,EAAgB8V,EAASjW,GAC/D,OACEu/C,SAAU,IACVW,QAAS,oBAOTV,KAAM,SAACxyB,EAAQR,EAASizB,EAAO4pD,GAE7B,IAAM71E,EAAUrzB,EAAe4F,UAAU,kCACnC+jG,EAAU3pG,EAAe4F,UAAU,+EAGnC2iG,EAAc,IAAIqB,EAAA,EAA2B9zF,EAAQ,kBAAmB9V,GAC5EwX,MAAO,IAAIwiE,EAAA,EACX9oD,SAAU84B,oBAA2B32B,EAA3B,SAAA22B,CAA4Cn9B,GAAQ,GAC9DgE,YAAam5B,oBAA2B2/C,EAA3B,SAAA3/C,CAA4Cn9B,GAAQ,GACjEkE,UAAWlxB,EAAUa,IAAI,wBAA0Bb,EAAUhD,IAAI,6BAA0BwD,IAG7F6oG,EAAgBP,oBAAoBJ,GACpCW,EAAgBX,YAAcA,EAE9Bj6D,EAAA,EACEi6D,EACA,aACAW,EAAgBL,cAAcrrG,KAC5B0rG,EAAiB7uB,EAAA,EAAiBh8E,SACpC6qG,GAEF56D,EAAA,EACEi6D,EACA,gBACAW,EAAgBN,mBAChBM,MArCRQ,EAAQhgD,uEA4CRggD,EAAQp2D,UAAU,kBAAmBo2D,EAAQhgD,YAG7C,IAAAmgD,EAAA,mBC3DMC,EAAU1hG,QAAQlM,OAAO,qBAC7B8sG,EAAmB9sG,OAAOK,KAC1Bq7F,EAAA,EAAgBr7F,OAclButG,EAAQpgD,WAAa,SAASM,EAAUhqD,EAAgB8V,EAASjW,GAC/D,OACEu/C,SAAU,IACVW,QAAS,oBAOTV,KAAM,SAACxyB,EAAQR,EAASizB,EAAO4pD,GAE7B,IAAM71E,EAAUrzB,EAAe4F,UAAU,iCACnC+jG,EAAU3pG,EAAe4F,UAAU,mBAEnC4iG,EAAgB,IAAIxI,EAAA,EACxBlqF,EAAQ,kBAAmBA,EAAQ,WACjC0B,MAAO,IAAIwiE,EAAA,EACX9oD,SAAU84B,oBAA2B32B,EAA3B,SAAA22B,CAA4Cn9B,GAAQ,GAC9DgE,YAAam5B,oBAA2B2/C,EAA3B,SAAA3/C,CAA4Cn9B,GAAQ,GACjEkE,UAAWlxB,EAAUa,IAAI,wBAA0Bb,EAAUhD,IAAI,6BAA0BwD,EAC3FywB,SAAUjxB,EAAUa,IAAI,uBAAyBb,EAAUhD,IAAI,4BAAyBwD,IAG5F6oG,EAAgBP,oBAAoBH,GACpCU,EAAgBV,cAAgBA,EAEhCl6D,EAAA,EACEk6D,EACA,aAIA,SAAC5lF,GAKC,IAAMpI,EACCoI,EAAMkB,OAAO9M,QAAQuE,cACtBoX,EACJnY,EAASuuC,gBAAgB,GACrBz2B,EAAUz3B,OAAAilG,EAAA,EAAAjlG,CAAW83B,EAAQ,IACnC/P,EAAMkB,OAAO9M,QAAU,IAAIuwC,EAAA,EAAUj1B,GACrC,IAAMpY,EAAS8lF,EAAA,EAA6B52C,UACP5uC,EAASuuC,gBAAgB,IAE9DnmC,EAAMkB,OAAO9M,QAAQjU,IAAI,SAAUmX,GAEnCgvF,EAAgBL,cAAcxuB,EAAA,EAAiBt8E,OAAQ6kB,IAEzDsmF,GAGF56D,EAAA,EACEk6D,EACA,gBACAU,EAAgBN,mBAChBM,MA1DRY,EAAQpgD,uEAiERogD,EAAQx2D,UAAU,oBAAqBw2D,EAAQpgD,YAG/C,IAAAqgD,EAAA,WCtFMC,EAAU5hG,QAAQlM,OAAO,qBAC7B8sG,EAAmB9sG,OAAOK,KAC1Bq7F,EAAA,EAAgBr7F,OAclBytG,EAAQtgD,WAAa,SAASM,EAAUhqD,EAAgB8V,EAASjW,GAC/D,OACEu/C,SAAU,IACVW,QAAS,oBAOTV,KAAM,SAACxyB,EAAQR,EAASizB,EAAO4pD,GAE7B,IAAM71E,EAAUrzB,EAAe4F,UAAU,+BACnC+jG,EAAU3pG,EAAe4F,UAAU,2EAGnC0iG,EAAgB,IAAI2B,EAAA,EAA6Bn0F,EAAQ,kBAAmB9V,GAChFwX,MAAO,IAAIwiE,EAAA,EACX9oD,SAAU84B,oBAA2B32B,EAA3B,SAAA22B,CAA4Cn9B,GAAQ,GAC9DgE,YAAam5B,oBAA2B2/C,EAA3B,SAAA3/C,CAA4Cn9B,GAAQ,GACjEkE,UAAWlxB,EAAUa,IAAI,wBAA0Bb,EAAUhD,IAAI,6BAA0BwD,IAG7F6oG,EAAgBP,oBAAoBL,GACpCY,EAAgBZ,cAAgBA,EAEhCh6D,EAAA,EACEg6D,EACA,aACAY,EAAgBL,cAAcrrG,KAC5B0rG,EAAiB7uB,EAAA,EAAiBr8E,aACpCkrG,GAEF56D,EAAA,EACEg6D,EACA,gBACAY,EAAgBN,mBAChBM,MArCRc,EAAQtgD,uEA4CRsgD,EAAQ12D,UAAU,oBAAqB02D,EAAQtgD,YAG/C,IAAAwgD,EAAA,EClDM79B,EAAUjkE,QAAQlM,OAAO,mBAC7B8sG,EAAmB9sG,OAAOK,KAC1B22B,EAAc32B,KACdgtG,EAAkBhtG,KAClBktG,EAAaltG,KACbstG,EAAgBttG,KAChBwtG,EAAkBxtG,KAClB2tG,EAAkB3tG,OA6EpB8vE,EAAQ3iB,WAAa,WACnB,OACEx5B,WAAY,sCACZ8iB,OAAO,EACPI,kBACE1qC,OAAU,yBACV0U,SAAY,4BACZnY,IAAO,sBACPmT,YAAe,kCAKrBi0D,EAAQ/4B,UAAU,kBAAmB+4B,EAAQ3iB,YAG7C5rD,EAAA,kCC9HA,IAAAqsG,EAAAtuG,EAAA,KAeMI,EAAU,SAAS2D,EAAOwqG,GAM9BjqG,KAAKwwD,MAAQ/wD,EAMbO,KAAK+hD,SAAWkoD,EAMhBjqG,KAAKkqG,oFAUPpuG,EAAQnB,UAAUwW,cAAgB,SAASmX,GACzC,IAAKtoB,KAAKkqG,UAAU5hF,GAAK,CACvB,IAAM5kB,EAAS1D,KAAK+hD,SAAd,IAA0Bz5B,EAA1B,UACNtoB,KAAKkqG,UAAU5hF,GAAMtoB,KAAKwwD,MAAM9zD,IAAIgH,GAAKG,KACvC7D,KAAKmqG,qBAAqB9sG,KAAK2C,OAEnC,OAAOA,KAAKkqG,UAAU5hF,IAQxBxsB,EAAQnB,UAAUwvG,qBAAuB,SAAS1wD,GAChD,OAAO,IAAIuwD,EAAA,GAAyBjhF,KAAK0wB,EAAK1/C,QAOhD+B,EAAQC,OAASkM,QAAQlM,OAAO,wBACjBoM,QAAQ,mBAAoBrM,GAG3C6B,EAAA,+CCrEAysG,EAAA1uG,EAAA,KAkBMI,EAAU,SAAS2D,EAAOwqG,GAM9BjqG,KAAKwwD,MAAQ/wD,EAUbO,KAAK+hD,SAAWkoD,yEAclBnuG,EAAQnB,UAAU0gD,oBAAsB,SAASgvD,EAAUjrF,GACzD,IAAM1b,EAAM0mG,EAAA,EACPpqG,KAAK+hD,SADE,IACUsoD,EAAS9iG,KAAK,MAEhC+rD,KAAQl0C,EAAO7X,KAAK,OAGxB,OAAOvH,KAAKwwD,MAAM9zD,IAAIgH,GAAKG,KAAK7D,KAAKs7C,mBAAmBj+C,KAAK2C,QAiB/DlE,EAAQnB,UAAU2vG,iCAAmC,SACnDD,EAAU5S,GAEV,IAAMh7E,KACAxV,KAENuI,EAAqBioF,EAArBhoF,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAA8B,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAjV,OAAA,MAAAwV,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAhT,MAAA,IAAnBwI,EAAmB2K,EAC5B9I,EAAU7B,EAAOpI,SAAjB,KAA8BoI,EAAOwD,UAAcxD,EAAOxI,MAC1D6f,EAAWhiB,KAAK2K,EAAOpI,UAGzBiK,EAAA,UAAsBwV,EAAWlV,KAAK,KAEtC,IAAM7D,EAAM0mG,EAAA,EAAsBpqG,KAAK+hD,SAA3B,IAAuCsoD,EAAS9iG,KAAK,KAAQN,GACzE,OAAOjH,KAAKwwD,MAAM9zD,IAAIgH,GAAKG,KAAK7D,KAAKs7C,mBAAmBj+C,KAAK2C,QAS/DlE,EAAQnB,UAAU2gD,mBAAqB,SAAS7B,GAC9C,OAAO,IAAI8wD,EAAA,GAAkBh6D,aAAakJ,EAAK1/C,OAUjD+B,EAAQnB,UAAUi+C,eAAiB,SAAS4xD,EAASvtF,GACnD,IAAMvZ,EAAS1D,KAAK+hD,SAAd,IAA0ByoD,EAC1BC,GAAU,IAAIF,EAAA,GAAkBnsF,cAAcnB,GACpD,OAAOjd,KAAKwwD,MAAM7N,KAAKj/C,EAAK+mG,GAC1BznD,SAAUC,eAAgB,oBAC1B57C,iBAAiB,KAWrBvL,EAAQnB,UAAUg+C,cAAgB,SAAS6xD,EAAS3zF,GAClD,IAAMnT,EAAS1D,KAAK+hD,SAAd,IAA0ByoD,EAAQxoF,WAAlC,IAAgDnL,EAAQ04B,QACxDk7D,GAAU,IAAIF,EAAA,GAAkBG,aAAa7zF,GACnD,OAAO7W,KAAKwwD,MAAM7d,IAAIjvC,EAAK+mG,GACzBznD,SAAUC,eAAgB,oBAC1B57C,iBAAiB,KAWrBvL,EAAQnB,UAAU0+C,cAAgB,SAASmxD,EAAS3zF,GAClD,IAAMnT,EAAS1D,KAAK+hD,SAAd,IAA0ByoD,EAAQxoF,WAAlC,IAAgDnL,EAAQ04B,QAC9D,OAAOvvC,KAAKwwD,MAAMrX,OAAOz1C,GACvBs/C,SAAUC,eAAgB,oBAC1B57C,iBAAiB,MAQrBvL,EAAQC,OAASkM,QAAQlM,OAAO,sBACjBoM,QAAQ,iBAAkBrM,GAGzC6B,EAAA,kCC3IA,IAAM7B,EAAU,SAAS2D,EAAOkrG,GAM9B3qG,KAAKK,OAASZ,EAMdO,KAAKssC,KAAOq+D,yEAUd7uG,EAAQnB,UAAUiwG,UAAY,SAASt3E,EAAY9L,GAEjD,IAAMvgB,EAASugB,MAIf,OAHAvgB,EAAOnL,EAAQ+uG,MAAMC,GAAKx3E,EAAW,GACrCrsB,EAAOnL,EAAQ+uG,MAAMvhC,GAAKh2C,EAAW,GAE9BtzB,KAAKK,OAAO3D,IAAIsD,KAAKssC,MAC1BrlC,WACCpD,KAAK7D,KAAK+qG,iBAAiB1tG,KAAK2C,QASrClE,EAAQnB,UAAUowG,iBAAmB,SAAStxD,GAC5C,OAAOA,EAAK1/C,MAOd+B,EAAQ+uG,OACNC,EAAG,MACHxhC,EAAG,QAOLxtE,EAAQC,OAASkM,QAAQlM,OAAO,iBACjBoM,QAAQ,YAAarM,GAGpC6B,EAAA,iDC3EAqtG,EAAAtvG,EAAA,KAOAuvG,EAAA,EAAMC,KAAKvlB,YAAY1xD,IAAI+2E,EAAA,GAI3BrtG,EAAA,EAHgB,qECRhBwtG,EAAAzvG,EAAA,KAWM0vG,GAAe,SACVC,EAAA,EACT,2BACA,2BACA,SACA,cACA,cACA,gBACA,0CACA,WACA,YACA9jG,KAAK,KAGP4jG,EAAA,EAAMG,KAAK,aAAcF,GACzBG,EAAA,EAAqBJ,EAAA,GACrBK,EAAA,EAAW,cAAcC,WAJA,KAAQ,IAAO,IAAQ,OAShD9tG,EAAA,EAHgB,2CCJhB,IAAM7B,EAAU,SAAVA,IACJ,OACEmjD,SAAU,IAMVC,KAAM,SAACrM,EAAO3mB,EAASizB,GAErB,IAAMusD,EAAuBvsD,EAAA,WACvBwsD,EACG94D,EAAM1lB,MAAMu+E,GAEfE,EAAwBzsD,EAAA,mBAIxBvgC,EAFGi0B,EAAM1lB,MAAMy+E,GAEUtuG,QAC/BshB,EAAKzH,QAAQw0F,GAEbz/E,EAAQy6E,UAARzrG,MAAAgxB,EAAqBtN,GAErB,IAAMitF,EAAyB1sD,EAAA,oBACzB2sD,EAEGj5D,EAAM1lB,MAAM0+E,GAKfE,EAAqBjwG,EAAQkwG,gBACjCF,GAEF5/E,EAAQ0W,GAAG,iBAAkB,WAC3BiQ,EAAMoG,OAAO,WACX8yD,EAAmBrwD,WAIvBxvB,EAAQ0W,GAAG,kBAAmB,WAC5BiQ,EAAMoG,OAAO,WACX8yD,EAAmBjzD,YAIvB5sB,EAAQ0W,GAAG,yBAMT,SAACngB,EAAOwkF,EAAYgF,GAClBp5D,EAAMoG,OAAO,WACX8yD,EAAmBG,aAAazpF,EAAOwkF,EAAYgF,OAIzD//E,EAAQ0W,GAAG,mBAMT,SAACngB,EAAOwkF,EAAYgF,GAClBp5D,EAAMoG,OAAO,WACX8yD,EAAmBx8B,OAAO9sD,EAAOwkF,EAAYgF,OAInD//E,EAAQ0W,GAAG,yBAMT,SAACngB,EAAOwkF,EAAYgF,GAClBp5D,EAAMoG,OAAO,WACX8yD,EAAmBI,aAAa1pF,EAAOwkF,EAAYgF,OAIzD//E,EAAQ0W,GAAG,yBAMT,SAACngB,EAAOwpF,EAASG,GACfv5D,EAAMoG,OAAO,WACX,IAAMozD,EAAQngF,EAAQnyB,KAAK,gBAAb,yBACdgyG,EAAmBO,cAAc7pF,EAAO2pF,EAAOC,UAgB3DvwG,EAAQkwG,gBAAkB,SAASjvG,GA4BjC,YAzBemD,IAAXnD,GAEA2+C,KADmB,aAEnB5C,MAFmB,aAGnBozD,aAHmB,aAInBI,cAJmB,aAKnB/8B,OALmB,aAMnB48B,aANmB,eAUnBzwD,UAAsBx7C,IAAhBnD,EAAO2+C,KACX3+C,EAAO2+C,KAAO,aAChB5C,WAAwB54C,IAAjBnD,EAAO+7C,MACZ/7C,EAAO+7C,MAAQ,aACjBozD,kBAAsChsG,IAAxBnD,EAAOmvG,aACnBnvG,EAAOmvG,aAAe,aACxBI,mBAAwCpsG,IAAzBnD,EAAOuvG,cACpBvvG,EAAOuvG,cAAgB,aACzB/8B,YAA0BrvE,IAAlBnD,EAAOwyE,OACbxyE,EAAOwyE,OAAS,aAClB48B,kBAAsCjsG,IAAxBnD,EAAOovG,aACnBpvG,EAAOovG,aAAe,gBAU9BrwG,EAAQC,OAASkM,QAAQlM,OAAO,2BAIjBo3C,UAAU,aAAcr3C,GAGvC6B,EAAA,kCCvKA,IAAM7B,EAAUmM,QAAQlM,OAAO,sBAG/BD,EAAQc,MAAM,6BAMZ,SAACsvB,EAASizB,GACR,IAAMjM,EAAciM,EAAA,2BACpB,YAAuBj/C,IAAhBgzC,EAA4BA,EACjC,mCAGNp3C,EAAQ22C,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,iCAAkCj3C,EAAQ,SAqB/DI,EAAQ82C,WAAa,SAAS25D,GAC5B,OACEttD,SAAU,IACVpM,OACE25D,OAAQ,oBACRr0F,MAAO,0BAET4X,WAAY,oCACZkjB,kBAAkB,EAClBC,YAAaq5D,IATjBzwG,EAAQ82C,kDAaR92C,EAAQq3C,UAAU,kBAChBr3C,EAAQ82C,YAQV92C,EAAQ2wG,iBACL,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,YACpI,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,YACpI,UAAW,UAAW,OAAQ,YAcjC3wG,EAAQs3C,YAAc,SAAS1mB,EAAQ2mB,EAAUzmB,GAO/C5sB,KAAKwsG,OAASxsG,KAAKwsG,QAAU1wG,EAAQ2wG,eAOrCzsG,KAAKmY,OAdPrc,EAAQs3C,mDAqBRt3C,EAAQs3C,YAAYz4C,UAAU+xG,SAAW,SAASv0F,GAChDnY,KAAKmY,MAAQA,GAGfrc,EAAQi0B,WAAW,4BACjBj0B,EAAQs3C,aAGVz1C,EAAA,8CChHAgvG,EAAAjxG,EAAA,GAYMI,EAAU,aAUhBA,EAAQnB,UAAUiyG,oBAAsB,SAAS5hC,GAC/C,IAAM9hB,EAAS8hB,EAAI/pB,MAAM,8BACzB,GAAIiI,EAAQ,CACV,IAAMlkD,EAAIw8C,WAAW0H,EAAO,GAAGrhC,QAAQ,IAAM,KACvC5H,EAAIuhC,WAAW0H,EAAO,GAAGrhC,QAAQ,IAAM,KAC7C,IAAKo5C,MAAMj8D,KAAOi8D,MAAMhhD,GACtB,OAAQjb,EAAGib,GAGf,OAAO,MAYTnkB,EAAQnB,UAAUkyG,kBAAoB,SAASC,GAC7C,IAAIzmB,SAAMra,SACJ2Z,KAaN,OAZAmnB,EAAiB5pG,QAAQ,SAACyT,GAEC,UADzB0vE,EAAO1vE,EAAWo2F,eACT9kC,OAAO,EAAG,KACjBoe,UAAeA,GAGJ,QADbra,EAAOw/B,EAAA,EAAWnlB,IAEhBV,EAAYlrF,KAAKuxE,GAEjBhoE,QAAQC,MAAR,kBAAgCoiF,EAAhC,iCAGGV,GAiBT7pF,EAAQnB,UAAUqyG,eAAiB,SAASnxF,EAC1CuD,EAAQ6tF,EAAgBC,GACxB,IAAIjoE,SAeJ,YAdwB/kC,IAApBgtG,IACFA,GAAmBD,IAErBC,EAAgB/mG,KAAK,SAACwQ,GACpB,IAEE,GADAsuB,EAAWumE,EAAA,EAAiB3vF,EAAalF,EAAYs2F,GACjDN,EAAA,EAA4BvtF,EAAQ6lB,GACtC,OAAO,EAET,MAAO8+B,IAGT9+B,EAAW,OAENA,GAiBTnpC,EAAQnB,UAAUwyG,4BAA8B,SAC9CtxF,EAAauD,EAAQ6tF,EAAgBC,GACrC,IAAIjoE,EAAWjlC,KAAKgtG,eAAenxF,EAAauD,EAAQ6tF,EACtDC,GAKF,OAJiB,OAAbjoE,IACFA,EAAWjlC,KAAKgtG,eAAenxF,EAAY5W,UAAWma,EACpD6tF,EAAgBC,IAEbjoE,IAOTnpC,EAAQC,OAASkM,QAAQlM,OAAO,0BACjBoM,QAAQ,qBAAsBrM,GAG7C6B,EAAA,kCChIA,IAAAklE,EAAAnnE,EAAA,IAeMI,EAAU,SAAS4D,EAAWD,GAMlCO,KAAKK,OAASZ,EAMdO,KAAKssC,KAA+B5sC,EAAUhD,IAAI,qBAElD,IAAMgH,EAAM1D,KAAKssC,KAAKj2B,MAAM,KAK5BrW,KAAK+hD,SAAWr+C,EAAI,GAEpB,IAAMue,EAA6B,GAAdve,EAAInJ,OAAL,IAAwBmJ,EAAI,GAAO,GAKvD1D,KAAKotG,eAAiBvqC,EAAA,EAAU1C,kBAAkBl+C,oEASpDnmB,EAAQnB,UAAUylE,OAAS,SAASgsC,EAAOnlG,GAAQ,IAAA1E,EAAAvC,KAC3CqtG,EAAc3yG,OAAO0kD,UAAWp/C,KAAKotG,eAAgBnmG,GAE3DomG,EAAA,MAAuBjB,EAEvB,IAAM1oG,EAAS1D,KAAK+hD,SAAd,IAA0B8gB,EAAA,EAAUlC,kBAAkB0sC,GAE5D,OAAO,IAAIC,QAAQ,SAACppG,EAASyD,GAC3BpF,EAAKlC,OAAO3D,IAAIgH,GACbG,KAAK,SAAA41C,GAAA,OAAQv1C,EAAQu1C,EAAA,QACrB8zD,MAAM5lG,OAOb7L,EAAQC,OAASkM,QAAQlM,OAAO,+BACjBoM,QAAQ,0BAA2BrM,GAGlD6B,EAAA,kCCvEA,IAAA6vG,EAAA9xG,EAAA,KAiBMI,EAAU,SAAS4D,EAAWG,GAMlCG,KAAKq8B,gBAAkBx8B,EAOvBG,KAAKytG,UAAY/tG,EAAUa,IAAI,mBAC7Bb,EAAUhD,IAAI,mBAAqB,QAOrCsD,KAAK0tG,WAAahuG,EAAUa,IAAI,oBAC9Bb,EAAUhD,IAAI,oBAAsB,OAOtCsD,KAAK2tG,gBAAiBjuG,EAAUa,IAAI,yBAClCb,EAAUhD,IAAI,wBAOhBsD,KAAK4tG,OAASluG,EAAUa,IAAI,gBAC1Bb,EAAUhD,IAAI,gBAAkB,IAOlCsD,KAAK6tG,WAAanuG,EAAUa,IAAI,oBAC9Bb,EAAUhD,IAAI,oBAAsB,IAOtCsD,KAAKyW,UAAY/W,EAAUhD,IAAI,mGAYjCZ,EAAQnB,UAAUmzG,YAAc,SAAS/zG,EAAM0sF,GAAY,IAAAlkF,EAAAvC,KACzD,GAAmB,GAAfjG,EAAKQ,QAAoC,GAArBksF,EAAWlsF,OACjC,MAAO,GAGT,IAAMwzG,EAA0BtnB,EAAW3hF,IAAI,SAAAkpG,GAAA,OAAgBzrG,EAAK85B,gBAAgB52B,UAAUuoG,EAAa5xG,QAErG6xG,EAASjuG,KAAKkuG,QAAQH,GACtBI,EAAWp0G,EAAK+K,IAAI,SAACU,GACzB,IAAM4oG,EAAY3nB,EAAW3hF,IAAI,SAAAkpG,GAAA,OAAgBxoG,EAAOwoG,EAAa5xG,QACrE,OAAOmG,EAAK2rG,QAAQE,KAGtB,OAAOpuG,KAAK2tG,eAAiBM,EAASE,EAAS5mG,KAAK,IAAM4mG,EAAS5mG,KAAK,KAS1EzL,EAAQnB,UAAUuzG,QAAU,SAAS1oG,GAAQ,IAAAU,EAAAlG,KACrCquG,EAAsB,IAAI3sD,OAAO1hD,KAAK4tG,OAAQ,KAC9CU,EAActuG,KAAK4tG,OAAS5tG,KAAK4tG,OAYvC,OAVkBpoG,EAAOV,IAAI,SAAClI,GAC5B,YAAcsD,IAAVtD,GAAiC,OAAVA,GACzBA,KAAWA,EAEJsJ,EAAK0nG,OAAShxG,EAAMirB,QAAQwmF,EAAqBC,GAAepoG,EAAK0nG,QAErE,KAISrmG,KAAKvH,KAAK6tG,YAA9B,MAYF/xG,EAAQnB,UAAU0zF,cAAgB,SAASt0F,EAAM0sF,EAAY9oE,GAC3D,IAAM+2E,EAAc10F,KAAK8tG,YAAY/zG,EAAM0sF,GAC3CzmF,KAAKyW,UACHi+E,EAAa/2E,EADf,oBAC6C3d,KAAKytG,aAMpD3xG,EAAQC,OAASkM,QAAQlM,OAAO,mBAC9ByxG,EAAA,EAAoBpxG,QAEP+L,QAAQ,kBAAmBrM,GAG1C6B,EAAA,6CCjJA4wG,EAAA7yG,EAAA,KASMI,EAAUmM,QAAQlM,OAAO,oBAuB/BD,EAAQytD,WAAa,SAASuY,GAG5B,OACE7iB,SAAU,IAMVC,KAAM,SAACrM,EAAO3mB,EAASizB,GACrB,IACMsjC,EAAOtjC,EAAA,cACPr6C,EAAM+tC,EAAM1lB,MAAMs1D,GACxBj/E,EAAA,EAAYgjB,iBAAiB1hB,EAAKypG,EAAA,GAElC,IAAMC,EAAYrvD,EAAA,mBAClB37C,EAAA,EAAYC,YAAqBvD,IAAdsuG,GAEnB,IAAI16F,SACA26F,SAEEC,EAAiB,SAAjBA,IACJ5pG,EAAIo+E,aACJp+E,EAAIq+E,aAEA9hD,KAAK0hD,MAAQjvE,EAzBgB,MA0B/B26F,EAAoB3sC,EAAQshB,sBAAsBsrB,KAMtDxiF,EAAQ0W,GAAG,gBAAiB,WAC1B99B,EAAIo+E,aACJp+E,EAAIq+E,eAGNtwC,EAAM5lB,OAAOuhF,EAAW,SAAC5tF,EAAQsM,GAC3BtM,GAAUsM,IACZpZ,EAAQutB,KAAK0hD,MACbjhB,EAAQ6sC,qBAAqBF,GAC7BA,EAAoB3sC,EAAQshB,sBAAsBsrB,SA1C5D5yG,EAAQytD,+BAkDRztD,EAAQq3C,UAAU,gBAAiBr3C,EAAQytD,YAG3C5rD,EAAA,wDC/EA,IAAM7B,EAAUmM,QAAQlM,OAAO,8BAC7B6yG,EAAA,EAAyB7yG,OAAOK,KAChCmkD,EAAA,EAAyBxkD,OAAOK,OA2BlC,SAASyyG,EAA6BjiF,EAAQiiF,GAC5C,OAAOA,EAA6BjiF,GAxBtC9wB,EAAQ22C,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,+BAAgCj3C,EAAQ,SAI7DI,EAAQc,MAAM,+BAKZ,SAACgwB,GACC,IAAMsmB,EAActmB,EAAA,6BACpB,YAAuB1sB,IAAhBgzC,EAA4BA,EACjC,qFA0BNp3C,EAAQ82C,YACNuwB,UACE2rC,YAAe,kBAEjB/+E,WAAY,qBACZmjB,YAAa27D,GAEf/yG,EAAQwnE,UAAU,WAAYxnE,EAAQ82C,gBAGhCm8D,aAaJ,SAAAA,EAAYriF,EAAQ8zB,EAAcwuD,EAAiBrvG,EAAIitB,gGAAQvkB,CAAArI,KAAA+uG,GAK7D/uG,KAAKyjE,QAAU/2C,EAMf1sB,KAAKivG,iBAAmBD,EAMxBhvG,KAAKI,IAAMT,EAMXK,KAAKS,cAAgB+/C,EAMrBxgD,KAAK8uG,YAML9uG,KAAKkvG,UAMLlvG,KAAKyrE,MAMLzrE,KAAK+D,QAML/D,KAAK84F,WAAa94F,KAAKS,cAAc+/D,eAMrCxgE,KAAKmvG,kBAAoBnvG,KAAK84F,WAAWv+F,OAASq0G,EAAA,EAAyBljC,aAC3ElrB,EAAa+f,UAAYquC,EAAA,EAAyBjjC,iBAMlD3rE,KAAKovG,kBAAmB,EAMxBpvG,KAAKqvG,aAAc,EAMnBrvG,KAAKsvG,oBAAqB,EAE1BtvG,KAAKmrE,qGAOPA,uBAAc,IAAA5oE,EAAAvC,KACZA,KAAKI,IAAImvG,KAAKvvG,KAAKivG,iBAAiB9jC,YAAYnrE,KAAK84F,aAClDj1F,KAAK,SAAC41C,GACLl3C,EAAK2sG,UAAYz1D,EAAK1/C,KAAKsxE,UAC3B9oE,EAAK+sG,oBAAqB,GACzB,SAAC71D,GACFl3C,EAAK2sG,UAAY3sG,EAAKitG,UACtBjtG,EAAK+sG,oBAAqB,iBAQhC/jC,wBAAe,IAAArlE,EAAAlG,KACTA,KAAKyjE,QAAL,aAA6BgsC,QAC/BzvG,KAAKI,IAAImvG,KAAKvvG,KAAKivG,iBAAiB1jC,aAAavrE,KAAK84F,WAAY94F,KAAKyrE,MAAOzrE,KAAK+D,UAChFF,KAAK,SAAC41C,GACLvzC,EAAKkpG,kBAAmB,GACvB,SAAC31D,GACFvzC,EAAKmpG,aAAc,UAM7BvzG,EAAQi0B,WAAW,qBAAsBg/E,GAGzCpxG,EAAA,sDCtLA,IAAM7B,EAAUmM,QAAQlM,OAAO,4CAC7B2zG,EAAA,EAA0B3zG,OAAOK,OA2BnC,SAASuzG,EAA2C/iF,EAAQ+iF,GAC1D,OAAOA,EAA2C/iF,GAxBpD9wB,EAAQ22C,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,6CAA8Cj3C,EAAQ,SAI3EI,EAAQc,MAAM,6CAKZ,SAACgwB,GACC,IAAMsmB,EAActmB,EAAA,2CACpB,YAAuB1sB,IAAhBgzC,EAA4BA,EACjC,iHAiBNp3C,EAAQs3C,YAAR,WAYE,SAAAmwB,EAAY72C,EAAQ0M,gGAAiB/wB,CAAArI,KAAAujE,GAQnCvjE,KAAKwB,MASLxB,KAAK4zC,OAASlnB,EAMd1sB,KAAKw5B,aAAeJ,EAAgBj0B,WAnCxC,OAAAo+D,EAAAppC,SAAA,4BAAAopC,EAAA5oE,UA0CEi1G,YA1CF,WA2CI,6BAA8B11C,EAAA,EAAcl6D,KAAKwB,QA3CrD+hE,EAAA5oE,UAkDE2/E,OAlDF,WAmDIt6E,KAAKwB,MAAMusD,yBAnDfwV,EAAA5oE,UA4DEk1G,iBA5DF,SA4DmBr+F,GACfA,EAAW6W,SAAW7W,EAAW6W,SA7DrCk7C,EAAA5oE,UAsEE8zC,OAtEF,WAuEI,IAAK,IAAIp0C,EAAI2F,KAAKwB,MAAM84B,YAAY//B,OAAS,EAAWF,GAAH,EAAYA,IAC/D2F,KAAKw5B,aAAaiV,OAAOzuC,KAAKwB,MAAM84B,YAAYjgC,KAxEtDkpE,EAAA5oE,UAiFEqxC,iBAjFF,SAiFmBx6B,GACfxR,KAAKw5B,aAAaiV,OAAOj9B,IAlF7B+xD,EAAA,GAuFAznE,EAAQwnE,UAAU,0BAChBH,UACE3hE,MAAS,KAEXuuB,WAAYj0B,EAAQs3C,YACpBF,YAAay8D,IAIfhyG,EAAA,+CC5IAmyG,EAAAp0G,EAAA,KASMI,EAAUmM,QAAQlM,OAAO,0BAC7Bg0G,EAAA,EAAyBh0G,OAAOK,KAChC0zG,EAAA,EAAwB/zG,OAAOK,OAIjCuB,EAAA,0PCfAqyG,EAAAt0G,EAAA,KAmEMI,EAAU,SAAVA,EAAmB6D,EAAIo8B,EAAUpP,EAAYjtB,EAAWuwG,EAAcx8D,EAC1EvX,EAAkBskB,GAAc,IAAAj+C,EAAAvC,KAMhCA,KAAKytC,GAAK9tC,EAMVK,KAAK+sB,WAAaJ,EAMlB3sB,KAAKm8B,UAAYJ,EASjB/7B,KAAKkwG,+BAAiC,KAQtClwG,KAAKmwG,cAAgBF,EAMrBjwG,KAAKi0C,iBAAmBR,EAMxBzzC,KAAK68B,kBAAoBX,EAMzBl8B,KAAKioG,cAAgBvoG,EAAUa,IAAI,gBACjCb,EAAUhD,IAAI,gBAAkB,KAMlCsD,KAAKyxE,wBAA0B/xE,EAAUa,IAAI,0BAC3Cb,EAAUhD,IAAI,0BAA4B,KAK5C,IAAM4gF,EAAwB59E,EAAUa,IAAI,yBAC1Cb,EAAUhD,IAAI,yBAA2B,KAM3CsD,KAAKowG,gBAAkB9yB,EACrBA,EAAsBt4D,oBAAsB,KAM9ChlB,KAAKgoG,eAAiBtoG,EAAUa,IAAI,qBAClCb,EAAUhD,IAAI,qBAAuB,KAMvCsD,KAAK05B,aAAeh6B,EAAUa,IAAI,eAChCb,EAAUhD,IAAI,eAAiB,KAMjC,IAAM2zG,EAAsB3wG,EAAUa,IAAI,uBACxCb,EAAUhD,IAAI,0BA+FhB,IA9F4C,IAAxC2zG,EAAoBC,iBAEtBtwG,KAAK68B,kBAAkBgkB,oBAAmB,GAO5C7gD,KAAKuwG,6BAA+BF,EAAoBG,0BAMxDxwG,KAAKukG,+BACH7kG,EAAUa,IAAI,iCACZb,EAAUhD,IAAI,iCAAmC,KAMrDsD,KAAKu8B,WAAa78B,EAAUa,IAAI,aAAeb,EAAUhD,IAAI,aAAe,KAM5EsD,KAAKywG,yBAA2B/wG,EAAUa,IAAI,2BAC5Cb,EAAUhD,IAAI,2BAA6B,KAM7CsD,KAAK0wG,iBAAmBhxG,EAAUa,IAAI,mBACpCb,EAAUhD,IAAI,mBAAqB,KAMrCsD,KAAK2wG,cAAgBjxG,EAAUa,IAAI,gBACjCb,EAAUhD,IAAI,qBAAkBwD,EAMlCF,KAAK68C,gBAAkBn9C,EAAUa,IAAI,kBACnCb,EAAUhD,IAAI,kBAAoB,KAQpCsD,KAAKS,cAAgB+/C,EAMrBxgD,KAAK4wG,kBAAoBlxG,EAAUa,IAAI,oBACrCb,EAAUhD,IAAI,oBAAsB,KAMtCsD,KAAK49E,SAAWl+E,EAAUa,IAAI,WAC5Bb,EAAUhD,IAAI,WAAa,KAM7BsD,KAAK6tC,KAAO,KAMZ7tC,KAAK6wG,oBAAsBnxG,EAAUa,IAAI,sBACvCb,EAAUhD,IAAI,sBAAwB,KAOxCsD,KAAK8wG,mBAAqB,UACkB5wG,IAAxCmwG,EAAoBU,iBAAiC/wG,KAAK6wG,oBAAqB,CACjF,IAAMlrB,EAAc3lF,KAAK6wG,oBAAoBhE,kBAAkBwD,EAAoBU,iBAC/EprB,EAAYprF,OAAS,IACvByF,KAAK8wG,mBAAqBnrB,GAQ9B3lF,KAAKgxG,kBAAoB,KAMzBhxG,KAAKixG,qBAEsC/wG,IAAvCmwG,EAAoBa,eACtBlxG,KAAKixG,gBAAkBZ,EAAoBa,eAE3ClxG,KAAKixG,iBAAmB,IAAI54F,EAAA,GAC1BY,MAAO,IAAIk4F,EAAA,GACT74F,OAAQ,IAAI84F,EAAA,GACVj5F,MAAO,2BACPK,MAAO,IAETkD,OAAQ,EACRvC,OAAQ,EACRk4F,QAAS,EACT/2F,MAAO,MAEP,IAAIjC,EAAA,GACNY,MAAO,IAAIk4F,EAAA,GACT74F,OAAQ,IAAI84F,EAAA,GACVj5F,MAAO,qBACPK,MAAO,IAETkD,OAAQ,EACRvC,OAAQ,EACRk4F,QAAS,EACT/2F,MAAO,OASbta,KAAKsxG,YAAc,KAMnBtxG,KAAKuxG,mBAAqB,IAAIC,EAAA,GAC5B56F,UAAU,EACV66F,cAAc,EACdC,gBACE53F,UAAa63F,EAAA,EAA4BrzG,MACzCszG,YAAeD,EAAA,EAA4B/yG,QAC3CizG,UAAaF,EAAA,EAA4BrzG,MACzCwzG,SAAYH,EAAA,EAA4B5yG,KACxCgzG,MAASJ,EAAA,EAA4BnzG,aACrC0lG,SAAYyN,EAAA,EAA4BpzG,UACxCyzG,QAAWL,EAAA,EAA4BlzG,QACvCrC,KAAQu1G,EAAA,EAA4BjzG,KACpCuzG,YAAeN,EAAA,EAA4B5yG,KAC3CgZ,UAAa45F,EAAA,EAA4BhzG,WACzCsZ,YAAe05F,EAAA,EAA4B7yG,aAC3CozG,YAAeP,EAAA,EAA4BrzG,MAC3CuZ,YAAe85F,EAAA,EAA4B3yG,UAM3CgB,KAAKyxE,yBACP0gC,EAAA,EACEnyG,KAAKyxE,wBACL,SACAzxE,KAAKoyG,oCACLpyG,MAIJA,KAAK+sB,WAAWQ,IAAI,uBAAwB,SAAC9K,EAAOoL,EAAUiB,GAC5D,IAAMC,KACN,GAAID,EAAY1sB,KAAKs9B,MAAO,CAC1B,IAAMlR,EAAQX,EAASS,WACvB+jF,EAAA,EAAY5uG,OAAiB,OAAV+qB,GAA4B,QAAVA,GACrC,IAAMnG,EAAoB,OAAVmG,EAChBX,EAASgC,mBAAmB,SAAC0V,GAC3B,QAA2BrlC,IAAvBqlC,EAAKnjC,KAAKb,SAAwB,CACpC,IAAMqhD,EAAQ9mD,EAAQw2G,YAAYC,YAAchtE,EAAKnjC,KAAKhG,KAC1D2yB,EAAS6zB,GAASv6B,SAGjB,CACL,IAAMmqF,KACN1jF,EAAYe,mBAAmB,SAAC0V,QACHrlC,IAAvBqlC,EAAKnjC,KAAKb,UAA8C,OAApBgkC,EAAKjX,YAC3CkkF,EAAc/3G,KAAK8qC,EAAKnjC,KAAKhG,QAGjC2yB,EAASjzB,EAAQw2G,YAAYG,kBAAoB3jF,EAAY1sB,KAAKhG,MAAQo2G,EAAcjrG,KAAK,KAE/FhF,EAAKs6B,kBAAkBkB,YAAYhP,KAErC/uB,KAAK+sB,WAAWQ,IAAI,yBAA0B,SAAC9K,EAAOoL,GACpD,IAAMkB,KACAnV,EAAUiU,EAASlrB,MAAMw/B,aAI/BpT,GAHmBlB,EAASR,OAAOjrB,KAAKs9B,MACtC5jC,EAAQw2G,YAAYI,aAAe52G,EAAQw2G,YAAYK,oBACrD9kF,EAASzrB,KAAKhG,MACIwd,EACtBrX,EAAKs6B,kBAAkBkB,YAAYhP,KAMrC,IAAM9R,EAAWjd,KAAK4yG,cAClB5yG,KAAKioG,gBACPhrF,EAAS/Z,QAAQ,SAAC2T,GACZtU,EAAKylG,gBACPzlG,EAAKylG,eAAepxF,SAASC,GAE/BtU,EAAKswG,gBAAgBh8F,KAGvB7W,KAAKioG,cAAcxuC,OAAOx8C,GAC1Bk1F,EAAA,EAAgBnyG,KAAKioG,cAAe,MAAOjoG,KAAK8yG,uBAAwB9yG,MACxEmyG,EAAA,EAAgBnyG,KAAKioG,cAAe,SAAUjoG,KAAK+yG,0BAA2B/yG,OAG5EA,KAAKgoG,gBACPhoG,KAAK+sB,WAAWQ,IAAI,uBAAwB,WAC1CtQ,EAAS/Z,QAAQ,SAAC2T,GAChBtU,EAAKylG,eAAepxF,SAASC,OAK/B7W,KAAK0wG,kBACP1wG,KAAK+sB,WAAWQ,IAAIylF,EAAA,EAAgB51D,UAAUC,eAAgB,SAAC56B,EAAOrmB,GACpEmG,EAAK0wG,eAAe72G,KAUxB4D,KAAKkzG,oCAAsC,KAEvClzG,KAAK05B,cAAgB15B,KAAKukG,gCAE5BvkG,KAAKmzG,2BAA2BtvG,KAAK,WAGnCsuG,EAAA,EACE5vG,EAAKgiG,+BAA+Bh2D,oBACpC,MACAhsC,EAAK6wG,oCAHP7wG,GAMA4vG,EAAA,EACE5vG,EAAKgiG,+BAA+Bh2D,oBACpC,SACAhsC,EAAK8wG,uCAHP9wG,GAMA4vG,EAAA,EACE5vG,EAAKgiG,+BAA+Bz1D,qBACpC,MACAvsC,EAAK6wG,oCAHP7wG,GAMA4vG,EAAA,EACE5vG,EAAKgiG,+BAA+Bz1D,qBACpC,SACAvsC,EAAK8wG,uCAHP9wG,GASA,IAAAiN,EAAuBjN,EAAKgiG,+BAA+B51D,UAA3Dl/B,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAAsE,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAjV,OAAA,MAAAwV,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAhT,MAAA,IAA3D0xC,EAA2Dv+B,EACpExN,EAAK+wG,yBAAyBhlE,GAEhC,IAAAn8B,EAAwB5P,EAAKgiG,+BAA+Bt1D,WAA5D78B,EAAA1C,MAAAC,QAAAwC,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAtC,OAAAC,cAAwE,KAAAwC,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA5X,OAAA,MAAA+X,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAnC,QAAAC,KAAA,MAAAqC,EAAAD,EAAAzV,MAAA,IAA7DiyC,EAA6Dv8B,EACtE/P,EAAK+wG,yBAAyBzkE,MAKpC7uC,KAAKuzG,+PAUPz3G,EAAQnB,UAAU64G,aAAe,WAC/B,IAAMxuG,EAAIhF,KAAK68B,kBAAkB0kB,sBAAsBlkB,EAAA,EAAQC,eAAenoB,OACxE8K,EAAIjgB,KAAK68B,kBAAkB0kB,sBAAsBlkB,EAAA,EAAQC,eAAeloB,OAE9E,IAAK6rD,MAAMj8D,KAAOi8D,MAAMhhD,GAAI,CAC1B,IAAMF,GAAU/a,EAAGib,GACnB,GAAgC,OAA5BjgB,KAAK8wG,oBAA+B9wG,KAAK6wG,oBAAqB,CAChE,IAAM4C,EAAmBzzG,KAAK6tC,KAAK1uB,UAAUkxB,gBACvCqjE,EAAoB1zG,KAAK6wG,oBAAoB1D,4BACjDptF,EAAQ0zF,EAAiB5zF,YAAa4zF,EACtCzzG,KAAK8wG,oBACP,GAAI4C,EACF,OAAOA,EAGX,OAAO3zF,EAET,OAAO,MASTjkB,EAAQnB,UAAUg5G,WAAa,WAC7B,IAAMlvB,EAAOzkF,KAAK68B,kBAAkB0kB,sBAAsBlkB,EAAA,EAAQC,eAAejoB,OACjF,OAAO4rD,MAAMwjB,QAAQvkF,EAAYukF,GAYnC3oF,EAAQnB,UAAUi5G,gBAAkB,WAClC,IAAMC,EAAY7zG,KAAK68B,kBAAkB4kB,uBAAuBpkB,EAAA,EAAQC,eAAeroB,eACvF,YAAqB/U,IAAd2zG,EAA0B7zG,KAAKuwG,2BAA6BsD,GASrE/3G,EAAQnB,UAAUm5G,gBAAkB,SAASC,GAC3C,IAAIC,SAEFA,EADED,GAGoB/zG,KAAK6tC,KAAK1uB,UAAUK,YAE5C6yF,EAAA,EAAYpzF,YAAY+0F,GAGpBh0G,KAAKgxG,mBACPhxG,KAAKowG,gBAAgBxrF,cAAc5kB,KAAKgxG,mBAG1ChxG,KAAKgxG,kBAAoB,IAAIiD,EAAA,EAC3B,IAAIC,EAAA,EAAYF,IAClBh0G,KAAKgxG,kBAAkBp6F,SAAS5W,KAAKixG,iBAGrCjxG,KAAKowG,gBAAgB3rF,WAAWzkB,KAAKgxG,oBAYvCl1G,EAAQnB,UAAUw5G,cAAgB,WAChC,OAAOn0G,KAAK68B,kBAAkBykB,sBAAsBjkB,EAAA,EAAQC,eAAepoB,cAS7EpZ,EAAQnB,UAAUy5G,cAAgB,SAASC,EAAaN,GACtD,IAAIO,SAEFA,EADEP,GAGgB/zG,KAAK6tC,KAAK1uB,UAAUK,YAExC6yF,EAAA,EAAYpzF,YAAYq1F,GAExB,IAAMC,EAAM9zE,EAAE,UACZ09B,MAAS,wBACTtlD,KAAQw7F,IACP,GAEsB,OAArBr0G,KAAKsxG,aACPtxG,KAAK6tC,KAAKlZ,cAAc30B,KAAKsxG,aAG/BtxG,KAAKsxG,YAAc,IAAIkD,EAAA,GACrBtoF,QAASqoF,EACTtvE,SAAUqvE,IAGZt0G,KAAK6tC,KAAKnZ,WAAW10B,KAAKsxG,cAY5Bx1G,EAAQnB,UAAUi4G,YAAc,WAC9B,IAAMj2C,EAAI38D,KAAK68B,kBAAkBykB,sBAAsBjkB,EAAA,EAAQC,eAAetoB,UAC9E,YAAU9U,IAANy8D,GAAyB,KAANA,EACd01C,EAAA,EAAY5uG,OAAOzD,KAAKuxG,mBAAmBhhE,aAAaosB,QAUnE7gE,EAAQnB,UAAUq3E,cAAgB,SAASlvE,GAGzC,IAHqD,IAAAoD,EAAAlG,KAE/Cg6C,EAAOh6C,KAAKS,cAAc6gE,uBAAuBxlE,EAAQw2G,YAAYmC,YAClEp6G,EAAI,EAAGA,EAAI2/C,EAAKz/C,OAAQF,IAAK,CACpC,IAAMyP,EAAMkwC,EAAK3/C,GACXuC,EAAQoD,KAAKS,cAAc0gD,SAASr3C,GAC1CuoG,EAAA,EAAY5uG,OAAO7G,GACnBkG,EAAWgH,EAAIxM,MAAMxB,EAAQw2G,YAAYmC,WAAWl6G,SAAWqC,EAGjEoD,KAAK+sB,WAAWqrC,iBAAiB,kBAAMt1D,GAAY,SAACA,GAClD,IAAMmE,KACN,IAAK,IAAM6C,KAAOhH,EAChBmE,EAAOnL,EAAQw2G,YAAYmC,WAAa3qG,GAAOhH,EAAWgH,GAE5D5D,EAAKzF,cAAcwnB,aAAahhB,MAepCnL,EAAQnB,UAAUyqB,OAAS,SAAStgB,GAAK,IAAAkC,EAAAhH,KAEnC8E,IAAQ9E,KAAK6tC,OAIb7tC,KAAK6tC,OACP7tC,KAAK00G,iBACL10G,KAAK6tC,KAAO,MAGV/oC,IACF9E,KAAK6tC,KAAO/oC,EACR9E,KAAKywG,yBACPzwG,KAAKywG,yBAAyBkE,aAAa9wG,KAAK,SAACgT,GAC/C7P,EAAK4tG,aAAa9vG,EAAK+R,KAGzB7W,KAAK40G,aAAa9vG,EAAK,SAa7BhJ,EAAQnB,UAAUi6G,aAAe,SAAS9vG,EAAK+vG,GAAW,IAAAt2E,EAAAv+B,KAElDkf,EAAOpa,EAAIqa,UACbY,SAKJ,GAAI80F,GAAaA,EAAUz5F,cAAe,CACxC,IAAMrC,EAAOjU,EAAIka,UACjBqzF,EAAA,EAAY5uG,OAAOsV,GACnBmG,EAAK+wB,IAAI4kE,EAAUz5F,cAAcyE,YAAa9G,OACzC,CAEL,IADkB/Y,KAAK68B,kBAAkB4kB,uBAAuBqzD,EAAA,EAAkBC,iBAAiBC,SACnF,EACdj1F,EAAS/f,KAAKwzG,iBAEZt0F,EAAK+1F,UAAUl1F,GAEjB,IAAM0kE,EAAOzkF,KAAK2zG,kBACLzzG,IAATukF,GACFvlE,EAAKylE,QAAQF,IAQnBzkF,KAAKkwG,+BAAiCiC,EAAA,EACpCjzF,EACA,iBACAlf,KAAKmwG,cAAc,WACjB,IAAMpwF,EAASb,EAAKM,YACdilE,EAAOvlE,EAAKklE,UACZrnF,KACNA,EAAOsgC,EAAA,EAAQC,eAAenoB,OAASuF,KAAK2b,MAAMtW,EAAO,IACzDhjB,EAAOsgC,EAAA,EAAQC,eAAeloB,OAASsF,KAAK2b,MAAMtW,EAAO,IACzDhjB,EAAOsgC,EAAA,EAAQC,eAAejoB,OAASovE,EACvClmD,EAAK1B,kBAAkBkB,YAAYhhC,IAClC,KAAuB,GAC1BiD,MAGEA,KAAK4zG,mBAAqB5zG,KAAKowG,iBACjCpwG,KAAK8zG,gBAAgB/zF,GAIvB,IAAMs0F,EAAcr0G,KAAKm0G,gBACrBE,GACFr0G,KAAKo0G,cAAcC,EAAat0F,GAIlC,IAAMm1F,EAAmBl1G,KAAKm1G,uBACL,OAArBD,GAA6Bl1G,KAAK4wG,mBACpC5wG,KAAK4wG,kBAAkBx2E,MAAM86E,EAAkBpwG,IASnDhJ,EAAQnB,UAAU+5G,eAAiB,WACjCrC,EAAA,EAAY5uG,OACVzD,KAAKkwG,+BAAgC,yBACvCiC,EAAA,EAAuBnyG,KAAKkwG,gCAC5BlwG,KAAKkwG,+BAAiC,MAcxCp0G,EAAQnB,UAAUkhG,mBAAqB,SAASr3F,GAC9C,IAAMgkB,EAAYxoB,KAAK68B,kBAAkBykB,sBAAsBjkB,EAAA,EAAQC,eAAezoB,UACtF,QAAkB3U,IAAdsoB,EACF,KAAA9V,EAAoBlO,EAApBmO,EAAAjD,MAAAC,QAAA+C,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAA7C,OAAAC,cAA4B,KAAA+C,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAnY,OAAA,MAAAsY,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA1C,QAAAC,KAAA,MAAA4C,EAAAD,EAAAhW,MAAA,IAAjB+F,EAAiBkQ,EAC1B,GAAIlQ,EAAMjG,IAAI,WAAa8rB,EACzB,OAAO7lB,GAIb,OAAO,MAST7G,EAAQnB,UAAUy3G,oCAAsC,WACtD,GAAKpyG,KAAK6tC,MAAS7tC,KAAKyxE,wBAAxB,CAKA,IACMjpD,EADQxoB,KAAKyxE,wBAAwB/0E,IAAIsD,KAAK6tC,MAC5BnxC,IAAI,SAC5B21G,EAAA,EAAYx1F,aAAa2L,GAGzB,IAAMzrB,KACNA,EAAOsgC,EAAA,EAAQC,eAAezoB,UAAY2T,EAC1CxoB,KAAK68B,kBAAkBkB,YAAYhhC,KAYrCjB,EAAQnB,UAAUy6G,wBAA0B,WAC1C,GAAKp1G,KAAK68C,gBAAV,CAIA,IACMw4D,EADar1G,KAAK68C,gBAAgBpgB,SAASr6B,KAAKb,SACtBuD,IAAI,SAAA1C,GAAA,OAAQA,EAAKhG,OAG3CW,KACNA,EAAOsgC,EAAA,EAAQC,eAAehoB,aAAe+/F,EAAa9tG,KAAK,KAC/DvH,KAAK68B,kBAAkBkB,YAAYhhC,KAUrCjB,EAAQnB,UAAU26G,YAAc,SAASC,GACvC,IAAMC,EAAeD,EAAa9zF,QAAQ,SAC1C,OAAwB,GAAjB+zF,GAAsBA,GAAgBD,EAAah7G,OAAS,GAQrEuB,EAAQnB,UAAUs4G,eAAiB,SAAS9wG,GAC1C,GAAIA,EAAW,CACb,IAAMozG,EAAev1G,KAAKS,cAAc8/D,UAAUlqD,MAAM,KACxDg8F,EAAA,EAAY5uG,OAAO8xG,EAAah7G,OAAS,GACK,KAA1Cg7G,EAAaA,EAAah7G,OAAS,IAErCg7G,EAAa95G,OAAO85G,EAAah7G,OAAS,GAExCyF,KAAKs1G,YAAYC,GACnBA,EAAaA,EAAah7G,OAAS,GAAK4H,EAExCozG,EAAa96G,KAAK,QAAS0H,GAE7BnC,KAAKS,cAAckhE,QAAQ4zC,EAAahuG,KAAK,QAWjDzL,EAAQnB,UAAU86G,iBAAmB,WAGnC,IAAMF,EAAev1G,KAAKS,cAAc8/D,UAAUlqD,MAAM,KACxD,GAAIrW,KAAKs1G,YAAYC,GACnB,OAAOG,UAAUH,EAAaA,EAAah7G,OAAS,IAItD,IAAMo7G,EAAK31G,KAAK68B,kBAAkBykB,sBAAsB,SACxD,GAAIq0D,EACF,OAAOA,EAGT,IAAMC,EAAe51G,KAAKy9F,sCAC1B,OAAqB,OAAjBmY,EACKA,EAIL51G,KAAK2wG,cACA3wG,KAAK2wG,cAGP,MAST70G,EAAQnB,UAAU8iG,oCAAsC,WAEtD,IAAKz9F,KAAK49E,SACR,OAAO,KAET,IAAM55B,EAAkBhkD,KAAK49E,SAAS55B,gBACtC,GAAIA,GAAmB,kBAAmBA,EAAiB,CACzD,IAAM4xD,EAAe5xD,EAAgB6xD,cACrC,GAAID,EAAar7G,OAAS,EACxB,OAAOq7G,EAAa,GAGxB,OAAO,MAOT95G,EAAQnB,UAAU44G,YAAc,WAAW,IAAA70E,EAAA1+B,KACpCA,KAAKu8B,YAGVv8B,KAAKu8B,WAAW12B,kBAAkBhC,KAAK,SAAC1C,GACtC,IAAMgB,EAAYu8B,EAAK+2E,mBACvBpD,EAAA,EAAY5uG,OAAqB,OAAdtB,GAEfu8B,EAAKgyE,kBACPhyE,EAAKgyE,iBAAiB1zD,aAAate,EAAKgyE,iBAAiB9zD,UAAYz6C,EAAY,IAMnF,IAAIg7B,KACA97B,SAEEy0G,EAAcp3E,EAAKj+B,cAAc0gD,SAAS9jB,EAAA,EAAQC,eAAehoB,kBACnDpV,IAAhB41G,GACFzD,EAAA,EAAYx1F,aAAa1a,IACzBd,EAAQ00G,EAAA,EAAe7zG,gBAAgBf,EAAQgB,MAE7Cg7B,EAAmB97B,EAAME,WAG3Bu0G,EAAYz/F,MAAM,KAAKnT,QAAQ,SAAC6mB,GAC9B,IAAMvoB,EAAQu0G,EAAA,EAAen0G,gBAAgBT,EAAQ4oB,GACjDvoB,GACF27B,EAAiB1iC,KAAK+G,KAKxBk9B,EAAKme,iBACPne,EAAKme,gBAAgB3f,oBAAoBC,GAG3CuB,EAAKvC,UAAU,WACRuC,EAAKme,iBAAoBne,EAAKme,gBAAgBpgB,WAKnDiC,EAAKme,gBAAgBpgB,SAAS5M,mBAAmB,SAAChC,GAChD,IAAIA,EAAShB,OAAb,CAIA,IAAMjT,EAAU8kB,EAAK7B,kBAAkB0kB,uBACrC1zB,EAASR,OAAOjrB,KAAKs9B,MACnB5jC,EAAQw2G,YAAYI,aACpB52G,EAAQw2G,YAAYK,oBACpB9kF,EAASzrB,KAAKhG,MAIlB,QAHgB8D,IAAZ0Z,GAAyBiU,EAASlrB,OACpCkrB,EAASlrB,MAAMy/B,WAAWxoB,GAExBiU,EAASR,OAAOjrB,MAAQyrB,EAASR,OAAOjrB,KAAKs9B,YAAmCx/B,GAA1B2tB,EAASzrB,KAAKb,SAAuB,CAE7F,IAAMy0G,EAASt3E,EAAK7B,kBAAkB4kB,uBACpC3lD,EAAQw2G,YAAYC,YAAc1kF,EAASzrB,KAAKhG,WAEnC8D,IAAX81G,GACFnoF,EAASU,SAASynF,EAAS,KAAO,OAAO,QAEtC,IAAKnoF,EAASzrB,KAAKs9B,OAA2B,GAAlB7R,EAASJ,MAAY,CAEtD,IAAMwoF,EAAcv3E,EAAK7B,kBAAkBykB,sBACzCxlD,EAAQw2G,YAAYG,kBAAoB5kF,EAASzrB,KAAKhG,MAExD,QAAoB8D,IAAhB+1G,EAA2B,CAC7B,IAAMC,EAAmBD,EAAY5/F,MAAM,KAC3CwX,EAASgC,mBAAmB,SAAChC,GAC3B,QAA+B3tB,IAA3B2tB,EAASzrB,KAAKb,SAAwB,CACxC,IAAMy0G,EAASG,EAAA,EAAiBD,EAAkBroF,EAASzrB,KAAKhG,MAChEyxB,EAASU,SAASynF,EAAS,KAAO,OAAO,WAM9Bt3E,EAAKme,gBAAgBpgB,SAASl7B,SACtC2B,QAAQ,SAAC4rB,GACpBA,EAAYe,mBAAmB,SAAChC,GAC9B,GAA4B,kBAAxBA,EAASS,WAEX,OADAoQ,EAAK3R,WAAWmB,WAAW,uBAAwBL,EAAUiB,GACtDsnF,EAAA,EAAwB3mF,gBAAgBC,eAgB3D5zB,EAAQnB,UAAUm4G,uBAAyB,SAASrwF,GAClD,IAAM5L,EAAU4L,EAAMyJ,QACtBmmF,EAAA,EAAY7rF,iBAAiB3P,EAASo9F,EAAA,GACtCj0G,KAAK6yG,gBAAgBh8F,IAQvB/a,EAAQnB,UAAUo4G,0BAA4B,SAAStwF,GACrD,IAAM5L,EAAU4L,EAAMyJ,QACtBmmF,EAAA,EAAY7rF,iBAAiB3P,EAASo9F,EAAA,GACtCj0G,KAAKq2G,mBAAmBx/F,IAU1B/a,EAAQnB,UAAUk4G,gBAAkB,SAASh8F,GAC3C,IAAM2W,EAAM8oF,EAAA,EAAcz/F,GAC1B7W,KAAKi0C,iBAAiBrQ,eACpBpW,EACA2kF,EAAA,EAAgBt7F,EAAS,SACvB7W,KAAKmwG,cAAcnwG,KAAKu2G,0BAA2B,KAAK,GAAOv2G,QAUrElE,EAAQnB,UAAU07G,mBAAqB,SAASx/F,GAC9C,IAAM2W,EAAM8oF,EAAA,EAAcz/F,GAC1B7W,KAAKi0C,iBAAiBnQ,iBAAiBtW,GACvCxtB,KAAKu2G,6BAUPz6G,EAAQnB,UAAU47G,0BAA4B,WAC5C,GAAKv2G,KAAKioG,cAAV,CAGA,IAAMhrF,EAAWjd,KAAKioG,cAAc/9E,WAC9BnwB,EAAOiG,KAAKuxG,mBAAmBnzF,cAAcnB,GAE7ClgB,KACNA,EAAOsgC,EAAA,EAAQC,eAAetoB,UAAYjb,EAC1CiG,KAAK68B,kBAAkBkB,YAAYhhC,KASrCjB,EAAQnB,UAAUw6G,qBAAuB,WACvC,IAAMqB,EAAWx2G,KAAKS,cAAc0gD,SAAS9jB,EAAA,EAAQC,eAAe/nB,WACpE,IAAKihG,EACH,OAAO,KAGT,IAAMC,EAAYz2G,KAAKS,cAAcsgE,cAAc1jC,EAAA,EAAQC,eAAe9nB,aACpEsrC,EAAY9gD,KAAKS,cAAc6gE,uBAAuBxlE,EAAQw2G,YAAY9oE,KAE1EmuD,KACFQ,SACJ,QAAkBj4F,IAAdu2G,EAGkB,QADpBte,EAAcn4F,KAAK02G,mBAAmB56G,EAAQw2G,YAAY9oE,IAAKsX,KAE7D62C,EAAal9F,KAAK09F,QAKpB,IAAK,IAAI99F,EAAI,EAAGA,EAAIo8G,EAAWp8G,IAET,QADpB89F,EAAcn4F,KAAK02G,mBAAsB56G,EAAQw2G,YAAY9oE,IAAMnvC,EAArD,IAA2DymD,KAEvE62C,EAAal9F,KAAK09F,GAKxB,GAA2B,GAAvBR,EAAap9F,OACf,OAAO,KAGT,IAAMo8G,EAAoB32G,KAAKS,cAAc0gD,SAAS9jB,EAAA,EAAQC,eAAe7nB,mBAG7E,OACEuhF,QAASwf,EACT3e,eAJ2C,MAAtB8e,GAAmD,UAAtBA,GAKlDhf,aAAcA,IAYlB77F,EAAQnB,UAAU+7G,mBAAqB,SAAS1/E,EAAQ8pB,GAAW,IAAA3hB,EAAAn/B,KAI3Dy3F,KAwBN,OAtBA32C,EAAU59C,QAAQ,SAAC0zG,GACjB,GAAIA,GAAYv5E,EAAA,EAAQC,eAAe/nB,WAAaqhG,GAAYv5E,EAAA,EAAQC,eAAe7nB,mBACnFmhG,GAAYv5E,EAAA,EAAQC,eAAe9nB,aAA2C,GAA5BohG,EAASn1F,QAAQuV,GADvE,CAIA,IAAMp6B,EAAQuiC,EAAK1+B,cAAc0gD,SAASy1D,GAC1C,GAAKh6G,EAAL,CAIA,IAAIW,EAAYX,EACZA,EAAM6kB,QAAQ,MAAQ,IACxBlkB,EAAYX,EAAMyZ,MAAM,MAG1B,IAAMjR,GACJpI,SAAU45G,EAAS/uF,QAAQmP,EAAQ,IACnCz5B,UAAWA,GAEbk6F,EAAQh9F,KAAK2K,OAGPqyF,EAAQl9F,OAAS,GAAMk9F,WAAW,MAY5C37F,EAAQnB,UAAUw4G,yBAA2B,WAAW,IAAArzE,EAAA9/B,KAEhDs5B,EAAc+4E,EAAA,EAAY5uG,OAAOzD,KAAK05B,cACtCm9E,EAAkBxE,EAAA,EAAY5uG,OAClCzD,KAAKukG,gCAED3/F,KAEAkyG,EAAmB92G,KAAK68B,kBAAkBwkB,gBAC9ChkB,EAAA,EAAQC,eAAexoB,4BACnBiiG,EAAa/2G,KAAK68B,kBAAkBwkB,gBACxChkB,EAAA,EAAQC,eAAevoB,2BAEzB,GAAI+hG,GAAoBC,EAKtB,IAHA,IAAM7kG,EAAa4kG,EAAiBzgG,MAAMva,EAAQk7G,eAAeC,MAC3DC,EAAOH,EAAW1gG,MAAMva,EAAQk7G,eAAeC,MAHnBh8E,EAAA,SAKzB5gC,EAAO+G,GAGd,IAAM+1G,EAAwBjlG,EAAW7X,GAEzC,IAAK88G,EACH,cAGF,IAAMC,EAAkBD,EAAsB9gG,MAC5Cva,EAAQk7G,eAAeK,OACnB3zG,EAAMwzG,EAAK78G,GAEXgtG,EAAciQ,EAAA,EAAkBhjG,sBAAsB5Q,GAEtD6zG,EAAuBz3E,EAAK2N,GAAG7sC,QACrCgE,EAASnK,KAAK88G,EAAqBz2G,SAE/BumG,IAAgBiQ,EAAA,EAAkBzqG,KAAK7E,IACzCsxB,EAAYy4B,mBAAmBruD,GAAKG,KAClC,SAAC2lB,GACC+tF,EAAqBrzG,SACnBslB,eACA4tF,kBACA/P,cACA3jG,SAGJ,WAEE6zG,EAAqB5vG,QACnByvG,kBACA/P,cACA3jG,UAIG2jG,IAAgBiQ,EAAA,EAAkBzqG,KAAK9E,KAChDuxB,EAAY84B,oBAAoB1uD,GAAKG,KACnC,SAAC2lB,GACC+tF,EAAqBrzG,SACnBslB,eACA4tF,kBACA/P,cACA3jG,SAGJ,WAEE6zG,EAAqB5vG,QACnByvG,kBACA/P,cACA3jG,UAMN6zG,EAAqB5vG,QACnByvG,kBACA/P,cACA3jG,SA7DGrJ,EAAI,EAAG+G,EAAK81G,EAAK38G,OAAQF,EAAI+G,EAAI/G,IAAK,cAAA4gC,EAAtC5gC,GAML,MA6DN,OAAO2F,KAAKytC,GAAGvoC,IAAIN,GAAUf,KAC3B,SAAC2zG,GACC,IAAAzkG,EAAuBykG,EAAvBxkG,EAAAtD,MAAAC,QAAAoD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAlD,OAAAC,cAAkC,KAAAoD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAxY,OAAA,MAAA2Y,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA/C,QAAAC,KAAA,MAAAiD,EAAAD,EAAArW,MAAA,IAAvBkH,EAAuBoP,EAIhC,GAAIpP,EAASujG,cAAgBiQ,EAAA,EAAkBzqG,KAAK7E,IAClD,KAAAiM,EAAwBnQ,EAASszG,gBAAjCljG,EAAAxE,MAAAC,QAAAsE,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAApE,OAAAC,cAAkD,KAAAsE,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA1Z,OAAA,MAAA6Z,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAjE,QAAAC,KAAA,MAAAmE,EAAAD,EAAAvX,MAAA,IAAvC4rB,EAAuCpU,EAC1CqV,EAAW6P,EAAYs4B,uBAC3B9tD,EAAS0lB,aAAT,uBACAhB,GAEEiB,GACFotF,EAAgBvnE,wCACd7lB,EACA3lB,EAAS0lB,aACT1lB,EAASJ,WAOV,GAAII,EAASujG,cAAgBiQ,EAAA,EAAkBzqG,KAAK9E,KAIzD,KAAA8sD,EAAwB/wD,EAASszG,gBAAjCtiD,EAAAplD,MAAAC,QAAAklD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAhlD,OAAAC,cAAkD,KAAAklD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAt6D,OAAA,MAAAy6D,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA7kD,QAAAC,KAAA,MAAA+kD,EAAAD,EAAAn4D,MAAA,IAAvC4rB,EAAuCwsC,EAC1CvrC,EAAW6P,EAAY64B,wBAC3BruD,EAAS0lB,aAAT,eACAhB,GAEEiB,GACFotF,EAAgBnnE,yCACdjmB,EACA3lB,EAAS0lB,aACT1lB,EAASJ,SASrB,SAACwsC,OAWLp0C,EAAQnB,UAAUy4G,oCAAsC,SAAS7sF,GAC/D,IAAM/kB,EAAQ+kB,EAAI2F,QAClBmmF,EAAA,EAAY7rF,iBAAiBhlB,EAAOi2G,EAAA,GACpCz3G,KAAKszG,yBAAyB9xG,GAC9BxB,KAAK03G,gCAQP57G,EAAQnB,UAAU24G,yBAA2B,SAAS9xG,GACpD2wG,EAAA,EACE3wG,EAAMm2G,sBACN,MACA33G,KAAK03G,6BACL13G,MAEFmyG,EAAA,EACE3wG,EAAMm2G,sBACN,SACA33G,KAAK03G,6BACL13G,OAWJlE,EAAQnB,UAAUi9G,kBAAoB,SAASj1G,EAAOvG,GACpD,GAAIuG,aAAiBqtG,EAAA,EAAc,CACjC,IAAAv8C,EAAgB9wD,EAAMsnB,YAAYC,WAAlCwpC,EAAAhkD,MAAAC,QAAA8jD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAA5jD,OAAAC,cAA8C,KAAA8jD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAl5D,OAAA,MAAAq5D,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAzjD,QAAAC,KAAA,MAAA2jD,EAAAD,EAAA/2D,MAAA,IAAnCZ,EAAmC43D,EAE5C,GADAy+C,EAAA,EAAY5uG,OAAOzH,GACfgE,KAAK43G,kBAAkB57G,EAAGI,GAC5B,OAAO,EAGX,OAAO,EAEP,OAAOuG,EAAMjG,IAAI,kBAAoBN,GASzCN,EAAQnB,UAAU04G,uCAAyC,SAAS9sF,GAClE,IAAM/kB,EAAQ+kB,EAAI2F,QAClBmmF,EAAA,EAAY7rF,iBAAiBhlB,EAAOi2G,EAAA,GACpCz3G,KAAK63G,2BAA2Br2G,GAChCxB,KAAK03G,gCAQP57G,EAAQnB,UAAUk9G,2BAA6B,SAASr2G,GACtD2wG,EAAA,EACE3wG,EAAMm2G,sBACN,MACA33G,KAAK03G,6BACL13G,MAEFmyG,EAAA,EACE3wG,EAAMm2G,sBACN,SACA33G,KAAK03G,6BACL13G,OASJlE,EAAQnB,UAAU+8G,6BAA+B,WAAW,IAAAr3E,EAAArgC,KAEtDA,KAAKkzG,qCACPlzG,KAAKm8B,UAAUkC,OAAOr+B,KAAKkzG,qCAG7BlzG,KAAKkzG,oCAAsClzG,KAAKm8B,UAAU,WAAM,IAAA27E,EACxDvrF,KACA2qF,KAGN/hD,EAAuB90B,EAAKkkE,+BAA+B51D,UAA3DymB,EAAA1lD,MAAAC,QAAAwlD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAtlD,OAAAC,cAAsE,KAAAwlD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA56D,OAAA,MAAA+6D,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAnlD,QAAAC,KAAA,MAAAqlD,EAAAD,EAAAz4D,MAAA,IAA3D0xC,EAA2DgnB,EAGpE4hD,EAAKz8G,KAAK6zC,EAAS5qC,KAGnB,IAAMq0G,KACNzhD,EAA4BhoB,EAAShU,YAArCi8B,EAAA7mD,MAAAC,QAAA2mD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAzmD,OAAAC,cAAkD,KAAA2mD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA/7D,OAAA,MAAAk8D,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAtmD,QAAAC,KAAA,MAAAwmD,EAAAD,EAAA55D,MAAA,IAAvCo7G,EAAuCvhD,EAChD47C,EAAA,EAAY7rF,iBAAiBwxF,EAAeV,EAAA,GAK5C,IAAM9uF,EAAYwvF,EAAcvlG,mBAAmB,GACnDslG,EAAmBt9G,KAAK+tB,GAE1B+D,EAAM9xB,KAAKs9G,EAAmBxwG,KAAKzL,EAAQk7G,eAAeK,QAI5D,IAAA3hD,EAAwBr1B,EAAKkkE,+BAA+Bt1D,WAA5D0mB,EAAAjmD,MAAAC,QAAA+lD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAA7lD,OAAAC,cAAwE,KAAA+lD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAn7D,OAAA,MAAAs7D,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA1lD,QAAAC,KAAA,MAAA4lD,EAAAD,EAAAh5D,MAAA,IAA7DiyC,EAA6DgnB,EAGtEqhD,EAAKz8G,KAAKo0C,EAAUnrC,KAGpB,IAAMu0G,KACNthD,EAA6B9nB,EAAUvU,YAAvCs8B,EAAAlnD,MAAAC,QAAAgnD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAA9mD,OAAAC,cAAoD,KAAAgnD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAp8D,OAAA,MAAAu8D,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAA3mD,QAAAC,KAAA,MAAA6mD,EAAAD,EAAAj6D,MAAA,IAAzCs7G,EAAyCphD,EAClDu7C,EAAA,EAAY5uG,OAAOy0G,EAAe9oG,WAClC6oG,EAAoBx9G,KAAKy9G,EAAe9oG,WAE1Cmd,EAAM9xB,KAAKw9G,EAAoB1wG,KAAKzL,EAAQk7G,eAAeK,QAI7Dh3E,EAAKxD,kBAAkBkB,cAAvB+5E,MACGz6E,EAAA,EAAQC,eAAexoB,4BAA6ByX,EAAMhlB,KACzDzL,EAAQk7G,eAAeC,MAF3Ba,EAIGz6E,EAAA,EAAQC,eAAevoB,2BAA4BmiG,EAAK3vG,KACvDzL,EAAQk7G,eAAeC,MAL3Ba,IAUAz3E,EAAK6yE,oCAAsC,QAS/Cp3G,EAAQnB,UAAUqjC,YAAc,SAASvH,GAAQ,IAAAoK,EAAA7gC,KACzCg6C,EAAOq4D,EAAA,EAAY5uG,OAAOzD,KAAKS,cAAcsgD,gBACnDiW,EAAkBhd,EAAlBid,EAAAvnD,MAAAC,QAAAqnD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAnnD,OAAAC,cAAwB,KAAAqnD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAz8D,OAAA,MAAA48D,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAhnD,QAAAC,KAAA,MAAAknD,EAAAD,EAAAt6D,MAAA,IAAbkN,EAAaqtD,EACtB,GAAIrtD,EAAIquG,WAAWr8G,EAAQw2G,YAAYG,mBACrC,KAAM71G,EAAQkN,EAAIqY,UAAUrmB,EAAQw2G,YAAYG,kBAAkBl4G,QAClEk9D,EAAoBhhC,EAApBihC,EAAAhoD,MAAAC,QAAA8nD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAA5nD,OAAAC,cAA4B,KAAA8nD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAAl9D,OAAA,MAAAq9D,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAznD,QAAAC,KAAA,MAAA2nD,EAAAD,EAAA/6D,MAC1B,GAD0Bg7D,EAChBx7D,MAAQQ,EAAO,CACvBoD,KAAK68B,kBAAkBO,YAAYtzB,GACnC,QAIN,GAAIA,EAAIquG,WAAWr8G,EAAQw2G,YAAYK,oBACrC,KAAM/1G,EAAQkN,EAAIqY,UAAUrmB,EAAQw2G,YAAYK,mBAAmBp4G,QACnE69G,EAAoB3hF,EAApB4hF,EAAA3oG,MAAAC,QAAAyoG,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAvoG,OAAAC,cAA4B,KAAAyoG,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA79G,OAAA,MAAAg+G,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAApoG,QAAAC,KAAA,MAAAsoG,EAAAD,EAAA17G,MAC1B,GAD0B27G,EAChBn8G,MAAQQ,EAAO,CACvBoD,KAAK68B,kBAAkBO,YAAYtzB,GACnC,SAKR9J,KAAKm8B,UAAU,WACb,GAAK0E,EAAKgN,KAAV,CAGA,IAAMlrC,EAAQk+B,EAAKgN,KAAK7jB,gBACxBqoF,EAAA,EAAY5uG,OAAOd,GACnB,IAAAy0D,EAAkBpd,EAAlBqd,EAAA3nD,MAAAC,QAAAynD,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAvnD,OAAAC,cAAwB,KAAAynD,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA78D,OAAA,MAAAg9D,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAApnD,QAAAC,KAAA,MAAAsnD,EAAAD,EAAA16D,MAAA,IAAbkN,EAAaytD,EACtB,GAAIztD,EAAIquG,WAAWr8G,EAAQw2G,YAAYC,aAAc,CACnD,IAAM31G,EAAQkN,EAAIqY,UAAUrmB,EAAQw2G,YAAYC,YAAYh4G,QACvDsmC,EAAK+2E,kBAAkBj1G,EAAO/F,IACjCikC,EAAKhE,kBAAkBO,YAAYtzB,GAGvC,GAAIA,EAAIquG,WAAWr8G,EAAQw2G,YAAYI,cAAe,CACpD,IAAM91G,EAAQkN,EAAIqY,UAAUrmB,EAAQw2G,YAAYI,aAAan4G,QACxDsmC,EAAK+2E,kBAAkBj1G,EAAO/F,IACjCikC,EAAKhE,kBAAkBO,YAAYtzB,UAQ7ChO,EAAQC,OAASkM,QAAQlM,OAAO,gBAC9Bi3G,EAAA,EAAgBj3G,OAAOK,KACvB25G,EAAA,EAAeh6G,OAAOK,KACtBo8G,EAAA,EAAiBp8G,KACjBg6G,EAAA,EAAwBr6G,OAAOK,KAC/Bq8G,EAAA,EAAiBr8G,KACjBs8G,EAAA,EAAoB38G,OAAOK,KAC3Bu8G,EAAA,EAAuBv8G,QAGV+L,QAAQ,eAAgBrM,GAMvCA,EAAQ88G,2BACNh6G,QAAS,WAMX9C,EAAQw2G,aACNmC,WAAY,OACZlC,YAAa,eACbE,kBAAmB,qBACnBE,mBAAoB,sBACpBD,aAAc,gBACdlpE,IAAK,QAQP1tC,EAAQk7G,gBACNC,KAAM,IACNI,MAAO,KAITv7G,EAAQC,OAAOa,MAAM,0BAKrB,WACE,IAAMi8G,KACN,IAAK,IAAMC,KAAQh9G,EAAQw2G,YACzBuG,EAAOp+G,KAAK,IAAIinD,OAAU5lD,EAAQw2G,YAAYwG,GAAlC,OAEd,IAAK,IAAMC,KAAQ17E,EAAA,EAAQC,eACzBu7E,EAAOp+G,KAAK,IAAIinD,OAAO5lD,EAAQw2G,YAAYyG,KAE7CC,EAAA,EAAwBj9G,OAAOa,MAAM,oBAAqBi8G,GAR5D,GAYAl7G,EAAA,sFCxgDM7B,sCAnBNJ,EAAA,KAmBgBuM,QAAQlM,OAAO,kBAC7BilC,EAAA,EAAajlC,OAAOK,KACpB,aAIFN,EAAQc,MAAM,4BAMZ,SAACsvB,EAASizB,GACR,IAAMjM,EAAciM,EAAA,0BACpB,YAAuBj/C,IAAhBgzC,EAA4BA,EACjC,kCAGNp3C,EAAQ22C,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,gCAAiCj3C,EAAQ,SAgB9DI,EAAQ82C,WAAa,SAASqmE,EAA4Bl9E,GACxD,OACE8W,OACE2nC,eAAgB,IAChB/mE,KAAM,KAERw/B,kBAAkB,EAClBljB,WAAY,6CACZkvB,SAAU,KACV/L,YAAa+lE,EACb/5D,KAAM,SAACrM,EAAO3mB,EAASizB,EAAO5Z,GAC5BA,EAAKpgB,OAEL,IAAM4wB,EAAQxQ,EAAKlJ,gBAAgB2Z,qBACnCvV,EAAA,uBAA+BA,EAAA,oBAA4BsV,IAE3DxQ,EAAK2zE,aAAejxG,QAAQwxD,UAAWl0B,EAAK2zE,cAC1Cp0D,QAAWvf,EAAK4zE,eAChBn0D,QAAWzf,EAAK6zE,eAChBC,QAAW,SAACC,GACNA,GACF74E,EAAEvU,EAAQ,IAAIqtB,KAAK,uBAAuBggE,WAAW,SAAU,UAAWD,MAKhF/zE,EAAKi0E,aAAevxG,QAAQwxD,UAAWl0B,EAAKi0E,cAC1C10D,QAAWvf,EAAK4zE,eAChBn0D,QAAWzf,EAAK6zE,eAChBC,QAAW,SAACC,GACNA,GACF74E,EAAEvU,EAAQ,IAAIqtB,KAAK,uBAAuBggE,WAAW,SAAU,UAAWD,MAKhFrxG,QAAQikB,QAAQ,QAAQ0W,GAAG,oBAAqB,WAC9C,IAAM62E,EAAKxxG,QAAQikB,QAAQ,sBACvButF,GAA4B,UAAtBA,EAAG/vD,IAAI,YACfjpB,EAAEvU,EAAQ,IAAIqtB,KAAK,uBAAuBggE,WAAW,UAIzDx9E,EAAS,WACP9zB,QAAQikB,QAAQ,sBAAsB0W,GAAG,YAAa,SAACmhC,GACrDA,EAAEnoB,yBA7CZ9/C,EAAQ82C,4DAoDR92C,EAAQq3C,UAAU,iBAAkBr3C,EAAQ82C,YAgB5C92C,EAAQs3C,YAAc,SAAS1mB,EAAQhtB,EACrCg6G,EAAU75G,GAAgB,IAAA0C,EAAAvC,KAM1BA,KAAK25G,UAAYD,EAMjB15G,KAAKyT,KAOLzT,KAAKq8B,gBAAkBx8B,EAQvBG,KAAK8gF,YAQL9gF,KAAKw6E,eAOLx6E,KAAKm5G,eAMLn5G,KAAKo5G,eAOLp5G,KAAKw5G,cACHI,aAAe,EACfC,YAAc,GAQhB75G,KAAKk5G,cACHU,aAAe,EACfC,YAAc,GAQhB75G,KAAK85G,MAOL95G,KAAK+5G,MAELrtF,EAAOstF,aAAa,uBAAwB,wBAAyB,SAACC,EAAUC,GAC9E,IAAM15B,EAAQy5B,EAAS,GACjBx5B,EAAQw5B,EAAS,IAEnBhyG,QAAQkyG,OAAO35B,IAAYj+E,EAAKu+E,cAAe74E,QAAQkyG,OAAO15B,IAChEl+E,EAAKi4E,gBACH/mE,MACEK,MAAOvR,EAAKo3G,UAAU90D,QAAQ27B,GAC9B3sE,IAAKtR,EAAKo3G,UAAU90D,QAAQ47B,SA7FtC3kF,EAAQs3C,uEAuGRt3C,EAAQs3C,YAAYz4C,UAAUwqB,KAAO,WAEnC,IAAM87D,EAAkBjhF,KAAK25G,UAAUrzE,WAAWtmC,KAAKyT,MACvDzT,KAAKm5G,eAAiBn5G,KAAK25G,UAAUh1D,WAAWs8B,EAAgBn8B,SAChE9kD,KAAKo5G,eAAiBp5G,KAAK25G,UAAUh1D,WAAWs8B,EAAgBj8B,SAChEhlD,KAAK8gF,YAAiC,UAAnB9gF,KAAKyT,KAAKquB,KAEzB9hC,KAAK8gF,aACPt9E,EAAA,EAAYyb,YAAYgiE,EAAgBz7E,QACxCxF,KAAK85G,MAAQ95G,KAAK25G,UAAUh1D,WAAWs8B,EAAgBz7E,OAAO,IAC9DxF,KAAK+5G,MAAQ/5G,KAAK25G,UAAUh1D,WAAWs8B,EAAgBz7E,OAAO,MAE9DhC,EAAA,EAAYkW,aAAaunE,EAAgBz7E,QACzCxF,KAAK85G,MAAQ95G,KAAK25G,UAAUh1D,WAAWs8B,EAAgBz7E,UAI3D1J,EAAQi0B,WAAW,2BACjBj0B,EAAQs3C,aAGVz1C,EAAA,yDCtPA,IAAAogD,EAAAriD,EAAA,IAGMI,GAYNA,gBAA0B,SAASqX,EAAWzV,GAmB5C,MAjBE,8DACY6sE,KAAK7sE,KACjByV,EAAUzV,KAAOqgD,EAAA,EAAwB1+C,SACrC,aAAakrE,KAAK7sE,GACpByV,EAAUuiC,SAAW,QACZ,6BAA6B60B,KAAK7sE,GAC3CyV,EAAUuiC,SAAW,aACZ,4BAA4B60B,KAAK7sE,GAC1CyV,EAAUuiC,SAAW,UACZ,kBAAkB60B,KAAK7sE,GAChCyV,EAAUuiC,SAAW,aACZ,uCAAuC60B,KAAK7sE,GACrDyV,EAAUuiC,SAAW,kBACZ,sCAAsC60B,KAAK7sE,KACpDyV,EAAUuiC,SAAW,mBAGhBviC,EAAUzV,QAAUyV,EAAUuiC,WAIzC/3C,EAAA,kCCnCA,IAAM7B,aAaJ,SAAAA,EAAY2D,EAAOwqG,gGAAc5hG,CAAArI,KAAAlE,GAQ/BkE,KAAKwwD,MAAQ/wD,EAMbO,KAAK+hD,SAAWkoD,EAMhBjqG,KAAKkqG,aAjCH,OAAApuG,EAAAq+B,SAAA,wBAAAr+B,EAAAnB,UAyCJ61E,mBAzCI,SAyCeh/D,EAAY2B,GAC7B,IAAMinG,EAAe5oG,EAAW8W,GAA1B,IAAgCnV,EAChC/W,EAAOoV,EAAWpV,KACxB,IAAK4D,KAAKkqG,UAAUkQ,GAAY,CAC9B,IAAM12G,EAAS1D,KAAK+hD,SAAd,IAA0B3lD,EAA1B,WAAyC+W,EAC/CnT,KAAKkqG,UAAUkQ,GAAap6G,KAAKwwD,MAAM9zD,IAAIgH,GAAKG,KAC9C7D,KAAKq6G,0BAA0Bh9G,KAAK2C,OAExC,OAAOA,KAAKkqG,UAAUkQ,IAjDpBt+G,EAAAnB,UA0DJ0/G,0BA1DI,SA0DsB5gE,GAGxB,OADEA,EAAK1/C,KACKi9E,OA7DVl7E,KAsENA,EAAQC,OAASkM,QAAQlM,OAAO,4BAChCD,EAAQC,OAAOoM,QAAQ,wBAAyBrM,GAGhD6B,EAAA,kCCnEA,IAAM7B,EAAU,SAAS6D,EAAIF,EAAOq/E,GAClC,IAAI8V,SAAYtgC,SAGhBt0D,KAAKs6G,gBAAkB,SAAS3S,GAC9B,QAASA,EAAW,MAGtB3nG,KAAKu6G,YAAc,SAAS7lB,GAC1B,MAAO,0CAA0CngF,KAAKmgF,IAGxD10F,KAAKw6G,aAAe,SAAS9lB,GAC3B,MAAO,gBAAgBngF,KAAKmgF,IAG9B10F,KAAKswC,MAAQ,SAASokD,GACpB,MAAO,OAAOngF,KAAKmgF,IAAgB,UAAUngF,KAAKmgF,IAGpD10F,KAAKwwC,MAAQ,SAASkkD,GACpB,MAAO,OAAOngF,KAAKmgF,IAAgB,UAAUngF,KAAKmgF,IAOpD10F,KAAK+oB,KAAO,SAAS+mB,GACnB,IAAMlvC,EAAQjB,EAAGiB,QAqBjB,OApBIg0F,GAAcA,EAAW6lB,aAAe5lB,WAAW6lB,SACrD9lB,EAAW+lB,SAEb/lB,EAAa,IAAIC,YACNC,OAAS,SAASvuE,GAC3B3lB,EAAMsD,QAAQqiB,EAAIE,OAAOrrB,SAE3Bw5F,EAAWgmB,QAAU,SAASr0F,GAC5B,IAAM66B,EAAM76B,EAAIE,OAAOxiB,MACvBD,QAAQC,MAAM,wBAAyBm9C,GACvCxgD,EAAM+G,QACJ5D,QAAuB,IAAZq9C,EAAIilC,KAAavH,EAAQ,sBAAwBA,EAAQ,eACpE+7B,OAAUz5D,EAAIr9C,WAGlB6wF,EAAWkmB,WAAa,SAASv0F,GAC/B3lB,EAAM0+B,OAAO/Y,IAGfquE,EAAWG,WAAWjlD,GACflvC,EAAME,SAQfd,KAAKwnG,KAAO,SAAS9jG,EAAKq3G,GAEpBzmD,GACFA,EAASpwD,UAEXowD,EAAWymD,GAAep7G,EAAGiB,QAG7B,IAAMA,EAAQjB,EAAGiB,QAYjB,OAXAnB,EAAM/C,IAAIgH,GACR2/B,QAASixB,EAASxzD,UACjB+C,KAAK,SAACC,GACPlD,EAAMsD,QAAQJ,EAAS/J,OACtB,SAAC8gH,GACF72G,QAAQC,MAAM,0BAA2B42G,GACzCj6G,EAAM+G,QACJ5D,QAAW+6E,EAAQ,iBACnB+7B,OAAUA,MAGPj6G,EAAME,iFAIjBhF,EAAQC,OAASkM,QAAQlM,OAAO,gBAEjBoM,QAAQ,WAAYrM,GAGnC6B,EAAA,sSCjGAq9G,EAAAt/G,EAAA,KAgDMI,EAAU,SAASiY,EAAQ2Y,EAAQhtB,GAAW,IAAA6C,EAAAvC,KAE5Ci7G,GACJtkG,WAAYukG,EAAA,WAAmBnnG,EAAO4lF,MAAQ,SAEhDwhB,EAAA,EAAaF,EAAYlnG,EAAOqnG,mBAEhC,IAAMzd,EAAQ0d,EAAA,EAAoC1gH,UAAU+iG,kBAM5D19F,KAAK8E,IAAM,IAAIw2G,EAAA,GACbC,WAAYxnG,EAAOynG,cACnBh3G,UACA0a,KAAM,IAAIu8F,EAAA,EAAOR,GACjBS,SAAU3nG,EAAO4nG,cACf,IAAIC,EAAA,GACFn1F,OAAQuK,SAAS6qF,eAAe,eAElC,IAAIC,EAAA,GACFC,eAAgB,GAChBC,gBAAiB,KAEnB,IAAIC,EAAA,GACFv2G,MAAOi4F,EACPue,SAAU,MAGdnY,aAAchwF,EAAOooG,iBAAmBC,EAAA,GACtCC,aAAa,EACbC,oBAAoB,IAEtBC,yBAAyB,EACzBC,2BAA2B,IAO7Bx8G,KAAKy8G,aAAc,EAMnBz8G,KAAK08G,aAAc,EAMnB18G,KAAK28G,iBAAkB,EAMvB38G,KAAK48G,mBAAoB,EAMzB58G,KAAK68G,sBAAuB,EAM5B78G,KAAK88G,wBAAyB,EAM9B98G,KAAK+8G,sBAAwB,IAAIC,EAAA,GAC/BnkG,KAAM,IAAImiG,EAAA,GACR5hG,KAAM,IAAI6jG,EAAA,GAAa9kG,MAAO,YAC9BmG,KAAM,0BACNhF,SAAU,GACVhB,OAAQ,IAAI4kG,EAAA,GAAe/kG,MAAO,UAAWK,MAAO,IACpDK,KAAM,QAQV7Y,KAAKm9G,wBAAyB,EAE9B,IAAMlzD,EAAOxpB,EAAE,QAGfwpB,EAAKmzD,SACHl5C,UAAW,OACXm5C,QAAS,QACTC,SAAU,4BAIZrzD,EAAKrnB,GAAG,yBAA0B,WAChCqnB,EAAKmzD,QAAQ,WACbnzD,EAAKszD,IAAI,4BAOX,IAAMxV,EAAeroG,EAAUhD,IAAI,gBAMnCsD,KAAKw9G,iBAAmB99G,EAAUhD,IAAI,yBACnCsoB,oBACHhlB,KAAKw9G,iBAAiBlyD,YAAYy8C,GAElC,IAAM3gE,EAAoB1nC,EAAUhD,IAAI,qBAMxCsD,KAAKy9G,uBAAyB,IAAIC,EAAA,GAChCr5F,OAAQ,IAAIs5F,EAAA,GACVzyE,OAAO,EACPjuB,SAAU,IAAI2gG,EAAA,IAEhBvmG,MAAO,SAACR,EAASyO,GAAV,OAAyB8hB,EAAkBpsB,oBAAoBnE,MAGxE7W,KAAKy9G,uBAAuBr4F,OAAOplB,KAAK8E,KAMxC,IAAM4uC,EAAsBh0C,EAAUhD,IAAI,uBAEpCmhH,EAAsB,IAAIC,EAAA,EAAqB99G,KAAM,qBAC3D0zC,EAAoB6G,aAAa,WAAYsjE,GAAqB,GAElE,IAAME,EAA2B,IAAID,EAAA,EACnC99G,KACA,0BAEF0zC,EAAoB6G,aAAa,WAAYwjE,GAA0B,GAMvE/9G,KAAKg+G,sBACHx5B,QAAQ,GAOVxkF,KAAKi+G,YAAc,KAEnB5C,EAAA,EAAoCxgH,KAAKmF,KAAM+T,EAAQ2Y,EAAQhtB,GAG/DgtB,EAAOO,OAAO,kBAAM1qB,EAAKs/C,QAAQ4C,UAAU,SAAC7jC,GAC3B,OAAXA,GAAmBre,EAAKk6G,cAC1Bl6G,EAAKk6G,aAAc,0FAKzByB,EAAA,EAAgBpiH,EAASu/G,EAAA,IAEzBv/G,EAAQC,OAASkM,QAAQlM,OAAO,sCAC9Bs/G,EAAA,EAAoCt/G,OAAOK,KAC3C+hH,EAAA,EAAwB/hH,KACxBgiH,EAAA,EAAiBhiH,KACjBiiH,EAAA,EAAiBjiH,KACjBkiH,EAAA,EAA2BliH,KAC3BmiH,EAAA,EAAkBniH,KAClBoiH,EAAA,EAAiBpiH,KACjBqiH,EAAA,EAAmBriH,KACnBsiH,EAAA,EAAiBtiH,KACjBuiH,EAAA,EAAiBviH,KACjBwiH,EAAA,EAA4BxiH,KAC5ByiH,EAAA,EAAgBziH,QAGH2zB,WACb,4BACAj0B,GAEFA,EAAQC,OAAOa,MAAM,aAAa,GAElCd,EAAQC,OAAOa,MAAM,oBACnBi9B,MAAS,KAGX/9B,EAAQC,OAAOa,MAAM,uBAAwB,GAC7Cd,EAAQC,OAAOa,MAAM,sBAAuB,GAG5Ce,EAAA,6GCnPAmhH,GANEjhH,YAAa,aACbI,MAAO,QACPC,QAAS,uKCwCL6gH,EAAU,SAAVjjH,EAAmBkjH,GAEvBC,EAAA,EAAoBpkH,KAAKmF,MAEzB,IAAMoI,OAA0BlI,IAAhB8+G,EAA4BA,KAM5Ch/G,KAAKk/G,eAAiCh/G,IAArBkI,EAAQ+2G,SACvB/2G,EAAQ+2G,SAAWrjH,EAAQsjH,UAM7Bp/G,KAAKq/G,mBAAyCn/G,IAAzBkI,EAAQqpG,cAC3BrpG,EAAQqpG,aAMVzxG,KAAKs/G,yBAA6Cp/G,IAAvBkI,EAAQqU,WACjCrU,EAAQqU,WAAa3gB,EAAQyjH,2BAM/Bv/G,KAAKw/G,eAAiCt/G,IAArBkI,EAAQwO,UAAyBxO,EAAQwO,SAM1D5W,KAAKy/G,OAAS,EAMdz/G,KAAK0/G,OAAS,EAMd5jH,EAAQ6jH,uBAAgDz/G,IAA3BkI,EAAQspG,gBAAkCtpG,EAAQspG,gBAIjF5gE,EAAA,EAAgBiuE,EAASE,EAAA,GAOzBF,EAAQa,aACNj4D,WAAcm3D,EAA+BjhH,YAC7CwpD,MAASy3D,EAA+B7gH,MACxC0hG,QAAWmf,EAA+B5gH,QAC1C2hH,gBAAmBf,EAA+BjhH,YAClDiiH,WAAchB,EAA+B7gH,MAC7C8hH,aAAgBjB,EAA+B5gH,SAOjD6gH,EAAQY,qBAMRZ,EAAQpkH,UAAUqlH,YAMlBjB,EAAQpkH,UAAU41C,aAMlBwuE,EAAQpkH,UAAUgsB,aAMlBo4F,EAAQpkH,UAAU+vG,aAMlBqU,EAAQpkH,UAAUyjB,cAMlB2gG,EAAQpkH,UAAU0rB,cAUlB04F,EAAQkB,QACJ,mEAOJlB,EAAQK,UAAY,GAUpBL,EAAQQ,2BAA6B,SAAS1oG,GAC5C,OAAOA,EAAQ6F,iBAUjBqiG,EAAQmB,oBAAsB,SAASC,GACrC,IAAIC,EAAYD,GAAO,EAIvB,OAHIA,EAAM,IACRC,GAAcA,GAETrB,EAAQsB,cAAcD,IAU/BrB,EAAQsB,cAAgB,SAASF,GAE/B,IADA,IAAIG,EAAgB,GACbH,GAAO,IACZG,GAAiBvB,EAAQkB,QAAQjoF,OAC/B,GAAc,GAANmoF,GACVA,IAAQ,EAGV,OADAG,GAAiBvB,EAAQkB,QAAQjoF,OAAOmoF,IAc1CpB,EAAQM,cAAgB,SAAStoG,EAAQwpG,EAAcC,GACrD,IAAMC,EAAY1B,EAAQa,YAAYW,GACtCx4E,EAAA,EAAYtkC,YAAqBvD,IAAdugH,GACnB,IAAK,IAAIpmH,EAAI,EAAGA,EAAI0c,EAAOxc,SAAUF,EAAG,CACtC,IAAMgd,EAAQN,EAAO1c,GACfqmH,EAAYrpG,EAAMspG,UAClBC,EAAavpG,EAAMwpG,WACnBC,EAAczpG,EAAM0pG,YACpBC,EAAY3pG,EAAM4pG,UACpBR,GAAa3B,EAA+B5gH,QAC5B,OAAdwiH,GACF3B,EAAQmC,oBACNR,EAAWI,EAAaN,GAEnBC,GAAa3B,EAA+BjhH,YACjC,OAAhBijH,GACF/B,EAAQoC,iBAAiBL,EAAaN,GAE/BC,GAAa3B,EAA+B7gH,OAClC,OAAf2iH,GACF7B,EAAQqC,kBAAkBR,EAAYJ,GAGxB,OAAdQ,GACFjC,EAAQsC,iBAAiBL,EAAWR,KAa1CzB,EAAQoC,iBAAmB,SAASL,EAAaN,GAC/CzB,EAAQuC,mBAAmBR,EAAaN,IAW1CzB,EAAQqC,kBAAoB,SAASR,EAAYJ,GAC/C,GAAII,aAAsBh5D,EAAA,EAAe,CACvC,IAAMzuC,EAASynG,EAAWluF,YACtB8tF,EAAcjmH,OAAS,GACzBimH,EAAc/lH,KAAK,KAErB+lH,EAAc/lH,KAAK+nB,kCAAkCrJ,IACrD,IAAMunG,EAAYE,EAAWD,UACX,OAAdD,GACF3B,EAAQwC,iBAAiBb,EAAWF,GAEtC,IAAMM,EAAcF,EAAWG,YACX,OAAhBD,GACF/B,EAAQuC,mBAAmBR,EAAaN,KAe9CzB,EAAQmC,oBAAsB,SAASR,EAAWI,EAAaN,GAC7DzB,EAAQwC,iBAAiBb,EAAWF,GAChB,OAAhBM,GACF/B,EAAQuC,mBAAmBR,EAAaN,IAc5CzB,EAAQwC,iBAAmB,SAASb,EAAWF,EAAegB,GAC5D,IAAMn4G,OAAoCnJ,IAArBshH,EACnBA,EAAmB,YACf1nG,EAAY4mG,EAAUe,WAC5B,GAAkB,OAAd3nG,EAAoB,CACtBiuB,EAAA,EAAYtkC,OAAOiM,MAAMC,QAAQmK,GAAY,+BAC7C,IAAM4nG,EAAgBvpG,EAAA,EAAgB2B,GACtCiuB,EAAA,EAAYtkC,OAAOiM,MAAMC,QAAQ+xG,GAAgB,+BACjD,IAAMC,EAAehe,EAAA,EAAUie,cAAcF,GACzClB,EAAcjmH,OAAS,GACzBimH,EAAc/lH,KAAK,KAErB+lH,EAAc/lH,KACZ+nB,mBAAsBnZ,EAAtB,IAAsCs4G,MAY5C5C,EAAQuC,mBAAqB,SAASR,EAAaN,GACjD,IAAMtO,EAAc4O,EAAYW,WAChC,GAAoB,OAAhBvP,EAAsB,CACxBnqE,EAAA,EAAYtkC,OAAOiM,MAAMC,QAAQuiG,IACjC,IAAM2P,EAAkB1pG,EAAA,EAAgB+5F,GACxCnqE,EAAA,EAAYtkC,OAAOiM,MAAMC,QAAQkyG,GAAkB,iCACnD,IAAMC,EAAiBne,EAAA,EAAUie,cAAcC,GAC3CrB,EAAcjmH,OAAS,GACzBimH,EAAc/lH,KAAK,KAErB+lH,EAAc/lH,KAAK+nB,kCAAkCs/F,IAEvD,IAAMjqG,EAAcipG,EAAYiB,gBACZ7hH,IAAhB2X,IACE2oG,EAAcjmH,OAAS,GACzBimH,EAAc/lH,KAAK,KAErB+lH,EAAc/lH,KAAK+nB,kCAAkC3K,MAYzDknG,EAAQsC,iBAAmB,SAASL,EAAWR,GAC7C,IAAMwB,EAAYhB,EAAUiB,UAC5B,QAAkB/hH,IAAd8hH,EAAyB,CAC3B,IAAM1jG,EAAO0jG,EAAU3rG,MAAM,KACzBiI,EAAK/jB,QAAU,IACbimH,EAAcjmH,OAAS,GACzBimH,EAAc/lH,KAAK,KAErB+lH,EAAc/lH,KAAK+nB,+BAA+BlE,EAAK,MAG3D,IAAMoiG,EAAYM,EAAUL,UACV,OAAdD,GACF3B,EAAQwC,iBACNb,EAAWF,EAAe,cAahCzB,EAAQmD,wBAA0B,SAASrpG,GACzCkvB,EAAA,EAAYtkC,OAAgC,OAAzBoV,EAAKsJ,UAAU,EAAG,IACrC4lB,EAAA,EAAYtkC,OAAgC,KAAzBoV,EAAKA,EAAKte,OAAS,IACtCse,EAAOA,EAAKsJ,UAAU,EAAGtJ,EAAKte,OAAS,GACvC,IAAM4nH,EAAkBniH,KAAKoiH,mBAAmBvpG,GAC1C8Z,EAAa,IAAIg1B,EAAA,EAAiB,MAExC,OADAh1B,EAAW0vF,mBAAmBC,EAAA,EAAqBC,GAAIJ,GAChDxvF,GAYTosF,EAAQyD,6BAA+B,SAAS3pG,GAC9CkvB,EAAA,EAAYtkC,OAAgC,OAAzBoV,EAAKsJ,UAAU,EAAG,IACrC4lB,EAAA,EAAYtkC,OAAgC,KAAzBoV,EAAKA,EAAKte,OAAS,IAKtC,IAHA,IAAI4nH,KACEM,KACAC,GAHN7pG,EAAOA,EAAKsJ,UAAU,EAAGtJ,EAAKte,OAAS,IAGd8b,MAAM,KACtBhc,EAAI,EAAG+G,EAAKshH,EAAYnoH,OAAQF,EAAI+G,IAAM/G,EACjD8nH,EAAkBniH,KAAKoiH,mBAAmBM,EAAYroH,GAAI8nH,GAC1DM,EAAKpoH,GAAK8nH,EAAgB5nH,OAE5B,IAAMooH,EAAkB,IAAI9C,EAAA,EAAsB,MAGlD,OAFA8C,EAAgBN,mBACdC,EAAA,EAAqBC,GAAIJ,EAAiBM,GACrCE,GAYT5D,EAAQ6D,mBAAqB,SAAS/pG,GACpCkvB,EAAA,EAAYtkC,OAAgC,OAAzBoV,EAAKsJ,UAAU,EAAG,IACrC4lB,EAAA,EAAYtkC,OAAgC,KAAzBoV,EAAKA,EAAKte,OAAS,IACtCse,EAAOA,EAAKsJ,UAAU,EAAGtJ,EAAKte,OAAS,GACvC,IAAM4nH,EAAkBniH,KAAKoiH,mBAAmBvpG,GAChDkvB,EAAA,EAAYtkC,OAAkC,IAA3B0+G,EAAgB5nH,QACnC,IAAMw4B,EAAQ,IAAIs0B,EAAA,EAAY,MAE9B,OADAt0B,EAAMsvF,mBAAmBC,EAAA,EAAqBC,GAAIJ,GAC3CpvF,GAYTgsF,EAAQ8D,wBAA0B,SAAShqG,GACzCkvB,EAAA,EAAYtkC,OAAgC,OAAzBoV,EAAKsJ,UAAU,EAAG,IACrC4lB,EAAA,EAAYtkC,OAAgC,KAAzBoV,EAAKA,EAAKte,OAAS,IACtCse,EAAOA,EAAKsJ,UAAU,EAAGtJ,EAAKte,OAAS,GACvC,IAAM4nH,EAAkBniH,KAAKoiH,mBAAmBvpG,GAC1CiqG,EAAa,IAAIhD,EAAA,EAAiB,MAExC,OADAgD,EAAWT,mBAAmBC,EAAA,EAAqBC,GAAIJ,GAChDW,GAYT/D,EAAQgE,qBAAuB,SAASlqG,GACtCkvB,EAAA,EAAYtkC,OAAgC,OAAzBoV,EAAKsJ,UAAU,EAAG,IACrC4lB,EAAA,EAAYtkC,OAAgC,KAAzBoV,EAAKA,EAAKte,OAAS,IAKtC,IAHA,IAAI4nH,KACEM,KACA1jB,GAHNlmF,EAAOA,EAAKsJ,UAAU,EAAGtJ,EAAKte,OAAS,IAGpB8b,MAAM,KAChBhc,EAAI,EAAG+G,EAAK29F,EAAMxkG,OAAQF,EAAI+G,IAAM/G,EAAG,CAE9C,IAAIwZ,GADJsuG,EAAkBniH,KAAKoiH,mBAAmBrjB,EAAM1kG,GAAI8nH,IAC1B5nH,OAChB,IAANF,GACF8nH,EAAgBtuG,KAASsuG,EAAgB,GACzCA,EAAgBtuG,KAASsuG,EAAgB,KAEzCA,EAAgBtuG,KAASsuG,EAAgBM,EAAKpoH,EAAI,IAClD8nH,EAAgBtuG,KAASsuG,EAAgBM,EAAKpoH,EAAI,GAAK,IAEzDooH,EAAKpoH,GAAKwZ,EAEZ,IAAMse,EAAU,IAAIwtE,EAAA,EAAc,MAElC,OADAxtE,EAAQkwF,mBAAmBC,EAAA,EAAqBC,GAAIJ,EAAiBM,GAC9DtwF,GAYT4sF,EAAQiE,0BAA4B,SAASnqG,GAC3CkvB,EAAA,EAAYtkC,OAAgC,OAAzBoV,EAAKsJ,UAAU,EAAG,IACrC4lB,EAAA,EAAYtkC,OAAgC,KAAzBoV,EAAKA,EAAKte,OAAS,IAKtC,IAHA,IAAI4nH,KACEc,KACAC,GAHNrqG,EAAOA,EAAKsJ,UAAU,EAAGtJ,EAAKte,OAAS,IAGjB8b,MAAM,MACnBhc,EAAI,EAAG+G,EAAK8hH,EAAS3oH,OAAQF,EAAI+G,IAAM/G,EAG9C,IAFA,IAAM0kG,EAAQmkB,EAAS7oH,GAAGgc,MAAM,KAC1BosG,EAAOQ,EAAM5oH,MACVkB,EAAI,EAAG+F,EAAKy9F,EAAMxkG,OAAQgB,EAAI+F,IAAM/F,EAAG,CAE9C,IAAIsY,GADJsuG,EAAkBniH,KAAKoiH,mBAAmBrjB,EAAMxjG,GAAI4mH,IAC1B5nH,OAChB,IAANgB,GACF4mH,EAAgBtuG,KAASsuG,EAAgB,GACzCA,EAAgBtuG,KAASsuG,EAAgB,KAEzCA,EAAgBtuG,KAASsuG,EAAgBM,EAAKlnH,EAAI,IAClD4mH,EAAgBtuG,KAASsuG,EAAgBM,EAAKlnH,EAAI,GAAK,IAEzDknH,EAAKlnH,GAAKsY,EAGd,IAAMsvG,EAAe,IAAIpD,EAAA,EAAmB,MAG5C,OAFAoD,EAAad,mBACXC,EAAA,EAAqBC,GAAIJ,EAAiBc,GACrCE,GAcTpE,EAAQqE,mBAAqB,SAASvqG,EAAMhC,GAC1C,GAAY,IAARgC,EAAJ,CAGA,IAAM4D,EAAasiG,EAAQsE,oBAAoBxqG,EAAMhC,GAC/CiD,EAAY2C,EAAA,UACZq1F,EAAWr1F,EAAA,SACXo1F,EAAYp1F,EAAA,UACZw1F,EAAcx1F,EAAA,YACdy1F,EAAcz1F,EAAA,YACd5E,EAAc4E,EAAA,YAEhBikG,EAAY,UACExgH,IAAd4Z,IACF4mG,EAAY,IAAI5mC,EAAA,GACd3hE,MAA4C2B,KAGhD,IAAIgnG,EAAc,UACE5gH,IAAhBgyG,QAA6ChyG,IAAhB2X,IAC/BipG,EAAc,IAAIx1B,EAAA,GAChBnzE,MAA4C+5F,EAC5C15F,MAA8BX,KAGlC,IAAI+oG,EAAa,UACG1gH,IAAhB+xG,IACF2O,EAAa,IAAIh5D,EAAA,GACfzuC,OAA+B84F,EAC/B74F,KAAMsnG,EACNpoG,OAAQwoG,IAEVJ,EAAYI,EAAc,MAE5B,IAAIE,EAAY,UACC9gH,IAAb4xG,QAAwC5xG,IAAd2xG,IAC5BmP,EAAY,IAAIj6E,EAAA,GACdzoB,KAASwzF,EAAT,cACA14F,KAAM,IAAI0gE,EAAA,GACR3hE,MAA4C05F,OAIlD,IAAMx6F,EAAQ,IAAIwiE,EAAA,GAChBzgE,KAAMsnG,EACNznG,MAAO2nG,EACPtoG,OAAQwoG,EACRjoG,KAAMmoG,IAERnqG,EAAQD,SAASS,KAYnB0nG,EAAQuE,oBAAsB,SAASzqG,EAAMhC,GAE3C,IAAM4F,EAAasiG,EAAQsE,oBAAoBxqG,EAAMhC,GAC/CwD,EAAWxD,EAAQuE,cAsBzB,GAnBIf,aAAoBgtC,EAAA,EAClB5qC,EAAA,SACAA,EAAWgiF,EAAA,EAA4BhgG,iBAClCge,EAAA,mBACAA,EAAA,mBAEAA,EAAA,iBACAA,EAAA,kBAGFA,EAAA,UAEHpC,aAAoBstC,EAAA,WACflrC,EAAA,iBACAA,EAAA,cAKPA,EAAA,SAAwB,CAC1B,IAAIq1F,EAAWtwD,WAAW/kC,EAAA,WACoB,IAA1CA,EAAA,SAAuBgF,QAAQ,QACjCqwF,EAAWp3F,KAAK2b,MAAMy7E,EAAW,WAEnCr1F,EAAA,SAAyBq1F,EAI3B,IAAM/zF,KACN,IAAK,IAAMjU,KAAO2S,EAAY,CAC5B,IAAM7f,EAAQ6f,EAAW3S,GACrBi1G,EAAQY,kBAAkB71G,GAC5BiU,EAAMghG,EAAQY,kBAAkB71G,IAAQlN,EAExCmhB,EAAMjU,GAAOlN,EAIjBia,EAAQ4kB,cAAc1d,IAWxBghG,EAAQwE,WAAa,SAASz5G,EAAKlN,GACjC,IAAM4mH,GACJ/kB,EAAA,EAA4BpgG,MAC5BogG,EAAA,EAA4B7/F,QAC5B6/F,EAAA,EAA4B1/F,KAC5B0/F,EAAA,EAA4Bz/F,OAC5B,cACA,eAEIykH,GACJhlB,EAAA,EAA4BlgG,UAC5BkgG,EAAA,EAA4BjgG,aAC5BigG,EAAA,EAA4BhgG,QAC5BggG,EAAA,EAA4B3/F,aAC5B2/F,EAAA,EAA4B9/F,WAC5B,WACA,cACA,UACA,cACA,aAGF,OAAIsE,EAAA,EAAiBugH,EAAe15G,IAC1BlN,EACCqG,EAAA,EAAiBwgH,EAAgB35G,GACxB,SAAVlN,EAEDA,GAgBXmiH,EAAQsE,oBAAsB,SAASxqG,EAAMhC,GAI3C,IAHA,IAAM6sG,EAAQ7qG,EAAKxC,MAAM,KACnBoG,KAEGpiB,EAAI,EAAGA,EAAIqpH,EAAMnpH,SAAUF,EAAG,CACrC,IACMspH,EADOrhG,mBAAmBohG,EAAMrpH,IAClBgc,MAAM,KAC1B0xB,EAAA,EAAYtkC,OAAyB,IAAlBkgH,EAAOppH,QAC1B,IAAMuP,EAAM65G,EAAO,GACbv0F,EAAMu0F,EAAO,GAEnBlnG,EAAW3S,GAAOi1G,EAAQwE,WAAWz5G,EAAKslB,GAG5C,OAAO3S,GAYTsiG,EAAQ6E,yBAA2B,SAASvpG,GAC1C0tB,EAAA,EAAYvhB,iBAAiBnM,EAAUstC,EAAA,GACvC,IAAMw6D,EAAkB9nG,EAASwpG,qBAC3BC,EAASzpG,EAAS0pG,YAClBlwG,EAAMsuG,EAAgB5nH,OAC5B,WAAYyF,KAAKgkH,mBAAmB7B,EAAiB2B,EAAQ,EAAGjwG,GAAhE,KAYFkrG,EAAQkF,8BAAgC,SAAS5pG,GAC/C0tB,EAAA,EAAYvhB,iBAAiBnM,EAAUwlG,EAAA,GAOvC,IANA,IAAM4C,EAAOpoG,EAAS6pG,UAChBC,EAAkB1B,EAAKloH,OACvB4nH,EAAkB9nG,EAASwpG,qBAC3BC,EAASzpG,EAAS0pG,YACpBvvF,EAAS,EACP4vF,GAAa,MACV/pH,EAAI,EAAGA,EAAI8pH,IAAmB9pH,EAAG,CACxC,IAAMwZ,EAAM4uG,EAAKpoH,GACXwe,EAAO7Y,KAAKgkH,mBAAmB7B,EAAiB2B,EAAQtvF,EAAQ3gB,GAC5D,IAANxZ,GACF+pH,EAAU3pH,KAAK,KAEjB2pH,EAAU3pH,KAAKoe,GACf2b,EAAS3gB,EAGX,OADAuwG,EAAU3pH,KAAK,KACR2pH,EAAU78G,KAAK,KAYxBw3G,EAAQsF,oBAAsB,SAAShqG,GACrC0tB,EAAA,EAAYvhB,iBAAiBnM,EAAUgtC,EAAA,GACvC,IAAM86D,EAAkB9nG,EAASwpG,qBAC3BC,EAASzpG,EAAS0pG,YAClBlwG,EAAMsuG,EAAgB5nH,OAC5B,WAAYyF,KAAKgkH,mBAAmB7B,EAAiB2B,EAAQ,EAAGjwG,GAAhE,KAYFkrG,EAAQuF,yBAA2B,SAASjqG,GAC1C0tB,EAAA,EAAYvhB,iBAAiBnM,EAAUylG,EAAA,GACvC,IAAMqC,EAAkB9nG,EAASwpG,qBAC3BC,EAASzpG,EAAS0pG,YAClBlwG,EAAMsuG,EAAgB5nH,OAC5B,WAAYyF,KAAKgkH,mBAAmB7B,EAAiB2B,EAAQ,EAAGjwG,GAAhE,KAeFkrG,EAAQwF,aAAe,SAASpC,EAAiB2B,EAAQtvF,EAAQiuF,EAAM2B,GAErE,IADA,IAAMI,EAAkB/B,EAAKloH,OACpBF,EAAI,EAAGA,EAAImqH,IAAmBnqH,EAAG,CAExC,IAAMwZ,EAAM4uG,EAAKpoH,GAAKypH,EAChBjrG,EAAO7Y,KAAKgkH,mBAAmB7B,EAAiB2B,EAAQtvF,EAAQ3gB,GAC5D,IAANxZ,GACF+pH,EAAU3pH,KAAK,KAEjB2pH,EAAU3pH,KAAKoe,GACf2b,EAASiuF,EAAKpoH,GAEhB,OAAOm6B,GAYTuqF,EAAQ0F,sBAAwB,SAASpqG,GACvC0tB,EAAA,EAAYvhB,iBAAiBnM,EAAUslF,EAAA,GACvC,IAAMwiB,EAAkB9nG,EAASwpG,qBAC3BC,EAASzpG,EAAS0pG,YAClBtB,EAAOpoG,EAAS6pG,UAEhBE,GAAa,MAInB,OAHArF,EAAQwF,aAAa1pH,KAAKmF,KACxBmiH,EAAiB2B,EAHJ,EAGoBrB,EAAM2B,GACzCA,EAAU3pH,KAAK,KACR2pH,EAAU78G,KAAK,KAYxBw3G,EAAQ2F,2BAA6B,SAASrqG,GAC5C0tB,EAAA,EAAYvhB,iBAAiBnM,EAAU0lG,EAAA,GAOvC,IANA,IAAMoC,EAAkB9nG,EAASwpG,qBAC3BC,EAASzpG,EAAS0pG,YAClBd,EAAQ5oG,EAASsqG,WACjBC,EAAe3B,EAAM1oH,OACvBi6B,EAAS,EACP4vF,GAAa,KACV/pH,EAAI,EAAGA,EAAIuqH,IAAgBvqH,EAAG,CACrC,IAAMooH,EAAOQ,EAAM5oH,GACnB+pH,EAAU3pH,KAAK,KACf+5B,EAASuqF,EAAQwF,aAAa1pH,KAAKmF,KACjCmiH,EAAiB2B,EAAQtvF,EAAQiuF,EAAM2B,GACzCA,EAAU3pH,KAAK,KAEjB,OAAO2pH,EAAU78G,KAAK,KASxBw3G,EAAQ8F,mBACNj6C,EAAKm0C,EAAQ8D,wBACbn5C,EAAKq1C,EAAQyD,6BACb74C,EAAKo1C,EAAQiE,0BACbhnH,EAAK+iH,EAAQmD,wBACbjlH,EAAK8hH,EAAQ6D,mBACbv5C,EAAK01C,EAAQgE,sBASfhE,EAAQ+F,mBACNjF,gBAAmBd,EAAQkF,8BAC3BnE,WAAcf,EAAQuF,yBACtBvE,aAAgBhB,EAAQ2F,2BACxB/8D,WAAco3D,EAAQ6E,yBACtBv8D,MAAS03D,EAAQsF,oBACjB1kB,QAAWof,EAAQ0F,uBAcrB1F,EAAQpkH,UAAUynH,mBAAqB,SAASvpG,EAAMksG,GAMpD,IALA,IAAMv1D,EAAM32C,EAAKte,OACb+uB,EAAQ,EACN64F,OAA0CjiH,IAAxB6kH,EACtBA,KACE1qH,EAAI8nH,EAAgB5nH,OACjB+uB,EAAQkmC,GAAK,CAClB,IAAI3tC,SACA7mB,EAAQ,EACRI,EAAS,EACb,GAEEA,IAAe,IADfymB,EAAIk9F,EAAQkB,QAAQx+F,QAAQ5I,EAAKmf,OAAO1O,SAChBtuB,EACxBA,GAAS,QACF6mB,GAAK,IACd,IAAM8kC,EAAgB,EAATvrD,IAAgBA,GAAU,GAAMA,GAAU,EACvD4E,KAAKy/G,QAAU94D,EACf3rD,EAAQ,EACRI,EAAS,EACT,GAEEA,IAAe,IADfymB,EAAIk9F,EAAQkB,QAAQx+F,QAAQ5I,EAAKmf,OAAO1O,SAChBtuB,EACxBA,GAAS,QACF6mB,GAAK,IACd,IAAM+kC,EAAgB,EAATxrD,IAAgBA,GAAU,GAAMA,GAAU,EACvD4E,KAAK0/G,QAAU94D,EACfu7D,EAAgB9nH,KAAO2F,KAAKy/G,OAASz/G,KAAKk/G,UAC1CiD,EAAgB9nH,KAAO2F,KAAK0/G,OAAS1/G,KAAKk/G,UAE5C,OAAOiD,GAeTpD,EAAQpkH,UAAUqpH,mBAAqB,SAAS7B,EAAiB2B,EAAQtvF,EAAQ3gB,GAE/E,IADA,IAAImxG,EAAqB,GAChB3qH,EAAIm6B,EAAQn6B,EAAIwZ,EAAKxZ,GAAKypH,EAAQ,CACzC,IAAI9+G,EAAIm9G,EAAgB9nH,GACpB4lB,EAAIkiG,EAAgB9nH,EAAI,GAC5B2K,EAAI0V,KAAKwb,MAAMlxB,EAAIhF,KAAKk/G,WACxBj/F,EAAIvF,KAAKwb,MAAMjW,EAAIjgB,KAAKk/G,WACxB,IAAMv4D,EAAK3hD,EAAIhF,KAAKy/G,OACd74D,EAAK3mC,EAAIjgB,KAAK0/G,OACpB1/G,KAAKy/G,OAASz6G,EACdhF,KAAK0/G,OAASz/F,EACd+kG,GAAsBjG,EAAQmB,oBAAoBv5D,GAC9Co4D,EAAQmB,oBAAoBt5D,GAElC,OAAOo+D,GAYTjG,EAAQpkH,UAAUsqH,oBAAsB,SAASpsG,EAAMmmG,GACrDj3E,EAAA,EAAYtkC,OAAOoV,EAAKte,OAAS,GACjCwtC,EAAA,EAAYtkC,OAAmB,MAAZoV,EAAK,IACxBkvB,EAAA,EAAYtkC,OAAiC,MAA1BoV,EAAKA,EAAKte,OAAS,IACtC,IAAI2qH,EAAarsG,EAAK4I,QAAQ,KACxB0jG,EAAeD,GAAc,EAC9BrsG,EAAKsJ,UAAU,EAAG+iG,GADF,IACmBrsG,EAClCwB,EAAWra,KAAKolH,qBAAqBD,EAAcnG,GACnDnoG,EAAU,IAAIuwC,EAAA,EAAU/sC,GAC9B,GAAI6qG,GAAc,EAAG,CACnB,IAAMG,EAA0BxsG,EAAKsJ,UACnC+iG,EAAa,EAAGrsG,EAAKte,OAAS,GAE1B+qH,GADNJ,EAAaG,EAAwB5jG,QAAQ,OACR,EACnC4jG,EAAwBljG,UAAU,EAAG+iG,GACrCG,EACF,GAAsB,IAAlBC,EAEF,IADA,IAAM5B,EAAQ4B,EAAejvG,MAAM,KAC1Bhc,EAAI,EAAGA,EAAIqpH,EAAMnpH,SAAUF,EAAG,CACrC,IACMspH,EADOrhG,mBAAmBohG,EAAMrpH,IAClBgc,MAAM,KAC1B0xB,EAAA,EAAYtkC,OAAyB,IAAlBkgH,EAAOppH,QAC1B,IAAIuP,EAAM65G,EAAO,GACX/mH,EAAQ+mH,EAAO,IAChB3jH,KAAKw/G,WAAaT,EAAQY,kBAAkB71G,KAC/CA,EAAMi1G,EAAQY,kBAAkB71G,IAElC+M,EAAQjU,IAAIkH,EAAKi1G,EAAQwE,WAAWz5G,EAAKlN,IAG7C,GAAIsoH,GAAc,EAAG,CACnB,IAAMK,EAAaF,EAAwBljG,UAAU+iG,EAAa,GAC9DllH,KAAKw/G,UACPT,EAAQqE,mBAAmBmC,EAAY1uG,GAEvCkoG,EAAQuE,oBAAoBiC,EAAY1uG,IAI9C,OAAOA,GAYTkoG,EAAQpkH,UAAU6qH,qBAAuB,SAAS3sG,EAAMmmG,GACtDj3E,EAAA,EAAYtkC,OAAmB,MAAZoV,EAAK,IAExB,IAAMoE,KAEN,IADApE,EAAOA,EAAKsJ,UAAU,GACftJ,EAAKte,OAAS,GAAG,CACtB,IAAM+uB,EAAQzQ,EAAK4I,QAAQ,KAC3BsmB,EAAA,EAAYtkC,OAAO6lB,GAAS,GAC5B,IAAMzS,EAAU7W,KAAKilH,oBACnBpsG,EAAKsJ,UAAU,EAAGmH,EAAQ,GAAI01F,GAChC/hG,EAASxiB,KAAKoc,GACdgC,EAAOA,EAAKsJ,UAAUmH,EAAQ,GAEhC,OAAOrM,GAYT8hG,EAAQpkH,UAAUyqH,qBAAuB,SAASvsG,EAAMmmG,GACtD,IAAMyG,EAAiB1G,EAAQ8F,kBAAkBhsG,EAAK,IAItD,OAHAkvB,EAAA,EAAYtkC,YAA0BvD,IAAnBulH,GACnBzlH,KAAKy/G,OAAS,EACdz/G,KAAK0/G,OAAS,EACP+F,EAAe5qH,KAAKmF,KAAM6Y,IAYnCkmG,EAAQpkH,UAAU+qH,iBAAmB,SAAS7uG,EAASmoG,GACrD,IAAoC2G,KAIhCC,EAAkB,GAChBvrG,EAAWxD,EAAQuE,cACrBf,IACFurG,EAAkB5lH,KAAK6lH,kBAAkBxrG,EAAU2kG,IAGjD4G,EAAgBrrH,OAAS,IAE3BwtC,EAAA,EAAYtkC,OAAuD,MAAhDmiH,EAAgBA,EAAgBrrH,OAAS,IAC5DqrH,EAAkBA,EAAgBzjG,UAAU,EAAGyjG,EAAgBrrH,OAAS,GACxEorH,EAAalrH,KAAKmrH,IAKpB,IAAoCE,KAC9BC,EAAe/lH,KAAKs/G,oBAAoBzoG,GAC9C,IAAK,IAAM/M,KAAOi8G,EAAc,CAC9B,IAAMnpH,EAAQmpH,EAAaj8G,GAC3B,QAAc5J,IAAVtD,GAAiC,OAAVA,GAAkBkN,IAAQ+M,EAAQ8F,kBAAmB,CAC7C,IAA7BmpG,EAAkBvrH,QACpBurH,EAAkBrrH,KAAK,KAEzB,IAAMurH,EAAUxjG,mBACX1Y,EAAI+d,QAAQ,UAAW,KADZ,IAEZjrB,EAAMolB,WAAW6F,QAAQ,UAAW,MACxCi+F,EAAkBrrH,KAAKurH,IAW3B,GAPIF,EAAkBvrH,OAAS,IAC7BorH,EAAalrH,KAAK,KAClBiV,MAAM/U,UAAUF,KAAKS,MAAMyqH,EAAcG,IAKvC9lH,KAAKq/G,cAAe,CACtB,IAAMp6F,EAAgBpO,EAAQovG,mBAC9B,QAAsB/lH,IAAlB+kB,EAA6B,CAC/B,IAAIlO,EAASkO,EAAcpqB,KAAKgc,EAAS,GACzC,GAAe,OAAXE,EAAiB,CACnB,IAAMypG,KACNzpG,EAASrH,MAAMC,QAAQoH,GAAUA,GAAUA,GAC3CgoG,EAAQM,cACNtoG,EAAQsD,EAAS/C,UAAWkpG,GAC1BA,EAAcjmH,OAAS,IACzBorH,EAAalrH,KAAK,KAClBiV,MAAM/U,UAAUF,KAAKS,MAAMyqH,EAAcnF,MASjD,OADAmF,EAAalrH,KAAK,KACXkrH,EAAap+G,KAAK,KAY3Bw3G,EAAQpkH,UAAUurH,kBAAoB,SAASjpG,EAAU+hG,GACvD,IAAMoF,KACN,GAAInnG,EAAS1iB,OAAS,EAAG,CACvB6pH,EAAU3pH,KAAK,KACf,IAAK,IAAIJ,EAAI,EAAG+G,EAAK6b,EAAS1iB,OAAQF,EAAI+G,IAAM/G,EAC9C+pH,EAAU3pH,KAAKuF,KAAK0lH,iBAAiBzoG,EAAS5iB,GAAI2kH,IAGtD,OAAOoF,EAAU78G,KAAK,KAYxBw3G,EAAQpkH,UAAUkrH,kBAAoB,SAASxrG,EAAU2kG,GACvD,IAAMmH,EAAiBpH,EAAQ+F,kBAC7BzqG,EAAS/C,WACXywB,EAAA,EAAYtkC,YAA0BvD,IAAnBimH,GACnB,IAAMC,EACDC,EAAA,EAAqChsG,GAAU,EAAM2kG,GAG1D,OAFAh/G,KAAKy/G,OAAS,EACdz/G,KAAK0/G,OAAS,EACPyG,EAAetrH,KAAKmF,KAAMomH,IAInCzoH,EAAA,sFC5qCMuuE,EAAUjkE,QAAQlM,OAAO,qBAC7BuqH,EAAA,EAAuBvqH,OAAOK,OAuChC8vE,EAAQ3iB,WAAa,WACnB,OACEtK,SAAU,IACVpM,OAAO,EACP9iB,WAAY,wCACZkjB,kBACEnuC,IAAO,wBACP6gF,YAAe,gCACfljF,SAAY,8BAQdy8C,KAAM,SAACrM,EAAO3mB,EAASizB,EAAOpvB,GAC5BA,EAAW5K,UAKjB+mD,EAAQ/4B,UAAU,oBAChB+4B,EAAQ3iB,YAeV2iB,EAAQ94B,YAAc,SAASyW,EAAU9tB,EAAUrP,EAAQ65F,GAMzDvmH,KAAK8E,IAML9E,KAAK2lF,YAML3lF,KAAKyC,SAMLzC,KAAK27D,SAML37D,KAAKwmH,UAAY38D,EAMjB7pD,KAAK6zC,SAAW9X,EAMhB/7B,KAAKyjE,QAAU/2C,EAMf1sB,KAAKymH,WAAaF,EAElBt+G,QAAQikB,QAAQ,QAAQ0W,GAAG,YAAa5iC,KAAK0mH,YAAYrpH,KAAK2C,QAlDhEksE,EAAQ94B,iEAwDR84B,EAAQ94B,YAAYz4C,UAAUwqB,KAAO,WACnCnlB,KAAK2mH,kBAEL,IAAMlsE,EAASz6C,KAAK8E,IAAI21D,mBACxB1yB,EAAA,EAAY4S,cAAcF,GAE1BtM,EAAA,EAAgBsM,EAAQ,cACtBz6C,KAAK66C,sBAAuB76C,OAOhCksE,EAAQ94B,YAAYz4C,UAAUkgD,sBAAwB,SAASp4B,GAAO,IAAAlgB,EAAAvC,KACpEA,KAAKyjE,QAAQxqB,OAAO,WAClB,IAAM6B,EAAQv4C,EAAKuC,IAAIy2C,cAAc94B,GAC/B6Q,EAAa/wB,EAAKuC,IAAI02C,uBAAuBV,GACnDv4C,EAAKqkH,YAAYtzF,GACjB7Q,EAAMk5B,iBACNp5C,EAAKmkH,cACLnkH,EAAKskH,cAGLtkH,EAAKsxC,SAAS,WACZtxC,EAAKo5D,SAAStoC,YAAYC,QAKhC44C,EAAQ94B,YAAYz4C,UAAUisH,YAAc,SAAStzF,GACnD,IAAMuf,EAAQ7yC,KAAKyjE,QAAQ3Z,MAAK,GAChC9pD,KAAKwmH,UAAUxmH,KAAK8mH,SAApB9mH,CAA8B6yC,GAE9B,IAAMk0E,EAAgB/mH,KAAK8E,IAAIqa,UAAUkxB,gBAAgBgjB,UACzDrzD,KAAK2lF,YAAYziF,QAAQ,SAAC8oE,GACxB,IAAMl4C,EAAQkzF,EAAA,EAAiB1zF,EAAYyzF,EAA7B,QAAoD/6C,GAClEn5B,WAAem5B,GAAUl4C,EACzB+e,WAAem5B,EAAf,YAAiCl4C,EAAM,GACvC+e,WAAem5B,EAAf,aAAkCl4C,EAAM,KAG1C,IAAMmzF,EAAmB,SAASxtE,GAChC/Q,EAAA,EAAamK,EAAO4G,GAChBz5C,KAAKyC,UACPimC,EAAA,EAAamK,EAAO7yC,KAAKyC,SAAS5H,KAAKmF,KAAMszB,EAAYmmB,KAE3Dp8C,KAAK2C,MAIPA,KAAKymH,WAAW7b,UAAUt3E,GAAYzvB,KACpCojH,EAJqB,SAASxtE,GAC9Bz1C,QAAQC,MAAM,mCAYlBioE,EAAQ94B,YAAYz4C,UAAUgsH,gBAAkB,WAE9C,IAAMziD,EAAYlzC,SAASC,cAAc,OACzCizC,EAAUlwC,UAAUC,IAAI,WACxBiwC,EAAUlwC,UAAUC,IAAI,UACxBiwC,EAAUlwC,UAAUC,IAAI,sBACxBhsB,QAAQikB,QAAQg4C,GAAWxa,IAAI,WAAY,YAC3C,IAAMi0C,EAAQ3sE,SAASC,cAAc,OACrC0sE,EAAM3pE,UAAUC,IAAI,SACpBiwC,EAAU9wC,YAAYuqE,GACtB39F,KAAK8mH,SAAW91F,SAASC,cAAc,OACvCjxB,KAAK8mH,SAASI,aAAa,4BAA6B,IACxDlnH,KAAK8mH,SAAS9yF,UAAUC,IAAI,mBAC5BiwC,EAAU9wC,YAAYpzB,KAAK8mH,UAE3B9mH,KAAK27D,SAAW,IAAIwrD,EAAA,GAClBj7F,QAASg4C,EACTnvC,WAAW,EACXqyF,SAAS,EACTC,kBACErnG,SAAU,KAEZyU,YAAa,eAEfz0B,KAAK8E,IAAI4vB,WAAW10B,KAAK27D,WAG3BuQ,EAAQ94B,YAAYz4C,UAAUksH,YAAc,WAC1C,IAAM36F,EAAiClsB,KAAK27D,SAASsD,aACrDh3D,QAAQikB,QAAQA,GAASw9B,IAAI,UAAW,UAG1CwiB,EAAQ94B,YAAYz4C,UAAU+rH,YAAc,WAC1C,IAAMx6F,EAAiClsB,KAAK27D,SAASsD,aACrDh3D,QAAQikB,QAAQA,GAASw9B,IAAI,UAAW,SAG1CwiB,EAAQn8C,WAAW,8BAA+Bm8C,EAAQ94B,aA+B1D84B,EAAQo7C,kBAAoB,SAC1BC,GACA,OACEtoE,SAAU,IACVpM,OAAO,EACPK,YAAaq0E,IALjBr7C,EAAQo7C,kEASRp7C,EAAQ/4B,UAAU,2BAA4B+4B,EAAQo7C,mBAGtD,IAAAhkD,EAAA,ECtRMukC,UAAU5/F,QAAQlM,OAAO,2BAC7BunE,EAA2BlnE,QAI7BuB,EAAA,wHCEM6pH,EAAU,WAIdxnH,KAAKynH,cAAgB,IAAIC,EAAA,GAkB3BF,EAAQG,kBACNhgE,YAZF6/D,EAAQI,gBACN/pH,YAAa,aACbI,MAAO,QACPC,QAAS,YAS4BL,YACrCwpD,MAASmgE,EAAQI,eAAe3pH,MAChC0hG,QAAW6nB,EAAQI,eAAe1pH,QAClC2hH,gBAAmB2H,EAAQI,eAAe/pH,YAC1CiiH,WAAc0H,EAAQI,eAAe3pH,MACrC8hH,aAAgByH,EAAQI,eAAe1pH,SASzCspH,EAAQ7sH,UAAUktH,kBAAoB,SAAS3iD,EAAKviE,EAAO2iB,GACzD,IAAMjB,EAAS1hB,EAAMkpB,YACrBkc,EAAA,EAAYvhB,iBAAiBnC,EAAQ8mB,EAAA,GASrC,IAPA,IAAMluB,EAAWoH,EAAOuuF,cAEoBkV,KACtCC,GACJC,QAAS,GAGF3tH,EAAI,EAAG+G,EAAK6b,EAAS1iB,OAAQF,EAAI+G,IAAM/G,EAAG,CACjD,IAAM4tH,EAAkBhrG,EAAS5iB,GAE7B6tH,EAAY,KACZjjG,EAAgBgjG,EAAgBhC,wBACd/lH,IAAlB+kB,EACFijG,EAAYjjG,EAAcpqB,KAAKotH,EAAiB3iG,QAG1BplB,KADtB+kB,EAAgBtiB,EAAMsjH,sBAEpBiC,EAAYjjG,EAAcpqB,KAAK8H,EAAOslH,EAAiB3iG,IAG3D,IAAM6iG,EAAqBnoH,KAAKynH,cAAcW,mBAAmBH,GAI3DlxG,EAAwB,OAAdmxG,GAAuBx4G,MAAMC,QAAQu4G,GAA4BA,GAAbA,GAGpE,GAFAngF,EAAA,EAAYtkC,OAAOiM,MAAMC,QAAQoH,IAElB,OAAXA,GAAmBA,EAAOxc,OAAS,EAErC,IADA,IAAI8tH,GAAyB,EACpB9sH,EAAI,EAAG+F,EAAKyV,EAAOxc,OAAQgB,EAAI+F,IAAM/F,EAAG,CAC/C,IAAM8b,EAAQN,EAAOxb,GACjB8e,EAAWhD,EAAM+D,cACjBktG,SACJ,GAAKjuG,EAWE,CACL,IAAIkuG,EAAgBN,EAAgBlqG,QACpCwqG,EAAc3hG,YAAYvM,GAC1BiuG,EAAiBtoH,KAAKynH,cAAcW,mBAAmBG,GACvDluG,EAAWkuG,EAAcntG,cACzBmtG,EAAgB,KAChBT,EAAgBrtH,KAAK6tH,OAjBR,CAIb,GAHAA,EAAiBH,IACjB9tG,EAAW4tG,EAAgB7sG,eAGzB,SAEGitG,IACHP,EAAgBrtH,KAAK6tH,GACrBD,GAAyB,GAW7B,IAAM9H,EAAelmG,EAAS/C,UACI,OAA9BgxG,EAAe7rG,aACjB6rG,EAAe7rG,eAGjB,IAAM+rG,iBAAkCjtH,EAClCktH,EAAa33E,EAAA,EAAcz5B,GAAO2K,WAAlC,IAAgDu+F,EACtDvgH,KAAK0oH,kBAAkBX,EAAoBxH,EAAclpG,EAAOoxG,EAASD,GACzEF,EAAe7rG,WAAW+rG,GAAoBC,GAUpD,GAAIX,EAAgBvtH,OAAS,EAAG,CAC9B,IAIMwC,GACJ4rH,SAJAjrH,KAAM,oBACNuf,SAAU6qG,GAIVluG,QAASjX,EAAMw/B,aACf9qB,MAAO0wG,EACPrqH,KAAM,WAERwnE,EAAIzqE,KAAKsC,KAYbyqH,EAAQ7sH,UAAU+tH,kBAAoB,SAAS3rH,EAAQwjH,EAAclpG,EAAOoxG,EAASD,GACnF,GAAMjI,KAAgBiH,EAAQG,iBAA9B,CAIA,IAAMlH,EAAY+G,EAAQG,iBAAiBpH,GACrCz2G,MAAU0+G,EAAV,OAAiCC,EAAjC,KACN,KAAI3+G,KAAO/M,GAAX,CAIA,IAAM6rH,GACJC,gBAEF9rH,EAAO+M,GAAO8+G,EACd,IAAMlI,EAAYrpG,EAAMspG,UAClBC,EAAavpG,EAAMwpG,WACnBC,EAAczpG,EAAM0pG,YACpBC,EAAY3pG,EAAM4pG,UACpBR,IAAc+G,EAAQI,eAAe1pH,QACrB,OAAdwiH,GACF1gH,KAAK8oH,yBACHF,EAAYC,YAAanI,EAAWI,GAE/BL,IAAc+G,EAAQI,eAAe/pH,YAC1B,OAAhBijH,GACF9gH,KAAK+oH,sBAAsBH,EAAYC,YAAa/H,GAE7CL,IAAc+G,EAAQI,eAAe3pH,OAC3B,OAAf2iH,GACF5gH,KAAKgpH,uBAAuBJ,EAAYC,YAAajI,GAGvC,OAAdI,GACFhhH,KAAKipH,gBAAgBL,EAAYC,YAAa7H,MAUlDwG,EAAQ7sH,UAAUuuH,sBAAwB,SAASC,EAAYzI,GAC7D,IAAI5mG,EAAY4mG,EAAUe,WACR,OAAd3nG,IACFiuB,EAAA,EAAYtkC,OAA4B,iBAAdqW,GAA0BpK,MAAMC,QAAQmK,IAClEA,EAAY3B,EAAA,EAAgB2B,GAC5BiuB,EAAA,EAAYtkC,OAAOiM,MAAMC,QAAQmK,GAAY,+BAC7CqvG,EAAWrvG,UAAY6pF,EAAA,EAAUie,cAAc9nG,GAC/CqvG,EAAWvX,YAAc93F,EAAU,KAWvC0tG,EAAQ7sH,UAAUouH,sBAAwB,SAASF,EAAa/H,GAC9D,IAAMqI,GACJzrH,KAAM,QAERsC,KAAKopH,wBAAwBD,EAAYrI,GACzC+H,EAAYpuH,KAAK0uH,IAUnB3B,EAAQ7sH,UAAUquH,uBAAyB,SAASH,EAAajI,GAC/D,IAAIuI,SACJ,GAAIvI,aAAsBh5D,EAAA,EAAe,EACvCuhE,GACEzrH,KAAM,UAEGu0G,YAAc2O,EAAWluF,YACpC,IAAMguF,EAAYE,EAAWD,UACX,OAAdD,GACF1gH,KAAKkpH,sBAAsBC,EAAYzI,GAEzC,IAAMI,EAAcF,EAAWG,YACX,OAAhBD,GACF9gH,KAAKopH,wBAAwBD,EAAYrI,QAEtC,GAAIF,aAAsByI,EAAA,EAAa,CAC5C,IAAMz4E,EAAMgwE,EAAW0I,SACvB,QAAYppH,IAAR0wC,EAAmB,CACrBu4E,GACEzrH,KAAM,QACN6rH,gBAAiB34E,GAEnB,IAAMh3B,EAAUgnG,EAAWz+E,aACX,OAAZvoB,IACFuvG,EAAWK,eAAiB5vG,GAE9B,IAAMb,EAAO6nG,EAAW5hG,UACxB,GAAa,OAATjG,EAAe,CACjB,IAAIsc,EAAQurF,EAAWv8B,WACnBpjB,MAAM5rC,KACRA,EAAQ,GAEV8zF,EAAWM,aAAe1wG,EAAK,GAAKsc,EACpC8zF,EAAWO,cAAgB3wG,EAAK,GAAKsc,EAEvC,IAAIhX,EAAWuiG,EAAW+I,cACtB1oD,MAAM5iD,KACRA,EAAW,GAEb8qG,EAAW9qG,SAAWurG,EAAA,EAAiBvrG,SAEpC,GAAIuiG,aAAsBiJ,EAAA,EAAqB,CAKpD,IAAMnuG,EAA+CklG,EAAYkJ,YACjE,GAAe,OAAXpuG,EAAiB,CACnBytG,GACEzrH,KAAM,SAEO,IAAXge,EACFytG,EAAWY,YAAc,SACL,IAAXruG,EACTytG,EAAWY,YAAc,WACL,IAAXruG,EACTytG,EAAWY,YAAc,OACL,IAAXruG,IACTytG,EAAWY,YAAc,SAE3B,IAAMC,EAAYpJ,EAAW5hG,UACX,OAAdgrG,IACFb,EAAWM,aAAeO,EAAU,GACpCb,EAAWO,cAAgBM,EAAU,IAEvC,IAAMC,EAAgBrJ,EAAW+I,cAC5B1oD,MAAMgpD,IAAoC,IAAlBA,IAC3Bd,EAAW9qG,SAAWurG,EAAA,EAAiBK,IAEzC,IAAMC,EAAetJ,EAAWz+E,aACX,OAAjB+nF,IACFf,EAAWK,eAAiBU,GAE9B,IAAMC,EAAcvJ,EAAWG,YACX,OAAhBoJ,GACFnqH,KAAKopH,wBAAwBD,EAAYgB,GAE3C,IAAMC,EAAYxJ,EAAWD,UACX,OAAdyJ,GACFpqH,KAAKkpH,sBAAsBC,EAAYiB,SAI1BlqH,IAAfipH,GACFN,EAAYpuH,KAAK0uH,IAYrB3B,EAAQ7sH,UAAUmuH,yBAA2B,SAASD,EAAanI,EAAWI,GAC5E,IAAMqI,GACJzrH,KAAM,WAERsC,KAAKkpH,sBAAsBC,EAAYzI,GACnB,OAAhBI,GACF9gH,KAAKopH,wBAAwBD,EAAYrI,GAE3C+H,EAAYpuH,KAAK0uH,IAUnB3B,EAAQ7sH,UAAUyuH,wBAA0B,SAASD,EAAYrI,GAC/D,IAAM5O,EAAc4O,EAAYW,WAChC,GAAoB,OAAhBvP,EAAsB,CACxBnqE,EAAA,EAAYtkC,OAA8B,iBAAhByuG,GAA4BxiG,MAAMC,QAAQuiG,IACpE,IAAM2P,EAAkB1pG,EAAA,EAAgB+5F,GACxCnqE,EAAA,EAAYtkC,OAAOiM,MAAMC,QAAQkyG,GAAkB,iCACnDsH,EAAWjX,YAAcvO,EAAA,EAAUie,cAAcC,GACjDsH,EAAWkB,cAAgBxI,EAAgB,GAE7C,IAAMyI,EAAkBxJ,EAAYyJ,cACZ,OAApBD,IACFnB,EAAWmB,gBAAkBA,EAAgB/iH,KAAK,MAEpD,IAAMsQ,EAAcipG,EAAYiB,gBACZ7hH,IAAhB2X,IACFsxG,EAAWtxG,YAAcA,GAELipG,EAAY0J,eAEhCrB,EAAWsB,cAAgB3J,EAAY0J,eAW3ChD,EAAQ7sH,UAAUsuH,gBAAkB,SAASJ,EAAa7H,GACxD,IAAMmI,GACJzrH,KAAM,QAEFgI,EAAQs7G,EAAUC,UACxB,QAAc/gH,IAAVwF,EAAqB,CACvByjH,EAAWzjH,MAAQA,EACnB,IAAIglH,EAAS,IACTC,EAAS,IAEPC,EAAc5J,EAAU6J,eAEV,SAAhBD,GAA0C,UAAhBA,EAC5BF,EAAS,IACgB,UAAhBE,GAA2C,QAAhBA,IACpCF,EAAS,KAGX,IAAMI,EAAiB9J,EAAU+J,kBAEV,WAAnBD,EACFH,EAAS,IACmB,QAAnBG,IACTH,EAAS,KAEXxB,EAAW6B,WAAX,GAA2BN,EAASC,EAEpC,IAAMM,EAAgBjK,EAAU2I,mBACVzpH,IAAlB+qH,IAEF9B,EAAW8B,eAAiC,IAAhBA,EAAsBvwG,KAAKE,IAAIoH,WAE3DmnG,EAAW6B,WAAa,MAG1B,IAAMhJ,EAAYhB,EAAUiB,UAC5B,QAAkB/hH,IAAd8hH,EAAyB,CAC3B,IAAM1jG,EAAO0jG,EAAU3rG,MAAM,KACzBiI,EAAK/jB,QAAU,IACjB4uH,EAAW+B,WAAa5sG,EAAK,GAC7B6qG,EAAWrX,SAAWxzF,EAAK,GAC3B6qG,EAAWgC,WAAa7sG,EAAK7iB,OAAO,GAAG8L,KAAK,MAIhD,IAAMu5G,EAAcE,EAAUD,YAC9B,GAAoB,OAAhBD,EAAsB,CACxB,IAAM5O,EAAc4O,EAAYW,WAChC15E,EAAA,EAAYtkC,OAA8B,iBAAhByuG,GAA4BxiG,MAAMC,QAAQuiG,IACpE,IAAM2P,EAAkB1pG,EAAA,EAAgB+5F,GACxCnqE,EAAA,EAAYtkC,OAAOiM,MAAMC,QAAQkyG,GAAkB,iCACnDsH,EAAWiC,UAAYznB,EAAA,EAAUie,cAAcC,GAC/CsH,EAAWkC,YAAcxJ,EAAgB,GACzC,IAAMrpG,EAAQsoG,EAAYiB,gBACZ7hH,IAAVsY,IAEF2wG,EAAWmC,WAAa9yG,EAAQ,GAIpC,IAAMkoG,EAAYM,EAAUL,UAC5B,GAAkB,OAAdD,EAAoB,CACtB,IAAM5mG,EAAY4mG,EAAUe,WAC5B15E,EAAA,EAAYtkC,OAA4B,iBAAdqW,GAA0BpK,MAAMC,QAAQmK,IAClE,IAAM4nG,EAAgBvpG,EAAA,EAAgB2B,GACtCiuB,EAAA,EAAYtkC,OAAOiM,MAAMC,QAAQ+xG,GAAgB,+BACjDyH,EAAWtX,UAAYlO,EAAA,EAAUie,cAAcF,QAInBxhH,IAA1BipH,EAAW6B,aACb7B,EAAWoC,aAAevK,EAAUwK,aAGpCrC,EAAWsC,cAAgBzK,EAAU0K,cAGvC7C,EAAYpuH,KAAK0uH,KAKrB,IAAAwC,EAAA,gGCzYMC,EAAU,SAASloH,EAAKjE,EAAOI,EAAgBD,GAKnDI,KAAKssC,KAAO5oC,EAMZ1D,KAAKK,OAASZ,EAMdO,KAAKq8B,gBAAkBx8B,EAMvBG,KAAK6sC,iBAAmBjtC,EAMxBI,KAAK6rH,eAAiB,IAAIF,EAM1B3rH,KAAK8rH,mBAAoB,gEAW3BF,EAAQjxH,UAAU0jC,OAAS,SAAS0tF,EAAKC,GACvC,IAAMC,OAAgC/rH,IAAnB8rH,EAA+BA,KAE5CtoH,EAAS1D,KAAKssC,KAAd,WAA6By/E,EAEnC,OAAO/rH,KAAKK,OAAL,OAAsBqD,EAAKuoH,IAepCL,EAAQjxH,UAAUuxH,WAAa,SAC7BpnH,EAAKuwB,EAAO82F,EAAKC,EAAQ/7G,EAAQg8G,GAEjC,IAAMC,GACJH,IAAKA,EACL9tG,SAAyBguG,EAAA,UAG3BrsH,KAAKusH,WAAWznH,EAAKuwB,EAAOi3F,GAE5B,IAAMl7G,GACJtM,IAAKwnH,GAaP,OAXA5jF,EAAA,EAAat3B,EAAYi7G,IAKvBj7G,aACAf,SACA0lC,KALW/1C,KAAKq8B,gBAAgBmwF,gBAMhCJ,WAaJR,EAAQjxH,UAAU4xH,WAAa,SAASznH,EAAKuwB,EAAOt4B,GAAQ,IAAAwF,EAAAvC,KACpDkf,EAAOpa,EAAIqa,UACXstG,EAAavtG,EAAKM,YAClBytF,EAAiB/tF,EAAKmxB,gBACtBq8E,EAAiBxtG,EAAKuM,gBACtBkhG,EAAe5vH,EAAOshB,UAAYurG,EAAA,EAAiB1qG,EAAKyqG,eAE9D5hF,EAAA,EAAYtkC,YAAsBvD,IAAfusH,GACnB1kF,EAAA,EAAYtkC,YAA0BvD,IAAnB+sG,GAEnBlwG,EAAOgjB,OAAS0sG,EAChB1vH,EAAO4Z,WAAas2F,EAAe55C,UACnCt2D,EAAOshB,SAAWsuG,EAClB5vH,EAAOs4B,MAAQA,EACft4B,EAAOyH,UAEP,IAAMooH,EAAgB9nH,EAAIklB,gBAC1B+d,EAAA,EAAYtkC,OAAOmpH,GACnB5sH,KAAK8rH,qBAAgE,IAA1Cc,EAAclwH,IAAI,qBAC7C,IAAI8H,EAASxE,KAAK6sC,iBAAiBxiB,cAAcuiG,GAGjD3pH,EAAA,EAAmBuB,EAAQ,SAACqoH,EAASC,GAAV,OAAsBD,EAAQE,YAAcD,EAAQC,eAC/EvoH,EAASA,EAAOlH,QAAQ2H,WAEjB/B,QAAQ,SAACP,GACVA,EAAM4oB,eACRwc,EAAA,EAAYtkC,YAA0BvD,IAAnBwsH,GACnBnqH,EAAKyqH,YAAYjwH,EAAOyH,OAAQ7B,EAAO+pH,OAW7Cd,EAAQjxH,UAAUqyH,YAAc,SAAS9nD,EAAKviE,EAAO2iB,GAC/C3iB,aAAiBqxE,EAAA,EACnBh0E,KAAKitH,kBAAkB/nD,EAAKviE,GACnBA,aAAiByxE,EAAA,EAC1Bp0E,KAAKktH,iBAAiBhoD,EAAKviE,GAClBA,aAAiBwqH,EAAA,GAC1BntH,KAAK6rH,eAAehE,kBAAkB3iD,EAAKviE,EAAO2iB,IAUtDsmG,EAAQjxH,UAAUsyH,kBAAoB,SAAS/nD,EAAKviE,GAClDolC,EAAA,EAAYvhB,iBAAiB7jB,EAAOqxE,EAAA,GACrBrxE,EAAMkpB,sBACCoqC,EAAA,GACpBj2D,KAAKotH,qBAAqBloD,EAAKviE,IAUnCipH,EAAQjxH,UAAUyyH,qBAAuB,SAASloD,EAAKviE,GACrD,IAAM0hB,EAAS1hB,EAAMkpB,YAErBkc,EAAA,EAAYvhB,iBAAiB7jB,EAAOqxE,EAAA,GACpCjsC,EAAA,EAAYvhB,iBAAiBnC,EAAQ4xC,EAAA,GAErC,IAAMvyD,EAAM2gB,EAAOgpG,cACPntH,IAARwD,GACF1D,KAAKstH,gBACHpoD,EAAKviE,EAAMw/B,aAAcz+B,EAAK2gB,EAAO0H,cAY3C6/F,EAAQjxH,UAAU2yH,gBAAkB,SAASpoD,EAAKtrD,EAASlW,EAAKuD,GAC1DvD,EAAIy0G,WAAW,QACjBz0G,EAAMvG,OAAOoiE,SAASI,SAAYj8D,GAEpC,IAAM6pH,EAAU,IAAIC,IAAI9pH,GAClB+pH,GAAgBxiG,aAAe,GACrC,GAAIsiG,EAAQG,aACV,KAAAl+G,EAAsB+9G,EAAQG,aAA9Bj+G,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAA4C,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAjV,OAAA,MAAAwV,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAhT,MAAA,IAAjCsvB,EAAiCnc,EAC1C09G,EAAavhG,EAAQ,IAAMA,EAAQ,IAGvC,IAAK,IAAMpiB,KAAO7C,EAAQ,CACxB,IAAMrK,EAAQqK,EAAO6C,GAEP,OAAVlN,QAA4BsD,IAAVtD,IACpB6wH,EAAa3jH,GAAOlN,UAGjB6wH,EAAA,cACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,QAEP,IAAM1wH,GACJ4wH,QAAS/B,EAAQgC,gBAAgBL,EAAQxrB,OAASwrB,EAAQttD,UAC1D4tD,YAAa,WAAY5mH,EAASA,EAAA,OAAmB,YACrDzC,OAAQyC,EAAA,OAAiBoP,MAAM,KAC/Bo3G,aAAcA,EACd1lG,WAAY9gB,EAAA,WACZvJ,KAAM,MACNkc,QAASA,EACTouG,QAAS/gH,EAAA,QACT6mH,eAAgB9tH,KAAK8rH,mBAEvB5mD,EAAIzqE,KAAKsC,IASX6uH,EAAQgC,gBAAkB,SAASlqH,GACjC,IAAM2lE,EAAIr4C,SAASC,cAAc,KAEjC,OADAo4C,EAAE0kD,KAAOC,UAAUtqH,GACZgyG,UAAUrsC,EAAE0kD,OASrBnC,EAAQjxH,UAAUuyH,iBAAmB,SAAShoD,EAAKviE,GACjDolC,EAAA,EAAYvhB,iBAAiB7jB,EAAOyxE,EAAA,GACpC,IAAM/vD,EAAS1hB,EAAMkpB,YACjBxH,aAAkBtc,EAAA,EACpB/H,KAAKiuH,qBAAqB/oD,EAAKviE,GACtB0hB,aAAkB4qD,EAAA,GAC3BjvE,KAAKkuH,oBAAoBhpD,EAAKviE,IAUlCipH,EAAQjxH,UAAUszH,qBAAuB,SAAS/oD,EAAKviE,GACrDolC,EAAA,EAAYvhB,iBAAiB7jB,EAAOyxE,EAAA,GACpC,IAAM/vD,EAAS1hB,EAAMkpB,YACrBkc,EAAA,EAAYvhB,iBAAiBnC,EAAQtc,EAAA,GAErC,IAAM4O,EAAa0N,EAAOgsB,gBACpB89E,EAAW9pG,EAAO+pG,cACxBrmF,EAAA,EAAYvhB,iBAAiB2nG,EAAUE,EAAA,GAMvC,IALA,IAAMC,EAAYH,EAASI,eAGrBC,KAEGn0H,EAAI,EAAG+G,EAAKktH,EAAU/zH,OAAQF,EAAI+G,IAAM/G,EAAG,CAClD,IAAMo0H,EAAYN,EAASO,iBAAiBr0H,GAC5Cm0H,EAAS/zH,MACPk0H,WAAYL,EAAUj0H,GACtBu0H,iBAAkBT,EAAS1iG,cAAcpxB,GACrCsc,EAAWk4G,mBAAqB,MACpCC,SAAUC,EAAA,EAAcZ,EAASa,YAAY30H,IAC7C40H,cAAed,EAASe,UAAU70H,GAClC80H,YACEV,EAAUW,KAAOX,EAAUY,KAC3BZ,EAAUa,KAAOb,EAAUc,QAKjC,IAAMzsH,EAAauhB,EAAOmrG,gBACpBC,EAAgB/0H,OAAOs/C,KAAKl3C,GAE5B/F,GACJ4wH,QAAS3tH,KAAK0vH,YAAYrrG,GAC1BvhB,WAAY2sH,EACZE,gBAAiB7sH,EACjB+qH,YAAaxpG,EAAOurG,YACpBjtH,MAAO0hB,EAAOU,WACdypG,SAAUA,EACV5qH,UAAWygB,EAAOwrG,eAClBj2G,QAASjX,EAAMw/B,aACf2tF,gBAAiBzrG,EAAO0rG,qBACxB14G,MAAOgN,EAAOrN,WACdtZ,KAAM,OACNsqH,QAAS3jG,EAAO2rG,cAGlB9qD,EAAIzqE,KAAKsC,IASX6uH,EAAQjxH,UAAUuzH,oBAAsB,SAAShpD,EAAKviE,GACpD,IAAM0hB,EAAS1hB,EAAMkpB,YAErBkc,EAAA,EAAYvhB,iBAAiB7jB,EAAOyxE,EAAA,GACpCrsC,EAAA,EAAYvhB,iBAAiBnC,EAAQ4qD,EAAA,GAErCjvE,KAAKstH,gBACHpoD,EAAKviE,EAAMw/B,aAAc9d,EAAO4rG,UAAU,GAAI5rG,EAAO0H,cAUzD6/F,EAAQjxH,UAAU+0H,YAAc,SAASrrG,GACvC,IAAM6yF,EAAO7yF,EAAO4rG,UAEpB,OADAloF,EAAA,EAAYtkC,OAAOyzG,EAAK38G,OAAS,GAC1BqxH,EAAQgC,gBAAgB1W,EAAK,KAWtC0U,EAAQjxH,UAAUu1H,aAAe,SAASC,EAAWnE,GACnD,IAAM37G,EAAS8/G,EAAU9/G,QAAU,MAC7B3M,EAAS1D,KAAKssC,KAAd,WAA6Bj8B,EAC7B47G,GACJjpE,SACEC,eAAgB,oCAKpB,OAFAva,EAAA,EAAaujF,OACQ/rH,IAAnB8rH,EAA+BA,MAC1BhsH,KAAKK,OAAOsiD,KAAKj/C,EAAKysH,EAAWlE,IAW1CL,EAAQjxH,UAAUy1H,UAAY,SAASrE,EAAKC,GAC1C,IAAMC,OAAgC/rH,IAAnB8rH,EAA+BA,KAE5CtoH,EAAS1D,KAAKssC,KAAd,WAA6By/E,EAA7B,QACN,OAAO/rH,KAAKK,OAAO3D,IAAIgH,EAAKuoH,IAU9BL,EAAQjxH,UAAU01H,aAAe,SAAStE,GACxC,OAAU/rH,KAAKssC,KAAf,WAA8By/E,GAShCH,EAAQjxH,UAAU21H,gBAAkB,SAAStE,GAC3C,IAAMC,OACe/rH,IAAnB8rH,EAA+BA,GAC7B3kH,iBAAiB,GAEf3D,EAAS1D,KAAKssC,KAAd,qBACN,OAAOtsC,KAAKK,OAAO3D,IAAIgH,EAAKuoH,KAa9BL,EAAQ2E,0BAA4B,SAAS9wH,EAAOI,EAAgBD,GAClE,gBAIW8D,GACP,OAAO,IAAIkoH,EAAQloH,EAAKjE,EAAOI,EAAgBD,4DAQrDgsH,EAAQ7vH,OAASkM,QAAQlM,OAAO,aAC9Bg1C,EAAA,EAAmBh1C,OAAOK,QAEb+L,QAAQ,mBAAoByjH,GAC3CA,EAAQ7vH,OAAO0nC,QAAQ,kBAAmBmoF,EAAQ2E,2BAGlD5yH,EAAA,gFCheM6yH,EAAUvoH,QAAQlM,OAAO,sCAC7B00H,EAAA,EAA+Br0H,KAC/Bo4E,EAAA,EAAwBz4E,OAAOK,KAC/BgzE,EAAA,EAAerzE,OAAOK,OAIxBo0H,EAAQ/9E,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,2CAA4Cj3C,EAAQ,SA8BzE80H,EAAQ59E,WAAa,WACnB,OACE7iB,WAAY,8CACZ8iB,OACEtqC,OAAU,gCACVzD,IAAO,6BACPm1B,UAAa,oCACb+Y,YAAe,iCAEjBC,kBAAkB,EAClBC,YAAa,6CAKjBs9E,EAAQr9E,UAAU,yBAA0Bq9E,EAAQ59E,YAcpD49E,EAAQp9E,YAAc,SAAS1mB,EAAQqP,EAAUE,EAAWygB,GAAgB,IAAAn6C,EAAAvC,KAQ1EA,KAAKuI,QAAyB,IAAhBvI,KAAKuI,OAEnBmkB,EAAOO,OACL,kBAAM1qB,EAAKgG,QACXvI,KAAKg6E,oBAAoB38E,KAAK2C,OAOhCA,KAAK8E,IAML9E,KAAKi6B,UAMLj6B,KAAKgzC,YASLhzC,KAAK4zC,OAASlnB,EAMd1sB,KAAKm8B,UAAYJ,EAMjB/7B,KAAKu8B,WAAaN,EAMlBj8B,KAAK68C,gBAAkBH,EA2BvB18C,KAAK0wH,4BAA8BhkG,EAAO0rC,iBAAiB,WACzD,GAAI1b,EAAejgB,SACjB,OAAOigB,EAAejgB,SAASl7B,UAxBH,SAAS3E,GAAO,IAAAsJ,EAAAlG,KAG9CA,KAAKm8B,UAAU,WACb,GAAIv/B,EAAO,CACT,IAAM+zH,EAAYzqH,EAAK0qH,kBAEvBD,EAAUp2H,OAAS,EACnB2L,EAAK22C,gBAAgBpgB,SAAS5M,mBAAmB,SAAChC,GAC5CA,EAASzrB,KAAKiE,WAChB0hC,EAAA,EAAYtkC,OAAoC,IAA7BoqB,EAAStsB,SAAShH,QACrCo2H,EAAUl2H,KAAKozB,QAIpB,IAWsBxwB,KAAK2C,OAWhCA,KAAK8yC,OAAQ,EAOb9yC,KAAK4wH,qBAOL5wH,KAAK6wH,yBAA2B,KAEhCnkG,EAAOO,OACL,kBAAM1qB,EAAKsuH,0BACX,SAACr5E,EAAUzL,GACTxpC,EAAKuwC,OAAQ,EACbvwC,EAAKisB,MAAQiiG,EAAA,EAA+Bh5E,MAAMM,OAatD/3C,KAAKwuB,MAAQiiG,EAAA,EAA+Bh5E,MAAMM,KAElDrrB,EAAOO,OACL,kBAAM1qB,EAAKisB,OACX,SAACgpB,EAAUzL,GACLyL,IAAai5E,EAAA,EAA+Bh5E,MAAMG,sBAClDJ,IAAai5E,EAAA,EAA+Bh5E,MAAMK,qBACpDv1C,EAAKsuH,yBAA2B,MAE9Br5E,IAAai5E,EAAA,EAA+Bh5E,MAAMK,qBACpDv1C,EAAKgG,QAAS,KAKpBmkB,EAAOa,IAAI,WAAYvtB,KAAKm3C,eAAe95C,KAAK2C,QApJlDwwH,EAAQp9E,uEA+JRo9E,EAAQp9E,YAAYz4C,UAAUm2H,YAAc,WAC1C9wH,KAAKwuB,MAAQiiG,EAAA,EAA+Bh5E,MAAMC,sBAUpD84E,EAAQp9E,YAAYz4C,UAAUq/E,oBAAsB,SAASzxE,GAAQ,IAAAvB,EAAAhH,KAC9DuI,IACEvI,KAAK8yC,MAQR9yC,KAAKm8B,UAAU,WACbn1B,EAAKuB,QAAS,EACdvB,EAAK8pH,gBATP9wH,KAAK8wH,gBAmBXN,EAAQp9E,YAAYz4C,UAAUw8C,eAAiB,WAC7Cn3C,KAAK0wH,+BAIPF,EAAQzgG,WAAW,mCAAoCygG,EAAQp9E,aAG/D,IAAA29E,EAAA,6BC5QMlpB,EAAU5/F,QAAQlM,OAAO,oBAC7Bi1H,EAAA,EAAsBj1H,OAAOK,KAC7Bq0H,EAAA,EAA+Br0H,KAC/B20H,EAAuC30H,KACvCu0E,EAAA,EAA6B50E,OAAOK,KACpC8oF,EAAA,EAAmBnpF,OAAOK,KAC1B60H,EAAA,EAAwBl1H,OAAOK,OAIjCuB,EAAA,gECFMuzH,UAAU,SAASxtH,EAAKytH,EAAYC,EACxCC,EAAoBrS,EAAasS,GACjC,IAAM7J,EAAgB,IAAIC,EAAA,EACpB6J,GACJC,QACE9tH,MACA+tH,QAFM,SAEErlB,EAAOslB,GAEb,OADAA,EAAShuH,IAAMguH,EAAShuH,IAAImkB,QAAQ,SAAUukF,GACvCslB,GAETt/F,UANM,SAMIu/F,GAER,IAAIC,EACCD,EAQL,YAPmBzxH,IAAfixH,IACFS,GACEl0H,KAAM,oBACNuf,SAAU20G,EAAkB30G,SAAS7X,OAAO+rH,KAIzC1J,EAAcl3E,aAAaqhF,GAChCzzG,kBAAmBizG,EACnBlzG,eAAgBmzG,MAMtBtrB,eAAgB,aAChBO,eAAgBR,WAAWI,WAAWC,YAIlC/9F,EAAUsgC,EAAA,KAAiBs2E,OAC3B6S,EAAgBnpF,EAAA,KAAiB4oF,OAWvC,OATIlpH,EAAQopH,SAEV9oF,EAAA,EAAampF,EAAezpH,EAAQopH,eAC7BppH,EAAQopH,QAGjB9oF,EAAA,EAAa6oF,EAAmBnpH,GAChCsgC,EAAA,EAAa6oF,EAAkBC,OAAQK,GAEhC,IAAI/rB,WAAWyrB,MAOxBL,EAAQn1H,OAASkM,QAAQlM,OAAO,yCAEjBa,MACb,oCACAs0H,GA2CF,IAAAY,EAAA,mCCtGMC,EAAU,SAAS/S,GACvB,IAAM52G,EAAU42G,MAEVgT,EAAmBhmD,EAAA,EAAWimD,EAAA,GAC9Bxe,EAAmBrrG,EAAQqrG,iBAiC3B8d,GACJC,QACE9tH,IAAK,4FACL+tH,QAAS,SAACrlB,EAAOslB,GASf,OARAA,EAAShuH,IAAMguH,EAAShuH,IAAImkB,QAAQ,SAAUukF,QACxBlsG,IAAlBkI,EAAQyxB,QACV63F,EAAShuH,KAAT,UAA0B0E,EAAQyxB,YAEZ35B,IAApBkI,EAAQ8pH,UACVR,EAAShuH,KAAT,YAA4B0E,EAAQ8pH,cAGVhyH,IAApBkI,EAAQqpH,QACdrpH,EAAQqpH,QAAQrlB,EAAOslB,GAAYA,GAEvCt/F,UAAW,SAAiDu/F,GA4B1D,OA3BiBA,EAAeQ,QAAQrtH,IAAI,SAA+C1J,GACzF,IAAM+jD,EAAQ/jD,EAAO+jD,MAGfpsB,EAAQ,IAAIs0B,EAAA,GAAalI,EAAMl/B,EAAGk/B,EAAMn6C,IAC1CsuD,EAhDM,SAACA,GACjB,IACMrS,EADQ,kCACMspB,KAAKjX,GACzB,OAAc,OAAVrS,GAEAO,WAAWP,EAAM,IACjBO,WAAWP,EAAM,IACjBO,WAAWP,EAAM,IACjBO,WAAWP,EAAM,KAGZ,KAqCQmxE,CAAUjzE,EAAMkzE,oBACFnyH,IAArBuzG,IACF1gF,EAAMX,UAAU4/F,EAAkBve,GACrB,OAATngD,IACFA,EAAO0Y,EAAA,EAAuB1Y,EAAM0+D,EAAkBve,KAI1Dt0D,EAAA,SAAoBpsB,EACpBosB,EAAA,KAAgBmU,EAGhB,IAAM5tD,EAAQy5C,EAAMz5C,MACpBy5C,EAAA,cA9Ce,SAAAz5C,GAAA,OAASA,EAAMmiB,QAAQ,aAAc,IA8C3ByqG,CAAe5sH,GACxCy5C,EAAA,aA7CY,SAACz5C,GACnB,IACMu7C,EADQ,iBACMspB,KAAK7kE,GACzB,OAAc,OAAVu7C,EACKA,EAAM,GAENv7C,EAuCqB6sH,CAAY7sH,GAEpC,IAAMmR,EAAU,IAAIuwC,EAAA,EAAUjI,GAG9B,OAFAtoC,EAAQshC,MAAMgH,EAAMtK,WAEbh+B,MAQbkvF,eAAgB,aAChBO,eAAgBR,WAAWI,WAAWC,YAIlCqsB,EAAY9pF,EAAA,KAAiBtgC,EAAQA,aACrCypH,EAAgBnpF,EAAA,KAAiBtgC,EAAQypH,mBAW/C,OATIW,EAAUhB,SAEZ9oF,EAAA,EAAampF,EAAeW,EAAUhB,eAC/BgB,EAAUhB,QAGnB9oF,EAAA,EAAa6oF,EAAmBiB,GAChC9pF,EAAA,EAAa6oF,EAAkBC,OAAQK,GAEhC,IAAI/rB,WAAWyrB,KAOxBQ,EAAQh2H,OAASkM,QAAQlM,OAAO,0CAEjBa,MACb,qCACAm1H,GAyBF,IAAAU,EAAA,ECnJM5qB,EAAU5/F,QAAQlM,OAAO,oBAC7B22H,EAAA,EAA0B32H,OAAOK,KACjC01H,EAAkC/1H,OAAOK,KACzCq2H,EAAyC12H,OAAOK,OAIlDuB,EAAA,6ECFMg1H,EAAU1qH,QAAQlM,OAAO,0BAC7B62H,EAAA,EAA6Bx2H,KAC7BwuC,EAAA,EAAsB7uC,OAAOK,OAI/Bu2H,EAAQlgF,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,oCAAqCj3C,EAAQ,SAmBlEi3H,EAAQppE,WAAa,WACnB,OACEx5B,WAAY,sCACZ8iB,OACEh8B,QAAW,2BAEbo8B,kBAAkB,EAClBC,YAAa,sCAKjBy/E,EAAQx/E,UAAU,kBAChBw/E,EAAQppE,YAYVopE,EAAQv/E,YAAc,SAAS1mB,EAAQ0a,GAAmB,IAAA7kC,EAAAvC,KAMxDA,KAAK6W,QAML7W,KAAK4zC,OAASlnB,EAMd1sB,KAAKgoG,eAAiB5gE,EAMtBpnC,KAAKmY,WAAQjY,EAMbF,KAAK0F,WAAQxF,EAMbF,KAAKue,aAAUre,EAEfwsB,EAAOO,OACL,kBAAM1qB,EAAK4V,OACXnY,KAAK6yH,gBAAgBx1H,KAAK2C,OAO5BA,KAAK25D,wBAML35D,KAAKtC,KAELgvB,EAAOO,OACL,kBAAM1qB,EAAKsU,SACX7W,KAAK8yH,kBAAkBz1H,KAAK2C,QAzDhC2yH,EAAQv/E,mDAqERu/E,EAAQv/E,YAAYz4C,UAAUm4H,kBAAoB,SAChD32E,EAAYylD,GAEZ,IAAM5nD,EAAOh6C,KAAK25D,qBAWlB,GATIioC,IACF5nD,EAAK92C,QAAQirC,EAAA,GACb6L,EAAKz/C,OAAS,EACdyF,KAAKtC,UAAOwC,EACZF,KAAKmY,WAAQjY,EACbF,KAAKue,aAAUre,EACfF,KAAK0F,WAAQxF,GAGXi8C,EAAY,EAEZsiD,EAAA,EAA4BpgG,MAC5BogG,EAAA,EAA4BngG,MAC5BmgG,EAAA,EAA4B//F,KAC5B+/F,EAAA,EAA4B9/F,WAC5B8/F,EAAA,EAA4B7/F,QAC5B6/F,EAAA,EAA4B3/F,aAC5B2/F,EAAA,EAA4B1/F,KAC5B0/F,EAAA,EAA4Bz/F,QAC5BkE,QAAQ,SAAS6vH,GACjB/4E,EAAKv/C,KACH0zC,EAAA,EACEgO,EADF,UAEY42E,EACV/yH,KAAK40C,qBACL50C,QAGHA,MAEH,IAAMqa,EAAW8hC,EAAW/gC,cAC5B2sB,EAAA,EAAYtkC,OAAO4W,EAAU,8BAE7B2/B,EAAKv/C,KACH0zC,EAAA,EACE9zB,EACA,SACAra,KAAKsmB,sBACLtmB,OAIJA,KAAKtC,KAAOsC,KAAKgoG,eAAe1wF,QAAQ6kC,GACxCn8C,KAAKmY,MAAQnY,KAAKgoG,eAAeprF,iBAAiBu/B,GAClDn8C,KAAKue,QAAUve,KAAKgoG,eAAetvF,WAAWyjC,KASlDw2E,EAAQv/E,YAAYz4C,UAAUk4H,gBAAkB,SAC9CG,GACIhzH,KAAK6W,SAAWm8G,IACGhzH,KAAK6W,QAAQna,IAAI+hG,EAAA,EAA4BngG,SAC7C00H,GACnBhzH,KAAK6W,QAAQjU,IAAI67F,EAAA,EAA4BngG,MAAO00H,KAW1DL,EAAQv/E,YAAYz4C,UAAUs4H,YAAc,SAASr2H,GACnD,OAAOmrC,EAAA,EAAYruB,aAAa1Z,KAAKkzH,gBAAgBz0B,EAAA,EAA4BpgG,MAAOzB,KAS1F+1H,EAAQv/E,YAAYz4C,UAAUw4H,WAAa,SAASv2H,GAClD,OAAOmrC,EAAA,EAAYlrB,aAAa7c,KAAKkzH,gBAAgBz0B,EAAA,EAA4B//F,KAAM9B,KASzF+1H,EAAQv/E,YAAYz4C,UAAUy4H,gBAAkB,SAASx2H,GACvD,OAAOmrC,EAAA,EAAYhrB,cAAc/c,KAAKkzH,gBAAgBz0B,EAAA,EAA4B9/F,WAAY/B,KAQhG+1H,EAAQv/E,YAAYz4C,UAAU04H,cAAgB,SAASz2H,GACrD,OAAOmrC,EAAA,EAAYruB,aAAa1Z,KAAKkzH,gBAAgBz0B,EAAA,EAA4B7/F,QAAShC,KAU5F+1H,EAAQv/E,YAAYz4C,UAAU24H,kBAAoB,SAAS12H,GACzD,OAAOmrC,EAAA,EAAYhrB,cAAc/c,KAAKkzH,gBAAgBz0B,EAAA,EAA4B3/F,aAAclC,KASlG+1H,EAAQv/E,YAAYz4C,UAAU44H,WAAa,SAAS32H,GAClD,OAAOmrC,EAAA,EAAYruB,aAAa1Z,KAAKkzH,gBAAgBz0B,EAAA,EAA4B1/F,KAAMnC,KASzF+1H,EAAQv/E,YAAYz4C,UAAU64H,aAAe,SAAS52H,GACpD,OAAOmrC,EAAA,EAAYruB,aAAa1Z,KAAKkzH,gBAAgBz0B,EAAA,EAA4Bz/F,OAAQpC,KAW3F+1H,EAAQv/E,YAAYz4C,UAAUu4H,gBAAkB,SAASppH,EAAKlN,GAI5D,YAHcsD,IAAVtD,GACFoD,KAAK6W,QAAQjU,IAAIkH,EAAKlN,GAEqBoD,KAAK6W,QAAQna,IAAIoN,IAOhE6oH,EAAQv/E,YAAYz4C,UAAUi6C,qBAAuB,WACnD,IAAM/9B,EAAU7W,KAAK6W,QAEhBA,GAIL7W,KAAKgoG,eAAepxF,SAASC,GAAS,IAOxC87G,EAAQv/E,YAAYz4C,UAAU2rB,sBAAwB,WACpDyhB,EAAA,EAAYtkC,OAAOzD,KAAK6W,SACxB7W,KAAKue,QAAUve,KAAKgoG,eAAetvF,WAAW1Y,KAAK6W,SAE/B7W,KAAKgoG,eAAe9vF,uBAAuBlY,KAAK6W,UAElE7W,KAAK40C,uBAGP50C,KAAK4zC,OAAOqF,UAId05E,EAAQ5iG,WAAW,4BACjB4iG,EAAQv/E,aAGV,IAAAqgF,EAAA,kJCzRMC,UAAUzrH,QAAQlM,OAAO,2BAC7B03H,EAAgCr3H,KAChCu3H,EAAA,EAAmCv3H,KACnC05F,EAAA,EAAqB15F,KACrBknE,EAAA,EAAkBlnE,KAClBwuC,EAAA,EAAsB7uC,OAAOK,KAC7B87E,EAAA,EAAwBn8E,OAAOK,QAIjCs3H,EAAQjhF,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,mCAAoCj3C,EAAQ,SAsBjEg4H,EAAQ9gF,WAAa,WACnB,OACE7iB,WAAY,qCACZ8iB,OACEtqC,OAAU,wBACVzD,IAAO,qBACPmT,YAAe,+BAEjBg7B,kBAAkB,EAClBC,YAAa,qCAKjBwgF,EAAQvgF,UAAU,iBAChBugF,EAAQ9gF,YAiBV8gF,EAAQtgF,YAAc,SAAS1mB,EAAQqP,EAAUl8B,EAC/CunC,EAAmB2gE,EAAcr0D,GAAqB,IAAAnxC,EAAAvC,KAMtDA,KAAK8E,IAML9E,KAAKuI,YAEerI,IAAhBF,KAAKuI,SACPvI,KAAKuI,QAAS,GAOhBvI,KAAKs5E,YAAa,EAMlBt5E,KAAKu5E,iBAAmB,IAAIC,EAAA,EAAqBx5E,KAAM,cAMvDA,KAAK00C,iBAAkB,EAMvB10C,KAAK4zH,kBAAoB,KAMzB5zH,KAAK20C,sBAAwB,IAAI6kC,EAAA,EAAqBx5E,KAAM,mBAM5DA,KAAK4zC,OAASlnB,EAMd1sB,KAAK6zC,SAAW9X,EAMhB/7B,KAAKgoG,eAAiB5gE,EAMtBpnC,KAAKid,SAAW8qF,EAMhB/nG,KAAKk0C,qBAAuBR,EAM5B1zC,KAAK6zH,gBAAkB,KAMvB7zH,KAAK05E,iBAAmB,IAAI1uC,EAAA,EAO5BhrC,KAAK80C,cAAgB,IAAI9J,EAAA,EAMzBhrC,KAAKg1C,QAAU,IAAI2kC,EAAA,GACjB18D,SAAUjd,KAAK05E,iBACfriE,MAAO+vB,EAAkBlwB,gBAAe,KAE1ClX,KAAK80C,cAAcr6C,KAAKuF,KAAKg1C,SAM7Bh1C,KAAKk1C,MAAQ,KAMbl1C,KAAKi1C,mBAAqB,IAAIukC,EAAA,EAAqBx5E,KAAKg1C,QAAS,UAMjEh1C,KAAKs1C,WAAa,IAAIykC,EAAA,GACpB98D,SAAUjd,KAAK05E,iBACfriE,MAAO,IAAIwiE,EAAA,GACThhE,KAAM,IAAIkuB,EAAA,GACRluB,KAAM,IACNyF,KAAM,0BACNlF,KAAM,IAAI0gE,EAAA,GACR3hE,MAAO,kBAKfnY,KAAK80C,cAAcr6C,KAAKuF,KAAKs1C,YAM7Bt1C,KAAKu1C,QAAU,IAAIqkC,EAAA,GACjB38D,SAAUjd,KAAK05E,iBACfriE,MAAO,IAAIwiE,EAAA,GACThhE,KAAM,IAAIkuB,EAAA,GACRluB,KAAM,IACNyF,KAAM,0BACNlF,KAAM,IAAI0gE,EAAA,GACR3hE,MAAO,kBAKfnY,KAAK80C,cAAcr6C,KAAKuF,KAAKu1C,SAE7Bv1C,KAAKi3C,0BAMLj3C,KAAKw1C,mBAAqB,IAAIgkC,EAAA,EAAqBx5E,KAAKu1C,QAAS,UAMjEv1C,KAAKy1C,sBAAwB,IAAI+jC,EAAA,EAAqBx5E,KAAKs1C,WAAY,UAMvEt1C,KAAK2jC,iBASL3jC,KAAK8zH,0BAA2B,EAEhCpnG,EAAOO,OACL,kBAAM1qB,EAAKgG,QACXvI,KAAKg6E,oBAAoB38E,KAAK2C,OAGhC0sB,EAAOO,OACL,kBAAM1qB,EAAK+2E,YACX,SAAC/wE,GACKA,IACFhG,EAAKsxH,gBAAkB,QAK7BnnG,EAAOO,OACL,kBAAM1qB,EAAKsxH,iBACX,SAAC13E,EAAYylD,GACXr/F,EAAKm3E,iBAAiB70D,QAClB+8E,IACFr/F,EAAKylG,eAAepxF,SAASgrF,GAC7Br/F,EAAK05C,2BAEHE,GACF55C,EAAKylG,eAAepxF,SAASulC,GAAY,GACzC55C,EAAKm3E,iBAAiBj/E,KAAK0hD,GAC3B55C,EAAKw5C,wBACDx5C,EAAKuxH,2BACPvxH,EAAKylG,eAAenpF,gBAAgBs9B,EAAY55C,EAAKuC,KACrDvC,EAAKuxH,0BAA2B,IAEzBvxH,EAAK2yC,QACd3yC,EAAKuC,IAAI6vB,cAAcpyB,EAAK2yC,OAC5B3yC,EAAK2yC,MAAQ,QAKnBxoB,EAAOO,OACL,kBAAM1qB,EAAKmyC,iBACX10C,KAAKu3C,6BAA6Bl6C,KAAK2C,OAOzCA,KAAK+zH,aAAet1B,EAAA,EAA4B//F,KAKhDsB,KAAKq8B,gBAAkBx8B,GA5OzB6zH,EAAQtgF,oHAoPRsgF,EAAQtgF,YAAYz4C,UAAUs8C,wBAA0B,WACtDj3C,KAAK80C,cAAc5xC,QAAQ,SAAC8+B,GAC1BA,EAAYrhB,WAAU,GACtBs6D,EAAA,EAAiBj5C,YAAYA,MASjC0xF,EAAQtgF,YAAYz4C,UAAUohD,sBAAwB,WAAW,IAAA71C,EAAAlG,KAC/DA,KAAK80C,cAAc5xC,QAAQ,SAAC8+B,GAC1B97B,EAAKpB,IAAI6uB,eAAeqO,MAS5B0xF,EAAQtgF,YAAYz4C,UAAUshD,wBAA0B,WAAW,IAAAj1C,EAAAhH,KACjEA,KAAK80C,cAAc5xC,QAAQ,SAAC8+B,GAC1Bh7B,EAAKlC,IAAI4uB,kBAAkBsO,MAW/B0xF,EAAQtgF,YAAYz4C,UAAUq/E,oBAAsB,SAASzxE,GAE3D,IAAMyxC,EAAOh6C,KAAK2jC,cACZqwF,GAAW,QAASljF,EAAA,EAAc9wC,OAAOuH,KAAK,KAC9C2yC,GAAY,SAAUpJ,EAAA,EAAc9wC,OAAOuH,KAAK,KAChD4yC,EAAUn6C,KAAKk0C,qBAEjB3rC,GAGFyxC,EAAKv/C,KACH0zC,EAAA,EAAgBnuC,KAAKid,SAAU,MAAOjd,KAAKu6D,mBAAoBv6D,MAC/DmuC,EAAA,EAAgBnuC,KAAKid,SAAU,SAAUjd,KAAKw6D,sBAAuBx6D,OAGvEg6C,EAAKv/C,KAAK0zC,EAAA,EAAgBnuC,KAAKs1C,WAC7B,eACAt1C,KAAKq6C,oBAAqBr6C,OAE5Bg6C,EAAKv/C,KAAK0zC,EAAA,EAAgBnuC,KAAKu1C,QAAS,YAAav1C,KAAKs6C,iBAAkBt6C,OAE5Em6C,EAAQI,aAAay5E,EAASh0H,KAAKu5E,kBAAkB,GACrDp/B,EAAQI,aAAay5E,EAASh0H,KAAK20C,uBAAuB,GAE1DwF,EAAQI,aAAaL,EAAUl6C,KAAKu5E,kBAAkB,GACtDp/B,EAAQI,aAAaL,EAAUl6C,KAAKi1C,oBAAoB,GACxDkF,EAAQI,aAAaL,EAAUl6C,KAAKy1C,uBAAuB,GAC3D0E,EAAQI,aAAaL,EAAUl6C,KAAKw1C,oBAAoB,GAExDx1C,KAAK00C,iBAAkB,EACvB10C,KAAKg1C,QAAQr0B,WAAU,KAIvBq5B,EAAK92C,QAAQirC,EAAA,GACb6L,EAAKz/C,OAAS,EAEd4/C,EAAQK,eAAew5E,EAASh0H,KAAKu5E,kBACrCp/B,EAAQK,eAAew5E,EAASh0H,KAAK20C,uBAErCwF,EAAQK,eAAeN,EAAUl6C,KAAKu5E,kBACtCp/B,EAAQK,eAAeN,EAAUl6C,KAAKi1C,oBACtCkF,EAAQK,eAAeN,EAAUl6C,KAAKy1C,uBACtC0E,EAAQK,eAAeN,EAAUl6C,KAAKw1C,oBAEtCx1C,KAAKs5E,YAAa,EAClBt5E,KAAKg1C,QAAQr0B,WAAU,GACvB3gB,KAAK00C,iBAAkB,EACvB10C,KAAK6zH,gBAAkB,KAEnB7zH,KAAKk1C,QACPl1C,KAAK8E,IAAI6vB,cAAc30B,KAAKk1C,OAC5Bl1C,KAAKk1C,MAAQ,QAcnBw+E,EAAQtgF,YAAYz4C,UAAUs5H,sBAAwB,SAASp9G,GAC7D7W,KAAK8zH,0BAA2B,EAChC9zH,KAAK6zH,gBAAkBh9G,EACvB7W,KAAKs5E,YAAa,GAQpBo6C,EAAQtgF,YAAYz4C,UAAUu5H,iBAAmB,WAC/C,OAAOl0H,KAAKid,SAASiN,YAOvBwpG,EAAQtgF,YAAYz4C,UAAUw5H,cAAgB,WAC5C,IACM1wG,EADiBzjB,KAAKq8B,gBACD52B,UACzB,kDACE2zC,QAAQ31B,IACVzjB,KAAKid,SAAS4H,SASlB6uG,EAAQtgF,YAAYz4C,UAAUiqB,cAAgB,SAAS/N,GACrD,IACM4M,EADiBzjB,KAAKq8B,gBACD52B,UACzB,sDACE2zC,QAAQ31B,IACVzjB,KAAKid,SAASwxB,OAAO53B,IASzB68G,EAAQtgF,YAAYz4C,UAAU4/D,mBAAqB,SAASh0C,GAAK,IAAAgY,EAAAv+B,KAE/DA,KAAK6zC,SAAS,WACZtV,EAAKs1F,gBAA6CttG,EAAI2F,QACtDqS,EAAK+6C,YAAa,EAClB/6C,EAAKqV,OAAOqF,YAShBy6E,EAAQtgF,YAAYz4C,UAAU6/D,sBAAwB,SAASj0C,GAC7DvmB,KAAK6zH,gBAAkB,MASzBH,EAAQtgF,YAAYz4C,UAAU48C,6BAA+B,SAC3DhvC,GAEA,IAAMkyC,EAASz6C,KAAK8E,IAAI41C,cACxB3S,EAAA,EAAY4S,cAAcF,GAEtBlyC,GACF4lC,EAAA,EAAgBnuC,KAAK8E,IAAK,QACxB9E,KAAK46C,gBAAiB56C,MAExBmuC,EAAA,EAAgBsM,EAAQ,cACtBz6C,KAAK66C,sBAAuB76C,MAE9BmuC,EAAA,EAAgBsM,EAAQ,aACtBz6C,KAAKo0H,qBAAsBp0H,MAE7BmuC,EAAA,EAAgBsM,EAAQ,YACtBz6C,KAAKq0H,mBAAoBr0H,MAE3BmuC,EAAA,EAAgBsM,EAAQ,WACtBz6C,KAAKq0H,mBAAoBr0H,QAG3BmuC,EAAA,EAAkBnuC,KAAK8E,IAAK,QAC1B9E,KAAK46C,gBAAiB56C,MAExBmuC,EAAA,EAAkBsM,EAAQ,cACxBz6C,KAAK66C,sBAAuB76C,MAE9BmuC,EAAA,EAAkBsM,EAAQ,aACxBz6C,KAAKo0H,qBAAsBp0H,MAE7BmuC,EAAA,EAAkBsM,EAAQ,YACxBz6C,KAAKq0H,mBAAoBr0H,MAE3BmuC,EAAA,EAAkBsM,EAAQ,WACxBz6C,KAAKq0H,mBAAoBr0H,QAS/B0zH,EAAQtgF,YAAYz4C,UAAUigD,gBAAkB,SAASr0B,GAAK,IAAAmY,EAAA1+B,KAEtD86C,EAAQv0B,EAAIu0B,MAEdjkC,EAAU7W,KAAK8E,IAAIi2C,sBACrBD,EACA,SAACjkC,GACC,IAAImkC,GAAM,EAIV,OAHI/3C,EAAA,EAAiBy7B,EAAKzhB,SAASiN,WAAYrT,KAC7CmkC,EAAMnkC,GAEDmkC,IAGPE,aAAc,KAIlBrkC,EAAUA,GAAoB,QAGd7W,KAAK6zH,kBAIrB7zH,KAAK6zH,gBAAkBh9G,EAEvB7W,KAAK4zC,OAAOqF,WAQdy6E,EAAQtgF,YAAYz4C,UAAUy5H,qBAAuB,SAAS7tG,GAAK,IAAA4Y,EAAAn/B,KACjEA,KAAK4zH,kBAAoBU,WAAW,WAClCn1F,EAAK0b,sBAAsBt0B,IAC1B,MAQLmtG,EAAQtgF,YAAYz4C,UAAU05H,mBAAqB,SAAS9tG,GAC1DguG,aAAav0H,KAAK4zH,oBAQpBF,EAAQtgF,YAAYz4C,UAAUkgD,sBAAwB,SAASt0B,GAAK,IAAAuZ,EAAA9/B,KAC5DH,EAAiBG,KAAKq8B,gBACtBye,EAAQ96C,KAAK8E,IAAIy2C,cAAch1B,GAC/B+M,EAAatzB,KAAK8E,IAAI02C,uBAAuBV,GAE/CjkC,EAAU7W,KAAK8E,IAAIi2C,sBACrBD,EACA,SAACjkC,GACC,IAAImkC,GAAM,EAIV,OAHI/3C,EAAA,EAAiB68B,EAAK7iB,SAASiN,WAAYrT,KAC7CmkC,EAAMnkC,GAEDmkC,IAGPE,aAAc,IAOlB,GAHArkC,EAAUA,GAAoB,KAGjB,CACX,IAAIu+B,KAEE13C,EAAOsC,KAAKgoG,eAAe1wF,QAAQT,GACrCnZ,GAAQw8E,EAAA,EAAiBt8E,QACzBF,GAAQw8E,EAAA,EAAiBr8E,aACzBH,GAAQw8E,EAAA,EAAiBh8E,SACzBR,GAAQw8E,EAAA,EAAiB/7E,YAC3Bi3C,EAAUA,EAAQj5B,SAChBk5B,IAAK,eACL3vC,MAAO7F,EAAe4F,UAAU,QAChCrJ,KAAM,SAENi5C,IAAK,qBACL3vC,MAAO7F,EAAe4F,UAAU,UAChCrJ,KAAM,aAIVg5C,EAAUA,EAAQj5B,SAChBk5B,IAAK,gBACL3vC,MAAO7F,EAAe4F,UAAU,UAChCrJ,KAAM,YAGR4D,KAAKk1C,MAAQ,IAAIomC,EAAA,GACflmC,YAGFjH,EAAA,EAAgBnuC,KAAKk1C,MAAO,cAC1Bl1C,KAAKo6C,uBAAwBp6C,MAC/BA,KAAK8E,IAAI4vB,WAAW10B,KAAKk1C,OAEzBl1C,KAAKk1C,MAAMwG,KAAKpoB,GAEhB/M,EAAIo1B,iBACJp1B,EAAIq1B,kBAIF/kC,IAAY7W,KAAK6zH,kBAIrB7zH,KAAKg1C,QAAQr0B,WAAU,GAEvB3gB,KAAK6zH,gBAAkBh9G,EAEvB7W,KAAK4zC,OAAOqF,WAQdy6E,EAAQtgF,YAAYz4C,UAAUy/C,uBAAyB,SAAS7zB,GAC9D,IAAMg2B,EAASh2B,EAAI5C,OAAO44B,OAE1B,OAAQA,GACN,IAAK,SACHxU,EAAA,EAAYtkC,OACVzD,KAAK6zH,gBAAiB,qCACxB7zH,KAAK4kB,cAAc5kB,KAAK6zH,iBACxB7zH,KAAK4zC,OAAOqF,SACZ,MACF,IAAK,OACHj5C,KAAKs1C,WAAW30B,WAAU,GAC1B3gB,KAAK4zC,OAAOqF,SACZ,MACF,IAAK,SACHj5C,KAAKu1C,QAAQ50B,WAAU,GACvB3gB,KAAK4zC,OAAOqF,SACZ,MACF,QAEEj1C,QAAQmyB,IAAR,oBAAgComB,KAUtCm3E,EAAQtgF,YAAYz4C,UAAU0/C,oBAAsB,SAAS9zB,GAC3DvmB,KAAKs1C,WAAW30B,WAAU,GAC1B3gB,KAAK4zC,OAAOqF,UAQdy6E,EAAQtgF,YAAYz4C,UAAU2/C,iBAAmB,SAAS/zB,GACxDvmB,KAAKu1C,QAAQ50B,WAAU,GACvB3gB,KAAK4zC,OAAOqF,UAIdy6E,EAAQ3jG,WAAW,2BACjB2jG,EAAQtgF,aAGV,IAAAohF,EAAA,ECvuBM3sB,EAAU5/F,QAAQlM,OAAO,oBAC7By4H,EAA+Bp4H,KAC/Bq3H,EAAgCr3H,OAIlCuB,EAAA,oMCHM82H,GACJC,SAAAC,EAAA,EACAv1G,OAAAu1G,EAAA,EACAC,WAAAC,EAAA,EACAC,SAAAD,EAAA,EACAE,YAAAC,EAAA,EACAvmC,MAAAwmC,EAAA,EACA1lD,OAAA0lD,EAAA,EACA/tC,UAAA+tC,EAAA,EACAC,KAAAC,EAAA,EACAl7G,KAAAk7G,EAAA,GA0mBFC,EAljBgB,SAAShtH,GAKvB,IAAMitH,OAA0Bn1H,IAAlBkI,EAAQitH,OAAsBjtH,EAAQitH,MAM9CC,EAASD,GAASE,IAAK,EAAGC,MAAO,EAAGC,OAAQ,EAAGC,KAAM,IACxDH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAMnCC,OAA0Cz1H,IAA1BkI,EAAQutH,cAC5BvtH,EAAQutH,cAAgB,aAMpBC,OAAsC11H,IAAxBkI,EAAQwtH,YAC1BxtH,EAAQwtH,YAAc,aAKlBC,EAAoBztH,EAAQytH,kBAK5BC,EAAqB1tH,EAAQ0tH,mBAK7BC,EAAgBr7H,OAAOs/C,KAAK87E,GAAoBv7H,OAKhDy7H,EAAiBvB,EAAGC,SAAS,SAAAv4H,GAAA,OAAK05H,EAAkB15H,KAAIu5H,KAKxDO,EAAe7tH,EAAQ6tH,aAKvBC,EAAY9tH,EAAQ8tH,UAKpBC,OAA0Cj2H,IAA1BkI,EAAQ+tH,cAC5B/tH,EAAQ+tH,eAAiB,GAKrBC,EAAOhuH,EAAQguH,SAKfC,EAAcD,EAAKE,OAAS,WAK5BC,EAAcH,EAAKI,OAAS,YAK5BC,GAMJC,OANgB,SAMT91B,EAAM+1B,GACX,OAAUn1E,WAAWo/C,EAAKg2B,YAAY,IAAtC,IAA6CD,GAO/CE,OAdgB,SAcTC,EAAKH,GACV,OAAUj8G,KAAK2b,MAAMygG,GAArB,MAOFC,MAtBgB,SAsBVn2B,EAAM+1B,GACV,OAAO/1B,GAOTo2B,MA9BgB,SA8BVF,EAAKH,GACT,OAAOG,SAIe52H,IAAtBkI,EAAQquH,WACV/tF,EAAA,EAAa+tF,EAAWruH,EAAQquH,WAMlC,IAAMQ,OAAoC/2H,IAAvBkI,EAAQ6uH,YAA2B7uH,EAAQ6uH,WAM1DC,SAKAlyH,SAKAib,SAKEk3G,EAAgB/uH,EAAQ+uH,cAE1Bv1G,SAKAipC,SAKAryC,SAKA4+G,SAKAC,SAKAC,SAGEC,EAAU,SAAVA,EAAmBC,GACvBA,EAAUC,KAAK,SAAS19H,GAEtB,GADA06H,EAAGllD,OAAOvvE,MAAMknF,UAAU,OAAOz4C,cACpBvuC,IAATnG,EAAJ,CAIAye,EAAQkC,KAAKwmE,IAAIlhF,KAAK03H,YAAcpC,EAAOE,MAAQF,EAAOI,KAAM,GAChE1wH,EAAIyvH,EAAGM,cAAcrhH,OAAO,EAAG8E,IAE/BqyC,EAASnwC,KAAKwmE,IAAIlhF,KAAK23H,aAAerC,EAAOC,IAAMD,EAAOG,OAAQ,GAClEx1G,EAAIw0G,EAAGM,cAAcrhH,OAAOm3C,EAAQ,IAEpC,IAAMyrE,EAAQ7B,EAAGG,WAAW5vH,GACtBwxH,EAAQ/B,EAAGK,SAAS70G,GAEtBi1G,SACkB,IAAlBa,IACFb,EAAOT,EAAGS,OACPlwH,EAAE,SAAA7I,GAAA,OAAK6I,EAAE6wH,EAAkB15H,MAC3By7H,GAAG/sE,GACHgtE,GAAG,SAAC17H,GACH,IAAM27H,EAAiBp9H,OAAOs/C,KAAK87E,GAAoB,GACvD,OAAO71G,EAAE61G,EAAmBgC,GAAeC,WAAW57H,OAO5D,IAAM67H,GAFNd,EAAMzC,EAAGllD,OAAOvvE,MAAMknF,UAAU,OAAOntF,MAAMA,KAExBk+H,QAAQ/tE,OAAO,OAEpCgtE,EAAMzC,EAAGllD,OAAOvvE,MAAMknF,UAAU,OAAOntF,MAAMA,SAE3BmG,IAAdg2H,GACF8B,EAAS9tE,OAAO,QAAQA,OAAO,SAC5ByZ,KAAK,OAAQ,YACb9qD,KAAKq9G,GAEV,IAAMgC,EAASF,EAAS9tE,OAAO,KAE/BiuE,IAEAD,EAAO7gH,MAAM,OAAQ,cAEC,IAAlB0+G,GACFmC,EAAOhuE,OAAO,QAAQyZ,KAAK,QAAS,QACjCtsD,MAAM,OAAQ,4BAGnB6gH,EAAOh5B,OAAO,IAAK,gBAChBv7B,KAAK,QAAS,UAEZ0xD,IACH6C,EAAOhuE,OAAO,KACXyZ,KAAK,QAAS,UACdA,KAAK,YAFR,eAEoC9Y,EAFpC,KAIAqtE,EAAOhuE,OAAO,QACXyZ,KAAK,QAAS,WACdA,KAAK,cAAe,OACpBA,KAAK,IAAKnrD,EAAQ,GAClBmrD,KAAK,IAAK9Y,EAAS,GAEtBqtE,EAAOhuE,OAAO,KACXyZ,KAAK,QAAS,UAEjBu0D,EAAOhuE,OAAO,QACXyZ,KAAK,QAAS,WACdA,KAAK,cAAe,OACpBA,KAAK,IAAK,GACVA,KAAK,KAAM,SACXA,KAAK,YAAa,eAClBtsD,MAAM,OAAQ,QACdwB,KAAQ09G,EAPX,QASA2B,EAAOhuE,OAAO,KACXyZ,KAAK,QAAS,SACdA,KAAK,YAFR,cAEkCnrD,EAAQ,GAF1C,SAKF0/G,EAAOhuE,OAAO,KAAKyZ,KAAK,QAAS,QAEjC,IAAMy0D,EAASF,EAAOhuE,OAAO,KAAKyZ,KAAK,QAAS,gBAChDy0D,EAAOluE,OAAO,YAAYyZ,KAAK,mBAAoB,OACnDy0D,EAAOluE,OAAO,QAEdguE,EAAOhuE,OAAO,QACXyZ,KAAK,QAAS,WACdA,KAAK,QAASnrD,GACdmrD,KAAK,SAAU9Y,GACfxzC,MAAM,OAAQ,QACdA,MAAM,iBAAkB,OAG3B6/G,EAAIvzD,KAAK,QAASnrD,EAAQ88G,EAAOI,KAAOJ,EAAOE,OAC5C7xD,KAAK,SAAU9Y,EAASyqE,EAAOC,IAAMD,EAAOG,QAG/C7zG,EAAIs1G,EAAI3nD,OAAO,KACZ5L,KAAK,YADJ,aAC8B2xD,EAAOI,KADrC,IAEAJ,EAAOC,IAFP,KAIJ+B,EAAU7C,EAAGr1G,OAAOrlB,EAAM,SAAAoC,GAAA,OAAK05H,EAAkB15H,KACjD6I,EAAEqzH,OAAOf,GAIT,IAAMgB,EAAU,WACd,IAAIC,KACAn5G,SAAQhjB,SAEZ,IAAKA,KAAQ05H,EACX12G,EAASq1G,EAAGr1G,OAAOrlB,EAAM,SAAAoC,GAAA,OAAK25H,EAAmB15H,GAAM27H,WAAW57H,KAClEo8H,EAAmBA,EAAiBp8G,OAAOiD,GAE7C,OACE1E,KAAKmsD,IAAI3rE,MAAM,KAAMq9H,GACrB79G,KAAKwmE,IAAIhmF,MAAM,KAAMq9H,IAVT,GAiBhB,GAHAt4G,EAAEo4G,OAAOC,QAGap4H,IAAlBi3H,EACFA,EAAcnyH,EAAGib,EAAGzH,EAAOqyC,OACtB,CAEL,IAAMktC,EAAsC,IAA3BugC,EAAQ,GAAKA,EAAQ,IACtCr4G,EAAEo4G,QAAQC,EAAQ,GAAKvgC,EAASugC,EAAQ,GAAKvgC,IAIzB,IAAlBg+B,GACFn0G,EAAE2tD,OAAO,SACNipD,aACA70D,KAAK,IAAKuxD,GAIf,IAAIj7G,SAAM7d,SAAMq8H,SAChB,IAAKr8H,KAAQ05H,EAEXoC,EAAOhuE,OAAO,QAAQyZ,KAAK,QAA3B,QAA4CvnE,GACzCib,MAAM,SAAUy+G,EAAmB15H,GAAM+b,OAAS,QAClDd,MAAM,OAAQ,SAGjBohH,EAASP,EAAOhuE,OAAO,KAAKyZ,KAAK,QAAxB,gBAAiDvnE,IACnD8tD,OAAO,YAAYyZ,KAAK,mBAAoB,OACnD80D,EAAOvuE,OAAO,QAGdjwC,EAAOw6G,EAAGx6G,OACPjV,EAAE,SAAA7I,GAAA,OAAK6I,EAAE6wH,EAAkB15H,MAC3B8jB,EAAE,SAAA9jB,GAAA,OAAK8jB,EAAE61G,EAAmB15H,GAAM27H,WAAW57H,MAGhDylB,EAAE2tD,OAAF,SAAkBnzE,GACfo8H,aACA70D,KAAK,IAAK1pD,GAGXq9G,EAAQ,GAAK,KACfF,EAAU,IACVC,EAAS,OAETD,EAAU,EACVC,EAAS,KAGNhC,IACHiB,EAAMoC,WAAW,SAAAv8H,GAAA,OAAKs6H,EAAUM,MAAM56H,EAAIi7H,EAASC,KAC/CJ,GACFX,EAAMqC,YAAY,EAAG3zH,EAAEqzH,SAAS,KAGlC7B,EAAMkC,WAAW,SAAAv8H,GAAA,OAAKs6H,EAAUO,MAAM76H,EAAG,OAEzCylB,EAAE2tD,OAAO,WACNipD,aACA39H,KAAKy7H,GAER10G,EAAE2tD,OAAO,YACN12D,KAAQw9G,EADX,KAC0BgB,EAD1B,KAEGhgH,MAAM,OAAQ,QACdA,MAAM,kBAAmB,cAGxBwzC,EAAS,GAAK,IAChB2rE,EAAMoC,MAAM/tE,EAAS,IAGvBjpC,EAAE2tD,OAAO,WACNipD,aACA39H,KAAK27H,IAGV50G,EAAE2tD,OAAO,WACNipD,aACA39H,KAAK27H,EAAMqC,UAAUrgH,EAAO,GAAGkgH,WAAW,KAC1CxxC,UAAU,cACV7vE,MAAM,SAAU,QAChBA,MAAM,UAAW,IAEpBuK,EAAEslE,UAAU,SAASA,UAAU,cAC5B7vE,MAAM,OAAQ,QACdA,MAAM,SAAU,QAChBA,MAAM,kBAAmB,cAE5BuK,EAAE2tD,OAAO,WAAWA,OAAO,QACxBl4D,MAAM,SAAU,QAEnBuK,EAAEslE,UAAU,oBACT7vE,MAAM,SAAU,QAChBA,MAAM,UAAW,IAEpBuK,EAAE2tD,OAAO,YACN3sC,GAAG,WAUN,WACE20F,EAAQuB,mBAVPl2F,GAAG,YAEN,WACE,IAAMm2F,EAAStE,EAAGhmC,MAAMzuF,MAAM,GACxBg5H,EAAKh0H,EAAEi0H,OAAOF,GAEpBxB,EAAQ1wB,UAAUmyB,SAwJxB,SAASb,IACPZ,EAAQ2B,aAIV,OAhJA3B,EAAQuB,eAAiB,WACvBl3G,EAAEslE,UAAU,eACT7vE,MAAM,UAAW,QACpBu+G,EAAY/6H,KAAK,OAQnB08H,EAAQ1wB,UAAY,SAAS/kB,GAC3B,IAAM/nF,EAAOm9H,EAAIlxB,QACX3rG,EAAI27H,EAAej8H,EAAM+nF,GAC/B,KAAIznF,GAAKN,EAAKQ,QAAd,CAIA,IAAMw4B,EAAQh5B,EAAKM,GACbumG,EAAOi1B,EAAkB9iG,GAC3BomG,SACEC,KACAC,KACFC,SAEJ,IAAKA,KAAYxD,EACfqD,EAAYrD,EAAmBwD,GAAUvB,WAAWhlG,GACpDqmG,EAAW3+H,KAAK0+H,GAChBE,EAAcC,GAAYH,EAC1Bv3G,EAAE2tD,OAAF,iBAA0B+pD,GACvBjiH,MAAM,UAAW,UACjBk4D,OAAO,QACP5L,KAAK,KAAM3+D,EAAE,IACb2+D,KAAK,KAAM1jD,EAAEk5G,IACbx1D,KAAK,KAAMnrD,GACXmrD,KAAK,KAAM1jD,EAAEk5G,IAGlBv3G,EAAE2tD,OAAO,iBACNl4D,MAAM,UAAW,UACjBk4D,OAAO,QACP5L,KAAK,KAAM3+D,EAAE47F,IACbj9B,KAAK,KAAM9Y,GACX8Y,KAAK,KAAM3+D,EAAE47F,IACbj9B,KAAK,KAAM1jD,EAAEvF,KAAKwmE,IAAIhmF,MAAM,KAAMk+H,KAErC,IAAM5D,EAAQ50B,EAAO02B,EAAQ,GAAK,EAC9BiC,EAAav0H,EAAE47F,GACnB24B,GAAc/D,GAAS,GAAK,GAE5B5zG,EAAE2tD,OAAO,sBACN12D,KAAK49G,EAAUC,OAAO91B,EAAOw2B,EAASC,IACtChgH,MAAM,cAAem+G,EAAQ,MAAQ,SACrC7xD,KAAK,YAHR,aAGkC41D,EAHlC,KAII1uE,EAAS,IAJb,KAQsB,IAAlBkrE,GACFn0G,EAAE2tD,OAAO,sBACN12D,KAAK49G,EAAUI,OAAOuC,EAAW,GAAI,MACrC/hH,MAAM,cAAem+G,EAAQ,MAAQ,SACrC7xD,KAAK,YAHR,aAGkC41D,EAHlC,KAIIt5G,EAAEm5G,EAAW,IAAM,IAJvB,KAMFzD,EAAc96H,KAAK,KAAMk4B,EAAO6tE,EAAOw2B,EAASC,EAAQgC,EATzC,OAcjB9B,EAAQ2B,SAAW,SAASM,GAC1BA,OAAgBt5H,IAATs5H,EAAqBA,KAC5BzxF,EAAA,EAAYtkC,OAAuB,IAAhB+1H,EAAKj/H,aAAiC2F,IAAjB+1H,GAExC,IAAMwD,EAAKxD,EACLr0G,EAAIs1G,EAAI3nD,OAAO,KACfmqD,EAAcxC,EAAIlxB,QAkBlB2zB,EAjBK/3G,EAAE2tD,OAAO,SAEP2X,UAAU,QAAQntF,KAAKy/H,EAAM,SAACr9H,GACzC,IAAM9B,EAAI27H,EAAe0D,EAAah/G,KAAK2b,MAAmB,GAAbojG,EAAG74B,KAAKzkG,IAAW,GAAI,GAClE42B,EAAQ2mG,EAAYr/H,GAC1B,GAAI04B,EAAO,CACT,IAAIumG,SACEF,KACN,IAAKE,KAAYxD,EACfsD,EAAW3+H,KAAKq7H,EAAmBwD,GAAUvB,WAAWhlG,IAE1D,IAAMq2C,EAAI1uD,KAAKwmE,IAAIhmF,MAAM,KAAMk+H,GAC/BK,EAAGrwD,EAAEjtE,EAAGitE,GAEV,OAAOqwD,EAAGnxG,GAAGnsB,KAGK87H,QACjB/tE,OAAO,KACPyZ,KAAK,QAAS,OAEjBg2D,EAAUzvE,OAAO,QACdyZ,KAAK,IAAK0xD,EAAQ,EAAI,GACtB1xD,KAAK,KAAM,SACXA,KAAK,cAAe0xD,EAAQ,SAAW,SAE1CsE,EAAUzvE,OAAO,QACd7yC,MAAM,kBAAmB,cAE5BsiH,EAAUtiH,MAAM,UAAW,GACxBmhH,aACAx4G,SAAS,KACTykD,MAAM,KACNptD,MAAM,UAAW,GAEpBsiH,EAAUzyC,UAAU,QACjBvjB,KAAK,YAAa,SAACxnE,GAClB,OAAIk5H,GACM,aACNrwH,EAAEy0H,EAAG74B,KAAKzkG,IAAK,IACf8jB,EAAEw5G,EAAGrwD,EAAEjtE,IAAM,GAAI,KACjBoL,KAAK,KAEC,aACNvC,EAAEy0H,EAAG74B,KAAKzkG,IAAK,IACf8jB,EAAEw5G,EAAGrwD,EAAEjtE,IAAM,GAAI,YAAag6H,EAAe,KAC7C5uH,KAAK,MAGVsR,KAAK,SAAA1c,GAAA,OAAKs9H,EAAG31C,KAAK3nF,IAAMk5H,EAAQ,GAAR,MAAoBoE,EAAG1rF,MAAM5xC,MAExDw9H,EAAUzyC,UAAU,QACjB7vE,MAAM,SAAU,QAChBssD,KAAK,KAAM,SAAAxnE,GAAA,OAAK6I,EAAEy0H,EAAG74B,KAAKzkG,MAC1BwnE,KAAK,KAAM,SAAAxnE,GAAA,OAAK8jB,EAAEA,EAAEo4G,SAAS,MAC7B10D,KAAK,KAAM,SAAAxnE,GAAA,OAAK6I,EAAEy0H,EAAG74B,KAAKzkG,MAC1BwnE,KAAK,KAAM,SAAAxnE,GAAA,OAAK8jB,EAAEw5G,EAAGrwD,EAAEjtE,MAG1Bw9H,EAAUC,OAAOnrF,UAQZ8oF,GClnBHsC,GACJtqD,OAAA0lD,EAAA,GAMI6E,EAAU7xH,QAAQlM,OAAO,eAC7Bg6F,EAAA,EAAiB35F,OAiCnB09H,EAAQvwE,WAAa,SAAS0mD,GAC5B,OACEhxD,SAAU,IAMVC,KAAM,SAACrM,EAAO3mB,EAASizB,GAErB,IAAM46E,EAAc56E,EAAA,mBACpBpX,EAAA,EAAYtkC,YAAuBvD,IAAhB65H,GAEnB,IAAMvC,EAAYqC,EAAGtqD,OAAOrjD,EAAQ,IAChCqrG,SAASyC,SAAeC,SA+D5B,SAASC,SACSh6H,IAAZq3H,IACFC,EAAUxxB,MAAMg0B,GAAen/H,KAAK08H,QACdr3H,IAAlB85H,GACFzC,EAAQ2B,SAASe,IAjEvBpnF,EAAMulB,iBAAiB2hE,EAAa,SAACn5G,GAEnC,IAAMxY,EACGsgC,EAAA,KAAiB9nB,GAE1B,QAAgB1gB,IAAZkI,EAAuB,CAWzB,QAA8BlI,IAA1BkI,EAAQutH,cAA6B,CACvC,IAAMwE,EAAoB/xH,EAAQutH,cAClCvtH,EAAQutH,cAAgB,WACtBwE,0BACAtnF,EAAM7P,eAIV,QAA4B9iC,IAAxBkI,EAAQwtH,YAA2B,CACrC,IAAMwE,EAAkBhyH,EAAQwtH,YAChCxtH,EAAQwtH,YAAc,WACpBwE,IACAvnF,EAAM7P,eAIVu0F,EAAUnC,EAAuBhtH,GACjC8xH,OAIJrnF,EAAM5lB,OAAOkyB,EAAA,YAAsB,SAACv+B,EAAQsM,GAC1C8sG,EAAgBp5G,EAChBs5G,MAGFrnF,EAAM5lB,OAAOkyB,EAAA,gBAA0B,SAACv+B,EAAQsM,GAC9C+sG,EAAUr5G,EACVs5G,MAGFrnF,EAAM5lB,OAAOkyB,EAAA,qBACX,SAACv+B,EAAQsM,QACQhtB,IAAX0gB,IAGAA,EAAS,EACX22G,EAAQ1wB,UAAUjmF,GAElB22G,EAAQuB,oBAId3qF,EAAA,EAAgBhxC,OAAQ,SAAU8yG,EAAaiqB,EAAa,IAAI,OA3EtEJ,EAAQvwE,oCAyFRuwE,EAAQ3mF,UAAU,cAAe2mF,EAAQvwE,YAGzC,IAAA8wE,EAAA,ECnHMnuD,UAAUjkE,QAAQlM,OAAO,cAC7B0tF,EAAA,EAAgB1tF,OAAOK,KACvB6gF,EAAA,EAAyBlhF,OAAOK,KAChCi+H,EAA8Bj+H,QA4BhC,SAASk+H,EAAsBjnF,EAAUzmB,EAAQ0tG,GAC/C,OAAOA,EAAsBjnF,EAAUzmB,GAzBzCs/C,EAAQtvE,MAAM,wBAMZ,SAACy2C,EAAUzmB,GACT,IAAMsmB,EAActmB,EAAA,sBACpB,YAAuB1sB,IAAhBgzC,EAA4BA,EACjC,gBAGNg5B,EAAQz5B,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,cAAej3C,EAAQ,iEAuD5CwwE,EAAQt5B,YACN7iB,WAAY,+BACZozC,UACE56D,OAAU,oBACV0R,KAAQ,kBACR4vE,SAAY,kBACZ0wC,wBAA2B,gCAC3BC,qBAAwB,8BACxBC,cAAiB,6BACjBC,aAAgB,uBAElBxnF,YAAaonF,GAGfpuD,EAAQ5I,UAAU,aAAc4I,EAAQt5B,YAmBxCs5B,EAAQ94B,YAAc,SAAS1mB,EAAQjtB,EAAO4zC,EAAU19B,EACtD9V,EAAgBy9E,EAAuBq9C,EACvCzwC,GAAiB,IAAA3nF,EAAAvC,KAMjBA,KAAKyjE,QAAU/2C,EAMf1sB,KAAKK,OAASZ,EAMdO,KAAKwjE,UAAYnwB,EAMjBrzC,KAAK4V,SAAWD,EAMhB3V,KAAKq8B,gBAAkBx8B,EAMvBG,KAAK46H,mBAAqBt9C,EAAsBt4D,oBAMhDhlB,KAAK66H,mBAAqBF,EAM1B36H,KAAKoqF,iBAAmBF,EAMxBlqF,KAAK6tC,KAAO,KAMZ7tC,KAAK86H,oBAAsB,KAM3B96H,KAAK+6H,gBAML/6H,KAAKg7H,UAAY,IAMjBh7H,KAAKia,KAMLja,KAAK05H,eAML15H,KAAKi7H,cACH3nG,gBAAYpzB,EACZ4hF,cAAU5hF,EACVk5H,cACA/B,YAAQn3H,EACRg7H,YAAQh7H,GAQVF,KAAKm7H,kBAAoB,EAOzBn7H,KAAKo7H,gBAAkB,KAOvBp7H,KAAKswB,uBAAyB,KAM9BtwB,KAAKq7H,cAAgB,IAAIj0E,EAAA,EACzBpnD,KAAK46H,mBAAmBn2G,WAAWzkB,KAAKq7H,eAMxCr7H,KAAKs7H,gBACHhF,MAAOz2H,EAAe4F,UAAU,YAChC+wH,MAAO32H,EAAe4F,UAAU,cAQlCzF,KAAKu7H,eAAiB,KAMtBv7H,KAAKuI,QAAS,EAMdvI,KAAKw7H,gBAMLx7H,KAAKy7H,WAAY,EAIjB/uG,EAAOO,OACL,kBAAM1qB,EAAKgG,QACX,SAACivC,EAAUzL,GACLA,IAAayL,GACfj1C,EAAKm5H,2BAKXhvG,EAAOO,OACL,kBAAM1qB,EAAK0X,MACX,SAAC0hH,EAASC,GACJA,IAAYD,GACdp5H,EAAKs5H,YAIX77H,KAAK07H,0BArLPxvD,EAAQ94B,2IA4LR84B,EAAQ94B,YAAYz4C,UAAUm7C,QAAU,WACtC91C,KAAK6tC,KAAO7tC,KAAA,SAAmBA,KAAA,WAAqB,KACpDA,KAAKg7H,UAAYh7H,KAAA,cAAwBA,KAAA,gBAA0B,IAEnE,IAAI87H,SACEC,EAAoB/7H,KAAA,qBACtB+7H,GACFD,EAAkBC,IAClBh0F,EAAA,EAAYvhB,iBAAiBs1G,EAAiBjiD,EAAA,IAE9CiiD,EAAkB,IAAIjiD,EAAA,GACpB5gE,MAAO,IAAI2uC,EAAA,GACTxuC,KAAM,IAAI0gE,EAAA,GAAa3hE,MAAO,YAC9BgB,OAAQ,MAIdnZ,KAAK46H,mBAAmBhkH,SAASklH,GAEjC,IAAMhG,EAAqB91H,KAAA,0BAK3B,IAAK,IAAM5D,KAJX2rC,EAAA,EAAYvhB,iBAAiBsvG,EAAoBp7H,QAEjDsF,KAAK86H,oBAAsBhF,EAER91H,KAAK86H,oBAAqB,CAE3C96H,KAAK+6H,aAAatgI,KAAK2B,GAEJ4D,KAAK86H,oBAAoB1+H,GAC5B27H,aACd/3H,KAAK86H,oBAAoB1+H,GAAM27H,WAAa/3H,KAAKg8H,aAAa5/H,IAIlE4D,KAAKu7H,gBACHzF,mBAAoB91H,KAAK86H,oBACzBjF,kBAAmB71H,KAAKi8H,SACxBtG,cAAe31H,KAAKk8H,eAAe7+H,KAAK2C,MACxC41H,YAAa51H,KAAKm8H,aAAa9+H,KAAK2C,MACpCo2H,KAAMp2H,KAAKs7H,gBAGb,IAAMc,EAAYp8H,KAAA,aAClB,GAAIo8H,EAAW,CACb,IAAMh0H,EAAUg0H,IAChBr0F,EAAA,EAAYs0F,aAAaj0H,GACzBsgC,EAAA,EAAa1oC,KAAKu7H,eAAgBnzH,KAQtC8jE,EAAQ94B,YAAYz4C,UAAUkhI,QAAU,WACtC77H,KAAKy7H,WAAY,EACbz7H,KAAKia,KACPja,KAAKs8H,kBAELt8H,KAAK05H,eAEP15H,KAAKuI,SAAWvI,KAAKia,MAOvBiyD,EAAQ94B,YAAYz4C,UAAU+gI,uBAAyB,WACjD17H,KAAKuI,QAAwB,OAAdvI,KAAK6tC,KACtB7tC,KAAKw7H,gBAAkBrtF,EAAA,EAAgBnuC,KAAK6tC,KAAM,cAChD7tC,KAAKu8H,eAAel/H,KAAK2C,OAE3BmuC,EAAA,EAAuBnuC,KAAKw7H,kBAShCtvD,EAAQ94B,YAAYz4C,UAAU4hI,eAAiB,SAASx4D,GACtD,IAAIA,EAAE9wC,UAAajzB,KAAKia,KAAxB,CAGA,IAAMqZ,EAAatzB,KAAK6tC,KAAK2uF,mBAAmBz4D,EAAE5E,eAC5Cs9D,EAAez8H,KAAKia,KAAKyiH,gBAAgBppG,GAGzCqpG,EADc,IAAIh1E,EAAA,GAAkB80E,EAAcnpG,IAC1B60B,YAAcnoD,KAAK6tC,KAAK1uB,UAAUsM,gBAG9DzrB,KAAKm7H,iBADHwB,EAAY,GACU38H,KAAK48H,oBAAoBH,EAAcz8H,KAAKia,OAE3C,EAE3Bja,KAAKyjE,QAAQxqB,WAafizB,EAAQ94B,YAAYz4C,UAAUiiI,oBAAsB,SAASC,EAC3D5iH,GACA,IAAI+kF,SACA89B,EAAa,EACXC,GACJF,EAAY,GAAK,GACjBA,EAAY,GAAK,GACjBA,EAAY,GAAK,GACjBA,EAAY,GAAK,IAenB,OAbA78H,KAAKia,KAAK+iH,eAAe,SAACC,EAAYC,GAGpC,IAFAl+B,EAAU,IAAIr3C,EAAA,GAAkBs1E,EAAYC,KAEhC59G,iBAAiBy9G,GAI3B,OADA/9B,EAAQx3C,gBAAgBy1E,EAAYJ,IAC7BC,GAAc99B,EAAQ72C,YAG7B20E,GAAc99B,EAAQ72C,cAGnB20E,GAYT5wD,EAAQ94B,YAAYz4C,UAAUuhI,eAAiB,SAASnpG,EAAO6tE,EAAMy2B,EACnEgC,EAAe6B,GAEf,IAAInP,SACEz4F,GAAcP,EAAM/tB,EAAG+tB,EAAM9S,GACnC,IAAK8rG,KAAOsN,EACVr5H,KAAKi7H,aAAa7B,WAAWrN,GAAOsN,EAActN,GAEpD/rH,KAAKi7H,aAAan5C,SAAW8e,EAC7B5gG,KAAKi7H,aAAa5D,OAASA,EAC3Br3H,KAAKi7H,aAAaC,OAASA,EAC3Bl7H,KAAKi7H,aAAa3nG,WAAaA,EAG/B,IAAMnY,EAAO,IAAIksC,EAAA,EAAY/zB,GAC7BtzB,KAAK4zB,wBACL5zB,KAAKswB,uBAAuByD,UAAY/zB,KAAKm9H,kBAC7Cn9H,KAAKo7H,gBAAgB/nG,YAAYC,GACjCtzB,KAAKq7H,cAAcz0G,YAAYzL,IAOjC+wD,EAAQ94B,YAAYz4C,UAAUwhI,aAAe,WAE3Cn8H,KAAKi7H,aAAa3nG,gBAAapzB,EAC/BF,KAAKi7H,aAAan5C,cAAW5hF,EAC7BF,KAAKi7H,aAAa7B,cAClBp5H,KAAKi7H,aAAa5D,YAASn3H,EAC3BF,KAAKi7H,aAAaC,YAASh7H,EAG3BF,KAAK80B,wBACL90B,KAAKq7H,cAAcz0G,YAAY,OAQjCslD,EAAQ94B,YAAYz4C,UAAUwiI,gBAAkB,WAC9C,IACIC,SAAeC,SACbtpG,KACA2B,EAAS11B,KAAK4V,SAAS,UACvB0nH,EAA2C,MAA7Bt9H,KAAKi7H,aAAa5D,OAAiB,EAAI,EAQ3D,IAAK+F,KAPLrpG,EAAUt5B,KACLuF,KAAKs7H,eAAehF,MANP,MAQd5gG,EAAO11B,KAAKi7H,aAAan5C,SAAUw7C,GAHvC,IAKIt9H,KAAKi7H,aAAa5D,QAEAr3H,KAAKi7H,aAAa7B,WACtCiE,EAA0Br9H,KAAKq8B,gBAAgB52B,UAAU23H,GACzDrpG,EAAUt5B,KACL4iI,EAfW,MAiBZ3nG,EAAO11B,KAAKi7H,aAAa7B,WAAWgE,GAAgB,GAHxD,IAIMp9H,KAAKi7H,aAAaC,QAG1B,OAAOnnG,EAAUxsB,KAAK,UAQxB2kE,EAAQ94B,YAAYz4C,UAAUi5B,sBAAwB,WACpD5zB,KAAK80B,wBACL90B,KAAKswB,uBAAyBU,SAASC,cAAc,OACrDjxB,KAAKswB,uBAAuB01D,WAAa,+BACzChmF,KAAKo7H,gBAAkB,IAAIjU,EAAA,GACzBj7F,QAASlsB,KAAKswB,uBACdkE,QAAS,GAAI,IACbC,YAAa,kBAEfz0B,KAAK6tC,KAAKnZ,WAAW10B,KAAKo7H,kBAQ5BlvD,EAAQ94B,YAAYz4C,UAAUm6B,sBAAwB,WAChB,OAAhC90B,KAAKswB,yBACPtwB,KAAKswB,uBAAuBsE,WAAWC,YACrC70B,KAAKswB,wBACPtwB,KAAKswB,uBAAyB,KAC9BtwB,KAAK6tC,KAAKlZ,cAAc30B,KAAKo7H,mBAWjClvD,EAAQ94B,YAAYz4C,UAAU8mH,SAAW,SAASj5F,GAChD,IAAM+0G,EAAoBv9H,KAAK86H,oBAAoBtyG,GACnD,GAAK+0G,EAGL,OAAOA,EAAkBplH,OAS3B+zD,EAAQ94B,YAAYz4C,UAAU6iI,eAAiB,WAC7C,OAAOx9H,KAAK+6H,aAAaz9H,MAAM,IASjC4uE,EAAQ94B,YAAYz4C,UAAUqhI,aAAe,SAASxzG,GAapD,OANe,SAAS9lB,GACtB,MAAI,WAAYA,GAAQ8lB,KAAa9lB,EAAA,OAC5B8+C,WAAW9+C,EAAA,OAAe8lB,IAE5B,IAYX0jD,EAAQ94B,YAAYz4C,UAAUshI,SAAW,SAASv5H,GAChD,MAAI,SAAUA,EACLA,EAAA,KAEF,GAQTwpE,EAAQ94B,YAAYz4C,UAAU2hI,gBAAkB,WAC9C,IAAMnhH,GACJzd,KAAQ,aACRme,YAAe7b,KAAKia,KAAK8B,kBAGrB9U,GACJzC,OAAUxE,KAAK+6H,aAAaxzH,KAAK,KACjC4T,KAAQg8D,KAAKK,UAAUr8D,GACvBsiH,SAAYz9H,KAAKg7H,WAGMh7H,KAAKK,QAC5BqD,IAAK1D,KAAK66H,mBACV6C,OAAQ,OACRz2H,OAAQA,EACR02H,gBAAiB,6BACjB36E,SACEC,eAAgB,uCAEjBp/C,KACD7D,KAAK49H,uBAAuBvgI,KAAK2C,MACjCA,KAAK69H,qBAAqBxgI,KAAK2C,QASnCksE,EAAQ94B,YAAYz4C,UAAUijI,uBAAyB,SAASnkF,GAC9D,IAAMigF,EAAcjgF,EAAK1/C,KAAL,QAChB2/H,aAAuBhqH,QACzB1P,KAAK05H,YAAcA,IASvBxtD,EAAQ94B,YAAYz4C,UAAUkjI,qBAAuB,SAASpkF,GAC5Dz5C,KAAKy7H,WAAY,EACjBz3H,QAAQC,MAAM,8BAQhBioE,EAAQ94B,YAAYz4C,UAAUyzF,YAAc,WAC1C,GAAgC,IAA5BpuF,KAAK05H,YAAYn/H,OAArB,CAKA,IAAMyoD,KACF86E,GAAc,EACZb,EAAaj9H,KAAK05H,YAAY,GAChC,SAAUuD,IACZj6E,EAAQvoD,MAAM2B,KAAM,aACpB0hI,GAAc,GAEhB,IAAMt5H,KACN,IAAK,IAAM7B,KAASs6H,EAAA,OAClBj6E,EAAQvoD,MAAM2B,KAAQuG,IACtB6B,EAAO/J,KAAKkI,GAEdqgD,EAAQvoD,MAAM2B,KAAM,MACpB4mD,EAAQvoD,MAAM2B,KAAM,MAEpB,IAAM2hI,EAAO/9H,KAAK05H,YAAY50H,IAAI,SAACiuB,GACjC,IAAMg0D,KAYN,OAXI+2C,IACF/2C,EAAA,SAAkBh0D,EAAA,MAGpBvuB,EAAOtB,QAAQ,SAACP,GACdokF,EAAIpkF,GAASowB,EAAA,OAAgBpwB,KAG/BokF,EAAA,EAAWh0D,EAAA,EACXg0D,EAAA,EAAWh0D,EAAA,EAEJg0D,IAGT/mF,KAAKoqF,iBAAiBiE,cAAc0vC,EAAM/6E,EAAS,iBAIrDkpB,EAAQn8C,WAAW,uBAAwBm8C,EAAQ94B,aAGnD,IAAAkwB,EAAA,6CC5sBM06D,EAAU/1H,QAAQlM,OAAO,sBAC7BkhF,EAAA,EAAyBlhF,OAAOK,OA4BlC4hI,EAAQz0E,WAAa,WACnB,OACE1W,OAAO,EACP9iB,WAAY,uCACZkvB,SAAU,IACVhM,kBACE42C,SAAY,yBACZ5vE,KAAQ,0BACR1R,OAAU,4BACV01H,WAAc,+BAMpBD,EAAQ7qF,UAAU,qBAChB6qF,EAAQz0E,YAcVy0E,EAAQ5qF,YAAc,SAAS1mB,EAAQ2mB,EAAUtX,EAC/CuhD,GAAuB,IAAA/6E,EAAAvC,KAMvBA,KAAKia,KAMLja,KAAK6tC,KAAO,KAOZ7tC,KAAKuI,OAMLvI,KAAKorD,UAAY,IAAIpgB,EAAA,EAErB,IAAMkzF,EAAU5gD,EAAsBt4D,oBACtCk5G,EAAQ5yE,YAAYtrD,KAAKorD,WAEzB,IAAI/zC,SACE8mH,EAAUn+H,KAAA,WACZm+H,GACF9mH,EAAQ8mH,IACRp2F,EAAA,EAAYvhB,iBAAiBnP,EAAOwiE,EAAA,IAEpCxiE,EAAQ,IAAIwiE,EAAA,GACVvhE,OAAQ,IAAIgzE,EAAA,GACVnzE,MAAO,UACPK,MAAO,MAIb0lH,EAAQtnH,SAASS,GAMjBrX,KAAKgiC,YAAc,IAAIgnE,EAAA,GACrBtrG,KAA2C,aAC3Cuf,SAAUjd,KAAKorD,YAGjB6vB,EAAA,EAAiBj5C,YAAYhiC,KAAKgiC,aAGlChiC,KAAKgiC,YAAYY,GAAG,gBAAiB,WAC/BrgC,EAAKy/B,YAAYthB,aACnBne,EAAK0xF,WAKTj0F,KAAKgiC,YAAYY,GAAG,UAAW,SAACngB,GAC9BlgB,EAAK0X,KAAOwI,EAAM5L,QAAQuE,cAE1B2gB,EAAS,WACPx5B,EAAKy/B,YAAYrhB,WAAU,IAC1B,KAKL+L,EAAOO,OACL,kBAAM1qB,EAAK0X,MACX,SAAC0hH,EAASC,GACQ,OAAZD,GACFp5H,EAAK0xF,WAIXvnE,EAAOO,OACL,kBAAM1qB,EAAKgG,QACX,SAACivC,IACkB,IAAbA,GACFj1C,EAAK0xF,SAGP1xF,EAAKy/B,YAAYrhB,UAAUpe,EAAKgG,WA1FtCy1H,EAAQ5qF,6EAmGR4qF,EAAQ5qF,YAAYz4C,UAAUm7C,QAAU,WACtC,IAAMhxC,EAAM9E,KAAA,WACZ+nC,EAAA,EAAYvhB,iBAAiB1hB,EAAK49E,EAAA,GAClC1iF,KAAK6tC,KAAO/oC,EACZ9E,KAAK6tC,KAAKla,eAAe3zB,KAAKgiC,cAQhCg8F,EAAQ5qF,YAAYz4C,UAAUs5F,OAAS,WACrCj0F,KAAKorD,UAAUvmC,QACf7kB,KAAKia,KAAO,MAId+jH,EAAQjuG,WAAW,+BACjBiuG,EAAQ5qF,aAGV,IAAAgrF,EAAA,ECxLMv2B,UAAU5/F,QAAQlM,OAAO,oBAC7BunE,EAAoBlnE,KACpBgiI,EAA4BhiI,QAI9BuB,EAAA,2DCjBA0gI,EAAA3iI,EAAA,IASMI,EAAUmM,QAAQlM,OAAO,iBAC7BuiI,EAAA,EAAoBviI,OAAOK,OAiC7BN,EAAQytD,WAAa,SAASuyB,GAC5B,OACE78B,SAAU,IACVpM,OAAO,EACPqM,KAAM,SAACrM,EAAOsjD,EAAMh3C,GAIlB,IAAMr6C,EAAM+tC,EAAM1lB,MAAMgyB,EAAA,kBAElBnd,EAAc,IAAIu8F,EAAA,GACtBhhI,UAAW8gI,EAAA,IAgBbr8F,EAAYY,GAAG,SARM,SAASrc,GAC5B,IAAMnH,EAAS4iB,EAAY5mB,cAAcyE,YACzCi8D,EAAe1hD,OACbP,MAAOgZ,EAAM1lB,MAAMgyB,EAAA,oBACnB//B,OAAQA,EACRta,IAAKA,MAMT+tC,EAAM5lB,OAAOkyB,EAAA,oBACX,SAACv+B,EAAQsM,GACHtM,EAEF9b,EAAI6uB,eAAeqO,IAGnBl9B,EAAI4uB,kBAAkBsO,IAC+B,IAAjD6Q,EAAM1lB,MAAMgyB,EAAA,yBACd28B,EAAej3D,cAvC7B/oB,EAAQytD,sCAgDRztD,EAAQq3C,UAAU,gBAAiBr3C,EAAQytD,YAG3C5rD,EAAA,sEC7EM7B,GAjBNJ,EAAA,KAiBgBuM,QAAQlM,OAAO,sBAC7ByiI,EAAA,EAAuBziI,OAAOK,KAC9BqiI,EAAA,EAAiBriI,QA2BnB,SAASsiI,EAA8B9xG,EAAQ8xG,GAC7C,OAAOA,EAA8B9xG,GAxBvC9wB,EAAQ22C,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,6BAA8Bj3C,EAAQ,SAI3DI,EAAQc,MAAM,gCAKZ,SAACgwB,GACC,IAAMsmB,EAActmB,EAAA,8BACpB,YAAuB1sB,IAAhBgzC,EAA4BA,EACjC,oFA0CNp3C,EAAQ82C,WAAa,WACnB,OACEqM,SAAU,IACVlvB,WAAY,iCACZkjB,kBAAkB,EAClBJ,OACEtqC,OAAU,sBACV4wH,UAAa,yBACbwF,QAAW,wBACXh8H,MAAS,qBACTmC,IAAO,oBAETo6C,KAAM,SAACrM,EAAO3mB,EAASy3C,GACrB,IAAMp+B,EAAOsN,EAAA,KAGbA,EAAM5lB,OAAO,kBAAMsY,EAAKh9B,QAAQ,SAASA,GACvCvI,KAAK4+H,cAAcr2H,IACnBlL,KAAKkoC,IAGPsN,EAAM5lB,OAAO,kBAAMsY,EAAK5iC,OAAO,SAASA,GACtC3C,KAAK2C,MAAQA,EACb3C,KAAKm5H,UAAY,MACjB97H,KAAKkoC,OAMbzpC,EAAQq3C,UAAU,eAAgBr3C,EAAQ82C,YAY1C92C,EAAQs3C,YAAc,SAAS1mB,EAAQujF,EAAcsW,GAMnDvmH,KAAKmwG,cAAgBF,EAMrBjwG,KAAKymH,WAAaF,EAKlBvmH,KAAKuI,OAMLvI,KAAKm5H,UAKLn5H,KAAK2C,MAKL3C,KAAK8E,IAML9E,KAAK2jC,iBAML3jC,KAAK4zC,OAASlnB,EAMd1sB,KAAK6+H,aAAc,EAMnB7+H,KAAK2+H,SAAU,GAzDjB7iI,EAAQs3C,0DAiERt3C,EAAQs3C,YAAYz4C,UAAUikI,cAAgB,SAASr2H,GAAQ,IAAArC,EAAAlG,KAC7DA,KAAKm5H,eAAYj5H,EACbqI,GACFo8B,EAAA,EAAYlhC,OAAqC,IAA9BzD,KAAK2jC,cAAcppC,QAGtCyF,KAAK2jC,cAAclpC,KAAKwrB,EAAA,EAAgBjmB,KAAK8E,IAAK,cAChD,SAASi/D,GAAG,IAAAxhE,EAAAvC,KACVA,KAAK4zC,OAAOqF,OAAO,WACjB12C,EAAKs8H,aAAc,EACnBt8H,EAAK42H,eAAYj5H,EACjBqC,EAAKo8H,SAAU,KAEhB3+H,OAILA,KAAK2jC,cAAclpC,KAAKwrB,EAAA,EAAgBjmB,KAAK8E,IAAK,cAChD9E,KAAKmwG,cAAcnwG,KAAK8+H,aAAazhI,KAAK2C,MAAO,KAAK,KAGxDA,KAAK2jC,cAAclpC,KAAKwrB,EAAA,EAAgBjmB,KAAK8E,IAAI41C,cAAe,WAAY,WAC1Ex0C,EAAK0tC,OAAOqF,OAAO,WACjB/yC,EAAKizH,eAAYj5H,EACjBgG,EAAK24H,aAAc,EACnB34H,EAAKy4H,SAAU,SAInB3+H,KAAKm5H,eAAYj5H,EACjBF,KAAK2jC,cAAczgC,QAAQ+iB,EAAA,GAC3BjmB,KAAK2jC,cAAcppC,OAAS,IAWhCuB,EAAQs3C,YAAYz4C,UAAUmkI,aAAe,SAAS/6D,GACpD,GAAI/jE,KAAK6+H,YAAa,CACpB7+H,KAAK2+H,SAAU,EACf,IAAM13H,GACJzC,OAAUxE,KAAK2C,OAEjB3C,KAAKymH,WAAW7b,UAAU7mC,EAAEzwC,WAAYrsB,GAAQpD,KAC9C7D,KAAK++H,kBAAkB1hI,KAAK2C,MAC5BA,KAAKg/H,gBAAgB3hI,KAAK2C,SAUhClE,EAAQs3C,YAAYz4C,UAAUokI,kBAAoB,SAAStlF,GACzD9U,EAAA,EAAYlhC,OAAOzD,KAAK2C,MAAO,8BAC/B3C,KAAKm5H,UAAY1/E,EAAKz5C,KAAK2C,OAC3B3C,KAAK2+H,SAAU,GAOjB7iI,EAAQs3C,YAAYz4C,UAAUqkI,gBAAkB,WAC9Ch7H,QAAQC,MAAM,gCACdjE,KAAKm5H,eAAYj5H,EACjBF,KAAK2+H,SAAU,GAIjB7iI,EAAQi0B,WAAW,yBAA0Bj0B,EAAQs3C,aAuBrDt3C,EAAQmjI,kBACNlvG,WAAY,uCACZozC,UACEr+D,IAAO,yBACPN,OAAU,4BACV+D,OAAU,6BAEZ2qC,YAAawrF,GAEf5iI,EAAQwnE,UAAU,qBAAsBxnE,EAAQmjI,kBAQhDnjI,EAAQojI,kBAAoB,WAK1Bl/H,KAAK8E,IAML9E,KAAKwE,OAMLxE,KAAKuI,OAMLvI,KAAKm/H,wBAIPrjI,EAAQojI,kBAAkBvkI,UAAUm7C,QAAU,WAC5C91C,KAAKm/H,uBAAyBn/H,KAAKwE,OAAO,IAI5C1I,EAAQi0B,WAAW,+BACjBj0B,EAAQojI,mBAGVvhI,EAAA,8CClVAyhI,EAAA1jI,EAAA,IAcMI,EAAU,WAMdkE,KAAKq/H,8BAMLr/H,KAAKs/H,6BASPxjI,EAAQyjI,kBAAoB,MAO5BzjI,EAAQ0jI,eAAiB,GAiBzB1jI,EAAQnB,UAAU8kI,2BAA6B,SAASzgH,EAASqlE,EAAUq7C,GACzE,IAAM/2D,EAAO3oE,KAEb,gBAIWumB,GACP,IAAMid,EAAUjd,EAAIid,QACdm8F,EAAap5G,EAAIo5G,WAEjBr6G,EAAaq6G,EAAWC,UAAUt6G,WAElCu6G,EAAgBF,EAAW5mH,KAAK,GAAK4mH,EAAWpkB,WAChDukB,EAAiBH,EAAW5mH,KAAK,GAAK4mH,EAAWpkB,WAEjDx7F,GAAU8/G,EAAgB,EAAGC,EAAiB,GAE9C/mH,EAAOiG,IACP6rC,EAAS9xC,EAAK,GAAKgnH,EAAA,EACnBvnH,EAAQO,EAAK,GAAKgnH,EAAA,EAClB1qG,EAAQgvD,EAASs7C,GAEjBK,EAAMlkI,EAAQ0jI,eACdS,EAAMnkI,EAAQyjI,kBAEdW,EACE1nH,EAAQwnH,EAAOC,EAAO5qG,EAAQ/P,EAAc,EACpDqjD,EAAK02D,8BACGtmH,EAAK,GAAKinH,EAAOC,EAAO5qG,EAAS,EAEzC,IAAM8qG,EACEt1E,EAASm1E,EAAOC,EAAO5qG,EAAQ/P,EAAc,EAcrD,GAbAqjD,EAAK22D,4BACGvmH,EAAK,GAAKinH,EAAOC,EAAO5qG,EAAS,EAGzCmO,EAAQ48F,YACR58F,EAAQ68F,OAAO,EAAG,GAClB78F,EAAQ88F,OAAOT,EAAe,GAC9Br8F,EAAQ88F,OAAOT,EAAeC,GAC9Bt8F,EAAQ88F,OAAO,EAAGR,GAClBt8F,EAAQ88F,OAAO,EAAG,GAClB98F,EAAQ+8F,YAGHb,EAGE,CACL,IAAMrhH,EAAW+gH,EAAA,EAAiBM,KAClC/2D,EAAK63D,2BAA2Bh9F,EAASzjB,EAAQmgH,EAC/CC,EAAkB9hH,QALpBsqD,EAAK83D,eAAej9F,EAASzjB,EAAQmgH,EACnCC,GAQJ38F,EAAQk9E,UAAY,sBACpBl9E,EAAQpqB,SAadtd,EAAQnB,UAAU8lI,eAAiB,SAASj9F,EAASzjB,EACnDmgH,EAAiBC,GACjB,IAAMO,EAAO3gH,EAAO,GAAKmgH,EACnBS,EAAO5gH,EAAO,GAAKogH,EACnBS,EAAO7gH,EAAO,GAAKmgH,EACnBW,EAAO9gH,EAAO,GAAKogH,EAEzB38F,EAAQ68F,OAAOK,EAAMC,GACrBn9F,EAAQ88F,OAAOI,EAAMG,GACrBr9F,EAAQ88F,OAAOM,EAAMC,GACrBr9F,EAAQ88F,OAAOM,EAAMD,GACrBn9F,EAAQ88F,OAAOI,EAAMC,GACrBn9F,EAAQ+8F,aAYVzkI,EAAQnB,UAAU6lI,2BAA6B,SAASh9F,EAASzjB,EAC/DmgH,EAAiBC,EAAkB9hH,GAEnC,IAAMyiH,EAAWpmH,KAAK2uC,KAAK3uC,KAAK+X,IAAIytG,EAAiB,GACjDxlH,KAAK+X,IAAI0tG,EAAkB,IAEzBY,EAAQrmH,KAAKsmH,KAAKb,EAAmBD,GAAmB7hH,EAExD4iH,EAAQvmH,KAAKsmH,KAAKd,EAAkBC,GAAoB9hH,EAExD6iH,EAAKnhH,EAAO,GAAKrF,KAAKC,IAAIomH,GAASD,EACnCjJ,EAAK93G,EAAO,GAAKrF,KAAKG,IAAIkmH,GAASD,EACnCK,EAAKphH,EAAO,GAAKrF,KAAKG,IAAIomH,GAASH,EACnCM,EAAKrhH,EAAO,GAAKrF,KAAKC,IAAIsmH,GAASH,EACnCO,EAAKthH,EAAO,GAAKrF,KAAKC,IAAIomH,GAASD,EACnCQ,EAAKvhH,EAAO,GAAKrF,KAAKG,IAAIkmH,GAASD,EACnCS,EAAKxhH,EAAO,GAAKrF,KAAKG,IAAIomH,GAASH,EACnCU,EAAKzhH,EAAO,GAAKrF,KAAKC,IAAIsmH,GAASH,EAEzCt9F,EAAQ68F,OAAOa,EAAIrJ,GACnBr0F,EAAQ88F,OAAOa,EAAIC,GACnB59F,EAAQ88F,OAAOe,EAAIC,GACnB99F,EAAQ88F,OAAOiB,EAAIC,GACnBh+F,EAAQ88F,OAAOY,EAAIrJ,GACnBr0F,EAAQ+8F,aAkBVzkI,EAAQnB,UAAU8mI,gBAAkB,SAClCC,EAASC,EAAeC,EAAcC,GAatC,IAXA,IAAMC,EAAWJ,EAAQ,GAAKC,EACxBI,EAAYL,EAAQ,GAAKC,EAEzBK,EAAaF,EAAWhmI,EAAQyjI,kBAClCzjI,EAAQ0jI,eAAiBoC,EAAa,GACpCK,EAAcF,EAAYjmI,EAAQyjI,kBACpCzjI,EAAQ0jI,eAAiBoC,EAAa,GAEpCvsG,EAAQ3a,KAAKmsD,IAAIm7D,EAAYC,GAE/BC,GAAW,EACN7nI,EAAI,EAAG+G,EAAKygI,EAAetnI,OAAQF,EAAI+G,IAAM/G,EAChDg7B,EAAQwsG,EAAexnI,KACzB6nI,EAAUL,EAAexnI,IAI7B,OAAO6nI,GAYTpmI,EAAQnB,UAAUwnI,qBAAuB,SACvCT,EAASE,EAAcQ,GAEvB,IAAMC,EACFvmI,EAAQ0jI,eAAiB1jI,EAAQyjI,kBAE/B+C,EAAeV,EAAa,GAAKQ,GAClCC,EAAeX,EAAQ,IACtBa,EAAeX,EAAa,GAAKQ,GAClCC,EAAeX,EAAQ,IAI5B,OAF0BhnH,KAAKwmE,IAAIohD,EAAaC,IAWlDzmI,EAAQnB,UAAU6nI,oBAAsB,SAASjjH,GAC/C,OAAQA,EAAU,GAAKvf,KAAKq/H,8BAC1B9/G,EAAU,GAAKvf,KAAKs/H,8BASxBxjI,EAAQnB,UAAU8nI,qBAAuB,SAASljH,GAChD,OAAQA,EAAU,GAAKvf,KAAKq/H,8BAC1B9/G,EAAU,GAAKvf,KAAKs/H,8BASxBxjI,EAAQnB,UAAU+nI,gBAAkB,SAASnjH,GAC3C,OAAQA,EAAU,GAAKvf,KAAKq/H,8BAC1B9/G,EAAU,GAAKvf,KAAKs/H,8BASxBxjI,EAAQnB,UAAUgoI,iBAAmB,SAASpjH,GAC5C,OAAQA,EAAU,GAAKvf,KAAKq/H,8BAC1B9/G,EAAU,GAAKvf,KAAKs/H,+BAMxBxjI,EAAQC,OAASkM,QAAQlM,OAAO,sBACjBoM,QAAQ,iBAAkBrM,GAGzC6B,EAAA,uMCxQA,IAAM7B,EAAUmM,QAAQlM,OAAO,qBAC7B6mI,EAAA,EAAyB7mI,OAAOK,KAChC25G,EAAA,EAAeh6G,OAAOK,KACtBymI,EAAA,EAAmB9mI,OAAOK,KAC1B0mI,EAAA,EAAyB/mI,OAAOK,KAChC2mI,EAAA,EAAsBhnI,OAAOK,KAC7B4mI,EAAA,EAAiBjnI,OAAOK,KACxB6mI,EAAA,EAAelnI,OAAOK,KACtB8mI,EAAA,EAAoBnnI,OAAOK,OAuE7B,SAAS+mI,EAAoB9vF,EAAUzmB,EAAQu2G,GAC7C,OAAOA,EAAoB9vF,EAAUzmB,GApEvC9wB,EAAQc,MAAM,sBAMZ,SAACsvB,EAASizB,GACR,IAAMjM,EAAciM,EAAA,oBACpB,YAAuBj/C,IAAhBgzC,EAA4BA,EACjC,cAGNp3C,EAAQ22C,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,YAAaj3C,EAAQ,SAQ1CI,EAAQsnI,gBAMNC,WAAY,WAMZC,SAAU,WAMVC,gBAAiB,gBAMjBC,wBAAyB,wBAMzBC,yBAA0B,0BAI5B3nI,EAAQc,MAAM,iBACZ4xB,MAAS1yB,EAAQsnI,eAAeI,gFA+DlC1nI,EAAQ82C,YACNuwB,UACEr+D,IAAO,eACPyD,OAAU,kBACVm7H,WAAc,uBACdC,YAAe,wBACfC,qBAAwB,6BACxBC,cAAiB,2BAEnB9zG,WAAY,qBACZmjB,YAAaiwF,EACbjgE,YAAY,GAIdpnE,EAAQwnE,UAAU,WAAYxnE,EAAQ82C,YAMtC92C,EAAQs3C,YAAR,WA0BE,SAAAmwB,EAAYlwB,EAAU1mB,EAAYD,EAAQqP,EAAUp8B,EAAID,EACtDG,EAAgBD,EAAiB09E,EAAwBwmD,EACzDC,EAAiBC,EAAan3D,EAA0BtzC,EACxD5jB,EAASsuH,EAAehoG,GAAW,IAAA15B,EAAAvC,kGAAAqI,CAAArI,KAAAujE,GAMnCvjE,KAAKkkI,eAAiBD,EAMtBjkI,KAAKs1C,WAAa3/B,EAAQ,aAM1B3V,KAAK8E,IAML9E,KAAKuI,OAMLvI,KAAK0jI,YAAa,EAMlB1jI,KAAK2jI,eAML3jI,KAAK6jI,cAML7jI,KAAK28C,YAAchwB,EAMnB3sB,KAAKyjE,QAAU/2C,EAMf1sB,KAAKm8B,UAAYJ,EAMjB/7B,KAAKI,IAAMT,EAMXK,KAAKq8B,gBAAkBx8B,EAMvBG,KAAK6sC,iBAAmBjtC,EAMxBI,KAAKmkI,qBAAuB7mD,EAAsBv4D,WAMlD/kB,KAAKokI,gBAAkBN,EAMvB9jI,KAAKqkI,WAAaN,EAAgBC,GAMlChkI,KAAKskI,iBAAmB/qG,EAMxBv5B,KAAK8sE,0BAA4BD,EAMjC7sE,KAAKu8B,WAAaN,EAElBj8B,KAAKQ,cAAgB,IACjBd,EAAUa,IAAI,kBAChBP,KAAKQ,cAAgBd,EAAUhD,IAAI,iBAOrCsD,KAAKukI,YAAa,EAEd7kI,EAAUa,IAAI,qBAChBP,KAAKukI,WAAa7kI,EAAUhD,IAAI,mBAAd,YAOpBsD,KAAKwkI,iBAAmB,KAMxBxkI,KAAKykI,sBAAwB,KAM7BzkI,KAAK0kI,6BAA+B,KAMpC1kI,KAAK2kI,wBAA0B,KAM/B3kI,KAAK4kI,wBAML5kI,KAAK6kI,wBAML7kI,KAAK8kI,4BAOL9kI,KAAK+kI,QAAU,GAOf/kI,KAAKglI,YAOLhlI,KAAKilI,YAOLjlI,KAAKklI,WAMLllI,KAAKmlI,cAMLnlI,KAAKolI,cAMLplI,KAAKqe,SAAW,EAMhBre,KAAK4jI,qBAML5jI,KAAKqlI,wBAAyB,EAM9BrlI,KAAKslI,eAAiBjyF,EAASkG,KAAK,6BAEpCv5C,KAAKslI,eAAe1iG,GAAG,QAAS,SAACngB,GAC/B,IAAMpE,EAAWoiB,EAAEhe,EAAMgE,QAAQ2I,MAChB,KAAb/Q,GACF9b,EAAKgjI,YAAmClnH,KAO5Cre,KAAKwlI,qBAMLxlI,KAAKylI,cAMLzlI,KAAK88B,YAML98B,KAAK0lI,eAtST,OAAAniE,EAAAppC,SAAA,6PAAAopC,EAAA5oE,UA6SEm7C,QA7SF,WA6SY,IAAA5vC,EAAAlG,KAERA,KAAKyjE,QAAQx2C,OAAO,kBAAM/mB,EAAK4mE,0BAA0B7oB,aAAa,WACpE/9C,EAAKg+H,eAAe11G,MAAQ1yB,EAAQsnI,eAAeI,wBACnDt9H,EAAKu/H,cAAgB,OAGvBzlI,KAAKyjE,QAAQx2C,OAAO,kBAAM/mB,EAAKqC,QAAQ,SAACA,GACtCrC,EAAKy/H,kBAAkBp9H,KAIzBvI,KAAK28C,YAAYpvB,IAAI,gBAAiB,SAAC9K,EAAOpS,GAC5CnK,EAAK0/H,MAAL,GAAcv1H,KAIhBrQ,KAAK28C,YAAYpvB,IAAI,iBAAkB,WACrCrnB,EAAKm4B,WAGPr+B,KAAKu8B,WAAWx2B,sBAAsBlC,KAAK,SAACqgC,GAC1Ch+B,EAAK42B,YAAcoH,IAGrBlkC,KAAKu8B,WAAW12B,kBAAkBhC,KAAK,SAACgiI,GACtC3/H,EAAKw/H,eAAiBG,IAMxB,IAEIC,SACA9lI,KAAK0jI,aAIPoC,EAAgB,kBAAM5/H,EAAKmY,WAG7Bre,KAAKwlI,qBAAuBxlI,KAAKokI,gBAAgB3E,2BAV/B,kBAAMv5H,EAAKi/H,YAWhBnlI,KAAK+lI,WAAW1oI,KAAK2C,MAAO8lI,IAxV7CviE,EAAA5oE,UAgWEorI,WAhWF,SAgWapG,GAKT,GAFAqG,EAAA,EAAYviI,OAAOzD,KAAKolI,WAAWzhD,QACnCqiD,EAAA,EAAYviI,YAAiCvD,IAA1BF,KAAKolI,WAAW/vG,QAC9Br1B,KAAKqlI,0BACsB,IAA3BrlI,KAAKolI,WAAW/vG,OAAgB4wG,EAAA,EAAiBjmI,KAAKolI,WAAWzhD,OAAQ3jF,KAAKolI,WAAW/vG,QAAS,CACrG,IAAMqsG,EAAU/B,EAAW5mH,KACrB2zG,EAAiBiT,EAAWC,UAAUt6G,WAC5CtlB,KAAKolI,WAAW/vG,MAAQr1B,KAAKkmI,iBAAiBxE,EAAShV,GAEzD,OAAO1sH,KAAKolI,WAAW/vG,OA3W3BkuC,EAAA5oE,UAoXEgrI,kBApXF,SAoXoBp9H,GAAQ,IAAAvB,EAAAhH,KACpBuI,GACGvI,KAAKylI,eACRzlI,KAAKmmI,mBAEPnmI,KAAKylI,cAAc5hI,KAAK,SAAC41C,GAElBzyC,EAAKuB,SAGVvB,EAAKk9H,eAAe11G,MAAQ1yB,EAAQsnI,eAAeC,WAEnDr8H,EAAKo/H,mBAAmB3sF,GACxBzyC,EAAK49H,wBAA0ByB,EAAA,EAAgBr/H,EAAKlC,IAAK,cAAekC,EAAKw+H,sBAC7Ex+H,EAAK69H,wBAA0BwB,EAAA,EAAgBr/H,EAAKlC,IAAK,cAAekC,EAAKs/H,eAA9Ct/H,GAC/BA,EAAK89H,4BAA8BuB,EAAA,EAAgBr/H,EAAKlC,IAAIqa,UAAW,oBAAqB,WAC1FnY,EAAKq+H,wBAAyB,IAEhCr+H,EAAKlC,IAAIyhI,WACR,SAAC9sF,GAEFzyC,EAAKk9H,eAAe11G,MAAQ1yB,EAAQsnI,eAAeK,yBACnDz8H,EAAKy+H,cAAgB,SAGvBY,EAAA,EAAuBrmI,KAAK4kI,yBAC5ByB,EAAA,EAAuBrmI,KAAK6kI,yBAC5BwB,EAAA,EAAuBrmI,KAAK8kI,6BAC5B9kI,KAAKulI,YAAY,GACjBvlI,KAAK8E,IAAIyhI,WAjZfhjE,EAAA5oE,UA2ZEwrI,iBA3ZF,SA2ZmBp/H,GACf/G,KAAKylI,cAAgBzlI,KAAKqkI,WAAW/T,iBAEjCjpH,iBAAiB,EACjBJ,OAAQF,GACNG,KAAQH,EACRI,cAAiBnH,KAAKQ,gBAEtB2G,cAAiBnH,KAAKQ,kBAnahC+iE,EAAA5oE,UA+aEyrI,mBA/aF,SA+aqB3sF,GAAM,IAAAlb,EAAAv+B,KACjBjG,EAAO0/C,EAAA,KACbz5C,KAAKglI,SAAWjrI,EAAA,YAChBiG,KAAKilI,SAAWlrI,EAAA,QAChBiG,KAAKklI,QAAUnrI,EAAA,QAAgB,GAE/BiG,KAAKolI,WAAWoB,WAChBxmI,KAAKilI,SAAS/hI,QAAQ,SAACkpH,GACrB7tF,EAAK6mG,WAAWoB,QAAQ/rI,KAAK2xH,EAAOhwH,QAGtC4D,KAAKymI,iBA1bTljE,EAAA5oE,UAscE8rI,cAtcF,WAsckB,IAAA/nG,EAAA1+B,KACdA,KAAKolI,WAAWhZ,OAASpsH,KAAKklI,QAAQ9oI,KAEtC,IAAMsqI,EAAU1mI,KAAK2mI,4BAA4B,OACjDX,EAAA,EAAY3J,aAAaqK,GACzB,IAAME,EAAaF,EAAA,WACnBV,EAAA,EAAY3J,aAAauK,GACzB5mI,KAAKmlI,YAAcyB,EAAA,MAAqBA,EAAA,QAExC5mI,KAAK6mI,sBAEL,IAAMC,EAAS9mI,KAAK2mI,4BAA4B,eACjBzmI,IAA3BF,KAAKolI,WAAW0B,SAClB9mI,KAAKolI,WAAW0B,eAAuB5mI,IAAX4mI,EAC1BA,EAAS9mI,KAAK2jI,YAAL,SAGb3jI,KAAKolI,WAAWzhD,OAASijD,EAAA,WACzB5mI,KAAKolI,WAAW2B,KAAOH,EAAA,mBAEvB,IAAMlF,EAAU1hI,KAAK8E,IAAIka,UACnB0tG,EAAiB1sH,KAAK8E,IAAIqa,UAAUsM,gBAC1CzrB,KAAKolI,WAAW/vG,MAAQr1B,KAAKkmI,iBAAiBxE,EAAShV,GAEvD1sH,KAAKolI,WAAWjZ,IACXnsH,KAAKolI,WAAWjZ,KAAOnsH,KAAKolI,WAAW2B,KAAKtlH,QAAQzhB,KAAKolI,WAAWjZ,KAAO,EAC1EnsH,KAAKolI,WAAWjZ,IAAMnsH,KAAKolI,WAAW2B,KAAK,GAEjD/mI,KAAKolI,WAAW5vG,WAChBx1B,KAAKglI,SAAS9hI,QAAQ,SAACmN,GACrBquB,EAAK0mG,WAAW5vG,QAAQnlB,IAAU,IAGpCrQ,KAAK6jI,cAAgB7jI,KAAKolI,WAAL,iBAGrBplI,KAAK8E,IAAIyhI,UA1ebhjE,EAAA5oE,UAmfEksI,oBAnfF,WAmfwB,IAAA1nG,EAAAn/B,KAChB5D,SAAM4qI,SAASpqI,SAAOc,SACrBsC,KAAKolI,WAAW6B,mBACnBjnI,KAAKolI,WAAW6B,qBAElB,IAAMA,EAAmBjnI,KAAKolI,WAAW6B,iBACnCC,EAAqBD,EAAiBxrI,OAAO,EAAGwrI,EAAiB1sI,QAGvEyF,KAAKklI,QAAQ9zH,WAAWlO,QAAQ,SAACiQ,GAC/B,IAAKA,EAAA,aAA2B,CAC9B/W,KAAU+W,EAAU/W,KACpB,IAAMwoD,EAAezxC,EAAUg0H,QAM/B,OALAvqI,OAA0BsD,IAAjB0kD,GAA+C,KAAjBA,EACrCA,EAAezlB,EAAKwkG,YAAYvnI,GAGlC4qI,KAAa7zH,EAAUzV,MAErB,IAAK,SACHA,EAAiB,aAATtB,EAAuB,WAAa,OAC5C,MACF,IAAK,UACHsB,EAAO,WACP,MACF,IAAK,SACHA,EAAO,SACPd,EAAQ4kD,WAAW5kD,GACnBA,EAAQqkE,MAAMrkE,GAAS,EAAIA,EAC3B,MACF,QACEc,EAAOspI,EAIXE,EAAmBhkI,QAAQ,SAAChH,GAC1B,GAAIA,EAAEE,OAASA,GAAQF,EAAEwB,OAASA,EAChC,OAAOd,EAAQV,EAAEU,QAIrBuiC,EAAKimG,WAAW6B,iBAAiBxsI,MAC/B2B,OACAsB,OACAd,cA/hBV2mE,EAAA5oE,UA4iBEgsI,4BA5iBF,SA4iB8BvqI,GAC1B,IAAIunE,EAAO,KAMX,OALA3jE,KAAKklI,QAAQ9zH,WAAWlO,QAAQ,SAACiQ,GAC/B,GAAIA,EAAU/W,OAASA,EACrB,OAAOunE,EAAOxwD,IAGXwwD,GAnjBXJ,EAAA5oE,UA4jBE4qI,YA5jBF,SA4jBclnH,GACVre,KAAKqe,SAAW+oH,EAAA,EAAa/oH,GAAW,IAAK,KAG7Cre,KAAKslI,eAAel2G,IAAIpvB,KAAKqe,SAAS2D,YAGlChiB,KAAK0jI,WACP1jI,KAAK8E,IAAIyhI,SAETvmI,KAAK8E,IAAIqa,UAAUomH,YAAY6B,EAAA,EAAiBpnI,KAAKqe,YAtkB3DklD,EAAA5oE,UAklBE2rI,eAllBF,SAklBiBviE,GAAG,IAAAjkC,EAAA9/B,KACVm/D,EAAgB4E,EAAE5E,cAClB5/C,EAAYvf,KAAK8E,IAAIqa,UAAUK,YACrC,GAAIxf,KAAKuI,QAAU42D,EAAciqB,QAAUjqB,EAAcipB,UAAY7oE,EAAW,CAC9E,IAAMQ,EAAS/f,KAAK8E,IAAIy7F,uBAAuBhhF,GACzCu7B,EAAQipB,EAAEjpB,MAEhB,GAAqC,OAAjC96C,KAAK2kI,wBACP3kI,KAAK0kI,6BAA+B,SAC/B,CAEL1kI,KAAKm8B,UAAUkC,OAAOr+B,KAAK2kI,yBAE3B,IAAM0C,EAAMrnI,KAAK0kI,6BAA6B,GAAK3kH,EAAO,GACpDunH,EAAMtnI,KAAK0kI,6BAA6B,GAAK3kH,EAAO,GACpDwnH,EAAMzsF,EAAM,GAAK/6B,EAAO,GACxBynH,EAAM1sF,EAAM,GAAK/6B,EAAO,GACxB0nH,EAAa/sH,KAAK2uC,KAAK3uC,KAAK+X,IAAI40G,EAAK,GAAK3sH,KAAK+X,IAAI60G,EAAK,IACxDI,EAAahtH,KAAK2uC,KAAK3uC,KAAK+X,IAAI80G,EAAK,GAAK7sH,KAAK+X,IAAI+0G,EAAK,IAE1DltH,GAAS+sH,EAAME,EAAMD,EAAME,IAAQC,EAAaC,GACpDptH,EAAQA,GAAS,GAFF+sH,EAAMG,EAAMF,EAAMC,EAAO,EAAI,GAAK,GAEpB7sH,KAAK0uC,KAAK9uC,GAAS,EAChD,IAAMqtH,EAAQD,EAAa,IACrBE,EAAYltH,KAAK2b,MAAM+wG,EAAA,EAAiB9sH,GAASqtH,GAGvD3nI,KAAKulI,YAAYvlI,KAAKqe,SAAWupH,GACjC5nI,KAAKyjE,QAAQtgB,UAGfnjD,KAAK2kI,wBAA0B3kI,KAAKm8B,UAAU,WAC5C2D,EAAK6kG,wBAA0B,MAC9B,KAEH3kI,KAAK0kI,6BAA+B5pF,IApnB1CyoB,EAAA5oE,UA+nBEirI,MA/nBF,SA+nBQv1H,GAEJ,GAAIrQ,KAAKkkI,eAAe11G,QAAU1yB,EAAQsnI,eAAeE,SAAzD,CAGAtjI,KAAKwkI,iBAAmBxkI,KAAKI,IAAIQ,QACjCZ,KAAKkkI,eAAe11G,MAAQ1yB,EAAQsnI,eAAeE,SAEnD,IAAM5B,EAAU1hI,KAAK8E,IAAIka,UACnB0tG,EAAiB1sH,KAAK8E,IAAIqa,UAAUsM,iBAAmB,EACvD4J,EAAQr1B,KAAKolI,WAAW/vG,OAASr1B,KAAKkmI,iBAAiBxE,EAAShV,GAGhEL,GACJzwC,WAHiB57E,KAAK6nI,kBAYxB,GANI7nI,KAAKolI,WAAW6B,kBAClBjnI,KAAKolI,WAAW6B,iBAAiB/jI,QAAQ,SAAC4kI,GACxCzb,EAAiByb,EAAM1rI,MAAQ0rI,EAAMlrI,QAIrCoD,KAAKolI,WAAW0B,OAEH,OADA9mI,KAAK+nI,WAAW1yG,KAE7Bg3F,EAAA,OAA6BrsH,KAAK+nI,WAAW1yG,IAIjD2wG,EAAA,EAAYtsH,aAAa1Z,KAAKolI,WAAWjZ,KACzC6Z,EAAA,EAAYnpH,aAAa7c,KAAKolI,WAAWhZ,QAGzC,IAAMtnH,EAAM,IAAIkjI,EAAA,MAChBljI,EAAImjI,QAAQjoI,KAAK8E,IAAIqa,WAIrB,IAHA,IAAM+oH,EAAYloI,KAAK6sC,iBAAiBxiB,cAAcrqB,KAAK8E,IAAIklB,iBACzDm+G,KACFC,GAAqB,EAChB/tI,EAAI,EAAG+G,EAAK8mI,EAAU3tI,OAAQF,EAAI+G,EAAI/G,IAAK,CAClD,IAAIsI,EAAQulI,EAAU7tI,GAChBwI,EAAWF,EAAMjG,IAAI,YAC3B,GAAImG,EAAU,CACZ,IAAMwlI,EAAcxlI,EAASuB,UACvBkkI,EAAczlI,EAAS0lI,aAAe1lI,EAAS2B,OACrD,GAAI6jI,GAAeC,EAAa,CAC9B,IAAMjkI,EAASrE,KAAK88B,YAAYurG,GAC5BhkI,EACF1B,EAAQ3C,KAAK6sC,iBAAiBtoC,oBAC5BF,EAAOX,IACP4kI,EACAjkI,EAAOC,UACPD,EAAO3G,MAGTsG,QAAQC,MAAM,qBAAsBokI,IAOtC1lI,aAAiB6lI,EAAA,IAAkD,IAAlC7lI,EAAMjG,IAAI,sBAC7C0rI,GAAqB,GAGvBD,EAAc1tI,KAAKkI,GAErBmC,EAAI2jI,cAAc,IAAIC,EAAA,GACpBlkI,OAAQ2jI,EACRpjG,iBAAoBqjG,KAGtB,IAAMO,EAAO3oI,KAAKqkI,WAAWnY,WAAWpnH,EAAKuwB,EAAOr1B,KAAKolI,WAAWjZ,IAClEnsH,KAAKolI,WAAWhZ,OAAQ/7G,EAAQg8G,GAG5B7nH,KACNxE,KAAKqkI,WAAWrX,YAAYxoH,EAAQxE,KAAKmkI,qBACvCzX,GACEloH,EAAOjK,OAAS,GAClBouI,EAAKv3H,WAAWtM,IAAIN,OAAO2S,QAAQ3S,EAAO,IAG5CxE,KAAKqkI,WAAWnU,aAAayY,GAC3BtlG,QAASrjC,KAAKwkI,iBAAiB1jI,UAC7B+C,KACF7D,KAAK4oI,2BAA2BvrI,KAAK2C,MACrCA,KAAK6oI,yBAAyBxrI,KAAK2C,OAIrC8E,EAAI69E,UAAU,QA3tBlBpf,EAAA5oE,UAmuBE0jC,OAnuBF,WAquBkC,OAA1Br+B,KAAKwkI,kBACPxkI,KAAKwkI,iBAAiBtgI,UAKW,OAA/BlE,KAAKykI,uBACPzkI,KAAKm8B,UAAUkC,OAAOr+B,KAAKykI,uBAGzBzkI,KAAK+kI,QAAQxqI,OAAS,GACxByF,KAAKqkI,WAAWhmG,OAAOr+B,KAAK+kI,SAG9B/kI,KAAK8oI,qBAnvBTvlE,EAAA5oE,UA2vBEmuI,kBA3vBF,SA2vBoBC,GAChB/oI,KAAKkkI,eAAe11G,MAAQu6G,GAAkBjtI,EAAQsnI,eAAeC,WACrErjI,KAAK+kI,QAAU,IA7vBnBxhE,EAAA5oE,UAuwBEktI,eAvwBF,WAwwBI,IAAImB,SAAejvI,SAAMkvI,SACnBC,KA2BN,OA1BgBlpI,KAAKskI,iBAAiBzpG,QAC9B33B,QAAQ,SAASmhB,GACvBtqB,KACAkvI,KACA5kH,EAAOpH,SAAS/Z,QAAQ,SAAS2T,EAASxc,GACxC2rI,EAAA,EAAYviI,OAAOoT,GACnB,IAAM4F,EAAasmH,EAAA,EAAsBvmH,yBAAyB3F,GACxD,IAANxc,IACF4uI,EAAUvuI,OAAOs/C,KAAKv9B,GAAY3X,IAAI,SAAyB29E,GAC7D,OAAOziF,KAAKs1C,WAAWmtC,IACtBziF,OAELjG,EAAKU,KAAKC,OAAOs/C,KAAKv9B,GAAY3X,IAAI,SAAAgF,GAAA,OAAO2S,EAAW3S,OACvD9J,MACCipI,EAAQ1uI,SACVyuI,GAEIj7F,MAAO/tC,KAAKs1C,WAAWjxB,EAAO3e,OAC9ByjI,OACEF,UACAlvI,SAGNmvI,EAAczuI,KAAKuuI,KAEpBhpI,MACIkpI,GApyBX3lE,EAAA5oE,UAkzBEurI,iBAlzBF,SAkzBmBxE,EAAShV,GACxB,IAAM/oC,EAAS3jF,KAAKolI,WAAWzhD,OAAOrmF,QACtC,YAAgB4C,IAAZwhI,QAA4CxhI,IAAnBwsH,EACpB1sH,KAAKokI,gBAAgB3C,gBAAgBC,EAAShV,EACnD1sH,KAAKmlI,WAAYxhD,EAAO1+E,WAErBjF,KAAKolI,WAAWzhD,OAAO,IAxzBlCpgB,EAAA5oE,UAg0BEiuI,2BAh0BF,SAg0B6BnvF,GACzB,IACMsyE,EADoDtyE,EAAK1/C,KAC5CgyH,IACnBia,EAAA,EAAYviI,OAAOsoH,EAAIxxH,OAAS,GAChCyF,KAAK+kI,QAAUhZ,EACf/rH,KAAKopI,WAAWrd,IAr0BpBxoD,EAAA5oE,UA60BEyuI,WA70BF,SA60Bard,GACT/rH,KAAKwkI,iBAAmBxkI,KAAKI,IAAIQ,QACjCZ,KAAKqkI,WAAWjU,UAAUrE,GACxB1oF,QAASrjC,KAAKwkI,iBAAiB1jI,UAC7B+C,KACF7D,KAAKqpI,wBAAwBhsI,KAAK2C,KAAM+rH,GACxC/rH,KAAK6oI,yBAAyBxrI,KAAK2C,QAn1BzCujE,EAAA5oE,UA61BE0uI,wBA71BF,SA61B0Btd,EAAKtyE,GAAM,IAAApZ,EAAArgC,KAC3BspI,EAAoD7vF,EAAK1/C,KAClDuvI,EAAOr5H,KAEG,SAAjBq5H,EAAOh+D,QAETnuE,OAAOoiE,SAASwuD,KAAO/tH,KAAKqkI,WAAWhU,aAAatE,GACpD/rH,KAAK8oI,sBAEL9kI,QAAQC,MAAMqlI,EAAOrlI,OACrBjE,KAAK6oI,4BAIP7oI,KAAKykI,sBAAwBzkI,KAAKm8B,UAAU,WAC1CkE,EAAK+oG,WAAWrd,IACf,KAAM,IA72BfxoD,EAAA5oE,UAq3BEkuI,yBAr3BF,WAs3BI7oI,KAAK8oI,kBAAkBhtI,EAAQsnI,eAAeG,kBAt3BlDhgE,EAAA5oE,UA+3BEotI,WA/3BF,SA+3Ba1yG,GAAO,IAAAwL,EAAA7gC,KACV8mI,GAAUyC,YACZA,SAAqB/gH,SAAWghH,SAC9B3pI,EAAiBG,KAAKq8B,gBAGtBgI,EAAiBrkC,KAAK6sC,iBAAiB/iB,gBAAgB9pB,KAAK8E,IAChEu4B,EAAA,EAAQ24C,qBAkDV,OAjDeh2E,KAAK6sC,iBAAiBxiB,cAAcga,GAG5Cp/B,UAAU/B,QAAQ,SAACP,GAExB,GADA4mI,KACI5mI,EAAM4oB,cAAgB5oB,EAAMkpB,YAE9B,GAAIlpB,aAAiB8mI,EAAA,EACnBjhH,KAAe7lB,EAAMjG,IAAI,kBACzB8sI,EAAQ3oG,EAAK6oG,wBAAwBlhH,MAEnCghH,EAAQ3oG,EAAKgM,iBAAiBniB,iBAAiB/nB,IAG7C6mI,GACFD,EAAQ9uI,MACN2B,KAAQyD,EAAe4F,UAAU+iB,GACjCghH,OAAUA,SAGT,CACL,IAAMnlH,EAA0C1hB,EAAMkpB,YAEzCxH,EAAO0H,YAAP,OAA6B1V,MAAM,KACrCnT,QAAQ,SAAC9G,IAClBotI,EAAQ3oG,EAAK6oG,wBAAwBttI,MAEnCotI,EAAQ3oG,EAAKgM,iBAAiBjiB,gBAAgBvG,EAAOgpG,SAAUjxH,EAC7Di5B,IAIAm0G,GAAyB,IAAhBptI,EAAK7B,QAChBgvI,EAAQ9uI,MACN2B,KAAQyD,EAAe4F,UAAUrJ,GACjCotI,OAAUA,OAQhBD,EAAQhvI,OAAS,GACnBusI,EAAA,QAAkBrsI,MAAM8uI,QAAWA,MAKhCzC,EAAA,QAAkBvsI,OAAS,EAAKusI,EAAS,MAx7BpDvjE,EAAA5oE,UAm8BE+uI,wBAn8BF,SAm8B0BlhH,GACtB,IAAMqc,EAAYkxE,EAAA,EAAe70G,yBAAyBlB,KAAK0lI,eAAgBl9G,GAC3EpmB,SACAyiC,GAAaA,EAAUtjC,WACzBa,EAAO2zG,EAAA,EAAep0G,iBAAiBkjC,EAAUtjC,SAAUinB,IAE7D,IAAImhH,SAIJ,OAHIvnI,GAAQA,EAAKS,WACf8mI,EAAcvnI,EAAKS,SAAS8mI,aAEvBA,GA78BXpmE,EAAA5oE,UAu9BEivI,UAv9BF,SAu9BYC,GACR,IAAIzd,SACJpsH,KAAKilI,SAAS/hI,QAAQ,SAAClH,GACrB,GAAIA,EAAEI,OAASytI,EAEb,OADAzd,EAASpwH,GACF,IAGXgE,KAAKklI,QAAU9Y,EACfpsH,KAAKymI,iBAh+BTljE,EAAA5oE,UA0+BEmvI,YA1+BF,SA0+Bcj/G,GACV,QAAkB3qB,IAAd2qB,EAAyB,CAC3B,IAAM62G,EAAU1hI,KAAK8E,IAAIka,YAAc,EAAG,GAC1Chf,KAAKolI,WAAW/vG,MAAQxK,EACxB,IAAM/Y,EAAM9R,KAAKokI,gBAAgBjC,qBAAqBT,EAAS1hI,KAAKmlI,WAAYt6G,GAC1Ek/G,EAAc/pI,KAAK8E,IAAIqa,UAAU6qH,oBAAoBl4H,EAAK,EAAG,GACnE9R,KAAK8E,IAAIqa,UAAU8qH,cAAcF,GAEjC/pI,KAAK8E,IAAIyhI,SACTvmI,KAAKqlI,wBAAyB,EAEhC,OAAOrlI,KAAKolI,WAAW/vG,OAr/B3BkuC,EAAA5oE,UA8/BEuvI,OA9/BF,SA8/BS/d,GACLnsH,KAAKolI,WAAWjZ,IAAMA,GA//B1B5oD,EAAA5oE,UA0gCEwvI,QA1gCF,SA0gCUC,GACN,OAAOpqI,KAAKkkI,eAAe11G,QAAU1yB,EAAQsnI,eAAegH,IA3gChE7mE,EAAA,GA+gCAznE,EAAQi0B,WAAW,qBAAsBj0B,EAAQs3C,aAGjDz1C,EAAA,0JCxsCA0sI,EAAA3uI,EAAA,IAiBMI,EAAUmM,QAAQlM,OAAO,qBAC7BuuI,EAAA,EAAoBvuI,OAAOK,KAC3BmkB,EAAA,EAAgBnkB,OA0ClBN,EAAQytD,WAAa,WACnB,OACEx5B,WAAY,8BACZkjB,kBAAkB,EAClBJ,OACEtqC,OAAU,2BACV0U,SAAY,6BACZy4B,SAAY,6BACZ5wC,IAAO,2BAKbhJ,EAAQq3C,UAAU,oBAAqBr3C,EAAQytD,YAiB/CztD,EAAQs3C,YAAc,SAASvzC,EAAgBgqD,EAAUl0C,EAAS+W,EAChEqP,EAAU0X,GAAiB,IAAAlxC,EAAAvC,KAM3BA,KAAKuI,OAMLvI,KAAKid,SAMLjd,KAAK01C,SAML11C,KAAK8E,IAML9E,KAAKq8B,gBAAkBx8B,EAMvBG,KAAK8zF,SAAWjqC,EAMhB7pD,KAAKuqI,QAAU50H,EAMf3V,KAAK4zC,OAASlnB,EAMd1sB,KAAK6zC,SAAW9X,EAMhB/7B,KAAKi0C,iBAAmBR,EAQxBzzC,KAAKwqI,aAIL99G,EAAOO,OACL,kBAAM1qB,EAAKgG,QACX,SAACqY,GACCre,EAAKioI,aAAa7pH,UAAUC,MA5ElC9kB,EAAQs3C,kGAqFRt3C,EAAQs3C,YAAYz4C,UAAUm7C,QAAU,WACtC91C,KAAKuI,QAAyB,IAAhBvI,KAAKuI,OACnB,IAAM1I,EAAiBG,KAAKq8B,gBAGxB2F,SACJ,GAAIhiC,KAAK01C,WAAa+0F,EAAA,EAAiBxsI,OACnC+B,KAAK01C,WAAa+0F,EAAA,EAAiB1sI,YAErCikC,EAAc,IAAI0oG,EAAA,GAChBhtI,KAA2C,eAExC,GAAIsC,KAAK01C,WAAa+0F,EAAA,EAAiB5sI,aAC1CmC,KAAK01C,WAAa+0F,EAAA,EAAiB3sI,kBACrC,CACA,IAAMo1B,EAAUrzB,EAAe4F,UAAU,iCACnC+jG,EAAU3pG,EAAe4F,UAC7B,4EAIFu8B,EAAc,IAAI2oG,EAAA,EAChB3qI,KAAKuqI,QAAQ,kBACb1qI,GAEEwX,MAAO,IAAIgzH,EAAA,EACXt5G,SAAU/wB,KAAK8zF,SAAL,kBAAgC5gE,EAAhC,SAAAlzB,CAAiDA,KAAK4zC,QAAQ,GACxEljB,YAAa1wB,KAAK8zF,SAAL,kBAAgC0V,EAAhC,SAAAxpG,CAAiDA,KAAK4zC,QAAQ,UAG1E,GAAI5zC,KAAK01C,WAAa+0F,EAAA,EAAiBvsI,SAC1C8B,KAAK01C,WAAa+0F,EAAA,EAAiBzsI,cACrC,CACA,IAAMk1B,EAAUrzB,EAAe4F,UAAU,+BACnC+jG,EAAU3pG,EAAe4F,UAC7B,gFAIFu8B,EAAc,IAAI4oG,EAAA,EAChB5qI,KAAKuqI,QAAQ,kBACb1qI,GAEEwX,MAAO,IAAIgzH,EAAA,EACXt5G,SAAU/wB,KAAK8zF,SAAL,kBAAgC5gE,EAAhC,SAAAlzB,CAAiDA,KAAK4zC,QAAQ,GACxEljB,YAAa1wB,KAAK8zF,SAAL,kBAAgC0V,EAAhC,SAAAxpG,CAAiDA,KAAK4zC,QAAQ,KAKjFpwC,EAAA,EAAYC,OAAOu+B,GAEnBA,EAAYrhB,UAAU3gB,KAAKuI,QAC3BvI,KAAKwqI,aAAexoG,EACpBhiC,KAAK8E,IAAI6uB,eAAeqO,GAExB,IAAMxU,EAAMq9G,EAAA,EAAc7qI,MACtBgiC,aAAuB0oG,EAAA,EACzB1qI,KAAKi0C,iBAAiBrQ,eACpBpW,EACAs9G,EAAA,EACE9oG,EACA,UACAhiC,KAAK+qI,eACL/qI,QAGKgiC,aAAuB2oG,EAAA,GAC/B3oG,aAAuB4oG,EAAA,IACxB5qI,KAAKi0C,iBAAiBrQ,eACpBpW,EACAs9G,EAAA,EACE9oG,EACA,aACAhiC,KAAK+qI,eACL/qI,QAaRlE,EAAQs3C,YAAYz4C,UAAUowI,eAAiB,SAAStoH,GACtD,IAAIkmF,SAGFA,EAFElmF,EAAM5L,QAEC4L,EAAM5L,QAGN4L,EAAMkB,OAAO9M,QAExBrT,EAAA,EAAYC,OAAOklG,GAGnB,IAAItuF,EAAWsuF,EAAOvtF,cAChB1d,EAAO2c,EAAS/C,UAClBtX,KAAK01C,SAASj0B,QAAQ,UAAY/jB,EAAK+jB,QAAQ,WACjDpH,EAAW2wH,EAAA,EAAUC,QAAQ5wH,IAE/B,IAAMxD,EAAU,IAAImH,EAAA,EAAU3D,GAC1Bra,KAAKid,oBAAoBiuH,EAAA,EAC3BlrI,KAAKid,SAASxiB,KAAKoc,GAEnB7W,KAAKid,SAASwH,WAAW5N,IAQ7B/a,EAAQs3C,YAAYz4C,UAAUqpE,WAAa,WAAW,IAAA99D,EAAAlG,KACpDA,KAAK6zC,SAAS,WACZ,IAAMrmB,EAAMq9G,EAAA,EAAA3kI,GACZA,EAAK+tC,iBAAiBnQ,iBAAiBtW,GACvCtnB,EAAKskI,aAAa7pH,WAAU,GAC5Bza,EAAKpB,IAAI4uB,kBAAkBxtB,EAAKskI,eAC/B,IAGL1uI,EAAQi0B,WAAW,8BAA+Bj0B,EAAQs3C,aAG1Dz1C,EAAA,4DCtSM7B,UAXNJ,EAAA,KAWgBuM,QAAQlM,OAAO,sBAAuB,aAgBtDD,EAAQ82C,WAAa,WACnB,OACEqM,SAAU,IACVlvB,WAAYj0B,EAAQs3C,YACpBH,kBAAkB,EAClBJ,OACEzqC,QAAW,gCAKjBtM,EAAQq3C,UAAU,qBAAsBr3C,EAAQ82C,YAahD92C,EAAQs3C,YAAc,SAASC,EAAUxzC,GAKvCG,KAAK2zC,SAAWN,EAOhBrzC,KAAKq8B,gBAAkBx8B,EAOvBG,KAAKoI,SAnBPtM,EAAQs3C,kDA0BRt3C,EAAQs3C,YAAYz4C,UAAUm7C,QAAU,WACtC,IAAMC,EAAO/1C,KAAKq8B,gBAAgB2Z,qBAClCvV,EAAEwV,eAAeC,UAAUH,GAC3BtV,EAAEwV,eAAeE,iBAAiB,IAAIg1F,EAAA,GACV,iBAAjBnrI,KAAKoI,UACdpI,KAAKoI,QAAUH,QAAQmjI,SAASprI,KAAKoI,UAEvCpI,KAAK2zC,SAASsC,eAAej2C,KAAKoI,UAGpCtM,EAAQi0B,WAAW,+BACjBj0B,EAAQs3C,aAGVz1C,EAAA,gFC3FA0tI,EAAA3vI,EAAA,KAQMI,EAAUmM,QAAQlM,OAAO,kBAC7BsvI,EAAA,EAAgCjvI,KAChCkvI,EAAA,EAAoBvvI,OAAOK,OA0B7B,SAASmvI,EAA0B3+G,EAAQ2+G,GACzC,OAAOA,EAA0B3+G,GAvBnC9wB,EAAQ22C,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,mCAAoCj3C,EAAQ,SAIjEI,EAAQc,MAAM,4BAKZ,SAACgwB,GACC,IAAMsmB,EAActmB,EAAA,0BACpB,YAAuB1sB,IAAhBgzC,EAA4BA,EACjC,sFAiCNp3C,EAAQ82C,YACN7iB,WAAY,uCACZozC,UACE/xD,WAAc,4BACdo6H,SAAY,0BACZ30H,QAAW,0BAEb+oC,SACE6rF,KAAQ,KAEVv4F,YAAaq4F,GAGfzvI,EAAQwnE,UAAU,iBAAkBxnE,EAAQ82C,YAa5C92C,EAAQs3C,YAAc,SAAS1mB,EAAQ+mB,GAOrCzzC,KAAKoR,WAOLpR,KAAKwrI,UAAW,EAOhBxrI,KAAK6W,QAQL7W,KAAKyc,WAMLzc,KAAK4zC,OAASlnB,EAMd1sB,KAAKi0C,iBAAmBR,EAYxBzzC,KAAK0rI,WAAY,GArDnB5vI,EAAQs3C,iDA4DRt3C,EAAQs3C,YAAYz4C,UAAUm7C,QAAU,WACtC91C,KAAKyc,WAAazc,KAAK6W,QAAQ6F,gBAG/B,IAAM8Q,EAAM5J,EAAA,EAAc5jB,MAC1BA,KAAKi0C,iBAAiBrQ,eACpBpW,EACA5jB,EAAA,EAAgB5J,KAAK6W,QAAS,iBAAkB7W,KAAKs8C,6BAA8Bt8C,QAUvFlE,EAAQs3C,YAAYz4C,UAAUgxI,kBAAoB,SAASvvI,GACzD4D,KAAK0rI,WAAY,EACjB,IAAM9uI,EAAQoD,KAAKyc,WAAWrgB,GAC9B4D,KAAK6W,QAAQjU,IAAIxG,EAAMQ,GACvBoD,KAAK0rI,WAAY,GAOnB5vI,EAAQs3C,YAAYz4C,UAAUqpE,WAAa,WACzC,IAAMx2C,EAAM5J,EAAA,EAAc5jB,MAC1BA,KAAKi0C,iBAAiBnQ,iBAAiBtW,IAQzC1xB,EAAQs3C,YAAYz4C,UAAU2hD,6BAA+B,SAAS/1B,GAChEvmB,KAAK0rI,YAGT1rI,KAAKyc,WAAW8J,EAAIzc,KAAOyc,EAAIE,OAAO/pB,IAAI6pB,EAAIzc,KAC9C9J,KAAK4zC,OAAOqF,WAIdn9C,EAAQi0B,WAAW,2BAA4Bj0B,EAAQs3C,aAGvDz1C,EAAA,0ECpMAouE,EAAArwE,EAAA,IAQMI,EAAUmM,QAAQlM,OAAO,sBAC7B6vI,EAAA,EAAsB7vI,OAAOK,OA2B/BN,EAAQytD,WAAa,WACnB,OACEx5B,WAAY,yCACZ8iB,OAAO,EACPI,kBACEh2B,SAAY,iCAMlBnhB,EAAQq3C,UAAU,qBAAsBr3C,EAAQytD,YAehDztD,EAAQs3C,YAAc,SAASC,EAAU3zC,EAAWgtB,EAClD0a,GAAmB,IAAA7kC,EAAAvC,KAMnBA,KAAKid,SAMLjd,KAAK2zC,SAAWN,EAEhB,IACM/qB,GAAM,qBADA4xC,EAAA,EAAcl6D,OACauH,KAAK,KAM5CvH,KAAKy9C,IAAMn1B,EAMXtoB,KAAKgoG,eAAiB5gE,EAEtB,IAAI5R,SAoBJ,GAlBEA,EADE91B,EAAUa,IAAI,4BACNb,EAAUhD,IAAI,6BAEbkvI,EAAA,EAAsBzuH,WAAWG,KAO9Ctd,KAAKk1C,MAAQ,KAMbl1C,KAAK+2E,UAGDvhD,EAAQj7B,OAAS,EAAG,CACtB84C,EAASswB,KAAK,KAAMr7C,GACpB,IAAMujH,EAAQprG,EAAE,UACd09B,MAAS,gBACT2tE,kBAAmBxjH,IAClBi2C,SAASlrB,EAAShmB,SAAS,IAE9BrtB,KAAKk1C,MAAQ22F,EACb,IAAIE,SAEJv2G,EAAQtyB,QAAQ,SAACmN,GACf07H,EAAQtrG,EAAE,UACP89B,SAASstE,GACT3hF,OAAOzpB,EAAE,SACRstF,KAAQ,IACRl1G,KAAQxI,IAEPuyB,IACE,QAASta,GAAI/gB,KAAK,KACnBhF,EAAKypI,qBAAqB3uI,KAA1BkF,EAAqC8N,KAG3C9N,EAAKw0E,OAAOt8E,KAAKsxI,KAQrB/rI,KAAKglI,SAAWxvG,EAEhB6d,EAASzQ,IAAI,QAASta,GAAI/gB,KAAK,KAAMvH,KAAKisI,oBAAoB5uI,KAAK2C,OAEnE0sB,EAAOa,IAAI,WAAYvtB,KAAKm3C,eAAe95C,KAAK2C,QApFlDlE,EAAQs3C,0EAmGRt3C,EAAQs3C,YAAYz4C,UAAUsxI,oBAAsB,WAAW,IAAA/lI,EAAAlG,KAEvDid,EAAWjd,KAAKid,SAASiN,WAE/B,GAA6B,IAAzBlqB,KAAKglI,SAASzqI,OAChByF,KAAKgoG,eAAehrF,OAAOC,EAAUjd,KAAKglI,SAAS,SAC9C,GAAwB,IAApB/nH,EAAS1iB,OAAc,CAChC,IACM4gB,EADU8B,EAAS,GACJ7B,cACjB2wH,SACJ/rI,KAAKglI,SAAS9hI,QAAQ,SAACmN,EAAQhW,GAC7B0xI,EAAQ7lI,EAAK6wE,OAAO18E,GAChBgW,IAAWu7H,EAAA,EAAsBzuH,WAAWC,MAC1CjC,aAAgB+wH,EAAA,GAChB/wH,aAAgB4wD,EAAA,EAClBggE,EAAMl+C,YAAY,YAElBk+C,EAAMtiF,SAAS,iBAezB3tD,EAAQs3C,YAAYz4C,UAAUqxI,qBAAuB,SAAS37H,EAAQoS,GACpE,IAAKge,EAAEhe,EAAMgE,OAAO0lH,eAAezrG,SAAS,YAAa,CACvD,IAAMzjB,EAAWjd,KAAKid,SAASiN,WAC/BlqB,KAAKgoG,eAAehrF,OAAOC,EAAU5M,KASzCvU,EAAQs3C,YAAYz4C,UAAUw8C,eAAiB,WAC7C,IAAM7uB,EAAKtoB,KAAKy9C,IAEhBz9C,KAAK2zC,SAAS4pE,KAAK,QAASj1F,GAAI/gB,KAAK,MAEjCvH,KAAKk1C,QACPl1C,KAAKk1C,MAAMzG,SACXzuC,KAAK+2E,OAAO7zE,QAAQ,SAAC6oI,GACnBA,EAAMxuB,KAAK,QAASj1F,GAAI/gB,KAAK,QAE/BvH,KAAK+2E,OAAOx8E,OAAS,EACrByF,KAAKk1C,MAAQ,OAKjBp5C,EAAQi0B,WACN,+BAAgCj0B,EAAQs3C,aAG1Cz1C,EAAA,6ECjOAgnC,EAAAjpC,EAAA,GASMI,EAAUmM,QAAQlM,OAAO,mBA6C/BD,EAAQ82C,WAAa,SAAS7W,GAC5B,OACEkjB,SAAU,IAMVC,KAAM,SAACrM,EAAO3mB,EAASizB,GAErB,IAAMitF,EACGv5F,EAAM1lB,MAAMgyB,EAAA,kBACrBxa,EAAA,EAAYlhC,OAAOiM,MAAMC,QAAQy8H,IAEjCv5F,EAAMulB,iBAAiB,kBAAMg0E,GAAU,WACrCA,EAAS7xI,QAAUwhC,EAASswG,EAAiB,KAG/C,IACMjkI,EAuEN,SAAoBA,GAClB,IAAI4yC,cAEY96C,IAAZkI,EACF4yC,GAAOsxF,gBAFsB,8BAIMpsI,IAA/BkI,EAAA,kBACFA,EAAA,gBAL2B,wBAO7B4yC,EAAgD5yC,GAElD,OAAO4yC,EAlFO1U,CADMuM,EAAM1lB,MAAMgyB,EAAA,sBAG5BotF,EAAa15F,EAAM1lB,MAAMgyB,EAAA,sBACzBqtF,EAAc35F,EAAM1lB,MAAMgyB,EAAA,yBAMhC,SAASktF,IAIP,IADA,IAAM9qI,EAAW2qB,EAAQ3qB,WAChBlH,EAAI,EAAGA,EAAIkH,EAAShH,SAAUF,EACrC4N,QAAQikB,QAAQ3qB,EAASlH,IAAIN,KAAK,MAAOM,GAG3C,IAAMoyI,EAAkBhsG,EAAEvU,GAGtBugH,EAAgB1yI,KAAK,iBACvB0yI,EAAgBlvB,IAAI,cACpBkvB,EAAgBL,SAAS,YAG3B,IAAMM,GACJC,KAAQ,IACRpD,SACEqD,qBAAsBxkI,EAAA,mBAKtBA,EAAA,kBACFskI,EAAA,WAAgCtkI,EAAA,iBAI9BA,EAAA,uBACFskI,EAAA,YAAiCtkI,EAAA,qBACjCskI,EAAA,sBAA0C,GAG5CD,EAAgBL,SAASM,GAIzBD,EAAgB7pG,GAAG,aAAc,SAACngB,EAAOoqH,GACvC,IAAMC,EAAWrsG,EAAEosG,EAAGnqI,KAAK,IAAI3I,KAAK,OAC9BgzI,EAAWF,EAAGnqI,KAAK4mB,QAGzBmX,EAAEosG,EAAGnqI,KAAK,IAAI3I,KAAK,MAAOgzI,GAG1Bl6F,EAAMoG,OAAO,WACXmzF,EAAS3wI,OAAOsxI,EAAU,EAAGX,EAAS3wI,OAAOqxI,EAAU,GAAG,MAIxDP,aAAsBS,UACxBT,EAAWrxI,MAAMsxI,GAActgH,EAASkgH,UAhFpDtwI,EAAQ82C,gCA4GR92C,EAAQq3C,UAAU,eAAgBr3C,EAAQ82C,YAG1Cj1C,EAAA,yECrKAjC,EAAA,SASMI,EAAUmM,QAAQlM,OAAO,kBAqB/BD,EAAQ82C,WAAa,WACnB,OACEqM,SAAU,IACVpM,OAAO,EACP9iB,WAAY,uCACZmvB,KAAM,SAACrM,EAAOsjD,EAAMh3C,EAAO8tF,GACzBA,EAAgBC,UAAUtqG,GAAG,oBAAqB,WAIhCqqG,EAAgBC,UAAUnzI,KAAK,cAC/C,QAAmBy/C,OAAQ,IAG7ByzF,EAAgBC,UAAUtqG,GAAG,sBAAuB,WAClDqqG,EAAgBE,QAAQvqH,OACxBqqH,EAAgBG,OAAQ,IAG1BH,EAAgBC,UAAUG,SACxBnpE,UAAW,OACXM,MAAM,EACNr0B,QAAS88F,EAAgBE,QACzBG,UAAWnuF,EAAA,sBAAiC,UAG1CA,EAAA,oBACF1e,EAAE0e,EAAA,oBAA6Bvc,GAAG,SAAU,WAC1CqqG,EAAgBM,mBAIpB16F,EAAMtlB,IAAI,WAAY,WACpB0/G,EAAgBC,UAAUG,QAAQ,WAClCJ,EAAgBC,UAAUM,OAAO,uBACjCP,EAAgBC,UAAUM,OAAO,0BAYzC1xI,EAAQ2xI,gBAAkB,WACxB,OACExuF,SAAU,IACVW,QAAS,gBACTV,KAAM,SAACrM,EAAOsjD,EAAMh3C,EAAO8tF,GACzBA,EAAgBC,UAAY/2C,KAWlCr6F,EAAQ4xI,iBAAmB,WACzB,OACEzuF,SAAU,IACVW,QAAS,gBACTV,KAAM,SAACrM,EAAOsjD,EAAMh3C,EAAO8tF,GACzBA,EAAgBE,QAAUh3C,EAC1BA,EAAKw3C,UAeX7xI,EAAQ8xI,mBAAqB,SAASlhH,GAoBpC,SAASmhH,EAAYC,GACf9tI,KAAKktI,UAAU,KAAOY,EAAWrnH,QACnCzmB,KAAKmtI,QAAQ9/G,SAAS,KAAOygH,EAAWrnH,OACiB,IAAzDzmB,KAAKmtI,QAAQ9/G,SAASksB,KAAKu0F,EAAWrnH,QAAQlsB,QAAgByF,KAAKotI,OACnEptI,KAAKutI,iBAlBTvtI,KAAKotI,OAAQ,EAMbptI,KAAKktI,eAAYhtI,EAMjBF,KAAKmtI,aAAUjtI,EAUf+H,QAAQikB,QAAQ,QAAQ0W,GAAG,YAAairG,EAAYxwI,KAAK2C,OAEzD0sB,EAAOa,IAAI,WAAY,WACrBtlB,QAAQikB,QAAQ,QAAQqxF,IAAI,YAAaswB,MA/B7C/xI,EAAQ8xI,sCAwCR9xI,EAAQ8xI,mBAAmBjzI,UAAU4yI,eAAiB,WACpDvtI,KAAKotI,OAAQ,EACbptI,KAAKktI,UAAUG,QAAQ,SAIzBvxI,EAAQi0B,WAAW,wBAAyBj0B,EAAQ8xI,oBACpD9xI,EAAQq3C,UAAU,cAAer3C,EAAQ82C,YACzC92C,EAAQq3C,UAAU,oBAAqBr3C,EAAQ2xI,iBAC/C3xI,EAAQq3C,UAAU,qBAAsBr3C,EAAQ4xI,kBAGhD/vI,EAAA,+PCpIA,IAAM7B,EAAUmM,QAAQlM,OAAO,aAC7BgyI,EAAA,EAAwBhyI,OAAOK,KAC/B4xI,EAAA,EAAwBjyI,OAAOK,KAC/B6xI,EAAA,EAAelyI,OAAOK,KACtB8xI,EAAA,EAAuBnyI,OAAOK,KAC9B+xI,EAAA,EAA6B/xI,KAC7BgyI,EAAA,EAAiBhyI,KACjB0mI,EAAA,EAAyB/mI,OAAOK,KAChCiyI,EAAA,EAA4BjyI,OA2B9B,SAASkyI,EAAqBj7F,EAAUzmB,EAAQ0hH,GAC9C,OAAOA,EAAqBj7F,EAAUzmB,GAnBxC9wB,EAAQyyI,sBAAwB,SAACriH,EAASizB,GACxC,IAAMjM,EAAciM,EAAA,qBACpB,YAAuBj/C,IAAhBgzC,EAA4BA,EACjC,cAGJp3C,EAAQ22C,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,aAAcj3C,EAAQ,gEAoG3CI,EAAQ82C,YACNuwB,UACEqrE,WAAc,wBACdC,YAAe,yBACf3pI,IAAO,gBACP4pI,YAAe,wBACf/iC,iBAAoB,qBACpBgjC,eAAkB,oBAClBC,YAAe,yBACfC,aAAgB,0BAChBC,uBAA0B,oCAC1BC,oBAAuB,sBACvB5gD,QAAW,qBACX1pB,MAAS,mBACTuqE,eAAkB,qBAEpBj/G,WAAY,sBACZmjB,YAAao7F,GAIfxyI,EAAQc,MAAM,uBAAwBd,EAAQyyI,uBAI9CzyI,EAAQwnE,UAAU,YAAaxnE,EAAQ82C,YAMvC92C,EAAQmzI,kBAAR,WAsBE,SAAA1rE,EAAYlwB,EAAU3mB,EAAQm9B,EAAU9tB,EAAUr8B,EAChDG,EAAgBqvI,EAAoBC,EACpC7xD,EAAuBrhD,EAAWygB,EAAgB0yF,gGAAyB/mI,CAAArI,KAAAujE,GAO3EvjE,KAAK2zC,SAAWN,EAMhBrzC,KAAK4zC,OAASlnB,EAMd1sB,KAAK8zF,SAAWjqC,EAMhB7pD,KAAK6zC,SAAW9X,EAMhB/7B,KAAKq8B,gBAAkBx8B,EAMvBG,KAAKu8B,WAAaN,EAMlBj8B,KAAK68C,gBAAkBH,EAMvB18C,KAAKqvI,gBAAkBD,EAMvBpvI,KAAKsvI,mCAAqCH,EAM1CnvI,KAAKs9E,sBAAwBA,EAM7Bt9E,KAAKS,cAEDf,EAAUa,IAAI,kBAChBP,KAAKS,cAAgBf,EAAUhD,IAAI,iBAOrCsD,KAAK6wG,oBAAsBq+B,EAM3BlvI,KAAK8E,IAML9E,KAAKuvI,WAMLvvI,KAAKgvI,eAQLhvI,KAAK4uI,YAML5uI,KAAK6uI,aAML7uI,KAAKyuI,YAMLzuI,KAAKykE,MAOLzkE,KAAKmuF,QAAU,GAOfnuF,KAAK8uI,uBAML9uI,KAAKowG,gBAAkB9yB,EAAsBt4D,oBAM7ChlB,KAAK0uI,eAML1uI,KAAK2rG,iBAML3rG,KAAKoI,SACHy+F,WAAW,GAOb7mG,KAAK2uI,eAML3uI,KAAKwvI,YAMLxvI,KAAKwuI,WAAa,GAMlBxuI,KAAKmY,MAMLnY,KAAKyvI,oBAAqB,EAM1BzvI,KAAK0vI,UAML1vI,KAAK+uI,oBAnOT,OAAAxrE,EAAAppC,SAAA,gNAAAopC,EAAA5oE,UA0OEm7C,QA1OF,WA0OY,IAAAvzC,EAAAvC,KACFH,EAAiBG,KAAKq8B,gBAC5Br8B,KAAK4uI,aAAmC,IAArB5uI,KAAK4uI,YACxB5uI,KAAK6uI,cAAqC,IAAtB7uI,KAAK6uI,kBACN3uI,IAAfF,KAAKykE,QACPzkE,KAAKykE,MAAQ,IAEfzkE,KAAKyuI,iBAAmCvuI,IAArBF,KAAKyuI,YAA4BzuI,KAAKyuI,YACvD5uI,EAAe4F,UAAU,WAG3B,IAAIkqI,EAAY3vI,KAAK8uI,uBA6CrB,GA3CEa,OADgBzvI,IAAdyvI,GACW3vI,KAAK8E,IAAIqa,UAAUkxB,iBAEpBrwC,KAAK6wG,oBAAoBhE,kBACJ8iC,GAGnC3vI,KAAK8uI,uBAAyBa,EAEzB3vI,KAAK4uI,aAER5uI,KAAK2zC,SAAS4F,KAAK,SAAS3W,GAAG,aAAc,WAC3CrgC,EAAKsiB,UAIL7kB,KAAKgvI,gBACPhvI,KAAKgvI,iBAGPhvI,KAAK4vI,cAEL5vI,KAAKowG,gBAAgBx5F,SAAS5W,KAAK6vI,gBAAgBxyI,KAAK2C,OAEpDA,KAAK2rG,kBACPmkC,EAAA,EAAa9vI,KAAKoI,QAASpI,KAAK2rG,kBAGlC3rG,KAAK+vI,gBAEL/vI,KAAK4zC,OAAO3mB,OACV,kBAAM1qB,EAAK4V,OACXnY,KAAKgwI,cAAc3yI,KAAK2C,OAG1BA,KAAK0vI,UAAY1vI,KAAKiwI,gBACpBjwI,KAAK+uI,qBAEHx/D,OAAQvvE,KAAKkwI,QAAQ7yI,KAAK2C,MAC1B84C,MAAO94C,KAAKmwI,OAAO9yI,KAAK2C,MACxBssG,cAAetsG,KAAKowI,eAAe/yI,KAAK2C,QAIxCA,KAAKS,cAAe,CACtB,IAAM4vI,EAAcrwI,KAAKS,cAAc0gD,SAAS,UAChD,GAAIkvF,EAAa,CACf,IAAIC,EAAc,EACdtwI,KAAKS,cAAc0gD,SAAS,yBAC9BmvF,EAAc94G,SAASx3B,KAAKS,cAAc0gD,SAAS,uBAAwB,KAE7E,IAAIovF,SACAvwI,KAAKS,cAAc0gD,SAAS,kBAC9BovF,EAAU/4G,SAASx3B,KAAKS,cAAc0gD,SAAS,kBAAmB,IACzDnhD,KAAKS,cAAc0gD,SAAS,cACrCovF,EAAU/4G,SAASx3B,KAAKS,cAAc0gD,SAAS,YAAa,KAE9DnhD,KAAKwwI,gBAAgBH,EAAaC,EAAaC,MA/SvDhtE,EAAA5oE,UA8TEs1I,gBA9TF,SA8TkBlB,EAAqBW,GACnC,YAA4BxvI,IAAxB6uI,EACKW,GAGPh0F,KAAMqzF,EAAoBrzF,KAC1B5C,WAAqC54C,IAA9B6uI,EAAoBj2F,MACzB42F,EAAU52F,MAAQ,WAChB42F,EAAU52F,QACVi2F,EAAoBj2F,SAExBozD,aAAc6iC,EAAoB7iC,aAClCI,cAAeyiC,EAAoBziC,cACnC/8B,YAAuCrvE,IAA/B6uI,EAAoBx/D,OAC1BmgE,EAAUngE,OAAS,SAAShpD,EAAKmiB,EAAKujE,GACpCyjC,EAAUngE,OAAOhpD,EAAKmiB,EAAKujE,GAC3B8iC,EAAoBx/D,OAAOhpD,EAAKmiB,EAAKujE,IAEzCE,aAAc4iC,EAAoB5iC,eAhVxC5oC,EAAA5oE,UAyVEo1I,cAzVF,WA2VI,IAFc,IAAA7pI,EAAAlG,KACRH,EAAiBG,KAAKq8B,gBADdpB,EAAA,SAEL5gC,GACP,IAAMuhF,EAAa11E,EAAKwoI,YAAYr0I,GAG9Bo/F,OAAyCv5F,IAA3B07E,EAAW6d,YAA4B7d,EAAW6d,eAEhEC,EAAe9d,EAAW8d,aAAe9d,EAAW8d,gBACpDjC,KAEqB,IAAvBgC,EAAYl/F,OACdk9F,EAAQh9F,MACNszC,MAAS,GACT3oC,OAAUc,EAAKuqI,qBAGjBh3C,EAAYv2F,QAAQ,SAASslB,GAC3BivE,EAAQh9F,MACNszC,MAASvlB,EACTpjB,OAAUpF,KAAKywI,iBAAiBjoH,MAHpCtiB,GAQFwzF,EAAax2F,QAAQ,SAASq5C,GAC5Bk7C,EAAQh9F,MACNszC,MAASluC,EAAe4F,UAAU82C,EAAA,OAClCn3C,OAAUpF,KAAK0wI,cAAcn0F,EAAA,WAHjCr2C,GAOAuxF,EAAQv0F,QAAQ,SAASkC,GACvBpF,KAAKwvI,SAAS/0I,KAAKuF,KAAK2wI,gBACtBpf,kBAAmB31C,EAAW21C,kBAC9Bqf,aAAcxrI,EAAA,MACdyrI,UAAW,aACXr3C,SAAU5d,EAAW4d,SACrB7iF,WAAYilE,EAAWjlE,WACvBm6H,wBAAyBl1D,EAAWk1D,wBACpCptI,IAAKk4E,EAAWl4E,KACf0B,EAAA,UATLc,IA9BO7L,EAAI,EAAGA,EAAI2F,KAAK0uI,YAAYn0I,OAAQF,IAAK4gC,EAAzC5gC,GA4CT2F,KAAKwvI,SAAS/0I,MACZ4pB,OAAQrkB,KAAK+wI,yBAAyB/wI,KAAK8E,IAAIqa,WAC/C/iB,KAAM,cACN40I,QAAS,QACTC,WACEhjC,OAAQ,WACN,IAAMA,EAASpuG,EAAe4F,UAAU,eACxC,kDAAmDwoG,EAAnD,UAEFhH,WAAY,SAACA,GACX,IAEIziC,iCAFgByiC,EAAA,MAEhB,OAEJ,OADAziC,mCAAwCA,EAAxC,cApZVjB,EAAA5oE,UAmaEg2I,eAnaF,SAmaiB58H,EAAQo9G,GACrB,IAAMtxH,EAAiBG,KAAKq8B,gBACtB60G,EAAiBlxI,KAAK4zC,OACtBu9F,EAAUnxI,KAAK8zF,SAEfs9C,GACJv3G,MAAOve,IACP+I,OAHuBrkB,KAAKqxI,yBAAyBt9H,EAAQo9G,GAGpCpqB,YACzBiqC,QAAS,SAAC/pC,GAER,OAD2CA,EAC5BvqG,IAAIqX,EAAOylF,WAE5By3C,WACEhjC,OAAQ,WACN,QAA4B/tG,IAAxB6T,EAAO68H,aACT,MAAO,GAEP,IAAM3iC,EAASpuG,EAAe4F,UAAUsO,EAAO68H,cAC/C,wCAAyC3iC,EAAzC,UAGJhH,WAAY,SAACA,GACX,IAAMpwF,EAAqCowF,EAErCp0D,EAAQq+F,EAAepnF,MAAK,GAClCjX,EAAA,QAAmBh8B,EAEnB,IAAI2tD,2CACF3tD,EAAQna,IAAIqX,EAAOylF,UADjB,OAKJ,OAHAh1B,6CAAiD3tD,EAAQna,IAAI,eACrDqX,EAAO68H,cADf,OAGOO,EADP3sE,mCAAwCA,EAAxC,SACO2sE,CAAct+F,MAO3B,OAHI9+B,EAAO+8H,yBACThB,EAAA,EAAasB,EAAkBr9H,EAAO+8H,yBAEjCM,GA1cX7tE,EAAA5oE,UAodE+1I,cApdF,SAodgBn0F,GACZ,gBAKW1lC,GACP,IAAM4F,EAAa5F,EAAA,WACnB,QAAI4F,EAAA,WAGMA,EAAA,YAA4BA,EAAA,QAAsBtW,KAAK,SAAAmrI,GAAA,OAAOA,EAAI/0F,SAAWA,OA/d/FgnB,EAAA5oE,UA+eE81I,iBA/eF,SA+emBc,GACf,gBAKW16H,GACP,IAAM26H,EAAmB36H,EAAA,sBAEzB,YAAyB3W,IAArBsxI,SAGkBtxI,IAAlBqxI,GAGGC,IAAqBD,KA9fpChuE,EAAA5oE,UA2gBE02I,yBA3gBF,SA2gB2Bt9H,EAAQo9G,GAC/B,IAAMsgB,EAAoBzxI,KAAK8E,IAAIqa,UAAUkxB,gBAAgBgjB,UACvDw+D,EAAgB7xH,KAAK0xI,6BACrBC,EAAa3xI,KAAKsvI,mCAAmCv7H,EAAOrQ,IAAKytH,EACrEygB,EAAA,EAAWH,GAAoBG,EAAA,EAAW79H,EAAO4C,YACjD5C,EAAOw9G,kBAAmBM,GAE5B,OADA8f,EAAWE,aACJF,GAlhBXpuE,EAAA5oE,UA0hBE+2I,2BA1hBF,WA2hBI,IAAM7xI,EAAiBG,KAAKq8B,gBAC5B,OACEy1G,cAAe9xI,KAAKykE,MACpBgtD,QAAS,SAACrlB,EAAOslB,GACf,IAAMhuH,EAAMguH,EAAShuH,IACfqyC,EAAOl2C,EAAe2sH,gBAU5B,OARAkF,EAASqgB,WACP1qI,iBAAiB,GAEnBqqH,EAAShuH,IAAMsuI,EAAA,EAAmBtuI,GAChC0oG,MAASA,EACTr2D,KAAQA,EACRk8F,UAPoB,WASfvgB,KA1iBfnuD,EAAA5oE,UAqjBEo2I,yBArjBF,SAqjB2B7xH,GACvB,IAAM+tF,EAAiB/tF,EAAKmxB,gBACtBjxB,EAAS6tF,EAAeptF,YAC9B,OAAO,SAASusF,EAAO3pG,GACrB,IAAMyvI,KACAr2H,EAAc7b,KAAK6wG,oBAAoBjE,oBAAoBR,GACjE,GAAoB,OAAhBvwF,EAAJ,CAGA,IAAMopB,EAAWjlC,KAAK6wG,oBAAoB1D,4BAA4BtxF,EACpEuD,EAAQ6tF,EAAgBjtG,KAAK8uI,wBACd,OAAb7pG,IAGJitG,EAAYz3I,MACViL,MAAOmW,EAAYtU,KAAK,KACxB09B,SAAUA,EACVktG,UAAa,gBAEf1vI,EAASyvI,MACT70I,KAAK2C,OAzkBXujE,EAAA5oE,UAolBEi1I,YAplBF,WAqlBI5vI,KAAKuvI,QAAQlyG,EAAA,EAAQ+0G,wBAA0B,IAAIC,EAAA,GACjDp5H,MAAO,IAAIq5H,EAAA,GACTh6H,OAAQ,IAAIi6H,EAAA,GAAep6H,OAAQ,EAAG,EAAG,EAAG,IAAMK,MAAO,IACzDkD,OAAQ,EACRvC,OAAQ,EACRk4F,QAAS,EACT/2F,MAAO,MAGX,IAAMlB,EAAO,IAAIo5H,EAAA,GACfr6H,OAAQ,GAAI,IAAK,IAAK,MAElBG,EAAS,IAAIi6H,EAAA,GACjBp6H,OAAQ,GAAI,IAAK,IAAK,GACtBK,MAAO,IAETxY,KAAKuvI,QAAL,QAA0B,IAAI8C,EAAA,GAC5Bj5H,KAAMA,EACNH,MAAO,IAAIw5H,EAAA,GACTr5H,KAAMA,EACND,OAAQ,EACRb,OAAQA,IAEVA,OAAQA,IAEV,IAAMo6H,EAAe1yI,KAAK2uI,mBAC1BmB,EAAA,EAAa9vI,KAAKuvI,QAASmD,IA/mB/BnvE,EAAA5oE,UAynBEk1I,gBAznBF,SAynBkBh5H,EAASyO,GACvBixB,EAAA,EAAY9yC,OAAOoT,GACnB,IAAMQ,EAAQrX,KAAKuvI,QAAQ14H,EAAQna,IAAI,gBAAkBsD,KAAKuvI,QAAL,QACzD,GAAIvvI,KAAKmY,MAAO,CACd,IAAMA,EAAQw6H,EAAA,EAAgB3yI,KAAKmY,OAE7B+5F,EAAc/5F,EAAM7a,QAE1B40G,EAAY,GAAK,EAEjB,IAAMp4F,EAAY3B,EAAM7a,QAExBwc,EAAU,GAAK,GAEf,IAAMgnG,EAAczpG,EAAM0pG,YACtBD,GACFA,EAAYpU,SAASwF,GAEvB,IAAMwO,EAAYrpG,EAAMspG,UACpBD,GACFA,EAAUhU,SAAS5yF,GAEPzC,EAAMwpG,YAElBxpG,EAAMu7H,SAAS,IAAIH,EAAA,GACjBr5H,KAAM,IAAIo5H,EAAA,GAAar6H,MAAO2B,IAC9BX,OAAQ,EACRb,OAAQ,IAAIi6H,EAAA,GAAep6H,MAAO+5F,OAIxC,OAAO76F,GAxpBXksD,EAAA5oE,UAgqBEq1I,cAhqBF,SAgqBgB73H,GACRA,IACFnY,KAAKmY,MAAQA,EACbnY,KAAKs9E,sBAAsBv4D,WAAW8tH,YAnqB5CtvE,EAAA5oE,UA0qBEm4I,yBA1qBF,WA2qBI,GAAI9yI,KAAK4uI,YAAa,CACpB,IAAMmE,EAAa/yI,KAAK2zC,SAAS4F,KAAK,+BACrCv5C,KAAKwuI,WAAcuE,EAAWnwH,OAASmwH,EAAWpF,SA7qBzDpqE,EAAA5oE,UAqrBEq4I,cArrBF,WAsrBIhzI,KAAKowG,gBAAgBvrF,QACrB7kB,KAAK6kB,SAvrBT0+C,EAAA5oE,UA8rBEkqB,MA9rBF,WA+rBI,IAAM8hF,EAAY3mG,KAAK2zC,SAAS4F,KAAK,sBAC/B05F,EAAStsC,EAAUplG,SAAS,YAC5B2xI,EAASvsC,EAAUplG,SAAS,SAElCvB,KAAKwuI,WAAa,GAClB/tG,EAAEyyG,EAAO,IAAIvsC,UAAU,MAAO,IAC9BssC,EAAO1xI,SAAS,eAAe8qG,QAC/BrsG,KAAK8yI,2BACL9yI,KAAKyvI,oBAAqB,GAvsB9BlsE,EAAA5oE,UA8sBEw4I,KA9sBF,WA+sBI,IACMD,EADYlzI,KAAK2zC,SAAS4F,KAAK,sBACZh4C,SAAS,SAElCvB,KAAK6zC,SAAS,WACZpT,EAAEyyG,EAAO,IAAIC,UAntBnB5vE,EAAA5oE,UA8tBEu1I,QA9tBF,SA8tBUztH,EAAOwkF,EAAYgF,GACzB,GAAgC,gBAA5BhF,EAAA,UAA2C,CAC7C,IAAM9rF,EAAO,IAAIi4H,EAAA,EAAYnsC,EAAA,UAE7BjnG,KAAKowG,gBAAgBvrF,QACrB7kB,KAAKowG,gBAAgB3rF,WAAW,IAAIzG,EAAA,GAClC3D,SAAUc,EACVk4H,WAAch2G,EAAA,EAAQ+0G,0BAExBpyI,KAAK8E,IAAIqa,UAAU81F,UAAUhO,EAAA,UAC7BjnG,KAAKszI,oBAEL/8F,EAAA,EAAY/vB,iBAAiBygF,EAAYjpF,EAAA,GACzChe,KAAKuzI,eAAe9wH,EAAOwkF,EAAYgF,IA3uB7C1oC,EAAA5oE,UAsvBE44I,eAtvBF,SAsvBiB9wH,EAAO5L,EAASo1F,GAAS,IAAAjlG,EAAAhH,KAChCo1C,EAAUv+B,EAAQna,IAAI,WACtB82I,EACD38H,EAAQuE,cACb,GAAIg6B,EACF,IADW,IAAAq+F,EAAA,SACFp5I,EAAO+G,GACd,IAAMm7C,EAASnH,EAAQ/6C,GACjBq5I,EAAan3F,EAAA,OACbo3F,EAAap3F,EAAA,KACnB,GAAkB,aAAdm3F,EACF1sI,EAAKu1B,WAAW12B,kBAAkBhC,KAAK,SAAC1C,GACtC,IAAME,EAAQ4sI,EAAA,EAAe/rI,gBAAgBf,EAAQwyI,GACjDtyI,GACF2F,EAAK61C,gBAAgBtf,oBAAoBl8B,EAAME,iBAG9C,GAAkB,aAAdmyI,EACT1sI,EAAK61C,gBAAgBve,eAAeq1G,GAAY,QAC3C,GAAkB,aAAdD,EAA2B,CACpC,IAEIE,SAMJ,GAPE5sI,EAAK0nI,YAAY,GAAGh1C,aAETx2F,QAAQ,SAAC2wI,GACpB,GAA8B,cAA1BA,EAAA,OACF,OAAOD,GAAiC,IAGxCA,EAAgC,CAClC,IAAME,IAAWN,EACjBxsI,EAAK61C,gBAAgBpe,oBAAoBk1G,GAAY,EAAMG,MAxBxDz5I,EAAI,EAAG+G,EAAKg0C,EAAQ76C,OAAQF,EAAI+G,EAAI/G,IAAKo5I,EAAzCp5I,GA8BX,IAAM0e,EAAO/Y,KAAK8E,IAAIka,UACtB,GAAIw0H,GAAmBz6H,EAAM,CAC3B,IAAMmG,EAAOlf,KAAK8E,IAAIqa,UACtBnf,KAAKowG,gBAAgBvrF,QACrB7kB,KAAKowG,gBAAgB3rF,WAAW5N,GAChC7W,KAAKyvI,oBAAqB,EAC1B,IAAMsE,EAAyC,uBAA9BP,EAAgBl8H,UAC/Bk8H,EAAgB3zH,YAAc2zH,EAChCt0H,EAAK+wB,IAAI8jG,GACPh7H,KAAMA,EACNo1E,QAASnuF,KAAKmuF,UAGlBnuF,KAAKszI,gBAtyBT/vE,EAAA5oE,UA6yBE24I,aA7yBF,WA8yBStzI,KAAK4uI,aACR5uI,KAAK6kB,QAEP7kB,KAAKmzI,QAjzBT5vE,EAAA5oE,UAyzBEw1I,OAzzBF,SAyzBS1tH,GACAziB,KAAK4uI,aACR5uI,KAAK8yI,4BA3zBXvvE,EAAA5oE,UAs0BEy1I,eAt0BF,SAs0BiB3tH,EAAO2pF,EAAOC,GAM3B,IAAM2nC,EAAOh0I,KAAK2zC,SAAS4F,KAAK,+BAC1Bx1C,EAAUiwI,EAAKzyI,SAAS,0BAC9B,GAAsB,GAAlBwC,EAAQxJ,OAAa,CACvB,IAAMg6G,EAAM9zE,EAAE,sEACduzG,EAAK9pF,OAAOqqD,GAEVlI,GACFtoG,EAAQ6e,OACRoxH,EAAKvqF,SAAS,2BAEduqF,EAAKnmD,YAAY,yBACjB9pF,EAAQ4pI,SAv1BdpqE,EAAA5oE,UAm2BE61I,gBAn2BF,SAm2BkBpkC,EAAOkkC,EAAa2D,GAAU,IAAA11G,EAAAv+B,KACxCswI,EAAc,IAChBA,EAAc,GAEhBtwI,KAAKqvI,gBAAgBjvE,OAAOgsC,GAAQvyE,MAASy2G,IAC1CzsI,KAAK,SAAC9J,GACL,GAAIA,GAAQA,EAAKkjB,SAASqzH,EAAc,GAAI,CAC1C,IACMz5H,GADS,IAAIq9H,EAAA,GACIl0B,YAAYjmH,EAAKkjB,SAASqzH,EAAc,IAC/D/xG,EAAK6xE,gBAAgB3rF,WAAW5N,GAChC,IAAMs9H,UACWj0I,IAAb+zI,IACFE,EAAWhmD,QAAU8lD,EACrBE,EAAWp7H,KAAOwlB,EAAKz5B,IAAIka,WAE7Buf,EAAKz5B,IAAIqa,UAAU8wB,IAAIp5B,EAAQuE,cAAcyE,YAAas0H,GAC1D51G,EAAKiwG,WAAoC33H,EAAQna,IAAI,aAn3B/D6mE,EAAA,GA23BAznE,EAAQi0B,WAAW,sBAAuBj0B,EAAQmzI,mBAGlDtxI,EAAA,sDC3jCA,SAAA8iC,GAMA,IAAM3kC,EAAUmM,QAAQlM,OAAO,mBA6B/BD,EAAQytD,WAAa,WACnB,OACEtK,SAAU,IACVC,KAAM,SAACxyB,EAAQ2mB,EAAUzmB,GACvB,IAAMQ,EAAUR,EAAA,gBACV9nB,EAA6B4nB,EAAOS,MAAMC,GAEhD,SAAS23D,EAAS74D,GAChB,IAAM9M,EAAS8M,EAAQy3C,KAAK,eAC5B,QAAezjE,IAAXkf,EAAsB,CACxB,IAAMrG,EAA+BjU,EAAIka,UACzCla,EAAIqa,UAAU8wB,IAAIvjB,EAAOS,MAAM/N,IAAUrG,SAE3C,IAAM0rE,EAAOv4D,EAAQy3C,KAAK,kBACbzjE,IAATukF,GACF3/E,EAAIqa,UAAUwlE,QAAQj4D,EAAOS,MAAMs3D,IAKvCpxC,EAASzQ,GAAG,QAAS,IAAK,SAASngB,GACjCsiE,EAAS98E,QAAQikB,QAAQuU,EAAEzgC,UAI7BqzC,EAASzQ,GAAG,SAAU,SAACngB,GACrB,IAAM2xH,EAAW3xH,EAAMgE,OAAOre,QAAQqa,EAAMgE,OAAO4tH,eACnDtvD,EAAS98E,QAAQikB,QAAQkoH,SAQjCt4I,EAAQq3C,UAAU,eAAgBr3C,EAAQytD,YAG1C5rD,EAAA,uDCzEA,IAAA6F,EAAA9H,EAAA,GAsFAiC,EAAA,EApDgB,SAAS22I,EAAMC,EAAMtvI,EAAS4tC,EAAOztC,GAKnD,IAAMovI,EAAS3hG,EAAMulB,iBAAiB,kBAAMk8E,GAAM,WAChD,IAAIj6I,SAAG+G,SAAI7F,SACX,GAAI0J,EACF,IAAK5K,EAAIi6I,EAAK/5I,OAAS,EAAGgB,EAAI,EAAGlB,GAAK,IAAKA,EACrC+K,EAAOkvI,EAAKj6I,MACdk6I,EAAKh5I,KAAO+4I,EAAKj6I,SAIrB,IAAKA,EAAI,EAAG+G,EAAKkzI,EAAK/5I,OAAQgB,EAAI,EAAGlB,EAAI+G,IAAM/G,EACzC+K,EAAOkvI,EAAKj6I,MACdk6I,EAAKh5I,KAAO+4I,EAAKj6I,IAIvBk6I,EAAKh6I,OAASgB,IAMVk5I,EAAS5hG,EAAMulB,iBAAiB,kBAAMm8E,GAAM,WAChD,IAAIl6I,SAAG+G,SAAI7F,SACX,GAAI0J,EAAS,CACX,IAAK5K,EAAI,EAAG+G,EAAKkzI,EAAK/5I,OAAQgB,EAAIg5I,EAAKh6I,OAAS,EAAGF,EAAI+G,IAAM/G,EACvD+K,EAAOkvI,EAAKj6I,MACdi6I,EAAKj6I,GAAKk6I,EAAKh5I,MAGnBiI,EAAA,EAAYC,QAAa,GAANlI,OACd,CACL,IAAKlB,EAAI,EAAG+G,EAAKkzI,EAAK/5I,OAAQgB,EAAI,EAAGlB,EAAI+G,IAAM/G,EACzC+K,EAAOkvI,EAAKj6I,MACdi6I,EAAKj6I,GAAKk6I,EAAKh5I,MAGnBiI,EAAA,EAAYC,OAAOlI,GAAKg5I,EAAKh6I,WAIjC,OAAO,WACLi6I,IACAC,gDCtEE34I,GAXNJ,EAAA,KAWgBuM,QAAQlM,OAAO,iBAC7B24I,EAAA,EAAwB34I,OAAOK,QAIjCN,EAAQc,MAAM,2BAMZ,SAACsvB,EAASizB,GACR,IAAMjM,EAAciM,EAAA,yBACpB,YAAuBj/C,IAAhBgzC,EAA4BA,EACjC,mBAGNp3C,EAAQ22C,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,iBAAkBj3C,EAAQ,SA2F/CI,EAAQytD,WAAa,SAASorF,GAC5B,OACE11F,SAAU,IACVpM,OAAO,EACPK,YAAayhG,EACb5kH,WAAY2kH,EAAA,IALhB54I,EAAQytD,gDAURztD,EAAQq3C,UAAU,gBAAiBr3C,EAAQytD,YAG3C5rD,EAAA,kCClIA,IAAM7B,GAMNi5G,0BAME,iBAKA,aAKA,mBAKA,uBAKA,mBAKA,kBAIQ,QAIVp3G,EAAA,0DChDAi3I,EAAAl5I,EAAA,KAeMI,EAAU,SAASkjH,GAEvB,IAAM52G,OAA0BlI,IAAhB8+G,EAA4BA,KAExC61B,SACAzsI,EAAQ8jB,SACV2oH,EAAazsI,EAAQ8jB,eACd9jB,EAAQ8jB,SAEf2oH,EAAap0G,EAAE,WAAW,GAO5BzgC,KAAK80I,SAAWr0G,EAAE,YAChB09B,MAAS,QACTqG,KAAQ,YAOVxkE,KAAK+0I,WAAat0G,EAAE,UACjBypB,OAAOlqD,KAAK80I,UACZ5qF,OAAO2qF,GAEVzsI,EAAQ8jB,QAAUuU,EAAE,WAAW,GAE/Bm0G,EAAA,EAAU/5I,KAAKmF,KAAMoI,IAIvBwb,EAAA,EAAgB9nB,EAAS84I,EAAA,GAMzB94I,EAAQnB,UAAUyqB,OAAS,SAAStgB,GAAK,IAAAvC,EAAAvC,KAEjCksB,EAAUlsB,KAAKi/D,aASrB,GAPmBj/D,KAAKyzB,UAEtBgN,EAAEvU,GAASmhH,QAAQ,WAGrBuH,EAAA,EAAUj6I,UAAUyqB,OAAOvqB,KAAKmF,KAAM8E,GAElCA,EAAK,CACP,IAAMo5D,EAAYl+D,KAAK+0I,WAEvB53I,OAAOm3H,WAAW,WAChB7zF,EAAEvU,GACCmhH,SACCl9F,QAAW+tB,EACXsG,MAAQ,EACR8oE,UAAa,MACbh2G,UACE,oDACA,8BACA,oCACA,wCACA,UACA/vB,KAAK,MAER8lI,QAAQ,SACV,GAEHrtI,KAAK80I,SAASE,IAAI,QAAS,WACzB,IAAMlwI,EAAMvC,EAAKkxB,SACb3uB,GACFA,EAAI6vB,cAAJpyB,OAOR5E,EAAA,2PC7DM7B,GApCNJ,EAAA,KAoCgBuM,QAAQlM,OAAO,yBAC7Bk5I,EAAA,EAAqCl5I,OAAOK,KAC5C84I,EAAA,EAAwCn5I,OAAOK,KAC/C+4I,EAAA,EAAsBp5I,OAAOK,KAC7Bg5I,EAAA,EAAyCh5I,KACzCi5I,EAAA,EAA6Bt5I,OAAOK,KACpCk5I,EAAA,EAAwBv5I,OAAOK,KAC/Bm5I,EAAA,EAAex5I,OAAOK,KACtBo5I,EAAA,EAAuBp5I,KACvBq5I,EAAA,EAAwB15I,OAAOK,KAC/Bs5I,EAAA,EAAmB35I,OAAOK,KAC1Bu5I,EAAA,EAAgB55I,OAAOK,QA4CzB,SAASw5I,EAAqBviG,EAAUzmB,EAAQgpH,GAC9C,OAAOA,EAAqBviG,EAAUzmB,GAvCxC9wB,EAAQc,MAAM,2BAMZ,SAACsvB,EAASizB,GAAV,MAAoB,kBAEtBrjD,EAAQ22C,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,gBAAiBj3C,EAAQ,SAI9CI,EAAQc,MAAM,uBAMZ,SAACy2C,EAAUzmB,GAET,MAAO,6UA2DX9wB,EAAQ82C,YACN7iB,WAAY,6CACZozC,UACEr+D,IAAO,mBACPhC,WAAc,2BACd+yI,qBAAwB,sCAE1Bv+G,SAAUs+G,GAGZ95I,EAAQwnE,UAAU,eAAgBxnE,EAAQ82C,YAyB1C92C,EAAQs3C,YAAc,SAASC,EAAU3mB,EAAQ9sB,EAAiBu9E,EAChEmnB,EAA+Blf,EAAc1oC,EAAgBo5F,EAAqB/xG,EAAa9H,GAAW,IAAA15B,EAAAvC,KAM1GA,KAAK8E,IAML9E,KAAK8C,WAML9C,KAAK4zC,OAASlnB,EAMd1sB,KAAKU,aAAed,EAMpBI,KAAKm9E,2BAA6BA,EAMlCn9E,KAAKskG,8BAAgCA,EAMrCtkG,KAAKslF,cAAgBF,EAMrBplF,KAAK68C,gBAAkBH,EAEvB,IAAMlgB,EAAOkgB,EAAelgB,KAC5Bu5G,EAAA,EAAYtyI,OAAO+4B,GAMnBx8B,KAAKw8B,KAAOA,EAMZx8B,KAAKg2I,qBAAuBF,EAM5B91I,KAAKgkC,aAAeD,EAMpB/jC,KAAKi2I,oBAMLj2I,KAAK61I,qBAML71I,KAAK+1E,gBAAkB,KAMvB/1E,KAAKwE,UAMLxE,KAAKu8B,WAAaN,EAGlBoX,EAASzQ,GAAG,oBAAqB,WAC/BrgC,EAAKqxC,OAAOqF,YAxGhBn9C,EAAQs3C,yMAgHRt3C,EAAQs3C,YAAYz4C,UAAUm7C,QAAU,WAAW,IAAA5vC,EAAAlG,KACjDA,KAAK61I,sBAAqD,IAA9B71I,KAAK61I,qBACjC71I,KAAK+1E,gBAAkB/1E,KAAKU,aAAaopB,gBAAgB9pB,KAAK8E,IAC5Du4B,EAAA,EAAQ24C,qBAEVt7E,OAAAw7I,EAAA,EAAAx7I,CAAmBsF,KAAK+1E,gBAAgB9rD,YAAYC,WAAYlqB,KAAKwE,QAAQ,EAAMxE,KAAK4zC,OAAQ,kBAAM,IAGtG5zC,KAAK4zC,OAAOwkB,iBAAiB,kBAAMlyD,EAAK1B,QACtC,WACE0B,EAAKpB,IAAIyhI,WAIbvmI,KAAK4zC,OAAOwkB,iBAAiB,WAC3B,GAAIlyD,EAAK22C,gBAAgBpgB,SACvB,OAAOv2B,EAAKpD,YAEb,SAACA,GACEA,GACFoD,EAAKiwI,kBAAkBjwI,EAAK22C,gBAAgBpgB,aAUlD3gC,EAAQs3C,YAAYz4C,UAAUw7I,kBAAoB,SAAStoH,GAAU,IAAA7mB,EAAAhH,KACnE6tB,EAASgC,mBAAmB,SAAC0V,GAC3B,GAAIA,EAAKnjC,KAAKU,WAAY,CACxB,IAAMH,EAAQ4iC,EAAK5iC,MACnBozI,EAAA,EAAYvvH,iBAAiB7jB,EAAOyzI,EAAA,GACpCpvI,EAAKqvI,uBAAuB1zI,EAA2D4iC,EAAKnjC,UAWlGtG,EAAQs3C,YAAYz4C,UAAU07I,uBAAyB,SAAS1zI,EAAOP,GAAM,IAAAm8B,EAAAv+B,KAC3E,GAAIA,KAAK8C,YAAcV,EAAKU,WAAY,CACtC,IAAMA,KACN,IAAK,IAAMgH,KAAO1H,EAAKU,WACrB,GAA6B,OAAzBV,EAAKU,WAAWgH,GAAe,CACjC,IAAMlN,EAAQoD,KAAK8C,WAAWgH,QAChB5J,IAAVtD,IACFkG,EAAWgH,GAAOlN,QAGpBkG,EAAWgH,GAAO1H,EAAKU,WAAWgH,GAGtC,IAAKwsI,EAAA,EAAcxzI,GAAa,CAC9B,IAAMuhB,EAAS1hB,EAAMkpB,YACjBxH,aAAkBkyH,EAAA,EACpBlyH,EAAO6E,iBAAiBpmB,GACfuhB,aAAkBmyH,EAAA,GAAmBnyH,aAAkBoyH,EAAA,EAChEpyH,EAAO4D,aAAanlB,GAGpBH,EAAM+zI,KAAK,gBAAiB,WAC1BX,EAAA,EAAYvvH,iBAAiB7jB,EAAOyzI,EAAA,GACpC73G,EAAK83G,uBAAuB1zI,EAAOP,QAkB7CtG,EAAQs3C,YAAYz4C,UAAUoqB,SAAW,SAAS8I,GAChD,IAAIyW,SACAzW,EAASR,OAAOR,SAClB7sB,KAAK68C,gBAAgBpgB,SAAW5O,EAASR,OAEzCiX,EAAetkC,KAAK68C,gBAAgBrgB,KAAKj7B,SAAShH,OAC9CyF,KAAK68C,gBAAgBngB,qCAAuC,GAGlE,IAAM/5B,EAAQ3C,KAAKg2I,qBAAqB5xG,YAAYvW,EAAU7tB,KAAK8E,IACjE9E,KAAK+1E,gBAAiBzxC,GAExB,GAAI3hC,aAAiByzI,EAAA,EAAc,CACjC,IAAMh0I,EAA6DyrB,EAASzrB,KAC5EpC,KAAKq2I,uBAAuB1zI,EAAOP,GAGrC,OAAOO,GAYT7G,EAAQs3C,YAAYz4C,UAAU+0I,UAAY,SAAS78F,EAAOhlB,GACxD,IAAMwW,EAAiBrkC,KAAK+1E,gBAC5BljC,EAAMtlB,IAAI,WAAY,WAEpB8W,EAAepa,YAAYwkB,OAAO5gB,EAASlrB,UAU/C7G,EAAQs3C,YAAYz4C,UAAUg8I,aAAe,SAAS9oH,GACpDA,EAASU,SAAiC,OAAxBV,EAASS,WAAsB,MAAQ,OAY3DxyB,EAAQs3C,YAAYz4C,UAAUi8I,aAAe,SAAS/oH,GACpD,OAAOA,EAASS,YAmBlBxyB,EAAQs3C,YAAYz4C,UAAUk8I,wBAA0B,SACtDC,EAAerjI,GACf,GAAKA,EAAL,CAGA,IAAMjC,EAAaslI,EAAcxnH,gBACjC,GAAI9d,EACFukI,EAAA,EAAYvvH,iBAAiBhV,EAAYulI,EAAA,GACzCvlI,EAAWwC,eAAiBP,OACvB,GAAIqjI,EAAcv1I,SACvB,IAAK,IAAIlH,EAAI,EAAG+G,EAAK01I,EAAcv1I,SAAShH,OAAQF,EAAI+G,EAAI/G,IAC1D2F,KAAK62I,wBAAwBC,EAAcv1I,SAASlH,GAAIoZ,KAc9D3X,EAAQs3C,YAAYz4C,UAAUq8I,iBAAmB,SAASnpH,GACxD,IAAMopH,EAAUppH,EAASzrB,KAAKS,SAASo0I,QAEvC,QAAgB/2I,IAAZ+2I,EACF,OAAOA,EAGT,QAA+B/2I,IAA3B2tB,EAASzrB,KAAKb,SAAlB,CAIA,IAAM+B,EAA8CuqB,EAASzrB,KAC7D,GAAsB,QAAlBkB,EAAS5F,KAAb,CAIA,IAAMyG,EAAoDb,EAEpD4zI,EAAa/yI,EAAYtB,SAASq0I,WAExC,QAAmBh3I,IAAfg3I,EAAJ,CAMA,IAAM1uH,EAAYrkB,EAAYK,OAAO6R,MAAM,KAAK,GAC1C8gI,EAAen3I,KAAK68C,gBAAgBpd,aAAa5R,GACvD,OAAO7tB,KAAKU,aAAakqB,gBACvBusH,EAAazzI,IAAK8kB,OAAWtoB,EAAWg3I,EAAY,GAAI,QAa5Dp7I,EAAQs3C,YAAYz4C,UAAUy8I,iBAAmB,SAASvpH,GAAU,IAAA6Q,EAAA1+B,KAC5Dq3I,KACN,QAAiEn3I,IAA5B2tB,EAASzrB,KAAMb,SAClD,OAAO,KAGT,IAAM+B,EAA8CuqB,EAASzrB,KACvDk1I,EAAsBh0I,EAASlH,KACrC,GAAIkH,EAAST,SAAS8mI,YAEpB,OADA0N,EAAcC,GAAuBh0I,EAAST,SAAS8mI,YAChD0N,EAGT,IAAM10I,EAAQkrB,EAASlrB,MACvB,GAAsB,SAAlBW,EAAS5F,KAAiB,CAC5Bq4I,EAAA,EAAYvvH,iBAAiB7jB,EAAO40I,EAAA,GACpC,IAAMC,EAAgBx3I,KAAKU,aAAagqB,iBAAiB/nB,GAEzD,OADA00I,EAAcC,GAAuBE,EAC9BA,EAAgBH,EAAgB,KAEvC,IACII,EADsDn0I,EAC5BkB,OACxB2yI,EAAen3I,KAAK68C,gBAAgBpd,aAAa5R,GACjDwH,EAAQr1B,KAAK03I,YAWnB,OAPED,EADEN,EAAaz5I,OAASq5I,EAAA,EAAkBtqI,WAAWgI,YACtCgjI,GAEDA,EAAYphI,MAAM,MAEtBnT,QAAQ,SAACslB,GACnB6uH,EAAc7uH,GAAakW,EAAKh+B,aAAakqB,gBAAgBusH,EAAazzI,IAAK8kB,EAAW6M,KAErFgiH,GAYXv7I,EAAQs3C,YAAYz4C,UAAUg9I,yBAA2B,SAAS9pH,GAChE,IAAMwpH,EAAgBr3I,KAAKo3I,iBAAiBvpH,GAC5C,OAAOwpH,EAAgB38I,OAAOs/C,KAAKq9F,GAAe98I,OAAS,GAS7DuB,EAAQs3C,YAAYz4C,UAAU+8I,UAAY,WACxC,IAAMx4H,EAAOlf,KAAK8E,IAAIqa,UAItB,OAHmBD,EAAKuM,gBACZvM,EAAKmxB,gBAAgBw+E,mBAEP,OADd,KAAO,MAWrB/yH,EAAQs3C,YAAYz4C,UAAUi9I,gBAAkB,SAAS/pH,GACvD,IAAMzrB,EAAOyrB,EAASzrB,KAChBy1I,EAAcz1I,EAAKS,SAAL,YACpB,QAAoB3C,IAAhB23I,EAA2B,CAE7B,IAAM57C,EAAO9+F,OAAO8+F,KAChBA,EAAKC,iBACPD,EAAKC,gBAAgB27C,EAAaz1I,EAAKhG,UAAM8D,OAAWA,GAAW,KAWzEpE,EAAQs3C,YAAYz4C,UAAUm9I,aAAe,WAAW,IAAA34G,EAAAn/B,KAChD+3I,EAAa/3I,KAAK68C,gBAAgBpgB,SAASr6B,KAAKb,SAChDy2I,EAAmBh4I,KAAK68C,gBAAgBpgB,SAASl7B,SACjDmxE,KAGNqlE,EAAW70I,QAAQ,SAACd,GAClB41I,EAAiB7xI,KAAK,SAAC0nB,GACjBA,EAASzrB,OAASA,GACpBswE,EAAUj4E,KAAKozB,OAOrB7tB,KAAK68C,gBAAgBpgB,SAASl7B,SAAWmxE,EAGzC1yE,KAAKwE,OAAOjK,OAAS,EACrByF,KAAK68C,gBAAgBpgB,SAASl7B,SAAS2B,QAAQ,SAACC,GAC9Cg8B,EAAK36B,OAAO/J,KAAK0I,EAAMR,SAIzB3C,KAAKslF,cAAc8vB,2BAQrBt5G,EAAQs3C,YAAYz4C,UAAUs9I,WAAa,SAAS71I,GAClDpC,KAAK68C,gBAAgB9d,YAAY38B,IAOnCtG,EAAQs3C,YAAYz4C,UAAUu9I,eAAiB,WAC7Cl4I,KAAK68C,gBAAgB7d,aAQvBljC,EAAQs3C,YAAYz4C,UAAUw9I,WAAa,WACzC,OAAOn4I,KAAK68C,gBAAgBrgB,KAAKj7B,SAAShH,QAa5CuB,EAAQs3C,YAAYz4C,UAAUy9I,mBAAqB,SAAS90I,GAC1D,IAAMgiB,EAAatlB,KAAK8E,IAAIqa,UAAUsM,gBAChC7kB,EAAgB2uI,EAAA,EAAe5uI,qBAAqBrD,GAC1D,QAAsBpD,IAAlB0G,GAA+B0e,EAAa1e,EAC9C,MAAO,oBAET,IAAMH,EAAgB8uI,EAAA,EAAe/uI,qBAAqBlD,GAC1D,YAAsBpD,IAAlBuG,GAA+B6e,EAAa7e,EACvC,yBADT,GAaF3K,EAAQs3C,YAAYz4C,UAAU09I,iBAAmB,SAASxqH,GACxD,IAAMvqB,EAAiDuqB,EAASzrB,KAC1D8c,EAAOlf,KAAK8E,IAAIqa,UAChBmG,EAAapG,EAAKuM,gBAClB7kB,EAAgB2uI,EAAA,EAAe5uI,qBAAqBrD,GAC1D,QAAsBpD,IAAlB0G,GAA+B0e,EAAa1e,EAC9CsY,EAAK+qH,cAAc/qH,EAAK8qH,oBAAoBpjI,EAAe,EAAG,QACzD,CACL,IAAMH,EAAgB8uI,EAAA,EAAe/uI,qBAAqBlD,QACpCpD,IAAlBuG,GAA+B6e,EAAa7e,GAC9CyY,EAAK+qH,cAAc/qH,EAAK8qH,oBAAoBvjI,EAAe,GAAI,MAWrE3K,EAAQs3C,YAAYz4C,UAAU29I,iBAAmB,SAASC,GACxD93G,EAAE83G,GAAcj+D,QACdA,QAAQ,KASZx+E,EAAQs3C,YAAYz4C,UAAU69I,0BAA4B,SAAShhF,GACjEx3D,KAAKm9E,2BAA2B3rE,WAAagmD,GAS/C17D,EAAQs3C,YAAYz4C,UAAU89I,oBAAsB,SAASF,GAC3D,OAAO93G,EAAE83G,GAAc33G,GAAG,aAsB5B9kC,EAAQs3C,YAAYz4C,UAAU+9I,sBAAwB,SAAS7qH,GAC7D,OAAQA,EAAShB,SAEb7sB,KAAK24I,eAAe9qH,IACpB7tB,KAAK44I,sBAAsB/qH,KAWjC/xB,EAAQs3C,YAAYz4C,UAAUg+I,eAAiB,SAAS9qH,GACtD,IAAMzrB,EAA2CyrB,EAASzrB,KAC1D,QAASA,EAAKS,YACVT,EAAKS,SAASikI,UACd9mI,KAAKo3I,iBAAiBvpH,IAU5B/xB,EAAQs3C,YAAYz4C,UAAUi+I,sBAAwB,SAAS/qH,GAC7D,IAAMzrB,EAA2CyrB,EAASzrB,KACpDwyB,EAAiD/G,EAASR,OAAOjrB,KACvE,QAASyrB,EAASlrB,QAGO,IAAnBkrB,EAASJ,QAAgBrrB,EAAKs9B,OAG9B7R,EAASJ,MAAQ,GAAKmH,EAAW8K,QAKzC5jC,EAAQi0B,WAAW,yBAA0Bj0B,EAAQs3C,aAGrDz1C,EAAA,2GCxxBMk7I,KAaNA,EAAQ98I,OAASkM,QAAQlM,OAAO,UAEhC88I,EAAQ98I,OAAOgY,QAAQ,mBAAoB,SAAS+kI,GAC5C,UAAWn1C,EAAA,EAAUxjC,kBAAkBhjE,OAAOoiE,SAASa,SAE3D04E,EAAiBC,kBAAiB,MAKtC,IAAAC,EAAA,gECZA,IAAM9sE,EAAUjkE,QAAQlM,OAAO,wBAC7BkhF,EAAA,EAAyBlhF,OAAOK,OA0BlC,SAAS68I,EAAgCrsH,EAAQqsH,GAC/C,OAAOA,EAAgCrsH,GAvBzCs/C,EAAQtvE,MAAM,kCAKZ,SAACgwB,GACC,IAAMsmB,EAActmB,EAAA,gCACpB,YAAuB1sB,IAAhBgzC,EAA4BA,EACjC,0BAGNg5B,EAAQz5B,KAAR,iBAA4B,SAACC,GAC3BA,EAAeC,IAAI,wBAAyBj3C,EAAQ,gEAkBtDwwE,EAAQ94B,YAAR,WAYE,SAAAmwB,EAAYlwB,EAAU3mB,EAAQ4wD,GAAuB,IAAA/6E,EAAAvC,kGAAAqI,CAAArI,KAAAujE,GAQnDvjE,KAAKuI,OAELmkB,EAAOO,OACL,kBAAM1qB,EAAKgG,QACXvI,KAAKg6E,oBAAoB38E,KAAK2C,OAShCA,KAAKk5I,aAMLl5I,KAAK8E,IAML9E,KAAKmZ,OASLnZ,KAAK4zC,OAASlnB,EASd1sB,KAAK0lB,SAAW,IAAI0hC,EAAA,EAMpBpnD,KAAKowG,gBAAkBroE,EAAA,EAAYtkC,OACjC65E,EAAsBt4D,qBAOxBhlB,KAAK2jC,iBAOL3jC,KAAKu/D,SAAW,KAOhBv/D,KAAKm5I,kBAAmB,EAMxBn5I,KAAKo5I,UAAY,IAAIC,OAAOC,KAAKC,mBAC/BlmG,EAAS,IAEPmmG,KACEC,QAAS,EACTC,MAAO,GAETrxH,SAAS,EACTo8D,KAAM,IAQVzkF,KAAK25I,kBAAoB,KAMzB35I,KAAK45I,OAAS,IAAIvyF,EAAA,GAAa,EAAG,IAElCrnD,KAAK0lB,SAASkB,YAAY5mB,KAAK45I,QAM/B55I,KAAK65I,mBAAqB,IAAIR,OAAOC,KAAKQ,kBAM1C95I,KAAK+5I,2BAA4B,EArIrC,OAAAx2E,EAAAppC,SAAA,6CAAAopC,EAAA5oE,UA2IEm7C,QA3IF,WA2IY,IAAA5vC,EAAAlG,KAKRA,KAAK4zC,OAAO3mB,OACV,kBAAM/mB,EAAKq5D,UACXv/D,KAAKg6I,sBAAsB38I,KAAK2C,OAKlCA,KAAK4zC,OAAO3mB,OACV,WACE,IAAMmtD,EAAWl0E,EAAKqC,OAChB0xI,EAAgC,OAAlB/zI,EAAKq5D,SACzB,OAAO6a,GAAY6/D,GAErBj6I,KAAKk6I,mBAAmB78I,KAAK2C,OAI/BA,KAAK4zC,OAAO3mB,OACV,WACE,IAAMmtD,EAAWl0E,EAAKqC,OAChB0xI,EAAgC,OAAlB/zI,EAAKq5D,SACnB46E,GAAoC,IAA1Bj0I,EAAKizI,iBACrB,OAAO/+D,GAAY6/D,GAAeE,GAEpC,SAACv3H,EAAMw3H,GACDx3H,IAASw3H,IAIbl0I,EAAKkzI,UAAUhxH,WAAWxF,GAEtBA,EACF1c,EAAKyzI,kBAAoBN,OAAOC,KAAK72H,MAAM43H,YACzCn0I,EAAKkzI,UACL,mBACAlzI,EAAKo0I,8BAA8Bj9I,KAAnC6I,IAEOA,EAAKyzI,oBACdN,OAAOC,KAAK72H,MAAM83H,eAAer0I,EAAKyzI,mBACtCzzI,EAAKyzI,kBAAoB,SAO3B35I,KAAKk5I,cACPl5I,KAAK0lB,SAAS9O,SAAS5W,KAAKk5I,eA/LlC31E,EAAA5oE,UAyMEq/E,oBAzMF,SAyMsBzxE,GAElB,IAAMyxC,EAAOh6C,KAAK2jC,cAEdp7B,EACFyxC,EAAKv/C,KACH0zC,EAAA,EAAgBnuC,KAAK8E,IAAK,QAAS9E,KAAK46C,gBAAiB56C,QAG3Dg6C,EAAK92C,QAAQirC,EAAA,GACb6L,EAAKz/C,OAAS,IAnNpBgpE,EAAA5oE,UA6NEq/I,sBA7NF,SA6NwBz6E,EAAUi7E,GAG9B,KAAIj7E,IAAai7E,GACf9qI,MAAMC,QAAQ4vD,IAAa7vD,MAAMC,QAAQ6qI,IACvCv3I,EAAA,EAAes8D,EAAUi7E,MAM7Bx6I,KAAK45I,OAAOpyF,eAAe+X,GAGvBA,IAAav/D,KAAK+5I,2BAA2B,CAC/C,IAAMU,EAASz6I,KAAK06I,UAAUn7E,GAC9Bv/D,KAAK65I,mBAAmBc,aACtBp7E,UACEq7E,IAAKH,EAAO,GACZI,IAAKJ,EAAO,IAEdthI,OAAQnZ,KAAKmZ,QACZnZ,KAAK86I,oCAAoCz9I,KAAK2C,SAnPvDujE,EAAA5oE,UA6PEigD,gBA7PF,SA6PkBr0B,GACdvmB,KAAKu/D,SAAWh5C,EAAI+M,WACpBtzB,KAAK4zC,OAAOqF,UA/PhBsqB,EAAA5oE,UA+QEu/I,mBA/QF,SA+QqBa,EAAOC,GAEpBD,IAAUC,IAIVD,EACF/6I,KAAKowG,gBAAgB3rF,WAAWzkB,KAAK0lB,UAErC1lB,KAAKowG,gBAAgBxrF,cAAc5kB,KAAK0lB,YAxR9C69C,EAAA5oE,UAiSEmgJ,oCAjSF,SAiSsC/gJ,EAAMuxE,GAExC,IAAM2vE,EAAWj7I,KAAKo5I,UAElB9tE,IAAW+tE,OAAOC,KAAK4B,iBAAiBC,IAC1Cn7I,KAAKm5I,kBAAmB,EACxB8B,EAAS5nH,YAAYt5B,EAAKwlE,SAAS67E,SAEnCp7I,KAAKm5I,kBAAmB,EAG1Bn5I,KAAK4zC,OAAOqF,UA5ShBsqB,EAAA5oE,UAmTE2/I,8BAnTF,WAoTIt6I,KAAK+5I,2BAA4B,EACjC,IAAM90G,EAAWjlC,KAAKo5I,UAAUiC,cAC1BZ,GAAUx1G,EAAS41G,MAAO51G,EAAS21G,OACnCr7E,EAAWv/D,KAAKs7I,YAAYb,GAClCz6I,KAAKu/D,SAAWA,EAChBv/D,KAAK4zC,OAAOqF,SACZj5C,KAAK+5I,2BAA4B,GA1TrCx2E,EAAA5oE,UAoUE2gJ,YApUF,SAoUcb,GACV,OAAOzuE,EAAA,EACLyuE,EACAz6I,KAAK8E,IAAIqa,UAAUkxB,kBAvUzBkzB,EAAA5oE,UA+UE+/I,UA/UF,SA+UYpnH,GACR,OAAO04C,EAAA,EACL14C,EACAtzB,KAAK8E,IAAIqa,UAAUkxB,kBAlVzBkzB,EAAA,GAwVA2I,EAAQ5I,UAAU,wBAChBH,UACE56D,OAAU,IACV2wI,aAAgB,KAChBp0I,IAAO,IACPqU,OAAU,MAEZ4W,WAAYm8C,EAAQ94B,YACpBF,YAAa+lG,IAIf,IAAA31E,EAAA,ECxYAi4E,EALgBtzI,QAAQlM,OAAO,8BAC7BunE,EAA8BlnE,wBCU1Bo/I,EAAU,SAAS/7I,EAAOC,EAAWuwG,GAMzCjwG,KAAKK,OAASZ,EAMdO,KAAKmwG,cAAgBF,EAQrBjwG,KAAKy7I,cAAgB,uCAEjB/7I,EAAUa,IAAI,sBAChBP,KAAKy7I,cAAgB/7I,EAAUhD,IAAI,oBAGG,MAAlCsD,KAAKy7I,cAAcxzE,QAAQ,KAC7BjoE,KAAKy7I,eAAiB,MAQ1Bz7I,KAAK07I,wBAEDh8I,EAAUa,IAAI,sCAChBP,KAAK07I,qBAAuBh8I,EAAUhD,IAAI,qCAU5CsD,KAAK27I,wBAA0B,IAM/B37I,KAAK47I,yBAEF57I,KAAKmwG,cAA0CnwG,KAAK67I,iBAAiBx+I,KAAK2C,MAAQA,KAAK27I,yBAAyB,kGAWrHH,EAAQ7gJ,UAAUylE,OAAS,SAASgsC,EAAOnlG,GACzC,IAAIvD,EAAS1D,KAAKy7I,cAAd,YAAuCrvC,EAQ3C,GANAnlG,EAASA,OACTA,EAASvM,OAAO0kD,UAAWp/C,KAAK07I,qBAAsBz0I,IAGtD,OAAmB,OAEfA,EAAQ,CACVvD,GAAO,IACP,IAAM0E,KACNoH,EAAqB9U,OAAOs/C,KAAK/yC,GAAjCwI,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAA0C,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAjV,OAAA,MAAAwV,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAhT,MAAA,IAA/Bk/I,EAA+B/rI,EACxC3H,EAAQ3N,KAAQqhJ,EAAhB,IAA0B70I,EAAO60I,IAEnCp4I,GAAO0E,EAAQb,KAAK,KAGtB,OAAOvH,KAAKK,OAAO3D,IAAIgH,IAWzB83I,EAAQ7gJ,UAAUsK,QAAU,SAASquB,EAAYrsB,GAC/C,IAAIvD,EAAS1D,KAAKy7I,cAAd,UAWJ,IATAx0I,EAASvM,OAAO0kD,UAAWn4C,IAG3B,IAAgBqsB,EAAW,GAC3BrsB,EAAA,IAAgBqsB,EAAW,GAG3BrsB,EAAA,OAAmB,OAEfA,EAAQ,CACVvD,GAAO,IACP,IAAM0E,KACN+J,EAAqBzX,OAAOs/C,KAAK/yC,GAAjCmL,EAAA1C,MAAAC,QAAAwC,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAtC,OAAAC,cAA0C,KAAAwC,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA5X,OAAA,MAAA+X,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAnC,QAAAC,KAAA,MAAAqC,EAAAD,EAAAzV,MAAA,IAA/Bk/I,EAA+BxpI,EACxClK,EAAQ3N,KAAQqhJ,EAAhB,IAA0B70I,EAAO60I,IAEnCp4I,GAAO0E,EAAQb,KAAK,KAGtB,OAAOvH,KAAKK,OAAO3D,IAAIgH,IASzB83I,EAAQ7gJ,UAAUkhJ,iBAAmB,SAASzvC,EAAO2vC,EAAaC,GAoBhEh8I,KAAKogE,OAAOgsC,MAAWvoG,KAnBJ,SAAS41C,GAY1BuiG,EAAaviG,EAAK1/C,KAAK+K,IANT,SAAS1J,GACrB,OACEk4B,YAAal4B,EAAO6gJ,IAAK7gJ,EAAOw/I,KAChCx+I,KAAMhB,EAAO8gJ,kBAMF,SAASziG,GACxBuiG,UASJR,EAAQz/I,OAASkM,QAAQlM,OAAO,wBAC9Bg6F,EAAA,EAAiB35F,QAGJ+L,QAAQ,uBAAwBqzI,GAG/C,IAAAW,EAAA,ECnKMC,EAAU,SAAS38I,EAAOC,GAM9BM,KAAKK,OAASZ,EAMdO,KAAKq8I,gBAAkB38I,EAAUa,IAAI,sBAAwBb,EAAUhD,IAAI,yBAQ3EsD,KAAKs8I,oBAAsBt8I,KAAKq8I,gBAAgBE,YAAc,mCAGlB,MAAxCv8I,KAAKs8I,oBAAoBr0E,QAAQ,KACnCjoE,KAAKs8I,qBAAuB,KAS9Bt8I,KAAKw8I,iBAAmB,sEAU1BJ,EAAQzhJ,UAAU8hJ,SAAW,SAAS5gI,EAAa9H,IAEjDA,EAASA,OAIJ,UACHA,EAAA,QAAoB,SASjBA,EAAA,UACHA,EAAA,QAAoB,OAItB,IAAIrQ,EAAM1D,KAAKs8I,oBAiBf,GAbIvoI,EAAA,WACFrQ,GAAUqQ,EAAA,SAAV,KAGFrQ,GAAUqQ,EAAA,QAAV,IAA+B/T,KAAKw8I,iBAApC,IAAwDzoI,EAAA,QAAxD,IAKArQ,GAFyBmY,EAAY/W,IAAI,SAAA5I,GAAA,OAAKA,EAAEqL,KAAK,OAAMA,KAAK,KAM5DwM,EAAO3L,QAAS,CAClB1E,GAAO,IACP,IAAM0E,KACNoH,EAAqB9U,OAAOs/C,KAAKjmC,EAAO3L,SAAxCqH,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAAkD,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAjV,OAAA,MAAAwV,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAQ,QAAAC,KAAA,MAAAF,EAAAH,EAAAhT,MAAA,IAAvCk/I,EAAuC/rI,EAChD3H,EAAQ3N,KAAQqhJ,EAAhB,IAA0B/nI,EAAO3L,QAAQ0zI,IAE3Cp4I,GAAO0E,EAAQb,KAAK,KAGtB,OAAOvH,KAAKK,OAAO3D,IAAIgH,IAUzB04I,EAAQzhJ,UAAU+hJ,WAAa,SAASppH,EAAYvf,IAClDA,EAASA,OAGT,QAAoB,UAIfA,EAAA,UACHA,EAAA,QAAoB,OAItB,IAAIrQ,EAAM1D,KAAKs8I,oBAef,GAXIvoI,EAAA,WACFrQ,GAAUqQ,EAAA,SAAV,KAGFrQ,GAAUqQ,EAAA,QAAV,IAA+B/T,KAAKw8I,iBAApC,IAAwDzoI,EAAA,QAAxD,IAIArQ,GADyB4vB,EAAW/rB,KAAK,KAIrCwM,EAAO3L,QAAS,CAClB1E,GAAO,IACP,IAAM0E,KACN+J,EAAqBzX,OAAOs/C,KAAKjmC,EAAO3L,SAAxCgK,EAAA1C,MAAAC,QAAAwC,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAtC,OAAAC,cAAkD,KAAAwC,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA5X,OAAA,MAAA+X,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAnC,QAAAC,KAAA,MAAAqC,EAAAD,EAAAzV,MAAA,IAAvCk/I,EAAuCxpI,EAChDlK,EAAQ3N,KAAQqhJ,EAAhB,IAA0B/nI,EAAO3L,QAAQ0zI,IAE3Cp4I,GAAO0E,EAAQb,KAAK,KAGtB,OAAOvH,KAAKK,OAAO3D,IAAIgH,KAOzB04I,EAAQrgJ,OAASkM,QAAQlM,OAAO,0BAGjBoM,QAAQ,qBAAsBi0I,GAG7C,IAAAO,EAAA,WClKMC,KAqCN,SAASC,EAA8CjwH,EAAQiwH,GAC7D,OAAOA,EAA8CjwH,GA9BvDgwH,EAAQ7gJ,OAASkM,QAAQlM,OAAO,sCAC9B22H,EAAA,EAA0B32H,OAAOK,KACjC+/I,EAA4BpgJ,OAAOK,OAGrCwgJ,EAAQ7gJ,OAAO02C,KAAf,iBAAmC,SAACC,GAClCA,EAAeC,IAAI,8BAA+Bj3C,EAAQ,SAI5DkhJ,EAAQ7gJ,OAAOa,MAAM,gDAKnB,SAACgwB,GACC,IAAMsmB,EAActmB,EAAA,8CACpB,YAAuB1sB,IAAhBgzC,EAA4BA,EACjC,qGA2BN0pG,EAAQ/zC,WAAa,SAASx1D,EAAU3zC,EAAWgtB,EAAQowH,GAMzD98I,KAAK2zC,SAAWN,EAMhBrzC,KAAKyjE,QAAU/2C,EAMf1sB,KAAK88I,qBAAuBA,EAM5B98I,KAAK+8I,SAML/8I,KAAKwuI,WAMLxuI,KAAKoI,WAOLpI,KAAKwvI,WACHpzI,KAAM,YACN40I,QAAS,OACT3sH,OAAQrkB,KAAK88I,qBAAqBlB,2BAOpC57I,KAAK0vI,WACHngE,OAAQvvE,KAAKkwI,QAAQ7yI,KAAK2C,OAO5BA,KAAKyuI,YAAc,IA7DrBmO,EAAQ/zC,4EAwER+zC,EAAQ/zC,WAAWluG,UAAUu1I,QAAU,SAASztH,EAAOwkF,EAAYgF,GAC7DjsG,KAAK+8I,UACP/8I,KAAK+8I,SAAS91C,IA2BlB,IAAM+1C,GACJjtH,WAAY6sH,EAAQ/zC,WACpB1lC,UACE45E,SAAY,+BACZvO,WAAc,4BACdC,YAAe,mCAEjBv7F,YAAa2pG,GAGfD,EAAQ7gJ,OAAOunE,UAAU,qBAAsB05E,GAG/C,IAAAC,EAAA,6ECvKMC,cAiDN,SAASC,EAA8BvwH,EAAQuwH,GAC7C,OAAOA,EAA8BvwH,GA7BvCswH,EAAQnhJ,OAASkM,QAAQlM,OAAO,+BAC9BogJ,EAA4BpgJ,OAAOK,KACnC6gJ,EAAmClhJ,OAAOK,OAG5C8gJ,EAAQnhJ,OAAO02C,KAAf,iBAAmC,SAACC,GAClCA,EAAeC,IAAI,8BAA+Bj3C,EAAQ,SAI5DwhJ,EAAQnhJ,OAAOa,MAAM,gCAKnB,SAACgwB,GACC,IAAMsmB,EAActmB,EAAA,8BACpB,YAAuB1sB,IAAhBgzC,EAA4BA,EACjC,qFA0BNgqG,EAAQr0C,WAAa,SAASn8E,EAAQqP,EAAUp8B,EAAIm9I,GAMlD98I,KAAK4zC,OAASlnB,EAMd1sB,KAAK6zC,SAAW9X,EAMhB/7B,KAAKI,IAAMT,EAMXK,KAAKo9I,sBAAwBN,EAM7B98I,KAAK8E,IAML9E,KAAK6W,QAML7W,KAAKq9I,aAAe,GAMpBr9I,KAAK8Z,UAML9Z,KAAKkyG,YAMLlyG,KAAKs9I,SAMLt9I,KAAKu9I,gBAAkB,IAAIvyG,EAAA,EAM3BhrC,KAAK85D,cAAgB,IAAI3uB,EAAA,GACvBluB,SAAUjd,KAAKu9I,kBAOjBv9I,KAAKuxB,aAAe,IAAI47F,EAAA,GACtB9oG,OAAQrkB,KAAK85D,cACbziD,MAAQ,SAASR,EAASyO,GACxB,OAAQ,IAAIu0D,EAAA,GACVhhE,KAAM,IAAIkuB,EAAA,GACR3tB,KAAM,IAAI0gE,EAAA,GACR3hE,MAAOnY,KAAK8Z,WAAa,YAE3BwE,KAAM,0BACNhF,SAAU,GACVhB,OAAQ,IAAIgzE,EAAA,GACV9yE,MAAO,EACPL,MAAOnY,KAAKkyG,aAAe,YAE7Br5F,KAAM,UAGTxb,KAAK2C,QAQVA,KAAKw9I,eAAiB,IAAI7jE,EAAA,GACxB18D,SAAUjd,KAAKu9I,kBAOjBv9I,KAAKy9I,MAAQ,KAMbz9I,KAAK+8I,SAAW/8I,KAAK09I,UAAUrgJ,KAAK2C,MAMpCA,KAAK29I,aAAe,IA7HtBT,EAAQr0C,qEAgIRq0C,EAAQr0C,WAAWluG,UAAUm7C,QAAU,WAAW,IAAAvzC,EAAAvC,KAChDA,KAAK8E,IAAIslB,SAASpqB,KAAKuxB,cAGvBvxB,KAAKw9I,eAAe78H,WAAU,GAC9B3gB,KAAK8E,IAAI6uB,eAAe3zB,KAAKw9I,gBAE7Bx9I,KAAKw9I,eAAe56G,GAAG,YAAa,SAACngB,GACnC,IAAM5L,EAAU4L,EAAMxF,SAASiN,WAAW,GAC1C3nB,EAAKu3D,cAAcj1C,QACnBtiB,EAAKq7I,aAAa/mI,KAGpB7W,KAAK4zC,OAAO3mB,OACV,kBAAM1qB,EAAKsU,SACX,SAAC+J,EAAQsM,GACHtM,GACFre,EAAKs7I,mBAEQ,OAAXj9H,IACFre,EAAKu3D,cAAcj1C,QACnBtiB,EAAK86I,aAAe,OAS5BH,EAAQr0C,WAAWluG,UAAUqpE,WAAa,WACxChkE,KAAK8E,IAAIuqB,YAAYrvB,KAAKuxB,cAC1BvxB,KAAKw9I,eAAe78H,WAAU,GAC9B3gB,KAAK8E,IAAI4uB,kBAAkB1zB,KAAKw9I,iBAMlCN,EAAQr0C,WAAWluG,UAAUiI,IAAM,WAAW,IAAAsD,EAAAlG,KACxCA,KAAKy9I,OACPz9I,KAAK8E,IAAI4uB,kBAAkB1zB,KAAKy9I,OAGlCz9I,KAAKy9I,MAAQ,IAAIz0C,EAAA,GACf/rF,SAAUjd,KAAKu9I,gBACf7/I,KAA2C,UAG7CsC,KAAKy9I,MAAM76G,GAAG,YAAa,WACrB18B,EAAK2Q,SACP3Q,EAAK4zD,cAAcl1C,cAAc1e,EAAK2Q,WAI1C7W,KAAKy9I,MAAM76G,GAAG,UAAW,SAACngB,GACpBvc,EAAKu3I,OACPv3I,EAAKpB,IAAI4uB,kBAAkBxtB,EAAKu3I,OAElCv3I,EAAK03I,aAAan7H,EAAM5L,SACxB3Q,EAAKs3I,eAAe78H,WAAU,KAGhC3gB,KAAKw9I,eAAe78H,WAAU,GAC9B3gB,KAAK8E,IAAI6uB,eAAe3zB,KAAKy9I,QAQ/BP,EAAQr0C,WAAWluG,UAAUmjJ,YAAc,SAASxqH,EAAY5tB,GAC9D,IAAMq4I,EAAwB/xE,EAAA,EAAkB14C,EAAYtzB,KAAK8E,IAAIqa,UAAUkxB,iBACjE,KAAV3qC,IACFA,EAAQq4I,EAAsBx2I,KAAK,MAErCvH,KAAK6W,QAAU,IAAIuwC,EAAA,GACjB/sC,SAAU,IAAIgtC,EAAA,EAAY02F,GAC1B3hJ,KAAMsJ,KAIVw3I,EAAQr0C,WAAWluG,UAAUkjJ,iBAAmB,WAAW,IAAA72I,EAAAhH,KAEzDA,KAAKq9I,aAAoCr9I,KAAK6W,QAAQna,IAAI,SAAW,GAGrEsD,KAAK85D,cAAcj1C,QACnB7kB,KAAK85D,cAAcr1C,WAAWzkB,KAAK6W,SAG/B7W,KAAKs9I,UACPt9I,KAAK6zC,SAAS,WACZ7sC,EAAKs2I,SAASt2I,EAAK6P,YASzBqmI,EAAQr0C,WAAWluG,UAAU+iJ,UAAY,SAAStJ,GAChD,IAAM9gH,EAAa8gH,EAAS9gH,WAAWxuB,IAAI08C,YACrC97C,EAAQ0uI,EAAS1uI,MACvB1F,KAAK89I,YAAYxqH,EAAY5tB,GAC7B,IAAMs4I,EAA6Ch+I,KAAK6W,QAAQuE,cAAeW,iBAC/E/b,KAAK8E,IAAIqa,UAAU81F,UAAU+oC,IAS/Bd,EAAQr0C,WAAWluG,UAAUijJ,aAAe,SAAS/mI,GACnD,IAAMid,EAAQ9zB,KAAKi+I,oBAAoBpnI,GAGjCqnI,EAAa,SAASzkG,GAC1B,IAEMnmB,GAFMkuB,WAAW/H,EAAA,UACX+H,WAAW/H,EAAA,WAEjB/zC,EAAQ+zC,EAAA,kBACdz5C,KAAK89I,YAAYxqH,EAAY5tB,IAC5BrI,KAAK2C,MAEFm+I,EAAW,SAAS1kG,GACxBz5C,KAAK29I,aAAe,0CACpB35I,QAAQmyB,IAAIsjB,IACXp8C,KAAK2C,MAERA,KAAKI,IAAImvG,KAAKvvG,KAAKo9I,sBAAsBn4I,QAAQ6uB,OAC9CjwB,KAAKq6I,EAAU7gJ,KAAK2C,MAAOm+I,EAAQ9gJ,KAAK2C,QAS7Ck9I,EAAQr0C,WAAWluG,UAAUsjJ,oBAAsB,SAASlrH,GAC1D,IACMm2B,EADyCn2B,EAAM3X,cAC7BW,iBAClBpF,EAAa3W,KAAK8E,IAAIqa,UAAUkxB,gBACtC,OAAO27B,EAAA,EAAgB9iB,EAAQvyC,IA8BjCumI,EAAQtqG,YACN7iB,WAAYmtH,EAAQr0C,WACpB1lC,UACEr+D,IAAO,yBACP+R,QAAW,6BACXiD,UAAa,gCACbo4F,YAAe,kCACforC,SAAY,gCAEdpqG,YAAaiqG,GAGfD,EAAQnhJ,OAAOunE,UAAU,qBAAsB45E,EAAQtqG,YAGvD,IAAAwrG,EAAA,mBClYMC,KAkDN,SAASC,EAAuB1xH,EAAQ0xH,GACtC,OAAOA,EAAuB1xH,GAlChCyxH,EAAQtiJ,OAASkM,QAAQlM,OAAO,wBAC9Bg6F,EAAA,EAAiB35F,KACjBq7F,EAAA,EAAgBr7F,KAChB+/I,EAA4BpgJ,OAAOK,KACnCugJ,EAA0B5gJ,OAAOK,KACjCgiJ,EAAmCriJ,OAAOK,OAI5CiiJ,EAAQtiJ,OAAO02C,KAAf,iBAAmC,SAACC,GAClCA,EAAeC,IAAI,uBAAwBj3C,EAAQ,SAIrD2iJ,EAAQtiJ,OAAOa,MAAM,yBAKnB,SAACgwB,GACC,IAAMsmB,EAActmB,EAAA,uBACpB,YAAuB1sB,IAAhBgzC,EAA4BA,EACjC,uEA8BNmrG,EAAQx1C,WAAa,SAASnpG,EAAWgtB,EAAQ6xH,EAAoBzB,EAAsBn9I,EAAIswG,GAAc,IAAA1tG,EAAAvC,KAM3GA,KAAKyjE,QAAU/2C,EAMf1sB,KAAKw+I,oBAAsBD,EAM3Bv+I,KAAKo9I,sBAAwBN,EAM7B98I,KAAKq8I,gBAAkB38I,EAAUa,IAAI,sBAAwBb,EAAUhD,IAAI,yBAa3EsD,KAAKy+I,gBAAkBz+I,KAAKq8I,gBAAgBqC,aAM5C1+I,KAAK2+I,uBAAyB3+I,KAAKy+I,gBAAgBlkJ,OAAS,EAAIyF,KAAKy+I,gBAAgB,GAAK,KAE1F/xH,EAAOO,OACL,kBAAM1qB,EAAKo8I,wBACX3+I,KAAK4+I,eAAevhJ,KAAK2C,OAO3BA,KAAKI,IAAMT,EAMXK,KAAK8E,IAML9E,KAAK29I,aAAe,GAMpB39I,KAAK6+I,cAAgB,KAMrB7+I,KAAK8+I,eAAiB,KAMtB9+I,KAAK++I,YAML/+I,KAAKwsG,QACHwyC,aAAc,UACdC,eAAgB,UAChBC,mBAAoB,UACpBC,qBAAsB,UACtBC,WAAY,UACZC,aAAc,WAOhBr/I,KAAKs/I,aAAe,IAAIn0G,EAAA,GACtBluB,cAOFjd,KAAKu/I,YAAc,IAAIpyB,EAAA,GACrB9oG,OAAQrkB,KAAKs/I,aACbjoI,MAAO,IAAIwiE,EAAA,GACTzgE,KAAM,IAAI0gE,EAAA,GACR3hE,MAAO,2BAETG,OAAQ,IAAIgzE,EAAA,GACVnzE,MAAO,yBACPK,MAAO,QAUbxY,KAAKw/I,cAAgB,EAOrBx/I,KAAKy/I,cAAgB,KAMrBz/I,KAAK0/I,sBAAwB,qBAM7B1/I,KAAKy9I,MAAQ,KAUbz9I,KAAK2/I,aACI1vC,EAC6BjwG,KAAK4+I,eAAevhJ,KAAK2C,MAVzC,KAYZ,IAlKZq+I,EAAQx1C,0GAwKRw1C,EAAQx1C,WAAWluG,UAAUm7C,QAAU,WACrC91C,KAAK8E,IAAIslB,SAASpqB,KAAKu/I,cAOzBlB,EAAQx1C,WAAWluG,UAAUilJ,WAAa,WACxC5/I,KAAK6+I,cAAgB,KACrB7+I,KAAK8+I,eAAiB,KACtB9+I,KAAK++I,YACL/+I,KAAKw/I,cAAgB,EACrBx/I,KAAKy/I,cAAgB,KACrBz/I,KAAKs/I,aAAaz6H,QAClB7kB,KAAK29I,aAAe,IAStBU,EAAQx1C,WAAWluG,UAAUsjJ,oBAAsB,SAASlrH,GAC1D,IACMm2B,EADyCn2B,EAAM3X,cAC7BW,iBAClBpF,EAAa3W,KAAK8E,IAAIqa,UAAUkxB,gBACtC,OAAO27B,EAAA,EAAgB9iB,EAAQvyC,IAOjC0nI,EAAQx1C,WAAWluG,UAAUklJ,aAAe,WAE1C,IAAMC,EAAa9/I,KAAK6+I,cACxB7+I,KAAK6+I,cAAgB7+I,KAAK8+I,eAC1B9+I,KAAK8+I,eAAiBgB,EAGtB9/I,KAAK++I,SAAW/+I,KAAK++I,SAAS95I,WAUhCo5I,EAAQx1C,WAAWluG,UAAUolJ,YAAc,SAASC,GAClD,IAOgBjwI,EAPZkwI,KACE5vI,EAAS,IAAIq3G,EAAA,EACbw4B,GACJhiI,eAAgB,YAChBC,kBAAmBne,KAAK8E,IAAIqa,UAAUkxB,iBAGpC2vG,EAAMG,MACRF,EAAeD,EAAMG,KAAKr7I,IAAI,SAAAs7I,GAAA,OAAOA,EAAIC,MAAMv7I,IAAI,SAAAw7I,GAAA,OAAQ,IAAIl5F,EAAA,GAAW/sC,SAAUhK,EAAOsW,aAAa25H,EAAKjmI,SAAU6lI,SAEvHD,GAAelwI,MAAGoM,OAAHjhB,MAAA6U,EAAakwI,IACnBD,EAAM3lI,UAEf4lI,EAAaxlJ,KAAK,IAAI2sD,EAAA,GAAW/sC,SAAUhK,EAAOsW,aAAaq5H,EAAM3lI,SAAU6lI,MAEjF,OAAOD,GAMT5B,EAAQx1C,WAAWluG,UAAUikJ,eAAiB,WAAW,IAAA14I,EAAAlG,KACvD,GAAIA,KAAK6+I,eAAiB7+I,KAAK8+I,eAAgB,CAE7C9+I,KAAKs/I,aAAaz6H,QAElB,IAAM07H,EAAYvgJ,KAAKi+I,oBAAoBj+I,KAAK6+I,eAC1C2B,EAAUxgJ,KAAKi+I,oBAAoBj+I,KAAK8+I,gBACxC2B,EAAOzgJ,KAAK++I,SAAS35I,OAAO,SAAAs7I,GAAA,OAAuB,OAAhBA,EAAI7pI,UAAkB/R,IAAI,SAAA47I,GAAA,OAAOx6I,EAAK+3I,oBAAoByC,EAAI7pI,WACjGmpI,GAAUO,GAAWpkI,OAAOskI,GAAOD,IAEnCG,EAAc,SAASlnG,GAC3B,IAAMx8B,EAAWjd,KAAK+/I,YAAYtmG,EAAK1/C,KAAK6mJ,OAAO,IACnD,GAAwB,IAApB3jI,EAAS1iB,OAAb,CAIAyF,KAAKs/I,aAAa53F,YAAYzqC,GAG9Bjd,KAAK8E,IAAIqa,UAAU8wB,IAAIjwC,KAAKs/I,aAAaz/H,aAEzC7f,KAAKw/I,cAAgBhoH,SAASiiB,EAAK1/C,KAAK6mJ,OAAO,GAAG9+D,SAAU,IAC5D9hF,KAAKy/I,cAAgBhmG,EAAK1/C,KAAK6mJ,OAAO,GAAG5gI,SAGzC,IAAM6gI,EAA8C5jI,EAAS,GAAG7B,cAAesE,gBAAgB,GACzFohI,EAA4C7jI,EAASA,EAAS1iB,OAAS,GAAG6gB,cAAesE,gBAAgB,GAGzGqhI,GAA6C/gJ,KAAK6+I,cAAczjI,cAAeW,iBAAkB8kI,GACjGG,GAAcF,EAAuC9gJ,KAAK8+I,eAAe1jI,cAAeW,kBACxFklI,GACJ,IAAI75F,EAAA,EAAU,IAAIO,EAAA,EAAiBo5F,IACnC,IAAI35F,EAAA,EAAU,IAAIO,EAAA,EAAiBq5F,KAIrChhJ,KAAKs/I,aAAa53F,YAAYu5F,QAxB5Bj9I,QAAQmyB,IAAI,sCAyBb94B,KAAK2C,MAEFkhJ,EAAY,SAASznG,GACzBz5C,KAAK29I,aAAe,wCACpB35I,QAAQmyB,IAAIsjB,IACXp8C,KAAK2C,MAEFoI,GACNA,OAAmB,EACnBA,UAAsB,EACtBA,WAAwB,WAElB2L,KACNA,EAAA,QAAoB3L,EAEhBpI,KAAK2+I,yBACP5qI,EAAA,SAAqB/T,KAAK2+I,uBAAL,SAGvB3+I,KAAKI,IAAImvG,KAAKvvG,KAAKw+I,oBAAoB/B,SAASuD,EAAOjsI,IACpDlQ,KAAK88I,EAAWtjJ,KAAK2C,MAAOkhJ,EAAS7jJ,KAAK2C,SAOjDq+I,EAAQx1C,WAAWluG,UAAUwmJ,OAAS,WACpCnhJ,KAAK++I,SAAStkJ,MACZoc,QAAS,KACTkmI,SAAU,QAQdsB,EAAQx1C,WAAWluG,UAAUymJ,UAAY,SAAS93H,GAC5CtpB,KAAK++I,SAASxkJ,OAAS+uB,IACzBtpB,KAAK++I,SAAStjJ,OAAO6tB,EAAO,GAC5BtpB,KAAK4+I,mBAKTP,EAAQtiJ,OAAOunE,UAAU,eACvBvzC,WAAYsuH,EAAQx1C,WACpB1lC,UACEr+D,IAAO,mBAETouC,YAAaorG,IAIf,IAAA+C,EAAA,ECxYAC,UALgBr5I,QAAQlM,OAAO,qBAC7BslJ,EAA4BtlJ,OAAOK,mCCA/BmlJ,GAAc,SACTC,EAAA,EACT,2BACA,2BACA,SACA,eACA,eACA,gBACA,0CACA,WACA,YACAj6I,KAAK,KAGPk6I,EAAA,EAAMn2C,KAAK,YAAai2C,GACxBG,EAAA,EAAqBD,EAAA,GACrBz1E,EAAA,EAAW,aAAay/B,WAJA,MAAS,MAAS,KAAS,QAMnD,8DCPKtuG,OAAOimF,wBACV37E,MAAM,oVAGNtK,OAAOoiE,SAAW,0BAcpB,IAAMuoC,GAAU,SAASp7E,EAAQhtB,EAAW4tC,EAAUwxC,EAASn/E,GAC7DgiJ,EAAA,EAAwC9mJ,KAAKmF,MAC3C25F,KAAM,MACNyhB,eACEr7F,QAAS,OAAQ,QACjB0kE,KAAM,EACNm9D,aAAc,IAAK,IAAK,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAK,IAAM,GAAK,OAE9Dl1H,EAAQhtB,GAMXM,KAAK6hJ,8BAAgC5vB,EAAA,EDzBvB,YCyB4D,aAM1EjyH,KAAK8hJ,YAAc,IAMnB9hJ,KAAK+hJ,aAAc,EAMnB/hJ,KAAKgiJ,qBAAuB,KAAQ,IAAQ,IAAO,IAAO,IAAO,IAAM,IAAM,IAAM,IAAK,IAAK,IAAK,IAMlGhiJ,KAAKiiJ,iBAAmB,QAMxBjiJ,KAAKkiJ,2BACHC,SAOFniJ,KAAKoiJ,2BACH/7D,KAAM,YACN3gF,MAAO,iBACPN,OAAQ,sCAERihF,KAAM,aACN3gF,MAAO,gBACPN,OAAQ,sCAERihF,KAAM,YACN3gF,MAAO,QACPN,OAAQ,yBAOVpF,KAAKqiJ,eACHC,iBAAoB,WAAY,aAChCC,sBAAuB,OAAQ,WAC/BC,qBAAsB,cAAe,aAKvC,IAAM3iJ,EAAiBH,EAAUhD,IAAI,kBAcrC,GAbAmD,EAAe4F,UAAU,mBACzB5F,EAAe4F,UAAU,qBACzB5F,EAAe4F,UAAU,qBACzB5F,EAAe4F,UAAU,eACzB5F,EAAe4F,UAAU,mBACzB5F,EAAe4F,UAAU,eAMzBzF,KAAKyiJ,iBAAmB,iBAEpB/iJ,EAAUa,IAAI,aAAc,CAC9B,IAAM6H,EAAU1I,EAAUa,IAAI,iBAAmBb,EAAUhD,IAAI,sBAAmBwD,GACpE,IAAIwiJ,GAAAr5E,GACZt1D,OAAOrU,EAAUhD,IAAI,aAAc0L,GACtCu6I,UAAUC,GAAAv5E,GACVw5E,oIAIP/xG,EAAA,EAAgBg3D,GAAS65C,EAAA,GAOzB75C,GAAQntG,UAAUmoJ,UAAY,SAASrgI,GACjCA,EAAM6mE,SAAyB,MAAd7mE,EAAM3Y,MACzB9J,KAAKs6F,kBAAmB,EACxB73E,EAAMk5B,oBAKVmsD,GAAQ/rG,OAASkM,QAAQlM,OAAO,kBAC9Bi9I,EAAQj9I,OAAOK,KACfulJ,EAAA,EAAwC5lJ,OAAOK,KAC/C2mJ,EAAA,EAAgB3mJ,KAChBklJ,EAAkBllJ,KAClBm/I,EAA2Bn/I,QAGd2zB,WAAW,+BAAgC+3E,IAE1DnqG,EAAA,+BCtKA5B,EAAAD,QAAA,i7FCAAC,EAAAD,QAAA,4YCAAC,EAAAD,QAAA,+PCAAC,EAAAD,QAAA,uSCAAC,EAAAD,QAAA,gzECAAC,EAAAD,QAAA,mjDCAAC,EAAAD,QAAA,m0ECAAC,EAAAD,QAAA,otCCAAC,EAAAD,QAAA,ypCCAAC,EAAAD,QAAA,0jKCAAC,EAAAD,QAAA,ipCCAAC,EAAAD,QAAA,q6GCAAC,EAAAD,QAAA,i+GCAAC,EAAAD,QAAA,8pHCAAC,EAAAD,QAAA,qoGCAAC,EAAAD,QAAA,snBCAAC,EAAAD,QAAA,wUCAAC,EAAAD,QAAA,kxBCAAC,EAAAD,QAAA,+SCAAC,EAAAD,QAAA,m3FCAAC,EAAAD,QAAA,i+FCAAC,EAAAD,QAAA,4mCCAAC,EAAAD,QAAA,6jBCAAC,EAAAD,QAAA,2ICAAC,EAAAD,QAAA,4mBCAAC,EAAAD,QAAA,kxECAAC,EAAAD,QAAA,svBCAAC,EAAAD,QAAA,osRCAAC,EAAAD,QAAA,2iBCAAC,EAAAD,QAAA,guCCAAC,EAAAD,QAAA,82GCAAC,EAAAD,QAAA,q8ECAAC,EAAAD,QAAA,kjOCAAC,EAAAD,QAAA,wsBCAAC,EAAAD,QAAA,2OCAAC,EAAAD,QAAA,+uBCAAC,EAAAD,QAAA","file":"desktop_alt.8cb704.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([352,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","const exports = {};\n\nexports.assert = function(condition, opt_message, var_args) {\n  return condition;\n};\n\nexports.assertNumber = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertString = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertFunction = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertObject = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertArray = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertBoolean = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertElement = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertInstanceof = function(value, type, opt_message, var_args) {\n  return value;\n};\n\nexports.assertObjectPrototypeIsIntact = function() {};\n\nexport default exports;\n","/**\n * @module ngeo.GeometryType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  CIRCLE: 'Circle',\n  /**\n   * @type {string}\n   * @export\n   */\n  LINE_STRING: 'LineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_LINE_STRING: 'MultiLineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POINT: 'MultiPoint',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POLYGON: 'MultiPolygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  POINT: 'Point',\n  /**\n   * @type {string}\n   * @export\n   */\n  POLYGON: 'Polygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  RECTANGLE: 'Rectangle',\n  /**\n   * @type {string}\n   * @export\n   */\n  TEXT: 'Text'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function() {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayerWMTS.matrixSet,\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Rule\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @implements {ngeox.rule.Rule}\n */\nconst exports = class {\n\n  /**\n   * The abstract class for all filter rules.\n   *\n   * Rules are used to define filters that can be applied on data sources.\n   * A rule is usually a combination of 3 things:\n   *\n   * - a property name, for example 'city_name'\n   * - an operator, for example 'is equal to'\n   * - and an expression, for example 'Chicoutimi'.\n   *\n   * A rule is useful to hold those properties and change them on the fly.\n   * For example, changing an operator from 'is equal to' to 'like'.\n   *\n   * Also, a rule is especially useful for its `value` getter, which returns\n   * the combination of properties described above or `null` if there are some\n   * missing.  The `value` getter can be watched and used when the value is\n   * not null.\n   *\n   * When the operator is `between`, the `lowerBoundary` and `upperBoundary`\n   * properties are used instead of `expression`.\n   *\n   * @struct\n   * @param {!ngeox.rule.RuleOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * Whether the rule is active or not. Used by the `ngeo-rule` component.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.active_ = options.active === true;\n\n    /**\n     * The expression of the rule. The expression and boundaries are mutually\n     * exclusives.\n     *\n     * Note: exported (instead of private) due to the problem with the\n     * compiler. See the getter/setter methods below...  As a setter, the\n     * `expression` property would support being bond to an `ng-model`. Without\n     * it, it can't unless we expose the property directly.\n     *\n     * @type {?number|string}\n     * @export\n     */\n    this.expression = options.expression !== undefined ?\n      options.expression : null;\n\n    /**\n     * The lower boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.lowerBoundary_ = options. lowerBoundary !== undefined ?\n      options.lowerBoundary : null;\n\n    /**\n     * The rule operator.\n     * @type {?string}\n     * @private\n     */\n    this.operator_ = options.operator || null;\n\n    /**\n     * The upper boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.upperBoundary_ = options. upperBoundary !== undefined ?\n      options.upperBoundary : null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the rule is a custom one or not.\n     * @type {boolean}\n     * @private\n     */\n    this.isCustom_ = options.isCustom !== false;\n\n    /**\n     * The human-readable name of the rule.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n\n    /**\n     * A list of rule operators.\n     * @type {?Array.<string>}\n     * @private\n     */\n    this.operators_ = options.operators || null;\n\n    /**\n     * The property name (a.k.a. the attribute name).\n     * @type {string}\n     * @private\n     */\n    this.propertyName_ = options.propertyName;\n\n    /**\n     * The type of rule.\n     * @type {string}\n     * @private\n     */\n    this.type_ = googAsserts.assert(options.type);\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Array.<!ol.EventsKey>}\n     * @protected\n     */\n    this.listenerKeys = [];\n\n  }\n\n  // === Dynamic property getters/setters ===\n\n  /**\n   * @return {boolean} Active\n   * @export\n   */\n  get active() {\n    return this.active_;\n  }\n\n  /**\n   * @param {boolean} active Active\n   * @export\n   */\n  set active(active) {\n    this.active_ = active;\n  }\n\n  /**\n   * The `expression` property does not have conventionnal getter/setters\n   * method because of a limitation of the compiler. It doesn't support\n   * yet having such methods being extended in child classes.\n   *\n   * See: https://github.com/google/closure-compiler/issues/1089\n   *\n   * @return {?number|string} Expression\n   * @export\n   */\n  getExpression() {\n    return this.expression;\n  }\n\n  /**\n   * @param {?number|string} expression Expression\n   * @export\n   */\n  setExpression(expression) {\n    this.expression = expression;\n  }\n\n  /**\n   * @return {?number} Lower boundary\n   * @export\n   */\n  get lowerBoundary() {\n    return this.lowerBoundary_;\n  }\n\n  /**\n   * @param {?number} lowerBoundary Lower boundary\n   * @export\n   */\n  set lowerBoundary(lowerBoundary) {\n    this.lowerBoundary_ = lowerBoundary;\n  }\n\n  /**\n   * @return {?string} Operator\n   * @export\n   */\n  get operator() {\n    return this.operator_;\n  }\n\n  /**\n   * @param {?string} operator Operator\n   * @export\n   */\n  set operator(operator) {\n    this.operator_ = operator;\n  }\n\n  /**\n   * @return {?number} Upper boundary\n   * @export\n   */\n  get upperBoundary() {\n    return this.upperBoundary_;\n  }\n\n  /**\n   * @param {?number} upperBoundary Upper boundary\n   * @export\n   */\n  set upperBoundary(upperBoundary) {\n    this.upperBoundary_ = upperBoundary;\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {boolean} Is custom.\n   * @export\n   */\n  get isCustom() {\n    return this.isCustom_;\n  }\n\n  /**\n   * @return {string} name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n  /**\n   * @return {?Array.<string>} Operators\n   * @export\n   */\n  get operators() {\n    return this.operators_;\n  }\n\n  /**\n   * @return {string} Property name\n   * @export\n   */\n  get propertyName() {\n    return this.propertyName_;\n  }\n\n  /**\n   * @return {string} Type\n   * @export\n   */\n  get type() {\n    return this.type_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {?ngeox.rule.RuleSimpleValue|ngeox.rule.RuleRangeValue} Value.\n   * @export\n   */\n  get value() {\n    let value = null;\n\n    const expression = this.getExpression();\n    const lowerBoundary = this.lowerBoundary;\n    const operator = this.operator;\n    const propertyName = this.propertyName;\n    const upperBoundary = this.upperBoundary;\n\n    if (operator) {\n      if (operator === exports.OperatorType.BETWEEN ||\n          operator === exports.TemporalOperatorType.DURING) {\n        if (lowerBoundary !== null && upperBoundary !== null) {\n          value = {\n            operator,\n            lowerBoundary,\n            propertyName,\n            upperBoundary\n          };\n        }\n      } else {\n        if (expression !== null) {\n          value = {\n            expression,\n            operator,\n            propertyName\n          };\n        }\n      }\n    }\n\n    return value;\n  }\n\n  // === Other utility methods ===\n\n  /**\n   * Reset the following properties to `null`: expression, lowerBoundary,\n   * upperBoundary.\n   * @export\n   */\n  reset() {\n    if (this.getExpression() !== null) {\n      this.setExpression(null);\n    }\n    if (this.lowerBoundary !== null) {\n      this.lowerBoundary = null;\n    }\n    if (this.upperBoundary !== null) {\n      this.upperBoundary = null;\n    }\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.listenerKeys.forEach(olEvents.unlistenByKey);\n    this.listenerKeys.length = 0;\n  }\n\n};\n\n\n/**\n * @enum {string}\n */\nexports.OperatorType = {\n  BETWEEN: '..',\n  EQUAL_TO: '=',\n  GREATER_THAN: '>',\n  GREATER_THAN_OR_EQUAL_TO: '>=',\n  LESSER_THAN: '<',\n  LESSER_THAN_OR_EQUAL_TO: '<=',\n  LIKE: '~',\n  NOT_EQUAL_TO: '!='\n};\n\n\n/**\n * @enum {string}\n */\nexports.SpatialOperatorType = {\n  CONTAINS: 'contains',\n  INTERSECTS: 'intersects',\n  WITHIN: 'within'\n};\n\n\n/**\n * @enum {string}\n */\nexports.TemporalOperatorType = {\n  BEGINS: 'time_start',\n  DURING: 'time_during',\n  ENDS: 'time_end',\n  EQUALS: 'time_equal'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Several OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n","/**\n * @module gmf\n */\nconst exports = {};\n\n/**\n * The default template base URL for modules, used as-is by the template cache.\n * @type {string}\n */\n\n/**\n * @const\n * @export\n */\nexports.DATALAYERGROUP_NAME = 'data';\n\n/**\n * @const\n * @export\n */\nexports.EXTERNALLAYERGROUP_NAME = 'external';\n\n/**\n * @const\n * @export\n */\nexports.COORDINATES_LAYER_NAME = 'gmfCoordinatesLayerName';\n\n\n/**\n * @enum {string}\n */\nexports.PermalinkParam = {\n  BG_LAYER: 'baselayer_ref',\n  EXTERNAL_DATASOURCES_NAMES: 'eds_n',\n  EXTERNAL_DATASOURCES_URLS: 'eds_u',\n  FEATURES: 'rl_features',\n  MAP_CROSSHAIR: 'map_crosshair',\n  MAP_TOOLTIP: 'map_tooltip',\n  MAP_X: 'map_x',\n  MAP_Y: 'map_y',\n  MAP_Z: 'map_zoom',\n  TREE_GROUPS: 'tree_groups',\n  WFS_LAYER: 'wfs_layer',\n  WFS_NGROUPS: 'wfs_ngroups',\n  WFS_SHOW_FEATURES: 'wfs_showFeatures'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.FeatureHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olArray from 'ol/array.js';\nimport * as olColor from 'ol/color.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Provides methods for features, such as:\n *  - style setting / getting\n *  - measurement\n *  - export\n *\n * @constructor\n * @struct\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.$filter} $filter Angular filter.\n * @ngdoc service\n * @ngname ngeoFeatureHelper\n * @ngInject\n */\nconst exports = function($injector, $filter) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.decimals_ = undefined;\n  if ($injector.has('ngeoMeasureDecimals')) {\n    this.decimals_ = $injector.get('ngeoMeasureDecimals');\n  }\n\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.precision_ = undefined;\n  if ($injector.has('ngeoMeasurePrecision')) {\n    this.precision_ = $injector.get('ngeoMeasurePrecision');\n  }\n\n  /**\n   * @type {!ngeox.number}\n   */\n  this.numberFormat_ = /** @type {ngeox.number} */ ($filter('number'));\n\n  /**\n   * @type {!ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ ($filter('ngeoUnitPrefix'));\n\n  /**\n   * @type {!ngeox.numberCoordinates}\n   */\n  this.ngeoNumberCoordinates_ = /** @type {ngeox.numberCoordinates} */ ($filter('ngeoNumberCoordinates'));\n\n  /**\n   * Filter function to display point coordinates or null to don't use any filter.\n   * @type {function(*):string|null}\n   * @private\n   */\n  this.pointFilterFn_ = null;\n\n  /**\n   * Arguments to apply to the point filter function.\n   * @type {Array.<*>}\n   * @private\n   */\n  this.pointFilterArgs_ = [];\n\n  if ($injector.has('ngeoPointfilter')) {\n    const filterElements = $injector.get('ngeoPointfilter').split(':');\n    const filterName = filterElements.shift();\n    const filter = this.$filter_(filterName);\n    googAsserts.assertFunction(filter);\n    this.pointFilterFn_ = filter;\n    this.pointFilterArgs_ = filterElements;\n  } else {\n    this.pointFilterFn_ = null;\n  }\n\n  /**\n   * @type {!ol.proj.Projection}\n   * @private\n   */\n  this.projection_;\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n\n};\n\n\n/**\n * @param {!ol.proj.Projection} projection Projection.\n * @export\n */\nexports.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n// === STYLE METHODS ===\n\n\n/**\n * Set the style of a feature using its inner properties and depending on\n * its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @param {boolean=} opt_select Whether the feature should be rendered as\n *     selected, which includes additional vertex and halo styles.\n * @export\n */\nexports.prototype.setStyle = function(feature, opt_select) {\n  const styles = this.getStyle(feature);\n  if (opt_select) {\n    if (this.supportsVertex_(feature)) {\n      styles.push(this.getVertexStyle());\n    }\n    styles.unshift(this.getHaloStyle_(feature));\n  }\n  feature.setStyle(styles);\n};\n\n\n/**\n * Create and return a style object from a given feature using its inner\n * properties and depending on its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @return {!Array.<!ol.style.Style>} The style object.\n * @export\n */\nexports.prototype.getStyle = function(feature) {\n  const type = this.getType(feature);\n  let style;\n\n  switch (type) {\n    case ngeoGeometryType.LINE_STRING:\n      style = this.getLineStringStyle_(feature);\n      break;\n    case ngeoGeometryType.POINT:\n      style = this.getPointStyle_(feature);\n      break;\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      style = this.getPolygonStyle_(feature);\n      break;\n    case ngeoGeometryType.TEXT:\n      style = this.getTextStyle_(feature);\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  let styles;\n  if (style.constructor === Array) {\n    styles = /** @type {!Array.<!ol.style.Style>}*/ (style);\n  } else {\n    styles = [style];\n  }\n\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with linestring geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getLineStringStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n\n  const styles = [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPointStyle_ = function(feature) {\n  const size = this.getSizeProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const styles = [new olStyleStyle({\n    image: new olStyleCircle({\n      radius: size,\n      fill: new olStyleFill({\n        color: color\n      })\n    })\n  })];\n  // Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    const font_size = 10;\n    // https://reeddesign.co.uk/test/points-pixels.html\n    const point_to_px = 1.3;\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue,\n        size: font_size,\n        offsetY: -(size + (font_size / 2) * textLabelValues.length * point_to_px + 4)\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * Get an optional number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number|undefined}, The attribute value\n */\nexports.prototype.optNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (value !== undefined) {\n    if (typeof value == 'string') {\n      return +value;\n    } else {\n      return googAsserts.assertNumber(value);\n    }\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Get a number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number}, The attribute value\n */\nexports.prototype.getNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (typeof value == 'string') {\n    return +value;\n  } else {\n    return googAsserts.assertNumber(value);\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with polygon geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPolygonStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const opacity = this.getOpacityProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n\n  // fill color with opacity\n  const fillColor = color.slice();\n  fillColor[3] = opacity;\n\n  const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n\n  const styles = [new olStyleStyle({\n    fill: new olStyleFill({\n      color: fillColor\n    }),\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  if (showMeasure || showLabel) {\n    if (showMeasure && azimut !== undefined) {\n      // Radius style:\n      const line = this.getRadiusLine(feature, azimut);\n      const length = ngeoInteractionMeasure.getFormattedLength(\n        line, this.projection_, this.precision_, this.unitPrefixFormat_);\n\n      styles.push(new olStyleStyle({\n        geometry: line,\n        fill: new olStyleFill({\n          color: fillColor\n        }),\n        stroke: new olStyleStroke({\n          color: color,\n          width: strokeWidth\n        }),\n        text: this.createTextStyle_({\n          text: length,\n          angle: ((azimut % 180) + 180) % 180 - 90\n        })\n      }));\n\n      // Azimut style\n      styles.push(new olStyleStyle({\n        geometry: new olGeomPoint(line.getLastCoordinate()),\n        text: this.createTextStyle_({\n          text: `${this.numberFormat_(azimut, this.decimals_)}°`,\n          size: 10,\n          offsetX: Math.cos((azimut - 90) * Math.PI / 180) * 20,\n          offsetY: Math.sin((azimut - 90) * Math.PI / 180) * 20\n        })\n      }));\n\n      //Label Style\n      if (showLabel) {\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: this.getNameProperty(feature),\n            offsetY: -8,\n            exceedLength: true\n          })\n        }));\n      }\n    } else {\n      //Label Style\n      const textLabelValues = [];\n      if (showMeasure) {\n        textLabelValues.push(this.getMeasure(feature));\n      }\n      if (showLabel) {\n        textLabelValues.push(this.getNameProperty(feature));\n      }\n      if (showLabel ||  showMeasure) {\n        // display both label using  \\n\n        const textLabelValue = textLabelValues.join('\\n');\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: textLabelValue,\n            exceedLength: true\n          })\n        }));\n      }\n    }\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry, rendered as text.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getTextStyle_ = function(feature) {\n\n  return new olStyleStyle({\n    text: this.createTextStyle_({\n      text: this.getNameProperty(feature),\n      size: this.getSizeProperty(feature),\n      angle: this.getAngleProperty(feature),\n      color: this.getRGBAColorProperty(feature),\n      width: this.getStrokeProperty(feature)\n    })\n  });\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature to create the editing styles with.\n * @return {!Array.<!ol.style.Style>} List of style.\n * @export\n */\nexports.prototype.createEditingStyles = function(feature) {\n  // (1) Style definition depends on geometry type\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  const styles = [];\n\n  const geom = feature.getGeometry();\n  console.assert(geom);\n  const type = geom.getType();\n\n  if (type === 'Point') {\n    styles.push(\n      new olStyleStyle({\n        image: new olStyleCircle({\n          radius: width * 2,\n          fill: new olStyleFill({\n            color: blue\n          }),\n          stroke: new olStyleStroke({\n            color: white,\n            width: width / 2\n          })\n        }),\n        zIndex: Infinity\n      })\n    );\n  } else {\n    if (type === 'LineString') {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: white,\n            width: width + 2\n          })\n        })\n      );\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width\n          })\n        })\n      );\n    } else {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width / 2\n          }),\n          fill: new olStyleFill({\n            color: [255, 255, 255, 0.5]\n          })\n        })\n      );\n    }\n\n    // (2) Anything else than 'Point' requires the vertex style as well\n    styles.push(this.getVertexStyle(true));\n  }\n\n  return styles;\n};\n\n\n/**\n * Create and return a style object to be used for vertex.\n * @param {boolean=} opt_incGeomFunc Whether to include the geometry function\n *     or not. One wants to use the geometry function when you want to draw\n *     the vertex of features that don't have point geometries. One doesn't\n *     want to include the geometry function if you just want to have the\n *     style object itself to be used to draw features that have point\n *     geometries. Defaults to `true`.\n * @return {!ol.style.Style} Style.\n * @export\n */\nexports.prototype.getVertexStyle = function(opt_incGeomFunc) {\n  const incGeomFunc = opt_incGeomFunc !== undefined ? opt_incGeomFunc : true;\n\n  const options = {\n    image: new olStyleRegularShape({\n      radius: 6,\n      points: 4,\n      angle: Math.PI / 4,\n      fill: new olStyleFill({\n        color: [255, 255, 255, 0.5]\n      }),\n      stroke: new olStyleStroke({\n        color: [0, 0, 0, 1]\n      })\n    })\n  };\n\n  if (incGeomFunc) {\n    options.geometry = function(feature) {\n      const geom = feature.getGeometry();\n\n      if (geom.getType() == 'Point') {\n        return;\n      }\n\n      let innerMultiCoordinates;\n      let multiCoordinates = [];\n      let coordinates = [];\n      let i, ii;\n      if (geom instanceof olGeomLineString) {\n        coordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomMultiLineString) {\n        multiCoordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomPolygon) {\n        coordinates = geom.getCoordinates()[0];\n      } else if (geom instanceof olGeomMultiPolygon) {\n        innerMultiCoordinates = geom.getCoordinates();\n      }\n\n      if (innerMultiCoordinates) {\n        for (i = 0, ii = innerMultiCoordinates.length; i < ii; i++) {\n          multiCoordinates = multiCoordinates.concat(innerMultiCoordinates[i]);\n        }\n      }\n      for (i = 0, ii = multiCoordinates.length; i < ii; i++) {\n        coordinates = coordinates.concat(multiCoordinates[i]);\n      }\n\n      if (coordinates.length) {\n        return new olGeomMultiPoint(coordinates);\n      } else {\n        return geom;\n      }\n    };\n  }\n\n  return new olStyleStyle(options);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Whether the feature supports vertex or not.\n * @private\n */\nexports.prototype.supportsVertex_ = function(feature) {\n  const supported = [\n    ngeoGeometryType.LINE_STRING,\n    ngeoGeometryType.POLYGON,\n    ngeoGeometryType.RECTANGLE\n  ];\n  const type = this.getType(feature);\n  return olArray.includes(supported, type);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getHaloStyle_ = function(feature) {\n  const type = this.getType(feature);\n  let style;\n  const haloSize = 3;\n\n  switch (type) {\n    case ngeoGeometryType.POINT:\n      const size = this.getSizeProperty(feature);\n      style = new olStyleStyle({\n        image: new olStyleCircle({\n          radius: size + haloSize,\n          fill: new olStyleFill({\n            color: [255, 255, 255, 1]\n          })\n        })\n      });\n      break;\n    case ngeoGeometryType.LINE_STRING:\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      const strokeWidth = this.getStrokeProperty(feature);\n      style = new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: strokeWidth + haloSize * 2\n        })\n      });\n      break;\n    case ngeoGeometryType.TEXT:\n      style = new olStyleStyle({\n        text: this.createTextStyle_({\n          text: this.getNameProperty(feature),\n          size: this.getSizeProperty(feature),\n          angle: this.getAngleProperty(feature),\n          width: haloSize * 3\n        })\n      });\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  return style;\n};\n\n\n// === PROPERTY GETTERS ===\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * Also delete the 'ngeo_feature_type_' from the ngeo query system.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Filtered properties of the current feature.\n * @export\n */\nexports.getFilteredFeatureValues = function(feature) {\n  const properties = feature.getProperties();\n  delete properties['boundedBy'];\n  delete properties[feature.getGeometryName()];\n  delete properties['ngeo_feature_type_'];\n  return properties;\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {number} Angle.\n * @export\n */\nexports.prototype.getAngleProperty = function(feature) {\n  const angle = +(/** @type {string} */ (\n    feature.get(ngeoFormatFeatureProperties.ANGLE)));\n  googAsserts.assertNumber(angle);\n  return angle;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Color.\n * @export\n */\nexports.prototype.getColorProperty = function(feature) {\n\n  const color = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.COLOR));\n\n  googAsserts.assertString(color);\n\n  return color;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {ol.Color} Color.\n * @export\n */\nexports.prototype.getRGBAColorProperty = function(feature) {\n  return olColor.fromString(this.getColorProperty(feature));\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Name.\n * @export\n */\nexports.prototype.getNameProperty = function(feature) {\n  const name = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.NAME));\n  googAsserts.assertString(name);\n  return name;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Opacity.\n * @export\n */\nexports.prototype.getOpacityProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.OPACITY);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show measure.\n * @export\n */\nexports.prototype.getShowMeasureProperty = function(feature) {\n  let showMeasure = feature.get(ngeoFormatFeatureProperties.SHOW_MEASURE);\n  if (showMeasure === undefined) {\n    showMeasure = false;\n  } else if (typeof showMeasure === 'string') {\n    showMeasure = (showMeasure === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showMeasure);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show feature label.\n * @export\n */\nexports.prototype.getShowLabelProperty = function(feature) {\n  let showLabel = feature.get(ngeoFormatFeatureProperties.SHOW_LABEL);\n  if (showLabel === undefined) {\n    showLabel = false;\n  } else if (typeof showLabel === 'string') {\n    showLabel = (showLabel === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showLabel);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Size.\n * @export\n */\nexports.prototype.getSizeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.SIZE);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Stroke.\n * @export\n */\nexports.prototype.getStrokeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.STROKE);\n};\n\n\n// === EXPORT ===\n\n\n/**\n * Export features in the given format. The projection of the exported features\n * is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {string} formatType Format type to export the features.\n * @export\n */\nexports.prototype.export = function(features, formatType) {\n  switch (formatType) {\n    case exports.FormatType.GPX:\n      this.exportGPX(features);\n      break;\n    case exports.FormatType.KML:\n      this.exportKML(features);\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * Export features in GPX and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportGPX = function(features) {\n  const format = new olFormatGPX();\n  const mimeType = 'application/gpx+xml';\n  const fileName = 'export.gpx';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features in KML and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportKML = function(features) {\n  const format = new olFormatKML();\n  const mimeType = 'application/vnd.google-earth.kml+xml';\n  const fileName = 'export.kml';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features using a given format to a specific filename and download\n * the result to the browser. The projection of the exported features is:\n * `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {!ol.format.Feature} format Format\n * @param {string} fileName Name of the file.\n * @param {string=} opt_mimeType Mime type. Defaults to 'text/plain'.\n * @private\n */\nexports.prototype.export_ = function(features, format, fileName, opt_mimeType) {\n  const mimeType = opt_mimeType !== undefined ? opt_mimeType : 'text/plain';\n\n  // clone the features to apply the original style to the clone\n  // (the original may have select style active)\n  const clones = [];\n  let clone;\n  features.forEach((feature) => {\n    clone = new olFeature(feature.getProperties());\n    this.setStyle(clone, false);\n    clones.push(clone);\n  });\n\n  const writeOptions = this.projection_ ? {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.projection_\n  } : {};\n\n  const data = format.writeFeatures(clones, writeOptions);\n  this.download_(\n    data, fileName, `${mimeType};charset=utf-8`);\n};\n\n\n// === OTHER UTILITY METHODS ===\n\n\n/**\n * @param {!ngeox.style.TextOptions} options Options.\n * @return {!ol.style.Text} Style.\n * @private\n */\nexports.prototype.createTextStyle_ = function(options) {\n  if (options.angle) {\n    const angle = options.angle !== undefined ? options.angle : 0;\n    const rotation = angle * Math.PI / 180;\n    options.rotation = rotation;\n    delete options.angle;\n  }\n\n  options.font = ['normal', `${options.size || 10}pt`, 'Arial'].join(' ');\n\n  if (options.color) {\n    options.fill = new olStyleFill({color: options.color || [0, 0, 0, 1]});\n    delete options.color;\n  }\n\n  options.stroke = new olStyleStroke({\n    color: [255, 255, 255, 1],\n    width: options.width || 3\n  });\n  delete options.width;\n\n  return new olStyleText(options);\n};\n\n\n/**\n * Get the measure of the given feature as a string. For points, you can format\n * the result by setting a filter to apply on the coordinate with the function\n * {@link ngeo.misc.FeatureHelper.prototype.setPointFilterFn}.\n * @param {!ol.Feature} feature Feature.\n * @return {string} Measure.\n * @export\n */\nexports.prototype.getMeasure = function(feature) {\n\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be truthy');\n\n  let measure = '';\n\n  if (geometry instanceof olGeomPolygon) {\n    if (this.getType(feature) === ngeoGeometryType.CIRCLE) {\n      const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n      googAsserts.assertNumber(azimut);\n      const line = this.getRadiusLine(feature, azimut);\n\n      measure = ngeoInteractionMeasureAzimut.getFormattedAzimutRadius(\n        line, this.projection_, this.decimals_, this.precision_, this.unitPrefixFormat_, this.numberFormat_);\n    } else {\n      measure = ngeoInteractionMeasure.getFormattedArea(\n        geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n    }\n  } else if (geometry instanceof olGeomLineString) {\n    measure = ngeoInteractionMeasure.getFormattedLength(\n      geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n  } else if (geometry instanceof olGeomPoint) {\n    if (this.pointFilterFn_ === null) {\n      measure = ngeoInteractionMeasure.getFormattedPoint(\n        geometry, this.decimals_, this.ngeoNumberCoordinates_);\n    } else {\n      const coordinates = geometry.getCoordinates();\n      const args = this.pointFilterArgs_.slice(0);\n      args.unshift(coordinates);\n      measure = this.pointFilterFn_(...args);\n    }\n  }\n\n  return measure;\n};\n\n\n/**\n * Return the type of geometry of a feature using its geometry property and\n * some inner properties.\n * @param {!ol.Feature} feature Feature.\n * @return {string} The type of geometry.\n * @export\n */\nexports.prototype.getType = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n  let type;\n\n  if (geometry instanceof olGeomPoint) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_TEXT)) {\n      type = ngeoGeometryType.TEXT;\n    } else {\n      type = ngeoGeometryType.POINT;\n    }\n  } else if (geometry instanceof olGeomMultiPoint) {\n    type = ngeoGeometryType.MULTI_POINT;\n  } else if (geometry instanceof olGeomPolygon) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n      type = ngeoGeometryType.CIRCLE;\n    } else if (feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE)) {\n      type = ngeoGeometryType.RECTANGLE;\n    } else {\n      type = ngeoGeometryType.POLYGON;\n    }\n  } else if (geometry instanceof olGeomMultiPolygon) {\n    type = ngeoGeometryType.MULTI_POLYGON;\n  } else if (geometry instanceof olGeomLineString) {\n    type = ngeoGeometryType.LINE_STRING;\n  } else if (geometry instanceof olGeomMultiLineString) {\n    type = ngeoGeometryType.MULTI_LINE_STRING;\n  }\n\n  googAsserts.assert(type, 'Type should be thruthy');\n\n  return type;\n};\n\n\n/**\n * This method first checks if a feature's extent intersects with the map view\n * extent. If it doesn't, then the view gets recentered with an animation to\n * the center of the feature.\n * @param {!ol.Feature} feature Feature.\n * @param {!ol.Map} map Map.\n * @param {number=} opt_panDuration Pan animation duration. Defaults to `250`.\n * @export\n */\nexports.prototype.panMapToFeature = function(feature, map,\n  opt_panDuration) {\n\n  const panDuration = opt_panDuration !== undefined ? opt_panDuration : 250;\n  const size = map.getSize();\n  googAsserts.assertArray(size);\n  const view = map.getView();\n  const extent = view.calculateExtent(size);\n  const geometry = feature.getGeometry();\n\n  if (!geometry.intersectsExtent(extent)) {\n    const mapCenter = view.getCenter();\n    googAsserts.assertArray(mapCenter);\n\n    let featureCenter;\n    if (geometry instanceof olGeomLineString) {\n      featureCenter = geometry.getCoordinateAt(0.5);\n    } else if (geometry instanceof olGeomPolygon) {\n      featureCenter = geometry.getInteriorPoint().getCoordinates();\n    } else if (geometry instanceof olGeomPoint) {\n      featureCenter = geometry.getCoordinates();\n    } else {\n      featureCenter = olExtent.getCenter(geometry.getExtent());\n    }\n\n    view.animate({\n      center: mapCenter,\n      duration: panDuration\n    }, {\n      center: featureCenter,\n      duration: panDuration\n    });\n  }\n};\n\n\n/**\n * This method generates a line string geometry that represents the radius for\n * a given azimut. It expects the input geometry to be a circle.\n * @param {!ol.Feature} feature Feature.\n * @param {number} azimut Azimut in degrees.\n * @return {!ol.geom.LineString} The line geometry.\n */\nexports.prototype.getRadiusLine = function(feature, azimut) {\n  const geometry = feature.getGeometry();\n  // Determine the radius for the circle\n  const extent = geometry.getExtent();\n  const radius = (extent[3] - extent[1]) / 2;\n\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const x = Math.cos((azimut - 90) * Math.PI / 180) * radius;\n  const y = -Math.sin((azimut - 90) * Math.PI / 180) * radius;\n  const endPoint = [x + center[0], y + center[1]];\n  return new olGeomLineString([center, endPoint]);\n};\n\n\n/**\n * Return the properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Object.\n * @export\n */\nexports.prototype.getNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const nonSpatialProperties = {};\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      nonSpatialProperties[key] = properties[key];\n    }\n  }\n  return nonSpatialProperties;\n};\n\n\n/**\n * Clear all properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @export\n */\nexports.prototype.clearNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      feature.set(key, undefined);\n    }\n  }\n};\n\n\n// === FORMAT TYPES ===\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.FormatType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GPX: 'GPX',\n  /**\n   * @type {string}\n   * @export\n   */\n  KML: 'KML'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureHelper', [\n  ngeoDownloadService.name,\n  ngeoMiscFilters.name,\n]);\nexports.module.service('ngeoFeatureHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.ToolActivate\n */\n/**\n * A simple object that can be managed by `ngeo.misc.ToolActivateMgr`.\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {Object} toolContext An object which acts as the context for the tool.\n * @param {string} activePropertyName The name of a boolean property on\n *      `toolContext` which represents the active state of the tool.\n * @constructor\n * @struct\n * @ngname ngeoToolActivate\n * @export\n */\nconst exports = function(toolContext, activePropertyName) {\n\n  /**\n   * A getter function to get the active state of the tool.\n   * @return {boolean} Is active.\n   * @export\n   */\n  this.getActive = function() {\n    return toolContext[activePropertyName];\n  };\n\n  /**\n   * A setter function to set the active state of the tool.\n   * @param {boolean} newVal New active state.\n   * @export\n   */\n  this.setActive = function(newVal) {\n    toolContext[activePropertyName] = newVal;\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport * as olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.CustomEvent\n */\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle, {toFunction as toStyleFunction, createDefaultStyle as olStyleDefaultFunction} from 'ol/style/Style.js';\n\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleDefaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : toStyleFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Geometry\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A rule bound to the geometry of a `ol.Feature` object. Changes made\n   * to the geometry are applied to the `expression` property of the rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.GeometryOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = ngeoFormatAttributeType.GEOMETRY;\n\n    super(options);\n\n    // === STATIC properties ===\n\n    const properties = options.featureProperties || {};\n\n    /**\n     * @type {!ol.Feature}\n     * @private\n     */\n    this.feature_ = new olFeature(properties);\n\n    /**\n     * @type {!ol.format.GeoJSON}\n     * @private\n     */\n    this.format_ = new olFormatGeoJSON();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingExpression_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingGeometry_ = false;\n\n    /**\n     * @type {?ol.EventsKey}\n     * @private\n     */\n    this.geometryChangeListenerKey_ = null;\n\n    this.listenerKeys.push(\n      olEvents.listen(\n        this.feature_,\n        `change:${this.feature.getGeometryName()}`,\n        this.handleFeatureGeometryChange_,\n        this\n      )\n    );\n\n    this.setGeometryFromExpression_();\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {!ol.Feature} Feature.\n   * @export\n   */\n  get feature() {\n    return this.feature_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setExpression(expression) {\n    this.updatingExpression_ = true;\n    super.setExpression(expression);\n\n    if (!this.updatingGeometry_) {\n      this.setGeometryFromExpression_();\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingExpression_ = false;\n  }\n\n  // === Calculated property getters/setters ===\n\n  /**\n   * @return {?ol.geom.Geometry} Geometry\n   * @export\n   */\n  get geometry() {\n    return this.feature_.getGeometry() || null;\n  }\n\n  /**\n   * @param {?ol.geom.Geometry} geometry Geometry\n   * @export\n   */\n  set geometry(geometry) {\n    this.feature_.setGeometry(geometry);\n  }\n\n  // === Other methods ===\n\n  /**\n   * Called when the geometry property in the feature changes. Update the\n   * expression accordingly.\n   * @private\n   */\n  handleFeatureGeometryChange_() {\n    if (this.updatingExpression_) {\n      return;\n    }\n\n    this.updatingGeometry_ = true;\n\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.expression = this.format_.writeGeometry(geometry);\n    } else {\n      this.expression = null;\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Called when the geometry of the features changes. Update the expression\n   * accordingly.\n   * @param {ol.Object.Event} evt Event\n   * @private\n   */\n  handleGeometryChange_(evt) {\n    const geometry = googAsserts.assertInstanceof(\n      evt.target, olGeomGeometry\n    );\n    this.updatingGeometry_ = true;\n    this.expression = this.format_.writeGeometry(geometry);\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Set geometry property using the expression property.\n   * @private\n   */\n  setGeometryFromExpression_() {\n    let geometry = null;\n    if (this.expression) {\n      // An expression can only have a string value with a geometry rule.\n      const expression = googAsserts.assertString(this.expression);\n      geometry = this.format_.readGeometry(expression);\n    }\n    this.geometry = geometry;\n  }\n\n  /**\n   * Unlisten the feature geometry change event, then listen to it if the\n   * feature has a geometry.\n   * @private\n   */\n  registerGeometryChange_() {\n\n    // (1) Unlisten\n    if (this.geometryChangeListenerKey_ !== null) {\n      olEvents.unlistenByKey(this.geometryChangeListenerKey_);\n      this.geometryChangeListenerKey_ = null;\n    }\n\n    // (2) Listen, if geom\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.geometryChangeListenerKey_ = olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      );\n    }\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS, {optionsFromCapabilities} from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @param {number} ngeoTilesPreloadingLimit Load tiles up to preload levels. By default preload is Infinity,\n *     which means load all tiles on the top of the visible level. See also preload value\n *     in documentation for ol.Layer.Tile.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http, ngeoTilesPreloadingLimit) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * The Tiles Preloading Limit value\n   * @type {number}\n   * @private\n   */\n  this.tilesPreloadingLimit_ = ngeoTilesPreloadingLimit;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {string=} opt_matrixSet Optional WMTS matrix set.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_matrixSet, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: this.tilesPreloadingLimit_\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = optionsFromCapabilities(result, {\n        matrixSet: opt_matrixSet,\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach((l) => {\n      this.getFlatLayers_(l, array);\n    });\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some((layer) => {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  });\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @param {number=} opt_legendWidth the legend width.\n * @param {number=} opt_legendHeight the legend height.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule, opt_legendWidth, opt_legendHeight) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n    if (opt_legendWidth !== undefined) {\n      queryString['WIDTH'] = opt_legendWidth;\n    }\n    if (opt_legendHeight !== undefined) {\n      queryString['HEIGHT'] = opt_legendHeight;\n    }\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Set ZIndex property to first level children elements\n * @param {ol.layer.Group|ol.layer.Base} element The group of layer with first level children layers.\n * @param {number} ZIndex The ZIndex for children element.\n */\nexports.prototype.setZIndexToFirstLevelChildren = function(element, ZIndex) {\n  if (!(element instanceof olLayerGroup)) {\n    return;\n  }\n  const innerGroupLayers = element.getLayers();\n  innerGroupLayers.forEach(innerLayer => innerLayer.setZIndex(ZIndex));\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', [])\n  .service('ngeoLayerHelper', exports)\n  .value('ngeoTilesPreloadingLimit', Infinity);\n\n\nexport default exports;\n","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach((child) => {\n    child.setStateInternal_(this.state_);\n  });\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Measure\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olDom from 'ol/dom.js';\nimport * as olProj from 'ol/proj.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olSphere from 'ol/sphere.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} options Options\n */\nconst exports = function(options = /** @type {ngeo.interaction.MeasureBaseOptions} */ ({})) {\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ? options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (polygon.clone().transform(projection, 'EPSG:4326'));\n  const area = Math.abs(olSphere.getArea(geom, {'projection': 'EPSG:4326'}));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection, precision, format) {\n  let length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = olProj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = olProj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n    length += olSphere.getDistance(c1, c2);\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  const helpMsg = this.sketchFeature === null ? this.startMsg : this.continueMsg;\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event|ngeox.DrawEvent} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature || evt.detail.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event|ngeox.DrawEvent} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  this.unlistenerEvent_();\n};\n\n/**\n * Handle unlistener events for 'end of drawing' interaction\n * @private\n */\nexports.prototype.unlistenerEvent_ = function() {\n  if (this.changeEventKey_ !== null && this.postcomposeEventKey_ !== null) {\n    olEvents.unlistenByKey(this.changeEventKey_);\n    olEvents.unlistenByKey(this.postcomposeEventKey_);\n    this.changeEventKey_ = null;\n    this.postcomposeEventKey_ = null;\n  }\n};\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n    this.unlistenerEvent_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.filters\n */\nimport * as olMath from 'ol/math.js';\nimport * as olString from 'ol/string.js';\nconst exports = angular.module('ngeoAngularFilters', []);\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nexports.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nexports.filter('ngeoScalify', exports.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nexports.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nexports.filter('ngeoNumber', exports.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nexports.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nexports.filter('ngeoUnitPrefix', exports.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nexports.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nexports.filter('ngeoNumberCoordinates', exports.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nexports.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nexports.filter('ngeoDMSCoordinates', exports.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * If you use it, you don't require the \"ngSanitize\".\n * @return {function(?):string} The filter function.\n * @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nexports.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nexports.filter('ngeoTrustHtml', exports.trustHtmlFilter);\n\n\n/**\n * A filter used to format a time duration in seconds into a more\n * readable form.\n * Only the two largest units will be shown.\n *\n * Examples:\n *      {{42 | ngeoDuration}} => 42 seconds\n *      {{132 | ngeoDuration}} => 2 minutes 12 seconds\n *      {{3910 | ngeoDuration}} => 1 hour 5 minutes\n *        -> Note: the remaining 10 seconds will be dropped\n *\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @return {ngeox.duration} Function used to format a time duration in seconds into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDuration\n */\nexports.Duration = function(gettextCatalog) {\n  // time unit enum\n  const TimeUnits = Object.freeze({\n    SECONDS: Symbol('seconds'),\n    MINUTES: Symbol('minutes'),\n    HOURS: Symbol('hours'),\n    DAYS: Symbol('days')\n  });\n\n  /**\n   * @param {number} amount Amount of time.\n   * @param {symbol} unit Unit of time.\n   * @return {string} formatted and translated string\n   */\n  const pluralize = function(amount, unit) {\n    let formattedUnit = '';\n    switch (unit) {\n      case TimeUnits.SECONDS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'second', 'seconds');\n        break;\n      case TimeUnits.MINUTES:\n        formattedUnit = gettextCatalog.getPlural(amount, 'minute', 'minutes');\n        break;\n      case TimeUnits.HOURS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'hour', 'hours');\n        break;\n      case TimeUnits.DAYS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'day', 'days');\n        break;\n      default:\n        break;\n    }\n    return `${amount} ${formattedUnit}`;\n  };\n\n  /**\n   * @param {number} duration The duration in seconds.\n   * @return {string} The formatted string.\n   */\n  const result = function(duration) {\n    // round to next integer\n    duration = Math.round(duration);\n\n    // just seconds\n    let output;\n    if (duration < 60) {\n      return pluralize(duration, TimeUnits.SECONDS);\n    }\n\n    // minutes (+ seconds)\n    let remainder = duration % 60; // seconds\n    duration = Math.floor(duration / 60); // minutes\n    if (duration < 60) { // less than an hour\n      output = pluralize(duration, TimeUnits.MINUTES);\n      if (remainder > 0) {\n        output += ` ${pluralize(remainder, TimeUnits.SECONDS)}`;\n      }\n      return output;\n    }\n\n    // hours (+ minutes)\n    remainder = duration % 60; // minutes\n    duration = Math.floor(duration / 60); // hours\n    if (duration < 24) { // less than a day\n      output = pluralize(duration, TimeUnits.HOURS);\n      if (remainder > 0) {\n        output += ` ${pluralize(remainder, TimeUnits.MINUTES)}`;\n      }\n      return output;\n    }\n\n    // days (+ hours)\n    remainder = duration % 24; // hours\n    duration = Math.floor(duration / 24); // days\n    output = pluralize(duration, TimeUnits.DAYS);\n    if (remainder > 0) {\n      output += ` ${pluralize(remainder, TimeUnits.HOURS)}`;\n    }\n    return output;\n  };\n\n  return result;\n};\n\nexports.filter('ngeoDuration', exports.Duration);\n\n\nexport default exports;\n","/**\n * @module ngeo.query.MapQuerent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport * as olObj from 'ol/obj.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Map Querent is the service bound to a map that issues\n   * queries using the Querent service. The result is stored inside this\n   * service.\n   *\n   * @struct\n   * @param {angular.$injector} $injector Main injector.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     sources helper service.\n   * @param {ngeo.query.Querent} ngeoQuerent The ngeo querent service.\n   * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($injector, ngeoDataSources, ngeoDataSourcesHelper, ngeoQuerent,\n    ngeoQueryResult) {\n\n    const options = /** @type {ngeox.QueryOptions} */ (\n      $injector.has('ngeoQueryOptions') ?\n        $injector.get('ngeoQueryOptions') : {});\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n    /**\n     * @type {ngeox.QueryResult}\n     * @private\n     */\n    this.result_ = ngeoQueryResult;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.limit_ = options.limit !== undefined ? options.limit : 50;\n\n    /**\n     * When set, before making WFS GetFeature requests to fetch features,\n     * WFS GetFeature requests with `resultType = 'hits'` are made first. If\n     * the number of records for the request would exceed the limit, then\n     * no features are returned.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.queryCountFirst_ = options.queryCountFirst !== undefined ?\n      options.queryCountFirst : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.tolerancePx_ = options.tolerance !== undefined ?\n      options.tolerance : 3;\n\n    /**\n     * A hash of data source names classified by ids.\n     * @type {Object.<number, string>}\n     * @private\n     */\n    this.dataSourceNames_ = {};\n  }\n\n  /**\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @export\n   */\n  issue(options) {\n    // (1) Clear previous result\n    this.clear();\n\n    // (2) Get queryable data sources, unless they are already set\n    let queryableDataSources;\n    if (options.dataSources === undefined &&\n        options.queryableDataSources === undefined\n    ) {\n      queryableDataSources = this.ngeoQuerent_.getQueryableDataSources(\n        this.dataSources_.getArray(),\n        options.map\n      );\n    }\n\n    // (3) Update query options, update the pending property and issue the\n    //     request.\n    const limit = options.limit !== undefined ? options.limit : this.limit_;\n    olObj.assign(options, {\n      queryableDataSources: queryableDataSources,\n      limit: limit,\n      tolerancePx: this.tolerancePx_,\n      wfsCount: this.queryCountFirst_\n    });\n    this.result_.pending = true;\n    this.ngeoQuerent_.issue(options).then(this.handleResult_.bind(this));\n  }\n\n  /**\n   * Clear result, i.e. clear all 'result source' from their features and other\n   * information.\n   * @export\n   */\n  clear() {\n    this.result_.total = 0;\n    for (const source of this.result_.sources) {\n      source.features.length = 0;\n      source.pending = false;\n      source.queried = false;\n      source.tooManyResults = false;\n      source.totalFeatureCount = undefined;\n    }\n    this.result_.sources.length = 0; // Clear previous result sources\n    this.result_.pending = false;\n  }\n\n  /**\n   * Called after a request to the querent service. Update the result.\n   *\n   * @param {ngeox.QuerentResult} response Response\n   * @private\n   */\n  handleResult_(response) {\n    let total = 0;\n\n    // (1) Update result sources, i.e. add them\n    for (const idStr in response) {\n      const id = Number(idStr);\n      const dataSource = this.ngeoDataSourcesHelper_.getDataSource(id);\n      let label = dataSource.name;\n      googAsserts.assert(dataSource);\n\n      const querentResultItem = response[id];\n      const features = querentResultItem.features;\n      const limit = querentResultItem.limit;\n      const tooManyResults = querentResultItem.tooManyFeatures === true;\n      const totalFeatureCount = querentResultItem.totalFeatureCount;\n\n      const typeSeparatedFeatures = {};\n      features.forEach((feature) => {\n        const type = googAsserts.assertString(feature.get('ngeo_feature_type_'));\n        if (!typeSeparatedFeatures[type]) {\n          typeSeparatedFeatures[type] = [];\n        }\n        // Use properties aliases if any\n        if (dataSource.attributes && dataSource.attributes.length) {\n          const properties = feature.getProperties();\n          const filteredProperties = {};\n          dataSource.attributes.forEach((attribute) => {\n            if (attribute.alias) {\n              filteredProperties[attribute.alias] = properties[attribute.name];\n              feature.unset(attribute.name, /* silent */ true);\n            } else {\n              // No alias is available => use the attribute as is.\n              filteredProperties[attribute.name] = properties[attribute.name];\n            }\n          });\n          feature.setProperties(filteredProperties, /* silent */ true);\n        }\n        typeSeparatedFeatures[type].push(feature);\n      });\n\n      for (const type in typeSeparatedFeatures) {\n        label = type ? type : label;\n        const featuresByType = typeSeparatedFeatures[type];\n        this.result_.sources.push({\n          features: featuresByType,\n          id: id,\n          label: label,\n          limit: limit,\n          pending: false,\n          queried: true,\n          tooManyResults: tooManyResults,\n          totalFeatureCount: totalFeatureCount\n        });\n        total += features.length;\n      }\n    }\n\n    // (2) Update total & pending\n    this.result_.total = total;\n    this.result_.pending = false;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoMapQuerent', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoDatasourceHelper.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoMapQuerent', exports);\n\n\n/**\n * The `ngeoQueryResult` is the value service where the features of the query\n * result are added.\n */\nexports.module.value('ngeoQueryResult', /** @type {ngeox.QueryResult} */ ({\n  sources: [],\n  total: 0,\n  pending: false\n}));\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is available through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach((grp) => {\n      this.root.children.unshift(grp);\n    });\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach((childNode) => {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  });\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object information.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.WMSTime\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * ngeo - WMS time service\n * @extends {ngeo.misc.Time}\n * @param {angular.$filter} $filter angular filter service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoWMSTime\n */\nconst exports = function($filter, gettextCatalog) {\n\n  /**\n   * @private\n   * @type {angular.$filter}\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  ngeoMiscTime.call(this);\n};\n\nolBase.inherits(exports, ngeoMiscTime);\n\n\n/**\n * Format time regarding a resolution\n * @param  {number} time (in ms format) timestamp to format\n * @param  {(ngeox.TimePropertyResolutionEnum|undefined)} resolution resolution to use\n * @param  {boolean=} opt_useISOFormat True to a ISO-8601 date string that can be used\n *     as a WMS-T Parameter. Otherwise, use a localized date format.\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} Date string regarding the resolution.\n */\nexports.prototype.formatTimeValue = function(time, resolution, opt_useISOFormat, opt_toUTC) {\n  const date = new Date(time);\n  const utc = opt_toUTC ? 'UTC' : undefined;\n\n  // ISO-8601 format to use date as a WMS-T Parameter.\n  let yearResolution = 'yyyy';\n  let monthResolution = 'yyyy-MM';\n  let dayResolution = 'yyyy-MM-dd';\n\n  // Localized format.\n  if (!opt_useISOFormat) {\n    const gettextCatalog = this.gettextCatalog_;\n    yearResolution = gettextCatalog.getString('yyyy');\n    monthResolution = gettextCatalog.getString('M/yyyy');\n    dayResolution = gettextCatalog.getString('M/d/yyyy');\n  }\n\n  switch (resolution) {\n    case 'year':\n      return this.$filter_('date')(date, yearResolution, utc);\n    case 'month':\n      return this.$filter_('date')(date, monthResolution, utc);\n    case 'day':\n      return this.$filter_('date')(date, dayResolution, utc);\n    default:\n      //case \"second\":\n      return date.toISOString().replace(/\\.\\d{3}/, '');\n  }\n};\n\n\n/**\n * Format time to be used as a WMS Time query parameter\n * @param  {ngeox.TimeProperty} wmsTimeProperty a wmstime property from a node\n * @param  {{start : number, end : (number|undefined)}} times start & end time selected (in ms format)\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} ISO-8601 date string ready to be used as a query parameter for a\n * WMS request\n * @export\n */\nexports.prototype.formatWMSTimeParam = function(wmsTimeProperty, times, opt_toUTC) {\n  googAsserts.assert(wmsTimeProperty.resolution !== undefined);\n  if (wmsTimeProperty.mode === 'range') {\n    googAsserts.assert(times.end !== undefined);\n    return (\n      `${this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC)}/${\n        this.formatTimeValue(times.end, wmsTimeProperty.resolution, true, opt_toUTC)}`\n    );\n  } else {\n    return this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC);\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoWMSTime', [\n  ngeoMiscTime.module.name,\n]);\nexports.module.service('ngeoWMSTime', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.debounce\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.EventHelper\n */\nimport * as olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.SyncLayertreeMap\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * Service to create layer based on a ngeo.layertree.Controller with a\n * GMFThemesGroup or a GMFThemesLeaf as node object.\n * This layer is also used to synchronise a state of ngeo.layertree.Controller\n * and its corresponding layer in the map.\n *\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSyncLayertreeMap\n */\nconst exports = function($rootScope, ngeoLayerHelper, ngeoWMSTime,\n  gmfThemes) {\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {gmfThemes.GmfOgcServers}\n   * @private\n   */\n  this.ogcServersObject_;\n\n  gmfThemes.getOgcServersObject().then((ogcServersObject) => {\n    this.ogcServersObject_ = ogcServersObject;\n  });\n\n  $rootScope.$on('ngeo-layertree-state', (map, treeCtrl, firstParent) => {\n    this.sync_(/** @type ol.Map */ (map), firstParent);\n  });\n};\n\n\n/**\n * Create, insert (or update) and return a layer from the GmfGroup or the\n * GmfLayer of the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Base|ol.layer.Group} a new layer.\n * @public\n */\nexports.prototype.createLayer = function(treeCtrl, map, dataLayerGroup, opt_position) {\n  /**\n   * @type {ol.layer.Base|ol.layer.Group}\n   */\n  let layer = null;\n  if (treeCtrl.node.children !== undefined && treeCtrl.node.mixed) {\n    // Mixed groups\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  } else if (treeCtrl.node.children === undefined && treeCtrl.parent.node.mixed) {\n    // Layers in a mixed group\n    layer = this.createLeafInAMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.node.children === undefined) {\n    // Layers in a non mixed group\n    this.initGmfLayerInANotMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.depth === 1 && !treeCtrl.node.mixed) {\n    // First level group non mix\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  }\n\n  if (layer && treeCtrl.node.metadata.opacity) {\n    layer.setOpacity(treeCtrl.node.metadata.opacity);\n  }\n\n  return layer;\n};\n\n\n/**\n * Synchronise the state of each layers corresponding to the given tree and\n * all its children.\n * @param {ol.Map} map A map that contains the layers.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.sync_ = function(map, treeCtrl) {\n  treeCtrl.traverseDepthFirst((treeCtrl) => {\n    if (treeCtrl.layer && !treeCtrl.node.mixed) {\n      this.updateLayerState_(/** @type ol.layer.Image|ol.layer.Tile */ (treeCtrl.layer), treeCtrl);\n    }\n  });\n};\n\n\n/**\n * Set the active state of a layer based on its treeCtrl state.\n * @param {ol.layer.Tile|ol.layer.Image} layer A layer.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.updateLayerState_ = function(layer, treeCtrl) {\n  const active = treeCtrl.getState() === 'on';\n  if (treeCtrl.node.type === 'WMTS') {\n    layer.setVisible(active);\n  } else if (!treeCtrl.node.mixed && treeCtrl.depth === 1) {\n    // First level non mixed group\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    const names = [];\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.getState() === 'on') {\n        names.push(treeCtrl.node.layers);\n      }\n    });\n    if (names.length === 0) {\n      layer.setVisible(false);\n    }\n    /** @type {ol.source.ImageWMS} */ (layer.getSource()).updateParams({\n      'LAYERS': names.reverse().join(',')\n    });\n    if (names.length !== 0) {\n      layer.setVisible(true);\n    }\n  } else {\n    // WMS mixed layer\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    layer.setVisible(active);\n  }\n};\n\n\n/**\n * Create insert and return a layer group (for not mixed case) or a wmsLayer (for\n * mixed case). Take care about the insertion order in the map in case of first\n * level group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createGroup_ = function(treeCtrl, map,\n  dataLayerGroup, opt_position) {\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  let layer = null;\n  const isFirstLevelGroup = treeCtrl.parent.isRoot;\n\n  let printNativeAngle = true;\n  if (groupNode.metadata.printNativeAngle !== undefined) {\n    printNativeAngle = groupNode.metadata.printNativeAngle;\n  }\n\n  if (isFirstLevelGroup) { // First level group\n    layer = this.createLayerFromGroup_(treeCtrl, !!groupNode.mixed);\n    // Insert the layer at the right place\n    const position = opt_position | 0;\n    dataLayerGroup.getLayers().insertAt(position, layer);\n\n  } else { // Other Groups, create a group layer only in mixed groups\n    const inAMixedGroup = !this.isOneParentNotMixed_(treeCtrl);\n    if (inAMixedGroup) {\n      layer = this.createLayerFromGroup_(treeCtrl, true);\n      const layerGroup = /** @type {ol.layer.Group} */ (\n        exports.getLayer(treeCtrl.parent));\n      layerGroup.getLayers().insertAt(0, layer);\n    }\n  }\n\n  layer.set('printNativeAngle', printNativeAngle);\n  return layer;\n};\n\n\n/**\n * Create, insert and return a layer group (for not mixed case) or a wmsLayer\n * for mixed case).\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {boolean} mixed True for a group layer, false for a WMS layer.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createLayerFromGroup_ = function(treeCtrl,\n  mixed) {\n  let layer;\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  if (mixed) { // Will be one ol.layer per each node.\n    layer = this.layerHelper_.createBasicGroup();\n  } else { // Will be one ol.layer for multiple WMS nodes.\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[groupNode.ogcServer || ''];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      '',\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n    let hasActiveChildren = false;\n    treeCtrl.traverseDepthFirst((ctrl) => {\n      // Update layer information and tree state.\n      this.updateLayerReferences_(/** @type gmfThemes.GmfLayer */ (ctrl.node), layer);\n      if (ctrl.node.metadata.isChecked) {\n        ctrl.setState('on', false);\n        this.updateLayerState_(/** @type {ol.layer.Image} */ (layer), ctrl);\n        hasActiveChildren = true;\n      }\n    });\n    layer.setVisible(hasActiveChildren);\n    layer.set('layerNodeName', groupNode.name); //Really useful ?\n  }\n  return layer;\n};\n\n\n/**\n * Create and insert a layer from a leaf in a mixed group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the layer.\n * @return {ol.layer.Tile|ol.layer.Image} a new layer.\n * @private\n */\nexports.prototype.createLeafInAMixedGroup_ = function(treeCtrl, map) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  let layer;\n  // Make layer.\n  if (gmfLayer.type === 'WMTS') {\n    layer = this.createWMTSLayer_(/** @type gmfThemes.GmfLayerWMTS */ (gmfLayer));\n  } else {\n    const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[/** @type string */ (gmfLayerWMS.ogcServer)];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(gmfLayerWMS.layers);\n    googAsserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      gmfLayerWMS.layers,\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n  }\n  // Update layer information and tree state.\n  layer.set('layerNodeName', gmfLayer.name); // Really useful ?\n  this.updateLayerReferences_(gmfLayer, layer);\n  const checked = gmfLayer.metadata.isChecked === true;\n  if (checked) {\n    treeCtrl.setState('on', false);\n  }\n  layer.setVisible(checked);\n  // Insert layer in the map.\n  const layerGroup = /** @type {ol.layer.Group} */ (\n    exports.getLayer(treeCtrl.parent));\n  layerGroup.getLayers().insertAt(0, layer);\n  return layer;\n};\n\n\n/**\n * Update a WMS layer with the given treeCtrl node information. Assumes that\n * the first parent with ogcServer information is linked to the layer to update\n * and that this treeCtrl node is a leafNode.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the layer to update.\n * @private\n */\nexports.prototype.initGmfLayerInANotMixedGroup_ = function(treeCtrl, map) {\n  const leafNode = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const firstLevelGroup = this.getFirstLevelGroupCtrl_(treeCtrl);\n  googAsserts.assert(firstLevelGroup);\n  const layer = /** @type {ol.layer.Image} */ (firstLevelGroup.layer);\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  // Update layer information and tree state.\n  this.updateLayerReferences_(leafNode, layer);\n  if (leafNode.metadata.isChecked) {\n    treeCtrl.setState('on', false);\n    this.updateLayerState_(layer, firstLevelGroup);\n  } else {\n    treeCtrl.parent.refreshState();\n  }\n};\n\n\n/**\n * Create and return a Tile layer.\n * @param {gmfThemes.GmfLayerWMTS} gmfLayerWMTS A leaf node.\n * @return {ol.layer.Tile} a Tile WMTS layer. (Source and capabilities can come\n *     later).\n * @private\n */\nexports.prototype.createWMTSLayer_ = function(gmfLayerWMTS) {\n  const newLayer = new olLayerTile();\n  googAsserts.assert(gmfLayerWMTS.url);\n  googAsserts.assert(gmfLayerWMTS.layer);\n  this.layerHelper_.createWMTSLayerFromCapabilitites(gmfLayerWMTS.url,\n    gmfLayerWMTS.layer, gmfLayerWMTS.matrixSet, gmfLayerWMTS.dimensions).then((layer) => {\n    newLayer.setSource(layer.getSource());\n    newLayer.set('capabilitiesStyles', layer.get('capabilitiesStyles'));\n  });\n  return newLayer;\n};\n\n\n/**\n * Update properties of a layer with the node of a given leafNode.\n * @param {gmfThemes.GmfLayer} leafNode a leaf node.\n * @param {ol.layer.Base} layer A layer.\n * @private\n */\nexports.prototype.updateLayerReferences_ = function(leafNode, layer) {\n  const id = olBase.getUid(leafNode);\n  const querySourceIds = layer.get('querySourceIds') || [];\n  querySourceIds.push(id);\n  layer.set('querySourceIds', querySourceIds);\n\n  const disclaimer = leafNode.metadata.disclaimer;\n  if (disclaimer) {\n    const disclaimers = layer.get('disclaimers') || [];\n    disclaimers.push(leafNode.metadata.disclaimer);\n    layer.set('disclaimers', disclaimers);\n  }\n};\n\n\n/**\n * Get the time parameter for a WMS Layer. If it's a group and it doesn't have\n * time, get the first time parameter available in any child.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {string|undefined} A wms time param.\n * @private\n */\nexports.prototype.getTimeParam_ = function(treeCtrl) {\n  let wmsTime;\n  let timeParam;\n  const node = treeCtrl.node;\n  if (node.time) {\n    wmsTime = node.time;\n  } else if (node.children) {\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.node.time) {\n        wmsTime = treeCtrl.node.time;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  if (wmsTime) {\n    const timeValues = this.ngeoWMSTime_.getOptions(wmsTime)['values'];\n    timeParam = this.ngeoWMSTime_.formatWMSTimeParam(wmsTime, {\n      start: timeValues[0] || timeValues,\n      end: timeValues[1]\n    });\n  }\n  return timeParam;\n};\n\n\n/**\n * Return true if a parent tree is mixed, based on its node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {boolean} True is any parent is mixed. False Otherwise.\n * @private\n */\nexports.prototype.isOneParentNotMixed_ = function(treeCtrl) {\n  let tree = treeCtrl.parent;\n  let isOneParentNotMix = false;\n  do {\n    isOneParentNotMix = tree.node.mixed === false;\n    tree = tree.parent;\n  }\n  while (tree.parent && !isOneParentNotMix);\n  return isOneParentNotMix;\n};\n\n\n/**\n * Return the first parent, from the root parent, that is not mixed.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} The first not mixed parent.\n * @private\n */\nexports.prototype.getFirstLevelGroupCtrl_ = function(\n  treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * Return the layer used by the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ol.layer.Base} The layer.\n * @public\n */\nexports.getLayer = function(treeCtrl) {\n  let tree = treeCtrl;\n  let layer = null;\n  while (!tree.isRoot && layer === null) {\n    if (tree.layer) {\n      layer = tree.layer;\n    }\n    tree = tree.parent;\n  }\n  return layer;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSyncLayertreeMap', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfSyncLayertreeMap', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Date\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A date rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.DateOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = options.type || ngeoFormatAttributeType.DATE;\n\n    super(options);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Text\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A text rule, which always compares the value with the LIKE operator, by\n   * default.\n   *\n   * @struct\n   * @param {!ngeox.rule.TextOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = options.operator || ngeoRuleRule.OperatorType.LIKE;\n    options.type = ngeoFormatAttributeType.TEXT;\n\n    super(options);\n\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.RuleHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport ngeoRuleDate from 'ngeo/rule/Date.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport ngeoRuleText from 'ngeo/rule/Text.js';\nimport {writeFilter} from 'ol/format/WFS.js';\nimport * as olFormatFilter from 'ol/format/filter.js';\nimport * as olArray from 'ol/array.js';\n\nimport moment from 'moment';\n\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to create `ngeo.rule.Rule`\n   * objects.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoRuleHelper\n   * @ngInject\n   */\n  constructor(gettextCatalog, ngeoFeatureHelper, ngeoWMSTime) {\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.Attribute>} attributes Attributes.\n   * @param {boolean=} opt_isCustom Whether the created rules should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRulesFromAttributes(attributes, opt_isCustom) {\n    const rules = [];\n    for (const attribute of attributes) {\n      rules.push(this.createRuleFromAttribute(attribute, opt_isCustom));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.Attribute} attribute Attribute.\n   * @param {boolean=} opt_isCustom Whether the created rule should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRuleFromAttribute(attribute, opt_isCustom) {\n\n    let rule;\n    const isCustom = opt_isCustom === true;\n\n    /**\n     * @type {string}\n     */\n    const name = this.gettextCatalog_.getString(attribute.name);\n\n    // Todo: support geometry\n\n    switch (attribute.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        if (isCustom) {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.EQUALS,\n            operators: [\n              ngeoRuleRule.TemporalOperatorType.EQUALS,\n              ngeoRuleRule.TemporalOperatorType.BEGINS,\n              ngeoRuleRule.TemporalOperatorType.ENDS\n            ],\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        } else {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.DURING,\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry({\n          name: name,\n          operator: ngeoRuleRule.SpatialOperatorType.WITHIN,\n          operators: [\n            ngeoRuleRule.SpatialOperatorType.CONTAINS,\n            ngeoRuleRule.SpatialOperatorType.INTERSECTS,\n            ngeoRuleRule.SpatialOperatorType.WITHIN\n          ],\n          propertyName: attribute.name,\n          type: attribute.type\n        });\n        break;\n      case ngeoFormatAttributeType.NUMBER:\n        if (isCustom) {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.EQUAL_TO,\n            operators: [\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.GREATER_THAN,\n              ngeoRuleRule.OperatorType.GREATER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.LESSER_THAN,\n              ngeoRuleRule.OperatorType.LESSER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        } else {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.BETWEEN,\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        rule = new ngeoRuleSelect({\n          choices: googAsserts.assert(attribute.choices),\n          name: name,\n          propertyName: attribute.name\n        });\n        break;\n      default:\n        if (isCustom) {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            operators: [\n              ngeoRuleRule.OperatorType.LIKE,\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name\n          });\n        } else {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            propertyName: attribute.name\n          });\n        }\n        break;\n    }\n\n    return rule;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions>} optionsList List of options\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRules(optionsList) {\n    const rules = [];\n    for (const options of optionsList) {\n      rules.push(this.createRule(options));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions} options Options\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRule(options) {\n    let rule;\n    switch (options.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        rule = new ngeoRuleDate(options);\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry(options);\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        const selectOptions = /** @type {!ngeox.rule.SelectOptions} */ (\n          options);\n        googAsserts.assert(selectOptions.choices);\n        rule = new ngeoRuleSelect(selectOptions);\n        break;\n      default:\n        rule = new ngeoRuleText(options);\n        break;\n    }\n    return rule;\n  }\n\n  /**\n   * Create a new `ngeo.rule.Rule` object using an other given rule.\n   *\n   * @param {!ngeo.rule.Rule} rule Original rule to clone.\n   * @return {!ngeo.rule.Rule} A clone rule.\n   * @export\n   */\n  cloneRule(rule) {\n\n    let clone;\n\n    let expression = rule.getExpression();\n    if (expression === null) {\n      expression = undefined;\n    }\n    const isCustom = rule.isCustom;\n    const lowerBoundary = rule.lowerBoundary !== null ? rule.lowerBoundary :\n      undefined;\n    const name = rule.name;\n    const operator = rule.operator !== null ? rule.operator : undefined;\n    const operators = rule.operators ? rule.operators.slice(0) : undefined;\n    const propertyName = rule.propertyName;\n    const type = rule.type !== null ? rule.type : undefined;\n    const upperBoundary = rule.upperBoundary !== null ? rule.upperBoundary :\n      undefined;\n\n    const options = {\n      expression,\n      isCustom,\n      lowerBoundary,\n      name,\n      operator,\n      operators,\n      propertyName,\n      type,\n      upperBoundary\n    };\n\n    if (rule instanceof ngeoRuleDate) {\n      clone = new ngeoRuleDate(options);\n    } else if (rule instanceof ngeoRuleGeometry) {\n      clone = new ngeoRuleGeometry(options);\n      clone.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(rule.feature)\n      );\n    } else if (rule instanceof ngeoRuleSelect) {\n      options.choices = rule.choices.slice(0);\n      clone = new ngeoRuleSelect(options);\n    } else if (rule instanceof ngeoRuleText) {\n      clone = new ngeoRuleText(options);\n    } else {\n      clone = new ngeoRuleRule(options);\n    }\n\n    return clone;\n  }\n\n  /**\n   * Extend the dynamic properties from a source rule to destination rule.\n   * The source rule remains unchanged, while the destination rule changes.\n   *\n   * @param {!ngeo.rule.Rule} sourceRule Source rule to collect the dynamic\n   *     properties from.\n   * @param {!ngeo.rule.Rule} destRule Destination rule where the dynamic\n   *     properties are set.\n   * @export\n   */\n  extendRule(sourceRule, destRule) {\n\n    if (destRule.getExpression() !== sourceRule.getExpression()) {\n      destRule.setExpression(sourceRule.getExpression());\n    }\n\n    if (destRule.lowerBoundary !== sourceRule.lowerBoundary) {\n      destRule.lowerBoundary = sourceRule.lowerBoundary;\n    }\n\n    if (destRule.operator !== sourceRule.operator) {\n      destRule.operator = sourceRule.operator;\n    }\n\n    if (destRule.upperBoundary !== sourceRule.upperBoundary) {\n      destRule.upperBoundary = sourceRule.upperBoundary;\n    }\n\n    if (sourceRule instanceof ngeoRuleGeometry &&\n       destRule instanceof ngeoRuleGeometry\n    ) {\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(destRule.feature);\n      destRule.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(sourceRule.feature)\n      );\n    }\n  }\n\n  /**\n   * @param {!Array.<!ngeo.rule.Rule>} rules Rules\n   * @return {!Array.<!ngeox.rule.AnyOptions>} List of serialized rule options.\n   * @export\n   */\n  serializeRules(rules) {\n    return rules.map((rule) => {\n      const serializedRule = this.serializeRule(rule);\n      return serializedRule;\n    });\n  }\n\n  /**\n   * Selialize a rule into options to re-create it later.\n   * @param {!ngeo.rule.Rule} rule Rule to serialize.\n   * @return {!ngeox.rule.AnyOptions} Serialized rule options.\n   * @export\n   */\n  serializeRule(rule) {\n    const obj = {\n      name: rule.name,\n      propertyName: rule.propertyName,\n      type: rule.type\n    };\n\n    if (rule.expression !== null) {\n      obj.expression = rule.expression;\n    }\n\n    if (rule.lowerBoundary !== null) {\n      obj.lowerBoundary = rule.lowerBoundary;\n    }\n\n    if (rule.operator !== null) {\n      obj.operator = rule.operator;\n    }\n\n    if (rule.operators !== null) {\n      obj.operators = rule.operators.slice(0);\n    }\n\n    if (rule.upperBoundary !== null) {\n      obj.upperBoundary = rule.upperBoundary;\n    }\n\n    if (rule instanceof ngeoRuleGeometry) {\n      obj.featureProperties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        rule.feature);\n    }\n\n    if (rule instanceof ngeoRuleSelect) {\n      obj.choices = rule.choices;\n    }\n\n    return obj;\n  }\n\n  /**\n   * Create a `ol.format.filter.Filter` object for a given data source.\n   * See the `ngeox.CreateFilterOptions` to learn more.\n   *\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?ol.format.filter.Filter} Filter.\n   * @export\n   */\n  createFilter(options) {\n\n    const dataSource = /** @type {ngeo.datasource.OGC} */ (options.dataSource);\n    let mainFilter = null;\n\n    if (options.filter) {\n      mainFilter = options.filter;\n    } else {\n      const rules = options.filterRules || dataSource.filterRules;\n      const conditions = [];\n\n      if (rules && rules.length) {\n        for (const rule of rules) {\n          const filter = this.createFilterFromRule_(\n            rule,\n            dataSource,\n            options.srsName\n          );\n          if (filter) {\n            conditions.push(filter);\n          }\n        }\n      }\n\n      const condition = dataSource.filterCondition;\n      if (conditions.length === 1) {\n        mainFilter = conditions[0];\n      } else if (conditions.length >= 2) {\n        if (condition === ngeoFilterCondition.AND) {\n          mainFilter = olFormatFilter.and.apply(null, conditions);\n        } else if (condition === ngeoFilterCondition.OR ||\n                   condition === ngeoFilterCondition.NOT\n        ) {\n          mainFilter = olFormatFilter.or.apply(null, conditions);\n        }\n      }\n      if (mainFilter && condition === ngeoFilterCondition.NOT) {\n        mainFilter = olFormatFilter.not(mainFilter);\n      }\n    }\n\n    if (options.incTime) {\n      const timeFilter = this.createTimeFilterFromDataSource_(dataSource);\n      if (timeFilter) {\n        if (mainFilter) {\n          mainFilter = olFormatFilter.and.apply(\n            null,\n            [\n              mainFilter,\n              timeFilter\n            ]\n          );\n        } else {\n          mainFilter = timeFilter;\n        }\n      }\n    }\n\n    return mainFilter;\n  }\n\n  /**\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?string} Filter string.\n   * @export\n   */\n  createFilterString(options) {\n    let filterString = null;\n    const filter = this.createFilter(options);\n    if (filter) {\n      const filterNode = writeFilter(filter);\n      const xmlSerializer = new XMLSerializer();\n      filterString = xmlSerializer.serializeToString(filterNode);\n    }\n    return filterString;\n  }\n\n  /**\n   * @param {ngeo.rule.Rule} rule Rule.\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @param {string=} opt_srsName SRS name. No srsName attribute will be\n   *     set on geometries when this is not provided.\n   * @return {?ol.format.filter.Filter} filter Filter;\n   * @private\n   */\n  createFilterFromRule_(rule, dataSource, opt_srsName) {\n\n    let filter = null;\n\n    const value = rule.value;\n    if (!value) {\n      return null;\n    }\n\n    const expression = value.expression;\n    const lowerBoundary = value.lowerBoundary;\n    const operator = value.operator;\n    const propertyName = value.propertyName;\n    const upperBoundary = value.upperBoundary;\n\n    const rot =  ngeoRuleRule.OperatorType;\n    const rsot = ngeoRuleRule.SpatialOperatorType;\n    const rtot = ngeoRuleRule.TemporalOperatorType;\n\n    const spatialTypes = [\n      rsot.CONTAINS,\n      rsot.INTERSECTS,\n      rsot.WITHIN\n    ];\n\n    const numericTypes = [\n      rot.GREATER_THAN,\n      rot.GREATER_THAN_OR_EQUAL_TO,\n      rot.LESSER_THAN,\n      rot.LESSER_THAN_OR_EQUAL_TO\n    ];\n\n    if (rule instanceof ngeoRuleDate) {\n      let beginValue;\n      let endValue;\n\n      if (operator === rtot.DURING) {\n        beginValue = moment(lowerBoundary).format('YYYY-MM-DD');\n        endValue = moment(upperBoundary).format('YYYY-MM-DD');\n      } else if (operator === rtot.EQUALS) {\n        beginValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD HH:mm:ss'\n        );\n        endValue = moment(\n          expression\n        ).add(\n          1, 'days'\n        ).subtract(\n          1, 'seconds'\n        ).format(\n          'YYYY-MM-DD HH:mm:ss'\n        );\n      } else if (operator === rtot.BEGINS) {\n        beginValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD'\n        );\n        // NOTE: end value is CURRENT + 30 years\n        endValue = moment(\n          expression\n        ).add(\n          30, 'years'\n        ).format(\n          'YYYY-MM-DD'\n        );\n      } else if (operator === rtot.ENDS) {\n        // NOTE: begin value is hardcoded to 1970-01-01\n        beginValue = '1970-01-01';\n        endValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD'\n        );\n      }\n      if (beginValue && endValue) {\n        filter = olFormatFilter.during(\n          propertyName,\n          beginValue,\n          endValue\n        );\n      }\n    } else if (rule instanceof ngeoRuleSelect) {\n      const selectedChoices = rule.selectedChoices;\n      if (selectedChoices.length === 1) {\n        filter = olFormatFilter.equalTo(\n          propertyName,\n          selectedChoices[0]\n        );\n      } else if (selectedChoices.length >= 2) {\n        const conditions = [];\n        for (const selectedChoice of selectedChoices) {\n          conditions.push(\n            olFormatFilter.equalTo(\n              propertyName,\n              selectedChoice\n            )\n          );\n        }\n        filter = olFormatFilter.or.apply(null, conditions);\n      }\n    } else if (olArray.includes(spatialTypes, operator)) {\n      const geometryName = dataSource.geometryName;\n      googAsserts.assertInstanceof(rule, ngeoRuleGeometry);\n      const geometry = googAsserts.assert(rule.geometry);\n      if (operator === rsot.CONTAINS) {\n        filter = olFormatFilter.contains(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.INTERSECTS) {\n        filter = olFormatFilter.intersects(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.WITHIN) {\n        filter = olFormatFilter.within(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      }\n    } else if (olArray.includes(numericTypes, operator)) {\n      const numericExpression = googAsserts.assertNumber(expression);\n      if (operator === rot.GREATER_THAN) {\n        filter = olFormatFilter.greaterThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.GREATER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.greaterThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN) {\n        filter = olFormatFilter.lessThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.lessThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      }\n    } else if (operator === rot.BETWEEN) {\n      filter = olFormatFilter.between(\n        propertyName,\n        lowerBoundary,\n        upperBoundary\n      );\n    } else if (operator === rot.EQUAL_TO) {\n      filter = olFormatFilter.equalTo(\n        propertyName,\n        expression\n      );\n    } else if (operator === rot.LIKE) {\n      const stringExpression = String(expression)\n        .replace(/!/g, '!!')\n        .replace(/\\./g, '!.')\n        .replace(/\\*/g, '!*');\n      filter = olFormatFilter.like(\n        propertyName,\n        `*${stringExpression}*`,\n        '*', /* wildCard */\n        '.', /* singleChar */\n        '!', /* escapeChar */\n        false /* matchCase */\n      );\n    } else if (operator === rot.NOT_EQUAL_TO) {\n      filter = olFormatFilter.notEqualTo(\n        propertyName,\n        expression\n      );\n    }\n\n    return filter;\n  }\n\n  /**\n   * Create and return an OpenLayers filter object using the available\n   * time properties within the data source.\n   * @param {ngeo.datasource.OGC} dataSource Data source from which to\n   *     create the filter.\n   * @return {?ol.format.filter.Filter} Filter\n   * @private\n   */\n  createTimeFilterFromDataSource_(dataSource) {\n    let filter = null;\n    const range = dataSource.timeRangeValue;\n    const timeProperty = dataSource.timeProperty;\n    const name = dataSource.timeAttributeName;\n\n    if (range && timeProperty && name) {\n\n      if (range.end !== undefined) {\n        // Case 1: the range has both 'start' and 'end' values.  Use them to\n        //         create a During filter.\n\n        const values = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        ).split('/');\n\n        filter = olFormatFilter.during(name, values[0], values[1]);\n      } else {\n\n        // Case 2: we only have a 'start' value. We need to calculate the 'end'\n        //         using the resolution of the time property.\n\n        const resolution = timeProperty.resolution || 'seconds';\n        const value = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        );\n        let momentEnd;\n\n        switch (resolution) {\n          case 'year':\n            momentEnd = moment(value).add(1, 'years').subtract(1, 'seconds');\n            break;\n          case 'month':\n            momentEnd = moment(value).add(1, 'months').subtract(1, 'seconds');\n            break;\n          case 'day':\n            momentEnd = moment(value).add(1, 'days').subtract(1, 'seconds');\n            break;\n          default:\n            //case \"second\":\n            // This would require a TContains filter, which neither OpenLayers\n            // and MapServer support. Skip...\n        }\n\n        if (momentEnd) {\n          const startValue = moment(value).format('YYYY-MM-DD HH:mm:ss');\n          const endValue = momentEnd.format('YYYY-MM-DD HH:mm:ss');\n          filter = olFormatFilter.during(name, startValue, endValue);\n        }\n      }\n    }\n\n    return filter;\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRuleHelper', [\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoRuleHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.File\n */\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source that contains vector features that were loaded from a file.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @private\n     */\n    this.featuresCollection_ = options.features || new olCollection();\n\n    /**\n     * @type {!ol.source.Vector}\n     * @private\n     */\n    this.source_ = new olSourceVector({\n      features: this.featuresCollection_,\n      wrapX: false\n    });\n\n    /**\n     * @type {!ol.layer.Vector}\n     * @private\n     */\n    this.layer_ = new olLayerVector({\n      source: this.source_\n    });\n  }\n\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ol.Feature>} Features\n   * @export\n   */\n  get features() {\n    return this.featuresCollection_.getArray();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {!ol.Collection.<!ol.Feature>} Features collection\n   * @export\n   */\n  get featuresCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * @return {!ol.layer.Vector} Vector layer.\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {ol.Extent} Extent.\n   * @export\n   */\n  get extent() {\n    return this.source_.getExtent();\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.FileGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A FileGroup data source combines multiple `ngeo.datasource.File` objects.\n   * Its main goal is to synchronize the added data source 'visible' properties\n   * with the visibility of their layer 'visible' property.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.unregister_ = {};\n  }\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    this.unregister_[dataSource.id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this, dataSource)\n    );\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source.\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(dataSource, value, oldValue) {\n    if (value !== undefined) {\n      dataSource.layer.setVisible(value);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    this.unregister_[dataSource.id]();\n    delete this.unregister_[dataSource.id];\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper the ngeo map LayerHelper service.\n   */\n  constructor(options, ngeoLayerHelper) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.ExternalDataSourcesManager\n */\n// TODO - MaxScaleDenominator\n// TODO - MinScaleDenominator\n\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceFileGroup from 'ngeo/datasource/FileGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\n\nconst exports = class {\n\n  /**\n   * External data sources come remote online resources, such as WMS/WMTS\n   * servers, and also files such as KML/GXP. This service is responsible of\n   * creating, storing and managing them.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog service.\n   * @param {!angular.$injector} $injector Main injector.\n   * @param {!angular.$q} $q The Angular $q service.\n   * @param {!angular.Scope} $rootScope The rootScope provider.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {!ngeo.misc.File} ngeoFile Ngeo file.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo layer helper service\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfExternalDataSourcesManager\n   */\n  constructor(gettextCatalog, $injector, $q, $rootScope, ngeoDataSources,\n    ngeoFile, ngeoLayerHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angular.$injector}\n     * @private\n     */\n    this.injector_ = $injector;\n\n    /**\n     * @type {!angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * The collection of DataSources from ngeo. When this service creates\n     * a data source, its gets added to that collection.\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.misc.File}\n     * @private\n     */\n    this.ngeoFile_ = ngeoFile;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * All external data sources that are created are stored here. The key\n     * is the data source id.\n     *\n     * Note: This cache is never cleaned and elements are never removed from it.\n     * If a data source with an id already exists in this cache, it is used\n     * instead of being re-created.\n     *\n     * @type {Object.<number, !ngeo.datasource.OGC|!ngeo.datasource.File>}\n     * @private\n     */\n    this.extDataSources_ = {};\n\n    /**\n     * File external data sources, with the key being the file name.\n     * @type {Object.<string, !ngeo.datasource.File>}\n     * @private\n     */\n    this.files_ = {};\n\n    /**\n     * @type {?ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * Group that contains file data sources.\n     * @type {!ngeo.datasource.FileGroup}\n     * @private\n     */\n    this.fileGroup_ = new ngeoDatasourceFileGroup({\n      dataSources: [],\n      injector: this.injector_,\n      title: gettextCatalog.getString('Local files')\n    });\n\n    /**\n     * Collection of WMS groups.\n     * @type {!ol.Collection.<!ngeo.datasource.WMSGroup>}\n     * @private\n     */\n    this.wmsGroupsCollection_ = new olCollection();\n\n    /**\n     * Collection of groups for WMTS data sources.\n     * @type {!ol.Collection.<!ngeo.datasource.OGCGroup>}\n     * @private\n     */\n    this.wmtsGroupsCollection_ = new olCollection();\n\n    /**\n     * Cache that stores the information of a WMTS data source. The key is the\n     * data source id.\n     * @type {!Object.<number, gmfx.datasource.ExternalDataSourcesManagerWMTSCacheItem>}\n     * @private\n     */\n    this.wmtsCache_ = {};\n\n    olEvents.listen(this.dataSources_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n\n  // === File Group ===\n\n  /**\n   * @return {!ngeo.datasource.FileGroup} File group.\n   * @export\n   */\n  get fileGroup() {\n    return this.fileGroup_;\n  }\n\n\n  // === WMS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  addWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.push(wmsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  removeWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.remove(wmsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.WMSGroup} WMS group.\n   */\n  getWMSGroup(url) {\n    let found = null;\n    for (const wmsGroup of this.wmsGroups) {\n      if (wmsGroup.url === url) {\n        found = wmsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.WMSGroup>} List of WMS groups.\n   * @export\n   */\n  get wmsGroups() {\n    return this.wmsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.WMSGroup>} Collection of WMS\n   *     groups.\n   * @export\n   */\n  get wmsGroupsCollection() {\n    return this.wmsGroupsCollection_;\n  }\n\n\n  // === WMTS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  addWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.push(wmtsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  removeWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.remove(wmtsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.OGCGroup} WMTS group.\n   */\n  getWMTSGroup(url) {\n    let found = null;\n    for (const wmtsGroup of this.wmtsGroups) {\n      if (wmtsGroup.url === url) {\n        found = wmtsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.OGCGroup>} List of groups for WMTS data\n   *     sources.\n   * @export\n   */\n  get wmtsGroups() {\n    return this.wmtsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.OGCGroup>} Collection of groups\n   *     for WMTS data sources.\n   * @export\n   */\n  get wmtsGroupsCollection() {\n    return this.wmtsGroupsCollection_;\n  }\n\n\n  // === Other methods ===\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source\n   * @return {boolean} Whether the given data source is external or not. To\n   *     be considered external, it needs to be in the external data source\n   *     hash (cache).\n   */\n  isExternalDataSource(dataSource) {\n    return !!this.extDataSources_[dataSource.id];\n  }\n\n  /**\n   * @return {ol.layer.Group} Layer group where to push layers created by\n   *     this service.\n   */\n  get layerGroup() {\n    const map = this.map_;\n    googAsserts.assert(map);\n    return this.ngeoLayerHelper_.getGroupFromMap(\n      map,\n      gmfBase.EXTERNALLAYERGROUP_NAME\n    );\n  }\n\n  /**\n   * @param {?ol.Map} map Map\n   */\n  set map(map) {\n    this.map_ = map;\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  addLayer_(layer) {\n    this.layerGroup.getLayers().push(layer);\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  removeLayer_(layer) {\n    this.layerGroup.getLayers().remove(layer);\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object.\n   * @param {!Object} capabilities  WMS Capabilities definition\n   * @param {string} url The WMS service url.\n   * @export\n   */\n  createAndAddDataSourceFromWMSCapability(layer, capabilities, url) {\n\n    const id = exports.getId(layer);\n    const service = capabilities['Service'];\n\n    let dataSource;\n\n    // (1) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n      const req = capabilities['Capability']['Request'];\n\n      // ogcImageType\n      const formats = req['GetMap']['Format'];\n      const imagePngType = 'image/png';\n      const ogcImageType = formats.includes(imagePngType) ?\n        imagePngType : formats[0];\n\n      // wmsInfoFormat\n      const infoFormats = req['GetFeatureInfo']['Format'];\n      const wmsInfoFormat = infoFormats.includes(\n        ngeoDatasourceOGC.WMSInfoFormat.GML\n      ) ? ngeoDatasourceOGC.WMSInfoFormat.GML : undefined;\n\n      // queryable\n      const queryable = layer['queryable'] === true &&\n          wmsInfoFormat !== undefined;\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: layer['Title'],\n        ogcImageType: ogcImageType,\n        ogcLayers: [{\n          name: layer['Name'],\n          queryable: queryable\n        }],\n        ogcType: ngeoDatasourceOGC.Type.WMS,\n        visible: true,\n        wmsInfoFormat: wmsInfoFormat,\n        wmsUrl: url\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n\n    // (2) Add data source in WMS group, unless it's already in there.\n    //     Will also add the data source to the `ngeo.DataSources` collection.\n    //     If the group is created, its inner OL layer is also added to the map.\n    let wmsGroup = this.getWMSGroup(url);\n    if (wmsGroup) {\n      if (!wmsGroup.dataSources.includes(dataSource)) {\n        wmsGroup.addDataSource(dataSource);\n        this.dataSources_.push(dataSource);\n      }\n    } else {\n      wmsGroup = new ngeoDatasourceWMSGroup({\n        dataSources: [dataSource],\n        injector: this.injector_,\n        title: service['Title'],\n        url: url\n      }, this.ngeoLayerHelper_);\n      this.addLayer_(wmsGroup.layer);\n      this.addWMSGroup_(wmsGroup);\n      this.dataSources_.push(dataSource);\n    }\n  }\n\n  /**\n   * @param {!Object} layer WTMS Capability Layer object.\n   * @param {!Object} capabilities  WMTS Capabilities definition\n   * @param {string} wmtsUrl The WMTS capabilities url\n   * @export\n   */\n  createAndAddDataSourceFromWMTSCapability(layer, capabilities, wmtsUrl) {\n    const id = exports.getId(layer);\n\n    // (1) No need to do anything if there's already a WMTS data source (and its\n    // layer in the map)\n    if (this.wmtsCache_[id]) {\n      return;\n    }\n\n    let dataSource;\n\n    // (2) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n\n      const name = googAsserts.assertString(layer['Title']);\n      const wmtsLayer = googAsserts.assertString(layer['Identifier']);\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: name,\n        ogcType: ngeoDatasourceOGC.Type.WMTS,\n        visible: true,\n        wmtsLayer: wmtsLayer,\n        wmtsUrl: wmtsUrl\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n    // (3) Get/Create group, then add data source to group\n    let wmtsGroup = this.getWMTSGroup(wmtsUrl);\n    if (!wmtsGroup) {\n      wmtsGroup = new ngeoDatasourceOGCGroup({\n        dataSources: [],\n        title: capabilities['ServiceIdentification']['Title'],\n        url: wmtsUrl\n      });\n      this.addWMTSGroup_(wmtsGroup);\n    }\n    wmtsGroup.addDataSource(dataSource);\n\n    // (4) Create and add the OL layer\n    const layerObj = this.ngeoLayerHelper_.createWMTSLayerFromCapabilititesObj(\n      capabilities,\n      layer\n    );\n    this.addLayer_(layerObj);\n\n    // (5) Add data source to ngeo collection\n    this.dataSources_.push(dataSource);\n\n    // (6) Create and set WMTS cache item\n    this.wmtsCache_[id] = {\n      layerObj: layerObj,\n      // This watcher synchronizes the data source visible property to\n      // the OL layer object visible property\n      unregister: this.rootScope_.$watch(\n        () => dataSource.visible,\n        this.handleWMTSDataSourceVisibleChange_.bind(this, layerObj)\n      )\n    };\n  }\n\n  /**\n   * @param {!File} file File.\n   * @export\n   */\n  createAndAddDataSourceFromFile(file) {\n    this.getFileDataSource_(file).then(\n      (dataSource) => {\n        const fileGroup = this.fileGroup_;\n\n        // (1) No need to do anything if the file has already been added...\n        if (fileGroup.dataSources.includes(dataSource)) {\n          return;\n        }\n\n        // (2) Okay, we need to add this data source. First, add its layer\n        //     to the map.\n        this.addLayer_(dataSource.layer);\n\n        // (3) Add it to the file group\n        fileGroup.addDataSource(dataSource);\n\n        // (4) Recenter the map view onto its extent\n        this.map_.getView().fit(dataSource.extent);\n\n        // (5) Finally, add it to the ngeo collection\n        this.dataSources_.push(dataSource);\n      },\n      (rejections) => {\n        googAsserts.fail(`Failed to load file: ${file.name}`);\n      }\n    );\n  }\n\n  /**\n   * Get file data source from cache, else create, store and return a new one.\n   * @param {!File} file File.\n   * @return {!angular.$q.Promise} Promise\n   * @private\n   */\n  getFileDataSource_(file) {\n\n    const defer = this.q_.defer();\n\n    if (this.files_[file.name]) {\n      defer.resolve(this.files_[file.name]);\n    } else {\n      const ngeoFile = this.ngeoFile_;\n      ngeoFile.read(file).then((content) => {\n        let features;\n        const readOptions = {\n          featureProjection: this.map_.getView().getProjection()\n        };\n\n        if (ngeoFile.isKml(content)) {\n          features = new olFormatKML().readFeatures(content, readOptions);\n        } else if (ngeoFile.isGpx(content)) {\n          features = new olFormatGPX().readFeatures(content, readOptions);\n        }\n\n        if (features) {\n          const id = exports.getId(file);\n\n          const dataSource = new ngeoDatasourceFile({\n            features: new olCollection(features),\n            id: id,\n            name: file.name,\n            visible: true\n          });\n\n          // Keep a reference if both caches\n          this.files_[file.name] = dataSource;\n          this.extDataSources_[id] = dataSource;\n\n          defer.resolve(dataSource);\n        } else {\n          defer.reject();\n        }\n      });\n    }\n\n    return defer.promise;\n  }\n\n  /**\n   * @param {!ol.layer.Tile} layer WMTS layer\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleWMTSDataSourceVisibleChange_(layer, value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      layer.setVisible(value);\n    }\n  }\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If it's an external data source, remove it from its WMS Group\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (this.extDataSources_[dataSource.id] === dataSource) {\n      if (dataSource instanceof ngeoDatasourceFile) {\n        this.removeFileDataSource_(dataSource);\n      } else if (dataSource instanceof ngeoDatasourceOGC) {\n        this.removeOGCDataSource_(dataSource);\n      }\n    }\n  }\n\n  /**\n   * Remove a data source from its group. Remove its layer from the map as well.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.File} dataSource External File data source.\n   * @private\n   */\n  removeFileDataSource_(dataSource) {\n    this.removeLayer_(dataSource.layer);\n    this.fileGroup_.removeDataSource(dataSource);\n  }\n\n  /**\n   * Remove the data source from its group. If the group no longer has\n   * any data source in it, it is removed then destroyed and its layer is\n   * removed from the map.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.OGC} dataSource External OGC data source.\n   * @private\n   */\n  removeOGCDataSource_(dataSource) {\n    if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMS) {\n      // WMS data source\n      const url = dataSource.wmsUrl;\n      googAsserts.assert(url);\n\n      const wmsGroup = this.getWMSGroup(url);\n      if (wmsGroup && wmsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmsGroup.removeDataSource(dataSource);\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the group, and remove the layer from the map as well.\n        if (!wmsGroup.dataSources.length) {\n          this.removeLayer_(wmsGroup.layer);\n          wmsGroup.destroy();\n          this.removeWMSGroup_(wmsGroup);\n        }\n      }\n    } else if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMTS) {\n      // WMTS data source\n      const url = dataSource.wmtsUrl;\n      googAsserts.assert(url);\n\n      const wmtsGroup = this.getWMTSGroup(url);\n      if (wmtsGroup && wmtsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmtsGroup.removeDataSource(dataSource);\n\n        // Remove the cache item, in addition to removing the layer from the\n        // map and unregister the watcher\n        const id = dataSource.id;\n        this.removeLayer_(this.wmtsCache_[id].layerObj);\n        this.wmtsCache_[id].unregister();\n        delete this.wmtsCache_[id];\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the groug.\n        if (!wmtsGroup.dataSources.length) {\n          wmtsGroup.destroy();\n          this.removeWMTSGroup_(wmtsGroup);\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * Get the data source id from a WMS or WMTS Capability Layer object, or\n * from a File object.\n *\n * Please, note that this is used to generate a unique id for the created\n * external data sources and since a WMS/WMTS Capability Layer objects don't\n * natively contains an id by themselves, then it is programmatically generated\n * using the `ol.getUid` method, plus a million.\n *\n * @param {!Object} layer WMS/WMTS Capability Layer object.\n * @return {number} Data source id.\n * @export\n */\nexports.getId = function(layer) {\n  return olBase.getUid(layer) + 1000000;\n};\n\n\nexports.module = angular.module('gmfExternalDataSourcesManager', [\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscFile.module.name,\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('gmfExternalDataSourcesManager',\n  exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.DataSources\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport olView from 'ol/View.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoDataSources\n   * @ngInject\n   */\n  constructor() {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = new olCollection();\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_ === map) {\n      return;\n    }\n\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.collection_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.service('ngeoDataSources', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.editFeatureComponent\n */\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\n\n/** @suppress {extraRequire} */\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\n\nimport gmfEditingXSDAttributes from 'gmf/editing/XSDAttributes.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport googAsserts from 'goog/asserts.js';\nimport DateFormatter from 'ngeo/misc/php-date-formatter.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.css';\n\n\n/** @suppress {extraRequire} */\nimport ngeoEditingAttributesComponent from 'ngeo/editing/attributesComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingCreatefeatureComponent from 'ngeo/editing/createfeatureComponent.js';\n\nimport ngeoUtils from 'ngeo/utils.js';\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMenu from 'ngeo/Menu.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\n\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfEditingFeatureComponent', [\n  gmfEditingEditFeature.module.name,\n  gmfEditingSnapping.module.name,\n  gmfEditingXSDAttributes.module.name,\n  ngeoEditingAttributesComponent.name,\n  ngeoEditingCreatefeatureComponent.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMessageModalComponent.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/editing/editFeatureComponent', require('./editFeatureComponent.html'));\n});\n\n\n/**\n * Directive used to insert, modify and delete features from a single layer.\n * It allows you to modify the geometry of the feature in addition to its\n * attributes.\n *\n * In order to modify or delete a feature, you must click on the map at the\n * location of the feature to select it first.\n *\n * In order to create a new feature, you use the \"Draw\" button and digitize\n * the feature on the map.\n *\n * Example:\n *\n *     <gmf-editfeature\n *         gmf-editfeature-dirty=\"ctrl.dirty\"\n *         gmf-editfeature-editabletreectrl=\"::ctrl.treeCtrl\"\n *         gmf-editfeature-map=\"::ctrl.map\"\n *         gmf-editfeature-state=\"efsCtrl.state\"\n *         gmf-editfeature-tolerance=\"::ctrl.tolerance\"\n *         gmf-editfeature-vector=\"::ctrl.vectorLayer\">\n *     </gmf-editfeature>\n *\n * @htmlAttribute {boolean} gmf-editfeature-dirty Flag that is toggled as soon\n *     as the feature changes, i.e. if any of its properties change, which\n *     includes the geometry.\n * @htmlAttribute {ngeo.layertree.Controller} gmf-editfeature-editabletreectrl\n *     A reference to the editable Layertree controller, which contains a\n *     a reference to the node and WMS layer.\n * @htmlAttribute {ol.Map} gmf-editfeature-map The map.\n * @htmlAttribute {string} gmf-editfeature-state The state property shared\n *     with the `gmf-editfeatureselector` directive. For more info, see in\n *     that directive.\n * @htmlAttribute {number|undefined} gmf-editfeatureselector-tolerance The\n *     buffer in pixels to use when making queries to get the features.\n * @htmlAttribute {ol.layer.Vector} gmf-editfeature-vector The vector layer in\n *     which to draw the vector features.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfEditfeature\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfEditfeatureController as efCtrl',\n    scope: {\n      'dirty': '=gmfEditfeatureDirty',\n      'editableTreeCtrl': '=gmfEditfeatureEditabletreectrl',\n      'map': '<gmfEditfeatureMap',\n      'state': '=gmfEditfeatureState',\n      'tolerance': '<?gmfEditfeatureTolerance',\n      'vectorLayer': '<gmfEditfeatureVector'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/editing/editFeatureComponent'\n  };\n};\n\n\nexports.directive('gmfEditfeature',\n  exports.component_);\n\n\n/**\n * @param {jQuery} $element Element.\n * @param {angular.$q} $q Angular $q service.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmf.editing.EditFeature} gmfEditFeature Gmf edit feature service.\n * @param {gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @param {gmf.editing.XSDAttributes} gmfXSDAttributes The gmf XSDAttributes service.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo Event Helper.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfEditfeatureController\n */\nexports.Controller_ = function($element, $q, $scope, $timeout,\n  gettextCatalog, gmfEditFeature, gmfSnapping, gmfXSDAttributes,\n  ngeoEventHelper, ngeoFeatureHelper, ngeoLayerHelper, ngeoToolActivateMgr) {\n\n\n  // === Binding properties ===\n\n  /**\n   * Flag that is toggled as soon as the feature changes, i.e. if any of its\n   * properties change, which includes the geometry.\n   * @type {boolean}\n   * @export\n   */\n  this.dirty;\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.editableTreeCtrl;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * The state property shared with the `gmf-editfeatureselector` directive.\n   * For more info, see in that directive.\n   * @type {string}\n   * @export\n   */\n  this.state;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.tolerance;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.vectorLayer;\n\n\n  // === Injected properties ===\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {gmf.editing.EditFeature}\n   * @private\n   */\n  this.gmfEditFeature_ = gmfEditFeature;\n\n  /**\n   * @type {gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n\n  /**\n   * @type {gmf.editing.XSDAttributes}\n   * @private\n   */\n  this.gmfXSDAttributes_ = gmfXSDAttributes;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n\n  // === Private properties ===\n\n  /**\n   * @type {gmfThemes.GmfLayer}\n   * @private\n   */\n  this.editableNode_;\n\n  /**\n   * @type {ol.layer.Image|ol.layer.Tile}\n   * @private\n   */\n  this.editableWMSLayer_;\n\n  /**\n   * A deferred object resolved after the confirm modal \"continue w/o saving\" or\n   * \"save\" buttons are clicked.\n   * @type {angular.$q.Deferred|null}\n   * @private\n   */\n  this.confirmDeferred_ = null;\n\n  /**\n   * Flag that controls the visibility of the modal that manages unsaved\n   * modifications.\n   * @type {boolean}\n   * @export\n   */\n  this.unsavedModificationsModalShown = false;\n\n  /**\n   * Flag that is toggled while a request is pending, either one to get\n   * features when a map is clicked or when saving\n   * @private\n   */\n  this.pending = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = true;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.createActive = false;\n\n  /**\n   * @type {ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.createToolActivate = new ngeoMiscToolActivate(this, 'createActive');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.mapSelectActive = true;\n\n  /**\n   * @type {ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.mapSelectToolActivate = new ngeoMiscToolActivate(this, 'mapSelectActive');\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature = null;\n\n  this.scope_.$watch(\n    () => this.feature,\n    this.handleFeatureChange_.bind(this)\n  );\n\n  /**\n   * @type {number|string|undefined}\n   * @export\n   */\n  this.featureId = undefined;\n\n  /**\n   * @type {ol.Collection}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Collection}\n   * @private\n   */\n  this.interactions_ = new olCollection();\n\n  /**\n   * @type {ol.interaction.Modify}\n   * @private\n   */\n  this.modify_;\n\n  /**\n   * @type {ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.modifyToolActivate;\n\n  /**\n   * @type {ngeo.Menu}\n   * @private\n   */\n  this.menu_ = new ngeoMenu({\n    actions: [{\n      cls: 'fa fa-arrows',\n      label: gettextCatalog.getString('Move'),\n      name: 'move'\n    }, {\n      cls: 'fa fa-rotate-right',\n      label: gettextCatalog.getString('Rotate'),\n      name: 'rotate'\n    }]\n  });\n\n  /**\n   * @type {ngeo.interaction.Translate}\n   * @private\n   */\n  this.translate_;\n\n  /**\n   * @type {ngeo.interaction.Rotate}\n   * @private\n   */\n  this.rotate_;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.rotateToolActivate;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.translateToolActivate;\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?Array.<!ngeox.Attribute>}\n   * @export\n   */\n  this.attributes = null;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showServerError = false;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.serverErrorMessage = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.serverErrorType = null;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const lang = this.gettextCatalog_.getCurrentLanguage();\n  $.datetimepicker.setLocale(lang);\n  $.datetimepicker.setDateFormatter(new DateFormatter());\n\n  // (1) Set default values and other properties\n  this.dirty = this.dirty === true;\n  this.editableNode_ = /** @type {gmfThemes.GmfLayer} */ (\n    this.editableTreeCtrl.node);\n  this.features = this.vectorLayer.getSource().getFeaturesCollection();\n  this.tolerance = this.tolerance !== undefined ? this.tolerance : 10;\n\n  // (1.1) Set editable WMS layer\n  const layer = gmfLayertreeSyncLayertreeMap.getLayer(this.editableTreeCtrl);\n  googAsserts.assert(\n    layer instanceof olLayerImage || layer instanceof olLayerTile);\n  this.editableWMSLayer_ = layer;\n\n  // (1.2) Create, set and initialize interactions\n  this.modify_ = new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.features,\n    style: this.ngeoFeatureHelper_.getVertexStyle(false)\n  });\n  this.interactions_.push(this.modify_);\n\n  this.rotate_ = new ngeoInteractionRotate({\n    features: this.features,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf01e',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.rotate_);\n\n  this.translate_ = new ngeoInteractionTranslate({\n    features: this.features,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf047',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.translate_);\n\n  this.initializeInteractions_();\n\n  this.modifyToolActivate = new ngeoMiscToolActivate(this.modify_, 'active');\n  this.rotateToolActivate = new ngeoMiscToolActivate(this.rotate_, 'active');\n  this.translateToolActivate = new ngeoMiscToolActivate(this.translate_, 'active');\n\n  // (1.3) Add menu to map\n  this.map.addOverlay(this.menu_);\n\n\n  // (2) Watchers and event listeners\n  this.scope_.$watch(\n    () => this.createActive,\n    (newVal, oldVal) => {\n      if (newVal) {\n        this.gmfSnapping_.ensureSnapInteractionsOnTop();\n      }\n    }\n  );\n\n  this.scope_.$on('$destroy', this.handleDestroy_.bind(this));\n\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(\n      this.features,\n      'add',\n      this.handleFeatureAdd_,\n      this\n    )\n  );\n\n  this.scope_.$watch(\n    () => this.mapSelectActive,\n    this.handleMapSelectActiveChange_.bind(this)\n  );\n\n  this.scope_.$watch(\n    () => this.state,\n    (newValue, oldValue) => {\n      const state = exports.State;\n      if (newValue === state.STOP_EDITING_PENDING) {\n        this.confirmCancel().then(() => {\n          this.state = state.STOP_EDITING_EXECUTE;\n        });\n      } else if (newValue === state.DEACTIVATE_PENDING) {\n        this.confirmCancel().then(() => {\n          this.state = state.DEACTIVATE_EXECUTE;\n        });\n      }\n    }\n  );\n\n  this.scope_.$watch(\n    () => this.unsavedModificationsModalShown,\n    (newValue, oldValue) => {\n      // Reset stop request when closing the confirmation modal\n      if (oldValue && !newValue) {\n        this.state = exports.State.IDLE;\n      }\n    }\n  );\n\n\n  // (3) Get attributes\n  this.gmfXSDAttributes_.getAttributes(this.editableNode_.id).then(\n    this.setAttributes_.bind(this));\n\n\n  // (4) Toggle\n  this.toggle_(true);\n\n};\n\n\n/**\n * Save the currently selected feature modifications.\n * @export\n */\nexports.Controller_.prototype.save = function() {\n  googAsserts.assert(this.attributes);\n\n  const feature = this.feature.clone();\n  feature.setId(this.feature.getId());\n  const id = this.featureId;\n\n  this.pending = true;\n\n  const dateFormatter = new DateFormatter();\n  for (const attribute of this.attributes) {\n    if (attribute.format) {\n      if (this.feature.get(attribute.name)) {\n        const name = this.feature.get(attribute.name);\n        googAsserts.assertString(name);\n        const value = dateFormatter.parseDate(name, attribute.format);\n        let jsonFormat = 'Y-m-d\\\\TH:i:s';\n        if (attribute.type === 'date') {\n          jsonFormat = 'Y-m-d';\n        } else if (attribute.type === 'time') {\n          jsonFormat = 'H:i:s';\n        } else if (attribute.type === 'datetime') {\n          // Time zone correction\n          value.setMinutes(value.getMinutes() + value.getTimezoneOffset());\n        }\n        feature.set(attribute.name, dateFormatter.formatDate(value, jsonFormat));\n      } else {\n        // Shouldn't be set to an empty string\n        feature.set(attribute.name, null);\n      }\n    }\n  }\n\n  const promise = id ?\n    this.gmfEditFeature_.updateFeature(\n      this.editableNode_.id,\n      feature\n    ) :\n    this.gmfEditFeature_.insertFeatures(\n      this.editableNode_.id,\n      [feature]\n    );\n  promise.then(\n    (response) => {\n      this.dirty = false;\n      this.pending = false;\n      this.handleEditFeature_(response);\n    },\n    (response) => {\n      this.showServerError = true;\n      this.pending = false;\n      this.serverErrorType =  `error type : ${response.data['error_type']}`;\n      this.serverErrorMessage = `error message : ${response.data['message']}`;\n    }\n  );\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.cancel = function() {\n  this.dirty = false;\n  this.feature = null;\n  this.features.clear();\n  this.menu_.close();\n  this.unsavedModificationsModalShown = false;\n};\n\n\n/**\n * Check if there are unsaved modifications. If there aren't, then cancel.\n * Used by the 'cancel' button in the template.\n * @return {angular.$q.Promise} The promise attached to the confirm deferred\n *     object.\n * @export\n */\nexports.Controller_.prototype.confirmCancel = function() {\n  return this.checkForModifications_().then(() => {\n    this.cancel();\n  });\n};\n\n\n/**\n * Check if there's a feature selected and if it contains modifications\n * (a.k.a. is dirty), then the confirmation modal is shown.\n * @param {boolean=} scopeApply Whether to force scope to refresh or not.\n *     when the confirm modal is not dismissed.\n * @return {angular.$q.Promise} The promise attached to the confirm deferred\n *     object.\n * @private\n */\nexports.Controller_.prototype.checkForModifications_ = function(\n  scopeApply) {\n  this.confirmDeferred_ = this.q_.defer();\n  if (this.feature && this.dirty) {\n    this.unsavedModificationsModalShown = true;\n    if (scopeApply) {\n      this.scope_.$apply();\n    }\n  } else {\n    this.confirmDeferred_.resolve();\n  }\n\n  return this.confirmDeferred_.promise;\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.continueWithoutSaving = function() {\n  this.cancel();\n  this.confirmDeferred_.resolve();\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.delete = function() {\n  const msg = this.gettextCatalog_.getString(\n    'Do you really want to delete the selected feature?');\n  // Confirm deletion first\n  if (confirm(msg)) {\n    this.pending = true;\n\n    // (1) Launch request\n    this.gmfEditFeature_.deleteFeature(\n      this.editableNode_.id,\n      this.feature\n    ).then(\n      (response) => {\n        this.dirty = false;\n        this.pending = false;\n        this.ngeoLayerHelper_.refreshWMSLayer(this.editableWMSLayer_);\n\n        // (2) Reset selected feature\n        this.cancel();\n      },\n      (response) => {\n        this.showServerError = true;\n        this.pending = false;\n        this.serverErrorType =  `error type : ${response.data['error_type']}`;\n        this.serverErrorMessage = `error message : ${response.data['message']}`;\n      }\n    );\n\n  }\n};\n\n\n/**\n * Called when the modal 'save' button is clicked. Do as if the user had\n * clicked on the 'save' input button in the form, which allows the form\n * to be validated.\n * @export\n */\nexports.Controller_.prototype.submit = function() {\n  // Use timeout to prevent the digest already in progress\n  // due to clicking on the modal button to throw an error.\n  this.timeout_(() => {\n    this.element_.find('input[type=\"submit\"]').click();\n  }, 0);\n};\n\n/**\n * Called after an insert, update or delete request.\n * @param {angular.$http.Response} resp Ajax response.\n * @private\n */\nexports.Controller_.prototype.handleEditFeature_ = function(resp) {\n  const features = new olFormatGeoJSON().readFeatures(resp.data);\n  if (features.length) {\n    this.feature.setId(features[0].getId());\n    this.ngeoLayerHelper_.refreshWMSLayer(this.editableWMSLayer_);\n  }\n  if (this.confirmDeferred_) {\n    this.confirmDeferred_.resolve();\n  }\n};\n\n\n/**\n * @param {!Array.<ngeox.Attribute>} attributes Attributes.\n * @private\n */\nexports.Controller_.prototype.setAttributes_ = function(attributes) {\n  // Set attributes\n  this.attributes = attributes;\n  for (const attribute of attributes) {\n    if (attribute.type == 'date') {\n      attribute.format = 'Y-m-d';\n      attribute.mask = '9999-19-39';\n    } else if (attribute.type == 'time') {\n      attribute.format = 'H:i';\n      attribute.mask = '29:59';\n    } else if (attribute.type == 'datetime') {\n      attribute.format = 'Y-m-d H:i';\n      attribute.mask = '9999-19-39 29:59';\n    }\n  }\n\n  // Get geom type from attributes and set\n  const geomAttr = ngeoFormatXSDAttribute.getGeometryAttribute(\n    this.attributes\n  );\n  if (geomAttr && geomAttr.geomType) {\n    this.geomType = geomAttr.geomType;\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeatureAdd_ = function(evt) {\n  this.feature = null;\n  this.timeout_(() => {\n    googAsserts.assert(this.attributes);\n    const feature = evt.element;\n    googAsserts.assertInstanceof(feature, olFeature);\n    const dateFormatter = new DateFormatter();\n    for (const attribute of this.attributes) {\n      if (attribute.format) {\n        if (feature.get(attribute.name)) {\n          let value;\n          if (attribute.type === 'datetime') {\n            value = new Date(feature.get(attribute.name));\n            // Time zone correction\n            value.setMinutes(value.getMinutes() - value.getTimezoneOffset());\n          } else {\n            let jsonFormat = '';\n            if (attribute.type === 'date') {\n              jsonFormat = 'Y-m-d';\n            } else if (attribute.type === 'time') {\n              jsonFormat = 'H:i:s';\n            }\n            const name = feature.get(attribute.name);\n            googAsserts.assertString(name);\n            value = dateFormatter.parseDate(name, jsonFormat);\n          }\n          feature.set(attribute.name, dateFormatter.formatDate(value, attribute.format));\n        } else {\n          // Shouldn't be set to an empty string\n          feature.set(attribute.name, null);\n        }\n      }\n    }\n    this.feature = feature;\n    this.createActive = false;\n    if (!feature.getId()) {\n      this.dirty = true;\n    }\n    this.scope_.$apply();\n  }, 0);\n};\n\n\n/**\n * Activate or deactivate this directive.\n * @param {boolean} active Whether to activate this directive or not.\n * @private\n */\nexports.Controller_.prototype.toggle_ = function(active) {\n\n  const keys = this.listenerKeys_;\n  const createUid = ['create-', olBase.getUid(this)].join('-');\n  const otherUid = ['other-', olBase.getUid(this)].join('-');\n  const toolMgr = this.ngeoToolActivateMgr_;\n\n  if (active) {\n\n    // FIXME\n    //this.registerInteractions_();\n\n    keys.push(olEvents.listen(this.menu_, 'actionclick',\n      this.handleMenuActionClick_, this));\n\n    keys.push(olEvents.listen(this.translate_,\n      'translateend',\n      this.handleTranslateEnd_, this));\n\n    keys.push(olEvents.listen(this.rotate_, 'rotateend', this.handleRotateEnd_, this));\n\n    toolMgr.registerTool(createUid, this.createToolActivate, false);\n    toolMgr.registerTool(createUid, this.mapSelectToolActivate, true);\n\n    toolMgr.registerTool(otherUid, this.createToolActivate, false);\n    toolMgr.registerTool(otherUid, this.modifyToolActivate, true);\n    toolMgr.registerTool(otherUid, this.translateToolActivate, false);\n    toolMgr.registerTool(otherUid, this.rotateToolActivate, false);\n\n  } else {\n\n    // FIXME\n    //this.unregisterInteractions_();\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n\n    toolMgr.unregisterTool(createUid, this.createToolActivate);\n    toolMgr.unregisterTool(createUid, this.mapSelectToolActivate);\n\n    toolMgr.unregisterTool(otherUid, this.createToolActivate);\n    toolMgr.unregisterTool(otherUid, this.modifyToolActivate);\n    toolMgr.unregisterTool(otherUid, this.translateToolActivate);\n    toolMgr.unregisterTool(otherUid, this.rotateToolActivate);\n\n    this.createActive = false;\n    this.cancel();\n  }\n\n  this.modify_.setActive(active);\n  this.mapSelectActive = active;\n  this.editableTreeCtrl.properties['editing'] = active;\n\n};\n\n\n/**\n * Called when the mapSelectActive property changes.\n * @param {boolean} active Whether the map select is active or not.\n * @private\n */\nexports.Controller_.prototype.handleMapSelectActiveChange_ = function(\n  active) {\n\n  const mapDiv = this.map.getViewport();\n  googAsserts.assertElement(mapDiv);\n\n  if (active) {\n    olEvents.listen(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.listen(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n  } else {\n    olEvents.unlisten(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.unlisten(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n  }\n};\n\n\n/**\n * Called when the map is clicked.\n *\n * (1) If a vector feature was clicked, don't do anything (i.e. allow the\n *     interactions to do their bidings without selecting a new feature).\n *\n * (2) Otherwise, if there is a feature being edited and has unsaved\n *     modifications, show the confirmation modal asking the user what to do\n *     about it.\n *\n * (3) If there's no feature selected or we have one without unsaved\n *     modifications or with modifications that were canceled, launch a query\n *     to fetch the features at the clicked location.\n *\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapClick_ = function(evt) {\n  const coordinate = evt.coordinate;\n  const pixel = evt.pixel;\n\n  // (1) Check if we clicked on an existing vector feature, i.e the one\n  //     selected. In that case, no need to do any further action.\n  const feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 5\n    }\n  );\n\n  if (feature) {\n    return;\n  }\n\n  // (2) If a feature is being edited and has unsaved changes, show modal\n  //     to let the user decide what to do\n  this.checkForModifications_(true).then(() => {\n\n    const map = this.map;\n    const view = map.getView();\n    const resolution = view.getResolution();\n    const buffer = resolution * this.tolerance;\n    const extent = olExtent.buffer(\n      [coordinate[0], coordinate[1], coordinate[0], coordinate[1]],\n      buffer\n    );\n\n    // (3) Launch query to fetch features\n    this.gmfEditFeature_.getFeaturesInExtent(\n      [this.editableNode_.id],\n      extent\n    ).then(this.handleGetFeatures_.bind(this));\n\n    // (4) Clear any previously selected feature\n    this.cancel();\n\n    // (5) Pending\n    this.pending = true;\n  });\n};\n\n\n/**\n * @param {Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(evt) {\n  const pixel = this.map.getEventPixel(evt);\n  const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 7\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // show contextual menu when clicking on certain types of features\n  if (feature) {\n    const type = this.ngeoFeatureHelper_.getType(feature);\n    if (type === ngeoGeometryType.POLYGON || type === ngeoGeometryType.MULTI_POLYGON ||\n        type === ngeoGeometryType.LINE_STRING || type === ngeoGeometryType.MULTI_LINE_STRING) {\n      this.menu_.open(coordinate);\n    }\n    evt.preventDefault();\n    evt.stopPropagation();\n  }\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @private\n */\nexports.Controller_.prototype.handleGetFeatures_ = function(features) {\n  this.pending = false;\n\n  this.timeout_(() => {\n    if (features.length) {\n      const feature = features[0];\n      this.feature = feature;\n      this.features.push(feature);\n    }\n  }, 0);\n};\n\n\n/**\n * Initialize interactions by setting them inactive and decorating them\n * @private\n */\nexports.Controller_.prototype.initializeInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    interaction.setActive(false);\n    ngeoMiscDecorate.interaction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by adding them to the map\n * @private\n */\nexports.Controller_.prototype.registerInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.addInteraction(interaction);\n  });\n};\n\n\n/**\n * Unregister interactions, i.e. set them inactive and remove them from the map\n * @private\n */\nexports.Controller_.prototype.unregisterInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.removeInteraction(interaction);\n  });\n};\n\n\n/**\n * @param {?ol.Feature} newFeature The new feature.\n * @param {?ol.Feature} oldFeature The old feature.\n * @private\n */\nexports.Controller_.prototype.handleFeatureChange_ = function(\n  newFeature, oldFeature\n) {\n\n  let geom;\n  if (oldFeature) {\n    olEvents.unlisten(oldFeature, 'propertychange', this.handleFeaturePropertyChange_, this);\n    geom = oldFeature.getGeometry();\n    googAsserts.assert(geom);\n    olEvents.unlisten(\n      geom,\n      'change',\n      this.handleFeatureGeometryChange_,\n      this\n    );\n    this.unregisterInteractions_();\n  }\n\n  if (newFeature) {\n    this.featureId = newFeature.getId();\n    olEvents.listen(newFeature, 'propertychange', this.handleFeaturePropertyChange_, this);\n    geom = newFeature.getGeometry();\n    googAsserts.assert(geom);\n    olEvents.listen(\n      geom,\n      'change',\n      this.handleFeatureGeometryChange_,\n      this\n    );\n    this.registerInteractions_();\n\n    this.gmfSnapping_.ensureSnapInteractionsOnTop();\n\n    // The `ui-date` triggers an unwanted change, i.e. it converts the text\n    // to Date, which makes the directive dirty when it shouldn't... to\n    // bypass this, we reset the dirty state here. We do so only if we're\n    // editing an existing feature\n    if (this.featureId) {\n      this.timeout_(() => {\n        this.dirty = false;\n        this.scope_.$apply();\n      }, 0);\n    }\n  } else {\n    this.featureId = undefined;\n  }\n\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeaturePropertyChange_ = function() {\n  this.dirty = true;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeatureGeometryChange_ = function() {\n  this.dirty = true;\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {ngeox.MenuEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuActionClick_ = function(evt) {\n  const action = evt.detail.action;\n\n  switch (action) {\n    case 'move':\n      this.translate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    case 'rotate':\n      this.rotate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * @param {ol.interaction.Translate.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleTranslateEnd_ = function(evt) {\n  this.translate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.RotateEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleRotateEnd_ = function(evt) {\n  this.rotate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.features.clear();\n  this.handleFeatureChange_(null, this.feature);\n  this.feature = null;\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.toggle_(false);\n  this.handleMapSelectActiveChange_(false);\n  this.unregisterInteractions_();\n};\n\n\nexports.controller('GmfEditfeatureController',\n  exports.Controller_);\n\n\n/**\n * The different possible values of the `state` inner property.\n * @enum {string}\n */\nexports.State = {\n  /**\n   * The default state. While idle, nothing happens.\n   * @type {string}\n   */\n  IDLE: 'idle',\n  /**\n   * The state active after the deactivation of the editing tools and the\n   * unsaved modifications were saved or discarded.\n   * @type {string}\n   */\n  DEACTIVATE_EXECUTE: 'deactivate_execute',\n  /**\n   * The state active when the deactivation of the editing tools is in\n   * progress while there are unsaved modifications.\n   * @type {string}\n   */\n  DEACTIVATE_PENDING: 'deactivate_pending',\n  /**\n   * Final state set after the \"stop editing\" button has been clicked while\n   * no unsaved modifications were made or if the user saved them or confirmed\n   * to continue without saving.\n   * @type {string}\n   */\n  STOP_EDITING_EXECUTE: 'stop_editing_execute',\n  /**\n   * The state that is active while when the \"stop editing\" button has been\n   * clicked but before any confirmation has been made to continue.\n   * @type {string}\n   */\n  STOP_EDITING_PENDING: 'stop_editing_pending'\n};\n\n\nexport default exports;\n","/**\n * @module gmf.theme.Manager\n */\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.DataSource\n */\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Select\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A select rule, which allows the selection of multiple values among a list\n   * of choices.\n   *\n   * The expression property holds the list of selected choices, which is\n   * comma-separated.\n   *\n   * @struct\n   * @param {!ngeox.rule.SelectOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = ngeoRuleRule.OperatorType.EQUAL_TO;\n    options.type = ngeoFormatAttributeType.SELECT;\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.choices_ = options.choices;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {Array.<string>} Choices\n   * @export\n   */\n  get choices() {\n    return this.choices_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {Array.<string>} Selected choices\n   * @export\n   */\n  get selectedChoices() {\n    let selectedChoices;\n    if (this.expression) {\n      const stringExpression = String(this.expression);\n      selectedChoices = stringExpression.split(',');\n    } else {\n      selectedChoices = [];\n    }\n    return selectedChoices;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.ToolActivateMgr\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * Provides a service to manage the activation of `ngeo.misc.ToolActivate` objects.\n *\n * Example:\n *\n * Each tool must be registered before using it.\n *\n *     let tool = new ngeo.misc.ToolActivate(interaction, 'active');\n *     ngeoToolActivateMgr.registerTool('mapTools', tool);\n *\n * A tool will be registered in a group identified by a group name.\n * Once registered a tool can be activated and deactivated. When activating a\n * tool, all others tools in the same group will be deactivated.\n *\n *     ngeoToolActivateMgr.activateTool(tool);\n *     ngeoToolActivateMgr.deactivateTool(tool);\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoToolActivateMgr\n * @ngInject\n */\nconst exports = function($rootScope) {\n\n  /**\n   * @type {!Object.<string, Array.<ngeox.miscToolActivateMgrEntry>>}\n   * @private\n   */\n  this.groups_ = {};\n\n  /**\n   * The scope.\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $rootScope;\n};\n\n\n/**\n * Register a tool.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to register.\n * @param {boolean=} opt_defaultActivate If true, this tool will be activated\n *     when all other tools in the group are deactivated.\n * @export\n */\nexports.prototype.registerTool = function(groupName, tool,\n  opt_defaultActivate) {\n  let entries = this.groups_[groupName];\n  if (!entries) {\n    entries = this.groups_[groupName] = [];\n  }\n\n  const unlisten = this.scope_.$watch(\n    tool.getActive,\n    (newVal, oldVal) => {\n      if (newVal === oldVal) {\n        return;\n      }\n      if (newVal) {\n        this.deactivateTools_(groupName, tool);\n      } else {\n        this.activateDefault_(groupName);\n      }\n    });\n\n  entries.push({\n    tool: tool,\n    defaultTool: opt_defaultActivate || false,\n    unlisten: unlisten\n  });\n\n  if (googAsserts.ENABLE_ASSERTS) {\n    // check that only one default tool per group exists\n    let defaultTools = 0;\n    entries.forEach((entry) => {\n      if (entry.defaultTool) {\n        defaultTools++;\n      }\n    });\n    googAsserts.assert(\n      defaultTools <= 1, `more than one default tool in group ${groupName}`);\n  }\n};\n\n\n/**\n * Unregister a tool from a group.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to unregister.\n * @export\n */\nexports.prototype.unregisterTool = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      if (entries[i].tool == tool) {\n        entries[i].unlisten();\n        entries.splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * Unregister each tool from a group.\n * @param {string} groupName Name of the group of tools to unregister.\n * @export\n */\nexports.prototype.unregisterGroup = function(groupName) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      entries[i].unlisten();\n    }\n    delete this.groups_[groupName];\n  }\n};\n\n\n/**\n * Activate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @export\n */\nexports.prototype.activateTool = function(tool) {\n  tool.setActive(true);\n};\n\n\n/**\n * Deactivate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to deactivate.\n * @export\n */\nexports.prototype.deactivateTool = function(tool) {\n  tool.setActive(false);\n};\n\n\n/**\n * Deactivate all tools except the given one.\n *\n * @param {string} groupName Name of the group.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @private\n */\nexports.prototype.deactivateTools_ = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  for (let i = 0; i < entries.length; i++) {\n    if (tool != entries[i].tool) {\n      entries[i].tool.setActive(false);\n    }\n  }\n};\n\n\n/**\n * Activate the default tool in the given group if no other tool is active.\n *\n * @param {string} groupName Name of the group.\n * @private\n */\nexports.prototype.activateDefault_ = function(groupName) {\n  const entries = this.groups_[groupName];\n  let defaultTool = null;\n  let hasActiveTool = false;\n\n  for (let i = 0; i < entries.length; i++) {\n    hasActiveTool = hasActiveTool || entries[i].tool.getActive();\n\n    if (entries[i].defaultTool) {\n      defaultTool = entries[i].tool;\n    }\n  }\n\n  if (!hasActiveTool && defaultTool !== null) {\n    defaultTool.setActive(true);\n  }\n};\n\n\nexports.module = angular.module('ngeoToolActivateMgr', []);\nexports.module.service('ngeoToolActivateMgr', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.btnComponent\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Attributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach((expressionFn, i) => {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  });\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Attributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.common\n */\nconst exports = {};\nimport {createEditingStyle} from 'ol/style/Style.js';\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultDrawStyleFunction = function() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultModifyStyleFunction = function() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[/**@type {ol.geom.GeometryType} */ ('Point')];\n  };\n};\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.Service\n */\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\n\n/**\n * An \"authentication\" service for a GeoMapFish application. Upon loading, it\n * launches a request to determine whether a user is currently logged in or\n * not.\n *\n * The possible API requests it supports, which are all self-explanatory, are:\n *\n * - changePassword\n * - login\n * - logout\n * - resetPassword\n *\n * @extends {ol.events.EventTarget}\n */\nconst exports = class extends olEventsEventTarget {\n\n  /**\n   * @param {angular.$http} $http Angular http service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angular.Scope} $rootScope The directive's scope.\n   * @param {string} authenticationBaseUrl URL to \"authentication\" web service.\n   * @param {gmfx.User} gmfUser User.\n   * @ngInject\n   */\n  constructor($http, $injector, $rootScope, authenticationBaseUrl, gmfUser) {\n\n    super();\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.$http_ = $http;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$rootScope_ = $rootScope;\n\n    /**\n     * The authentication url without trailing slash\n     * @type {string}\n     * @private\n     */\n    this.baseUrl_ = authenticationBaseUrl.replace(/\\/$/, '');\n\n    /**\n     * @type {gmfx.User}\n     * @private\n     */\n    this.user_ = gmfUser;\n\n    /**\n      * Don't request a new user object from the back-end after\n      * logging out if the logged-in user's role has this role.\n      * @type {?string}\n      * @private\n      */\n    this.noReloadRole_ =  $injector.has('gmfAuthenticationNoReloadRole')\n      ? $injector.get('gmfAuthenticationNoReloadRole')\n      : null;\n\n    this.load_();\n  }\n\n  /**\n   * Load the authentication service, which sends an asynch request to\n   * determine whether the user is currently connected or not.\n   * @private\n   */\n  load_() {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.IS_LOGGED_IN}`;\n    this.$http_.get(url, {withCredentials: true}).then(\n      this.handleLogin_.bind(this, true)\n    );\n  }\n\n  /**\n   * @param {string} oldPwd Old password.\n   * @param {string} newPwd New password.\n   * @param {string} confPwd New password confirmation.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  changePassword(oldPwd, newPwd, confPwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.CHANGE_PASSWORD}`;\n\n    return this.$http_.post(url, $.param({\n      'oldPassword': oldPwd,\n      'newPassword': newPwd,\n      'confirmNewPassword': confPwd\n    }), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    }).then(((response) => {\n      this.user_.is_password_changed = true;\n      this.$rootScope_.$digest();\n    }).bind(this));\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @param {string} pwd Password.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  login(login, pwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGIN}`;\n\n    return this.$http_.post(url, $.param({'login': login, 'password': pwd}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    }).then(\n      this.handleLogin_.bind(this, false));\n  }\n\n  /**\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  logout() {\n    const noReload = this.user_['role_name'] === this.noReloadRole_;\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGOUT}`;\n    return this.$http_.get(url, {withCredentials: true}).then(() => {\n      this.resetUser_(noReload);\n    });\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  resetPassword(login) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.RESET_PASSWORD}`;\n\n    /**\n     * @param {angular.$http.Response} resp Ajax response.\n     * @return {gmfx.AuthenticationDefaultResponse} Response.\n     */\n    const successFn = function(resp) {\n      const respData = /** @type gmfx.AuthenticationDefaultResponse} */ (\n        resp.data);\n      return respData;\n    }.bind(this);\n\n    return this.$http_.post(url, $.param({'login': login}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n    }).then(successFn);\n  }\n\n  /**\n   * @return {?gmfx.AuthenticationFunctionalities} The role functionalities.\n   */\n  getFunctionalities() {\n    return this.user_.functionalities;\n  }\n\n  /**\n   * @return {number|null} The role ID.\n   */\n  getRoleId() {\n    return this.user_.role_id;\n  }\n\n  /**\n   * @param {boolean} checkingLoginStatus Checking the login status?\n   * @param {angular.$http.Response} resp Ajax response.\n   * @return {angular.$http.Response} Response.\n   * @private\n   */\n  handleLogin_(checkingLoginStatus, resp) {\n    const respData = /** @type {gmfx.AuthenticationLoginResponse} */ (resp.data);\n    this.setUser_(respData, !checkingLoginStatus);\n    if (checkingLoginStatus) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('ready', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n    return resp;\n  }\n\n  /**\n   * @param {gmfx.AuthenticationLoginResponse} respData Response.\n   * @param {boolean} emitEvent Emit a login event?\n   * @private\n   */\n  setUser_(respData, emitEvent) {\n    for (const key in respData) {\n      this.user_[key] = respData[key];\n    }\n    if (emitEvent && respData.username !== undefined) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('login', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @private\n   * @param {boolean} noReload Don't request a new user object from\n   * the back-end after logging out, defaults to false.\n   */\n  resetUser_(noReload) {\n    noReload = noReload || false;\n    for (const key in this.user_) {\n      this.user_[key] = null;\n    }\n    /** @type {gmfx.AuthenticationEvent} */\n    const event = new ngeoCustomEvent('logout', {user: this.user_});\n    this.dispatchEvent(event);\n    if (!noReload) {\n      this.load_();\n    }\n  }\n};\n\n/**\n * @enum {string}\n */\nexports.RouteSuffix = {\n  CHANGE_PASSWORD: 'loginchange',\n  IS_LOGGED_IN: 'loginuser',\n  LOGIN: 'login',\n  LOGOUT: 'logout',\n  RESET_PASSWORD: 'loginresetpassword'\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfAuthenticationService', []);\nexports.module.service('gmfAuthenticationService', exports);\n\nexports.module.value('gmfUser', {\n  'functionalities': null,\n  'is_password_changed': null,\n  'role_id': null,\n  'role_name': null,\n  'username': null\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.Time\n */\n/**\n * ngeo - Time service\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoTime\n */\nconst exports = function() {};\n\n/**\n * @param {number|string|null} value The value\n * @param {Date} defaultValue The default value\n * @return {Date} the date\n */\nexports.prototype.createDate = function(value, defaultValue = null) {\n  return value !== null ? new Date(value) : defaultValue;\n};\n\n/**\n * @param {Date} date The date\n * @param {number|null=} defaultValue The default value\n * @return {number|null} the time\n */\nexports.prototype.getTime = function(date, defaultValue = null) {\n  return date ? date.getTime() : defaultValue;\n};\n\n/**\n * Get options regarding the time property of a node;\n *\n * @param {ngeox.TimeProperty} time the time property of a node\n * @return {{\n *  minDate : number,\n *  maxDate : number,\n *  values : (Array<number>|number)\n * }} - Configuration for the UI components\n * @export\n */\nexports.prototype.getOptions = function(time) {\n\n  const minDate = this.createDate(time.minValue);\n  const maxDate = this.createDate(time.maxValue);\n\n  const minDefaultDate = this.createDate(time.minDefValue, minDate);\n  const maxDefaultDate = this.createDate(time.maxDefValue, maxDate);\n\n  const defaultValues = (time.mode === 'range') ?\n    [this.getTime(minDefaultDate), this.getTime(maxDefaultDate)] :\n    this.getTime(minDefaultDate);\n\n  return {\n    minDate: this.getTime(minDate),\n    maxDate: this.getTime(maxDate),\n    values: defaultValues\n  };\n};\n\n\n/**\n * Time.prototype.getUTCDate - Get UTC date from a local date object\n *\n * @param  {Object} localDate loacl date object in\n * @return {Object} UTC date\n * @export\n */\nexports.prototype.getUTCDate = function(localDate) {\n  return new Date(\n    localDate.getUTCFullYear(),\n    localDate.getUTCMonth(),\n    localDate.getUTCDate());\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoTime', []);\nexports.module.service('ngeoTime', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.DrawAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionPointer, {handleEvent as pointerHandleEvent} from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultDrawStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return pointerHandleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  /** @type {ngeox.DrawEvent} */\n  const evt = new ngeoCustomEvent('drawstart', {feature: this.sketchFeature_});\n  this.dispatchEvent(evt);\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  /** @type {ngeox.DrawEvent} */\n  const event = new ngeoCustomEvent('drawend', {feature: this.sketchFeature_});\n  this.dispatchEvent(event);\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olProjProjection from 'ol/proj/Projection.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ngeox.MeasureEvent\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, options = /** @type {ngeox.interaction.MeasureOptions} */({})) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), olProjProjection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.message.popupComponent\n */\n\nimport 'angular-sanitize';\n\n\nconst exports = angular.module('ngeoPopup', [\n  'ngSanitize',\n]);\n\n\nexports.value('ngeoPopupTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoPopupTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/message/popupcomponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/message/popupcomponent', require('./popupcomponent.html'));\n});\n\n\n/**\n * Provides a directive used to show a popup over the page with\n * a title and content.\n *\n *\n * Things to know about this directive:\n *\n * - This directive is intended to be used along with the popup service.\n *\n * - By default the directive uses \"popup.html\" as its templateUrl. This can be\n *   changed by redefining the \"ngeoPopupTemplateUrl\" value.\n *\n * - The directive doesn't create any scope but relies on its parent scope.\n *   Properties like 'content', 'title' or 'open' come from the parent scope.\n *\n * @private\n * @param {string} ngeoPopupTemplateUrl URL to popup template.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoPopup\n */\nexports.directive_ = function(ngeoPopupTemplateUrl) {\n  return {\n    restrict: 'A',\n    templateUrl: ngeoPopupTemplateUrl,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      element.addClass('popover');\n\n      /**\n       * @param {jQuery.Event} evt Event.\n       */\n      scope.close = function(evt) {\n        if (evt) {\n          evt.stopPropagation();\n          evt.preventDefault();\n        }\n        element.addClass('hidden');\n      };\n\n      // Watch the open property\n      scope.$watch('open', (newVal, oldVal) => {\n        element.css('display', newVal ? 'block' : 'none');\n      });\n    }\n  };\n};\n\nexports.directive('ngeoPopup', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Popup\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * This goog.require is needed because of 'ngeo-popup' used in\n * the template.\n * @suppress {extraRequire}\n */\nimport ngeoMessagePopupComponent from 'ngeo/message/popupComponent.js';\n\n/**\n * Provides a factory to create a popup in the page.\n * The factory returns a ngeo.message.Popup object.\n *\n * Example:\n *\n *     let popup = ngeoCreatePopup();\n *     popup.setTitle(\"A title\");\n *     popup.setContent(\"Some content\");\n *     popup.setOpen(true);\n *\n * @constructor\n * @struct\n * @param {angular.$compile} $compile The compile provider.\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoCreatePopup\n */\nconst exports = function($compile, $rootScope, $sce, $timeout) {\n\n  /**\n   * The scope the compiled element is link to.\n   * @type {angular.Scope}\n   * @export\n   */\n  this.scope = $rootScope.$new(true);\n\n  // manage the auto destruction of the popup\n  this.scope.$watch(\n    () => this.scope['open'],\n    (open) => {\n      if (!open && this.autoDestroy_) {\n        this.timeout_(() => {\n          this.destroy();\n        });\n      }\n    }\n  );\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * The element.\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = angular.element('<div ngeo-popup></div>');\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoDestroy_ = false;\n\n\n  // Compile the element, link it to the scope and add it to the document.\n  $compile(this.element_)(this.scope);\n  angular.element(document.body).append(this.element_);\n};\n\n\n/**\n * Get the current popup state.\n * @return {boolean} `true` if the popup is currently, otherwise `false`.\n * @export\n */\nexports.prototype.getOpen = function() {\n  return this.scope['open'];\n};\n\n\n/**\n * Show/hide the popup.\n * @param {boolean} open `true` to show the popup, `false` to hide it.\n * @export\n */\nexports.prototype.setOpen = function(open) {\n  this.scope['open'] = open;\n};\n\n\n/**\n * Destroy the popup.\n * @export\n */\nexports.prototype.destroy = function() {\n  this.scope.$destroy();\n  this.element_.remove();\n};\n\n\n/**\n * Set the popup's title.\n * @param {string} title The title.\n * @export\n */\nexports.prototype.setTitle = function(title) {\n  const trustedTitle = this.sce_.trustAsHtml(title);\n  this.scope['title'] = trustedTitle;\n};\n\n\n/**\n * Set the popup's content.\n * Note: the type of the `content` param is `*` instead of `string`, this\n * is because the content may be trusted using `$sce.trustAsHtml`.\n * @param {*} content The content.\n * @param {boolean=} opt_trusted Whether the content can be trusted.\n *     Default is false.\n * @export\n */\nexports.prototype.setContent = function(content, opt_trusted) {\n  this.scope['content'] = opt_trusted ? this.sce_.trustAsHtml(/** @type {string} */ (content)) : content;\n};\n\n\n/**\n * Set the popup's content with an iframe using the given url.\n * @param {string} url The url of the page.\n * @export\n */\nexports.prototype.setUrl = function(url) {\n  const content = this.sce_.trustAsHtml(\n    `<iframe src=\"${url}\" width=\"100%\" height=\"100%\"></iframe>`\n  );\n  this.setContent(content);\n};\n\n\n/**\n * Set the popup's width.\n * @param {string} width Width the popup should have.\n * @export\n */\nexports.prototype.setWidth = function(width) {\n  this.element_.width(width);\n};\n\n\n/**\n * Set the popup's height.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setHeight = function(height) {\n  this.element_.height(height);\n};\n\n\n/**\n * Set the popup's width and height.\n * @param {string} width Width the popup should have.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setSize = function(width, height) {\n  this.setWidth(width);\n  this.setHeight(height);\n};\n\n\n/**\n * Set the popup's autoDestroy property.\n * @param {boolean} autoDestroy Whether to automatically destroy the popup when\n *     being closed or not.\n * @export\n */\nexports.prototype.setAutoDestroy = function(autoDestroy) {\n  this.autoDestroy_ = autoDestroy;\n};\n\n\n/**\n * Add an extra CSS class name to the popup.\n * @param {string} cls Class name to add to the popup element.\n * @export\n */\nexports.prototype.addClass = function(cls) {\n  this.element_.addClass(cls);\n};\n\n\n/**\n * Open a popup with the given properties.\n * @param {ngeox.PopupOptions} options Options.\n * @export\n */\nexports.prototype.open = function(options) {\n\n  if (options.url) {\n    this.setUrl(options.url);\n  } else if (options.content) {\n    this.setContent(options.content);\n  } else {\n    googAsserts.fail('ngeo.message.Popup options requirest \"url\" or \"content\".');\n  }\n\n  if (options.autoDestroy !== undefined) {\n    this.setAutoDestroy(options.autoDestroy);\n  }\n\n  if (options.cls !== undefined) {\n    this.addClass(options.cls);\n  }\n\n  if (options.height !== undefined) {\n    this.setHeight(options.height);\n  }\n\n  if (options.title !== undefined) {\n    this.setTitle(options.title);\n  }\n\n  if (options.width !== undefined) {\n    this.setWidth(options.width);\n  }\n\n  this.setOpen(true);\n};\n\n\n/**\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.Scope} $rootScope Angular rootScope service.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.PopupFactory} The function to create a popup.\n * @ngInject\n */\nexports.Factory = function($compile, $rootScope, $sce, $timeout) {\n  return (\n    /**\n     * @return {!ngeo.message.Popup} The popup instance.\n     */\n    function() {\n      return new exports($compile, $rootScope, $sce, $timeout);\n    }\n  );\n};\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoCreatePopup', [\n  ngeoMessagePopupComponent.name,\n]);\nexports.module.factory('ngeoCreatePopup', exports.Factory);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach((feature) => {\n      this.addFeature(feature);\n    });\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.XSDAttribute\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttribute from 'ngeo/format/Attribute.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\n\n/**\n * @classdesc\n * Reads attributes that are defined in XSD format and return them as a list.\n *\n * @constructor\n * @struct\n * @extends {ol.format.XML}\n */\nconst exports = function() {\n  olFormatXML.call(this);\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Array.<ngeox.Attribute>} The parsed result.\n * @override\n */\nexports.prototype.read = function(source) {\n  return (\n    /** @type {Array.<ngeox.Attribute>} */ olFormatXML.prototype.read.call(this, source)\n  );\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromDocument = function(doc) {\n  googAsserts.assert(doc.nodeType == Node.DOCUMENT_NODE,\n    'doc.nodeType should be DOCUMENT');\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromNode = function(node) {\n  googAsserts.assert(node.nodeType == Node.ELEMENT_NODE,\n    'node.nodeType should be ELEMENT');\n  googAsserts.assert(node.localName == 'schema',\n    'localName should be schema');\n\n  let elements = node.getElementsByTagName('element');\n  if (!elements.length) {\n    elements = node.getElementsByTagName('xsd:element');\n  }\n  const attributes = [];\n\n  let attribute;\n  for (let i = 0, ii = elements.length; i < ii; i++) {\n    attribute = this.readFromElementNode_(elements[i]);\n    if (attribute) {\n      attributes.push(attribute);\n    }\n  }\n\n  return attributes;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {?ngeox.Attribute} An attribute object.\n * @private\n */\nexports.prototype.readFromElementNode_ = function(node) {\n\n  const name = node.getAttribute('name');\n  googAsserts.assertString(name, 'name should be defined in element node.');\n\n  const alias = node.getAttribute('alias');\n  const nillable = node.getAttribute('nillable');\n  const required = !(nillable === true || nillable === 'true');\n\n  const attribute = {\n    name,\n    alias,\n    required\n  };\n\n  const type = node.getAttribute('type');\n  if (type) {\n    if (!ngeoFormatAttribute.setGeometryType(attribute, type)) {\n      this.setAttributeByXsdType_(attribute, type);\n    }\n  } else {\n\n    // Attribute has no type defined on 'element' node.  Try:\n\n    // (1) Enumerations\n    let enumerations = node.getElementsByTagName('enumeration');\n    if (!enumerations.length) {\n      enumerations = node.getElementsByTagName('xsd:enumeration');\n    }\n    if (enumerations.length) {\n      attribute.type = ngeoFormatAttributeType.SELECT;\n      const choices = [];\n      for (let i = 0, ii = enumerations.length; i < ii; i++) {\n        choices.push(enumerations[i].getAttribute('value'));\n      }\n      attribute.choices = choices;\n    } else {\n      // (2) Other types with restrictions\n      let restrictions = node.getElementsByTagName('restriction');\n      if (!restrictions.length) {\n        restrictions = node.getElementsByTagName('xsd:restriction');\n      }\n      if (restrictions.length && restrictions[0]) {\n        const restrictionNode = restrictions[0];\n        this.setAttributeByXsdType_(\n          attribute,\n          restrictionNode.getAttribute('base')\n        );\n        // MaxLength\n        let maxLengths = node.getElementsByTagName('maxLength');\n        if (!maxLengths.length) {\n          maxLengths = node.getElementsByTagName('xsd:maxLength');\n        }\n        if (maxLengths.length && maxLengths[0]) {\n          attribute.maxLength = Number(maxLengths[0].getAttribute('value'));\n        }\n      }\n    }\n  }\n\n  if (!attribute.type) {\n    return null;\n  }\n\n  googAsserts.assert(attribute.type);\n\n  return attribute;\n};\n\n\n/**\n * Set the `type` and `numType` properties of an attribute depending on the\n * given xsdType.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type The xsd type.\n * @private\n */\nexports.prototype.setAttributeByXsdType_ = function(\n  attribute, type\n) {\n  if (type === 'xsd:boolean') {\n    attribute.type = ngeoFormatAttributeType.BOOLEAN;\n  } else if (type === 'xsd:date') {\n    attribute.type = ngeoFormatAttributeType.DATE;\n  } else if (type === 'xsd:dateTime') {\n    attribute.type = ngeoFormatAttributeType.DATETIME;\n  } else if (type === 'xsd:time') {\n    attribute.type = ngeoFormatAttributeType.TIME;\n  } else if (type === 'xsd:decimal' || type === 'xsd:double') {\n    attribute.type = ngeoFormatAttributeType.NUMBER;\n    attribute.numType = exports.NumberType.FLOAT;\n  } else if (type === 'xsd:integer') {\n    attribute.type = ngeoFormatAttributeType.NUMBER;\n    attribute.numType = exports.NumberType.INTEGER;\n  } else if (type === 'xsd:string') {\n    attribute.type = ngeoFormatAttributeType.TEXT;\n  }\n};\n\n\n/**\n * Returns the first geometry attribute among a given list of attributes.\n * @param {Array.<ngeox.Attribute>} attributes The list of attributes.\n * @return {?ngeox.Attribute} A geometry attribute object.\n */\nexports.getGeometryAttribute = function(attributes) {\n  let geomAttribute = null;\n  for (let i = 0, ii = attributes.length; i < ii; i++) {\n    if (attributes[i].type === ngeoFormatAttributeType.GEOMETRY) {\n      geomAttribute = attributes[i];\n      break;\n    }\n  }\n  return geomAttribute;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.NumberType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  FLOAT: 'float',\n  /**\n   * @type {string}\n   * @export\n   */\n  INTEGER: 'integer'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.WFSAttribute\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttribute from 'ngeo/format/Attribute.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\n\nconst exports = class {\n\n\n  /**\n   * A format that reads the complexType from a WFS DescribeFeatureType\n   * response for a single set of attributes and return an array of\n   * `ngeox.Attribute`.\n   */\n\n\n  /**\n   * @param {Array.<Object>} complexTypeElements Complex type element\n   * @return {Array.<ngeox.Attribute>} Attributes\n   */\n  read(complexTypeElements) {\n    return complexTypeElements.map(this.readFromComplexTypeElement_);\n  }\n\n\n  /**\n   * @param {Object} object Complex type element\n   * @return {ngeox.Attribute} Attribute\n   * @private\n   */\n  readFromComplexTypeElement_(object) {\n\n    const name = googAsserts.assertString(object['name']);\n    const alias = 'alias' in object ?\n      googAsserts.assertString(object['alias']) : null;\n    const required = object['minOccurs'] != '0';\n\n    const attribute = {\n      name,\n      alias,\n      required\n    };\n\n    const type = googAsserts.assertString(object['type']);\n\n    if (!ngeoFormatAttribute.setGeometryType(attribute, type)) {\n      if (type === 'gml:TimeInstantType' || type === 'dateTime') {\n        attribute.type = ngeoFormatAttributeType.DATETIME;\n      } else if (type === 'date') {\n        attribute.type = ngeoFormatAttributeType.DATE;\n      } else if (type === 'time') {\n        attribute.type = ngeoFormatAttributeType.TIME;\n      } else if (type === 'decimal' || type === 'double') {\n        attribute.type = ngeoFormatAttributeType.NUMBER;\n        attribute.numType = ngeoFormatXSDAttribute.NumberType.FLOAT;\n      } else if (type === 'integer' || type === 'long') {\n        attribute.type = ngeoFormatAttributeType.NUMBER;\n        attribute.numType = ngeoFormatXSDAttribute.NumberType.INTEGER;\n      } else if (type === 'boolean') {\n        attribute.type = ngeoFormatAttributeType.BOOLEAN;\n      } else {\n        attribute.type = ngeoFormatAttributeType.TEXT;\n      }\n    }\n\n    return attribute;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.Helper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoFormatWFSAttribute from 'ngeo/format/WFSAttribute.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport * as olEvents from 'ol/events.js';\n\nconst exports = class {\n  /**\n   * A service that provides utility methods to manipulate or get data sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data source\n   *     service.\n   * @param {ngeo.query.Querent} ngeoQuerent Ngeo querent service.\n   * @ngdoc service\n   * @ngname ngeoDataSourcesHelper\n   * @ngInject\n   */\n  constructor($q, ngeoDataSources, ngeoQuerent) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Object.<number, ngeo.datasource.DataSource>}\n     * @private\n     */\n    this.cache_ = {};\n\n    // Events\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n    olEvents.listen(this.collection_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n  /**\n   * @return {ngeox.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?ngeo.datasource.DataSource} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return this.cache_[id] || null;\n  }\n\n  /**\n   * Get the attributes of a data source. If they are not set, they are obtained\n   * from the querent service using a WFS DescribeFeatureType request, then set\n   * in the data source.\n   *\n   * Please, note that in order to be dynamically set, the data source must\n   * only have 1 ogcLayer set and be queryable.\n   *\n   * @param {ngeo.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  getDataSourceAttributes(dataSource) {\n\n    const wfsDescribeFeatureTypeDefer = this.q_.defer();\n\n    if (dataSource.attributes) {\n      wfsDescribeFeatureTypeDefer.resolve(dataSource.attributes);\n    } else {\n      this.ngeoQuerent_.wfsDescribeFeatureType(\n        dataSource\n      ).then((featureType) => {\n        // We know, at this point, that there's only one definition that\n        // was returned.  Just to be sure, let's do a bunch of assertions.\n        const ogcLayerName = dataSource.getOGCLayerNames()[0];\n        googAsserts.assertString(\n          ogcLayerName, 'The data source should have only one ogcLayer.');\n        const element = featureType.element[0];\n        googAsserts.assert(element.name === ogcLayerName);\n        googAsserts.assert(\n          featureType.complexType[0].name === element.type);\n\n        const complexContent = featureType['complexType'][0]['complexContent'];\n        const attributes = new ngeoFormatWFSAttribute().read(complexContent);\n\n        // Set the attributes in the data source\n        dataSource.setAttributes(attributes);\n\n        wfsDescribeFeatureTypeDefer.resolve(attributes);\n      });\n    }\n\n    return wfsDescribeFeatureTypeDefer.promise;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. Add it\n   * to the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = googAsserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    this.cache_[dataSource.id] = dataSource;\n  }\n\n  /**\n   * Called when a data source is removed from the ngeo collection. Remove it\n   * from the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = googAsserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    delete this.cache_[dataSource.id];\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSourcesHelper', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoDataSourcesHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.WFSDescribeFeatureType\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\nimport * as olXml from 'ol/xml.js';\n\n/**\n * @classdesc\n * Format for reading WFS DescribeFeatureType data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst exports = function() {\n\n  olFormatXML.call(this);\n\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * Read a WFS DescribeFeatureType document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WFS DescribeFeatureType.\n * @api\n */\nexports.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromNode = function(node) {\n  let result = {};\n  result = olXml.pushParseAndPop(\n    result,\n    exports.PARSERS_,\n    node,\n    []\n  );\n  return result;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Attributes.\n */\nexports.readElement_ = function(node, objectStack) {\n  const attributes = {};\n  for (let i = 0, len = node.attributes.length; i < len; i++) {\n    const attribute = node.attributes.item(i);\n    attributes[attribute.name] = attribute.value;\n  }\n  if (objectStack.length === 1) {\n    // remove namespace from type\n    attributes['type'] = attributes['type'].split(':').pop();\n  }\n  return attributes;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexType_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const object = olXml.pushParseAndPop(\n    {'name': name},\n    exports.COMPLEX_TYPE_PARSERS_,\n    node, objectStack\n  );\n  // flatten\n  object['complexContent'] =\n    object['complexContent']['extension']['sequence']['element'];\n  return object;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexContent_ = function(\n  node, objectStack\n) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.COMPLEX_CONTENT_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readExtension_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.EXTENSION_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readSequence_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.SEQUENCE_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nexports.NAMESPACE_URIS_ = [\n  null,\n  'http://www.w3.org/2001/XMLSchema'\n];\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    ),\n    'complexType': olXml.makeObjectPropertyPusher(\n      exports.readComplexType_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_TYPE_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'complexContent': olXml.makeObjectPropertySetter(\n      exports.readComplexContent_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_CONTENT_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'extension': olXml.makeObjectPropertySetter(\n      exports.readExtension_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.EXTENSION_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'sequence': olXml.makeObjectPropertySetter(\n      exports.readSequence_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.SEQUENCE_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    )\n  }));\n\n\nexport default exports;\n","/**\n * @module ngeo.query.Querent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport ngeoWFSDescribeFeatureType from 'ngeo/WFSDescribeFeatureType.js';\nimport olFormatWMSCapabilities from 'ol/format/WMSCapabilities.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport * as olObj from 'ol/obj.js';\nimport * as olUri from 'ol/uri.js';\nimport * as olExtent from 'ol/extent.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Querent is a service that issues all sorts of queries using\n   * ngeo data sources. It does not store the result. Instead, it returns it\n   * using promises. Any component that inject this service can use it to\n   * make it issue its own queries and do whatever it wants with the result.\n   *\n   * It supports sending OGC requests and parse the response, such as:\n   * - WFS DescribeFeatureType\n   * - WFS GetFeature\n   * - WMS GetCapabilites\n   * - WMS GetFeatureInfo\n   * - WMTS GetCapabilities\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($http, $q, ngeoRuleHelper, ngeoWMSTime) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n\n    // === Other properties ===\n\n    /**\n     * Promises that can be resolved to cancel started requests.\n     * @type {!Array.<angular.$q.Deferred>}\n     * @private\n     */\n    this.requestCancelers_ = [];\n\n    /**\n     * Cache of promises for WMS GetCapabilities requests. They key is the\n     * online resource base url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmsGetCapabilitiesPromises_ = {};\n\n    /**\n     * Cache of promises for WMST GetCapabilities requests. They key is the\n     * url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmtsGetCapabilitiesPromises_ = {};\n  }\n\n\n  // === PUBLIC methods ===\n\n  /**\n   * Issue WMS GetFeatureInfo and/or WFS GetFeature requests using the given\n   * data sources, map and optional filters.\n   *\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  issue(options) {\n\n    const promises = [];\n    const map = options.map;\n\n    // (1) Cancel requests that are still running\n    this.cancelStillRunningRequests_();\n\n    // (2) Get queryable data sources\n    let queryableDataSources;\n    if (options.queryableDataSources) {\n      queryableDataSources = options.queryableDataSources;\n    } else {\n      const dataSources = options.dataSources;\n      googAsserts.assert(dataSources, 'DataSources should be set');\n      queryableDataSources = this.getQueryableDataSources(dataSources, map);\n    }\n\n    // (3) Combine data sources that support WFS and issue WFS queries.\n    //     The 'bbox' ('extent' option) is not required for WFS requests to\n    //     be issued.\n    const combinedWFSDataSources = this.getCombinableWFSDataSources_(\n      queryableDataSources.wfs);\n    promises.push(this.issueCombinedWFS_(combinedWFSDataSources, options));\n\n    // (4) Combine data sources that support WMS and issue WMS queries.\n    //     Only occurs if the `coordinate` option is set, because it's required\n    //     by WMS GetFeatureInfo requests.\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const combinedWMSDataSources = this.getCombinableWMSDataSources_(\n        queryableDataSources.wms);\n      promises.push(this.issueCombinedWMS_(combinedWMSDataSources, options));\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Browse a given list of data sources. Return 2 lists of data sources that\n   * are queryable, the first one being those that support WFS and the other\n   * WMS only. This means that WFS is always favored first, then WMS.\n   *\n   * The map view resolution determines if the inner ogc layers are in range.\n   *\n   * @param {!Array.<!ngeo.datasource.DataSource>} dataSources Data sources\n   * @param {ol.Map} map Map.\n   * @return {!ngeox.QueryableDataSources} Queryable data sources.\n   * @export\n   */\n  getQueryableDataSources(dataSources, map) {\n\n    const queryableDataSources = {\n      wfs: [],\n      wms: []\n    };\n    const resolution = googAsserts.assertNumber(map.getView().getResolution());\n\n    for (const dataSource of dataSources) {\n\n      // (1) Skip data source that can't be queried\n      if (!this.isDataSourceQueryable_(dataSource, resolution)) {\n        continue;\n      }\n\n      if (dataSource instanceof ngeoDatasourceOGC) {\n        // (2) Split data sources\n        if (dataSource.supportsWFS) {\n          queryableDataSources.wfs.push(dataSource);\n        } else {\n          queryableDataSources.wms.push(dataSource);\n        }\n      }\n    }\n\n    return queryableDataSources;\n  }\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  wfsDescribeFeatureType(dataSource) {\n\n    googAsserts.assert(\n      dataSource.supportsAttributes,\n      `The data source must support WFS, have a single OGCLayer that\n      is queryable in order to issue WFS DescribeFeatureType requests`\n    );\n\n    const ogcLayerNames = dataSource.getOGCLayerNames();\n\n    const url = olUri.appendParams(\n      googAsserts.assertString(dataSource.wfsUrl),\n      {\n        'REQUEST': 'DescribeFeatureType',\n        'SERVICE': 'WFS',\n        'VERSION': '2.0.0',\n        'TYPENAME': ogcLayerNames\n      }\n    );\n\n    return this.http_.get(url).then((response) => {\n      const format = new ngeoWFSDescribeFeatureType();\n      return format.read(response.data);\n    });\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMS layer capabilities\n   * @param {string} layerName Name of the WMS layer\n   * @return {?Object} Found WMS layer capability\n   * @export\n   */\n  wmsFindLayerCapability(layerCapabilities, layerName) {\n\n    let found = null;\n\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Name'] === layerName) {\n        found = layerCapability;\n        break;\n      } else if (layerCapability['Layer']) {\n        found = this.wmsFindLayerCapability(\n          layerCapability['Layer'], layerName);\n        if (found) {\n          break;\n        }\n      }\n    }\n\n    return found;\n  }\n\n  /**\n   * @param {string} baseUrl Base url of the WMS server.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmsGetCapabilities(baseUrl, opt_cache) {\n\n    const cache = opt_cache !== false;\n\n    const params = {\n      'REQUEST': 'GetCapabilities',\n      'SERVICE': 'WMS',\n      'VERSION': '1.3.0'\n    };\n\n    const url = olUri.appendParams(baseUrl, params);\n    let promise;\n\n    if (!cache || !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.wmsGetCapabilitiesPromises_[baseUrl];\n    }\n\n    googAsserts.assert(promise);\n\n    if (cache && !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      this.wmsGetCapabilitiesPromises_[baseUrl] = promise;\n    }\n\n    return promise;\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMTS layer capabilities\n   * @param {string} layerName Name of the WMTS layer, a.k.a. the identifier.\n   * @return {?Object} Found WTMS layer capability\n   * @export\n   */\n  wmtsFindLayerCapability(layerCapabilities, layerName) {\n    let found = null;\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Identifier'] === layerName) {\n        found = layerCapability;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @param {string} url Url of the WMTS server. Note that it must contain\n   *     all required arguments.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmtsGetCapabilities(url, opt_cache) {\n\n    const cache = opt_cache !== false;\n    let promise;\n\n    if (!cache || !this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMTSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.wmtsGetCapabilitiesPromises_[url];\n    }\n\n    googAsserts.assert(promise);\n\n    if (cache && !this.wmtsGetCapabilitiesPromises_[url]) {\n      this.wmtsGetCapabilitiesPromises_[url] = promise;\n    }\n\n    return promise;\n  }\n\n\n  // === PRIVATE methods ===\n\n  /**\n   * Handles the response of multiple promises that did either\n   * WMS GetFeatureInfo or WFS GetFeature requests, in which the result is\n   * a hash with key being the data source id and value the array of features.\n   *\n   * The response object itself is an array, one item being one result per\n   * promise. The idea is to return a single hash by combining the result\n   * objects.\n   *\n   * The keys are always unique, i.e. there can be multiple result objects for\n   * the same data source id.\n   *\n   * @param {!Array.<ngeox.QuerentResult>} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleCombinedQueryResult_(response) {\n    const combinedHash = {};\n    for (const hash of response) {\n      for (const dataSourceIdStr in hash) {\n        const dataSourceId = Number(dataSourceIdStr);\n        combinedHash[dataSourceId] = hash[dataSourceId];\n      }\n    }\n    return combinedHash;\n  }\n\n\n  /**\n   * Handles the result of a single WMS GetFeatureInfo or WFS GetFeature\n   * request. Read features from the response and return them.\n   *\n   * @param {!Array.<!ngeo.datasource.OGC>} dataSources List of\n   *     queryable data sources that were used to do the query.\n   * @param {number} limit The maximum number of features to get with the query.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {angular.$http.Response|number} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleQueryResult_(dataSources, limit, wfs, response) {\n    const hash = {};\n\n    for (const dataSource of dataSources) {\n      let features;\n      let tooManyFeatures;\n      let totalFeatureCount;\n\n      if (typeof response === 'number') {\n        features = [];\n        tooManyFeatures = true;\n        totalFeatureCount = response;\n      } else {\n        if (dataSource instanceof ngeoDatasourceOGC) {\n          features = this.readAndTypeFeatures_(dataSource, response.data, wfs);\n        } else {\n          features = [];\n        }\n      }\n      const dataSourceId = dataSource.id;\n      this.setUniqueIds_(features, dataSource.id);\n      hash[dataSourceId] = {\n        features,\n        limit,\n        tooManyFeatures,\n        totalFeatureCount\n      };\n    }\n\n    return hash;\n  }\n\n  /**\n   * Read and assign the type of the feature to each feature in the data.\n   * The type will be stocked in the properties of the features as\n   * \"ngeo_feature_type_\".\n   * @param {ngeo.datasource.OGC} dataSource used to read the features.\n   * @param {Document | Node | Object | string} data the response data.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @return {Array.<ol.Feature>} returned features with a type in each features.\n   * @private\n   */\n  readAndTypeFeatures_(dataSource, data, wfs) {\n    const features = [];\n    let readFeatures;\n    // Copy the types to be able to set it AND iterate on it.\n    const featureTypes = this.getSetOlFormatTypes_(dataSource, wfs).slice();\n    featureTypes.forEach((type) => {\n      // Assign temporarily a single feature type to read features separately.\n      this.getSetOlFormatTypes_(dataSource, wfs, [type]);\n      if (wfs) {\n        readFeatures = dataSource.wfsFormat.readFeatures(data);\n      } else {\n        readFeatures = dataSource.wmsFormat.readFeatures(data);\n      }\n      if (readFeatures.length > 0) {\n        readFeatures.forEach((feature) => {\n          feature.set('ngeo_feature_type_', type);\n          features.push(feature);\n        });\n      }\n    });\n    // Re-set the value to the datasource.xxxFormat to be able to re-use\n    // it later (in another query);\n    this.getSetOlFormatTypes_(dataSource, wfs, featureTypes);\n    return features;\n  }\n\n  /**\n   * Return the types defined in the format of the datasource. Can set the\n   * types if one is given.\n   * @param {ngeo.datasource.OGC} dataSource that contains the format object.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {Array.<string>=} opt_types An array of type if you want to set the\n   *     type of the format object.\n   * @return {Array.<string>} The types defined in the format.\n   * @private\n   */\n  getSetOlFormatTypes_(dataSource, wfs, opt_types) {\n    let types;\n    if (wfs) {\n      if (opt_types) {\n        dataSource.wfsFormat.setFeatureType(opt_types);\n      }\n      types = dataSource.wfsFormat.getFeatureType();\n    } else {\n      if (opt_types) {\n        dataSource.wmsFormat.setLayers(opt_types);\n      }\n      types = dataSource.wmsFormat.getLayers();\n    }\n    if (!types) {\n      return [];\n    }\n    return (Array.isArray(types)) ? types : [types];\n  }\n\n  /**\n   * Issue WFS GetFeature requests using the given combined data sources, map\n   * and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWFS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const maxFeatures = googAsserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = googAsserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const srsName = projection.getCode();\n    const wfsCount = options.wfsCount === true;\n\n    // (1) Extent (bbox), which is optional, i.e. its value can stay undefined\n    let bbox;\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const tolerancePx = options.tolerancePx;\n      googAsserts.assert(tolerancePx);\n      const tolerance = tolerancePx * resolution;\n      bbox = olExtent.buffer(\n        olExtent.createOrUpdateFromCoordinate(coordinate),\n        tolerance\n      );\n    } else {\n      bbox = options.extent;\n    }\n\n    // (2) Launch one request per combinaison of data sources\n    const wfsFormat = new olFormatWFS();\n    const xmlSerializer = new XMLSerializer();\n    for (const dataSources of combinedDataSources) {\n\n      let getFeatureCommonOptions;\n      let featureNS;\n      let featureTypes = [];\n      let url;\n      const params = {};\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!getFeatureCommonOptions) {\n          featureNS = dataSource.wfsFeatureNS;\n          const featurePrefix = dataSource.wfsFeaturePrefix;\n          const geometryName = dataSource.geometryName;\n          const outputFormat = dataSource.wfsOutputFormat;\n\n          getFeatureCommonOptions = {\n            bbox,\n            featureNS,\n            featurePrefix,\n            geometryName,\n            outputFormat,\n            srsName\n          };\n\n          url = dataSource.wfsUrl;\n\n          // All data sources combined share the same active dimensions\n          olObj.assign(params, dataSource.activeDimensions);\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        featureTypes = featureTypes.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Add filter, if any. If the case, then only one data source\n        //     is expected to be used for this request.\n        let filter;\n        if (options.filter) {\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            filter: options.filter,\n            incTime: true\n          });\n        } else if ((dataSource.filterRules && dataSource.filterRules.length) ||\n            dataSource.timeRangeValue) {\n\n          googAsserts.assert(\n            dataSources.length === 1,\n            `A data source having filterRules or timeRangeValue should issue\n            a single query, alone.`\n          );\n\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            incTime: true,\n            srsName: srsName\n          });\n        }\n\n        if (filter) {\n          getFeatureCommonOptions['filter'] = filter;\n        }\n      }\n\n      googAsserts.assert(getFeatureCommonOptions);\n      getFeatureCommonOptions.featureTypes = featureTypes;\n      googAsserts.assert(url);\n\n      // (4) Build query then launch\n      //\n      //     If we require to do a WFS GetFeature request with\n      //     `resultType: 'hits'` first, do so. In that case, if there would\n      //     be too many features returned, no GetFeature is done thereafter\n      //     and the data sources will return empty arrays in the returned\n      //     response.\n      //\n      //     If we do not need to count features first, then proceed with\n      //     an normal WFS GetFeature request.\n      const getFeatureDefer = this.q_.defer();\n      promises.push(\n        getFeatureDefer.promise.then(\n          this.handleQueryResult_.bind(this, dataSources, maxFeatures, true)\n        )\n      );\n\n      // (4.1) Count, if required\n      let countPromise;\n      if (wfsCount) {\n        const getCountOptions = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n          olObj.assign(\n            {\n              resultType: 'hits'\n            },\n            getFeatureCommonOptions\n          )\n        );\n        const featureCountXml = wfsFormat.writeGetFeature(getCountOptions);\n        const featureCountRequest = xmlSerializer.serializeToString(\n          featureCountXml);\n        const canceler = this.registerCanceler_();\n        countPromise = this.http_.post(\n          url,\n          featureCountRequest,\n          {\n            params: params,\n            headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n            timeout: canceler.promise\n          }\n        ).then(((response) => {\n          const meta = dataSources[0].wfsFormat.readFeatureCollectionMetadata(\n            response.data\n          );\n          return meta['numberOfFeatures'];\n        }).bind(this));\n      } else {\n        countPromise = this.q_.resolve();\n      }\n\n      // (4.2) After count, do GetFeature (if required)\n      countPromise.then((numberOfFeatures) => {\n        // `true` is returned if a count request was made AND there would\n        // be too many features.\n        if (numberOfFeatures === undefined || numberOfFeatures < maxFeatures) {\n\n          const getFeatureOptions = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n            olObj.assign(\n              {\n                maxFeatures\n              },\n              getFeatureCommonOptions\n            )\n          );\n          const featureRequestXml = wfsFormat.writeGetFeature(\n            getFeatureOptions);\n          const featureRequest = xmlSerializer.serializeToString(\n            featureRequestXml);\n          googAsserts.assertString(url);\n          const canceler = this.registerCanceler_();\n          this.http_.post(\n            url,\n            featureRequest,\n            {\n              params: params,\n              headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n              timeout: canceler.promise\n            }\n          ).then((response) => {\n            getFeatureDefer.resolve(response);\n          });\n\n        } else {\n          getFeatureDefer.resolve(numberOfFeatures);\n        }\n      });\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Issue WMS GetFeatureInfo requests using the given combined data sources,\n   * map and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWMS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const FEATURE_COUNT = googAsserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = googAsserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const projCode = projection.getCode();\n\n    // (1) Coordinate, which is required to issue WMS GetFeatureInfo requests\n    const coordinate = options.coordinate;\n    googAsserts.assert(coordinate);\n\n    // (2) Launch one request per combinaison of data sources\n    for (const dataSources of combinedDataSources) {\n\n      let url;\n      let LAYERS = [];\n      let INFO_FORMAT;\n      let activeDimensionsSet = false;\n      const params = {};\n      let filterString = null;\n      let filtrableLayerName = null;\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!INFO_FORMAT) {\n          INFO_FORMAT = dataSource.wmsInfoFormat;\n          url = dataSource.wmsUrl;\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        LAYERS = LAYERS.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Manage active dimensions, which are added directly to the\n        //     query parameters. Note that this occurs only ONCE, i.e.\n        //     for the first data source, because all data sources here have\n        //     been combined together, therefore they share the same active\n        //     dimensions.\n        if (!activeDimensionsSet) {\n          olObj.assign(params, dataSource.activeDimensions);\n          activeDimensionsSet = true;\n        }\n\n        // (d) Add filter, if any. If there is a filter on the data source,\n        //     then it is expected that one request will be sent for this\n        //     data source only.\n        if (dataSource.filterRules && dataSource.filterRules.length) {\n          googAsserts.assert(dataSources.length === 1);\n          filtrableLayerName = dataSource.getFiltrableOGCLayerName();\n          filterString = this.ngeoRuleHelper_.createFilterString({\n            dataSource: dataSource,\n            srsName: projCode\n          });\n        }\n\n        // (e) Add TIME parameter if the data source has a time range value.\n        //     If that's the case, then it is expected that one request will be\n        //     sent for this data source only.\n        if (dataSource.timeRangeValue !== null && dataSource.timeProperty) {\n          googAsserts.assert(dataSources.length === 1);\n          params['TIME'] = this.ngeoWMSTime_.formatWMSTimeParam(\n            dataSource.timeProperty,\n            dataSource.timeRangeValue\n          );\n        }\n      }\n\n      params['LAYERS'] = LAYERS;\n      params['QUERY_LAYERS'] = LAYERS;\n\n      // Manage 'FILTER' parameter\n      if (filterString && filtrableLayerName) {\n        let filterParamValue = null;\n        if (LAYERS.length === 1) {\n          // When there's only one layer in the `LAYERS` parameters, then\n          // the filter string is given as-is.\n          filterParamValue = filterString;\n        } else {\n          // When there's more then one layer, then each filter must be wrapped\n          // between parenthesis and the order must also match the `LAYERS`\n          // parameter as well.\n          const filterParamValues = [];\n          for (let i = 0, ii = LAYERS.length; i < ii; i++) {\n            if (LAYERS[i] === filtrableLayerName) {\n              filterParamValues.push(`(${filterString})`);\n            } else {\n              filterParamValues.push('()');\n            }\n          }\n          filterParamValue = filterParamValues.join('');\n        }\n        params['FILTER'] = filterParamValue;\n      }\n\n      googAsserts.assert(url);\n      const wmsSource = new olSourceImageWMS({\n        params,\n        url\n      });\n\n      // (4) Build query url, then launch\n      const wmsGetFeatureInfoUrl = googAsserts.assertString(\n        wmsSource.getGetFeatureInfoUrl(\n          coordinate, resolution, projCode, {\n            // Without extern, quoting is necessary\n            'FEATURE_COUNT': FEATURE_COUNT,\n            'INFO_FORMAT': INFO_FORMAT\n          }\n        )\n      );\n\n      const canceler = this.registerCanceler_();\n      promises.push(\n        this.http_.get(\n          wmsGetFeatureInfoUrl,\n          {\n            timeout: canceler.promise\n          }\n        ).then(\n          this.handleQueryResult_.bind(this, dataSources, FEATURE_COUNT, false)\n        )\n      );\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WFS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWFSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWFS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWFS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WMS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWMSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWMS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWMS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * Checks if a data source can be queried, which requires it to be:\n   * - visible\n   * - in range\n   * - queryable (using the native getter)\n   * - have at least one OGC layer in range of current map view resolution.\n   *\n   * @param {ngeo.datasource.DataSource} ds Data source\n   * @param {number} res Resolution.\n   * @return {boolean} Whether the data source is queryable\n   * @private\n   */\n  isDataSourceQueryable_(ds, res) {\n    let queryable = ds.visible && ds.inRange && ds.queryable;\n    if (queryable && ds instanceof ngeoDatasourceOGC) {\n      const ogcDS = /** @type {!ngeo.datasource.OGC} */ (ds);\n      queryable = ogcDS.isAnyOGCLayerInRange(res, true);\n    }\n    return queryable;\n  }\n\n  /**\n   * Make sure that feature ids are unique, because the same features might\n   * be returned for different layers.\n   * @param {Array.<ol.Feature>} features Features\n   * @param {number} dataSourceId Data source id.\n   * @private\n   */\n  setUniqueIds_(features, dataSourceId) {\n    features.forEach((feature) => {\n      if (feature.getId() !== undefined) {\n        const id = `${dataSourceId}_${feature.getId()}`;\n        feature.setId(id);\n      }\n    });\n  }\n\n  /**\n   * @return {angular.$q.Deferred} A deferred that can be resolved to cancel a\n   *    HTTP request.\n   * @private\n   */\n  registerCanceler_() {\n    const canceler = this.q_.defer();\n    this.requestCancelers_.push(canceler);\n    return canceler;\n  }\n\n  /**\n   * @private\n   */\n  cancelStillRunningRequests_() {\n    for (const canceler of this.requestCancelers_) {\n      canceler.resolve();\n    }\n    this.requestCancelers_.length = 0;\n  }\n};\n\n\n/**\n * @typedef {!Array.<!Array.<!ngeo.datasource.OGC>>}\n */\nexports.CombinedDataSources;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoQuerent', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoQuerent', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.Snapping\n */\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Translate\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionTranslate from 'ol/interaction/Translate.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * An extension of the OpenLayers Translate interaction that adds the following\n * features to it:\n *\n * - show a small arrow icon in the middle of the features allowing a visual\n *   aspect that tells the user \"this feature can be moved\"\n * - pressing the ESC key automatically deactivate the interaction.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Translate}\n * @param {ngeox.interaction.TranslateOptions} options Options.\n */\nconst exports = function(options) {\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {!Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = {};\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.myFeatures_ = options.features !== undefined ? options.features : null;\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.vectorSource_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: this.vectorSource_,\n    style: options.style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionTranslate.call(\n    this, /** @type {olx.interaction.TranslateOptions} */ (options));\n};\n\nolBase.inherits(exports, olInteractionTranslate);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionTranslate.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.vectorLayer_.setMap(null);\n  }\n\n  olInteractionTranslate.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.vectorLayer_.setMap(map);\n  }\n\n  this.setState_();\n};\n\n\n/**\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const features = this.myFeatures_;\n  const keys = this.listenerKeys_;\n\n  if (map && active && features) {\n    features.forEach(feature => this.addFeature_(feature));\n    keys.push(\n      olEvents.listen(features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(features, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n\n    if (map) {\n      const elem = map.getTargetElement();\n      elem.style.cursor = 'default';\n    }\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    features.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  this.featureListenerKeys_[uid] = olEvents.listen(\n    geometry,\n    'change',\n    this.handleGeometryChange_.bind(this, feature),\n    this\n  );\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.vectorSource_.addFeature(centerFeature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  if (this.featureListenerKeys_[uid]) {\n    olEvents.unlistenByKey(this.featureListenerKeys_[uid]);\n    delete this.featureListenerKeys_[uid];\n\n    this.vectorSource_.removeFeature(this.centerFeatures_[uid]);\n    delete this.centerFeatures_[uid];\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature being moved.\n * @param {ol.events.Event} evt Event.\n * @private\n */\nexports.prototype.handleGeometryChange_ = function(feature,\n  evt) {\n  const geometry = evt.target;\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const uid = olBase.getUid(feature);\n  this.centerFeatures_[uid].setGeometry(point);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.geom.Point} The center point of the geometry.\n * @private\n */\nexports.prototype.getGeometryCenterPoint_ = function(\n  geometry) {\n\n  let center;\n  let point;\n\n  if (geometry instanceof olGeomPolygon) {\n    point = geometry.getInteriorPoint();\n  } else if (geometry instanceof olGeomLineString) {\n    center = geometry.getCoordinateAt(0.5);\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  if (!point && center) {\n    point = new olGeomPoint(center);\n  }\n\n  googAsserts.assert(point, 'Point should be thruthy');\n\n  return point;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Rotate\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction to rotate features.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.coordinate_ = null;\n\n  /**\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.centerCoordinate_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionPointer.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n    this.features_.forEach(feature => this.addFeature_(feature));\n    this.listenerKeys_.push(\n      olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this)\n    );\n\n  } else {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n    this.features_.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  feature.set('angle', 0);\n\n  // Add the center icon to the overlay\n  const uid = olBase.getUid(feature);\n  const point = new olGeomPoint(this.getCenterCoordinate_(geometry));\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.overlay_.getSource().addFeature(centerFeature);\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.feature_ = null;\n  //this.overlay_.getSource().removeFeature(feature);\n\n  if (feature) {\n    const uid = olBase.getUid(feature);\n\n    if (this.centerFeatures_[uid]) {\n      this.overlay_.getSource().removeFeature(this.centerFeatures_[uid]);\n      delete this.centerFeatures_[uid];\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  let feature = map.forEachFeatureAtPixel(evt.pixel,\n    (feature, layer) => feature, undefined);\n\n  if (feature) {\n    let found = false;\n    this.features_.forEach((f) => {\n      if (olBase.getUid(f) == olBase.getUid(feature)) {\n        found = true;\n      }\n    });\n    if (!found) {\n      feature = null;\n    }\n  }\n\n  if (feature) {\n    this.coordinate_ = evt.coordinate;\n    this.feature_ = feature;\n    const geometry = (this.feature_.getGeometry());\n    if (geometry !== undefined) {\n      this.centerCoordinate_ = this.getCenterCoordinate_(geometry);\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.Coordinate} The center coordinate of the geometry.\n * @private\n */\nexports.prototype.getCenterCoordinate_ = function(\n  geometry) {\n\n  let center;\n\n  if (geometry instanceof olGeomLineString) {\n    center = geometry.getFlatMidpoint();\n  } else if (geometry instanceof olGeomPolygon) {\n    center = geometry.getFlatInteriorPoint();\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  return center;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (this.feature_.getGeometry());\n\n  const oldX = this.coordinate_[0];\n  const oldY = this.coordinate_[1];\n\n  const centerX = this.centerCoordinate_[0];\n  const centerY = this.centerCoordinate_[1];\n\n  const dx1 = oldX - centerX;\n  const dy1 = oldY - centerY;\n  const dx0 = evt.coordinate[0] - centerX;\n  const dy0 = evt.coordinate[1] - centerY;\n\n  this.coordinate_[0] = evt.coordinate[0];\n  this.coordinate_[1] = evt.coordinate[1];\n\n  const a0 = Math.atan2(dy0, dx0);\n  const a1 = Math.atan2(dy1, dx1);\n  const angle = a1 - a0;\n\n  geometry.rotate(-angle, [centerX, centerY]);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.RotateEvent} */\n    const event = new ngeoCustomEvent('rotateend', {feature: this.feature_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n    this.setActive(false);\n  }\n  return false;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.features\n */\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n","/**\n * @module ngeo.Menu\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olOverlay from 'ol/Overlay.js';\nimport olOverlayPositioning from 'ol/OverlayPositioning.js';\n\n/**\n * @classdesc\n * An OpenLayers overlay that shows a contextual menu with configurable actions\n * anchored from its top left to a specific location. An event is fired when\n * any of the action is clicked.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {ngeox.MenuOptions=} menuOptions Menu options.\n * @param {olx.OverlayOptions=} opt_overlayOptions Overlay options.\n */\nconst exports = function(menuOptions, opt_overlayOptions) {\n\n  const options = opt_overlayOptions !== undefined ? opt_overlayOptions : {};\n\n  options.positioning = olOverlayPositioning.TOP_LEFT;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.clickOutListenerKey_ = null;\n\n  const contentEl = $('<div/>', {\n    'class': 'panel panel-default'\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoClose_ = menuOptions.autoClose !== undefined ?\n    menuOptions.autoClose : true;\n\n  // titleEl\n  if (menuOptions.title) {\n    const headerEl = $('<div>', {\n      'class': 'panel-heading'\n    }).appendTo(contentEl);\n\n    $('<span>', {\n      text: menuOptions.title\n    }).appendTo(headerEl);\n  }\n\n  // actionsEl\n  const actionsEl = $('<div>', {\n    'class': 'list-group'\n  }).appendTo(contentEl);\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.actions_ = [];\n\n  menuOptions.actions.forEach((action) => {\n    this.actions_.push(\n      $('<button>', {\n        'class': 'list-group-item',\n        'data-name': action.name,\n        'text': [\n          ' ',\n          (action.label) !== undefined ? action.label : action.name\n        ].join('')\n      })\n        .appendTo(actionsEl)\n        .prepend($('<span>', {\n          'class': action.cls !== undefined ? action.cls : ''\n        }))\n    );\n  });\n\n  options.element = contentEl[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @param {ol.PluggableMap|undefined} map Map.\n * @export\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.actions_.forEach((action) => {\n      const data = action.data();\n      this.listenerKeys_.push(\n        olEvents.listen(\n          action[0],\n          'click',\n          this.handleActionClick_.bind(this, data.name)\n        )\n      );\n    });\n\n    // Autoclose the menu when clicking anywhere else than the menu\n    this.listenerKeys_.push(\n      olEvents.listen(\n        map,\n        'pointermove',\n        this.handleMapPointerMove_,\n        this\n      )\n    );\n  }\n\n};\n\n\n/**\n * Opens the menu at the desited coordinate. Also starts listening for the\n * clickout if autoClose is enabled.\n * @param {ol.Coordinate} coordinate Where to open the menu.\n * @export\n */\nexports.prototype.open = function(coordinate) {\n  this.setPosition(coordinate);\n  if (this.autoClose_) {\n    this.clickOutListenerKey_ = olEvents.listen(\n      document.documentElement,\n      'mousedown',\n      this.handleClickOut_,\n      this\n    );\n  }\n\n};\n\n\n/**\n * @export\n */\nexports.prototype.close = function() {\n  this.setPosition(undefined);\n\n  if (this.clickOutListenerKey_ !== null) {\n    olEvents.unlistenByKey(this.clickOutListenerKey_);\n  }\n};\n\n\n/**\n * @param {string} action The action name that was clicked.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleActionClick_ = function(action, evt) {\n\n  this.dispatchEvent(new ngeoCustomEvent('actionclick', {\n    action: action\n  }));\n\n  if (this.autoClose_) {\n    this.close();\n  }\n\n  evt.stopPropagation();\n};\n\n\n/**\n * Handles clicks out of the menu. If the menu is visible, close it.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleClickOut_ = function(evt) {\n  const element = this.getElement();\n  if (element && $(evt.target).closest(element).length === 0) {\n    this.close();\n  }\n};\n\n\n/**\n * When the mouse is hovering the menu, set the event coordinate and pixel\n * values to Infinity to do as if the mouse had been move out of range of the\n * map. This prevents behaviours such as vertex still appearing while mouse\n * hovering edges of features bound to an active modify control while the\n * cursor is on top of the menu.\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handleMapPointerMove_ = function(evt) {\n  const target = evt.originalEvent.target;\n  googAsserts.assertInstanceof(target, Element);\n\n  const element = this.getElement();\n  googAsserts.assertInstanceof(element, Element);\n\n  if (element.contains(target)) {\n    evt.coordinate = [Infinity, Infinity];\n    evt.pixel = [Infinity, Infinity];\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\n\n\nexport default exports;\n","/**\n * @module ngeo.download.service\n */\nimport ngeoUtils from 'ngeo/utils.js';\n\nimport {saveAs} from 'file-saver';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDownload', []);\n\n/**\n * A service to start a download for a file.\n *\n * @return {ngeox.Download} The download function.\n * @ngdoc service\n * @ngname ngeoDownload\n */\nexports.factory_ = function() {\n  /**\n   * @param {string} content The file content.\n   * @param {string} fileName The file name.\n   * @param {string=} opt_fileType The file type. If not given,\n   *    `text/plain;charset=utf-8` is used.\n   */\n  function download(content, fileName, opt_fileType) {\n    // Safari does not properly work with FileSaver. Using the the type 'text/plain'\n    // makes it a least possible to show the file content so that users can\n    // do a manual download with \"Save as\".\n    // See also: https://github.com/eligrey/FileSaver.js/issues/12\n    /** @type {string} */\n    const fileType = opt_fileType !== undefined && !ngeoUtils.isSafari() ?\n      opt_fileType : 'text/plain;charset=utf-8';\n\n    const blob = new Blob([content], {type: fileType});\n    saveAs(blob, fileName);\n  }\n\n  return download;\n};\n\nexports.factory('ngeoDownload', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.DataSourceBeingFiltered\n */\nconst exports = {};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourceBeingFiltered', []);\n// type gmfx.datasource.DataSourceBeingFiltered\nexports.module.value('gmfDataSourceBeingFiltered', {\n  dataSource: null\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.message.modalComponent\n */\nimport 'jquery-ui/ui/widgets/draggable.js';\nimport 'bootstrap/js/modal.js';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoModal', []);\n\n/**\n * Provides the \"ngeoModal\" component.\n *\n * This component shows a Bootstrap modal when the `ngModel` expression\n * evaluates to `true`, and it hides it when the `ngModel` expression\n * evaluates to `false`.\n *\n * The components also changes the `ngModel` value when the user manually\n * closes the modal.\n *\n * This component is based on Bootstrap's `modal` classes and associated\n * jQuery plugin.\n *\n *     <ngeo-modal ng-model=\"modalShown\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *         <h4 class=\"modal-title\">The Title</h4>\n *       </div>\n *       <div class=\"modal-body\">Some content</div>\n *     </ngeo-modal>\n *\n * Note: for z-indexing purpose, the modal DOM element is automatically moved\n * to document body element.\n *\n * See our live example: [../examples/modal.html](../examples/modal.html)\n *\n * @htmlAttribute {boolean} ngeo-modal-resizable Whether the modal can be\n *     resized or not. Defaults to `false`.\n * @htmlAttribute {boolean} ngeo-modal-closable Whether the modal can be\n *     closed by clicking outside it or by hiting the `escape` keyboard key. Defaults to `true`.\n * @ngdoc component\n * @ngname ngeoModal\n * @type {!angular.Component}\n */\nexports.component_ = {\n  template: `<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <ng-transclude></ng-transclude>\n      </div>\n    </div>\n  </div>`,\n  require: {\n    'ngModel': 'ngModel'\n  },\n  transclude: true,\n  controller: 'ngeoModalController',\n  bindings: {\n    'resizable': '<ngeoModalResizable',\n    'closable': '<ngeoModalClosable'\n  }\n};\n\nexports.component('ngeoModal', exports.component_);\n\nexports.Controller_ = class {\n  /**\n   * @ngInject\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!jQuery} $element Element.\n   */\n  constructor($scope, $element) {\n    /**\n     * @private\n     * @type {!jQuery}\n     */\n    this.$element_ = $element;\n\n    /**\n     * @private\n     * @type {!angular.Scope}\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @private\n     * @type {jQuery}\n     */\n    this.modal_;\n\n    /**\n     * @export\n     * @type {boolean}\n     */\n    this.closable;\n\n    /**\n     * @export\n     * @type {boolean}\n     */\n    this.resizable;\n\n    /**\n     * @export\n     * @type {angular.NgModelController|null}\n     */\n    this.ngModel;\n  }\n\n  $onInit() {\n    this.closable = this.closable !== false;\n\n    this.modal_ = this.$element_.children();\n\n    if (!this.closable) {\n      this.modal_.attr('data-keyboard', false);\n      this.modal_.attr('data-backdrop', 'static');\n    }\n\n    this.resizable = !!this.resizable;\n\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable();\n    if (this.resizable) {\n      dialog.resizable();\n    }\n\n    this.ngModel.$render = () => {\n      this.modal_.modal(this.ngModel.$viewValue ? 'show' : 'hide');\n    };\n\n    this.modal_.on('shown.bs.modal hidden.bs.modal', (e) => {\n      const type = e.type;\n      googAsserts.assert(type == 'shown' || type == 'hidden');\n      this.ngModel.$setViewValue(type == 'shown');\n    });\n  }\n\n  $onDestroy() {\n    // Force close the modal.\n    this.modal_.modal('hide');\n    this.modal_.modal('removeBackdrop');\n    // Destroy the children's plugins.\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable('destroy');\n    if (this.resizable) {\n      dialog.resizable('destroy');\n    }\n  }\n};\n\nexports.controller('ngeoModalController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Notification\n */\nimport 'bootstrap/js/alert.js';\nimport googAsserts from 'goog/asserts.js';\n\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\n\nexport default exports;\n","/*!\n * @copyright Copyright &copy; Kartik Visweswaran, Krajee.com, 2014 - 2016\n * @version 1.3.4\n *\n * Date formatter utility library that allows formatting date/time variables or Date objects using PHP DateTime format.\n * @see http://php.net/manual/en/function.date.php\n *\n * For more JQuery plugins visit http://plugins.krajee.com\n * For more Yii related demos visit http://demos.krajee.com\n */\n\n/* eslint-disable */\nconst DAY = 1000 * 60 * 60 * 24;\nconst HOUR = 3600;\n\nconst _compare = function(str1, str2) {\n  return typeof (str1) === 'string' && typeof (str2) === 'string' && str1.toLowerCase() === str2.toLowerCase();\n};\nconst _lpad = function(value, length, char) {\n  const chr = char || '0';\n  const val = value.toString();\n  return val.length < length ? _lpad(chr + val, length) : val;\n};\nconst _extend = function(out) {\n  let i, obj;\n  out = out || {};\n  for (i = 1; i < arguments.length; i++) {\n    obj = arguments[i];\n    if (!obj) {\n      continue;\n    }\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        if (typeof obj[key] === 'object') {\n          _extend(out[key], obj[key]);\n        } else {\n          out[key] = obj[key];\n        }\n      }\n    }\n  }\n  return out;\n};\nconst _indexOf = function(val, arr) {\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i].toLowerCase() === val.toLowerCase()) {\n      return i;\n    }\n  }\n  return -1;\n};\nconst defaultSettings = {\n  dateSettings: {\n    days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    daysShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    months: [\n      'January', 'February', 'March', 'April', 'May', 'June', 'July',\n      'August', 'September', 'October', 'November', 'December'\n    ],\n    monthsShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    meridiem: ['AM', 'PM'],\n    ordinal: function(number) {\n      const n = number % 10, suffixes = {1: 'st', 2: 'nd', 3: 'rd'};\n      return Math.floor(number % 100 / 10) === 1 || !suffixes[n] ? 'th' : suffixes[n];\n    }\n  },\n  separators: /[ \\-+\\/\\.T:@]/g,\n  validParts: /[dDjlNSwzWFmMntLoYyaABgGhHisueTIOPZcrU]/g,\n  intParts: /[djwNzmnyYhHgGis]/g,\n  tzParts: /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g,\n  tzClip: /[^-+\\dA-Z]/g\n};\n\nconst DateFormatter = function(options) {\n  const self = this;\n  const config = _extend(defaultSettings, options);\n  self.dateSettings = config.dateSettings;\n  self.separators = config.separators;\n  self.validParts = config.validParts;\n  self.intParts = config.intParts;\n  self.tzParts = config.tzParts;\n  self.tzClip = config.tzClip;\n};\n\nDateFormatter.prototype = {\n  constructor: DateFormatter,\n  getMonth: function(val) {\n    const self = this;\n    let i;\n    i = _indexOf(val, self.dateSettings.monthsShort) + 1;\n    if (i === 0) {\n      i = _indexOf(val, self.dateSettings.months) + 1;\n    }\n    return i;\n  },\n  parseDate: function(vDate, vFormat) {\n    const self = this, out = {date: null, year: null, month: null, day: null, hour: 0, min: 0, sec: 0}, vSettings = self.dateSettings;\n    let i, vDateFlag = false, vTimeFlag = false, vDatePart, iDatePart,\n        vMonth, vMeriIndex, vMeriOffset, len, mer;\n    if (!vDate) {\n      return null;\n    }\n    if (vDate instanceof Date) {\n      return vDate;\n    }\n    if (vFormat === 'U') {\n      i = parseInt(vDate);\n      return i ? new Date(i * 1000) : vDate;\n    }\n    switch (typeof vDate) {\n      case 'number':\n        return new Date(vDate);\n      case 'string':\n        break;\n      default:\n        return null;\n    }\n    const vFormatParts = vFormat.match(self.validParts);\n    if (!vFormatParts || vFormatParts.length === 0) {\n      throw new Error('Invalid date format definition.');\n    }\n    const vDateParts = vDate.replace(self.separators, '\\0').split('\\0');\n    for (i = 0; i < vDateParts.length; i++) {\n      vDatePart = vDateParts[i];\n      iDatePart = parseInt(vDatePart);\n      switch (vFormatParts[i]) {\n        case 'y':\n        case 'Y':\n          if (iDatePart) {\n            len = vDatePart.length;\n            out.year = len === 2 ? parseInt((iDatePart < 70 ? '20' : '19') + vDatePart) : iDatePart;\n          } else {\n            return null;\n          }\n          vDateFlag = true;\n          break;\n        case 'm':\n        case 'n':\n        case 'M':\n        case 'F':\n          if (isNaN(iDatePart)) {\n            vMonth = self.getMonth(vDatePart);\n            if (vMonth > 0) {\n              out.month = vMonth;\n            } else {\n              return null;\n            }\n          } else {\n            if (iDatePart >= 1 && iDatePart <= 12) {\n              out.month = iDatePart;\n            } else {\n              return null;\n            }\n          }\n          vDateFlag = true;\n          break;\n        case 'd':\n        case 'j':\n          if (iDatePart >= 1 && iDatePart <= 31) {\n            out.day = iDatePart;\n          } else {\n            return null;\n          }\n          vDateFlag = true;\n          break;\n        case 'g':\n        case 'h':\n          vMeriIndex = (vFormatParts.indexOf('a') > -1) ? vFormatParts.indexOf('a') :\n            (vFormatParts.indexOf('A') > -1) ? vFormatParts.indexOf('A') : -1;\n          mer = vDateParts[vMeriIndex];\n          if (vMeriIndex > -1) {\n            vMeriOffset = _compare(mer, vSettings.meridiem[0]) ? 0 :\n              (_compare(mer, vSettings.meridiem[1]) ? 12 : -1);\n            if (iDatePart >= 1 && iDatePart <= 12 && vMeriOffset > -1) {\n              out.hour = iDatePart + vMeriOffset - 1;\n            } else if (iDatePart >= 0 && iDatePart <= 23) {\n              out.hour = iDatePart;\n            }\n          } else {\n            if (iDatePart >= 0 && iDatePart <= 23) {\n              out.hour = iDatePart;\n            } else {\n              return null;\n            }\n          }\n          vTimeFlag = true;\n          break;\n        case 'G':\n        case 'H':\n          if (iDatePart >= 0 && iDatePart <= 23) {\n            out.hour = iDatePart;\n          } else {\n            return null;\n          }\n          vTimeFlag = true;\n          break;\n        case 'i':\n          if (iDatePart >= 0 && iDatePart <= 59) {\n            out.min = iDatePart;\n          } else {\n            return null;\n          }\n          vTimeFlag = true;\n          break;\n        case 's':\n          if (iDatePart >= 0 && iDatePart <= 59) {\n            out.sec = iDatePart;\n          } else {\n            return null;\n          }\n          vTimeFlag = true;\n          break;\n      }\n    }\n    if (vDateFlag === true && out.year && out.month && out.day) {\n      out.date = new Date(out.year, out.month - 1, out.day, out.hour, out.min, out.sec, 0);\n    } else {\n      if (vTimeFlag !== true) {\n        return null;\n      }\n      out.date = new Date(0, 0, 0, out.hour, out.min, out.sec, 0);\n    }\n    return out.date;\n  },\n  guessDate: function(vDateStr, vFormat) {\n    if (typeof vDateStr !== 'string') {\n      return vDateStr;\n    }\n    const self = this, vParts = vDateStr.replace(self.separators, '\\0').split('\\0'), vPattern = /^[djmn]/g, vFormatParts = vFormat.match(self.validParts), vDate = new Date(), vDigit = 0;\n    let len, i, n, iPart, iSec, vYear;\n\n    if (!vPattern.test(vFormatParts[0])) {\n      return vDateStr;\n    }\n\n    for (i = 0; i < vParts.length; i++) {\n      let vDigit = 2;\n      iPart = vParts[i];\n      iSec = parseInt(iPart.substr(0, 2));\n      if (isNaN(iSec)) {\n        return null;\n      }\n      switch (i) {\n        case 0:\n          if (vFormatParts[0] === 'm' || vFormatParts[0] === 'n') {\n            vDate.setMonth(iSec - 1);\n          } else {\n            vDate.setDate(iSec);\n          }\n          break;\n        case 1:\n          if (vFormatParts[0] === 'm' || vFormatParts[0] === 'n') {\n            vDate.setDate(iSec);\n          } else {\n            vDate.setMonth(iSec - 1);\n          }\n          break;\n        case 2:\n          vYear = vDate.getFullYear();\n          len = iPart.length;\n          vDigit = len < 4 ? len : 4;\n          vYear = parseInt(len < 4 ? vYear.toString().substr(0, 4 - len) + iPart : iPart.substr(0, 4));\n          if (!vYear) {\n            return null;\n          }\n          vDate.setFullYear(vYear);\n          break;\n        case 3:\n          vDate.setHours(iSec);\n          break;\n        case 4:\n          vDate.setMinutes(iSec);\n          break;\n        case 5:\n          vDate.setSeconds(iSec);\n          break;\n      }\n      n = iPart.substr(vDigit);\n      if (n.length > 0) {\n        vParts.splice(i + 1, 0, n);\n      }\n    }\n    return vDate;\n  },\n  parseFormat: function(vChar, vDate) {\n    let fmt;\n    const self = this, vSettings = self.dateSettings, backslash = /\\\\?(.?)/gi, doFormat = function(t, s) {\n      return fmt[t] ? fmt[t]() : s;\n    };\n    fmt = {\n      /////////\n      // DAY //\n      /////////\n      /**\n       * Day of month with leading 0: `01..31`\n       * @return {string}\n       */\n      d: function() {\n        return _lpad(fmt.j(), 2);\n      },\n      /**\n       * Shorthand day name: `Mon...Sun`\n       * @return {string}\n       */\n      D: function() {\n        return vSettings.daysShort[fmt.w()];\n      },\n      /**\n       * Day of month: `1..31`\n       * @return {number}\n       */\n      j: function() {\n        return vDate.getDate();\n      },\n      /**\n       * Full day name: `Monday...Sunday`\n       * @return {number}\n       */\n      l: function() {\n        return vSettings.days[fmt.w()];\n      },\n      /**\n       * ISO-8601 day of week: `1[Mon]..7[Sun]`\n       * @return {number}\n       */\n      N: function() {\n        return fmt.w() || 7;\n      },\n      /**\n       * Day of week: `0[Sun]..6[Sat]`\n       * @return {number}\n       */\n      w: function() {\n        return vDate.getDay();\n      },\n      /**\n       * Day of year: `0..365`\n       * @return {number}\n       */\n      z: function() {\n        const a = new Date(fmt.Y(), fmt.n() - 1, fmt.j()), b = new Date(fmt.Y(), 0, 1);\n        return Math.round((a - b) / DAY);\n      },\n\n      //////////\n      // WEEK //\n      //////////\n      /**\n       * ISO-8601 week number\n       * @return {number}\n       */\n      W: function() {\n        const a = new Date(fmt.Y(), fmt.n() - 1, fmt.j() - fmt.N() + 3), b = new Date(a.getFullYear(), 0, 4);\n        return _lpad(1 + Math.round((a - b) / DAY / 7), 2);\n      },\n\n      ///////////\n      // MONTH //\n      ///////////\n      /**\n       * Full month name: `January...December`\n       * @return {string}\n       */\n      F: function() {\n        return vSettings.months[vDate.getMonth()];\n      },\n      /**\n       * Month w/leading 0: `01..12`\n       * @return {string}\n       */\n      m: function() {\n        return _lpad(fmt.n(), 2);\n      },\n      /**\n       * Shorthand month name; `Jan...Dec`\n       * @return {string}\n       */\n      M: function() {\n        return vSettings.monthsShort[vDate.getMonth()];\n      },\n      /**\n       * Month: `1...12`\n       * @return {number}\n       */\n      n: function() {\n        return vDate.getMonth() + 1;\n      },\n      /**\n       * Days in month: `28...31`\n       * @return {number}\n       */\n      t: function() {\n        return (new Date(fmt.Y(), fmt.n(), 0)).getDate();\n      },\n\n      //////////\n      // YEAR //\n      //////////\n      /**\n       * Is leap year? `0 or 1`\n       * @return {number}\n       */\n      L: function() {\n        const Y = fmt.Y();\n        return (Y % 4 === 0 && Y % 100 !== 0 || Y % 400 === 0) ? 1 : 0;\n      },\n      /**\n       * ISO-8601 year\n       * @return {number}\n       */\n      o: function() {\n        const n = fmt.n(), W = fmt.W(), Y = fmt.Y();\n        return Y + (n === 12 && W < 9 ? 1 : n === 1 && W > 9 ? -1 : 0);\n      },\n      /**\n       * Full year: `e.g. 1980...2010`\n       * @return {number}\n       */\n      Y: function() {\n        return vDate.getFullYear();\n      },\n      /**\n       * Last two digits of year: `00...99`\n       * @return {string}\n       */\n      y: function() {\n        return fmt.Y().toString().slice(-2);\n      },\n\n      //////////\n      // TIME //\n      //////////\n      /**\n       * Meridian lower: `am or pm`\n       * @return {string}\n       */\n      a: function() {\n        return fmt.A().toLowerCase();\n      },\n      /**\n       * Meridian upper: `AM or PM`\n       * @return {string}\n       */\n      A: function() {\n        const n = fmt.G() < 12 ? 0 : 1;\n        return vSettings.meridiem[n];\n      },\n      /**\n       * Swatch Internet time: `000..999`\n       * @return {string}\n       */\n      B: function() {\n        const H = vDate.getUTCHours() * HOUR, i = vDate.getUTCMinutes() * 60, s = vDate.getUTCSeconds();\n        return _lpad(Math.floor((H + i + s + HOUR) / 86.4) % 1000, 3);\n      },\n      /**\n       * 12-Hours: `1..12`\n       * @return {number}\n       */\n      g: function() {\n        return fmt.G() % 12 || 12;\n      },\n      /**\n       * 24-Hours: `0..23`\n       * @return {number}\n       */\n      G: function() {\n        return vDate.getHours();\n      },\n      /**\n       * 12-Hours with leading 0: `01..12`\n       * @return {string}\n       */\n      h: function() {\n        return _lpad(fmt.g(), 2);\n      },\n      /**\n       * 24-Hours w/leading 0: `00..23`\n       * @return {string}\n       */\n      H: function() {\n        return _lpad(fmt.G(), 2);\n      },\n      /**\n       * Minutes w/leading 0: `00..59`\n       * @return {string}\n       */\n      i: function() {\n        return _lpad(vDate.getMinutes(), 2);\n      },\n      /**\n       * Seconds w/leading 0: `00..59`\n       * @return {string}\n       */\n      s: function() {\n        return _lpad(vDate.getSeconds(), 2);\n      },\n      /**\n       * Microseconds: `000000-999000`\n       * @return {string}\n       */\n      u: function() {\n        return _lpad(vDate.getMilliseconds() * 1000, 6);\n      },\n\n      //////////////\n      // TIMEZONE //\n      //////////////\n      /**\n       * Timezone identifier: `e.g. Atlantic/Azores, ...`\n       * @return {string}\n       */\n      e: function() {\n        const str = /\\((.*)\\)/.exec(String(vDate))[1];\n        return str || 'Coordinated Universal Time';\n      },\n      /**\n       * DST observed? `0 or 1`\n       * @return {number}\n       */\n      I: function() {\n        const a = new Date(fmt.Y(), 0), c = Date.UTC(fmt.Y(), 0),\n            b = new Date(fmt.Y(), 6), d = Date.UTC(fmt.Y(), 6);\n        return ((a - c) !== (b - d)) ? 1 : 0;\n      },\n      /**\n       * Difference to GMT in hour format: `e.g. +0200`\n       * @return {string}\n       */\n      O: function() {\n        const tzo = vDate.getTimezoneOffset(), a = Math.abs(tzo);\n        return (tzo > 0 ? '-' : '+') + _lpad(Math.floor(a / 60) * 100 + a % 60, 4);\n      },\n      /**\n       * Difference to GMT with colon: `e.g. +02:00`\n       * @return {string}\n       */\n      P: function() {\n        const O = fmt.O();\n        return (`${O.substr(0, 3)}:${O.substr(3, 2)}`);\n      },\n      /**\n       * Timezone abbreviation: `e.g. EST, MDT, ...`\n       * @return {string}\n       */\n      T: function() {\n        const str = (String(vDate).match(self.tzParts) || ['']).pop().replace(self.tzClip, '');\n        return str || 'UTC';\n      },\n      /**\n       * Timezone offset in seconds: `-43200...50400`\n       * @return {number}\n       */\n      Z: function() {\n        return -vDate.getTimezoneOffset() * 60;\n      },\n\n      ////////////////////\n      // FULL DATE TIME //\n      ////////////////////\n      /**\n       * ISO-8601 date\n       * @return {string}\n       */\n      c: function() {\n        return 'Y-m-d\\\\TH:i:sP'.replace(backslash, doFormat);\n      },\n      /**\n       * RFC 2822 date\n       * @return {string}\n       */\n      r: function() {\n        return 'D, d M Y H:i:s O'.replace(backslash, doFormat);\n      },\n      /**\n       * Seconds since UNIX epoch\n       * @return {number}\n       */\n      U: function() {\n        return vDate.getTime() / 1000 || 0;\n      }\n    };\n    return doFormat(vChar, vChar);\n  },\n  formatDate: function(vDate, vFormat) {\n    const self = this;\n    let i, n, len, str, vChar, vDateStr = '';\n    const BACKSLASH = '\\\\';\n    if (typeof vDate === 'string') {\n      vDate = self.parseDate(vDate, vFormat);\n      if (!vDate) {\n        return null;\n      }\n    }\n    if (vDate instanceof Date) {\n      len = vFormat.length;\n      for (i = 0; i < len; i++) {\n        vChar = vFormat.charAt(i);\n        if (vChar === 'S' || vChar === BACKSLASH) {\n          continue;\n        }\n        if (i > 0 && vFormat.charAt(i - 1) === BACKSLASH) {\n          vDateStr += vChar;\n          continue;\n        }\n        str = self.parseFormat(vChar, vDate);\n        if (i !== (len - 1) && self.intParts.test(vChar) && vFormat.charAt(i + 1) === 'S') {\n          n = parseInt(str) || 0;\n          str += self.dateSettings.ordinal(n);\n        }\n        vDateStr += str;\n      }\n      return vDateStr;\n    }\n    return '';\n  }\n};\n/* eslint-enable */\n\nexport default DateFormatter;\n","/**\n * @module gmf.permalink.ShareService\n */\n/**\n * Service to handle the sharing of the permalink.\n * @param {angular.$http} $http Angular http service.\n * @param  {string} gmfShortenerCreateUrl URL for the shortener API\n * @constructor\n * @struct\n * @ngInject\n * @export\n * @ngname gmfShareService\n */\nconst exports = function($http, gmfShortenerCreateUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.gmfShortenerCreateUrl_ = gmfShortenerCreateUrl;\n\n};\n\n\n/**\n * Get a short URL of the permalink by calling the url shortener service.\n * - If no shortener API url have been specified, it returns the permalink itself.\n * @param  {string} url the permalink\n * @return {gmfx.ShortenerAPIResponse|angular.$http.HttpPromise} an object containing the permalink not shortened or\n * the promise attached to the shortener API request\n */\nexports.prototype.getShortUrl = function(url) {\n  const params = /** @type {gmfx.ShortenerAPIRequestParams} */ ({\n    url\n  });\n\n  if (!this.gmfShortenerCreateUrl_) {\n    return {\n      data: {\n        short_url: url\n      },\n      status: 200\n    };\n  }\n\n  return this.postShortUrl_(params);\n};\n\n\n/**\n * Send the short permalink to the email provided\n * - If email is provided, the short permalink will be sent to this email\n * @param  {string} shortUrl the short permalink to send\n * @param  {string} email the email to which the short url must be send\n * @param  {string=} opt_message message for the email\n * @return {angular.$http.HttpPromise} the promise attached to the shortener API request\n */\nexports.prototype.sendShortUrl = function(shortUrl, email, opt_message) {\n  const params = /** @type {gmfx.ShortenerAPIRequestParams} */ ({\n    url: shortUrl,\n    email: email\n  });\n\n  if (opt_message) {\n    params['message'] = opt_message;\n  }\n\n  return this.postShortUrl_(params);\n};\n\n\n/**\n * @param  {gmfx.ShortenerAPIRequestParams} params parameters for the request\n * @return {angular.$http.HttpPromise} the promise attached to the shortener API request\n * @private\n */\nexports.prototype.postShortUrl_ = function(params) {\n  // Override default behavior of $http.post method (sending data in json format)\n  return this.$http_.post(this.gmfShortenerCreateUrl_, $.param(params), {\n    headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n  });\n};\n\n\n/**\n * Max length defined for the complete url.\n * Check IE limits, see {@link http://support.microsoft.com/kb/208427}\n * @constant\n * @type {number}\n */\nexports.URL_MAX_LEN = 2083;\n\n/**\n * Max length defined for the url parth section.\n * Check IE limits, see {@link http://support.microsoft.com/kb/208427}\n * @constant\n * @type {number}\n */\nexports.URL_PATH_MAX_LEN = 2048;\n\nexports.module = angular.module('gmfShareService', []);\n\nexports.module.service('gmfShareService', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureLength\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, gettextCatalog, options = /** @type {ngeox.interaction.MeasureOptions} */({})) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = gettextCatalog.getString('Click to continue drawing the line.');\n    const br = document.createElement('br');\n    br.textContent = gettextCatalog.getString('Double-click or click last point to finish.');\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomLineString);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedLength(geom, proj, this.precision, this.format);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureArea\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, gettextCatalog, options = {}) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = gettextCatalog.getString('Click to continue drawing the polygon.');\n    const br = document.createElement('br');\n    br.textContent = gettextCatalog.getString('Double-click or click starting point to finish.');\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('Polygon'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomPolygon);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedArea(geom, proj, this.precision, this.format);\n  const verticesCount = geom.getCoordinates()[0].length;\n  let coord = null;\n  if (verticesCount > 3) {\n    coord = geom.getInteriorPoint().getCoordinates();\n  }\n  callback(output, coord);\n};\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.component\n */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfAuthentication', [\n  gmfAuthenticationService.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoMessageModalComponent.name,\n]);\n\n\n/**\n * @param {angular.JQLite} element Element.\n * @param {angular.Attributes} attrs Attributes.\n * @return {string} Template URL.\n */\nexports.gmfAuthenticationTemplateUrl_ = (element, attrs) => {\n  const templateUrl = attrs['gmfAuthenticationTemplateurl'];\n  return templateUrl !== undefined ? templateUrl :\n    'gmf/authentication';\n};\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/authentication', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfAuthenticationTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfAuthenticationTemplateUrl($element, $attrs, gmfAuthenticationTemplateUrl) {\n  return gmfAuthenticationTemplateUrl($element, $attrs);\n}\n\n\n/**\n * An \"authentication\" component for a GeoMapFish application. With the\n * use of the \"authentication\" service, it features a complete interface\n * for the user to be able to login, logout, change or reset his or her\n * password.  The `gmfUser` angular value is also used to keep track of\n * the user information. When empty, that means that the user isn't connected\n * yet.\n *\n * While not logged in, the \"login\" form is shown, which allows the user to\n * either log in or ask for a password reset.\n *\n * Once logged in, the \"logout\" form is shown, which allows the user to either\n * log out or change his or her password.\n *\n * Example:\n *\n *      <gmf-authentication\n *        gmf-authentication-allow-password-change=\"::true\">\n *      </gmf-authentication>\n *\n * @htmlAttribute {boolean} gmf-authentication-allow-password-reset Whether to\n *     show the password forgotten link. Default to true.\n * @htmlAttribute {boolean|function} gmf-authentication-allow-password-change Whether to\n *     show the change password button. Default to true. You can also specify a gmfx.PasswordValidator Object\n *     to add constraint on user's new password.\n * @htmlAttribute {gmfx.PasswordValidator} gmf-authentication-password-validator A gmfx.PasswordValidator\n *     Object to add constraint on user's new password. The gmf-authentication-allow-password-change. To use\n *     it you must also allow the user to change its password.\n * @htmlAttribute {boolean} gmf-authentication-force-password-change Force the\n *     user to change its password. Default to false. If you set it to true, you\n *     should also allow the user to change its password. Don't add this option alone, use\n *     it in a dedicated authentication component, in a ngeo-modal, directly in\n *     your index.html (see example 2.)\n *\n * Example 2:\n *\n *     <ngeo-modal\n *         ngeo-modal-closable=\"false\"\n *         ng-model=\"mainCtrl.userMustChangeItsPassword()\"\n *         ng-model-options=\"{getterSetter: true}\">\n *       <div class=\"modal-header\">\n *         <h4 class=\"modal-title\">\n *           {{'You must change your password' | translate}}\n *         </h4>\n *       </div>\n *       <div class=\"modal-body\">\n *         <gmf-authentication\n *           gmf-authentication-force-password-change=\"::true\">\n *         </gmf-authentication>\n *       </div>\n *     </ngeo-modal>\n *\n * @ngdoc component\n * @ngname gmfAuthentication\n */\nexports.component_ = {\n  bindings: {\n    'allowPasswordReset': '<?gmfAuthenticationAllowPasswordReset',\n    'allowPasswordChange': '<?gmfAuthenticationAllowPasswordChange',\n    'passwordValidator': '<?gmfAuthenticationPasswordValidator',\n    'forcePasswordChange': '<?gmfAuthenticationForcePasswordChange'\n  },\n  controller: 'GmfAuthenticationController',\n  templateUrl: gmfAuthenticationTemplateUrl\n};\n\nexports.value('gmfAuthenticationTemplateUrl',\n  exports.gmfAuthenticationTemplateUrl_);\n\nexports.component('gmfAuthentication', exports.component_);\n\n\n/**\n * @private\n */\nexports.AuthenticationController_ = class {\n  /**\n   * @private\n   * @param {!angular.JQLite} $element Element.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {gmf.authentication.Service} gmfAuthenticationService GMF Authentication service\n   * @param {gmfx.User} gmfUser User.\n   * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfAuthenticationController\n   */\n  constructor($element, gettextCatalog, gmfAuthenticationService, gmfUser, ngeoNotification) {\n\n    /**\n     * @type {!angular.JQLite}\n     * @private\n     */\n    this.$element_ = $element;\n\n    /**\n     * @type {gmfx.User}\n     * @export\n     */\n    this.gmfUser = gmfUser;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog = gettextCatalog;\n\n    /**\n     * @type {gmf.authentication.Service}\n     * @private\n     */\n    this.gmfAuthenticationService_ = gmfAuthenticationService;\n\n    /**\n     * @type {ngeo.message.Notification}\n     * @private\n     */\n    this.notification_ = ngeoNotification;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordReset;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordChange;\n\n    /**\n     * @type {gmfx.PasswordValidator?}\n     * @export\n     */\n    this.passwordValidator = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.forcePasswordChange;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.changingPassword = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.changePasswordModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.resetPasswordModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.error = false;\n\n    // LOGIN form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.loginVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.pwdVal = '';\n\n    // CHANGE PASSWORD form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.oldPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdConfVal = '';\n  }\n\n  /**\n   * Initialise the controller.\n   */\n  $onInit() {\n    this.allowPasswordReset = this.allowPasswordReset !== false;\n    this.allowPasswordChange = this.allowPasswordChange !== false;\n    this.forcePasswordChange = this.forcePasswordChange === true;\n    if (this.forcePasswordChange) {\n      this.changingPassword = true;\n    }\n  }\n\n\n  // METHODS THAT CALL THE AUTHENTICATION SERVICE METHODS\n\n  /**\n   * Calls the authentication service changePassword method.\n   * @export\n   */\n  changePassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const oldPwd = this.oldPwdVal;\n    const newPwd = this.newPwdVal;\n    const confPwd = this.newPwdConfVal;\n\n    const errors = [];\n    // Validation - Passwords are required.\n    if (oldPwd === '') {\n      errors.push(gettextCatalog.getString('The old password is required.'));\n    }\n    if (newPwd === '') {\n      errors.push(gettextCatalog.getString('The new password is required.'));\n    }\n    if (confPwd === '') {\n      errors.push(gettextCatalog.getString('The password confirmation is required.'));\n    }\n\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      // Default validation - Passwords must be new and must also match.\n      if (oldPwd === newPwd) {\n        errors.push(gettextCatalog.getString('The old and new passwords are the same.'));\n      }\n      if (newPwd !== confPwd) {\n        errors.push(gettextCatalog.getString('The passwords don\\'t match.'));\n      }\n      // Custom validation - If a passwordValidator is set, use it to validate the new password.\n      if (this.passwordValidator) {\n        if (!this.passwordValidator.isPasswordValid(oldPwd)) {\n          errors.push(gettextCatalog.getString(this.passwordValidator.notValidMessage));\n        }\n      }\n\n      if (errors.length) {\n        this.setError_(errors);\n      } else {\n        // Send request with current credentials, which may fail if the old password given is incorrect.\n        const error = gettextCatalog.getString('Incorrect old password.');\n        this.gmfAuthenticationService_.changePassword(oldPwd, newPwd, confPwd).then(\n          () => {\n            this.changePasswordModalShown = true;\n            this.changePasswordReset();\n          },\n          this.setError_.bind(this, error));\n      }\n    }\n  }\n\n  /**\n   * Calls the authentication service login method.\n   * @export\n   */\n  login() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const errors = [];\n    if (this.loginVal === '') {\n      errors.push(gettextCatalog.getString('The username is required.'));\n    }\n    if (this.pwdVal === '') {\n      errors.push(gettextCatalog.getString('The password is required.'));\n    }\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      const error = gettextCatalog.getString('Incorrect credentials or disabled account.');\n      this.gmfAuthenticationService_.login(this.loginVal, this.pwdVal).then(\n        this.resetError_.bind(this),\n        this.setError_.bind(this, error));\n    }\n  }\n\n  /**\n   * Calls the authentication service logout method.\n   * @export\n   */\n  logout() {\n    const gettextCatalog = this.gettextCatalog;\n    const error = gettextCatalog.getString('Could not log out.');\n    this.gmfAuthenticationService_.logout().then(\n      this.resetError_.bind(this),\n      this.setError_.bind(this, error));\n  }\n\n  /**\n   * Calls the authentication service resetPassword method.\n   * @export\n   */\n  resetPassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    if (!this.loginVal) {\n      this.setError_(gettextCatalog.getString('Please, input a login...'));\n      return;\n    }\n\n    const error = gettextCatalog.getString('An error occurred while resetting the password.');\n\n    /**\n     * @param {gmfx.AuthenticationDefaultResponse} respData Response.\n     */\n    const resetPasswordSuccessFn = function(respData) {\n      this.resetPasswordModalShown = true;\n      this.resetError_();\n    }.bind(this);\n\n    this.gmfAuthenticationService_.resetPassword(this.loginVal).then(\n      resetPasswordSuccessFn,\n      this.setError_.bind(this, error)\n    );\n  }\n\n\n  // OTHER METHODS\n\n  /**\n   * Reset the changePassword values and error.\n   * @export\n   */\n  changePasswordReset() {\n    this.resetError_();\n    this.changingPassword = false;\n    this.oldPwdVal = '';\n    this.newPwdVal = '';\n    this.newPwdConfVal = '';\n  }\n\n  /**\n   * @return {boolean} True if the user must change is password and if the \"forcePasswordChange\" option of\n   *    this component is set to true.\n   * @export\n   */\n  userMustChangeItsPassword() {\n    return (this.gmfUser.is_password_changed === false && this.forcePasswordChange);\n  }\n\n  /**\n   * @param {string|Array.<string>} errors Errors.\n   * @private\n   */\n  setError_(errors) {\n    if (this.error) {\n      this.resetError_();\n    }\n\n    this.error = true;\n\n    const container = this.$element_.find('.gmf-authentication-error');\n\n    if (!Array.isArray(errors)) {\n      errors = [errors];\n    }\n\n    errors.forEach(function(error) {\n      this.notification_.notify({\n        msg: error,\n        target: container,\n        type: ngeoMessageMessage.Type.ERROR\n      });\n    }, this);\n  }\n\n  /**\n   * @private\n   */\n  resetError_() {\n    this.notification_.clear();\n    this.error = false;\n  }\n};\n\nexports.controller('GmfAuthenticationController',\n  exports.AuthenticationController_);\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.module\n */\nimport gmfAuthenticationComponent from 'gmf/authentication/component.js';\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfAuthenticationModule', [\n  gmfAuthenticationComponent.name,\n  gmfAuthenticationService.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.BackgroundLayerMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport ngeoLayerHelper from 'ngeo/map/LayerHelper.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function(ngeoLayerHelper) {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? this.ngeoLayerHelper_.getGroupFromMap(map,\n    exports.BACKGROUNDLAYERGROUP_NAME).getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const ZIndex = -200;\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (layer !== null) {\n    layer.setZIndex(ZIndex);\n    this.ngeoLayerHelper_.setZIndexToFirstLevelChildren(layer, ZIndex);\n  }\n\n  const bgGroup = this.ngeoLayerHelper_.getGroupFromMap(map, exports.BACKGROUNDLAYERGROUP_NAME);\n\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      bgGroup.getLayers().setAt(0, layer);\n    } else {\n      bgGroup.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    bgGroup.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * Return the current background layer overlay of a given map, used by the opacity slider.\n * `null` is returned if the map does not have an opacity background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.prototype.getOpacityBgLayer = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? this.ngeoLayerHelper_.getGroupFromMap(map,\n    exports.BACKGROUNDLAYERGROUP_NAME).getLayers().item(1) : null;\n};\n\n/**\n * Set an background layer overlay, used by the opacity slider.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.prototype.setOpacityBgLayer = function(map, layer) {\n  const ZIndex = -100;\n  layer.setOpacity(0);\n  layer.setVisible(true);\n  layer.setZIndex(ZIndex);\n  this.ngeoLayerHelper_.setZIndexToFirstLevelChildren(layer, ZIndex);\n  const bgGroup = this.ngeoLayerHelper_.getGroupFromMap(map, exports.BACKGROUNDLAYERGROUP_NAME);\n\n  const index = bgGroup.getLayers().getArray().indexOf(layer);\n  if (index === -1) {\n    bgGroup.getLayers().push(layer);\n  }\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', [\n  ngeoLayerHelper.module.name\n]);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\n\n/**\n * @const\n */\nexports.BACKGROUNDLAYERGROUP_NAME = 'background';\n\n\nexport default exports;\n","/**\n * @module gmf.backgroundlayerselector.component\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfBackgroundlayerselector', [\n  gmfThemeThemes.module.name,\n  ngeoMapBackgroundLayerMgr.module.name,\n]);\n\n\nexports.value('gmfBackgroundlayerselectorTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfBackgroundlayerselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/backgroundlayerselector';\n  }\n);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/backgroundlayerselector', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfBackgroundlayerselectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfBackgroundlayerselectorTemplateUrl($element, $attrs, gmfBackgroundlayerselectorTemplateUrl) {\n  return gmfBackgroundlayerselectorTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a \"background layer selector\" component.\n *\n * Example:\n *\n *      <gmf-backgroundlayerselector\n *        gmf-backgroundlayerselector-map=\"::ctrl.map\"\n *        gmf-backgroundlayer-opacity-options=\"::ctrl.bgOpacityOptions\"\n *        gmf-backgroundlayerselector-select=\"onBackgroundSelected()\">\n *      </gmf-backgroundlayerselector>\n *\n * Used UI metadata:\n *\n *  * thumbnail: The URL used for the icon.\n *\n * @htmlAttribute {ol.Map=} gmf-backgroundlayerselector-map The map.\n * @htmlAttribute {string} gmf-backgroundlayer-opacity-options The opacity slider options.\n * @htmlAttribute {Function} gmf-backgroundlayerselector-select Function called\n *     when a layer was selected by the user.\n *\n * @ngdoc component\n * @ngname gmfBackgroundlayerselector\n */\nexports.component_ = {\n  controller: 'GmfBackgroundlayerselectorController as ctrl',\n  bindings: {\n    'map': '=gmfBackgroundlayerselectorMap',\n    'opacityOptions': '=gmfBackgroundlayerOpacityOptions',\n    'select': '&?gmfBackgroundlayerselectorSelect'\n  },\n  templateUrl: gmfBackgroundlayerselectorTemplateUrl\n};\n\n\nexports.component('gmfBackgroundlayerselector',\n  exports.component_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer manager.\n * @param {!gmf.theme.Themes} gmfThemes Themes service.\n * @ngInject\n * @ngdoc controller\n * @ngname GmfBackgroundlayerselectorController\n */\nexports.Controller_ = function($scope, ngeoBackgroundLayerMgr, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!string|undefined}\n   * @export\n   */\n  this.opacityOptions;\n\n  /**\n   * Function called when a layer was selected by the user.\n   * @type {?Function}\n   * @export\n   */\n  this.select;\n\n  /**\n   * @type {?ol.layer.Base}\n   * @export\n   */\n  this.bgLayer;\n\n  /**\n   * @type {?Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.bgLayers;\n\n  /**\n   * @type {ol.layer.Base}\n   * @export\n   */\n  this.opacityLayer;\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(gmfThemes, 'change', this.handleThemesChange_, this));\n\n  /**\n   * @type {!ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n\n  this.listenerKeys_.push(olEvents.listen(this.backgroundLayerMgr_, 'change',\n    /**\n     * @param {!ngeox.BackgroundEvent} event Event.\n     */\n    (event) => {\n      this.bgLayer = event.detail.current;\n    }));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.handleThemesChange_();\n};\n\n\n/**\n * Called when the themes changes. Set (or reset) the backround layers.\n * @private\n */\nexports.Controller_.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getBgLayers().then((layers) => {\n    this.bgLayers = layers;\n\n    if (this.opacityOptions !== undefined) {\n      const opacityLayer = layers.find(layer => layer.get('label') === this.opacityOptions);\n      if (opacityLayer !== undefined) {\n        this.setOpacityBgLayer(opacityLayer);\n        this.opacityLayer = opacityLayer;\n\n        // Reorder for the UI the bgArray copy with the opacity layer at the end\n        this.bgLayers = this.bgLayers.slice();\n        const indexOpa = this.bgLayers.findIndex(layer => layer === this.opacityLayer);\n        this.bgLayers.splice(indexOpa, 1);\n        this.bgLayers.push(opacityLayer);\n      }\n    }\n  });\n};\n\n/**\n * Getter/setter for background layer overlay, used by opacity slider.\n * @param {?number} val The opacity.\n * @returns {number} The background layer opacity.\n * @export\n */\nexports.Controller_.prototype.getSetBgLayerOpacity = function(val) {\n  if (val) {\n    this.opacityLayer.setOpacity(val);\n  }\n  return this.opacityLayer.getOpacity();\n};\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @param {boolean=} opt_silent Do not notify listeners.\n * @export\n */\nexports.Controller_.prototype.setLayer = function(layer, opt_silent) {\n  this.bgLayer = layer;\n  this.backgroundLayerMgr_.set(this.map, layer);\n  if (!opt_silent && this.select) {\n    this.select();\n  }\n};\n\n/**\n * Set a background layer overlay, used by the opacity slider.\n * @param {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.Controller_.prototype.setOpacityBgLayer = function(layer) {\n  this.backgroundLayerMgr_.setOpacityBgLayer(this.map, layer);\n};\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('GmfBackgroundlayerselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.Helper\n */\nimport gmfEditingEnumerateAttribute from 'gmf/editing/EnumerateAttribute.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to manipulate or get GMF data\n   * sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {gmf.editing.EnumerateAttribute} gmfEnumerateAttribute The Gmf enumerate\n   *     attribute service.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     source helper service.\n   * @ngdoc service\n   * @ngname gmfDataSourcesHelper\n   * @ngInject\n   */\n  constructor($q, gmfEnumerateAttribute, ngeoDataSourcesHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {gmf.editing.EnumerateAttribute}\n     * @private\n     */\n    this.gmfEnumerateAttribute_ = gmfEnumerateAttribute;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {gmfx.datasource.DataSources}\n     * @protected\n     */\n    this.collection_;\n\n    /**\n     * @type {Object.<number, gmf.datasource.OGC>}\n     * @protected\n     */\n    this.cache_;\n  }\n\n  /**\n   * @return {gmfx.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return /** @type {gmfx.datasource.DataSources} */ (\n      this.ngeoDataSourcesHelper_.collection\n    );\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?gmf.datasource.OGC} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return /** @type {?gmf.datasource.OGC} */ (\n      this.ngeoDataSourcesHelper_.getDataSource(id)\n    );\n  }\n\n  /**\n   * @param {gmf.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  prepareFiltrableDataSource(dataSource) {\n\n    const prepareFiltrableDataSourceDefer = this.q_.defer();\n\n    // (1) Get the attributes. The first time, they will be asynchronously\n    //     obtained using a WFS DescribeFeatureType request.\n    this.ngeoDataSourcesHelper_.getDataSourceAttributes(\n      dataSource\n    ).then((attributes) => {\n      // (2) The attribute names that are in the `enumeratedAttributes`\n      //     metadata are the ones that need to have their values fetched.\n      //     Do that once then set the type to SELECT and the choices.\n      const meta = dataSource.gmfLayer.metadata || {};\n      const enumAttributes = meta.enumeratedAttributes;\n      if (enumAttributes && enumAttributes.length) {\n        const promises = [];\n        for (const attribute of attributes) {\n          if (olArray.includes(enumAttributes, attribute.name) &&\n             attribute.type !== ngeoFormatAttributeType.SELECT &&\n             (!attribute.choices || !attribute.choices.length)) {\n            promises.push(\n              this.gmfEnumerateAttribute_.getAttributeValues(\n                dataSource, attribute.name\n              ).then((values) => {\n                const choices = values.map(choice => choice.value);\n                attribute.type = ngeoFormatAttributeType.SELECT;\n                attribute.choices = choices;\n              })\n            );\n          }\n        }\n        return this.q_.all(promises).then(\n          prepareFiltrableDataSourceDefer.resolve(dataSource)\n        );\n      } else {\n        prepareFiltrableDataSourceDefer.resolve(dataSource);\n      }\n    });\n\n    return prepareFiltrableDataSourceDefer.promise;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourcesHelper', [\n  ngeoDatasourceHelper.module.name,\n  gmfEditingEnumerateAttribute.module.name,\n]);\nexports.module.service('gmfDataSourcesHelper', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.OGC\n */\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\nconst exports = class extends ngeoDatasourceOGC {\n\n  /**\n   * A `gmf.datasource.OGC` extends a `ngeo.datasource.OGC` and\n   * adds some properties that are proper to GMF only.\n   *\n   * @struct\n   * @param {gmfx.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {gmfThemes.GmfLayer}\n     * @private\n     */\n    this.gmfLayer_ = options.gmfLayer;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {gmfThemes.GmfLayer} GMF layer\n   * @export\n   */\n  get gmfLayer() {\n    return this.gmfLayer_;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.WFSAliases\n */\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\n\nconst exports = class {\n\n  /**\n   * Service that provides methods to get additional information and actions\n   * when performing WFS requests.\n   *\n   * @struct\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     source helper service.\n   * @ngdoc service\n   * @ngname gmfWFSAliases\n   * @ngInject\n   */\n  constructor(ngeoDataSourcesHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n  }\n\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @export\n   */\n  describe(dataSource) {\n    // Only QGIS Server supports WFS aliases\n    if (dataSource.ogcServerType === 'qgisserver' && !dataSource.attributes) {\n      // Trigger an additional WFS DescribeFeatureType request to get\n      // datasource attributes, including aliases.\n      this.ngeoDataSourcesHelper_.getDataSourceAttributes(dataSource);\n    }\n  }\n};\n\n\nexports.module = angular.module('gmfDatasourceWFSAliases', [\n  ngeoDatasourceHelper.module.name,\n]);\nexports.module.service('gmfWFSAliases', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.Manager\n */\nimport gmfDatasourceOGC from 'gmf/datasource/OGC.js';\nimport gmfDatasourceWFSAliases from 'gmf/datasource/WFSAliases.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\n\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\n\nconst exports = class {\n\n  /**\n   * The GeoMapFish DataSources Manager is responsible of listenening to the\n   * c2cgeoportal's themes to create instances of `ngeo.datasource.DataSource`\n   * objects with the layer definitions found and push them in the\n   * `ngeox.datasource.DataSources` collection. The Manager must be initialized\n   * with the app's map using the setDatasourcseMap() method.\n   *\n   * When changing theme, these data sources are cleared then re-created.\n   *\n   * @struct\n   * @param {angular.$q} $q Angular q service\n   * @param {!angular.Scope} $rootScope Angular rootScope.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n   * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n   * @param {!ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer\n   *     manager.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   *     data sources service.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @param {!gmf.datasource.WFSAliases} gmfWFSAliases Gmf WFS aliases service.\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfDataSourcesManager\n   */\n  constructor($q, $rootScope, $timeout, gmfThemes, gmfTreeManager,\n    ngeoBackgroundLayerMgr, ngeoDataSources, ngeoLayerHelper, ngeoRuleHelper,\n    ngeoWMSTime, gmfWFSAliases\n  ) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    /**\n     * @type {gmf.layertree.TreeManager}\n     * @private\n     */\n    this.gmfTreeManager_ = gmfTreeManager;\n\n    /**\n     * @type {!ngeo.map.BackgroundLayerMgr}\n     * @private\n     */\n    this.ngeoBackgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * The collection of DataSources from ngeo, which gets updated by this\n     * service. When the theme changes, first we remove all data sources, then\n     * the 'active' data source are added here.\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n    /**\n     * @type {!gmf.datasource.WFSAliases}\n     * @private\n     */\n    this.gmfWFSAliases_ = gmfWFSAliases;\n\n\n    // === Inner properties ===\n\n    /**\n     * While loading a new theme, this is where all of the created data sources\n     * are put using the id as key for easier find in the future.\n     * @type {Object.<number, gmf.datasource.OGC>}\n     * @private\n     */\n    this.dataSourcesCache_ = {};\n\n    /**\n     * A reference to the dimensions object.\n     * @type {ngeox.Dimensions|undefined}\n     * @private\n     */\n    this.dimensions_;\n\n    /**\n     * The cache of layertree leaf controller, i.e. those that are added to\n     * the tree manager. When treeCtrl is added in this cache, it's given\n     * a reference to its according data source.\n     * @type {gmfx.datasource.ManagerTreeCtrlCache}\n     * @private\n     */\n    this.treeCtrlCache_ = {};\n\n    /**\n     * The function to call to unregister the `watchCollection` event on\n     * the root layer tree controller children.\n     * @type {?Function}\n     * @private\n     */\n    this.treeCtrlsUnregister_ = null;\n\n    // === Events ===\n\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleNgeoBackgroundLayerChange_,\n      this\n    );\n    olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n  }\n\n\n  /**\n   * Set the map to use with your datasources.\n   * @param {!ol.Map} map The map to use.\n   * @export\n   */\n  setDatasourceMap(map) {\n    this.ngeoDataSources_.map = map;\n  }\n\n  /**\n   * @param {!ngeox.Dimensions} dimensions A reference to the dimensions\n   *     object to keep a reference of in this service.\n   */\n  setDimensions(dimensions) {\n    this.dimensions_ = dimensions;\n  }\n\n  /**\n   * Called when the themes change. Remove any existing data sources first,\n   * then create and add data sources from the loaded themes.\n   * @private\n   */\n  handleThemesChange_() {\n    // (1) Clear\n    this.clearDataSources_();\n    if (this.treeCtrlsUnregister_) {\n      this.treeCtrlsUnregister_();\n    }\n    this.clearTreeCtrlCache_();\n\n    // (2) Re-create data sources and event listeners\n    this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n      const promiseThemes = this.gmfThemes_.getThemesObject().then((themes) => {\n        // Create a DataSources for each theme\n        for (const theme of themes) {\n          for (const child of theme.children) {\n            googAsserts.assert(child);\n            this.createDataSource_(child, child, ogcServers);\n          }\n        }\n      });\n\n      const promiseBgLayers = this.gmfThemes_.getBackgroundLayersObject().then(\n        (backgroundLayers) => {\n          // Create a DataSource for each background layer\n          for (const backgroundLayer of backgroundLayers) {\n            this.createDataSource_(null, backgroundLayer, ogcServers);\n          }\n        }\n      );\n\n      // Then add the data sources that are active in the ngeo collection\n      this.q_.all([promiseThemes, promiseBgLayers]).then(() => {\n        this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(\n          () => {\n            if (this.gmfTreeManager_.rootCtrl) {\n              return this.gmfTreeManager_.rootCtrl.children;\n            }\n          },\n          this.handleTreeManagerRootChildrenChange_.bind(this)\n        );\n      });\n    });\n  }\n\n  /**\n   * Called when the list of tree controllers within the tree manager\n   * root controller changes. In other words, this method is called\n   * after nodes are being added added or removed from the tree,\n   * i.e. from the child nodes collection.\n   *\n   * A timeout is required  because the collection event is fired before\n   * the leaf nodes are created and they are the ones we're looking for here.\n   *\n   * This method handles the registration/unregistration of tree nodes that\n   * are added or removed, pushing it to the cache or removing it from the\n   * cache.\n   *\n   * @param {Array.<ngeo.layertree.Controller>|undefined} value List of tree\n   *     controllers.\n   * @private\n   */\n  handleTreeManagerRootChildrenChange_(value) {\n\n    this.timeout_(() => {\n\n      // (1) No need to do anything if the value is not set\n      if (!value) {\n        return;\n      }\n\n      // (2) Collect 'leaf' treeCtrls\n      const newTreeCtrls = [];\n      const visitor = (treeCtrls, treeCtrl) => {\n        const node = /** @type {!gmfThemes.GmfGroup|!gmfThemes.GmfLayer} */ (\n          treeCtrl.node);\n        const children = node.children;\n        if (!children) {\n          treeCtrls.push(treeCtrl);\n        }\n      };\n      for (let i = 0, ii = value.length; i < ii; i++) {\n        value[i].traverseDepthFirst(visitor.bind(this, newTreeCtrls));\n      }\n\n      // (3) Add new 'treeCtrls'\n      for (let i = 0, ii = newTreeCtrls.length; i < ii; i++) {\n        const newTreeCtrl = newTreeCtrls[i];\n        const cacheItem = this.getTreeCtrlCacheItem_(newTreeCtrl);\n        if (!cacheItem) {\n          this.addTreeCtrlToCache_(newTreeCtrl);\n        }\n      }\n\n      // (4) Remove treeCtrls that are no longer in the newTreeCtrl\n      const cache = this.treeCtrlCache_;\n      for (const id in this.treeCtrlCache_) {\n        const item = cache[id];\n        if (!newTreeCtrls.includes(item.treeCtrl)) {\n          this.removeTreeCtrlCacheItem_(item);\n        }\n      }\n    });\n  }\n\n  /**\n   * Remove the data sources from the ngeo collection that are in the cache,\n   * i.e. those created by this service, then clear the cache.\n   * @private\n   */\n  clearDataSources_() {\n\n    // (1) Remove data sources from ngeo collection\n    const dataSources = this.dataSources_.getArray();\n    for (let i = dataSources.length - 1, ii = 0; i >= ii; i--) {\n      if (this.dataSourcesCache_[dataSources[i].id]) {\n        // Use the `remove` method of the `ol.Collection` object for it\n        // to update its length accordingly and trigger the REMOVE event as\n        // well.\n        this.dataSources_.remove(dataSources[i]);\n      }\n    }\n\n    // (2) Clear the cache\n    olObj.clear(this.dataSourcesCache_);\n  }\n\n  /**\n   * Create a data source using the information on the node, group node\n   * and OGC servers. If the node has children, then we loop in those to get\n   * leaf nodes. Only leaf nodes end up creating a data source. If a data\n   * source with the same id already exists, then the node is skipped.\n   *\n   * Once a data source is created, it is added to the data sources cache.\n   *\n   * @param {gmfThemes.GmfGroup} firstLevelGroup The first level group node.\n   * @param {!gmfThemes.GmfGroup|!gmfThemes.GmfLayer} node The node, which\n   *     may have children or not.\n   * @param {!gmfThemes.GmfOgcServers} ogcServers OGC servers.\n   * @private\n   */\n  createDataSource_(firstLevelGroup, node, ogcServers) {\n\n    const children = node.children;\n\n    // (1) Group node (node that has children). Loop in the children\n    //     individually and create a data source for each one of them. The\n    //     group node itself is **skipped**.\n    if (children) {\n      for (const child of children) {\n        googAsserts.assert(child);\n        this.createDataSource_(firstLevelGroup, child, ogcServers);\n      }\n      return;\n    }\n\n    // From there on, the node is a layer node.\n    const gmfLayer = /** @type gmfThemes.GmfLayer */ (node);\n\n    // (2) Skip layer node if a data source with the same id exists\n    const id = olBase.getUid(gmfLayer);\n    if (this.dataSourcesCache_[id]) {\n      return;\n    }\n\n    // From there on, a data source will be created\n    const meta = gmfLayer.metadata;\n    const ogcType = gmfLayer.type;\n    let maxResolution;\n    let minResolution;\n    let ogcLayers;\n    let ogcServer;\n    let wmtsLayer;\n    let wmtsUrl;\n    let ogcImageType;\n    let timeProperty;\n\n    if (ogcType === gmfThemeThemes.NodeType.WMTS) {\n      // (3) Manage WMTS\n      const gmfLayerWMTS = /** @type {gmfThemes.GmfLayerWMTS} */ (gmfLayer);\n\n      // Common options for WMTS\n      wmtsLayer = gmfLayerWMTS.layer;\n      wmtsUrl = gmfLayerWMTS.url;\n      maxResolution = meta.maxResolution;\n      minResolution = meta.minResolution;\n\n      // OGC Layers\n      const layers = meta.queryLayers || meta.wmsLayers;\n      if (layers) {\n        ogcLayers = layers.split(',').map((layer) => {\n          return {\n            maxResolution: maxResolution,\n            minResolution: minResolution,\n            name: layer,\n            queryable: true\n          };\n        });\n      }\n\n      // OGC Server\n      if (meta.ogcServer && ogcServers[meta.ogcServer]) {\n        ogcServer = ogcServers[meta.ogcServer];\n      }\n      ogcImageType = gmfLayerWMTS.imageType;\n    } else if (ogcType === gmfThemeThemes.NodeType.WMS) {\n      // (4) Manage WMS\n      const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n      // Common options for WMS\n      maxResolution = gmfLayerWMS.maxResolutionHint;\n      minResolution = gmfLayerWMS.minResolutionHint;\n\n      // OGC Layers\n      ogcLayers = gmfLayerWMS.childLayers.map((childLayer) => {\n        return {\n          maxResolution: childLayer.maxResolutionHint,\n          minResolution: childLayer.minResolutionHint,\n          name: childLayer.name,\n          queryable: childLayer.queryable\n        };\n      });\n\n      // OGC Server\n      const ogcServerName = (!firstLevelGroup || firstLevelGroup.mixed) ?\n        gmfLayerWMS.ogcServer : firstLevelGroup.ogcServer;\n      googAsserts.assert(ogcServerName);\n      ogcServer = ogcServers[ogcServerName];\n      ogcImageType = ogcServer.imageType;\n\n      // Time property\n      if (gmfLayerWMS.time) {\n        timeProperty = gmfLayerWMS.time;\n      } else if (firstLevelGroup && firstLevelGroup.time) {\n        timeProperty = firstLevelGroup.time;\n      }\n    }\n\n    // (5) ogcServer\n    const ogcServerType = ogcServer ? ogcServer.type : undefined;\n    const wmsIsSingleTile = ogcServer ? ogcServer.isSingleTile : undefined;\n    const wfsUrl = ogcServer && ogcServer.wfsSupport ?\n      ogcServer.urlWfs : undefined;\n    const wmsUrl = ogcServer ? ogcServer.url : undefined;\n\n    let wfsOutputFormat = ngeoDatasourceOGC.WFSOutputFormat.GML3;\n    // qgis server only supports GML2 output\n    if (ogcServerType === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      wfsOutputFormat = ngeoDatasourceOGC.WFSOutputFormat.GML2;\n    }\n\n    // (6) Snapping\n    const snappable = !!meta.snappingConfig;\n    const snappingTolerance = meta.snappingConfig ?\n      meta.snappingConfig.tolerance : undefined;\n    const snappingToEdges = meta.snappingConfig ?\n      meta.snappingConfig.edge : undefined;\n    const snappingToVertice = meta.snappingConfig ?\n      meta.snappingConfig.vertex : undefined;\n\n    // (7) Dimensions\n    const dimensions = this.dimensions_;\n    const dimensionsConfig = node.dimensions || firstLevelGroup.dimensions;\n\n    // (8) Time values (lower or lower/upper)\n    let timeLowerValue;\n    let timeUpperValue;\n    if (timeProperty) {\n      const timeValues = this.ngeoWMSTime_.getOptions(timeProperty)['values'];\n      if (Array.isArray(timeValues)) {\n        timeLowerValue = timeValues[0];\n        timeUpperValue = timeValues[1];\n      } else {\n        timeLowerValue = timeValues;\n      }\n    }\n\n    // (9) Common options\n    const copyable = meta.copyable;\n    const identifierAttribute = meta.identifierAttributeField;\n    const name = gmfLayer.name;\n    const timeAttributeName = meta.timeAttribute;\n    const visible = meta.isChecked === true;\n\n    // Create the data source and add it to the cache\n    this.dataSourcesCache_[id] = new gmfDatasourceOGC({\n      copyable,\n      dimensions,\n      dimensionsConfig,\n      gmfLayer,\n      id,\n      identifierAttribute,\n      maxResolution,\n      minResolution,\n      name,\n      ogcImageType,\n      ogcLayers,\n      ogcServerType,\n      ogcType,\n      snappable,\n      snappingTolerance,\n      snappingToEdges,\n      snappingToVertice,\n      timeAttributeName,\n      timeLowerValue,\n      timeProperty,\n      timeUpperValue,\n      visible,\n      wfsOutputFormat,\n      wfsUrl,\n      wmsIsSingleTile,\n      wmsUrl,\n      wmtsLayer,\n      wmtsUrl\n    });\n  }\n\n  /**\n   * If the given Layertree controller is a 'leaf', add it to the cache.\n   * Also, set its according data source. Finally, add the data source to\n   * the ngeo collection.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to add\n   * @private\n   */\n  addTreeCtrlToCache_(treeCtrl) {\n\n    const id = olBase.getUid(treeCtrl.node);\n    const dataSource = this.dataSourcesCache_[id];\n    googAsserts.assert(dataSource, 'DataSource should be set');\n    treeCtrl.setDataSource(dataSource);\n\n    const stateWatcherUnregister = this.rootScope_.$watch(\n      () => treeCtrl.getState(),\n      this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n    );\n\n    const filterRulesWatcherUnregister = this.rootScope_.$watch(\n      () => {\n        const hasFilters = dataSource.filterRules !== null;\n        const isVisible = dataSource.visible;\n        return hasFilters && isVisible;\n      },\n      this.handleDataSourceFilterRulesChange_.bind(this, dataSource)\n    );\n\n    // Watch for time values change to update the WMS layer\n    let timeLowerValueWatcherUnregister;\n    let timeUpperValueWatcherUnregister;\n    let wmsLayer;\n    if (dataSource.timeProperty &&\n        dataSource.ogcType === ngeoDatasourceOGC.Type.WMS\n    ) {\n      timeLowerValueWatcherUnregister = this.rootScope_.$watch(\n        () => dataSource.timeLowerValue,\n        this.handleDataSourceTimeValueChange_.bind(this, dataSource)\n      );\n\n      if (dataSource.timeProperty.mode === 'range') {\n        timeUpperValueWatcherUnregister = this.rootScope_.$watch(\n          () => dataSource.timeUpperValue,\n          this.handleDataSourceTimeValueChange_.bind(this, dataSource)\n        );\n      }\n\n      wmsLayer = googAsserts.assertInstanceof(\n        gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl),\n        olLayerImage\n      );\n    }\n\n    this.treeCtrlCache_[id] = {\n      filterRulesWatcherUnregister,\n      stateWatcherUnregister,\n      timeLowerValueWatcherUnregister,\n      timeUpperValueWatcherUnregister,\n      treeCtrl,\n      wmsLayer\n    };\n\n    this.dataSources_.push(dataSource);\n\n    this.gmfWFSAliases_.describe(dataSource);\n  }\n\n  /**\n   * Remove a treeCtrl cache item. Unregister event listeners and remove the\n   * data source from the ngeo collection.\n   *\n   * @param {gmfx.datasource.ManagerTreeCtrlCacheItem} item Layertree\n   *     controller cache item\n   * @private\n   */\n  removeTreeCtrlCacheItem_(item) {\n\n    // (1) Remove data source\n    const dataSource = item.treeCtrl.getDataSource();\n    googAsserts.assert(dataSource, 'DataSource should be set');\n    this.dataSources_.remove(dataSource);\n\n    // (2) Remove item and clear event listeners\n    item.treeCtrl.setDataSource(null);\n    item.filterRulesWatcherUnregister();\n    item.stateWatcherUnregister();\n    if (item.timeLowerValueWatcherUnregister) {\n      item.timeLowerValueWatcherUnregister();\n    }\n    if (item.timeUpperValueWatcherUnregister) {\n      item.timeUpperValueWatcherUnregister();\n    }\n    delete this.treeCtrlCache_[olBase.getUid(item.treeCtrl.node)];\n  }\n\n  /**\n   * Clears the layer tree controller cache. At the same time, each item gets\n   * its data source reference unset and state watcher unregistered.\n   *\n   * The data source gets also removed from the ngeo data sources collection.\n   * @private\n   */\n  clearTreeCtrlCache_() {\n    for (const id in this.treeCtrlCache_) {\n      this.removeTreeCtrlCacheItem_(this.treeCtrlCache_[id]);\n    }\n  }\n\n  /**\n   * Called when the state of a 'leaf' layertree controller changes.\n   * Update the `visible` property of the data source according to the\n   * state of the layertree controller.\n   *\n   * Note: The possible states can only be 'on' or 'off', because the\n   * layertree controller being a 'leaf'.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n   * @param {string|undefined} newVal New state value\n   * @private\n   */\n  handleTreeCtrlStateChange_(treeCtrl, newVal) {\n    const treeDataSource = treeCtrl.getDataSource();\n    googAsserts.assert(treeDataSource, 'DataSource should be set');\n    const visible = newVal === 'on';\n    treeDataSource.visible = visible;\n\n    // In GMF, multiple data sources can be combined into one ol.layer.Layer\n    // object. When changing the state of a data source, we need to make\n    // sure that the FILTER param match order of the current LAYERS param.\n    //\n    // Note: we only need to do this ONCE, as there can be only one\n    // data source being filtered at a time\n    const siblingDataSourceIds = gmfLayertreeSyncLayertreeMap.getLayer(\n      treeCtrl).get('querySourceIds');\n    if (Array.isArray(siblingDataSourceIds)) {\n      const dataSources = this.dataSources_.getArray();\n      for (const dataSource of dataSources) {\n        if (dataSource instanceof gmfDatasourceOGC &&\n            dataSource.filterRules !== null &&\n            dataSource.id !== treeDataSource.id &&\n            siblingDataSourceIds.includes(dataSource.id) &&\n            dataSource.visible\n        ) {\n          this.handleDataSourceFilterRulesChange_(dataSource, true);\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Returns a layertree controller cache item, if it exists.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n   * @return {gmfx.datasource.ManagerTreeCtrlCacheItem} Cache item\n   * @private\n   */\n  getTreeCtrlCacheItem_(treeCtrl) {\n    return this.treeCtrlCache_[olBase.getUid(treeCtrl.node)] || null;\n  }\n\n  /**\n   * Called when both the 'visible' and 'filterRules' properties of a data\n   * source change.\n   *\n   * If the data source is filtrable, then make sure that when it gets rules\n   * set to apply them as OGC filters to the OpenLayers layer, more precisely\n   * as a `FILTER` parameter in the layer's source parameters.\n   *\n   * @param {!gmf.datasource.OGC} dataSource Data source.\n   * @param {boolean} value Value.\n   * @private\n   */\n  handleDataSourceFilterRulesChange_(dataSource, value) {\n\n    // Skip data sources that are not filtrables OR those that do not have\n    // the WMS ogcType, i.e. those that do not have an OpenLayers layer\n    // to update\n    if (dataSource.filtrable !== true ||\n        dataSource.ogcType !== ngeoDatasourceOGC.Type.WMS\n    ) {\n      return;\n    }\n\n    const id = olBase.getUid(dataSource.gmfLayer);\n    const item = this.treeCtrlCache_[id];\n    googAsserts.assert(item);\n    const treeCtrl = item.treeCtrl;\n\n    const layer = gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl);\n    googAsserts.assert(\n      layer instanceof olLayerImage ||\n      layer instanceof olLayerTile\n    );\n\n    const source = layer.getSource();\n    googAsserts.assert(\n      source instanceof olSourceImageWMS ||\n      source instanceof olSourceTileWMS\n    );\n\n    const filtrableLayerName = dataSource.getFiltrableOGCLayerName();\n    const projCode = treeCtrl.map.getView().getProjection().getCode();\n    const filterString = dataSource.visible ?\n      this.ngeoRuleHelper_.createFilterString({\n        dataSource,\n        projCode\n      }) :\n      null;\n\n    const filterParam = 'FILTER';\n    let filterParamValue = null;\n\n    if (filterString) {\n      const params = source.getParams();\n      const layersParam = params['LAYERS'];\n      const layersList = layersParam.split(',');\n      googAsserts.assert(layersList.length >= 1);\n\n      if (layersList.length === 1) {\n        // When there's only one layer in the `LAYERS` parameters, then\n        // the filter string is given as-is.\n        filterParamValue = filterString;\n      } else {\n        // When there's more then one layer, then each filter must be wrapped\n        // between parenthesis and the order must also match the `LAYERS`\n        // parameter as well.\n        const filterParamValues = [];\n        for (let i = 0, ii = layersList.length; i < ii; i++) {\n          if (layersList[i] === filtrableLayerName) {\n            filterParamValues.push(`(${filterString})`);\n          } else {\n            filterParamValues.push('()');\n          }\n        }\n        filterParamValue = filterParamValues.join('');\n      }\n    }\n\n    source.updateParams({\n      [filterParam]: filterParamValue\n    });\n  }\n\n  /**\n   * Called when either the `timeLowerValue` or `timeUpperValue` property of a\n   * data source changes.\n   *\n   * Get the range value from the data source, then update the WMS layer\n   * thereafter.\n   *\n   * @param {!gmf.datasource.OGC} dataSource Data source.\n   * @private\n   */\n  handleDataSourceTimeValueChange_(dataSource) {\n\n    const id = olBase.getUid(dataSource.gmfLayer);\n    const item = this.treeCtrlCache_[id];\n    googAsserts.assert(item);\n    const wmsLayer = googAsserts.assert(item.wmsLayer);\n    const wmsSource = googAsserts.assertInstanceof(\n      wmsLayer.getSource(),\n      olSourceImageWMS\n    );\n\n    const timeProperty = googAsserts.assert(dataSource.timeProperty);\n    let timeParam;\n    const range = dataSource.timeRangeValue;\n    if (range) {\n      timeParam = this.ngeoWMSTime_.formatWMSTimeParam(timeProperty, range);\n    }\n\n    // No need to update the TIME param if already the same value;\n    const params = wmsSource.getParams();\n    const currentTimeParam = params['TIME'];\n    if (currentTimeParam === timeParam) {\n      return;\n    }\n\n    // The `timeParam` can be undefined, which means that the TIME property\n    // gets reset.\n    this.ngeoLayerHelper_.updateWMSLayerState(\n      wmsLayer,\n      wmsSource.getParams()['LAYERS'],\n      timeParam\n    );\n  }\n\n  /**\n   * Called when the background layer changes. Add/Remove the according data\n   * sources to/from the ngeo data sources collection. Update the data source\n   * `visible` property as well.\n   *\n   * The `querySourceIds` property in the layer is used to determine the\n   * data sources that are bound to the layer.\n   *\n   * @param {!ngeox.BackgroundEvent} evt Event.\n   * @private\n   */\n  handleNgeoBackgroundLayerChange_(evt) {\n\n    const previousBackgroundLayer = evt.detail.previous;\n    const currentBackgroundLayer = evt.detail.current;\n    const cache = this.dataSourcesCache_;\n\n    // Remove data sources linked to previous background layer\n    if (previousBackgroundLayer) {\n      const ids = previousBackgroundLayer.get('querySourceIds');\n      if (Array.isArray(ids)) {\n        for (const id of ids) {\n          const dataSource = cache[id];\n          if (dataSource) {\n            dataSource.visible = false;\n            this.dataSources_.remove(dataSource);\n          }\n        }\n      }\n    }\n\n    // Add data sources linked to current background layer\n    if (currentBackgroundLayer) {\n      const ids = currentBackgroundLayer.get('querySourceIds');\n      if (Array.isArray(ids)) {\n        for (const id of ids) {\n          const dataSource = cache[id];\n          if (dataSource) {\n            dataSource.visible = true;\n            this.dataSources_.push(dataSource);\n          }\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourcesManager', [\n  gmfDatasourceWFSAliases.module.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoDatasourceDataSources.module.name,\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfDataSourcesManager', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.module\n */\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfDatasourceHelper from 'gmf/datasource/Helper.js';\nimport gmfDatasourceManager from 'gmf/datasource/Manager.js';\nimport gmfDatasourceWFSAliases from 'gmf/datasource/WFSAliases.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDatasourceModule', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfDatasourceHelper.module.name,\n  gmfDatasourceManager.module.name,\n  gmfDatasourceWFSAliases.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Disclaimer\n */\nimport 'bootstrap/js/alert.js';\nimport googAsserts from 'goog/asserts.js';\n\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * Provides methods to display any sort of messages, disclaimers, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @ngdoc service\n * @ngname ngeoDisclaimer\n * @ngInject\n */\nconst exports = function($sce, gettextCatalog, ngeoCreatePopup) {\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @private\n   * @type {ngeox.PopupFactory}\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  ngeoMessageMessage.call(this);\n\n  const container = angular.element('<div class=\"ngeo-disclaimer\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * Cache of messages.\n   * @type {Object.<string, angular.JQLite|ngeo.message.Popup>}\n   * @private\n   */\n  this.messages_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Show disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.alert = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Close disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.close = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.closeMessage_, this);\n};\n\n\n/**\n * Show the message.\n * @param {ngeox.Message} message Message.\n * @protected\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const gettextCatalog = this.gettextCatalog_;\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  // No need to do anything if message already exist.\n  const uid = this.getMessageUid_(message);\n  if (this.messages_[uid] !== undefined) {\n    return;\n  }\n\n  const showInPopup = message.popup === true;\n\n  if (showInPopup) {\n    // display the message in a popup, i.e. using the ngeo create popup\n    const popup = this.createPopup_();\n    const content = this.sce_.trustAsHtml(message.msg);\n    popup.open({\n      autoDestroy: true,\n      content: content,\n      title: '&nbsp;'\n    });\n\n    // Watch the open property\n    popup.scope.$watch('open', (newVal, oldVal) => {\n      if (!newVal) {\n        this.closeMessage_(message);\n      }\n    });\n\n    this.messages_[uid] =  popup;\n\n  } else {\n    // display the message using a boostrap dismissible alert\n    const classNames = ['alert', 'fade', 'alert-dismissible'];\n    switch (type) {\n      case ngeoMessageMessage.Type.ERROR:\n        classNames.push('alert-danger');\n        break;\n      case ngeoMessageMessage.Type.INFORMATION:\n        classNames.push('alert-info');\n        break;\n      case ngeoMessageMessage.Type.SUCCESS:\n        classNames.push('alert-success');\n        break;\n      case ngeoMessageMessage.Type.WARNING:\n        classNames.push('alert-warning');\n        break;\n      default:\n        break;\n    }\n\n    const el = angular.element(\n      `<div role=\"alert\" class=\"${classNames.join(' ')}\"></div>`);\n    const button = angular.element(\n      `<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"${\n        gettextCatalog.getString('Close')\n      }\"><span aria-hidden=\"true\" class=\"fa fa-times\"></span></button>`);\n    const msg = angular.element('<span />').html(message.msg);\n    el.append(button).append(msg);\n\n    let container;\n\n    if (message.target) {\n      container = angular.element(message.target);\n    } else {\n      container = this.container_;\n    }\n\n    container.append(el);\n    el.addClass('in');\n\n    // Listen when the message gets closed to cleanup the cache of messages\n    el.on('closed.bs.alert', () => {\n      this.closeMessage_(message);\n    });\n\n    this.messages_[uid] =  el;\n  }\n};\n\n\n/**\n * @param {ngeox.Message} message Message.\n * @return {string} The uid.\n * @private\n */\nexports.prototype.getMessageUid_ = function(message) {\n  return `${message.msg}-${message.type}`;\n};\n\n\n/**\n * Close the message.\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.closeMessage_ = function(message) {\n  const uid = this.getMessageUid_(message);\n  const obj = this.messages_[uid];\n\n  // (1) No need to do anything if message doesn't exist\n  if (obj === undefined) {\n    return;\n  }\n\n  // (2) Close message (popup or alert)\n  if (obj instanceof ngeoMessagePopup) {\n    // (2.1) Close popup, if not already closed\n    if (obj.getOpen()) {\n      obj.setOpen(false);\n    }\n  } else {\n    // (2.2) Check if the message hasn't been closed using the UI, i.e. by\n    //       clicking the close button. If not, then close it.\n    if (obj.hasClass('in')) {\n      obj.alert('close');\n    }\n  }\n\n  // (3) Remove message from cache since it's closed now.\n  delete this.messages_[uid];\n};\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoDisclaimer', [\n  ngeoMessagePopup.module.name,\n]);\n\nexports.module.service('ngeoDisclaimer', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.disclaimer.component\n */\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageDisclaimer from 'ngeo/message/Disclaimer.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\n\nimport 'angular-sanitize';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfDisclaimer', [\n  'ngSanitize',\n  ngeoMapLayerHelper.module.name,\n  ngeoMessageDisclaimer.module.name,\n  ngeoMiscEventHelper.module.name,\n]);\n\n\n/**\n * @constructor\n * @private\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$sce} $sce Angular sce service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @param {!ngeo.message.Disclaimer} ngeoDisclaimer Ngeo Disclaimer service.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo Event Helper.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisclaimerController\n */\nexports.Controller_ = function($element, $scope, $sce, $timeout,\n  gettextCatalog, ngeoCreatePopup, ngeoDisclaimer, ngeoEventHelper, ngeoLayerHelper) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.external;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.popup;\n\n  /**\n   * Visibility that is set to true when a new msg is there.\n   * @type {boolean}\n   * @export\n   */\n  this.visibility = false;\n\n  /**\n   * Trusted html messages that can be displayed as html.\n   * @type {string|undefined}\n   * @export\n   */\n  this.msg;\n\n  /**\n   * @type {!Array<string>}\n   * @export\n   */\n  this.msgs_ = [];\n\n  /**\n   * @type {!angular.$sce}\n   * @private\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {!ngeox.PopupFactory}\n   * @private\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  /**\n   * @type {!ngeo.message.Disclaimer}\n   * @private\n   */\n  this.disclaimer_ = ngeoDisclaimer;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.eventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.dataLayerGroup_ = this.ngeoLayerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n  this.registerLayer_(this.dataLayerGroup_);\n};\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersAdd_ = function(evt) {\n  this.timeout_(() => {\n    const layer = evt.element;\n    googAsserts.assertInstanceof(layer, olLayerBase);\n    this.registerLayer_(layer);\n  });\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersRemove_ = function(evt) {\n  const layer = evt.element;\n  googAsserts.assertInstanceof(layer, olLayerBase);\n  this.unregisterLayer_(layer);\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.registerLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Listen to added/removed layers to this group\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'add',\n        this.handleLayersAdd_,\n        this\n      )\n    );\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'remove',\n        this.handleLayersRemove_,\n        this\n      )\n    );\n\n    // (2) Register existing layers in the group\n    layer.getLayers().forEach((layer) => {\n      this.registerLayer_(layer);\n    });\n\n  } else {\n\n    // Show disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach((disclaimer) => {\n        this.showDisclaimerMessage_(disclaimer);\n      });\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.unregisterLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Clear event listeners\n    this.eventHelper_.clearListenerKey(layerUid);\n\n    // (2) Unregister existing layers in the group\n    layer.getLayers().forEach(layer => this.unregisterLayer_(layer));\n\n  } else {\n\n    // Close disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach((disclaimer) => {\n        this.closeDisclaimerMessage_(disclaimer);\n      });\n    }\n  }\n\n};\n\n\nexports.Controller_.prototype.$onDestroy = function() {\n  this.unregisterLayer_(this.dataLayerGroup_);\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.showDisclaimerMessage_ = function(msg) {\n  msg = this.gettextCatalog_.getString(msg);\n  if (this.external) {\n    if (this.msgs_.indexOf(msg) < 0) {\n      this.msgs_.push(msg);\n    }\n    this.msg = `${this.sce_.trustAsHtml(this.msgs_.join('<br />'))}`;\n    this.visibility = true;\n  } else {\n    this.disclaimer_.alert({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.closeDisclaimerMessage_ = function(msg) {\n  msg = this.gettextCatalog_.getString(msg);\n  if (this.external) {\n    this.visibility = false;\n    this.msgs_.length = 0;\n    this.msg = '';\n  } else {\n    this.disclaimer_.close({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * Provide a \"disclaimer\" component for GeoMapFish that is bound to the\n * layers added and removed from a map.\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\">\n *      </gmf-disclaimer>\n *\n * You can also display the disclaimer messages in popups or use them in another\n * context. The example below show you how to display the disclaimer messages\n * in a ngeo-modal window (external case).\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\"\n *        gmf-disclaimer-external=\"::true\"\n *        gmf-disclaimer-external-msg=\"disclaimerMsg\"\n *        gmf-disclaimer-external-visibility=\"disclaimerVisibility\">\n *      </gmf-disclaimer>\n *      <ngeo-modal ng-model=\"disclaimerVisibility\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *       </div>\n *       <div class=\"modal-body\">\n *         <div ng-bind-html=\"disclaimerMsg\"></div>\n *       </div>\n *     </ngeo-modal>\n *\n * @htmlAttribute {boolean} gmf-disclaimer-popup Whether to show the disclaimer\n *     messages in popups or not. Defaults to `false`.\n * @htmlAttribute {boolean?} gmf-disclaimer-external Whether to use disclaimer\n *     messages elsewhere or not. Default to `false`. If true, you should use\n *     the gmf-disclaimer-external-msg and the\n *     gmf-disclaimer-external-visibility too.\n * @htmlAttribute {boolean?} gmf-disclaimer-external-visibility variable that\n *     will be set to true if the disclaimers contain a new message. To uses it,\n *     you must set the gmf-disclaimer-external to true.\n * @htmlAttribute {string?} gmf-disclaimer-external-msg variable that will\n *     contains the disclaimer messages. To uses it, you must set the\n *     gmf-disclaimer-external to true.\n * @htmlAttribute {ol.Map=} gmf-disclaimer-map The map.\n *\n * @ngdoc component\n * @ngname gmfDisclaimer\n */\nexports.component_ = {\n  controller: exports.Controller_,\n  bindings: {\n    'popup': '<?gmfDisclaimerPopup',\n    'map': '=gmfDisclaimerMap',\n    'external': '<?gmfDisclaimerExternal',\n    'visibility': '=?gmfDisclaimerExternalVisibility',\n    'msg': '=?gmfDisclaimerExternalMsg'\n  }\n};\n\n\nexports.component('gmfDisclaimer', exports.component_);\n\n\nexport default exports;\n","/**\n * @module gmf.filters.SavedFilters\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * The GeoMapFish service responsible of storing filters that can be applied\n   * to data sources. A filter consists of:\n   *\n   * - a condition\n   * - a list of directed rules\n   * - a list of custom rules\n   * - a data source\n   * - a name\n   *\n   * The filters are saved in the browser local storage, if available.\n   * Otherwise, they are kept in this service for the duration of the visit.\n   *\n   * @param {!angular.Scope} $rootScope Angular rootScope.\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfSavedFilters\n   */\n  constructor($rootScope) {\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * This service can have a data source id bound to it, which automatically\n     * populates an array of items that are only bound to this data source.\n     * @type {?number}\n     * @private\n     */\n    this.currentDataSourceId_ = null;\n\n    /**\n     * @type {!Array.<!gmf.filters.SavedFilters.Item>}\n     * @private\n     */\n    this.currentDataSourceItems_ = [];\n\n    /**\n     * The used by this service to save in the local storage.\n     * @type {string}\n     * @private\n     */\n    this.localStorageKey_ = 'gmf_savedfilters';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.useLocalStorage_ = true;\n\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n\n    /**\n     * @type {!Array.<!gmf.filters.SavedFilters.Item>}\n     * @private\n     */\n    this.items_ = [];\n\n    this.rootScope_.$watchCollection(\n      () => this.items,\n      () => {\n        this.rePopulateCurrentDataSourceItems_();\n      }\n    );\n\n    if (this.useLocalStorage_) {\n      this.loadItemsFromLocalStorage_();\n    }\n\n  }\n\n  /**\n   * @return {!Array.<!gmf.filters.SavedFilters.Item>} Items\n   * @export\n   */\n  get currentDataSourceItems() {\n    return this.currentDataSourceItems_;\n  }\n\n  /**\n   * @param {?number} id Current data source id.\n   * @export\n   */\n  set currentDataSourceId(id) {\n    this.currentDataSourceId_ = id;\n    this.rePopulateCurrentDataSourceItems_();\n  }\n\n  /**\n   * @return {!Array.<!gmf.filters.SavedFilters.Item>} Items\n   * @export\n   */\n  get items() {\n    return this.items_;\n  }\n\n  /**\n   * Read the filter items that are saved in the local storage and set them\n   * as this service's items.\n   * @private\n   */\n  loadItemsFromLocalStorage_() {\n    if (window.localStorage[this.localStorageKey_]) {\n      const items = JSON.parse(window.localStorage[this.localStorageKey_]);\n      googAsserts.assertArray(items);\n      this.items_ = items;\n    }\n  }\n\n  /**\n   * Search for an item using a given name and data source id. Returns the\n   * index if it exists, otherwise -1 is returned.\n   * @param {string} name Name.\n   * @param {number} id Data source id.\n   * @return {number} The index of the item, if it exists.\n   * @export\n   */\n  indexOfItem(name, id) {\n\n    let item;\n    let idx = -1;\n    for (let i = 0, ii = this.items_.length; i < ii; i++) {\n      item = this.items[i];\n      if (item.dataSourceId === id && item.name === name) {\n        idx = i;\n        break;\n      }\n    }\n\n    return idx;\n  }\n\n  /**\n   * @param {!gmf.filters.SavedFilters.Item} item Item.\n   * @export\n   */\n  save(item) {\n\n    // (1) Add or replace item\n    const idx = this.indexOfItem(item.name, item.dataSourceId);\n    if (idx !== -1) {\n      this.items[idx] = item;\n    } else {\n      this.items.push(item);\n    }\n\n    // (2) Update local storage\n    if (this.useLocalStorage_) {\n      this.saveItemsInLocalStorage_();\n    }\n  }\n\n  /**\n   * @param {!gmf.filters.SavedFilters.Item} item Item.\n   * @export\n   */\n  remove(item) {\n\n    // (1) Remove the item\n    const found = olArray.remove(this.items, item);\n\n    // (2) Update local storage\n    if (found && this.useLocalStorage_) {\n      this.saveItemsInLocalStorage_();\n    }\n  }\n\n  /**\n   * Save all items in the local storage.\n   * @private\n   */\n  saveItemsInLocalStorage_() {\n    window.localStorage[this.localStorageKey_] = JSON.stringify(this.items);\n  }\n\n  /**\n   * @private\n   */\n  rePopulateCurrentDataSourceItems_() {\n    // (1) Clear existing items\n    this.currentDataSourceItems_.length = 0;\n\n    // (2) Populate\n    if (this.currentDataSourceId_ !== null) {\n      for (const item of this.items) {\n        if (item.dataSourceId === this.currentDataSourceId_) {\n          this.currentDataSourceItems_.push(item);\n        }\n      }\n    }\n  }\n\n};\n\n\nexports.module = angular.module('gmfSavedFilters', []);\n\nexports.module.service('gmfSavedFilters', exports);\n\n\n/**\n * The definition of a saved filter item.\n * @constructor\n * @struct\n * @export\n */\nexports.Item = function() {};\n\n\n/**\n * The condition of the saved filter item.\n * @type {string}\n * @export\n */\nexports.Item.prototype.condition;\n\n\n/**\n * The list of custom rules of the saved filter item.\n * @type {!Array.<!ngeox.rule.AnyOptions>}\n * @export\n */\nexports.Item.prototype.customRules;\n\n\n/**\n * The data source id related to the filter.\n * @type {number}\n * @export\n */\nexports.Item.prototype.dataSourceId;\n\n\n/**\n * The list of directed rules of the saved filter item.\n * @type {!Array.<!ngeox.rule.AnyOptions>}\n * @export\n */\nexports.Item.prototype.directedRules;\n\n\n/**\n * A human-readable name given to the saved filter item.\n * @type {string}\n * @export\n */\nexports.Item.prototype.name;\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.ruleComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMenu from 'ngeo/Menu.js';\nimport ngeoDrawComponent from 'ngeo/draw/component.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionModify from 'ngeo/interaction/Modify.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDatepickerComponent from 'ngeo/misc/datepickerComponent.js';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olArray from 'ol/array.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoRule', [\n  ngeoDrawComponent.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoMapFeatureOverlay.module.name,\n  ngeoMiscDatepickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/filter/rulecomponent', require('./rulecomponent.html'));\n});\n\n\nexports.value('ngeoRuleTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoRuleTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/filter/rulecomponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoRuleTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoRuleTemplateUrl($attrs, ngeoRuleTemplateUrl) {\n  return ngeoRuleTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.RuleController_ = class {\n\n  /**\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate\n   *     manager service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoRuleController\n   */\n  constructor(gettextCatalog, $scope, $timeout, ngeoFeatureHelper,\n    ngeoRuleHelper, ngeoToolActivateMgr) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * The original rule.\n     * @type {!ngeo.rule.Rule}\n     * @export\n     */\n    this.rule;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // Injected properties\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.ToolActivateMgr}\n     * @private\n     */\n    this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n\n    // Inner properties\n\n    /**\n     * The cloned rule. Changes in the UI are applied to the clone 'on-the-fly'.\n     * Changes in the clone are applied back in the original rule when the\n     * apply button is clicked.\n     * @type {!ngeo.rule.Rule}\n     * @export\n     */\n    this.clone;\n\n    const operatorType = ngeoRuleRule.OperatorType;\n    const spatialOperatorType = ngeoRuleRule.SpatialOperatorType;\n    const temporalOperatorType = ngeoRuleRule.TemporalOperatorType;\n\n    /**\n     * @type {Object.<string, string>}\n     * @export\n     */\n    this.operators = {\n      [operatorType.EQUAL_TO]: gettextCatalog.getString('Is equal to'),\n      [operatorType.GREATER_THAN]: gettextCatalog.getString('Is greater than'),\n      [operatorType.GREATER_THAN_OR_EQUAL_TO]: gettextCatalog.getString(\n        'Is greater than or equal to'),\n      [operatorType.LESSER_THAN]: gettextCatalog.getString('Is lesser than'),\n      [operatorType.LESSER_THAN_OR_EQUAL_TO]: gettextCatalog.getString(\n        'Is lesser than or equal to'),\n      [operatorType.NOT_EQUAL_TO]: gettextCatalog.getString('Is not equal to'),\n      [operatorType.LIKE]: gettextCatalog.getString('Contains'),\n      [spatialOperatorType.CONTAINS]: gettextCatalog.getString('Contains'),\n      [spatialOperatorType.INTERSECTS]: gettextCatalog.getString('Intersects'),\n      [spatialOperatorType.WITHIN]: gettextCatalog.getString('Is inside of'),\n      [temporalOperatorType.BEGINS]: gettextCatalog.getString('Begins at'),\n      [temporalOperatorType.DURING]: gettextCatalog.getString('During'),\n      [temporalOperatorType.ENDS]: gettextCatalog.getString('Ends at'),\n      [temporalOperatorType.EQUALS]: gettextCatalog.getString('Is equal to')\n    };\n\n    /**\n     * @type {Object.<string, string>}\n     * @export\n     */\n    this.operatorsShortFormat = {\n      [operatorType.EQUAL_TO]: '=',\n      [operatorType.GREATER_THAN]: '>',\n      [operatorType.GREATER_THAN_OR_EQUAL_TO]: '>=',\n      [operatorType.LESSER_THAN]: '<',\n      [operatorType.LESSER_THAN_OR_EQUAL_TO]: '<=',\n      [operatorType.NOT_EQUAL_TO]: '!=',\n      [operatorType.LIKE]: '~',\n      [temporalOperatorType.BEGINS]: '>=',\n      [temporalOperatorType.ENDS]: '<=',\n      [temporalOperatorType.EQUALS]: '='\n    };\n\n    /**\n     * Time property used when the rule is of type 'date|datetime' and uses\n     * a range of date.\n     * @type {!ngeox.TimeProperty}\n     * @export\n     */\n    this.timeRangeMode = {\n      widget: 'datepicker',\n      maxValue: null,\n      minValue: null,\n      maxDefValue: this.createDate_(),\n      minDefValue: this.createWeekAgoDate_(),\n      mode: 'range',\n      interval: [0, 1, 0, 0]\n    };\n\n    /**\n     * Time property used when the rule is of type 'date|datetime' and uses\n     * a single date.\n     * @type {!ngeox.TimeProperty}\n     * @export\n     */\n    this.timeValueMode = {\n      widget: 'datepicker',\n      maxValue: null,\n      minValue: null,\n      maxDefValue: this.createDate_(),\n      minDefValue: this.createDate_(),\n      mode: 'value',\n      interval: [0, 1, 0, 0]\n    };\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @private\n     */\n    this.toolActivate_;// = new ngeo.misc.ToolActivate(this.rule, 'active');\n\n    /**\n     * @type {!Array.<Function>}\n     * @private\n     */\n    this.unlisteners_ = [];\n\n\n    // Inner properties when dealing with a `ngeo.rule.Geometry`\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.drawActive = false;\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.drawToolActivate = new ngeoMiscToolActivate(this, 'drawActive');\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @export\n     */\n    this.drawnFeatures = new olCollection();\n\n    /**\n     * @type {?ngeo.Menu}\n     * @private\n     */\n    this.menu_ = null;\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @export\n     */\n    this.selectedFeatures = new olCollection();\n\n    /**\n     * @type {!ol.Collection.<!ol.interaction.Interaction>}\n     * @private\n     */\n    this.interactions_ = new olCollection();\n\n    /**\n     * @type {!ngeo.interaction.Modify}\n     * @private\n     */\n    this.modify_ = new ngeoInteractionModify({\n      features: this.selectedFeatures,\n      style: ngeoFeatureHelper.getVertexStyle(false)\n    });\n    this.interactions_.push(this.modify_);\n\n    /**\n     * @type {ngeo.interaction.Rotate}\n     * @private\n     */\n    this.rotate_ = new ngeoInteractionRotate({\n      features: this.selectedFeatures,\n      style: new olStyleStyle({\n        text: new olStyleText({\n          text: '\\uf01e',\n          font: 'normal 18px FontAwesome',\n          fill: new olStyleFill({\n            color: '#7a7a7a'\n          })\n        })\n      })\n    });\n    this.interactions_.push(this.rotate_);\n\n    /**\n     * @type {ngeo.interaction.Translate}\n     * @private\n     */\n    this.translate_ = new ngeoInteractionTranslate({\n      features: this.selectedFeatures,\n      style: new olStyleStyle({\n        text: new olStyleText({\n          text: '\\uf047',\n          font: 'normal 18px FontAwesome',\n          fill: new olStyleFill({\n            color: '#7a7a7a'\n          })\n        })\n      })\n    });\n    this.interactions_.push(this.translate_);\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    this.initializeInteractions_();\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.modifyToolActivate = new ngeoMiscToolActivate(\n      this.modify_,\n      'active'\n    );\n\n    /**\n     * @type {ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.rotateToolActivate = new ngeoMiscToolActivate(\n      this.rotate_,\n      'active'\n    );\n\n    /**\n     * @type {ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.translateToolActivate = new ngeoMiscToolActivate(\n      this.translate_,\n      'active'\n    );\n\n    /**\n     * The geometry type used by the clone feature.\n     * @type {?string}\n     * @export\n     */\n    this.geomType = null;\n  }\n\n  /**\n   * Called on initialization of the controller.\n   *\n   * Clone the rule to be able to work with the clone directly.\n   */\n  $onInit() {\n    this.clone = this.ngeoRuleHelper_.cloneRule(this.rule);\n\n    this.toolActivate_ = new ngeoMiscToolActivate(this.rule, 'active');\n\n    this.ngeoToolActivateMgr_.registerTool(\n      this.toolGroup, this.toolActivate_);\n\n    this.scope_.$watch(\n      () => this.rule.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    // If the rule is a DATE or DATETIME, then a datepicker directive is used.\n    // It is not possible to set the current values to the datepicker, but you\n    // can set the initial values. This is why it is created when the rule\n    // becomes active (see the partials/rule.html).\n    //\n    // This chunk of code ensures that the rule properties are synchronized\n    // with the TimeProperty objects required to build the datepickers.\n    if (this.clone.type === ngeoFormatAttributeType.DATE ||\n        this.clone.type === ngeoFormatAttributeType.DATETIME\n    ) {\n      // Watch 'expression'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.getExpression(),\n        (newVal) => {\n          this.timeValueMode.minValue = newVal;\n        }\n      ));\n      // Watch 'lowerBoundary'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.lowerBoundary,\n        (newVal) => {\n          this.timeRangeMode.minValue = newVal;\n        }\n      ));\n      // Watch 'upperBoundary'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.upperBoundary,\n        (newVal) => {\n          this.timeRangeMode.maxValue = newVal;\n        }\n      ));\n    } else if (this.clone.type === ngeoFormatAttributeType.GEOMETRY) {\n\n      // Watch 'operator' of clone. Make sure any existing geometry is\n      // supported by the newly selected operator. If it doesn't, reset\n      // the expression, i.e. geometry.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.operator,\n        (newVal) => {\n          if (newVal &&\n              newVal === ngeoRuleRule.SpatialOperatorType.CONTAINS\n          ) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            const geometry = clone.feature.getGeometry();\n            if (geometry) {\n              const geomType = this.ngeoFeatureHelper_.getType(clone.feature);\n              const supportedTypes = [\n                ngeoGeometryType.CIRCLE,\n                ngeoGeometryType.POLYGON,\n                ngeoGeometryType.RECTANGLE\n              ];\n              if (!olArray.includes(supportedTypes, geomType)) {\n                this.clone.setExpression(null);\n              }\n            }\n          }\n        }\n      ));\n\n      // Watch 'expression' of clone. Set 'geomType' property accordingly.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.expression,\n        (newVal) => {\n          if (newVal) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            this.geomType = this.ngeoFeatureHelper_.getType(clone.feature);\n          } else {\n            this.geomType = null;\n          }\n        }\n      ));\n\n      // Watch both 'expression', 'active' and the modify control to be all\n      // thruthy. When that's the case, the clone feature is added to the\n      // selection collection.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => {\n          const hasExpression = this.clone.getExpression() !== null;\n          const isActive = this.rule.active === true;\n          const editToolIsActive = this.modify_.getActive() ||\n                this.rotate_.getActive() ||\n                this.translate_.getActive();\n          return hasExpression && isActive && editToolIsActive;\n        },\n        (newVal) => {\n          if (newVal) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            this.selectedFeatures.push(clone.feature);\n          } else {\n            this.selectedFeatures.clear();\n          }\n        }\n      ));\n    }\n  }\n\n  /**\n   * Called on destruction of the controller.\n   */\n  $onDestroy() {\n    if (this.rule.active) {\n      this.rule.active = false;\n      // in $onDestroy, setting active to false will not call the handler. Call\n      // it manually to let it do its magic\n      this.handleActiveChange_(false, true);\n    }\n    this.ngeoToolActivateMgr_.unregisterTool(\n      this.toolGroup, this.toolActivate_);\n    for (let i = 0, ii = this.unlisteners_.length; i < ii; i++) {\n      this.unlisteners_[i]();\n    }\n    this.unlisteners_.length = 0;\n    this.clone.destroy();\n  }\n\n  /**\n   * @export\n   */\n  toggle() {\n    if (this.rule.active) {\n      this.cancel();\n    } else {\n      this.rule.active = true;\n    }\n  }\n\n  /**\n   * Apply the changes that were made in the original rule.\n   * @export\n   */\n  apply() {\n    this.ngeoRuleHelper_.extendRule(this.clone, this.rule);\n    this.rule.active = false;\n  }\n\n  /**\n   * Revert the changes that were made in the clone rule.\n   * @export\n   */\n  cancel() {\n    this.ngeoRuleHelper_.extendRule(this.rule, this.clone);\n    this.rule.active = false;\n  }\n\n  /**\n   * Reset both original and clone rules.\n   * @export\n   */\n  reset() {\n    this.clone.reset();\n    this.rule.reset();\n  }\n\n  /**\n   * Called when a choice is clicked, when using a `ngeo.rule.Select` rule type.\n   * Add/remove the choice to/from the `expression` of the rule.\n   * @param {string|number} choice Choice that has been clicked.\n   * @export\n   */\n  toggleChoiceSelection(choice) {\n    const rule = googAsserts.assertInstanceof(this.clone, ngeoRuleSelect);\n    const choices = rule.getExpression() ? rule.getExpression().split(',') : [];\n    const idx = choices.indexOf(choice);\n    if (idx > -1) {\n      choices.splice(idx, 1);\n    } else {\n      choices.push(choice);\n    }\n    rule.setExpression(choices.length ? choices.join(',') : null);\n  }\n\n\n  /**\n   * @param {Object} date Date\n   * @export\n   */\n  onDateSelected(date) {\n    this.clone.setExpression(date['start']);\n  }\n\n  /**\n   * @param {Object} date Date\n   * @export\n   */\n  onDateRangeSelected(date) {\n    this.clone.lowerBoundary = date['start'];\n    this.clone.upperBoundary = date['end'];\n  }\n\n  /**\n   * @param {number=} opt_timeDelta Time delta to go back in the past.\n   * @return {string} ISO string of the date\n   * @private\n   */\n  createDate_(opt_timeDelta) {\n\n    const date = new Date();\n\n    if (opt_timeDelta !== undefined) {\n      const time = date.getTime() - opt_timeDelta;\n      date.setTime(time);\n    }\n\n    return date.toISOString();\n  }\n\n  /**\n   * @return {string} ISO string of the date\n   * @private\n   */\n  createWeekAgoDate_() {\n    return this.createDate_(1000 * 60 * 60 * 24 * 7); // A week ago date\n  }\n\n  /**\n   * @param {number} time Time.\n   * @return {string} Date\n   * @export\n   */\n  timeToDate(time) {\n    const date = new Date(time);\n    return date.toLocaleDateString();\n  }\n\n\n  // === Methods used when bound to a `ngeo.rule.Geometry`\n\n\n  /**\n   * Called when the active property of a rule changes. Only used when this\n   * component is bound to a geometry rule.\n   *\n   * Manage the activation/deactivation of the interactions.\n   *\n   * @param {boolean} active Whether the rule is active or not.\n   * @param {boolean} oldActive Whether the rule was active or not.\n   * @private\n   */\n  handleActiveChange_(active, oldActive) {\n\n    if (!(this.rule instanceof ngeoRuleGeometry) ||\n        !(this.clone instanceof ngeoRuleGeometry) ||\n        active === oldActive\n    ) {\n      return;\n    }\n\n    const keys = this.listenerKeys_;\n    const uid = ['ngeo-rule-', olBase.getUid(this)].join('-');\n    const toolMgr = this.ngeoToolActivateMgr_;\n\n    const ruleFeature = this.rule.feature;\n    const cloneFeature = this.clone.feature;\n\n    const mapDiv = this.map.getViewport();\n    googAsserts.assertElement(mapDiv);\n\n    if (active) {\n      keys.push(\n        olEvents.listen(\n          this.drawnFeatures,\n          'add',\n          this.handleFeaturesAdd_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          mapDiv,\n          'contextmenu',\n          this.handleMapContextMenu_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          this.translate_,\n          'translateend',\n          this.handleTranslateEnd_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          this.rotate_,\n          'rotateend',\n          this.handleRotateEnd_,\n          this\n        )\n      );\n\n      this.featureOverlay.removeFeature(ruleFeature);\n      this.featureOverlay.addFeature(cloneFeature);\n\n      this.registerInteractions_();\n\n      toolMgr.registerTool(uid, this.drawToolActivate, false);\n      toolMgr.registerTool(uid, this.modifyToolActivate, true);\n      toolMgr.registerTool(uid, this.rotateToolActivate, false);\n      toolMgr.registerTool(uid, this.translateToolActivate, false);\n\n      this.modify_.setActive(true);\n\n      if (cloneFeature.getGeometry()) {\n        this.ngeoFeatureHelper_.setStyle(cloneFeature, true);\n      }\n\n    } else {\n      cloneFeature.setStyle(null);\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n\n      this.drawActive = false;\n\n      toolMgr.unregisterTool(uid, this.drawToolActivate);\n      toolMgr.unregisterTool(uid, this.modifyToolActivate);\n      toolMgr.unregisterTool(uid, this.rotateToolActivate);\n      toolMgr.unregisterTool(uid, this.translateToolActivate);\n\n      this.modify_.setActive(false);\n\n      this.unregisterInteractions_();\n\n      if (this.selectedFeatures.getLength()) {\n        this.featureOverlay.removeFeature(cloneFeature);\n      }\n      this.featureOverlay.addFeature(ruleFeature);\n\n      this.selectedFeatures.clear();\n    }\n  }\n\n  /**\n   * Initialize interactions by setting them inactive and decorating them\n   * @private\n   */\n  initializeInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      interaction.setActive(false);\n      ngeoMiscDecorate.interaction(interaction);\n    });\n  }\n\n  /**\n   * Register interactions by adding them to the map\n   * @private\n   */\n  registerInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      this.map.addInteraction(interaction);\n    });\n  }\n\n  /**\n   * Register interactions by removing them to the map\n   * @private\n   */\n  unregisterInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      this.map.removeInteraction(interaction);\n    });\n  }\n\n  /**\n   * @param {ol.Collection.Event} evt Event.\n   * @private\n   */\n  handleFeaturesAdd_(evt) {\n    // timeout to prevent double-click to zoom the map\n    this.timeout_(() => {\n\n      const clone = googAsserts.assertInstanceof(\n        this.clone, ngeoRuleGeometry);\n      const feature = clone.feature;\n\n      // (1) Apply geometry\n      const drawnFeature = googAsserts.assertInstanceof(\n        evt.element,\n        olFeature\n      );\n      const geometry = googAsserts.assertInstanceof(\n        drawnFeature.getGeometry(),\n        olGeomGeometry\n      );\n      clone.geometry = geometry;\n\n      // (2) Deactivate draw tools\n      this.drawActive = false;\n\n      // (3) Set properties, then style\n      const properties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        drawnFeature);\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(feature);\n      feature.setProperties(properties);\n      this.ngeoFeatureHelper_.setStyle(feature, true);\n\n      this.scope_.$apply();\n    });\n  }\n\n  /**\n   * Return the type of geometry used by the rule feature. Used in the template.\n   * @return {string} Geometry type.\n   * @export\n   */\n  getRuleGeometryType() {\n    const rule = googAsserts.assertInstanceof(this.rule, ngeoRuleGeometry);\n    return this.ngeoFeatureHelper_.getType(rule.feature);\n  }\n\n  /**\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleMapContextMenu_(evt) {\n\n    // (1) Remove previous menu, if any\n    this.removeMenu_();\n\n    // (2) Get feature at pixel\n    const pixel = this.map.getEventPixel(evt);\n    const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n    let feature = this.map.forEachFeatureAtPixel(\n      pixel,\n      (feature) => {\n        let ret = false;\n        if (olArray.includes(this.selectedFeatures.getArray(), feature)) {\n          ret = feature;\n        }\n        return ret;\n      }\n    );\n\n    feature = feature ? feature : null;\n\n    // (3) If the clicked feature is the selected one, plus if it has a certain\n    //     type of geometry, then show the menu\n    const actions = [];\n    if (feature) {\n\n      const type = this.ngeoFeatureHelper_.getType(feature);\n      const  gettextCatalog = this.gettextCatalog_;\n\n      if (type == ngeoGeometryType.CIRCLE ||\n          type == ngeoGeometryType.LINE_STRING ||\n          type == ngeoGeometryType.POLYGON ||\n          type == ngeoGeometryType.RECTANGLE) {\n        actions.push({\n          cls: 'fa fa-arrows',\n          label: gettextCatalog.getString('Move'),\n          name: 'move'\n        });\n      }\n      if (type == ngeoGeometryType.LINE_STRING ||\n          type == ngeoGeometryType.POLYGON ||\n          type == ngeoGeometryType.RECTANGLE) {\n        actions.push({\n          cls: 'fa fa-rotate-right',\n          label: gettextCatalog.getString('Rotate'),\n          name: 'rotate'\n        });\n      }\n    }\n\n    if (actions.length) {\n      // (4) Create and show menu\n      this.menu_ = new ngeoMenu({\n        actions\n      });\n\n      olEvents.listen(\n        this.menu_,\n        'actionclick',\n        this.handleMenuActionClick_,\n        this\n      );\n      this.map.addOverlay(this.menu_);\n\n      this.menu_.open(coordinate);\n\n      evt.preventDefault();\n      evt.stopPropagation();\n\n      this.scope_.$apply();\n    }\n  }\n\n  /**\n   * Remove contextual menu, if any.\n   * @private\n   */\n  removeMenu_() {\n    if (this.menu_) {\n      olEvents.unlisten(\n        this.menu_,\n        'actionclick',\n        this.handleMenuActionClick_,\n        this\n      );\n      this.map.removeOverlay(this.menu_);\n      this.menu_ = null;\n    }\n  }\n\n  /**\n   * @param {ngeox.MenuEvent} evt Event.\n   * @private\n   */\n  handleMenuActionClick_(evt) {\n    const action = evt.detail.action;\n\n    switch (action) {\n      case 'move':\n        this.translate_.setActive(true);\n        this.scope_.$apply();\n        break;\n      case 'rotate':\n        this.rotate_.setActive(true);\n        this.scope_.$apply();\n        break;\n      default:\n        console.log(`FIXME - support: ${action}`);\n        break;\n    }\n  }\n\n  /**\n   * @param {ngeox.RotateEvent} evt Event.\n   * @private\n   */\n  handleRotateEnd_(evt) {\n    this.rotate_.setActive(false);\n    this.scope_.$apply();\n  }\n\n  /**\n   * @param {ol.interaction.Translate.Event} evt Event.\n   * @private\n   */\n  handleTranslateEnd_(evt) {\n    this.translate_.setActive(false);\n    this.scope_.$apply();\n  }\n\n};\n\n\n/**\n * The rule component is bound to a `ngeo.rule.Rule` object and shows UI\n * components to be able to edit its properties, such as: operator, expression,\n * etc. The actual properties depend on the type of rule.\n *\n * Also, changes are not made on-the-fly. A button must be clicked for the\n * changes to be applied to the rule.\n */\nexports.component('ngeoRule', {\n  bindings: {\n    'featureOverlay': '<',\n    'map': '<',\n    'rule': '<',\n    'toolGroup': '<'\n  },\n  controller: exports.RuleController_,\n  templateUrl: ngeoRuleTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleComponent from 'ngeo/filter/ruleComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFilter', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoFilterRuleComponent.name,\n  ngeoMapFeatureOverlay.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/filter', require('./component.html'));\n});\n\n\nexports.value('ngeoFilterTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoFilterTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/filter';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoFilterTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoFilterTemplateUrl($attrs, ngeoFilterTemplateUrl) {\n  return ngeoFilterTemplateUrl($attrs);\n}\n\n\nexports.component('ngeoFilter', {\n  bindings: {\n    'aRuleIsActive': '=',\n    'customRules': '<',\n    // It's 'datasource' instead of 'dataSource', because that would require\n    // the attribute to be 'data-source', and Angular strips the 'data-'.\n    'datasource': '<',\n    'directedRules': '<',\n    'featureOverlay': '<',\n    'map': '<',\n    'toolGroup': '<'\n  },\n  controller: 'ngeoFilterController',\n  templateUrl: ngeoFilterTemplateUrl\n});\n\n/**\n * @private\n */\nexports.FilterController_ = class {\n\n  /**\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoFilterController\n   */\n  constructor(gettextCatalog, $scope, $timeout, ngeoMapQuerent,\n    ngeoRuleHelper) {\n\n    // === Binding properties ===\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.aRuleIsActive;\n\n    /**\n     * @type {Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.customRules;\n\n    /**\n     * @type {!ngeo.datasource.OGC}\n     * @export\n     */\n    this.datasource;\n\n    /**\n     * @type {Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.directedRules;\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!ngeo.query.MapQuerent}\n     * @private\n     */\n    this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * @type {Array.<!ngeox.FilterCondition>}\n     * @export\n     */\n    this.conditions = [\n      {\n        text: gettextCatalog.getString('All'),\n        value: ngeoFilterCondition.AND\n      },\n      {\n        text: gettextCatalog.getString('At least one'),\n        value: ngeoFilterCondition.OR\n      },\n      {\n        text: gettextCatalog.getString('None'),\n        value: ngeoFilterCondition.NOT\n      }\n    ];\n\n    /**\n     * List of geometry attributes.\n     * @type {Array.<!ngeox.Attribute>}\n     * @export\n     */\n    this.geometryAttributes = [];\n\n    /**\n     * List of other attribute names.\n     * @type {Array.<!ngeox.Attribute>}\n     * @export\n     */\n    this.otherAttributes = [];\n\n    /**\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.ruleUnlisteners_ = {};\n  }\n\n\n  /**\n   * Called on initialization of the controller.\n   *\n   * Loop through the attributes of the data source and separated them in 2\n   * lists: geometry and the others. Then, apply the filters to the data source.\n   */\n  $onInit() {\n\n    this.scope_.$watch(\n      () => this.aRuleIsActive,\n      this.handleARuleIsActiveChange_.bind(this)\n    );\n\n    // (1) Separate the attributes in 2: geometry and the others.\n    const attributes = googAsserts.assert(this.datasource.attributes);\n    for (const attribute of attributes) {\n      if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n        this.geometryAttributes.push(attribute);\n      } else {\n        this.otherAttributes.push(attribute);\n      }\n    }\n\n    // (2) All rules that have geometry are added in the featureOverlay\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      this.registerRule_(rule);\n    }\n\n    // (3) Apply the filters\n    this.apply();\n  }\n\n\n  /**\n   * Called on destruction of the controller.\n   *\n   * Reset the `filterRules` of the data source back to `null`.\n   * Clear the feature overlay.\n   */\n  $onDestroy() {\n    if (this.datasource.filterRules !== null) {\n      this.datasource.filterRules = null;\n    }\n    this.featureOverlay.clear();\n  }\n\n\n  /**\n   * @return {boolean} True if at least one rule is currently defined.\n   * @export\n   */\n  hasARule() {\n    return [].concat(this.customRules, this.directedRules).length > 0;\n  }\n\n\n  /**\n   * Loop in all directed and custom rules. Apply the rules that have a proper\n   * value inside the data source, in the `filterRules` property.\n   * @export\n   */\n  apply() {\n    // (1) Reset\n    this.datasource.filterRules = null;\n\n    // (2) Then set if there are filter rules with value.\n    this.timeout_(() => {\n      const filterRules = this.getRulesWithValue_();\n      if (filterRules.length) {\n        this.datasource.filterRules = filterRules;\n        // The current query results are cleared when we apply a filter.\n        this.ngeoMapQuerent_.clear();\n      }\n    });\n  }\n\n\n  /**\n   * Loop in all directed and custom rules. Issue a request to obtain the data\n   * and show the result.\n   * @export\n   */\n  getData() {\n    const filterRules = this.getRulesWithValue_();\n\n    // No need to do anything if there's no rules.\n    if (!filterRules.length) {\n      return;\n    }\n\n    const dataSource = this.datasource;\n    const limit = 1000;\n    const map = this.map;\n    const projCode = map.getView().getProjection().getCode();\n    const filter = this.ngeoRuleHelper_.createFilter({\n      dataSource: dataSource,\n      filterRules: filterRules,\n      srsName: projCode\n    });\n    googAsserts.assert(filter);\n\n    this.ngeoMapQuerent_.issue({\n      dataSources: [dataSource],\n      filter: filter,\n      limit: limit,\n      map: map\n    });\n  }\n\n\n  /**\n   * Loop in all directed and custom rules and collect those with a value.\n   * @return {Array.<!ngeo.rule.Rule>} Rules with value.\n   * @private\n   */\n  getRulesWithValue_() {\n    const filterRules = [];\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.value) {\n        filterRules.push(rule);\n      }\n    }\n    return filterRules;\n  }\n\n\n  /**\n   * Create and add a new custom rule using an attribute. The rule is activated\n   * after being created.\n   * @param {!ngeox.Attribute} attribute Attribute to use to create the custom\n   * rule.\n   * @export\n   */\n  createAndAddCustomRule(attribute) {\n    const rule = this.ngeoRuleHelper_.createRuleFromAttribute(attribute, true);\n    this.registerRule_(rule);\n    this.customRules.push(rule);\n\n    // Activate asynchronously allows the toolActivate manager to do its magic,\n    this.timeout_(() => {\n      rule.active = true;\n    }, 1);\n  }\n\n\n  /**\n   * @param {!ngeox.FilterCondition} condition Condition to set.\n   * @export\n   */\n  setCondition(condition) {\n    if (this.datasource.filterCondition !== condition.value) {\n      this.datasource.filterCondition = condition.value;\n    }\n  }\n\n  /**\n   * Remove a custom rule. Deactivate it first, then give time to the\n   * `ngeo-rule` directive to manage the deactivation of the rule.\n   * @param {!ngeo.rule.Rule} rule Custom rule to remove.\n   * @export\n   */\n  removeCustomRule(rule) {\n    rule.active = false;\n    this.timeout_(() => {\n      olArray.remove(this.customRules, rule);\n      this.unregisterRule_(rule);\n      rule.destroy();\n    });\n  }\n\n  /**\n   * @param {!ngeo.rule.Rule} rule Rule.\n   * @export\n   */\n  registerRule_(rule) {\n    const uid = olBase.getUid(rule);\n    this.ruleUnlisteners_[uid] = this.scope_.$watch(\n      () => rule.active,\n      this.handleRuleActiveChange_.bind(this)\n    );\n\n    if (rule instanceof ngeoRuleGeometry) {\n      this.featureOverlay.addFeature(rule.feature);\n    }\n  }\n\n  /**\n   * @param {!ngeo.rule.Rule} rule Rule.\n   * @export\n   */\n  unregisterRule_(rule) {\n    const uid = olBase.getUid(rule);\n    const unlistener = this.ruleUnlisteners_[uid];\n    googAsserts.assert(unlistener);\n    unlistener();\n    delete this.ruleUnlisteners_[uid];\n\n    if (rule instanceof ngeoRuleGeometry) {\n      this.featureOverlay.removeFeature(rule.feature);\n    }\n  }\n\n  /**\n   * Called when the active property of a rule changes. Set the `aRuleIsActive`\n   * property accordingly.\n   * @private\n   */\n  handleRuleActiveChange_() {\n    let aRuleIsActive = false;\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.active) {\n        aRuleIsActive = true;\n        break;\n      }\n    }\n    this.aRuleIsActive = aRuleIsActive;\n  }\n\n  /**\n   * Called when the `aRuleIsActive` property changes. Make sure that\n   * no rule is still active if the property is `false`.\n   * @private\n   */\n  handleARuleIsActiveChange_() {\n    if (this.aRuleIsActive) {\n      return;\n    }\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.active) {\n        rule.active = false;\n        break;\n      }\n    }\n  }\n\n};\n\nexports.controller('ngeoFilterController', exports.FilterController_);\n\n\nexport default exports;\n","/**\n * @module gmf.filters.filterselectorComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceHelper from 'gmf/datasource/Helper.js';\n\nimport gmfDatasourceOGC from 'gmf/datasource/OGC.js';\nimport gmfFiltersSavedFilters from 'gmf/filters/SavedFilters.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFilterComponent from 'ngeo/filter/component.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olArray from 'ol/array.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\nconst exports = angular.module('gmfFilterselector', [\n  gmfAuthenticationService.module.name,\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceHelper.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoMessageModalComponent.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoFilterComponent.name,\n  gmfFiltersSavedFilters.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/filters/filterselectorcomponent', require('./filterselectorcomponent.html'));\n});\n\nexports.value('gmfFilterselectorTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfFilterselectorTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/filters/filterselectorcomponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfFilterselectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfFilterselectorTemplateUrl($attrs, gmfFilterselectorTemplateUrl) {\n  return gmfFilterselectorTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n   *     The Gmf value service that determines the data source currently being\n   *     filtered.\n   * @param {gmf.datasource.Helper} gmfDataSourcesHelper Gmf data\n   *     sources helper service.\n   * @param {gmf.filters.SavedFilters} gmfSavedFilters Gmf saved filters service.\n   * @param {gmfx.User} gmfUser User.\n   * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n   * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo FeatureOverlay\n   *     manager\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfFilterselectorController\n   */\n  constructor($scope, $timeout, gettextCatalog, gmfDataSourceBeingFiltered,\n    gmfDataSourcesHelper, gmfSavedFilters, gmfUser, ngeoNotification,\n    ngeoFeatureOverlayMgr, ngeoRuleHelper\n  ) {\n\n    // Binding properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.active;\n\n    $scope.$watch(\n      () => this.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * The data source that can either be selected from the list or have\n     * its value set from an external source (for example: the layertree)\n     * and that requires to be ready before it can be filtered.\n     * @type {gmfx.datasource.DataSourceBeingFiltered}\n     * @export\n     */\n    this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n    $scope.$watch(\n      () => this.gmfDataSourceBeingFiltered.dataSource,\n      this.handleSelectedDataSourceChange_.bind(this)\n    );\n\n    /**\n     * @type {gmf.datasource.Helper}\n     * @private\n     */\n    this.gmfDataSourcesHelper_ = gmfDataSourcesHelper;\n\n    /**\n     * @type {gmf.filters.SavedFilters}\n     * @export\n     */\n    this.gmfSavedFilters = gmfSavedFilters;\n\n    // Close manage modal if the last item is removed.\n    $scope.$watchCollection(\n      () => this.gmfSavedFilters.currentDataSourceItems,\n      () => {\n        if (this.gmfSavedFilters.currentDataSourceItems.length === 0 &&\n           this.saveFilterManageModalShown) {\n          this.saveFilterManageModalShown = false;\n        }\n      }\n    );\n\n    /**\n     * @type {gmfx.User}\n     * @private\n     */\n    this.gmfUser_ = gmfUser;\n\n    $scope.$watch(\n      () => this.gmfUser_.functionalities,\n      this.handleGmfUserFunctionalitiesChange_.bind(this)\n    );\n\n    /**\n     * @type {ngeo.message.Notification}\n     * @private\n     */\n    this.ngeoNotification_ = ngeoNotification;\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay = googAsserts.assert(\n      ngeoFeatureOverlayMgr.getFeatureOverlay()\n    );\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n\n    // Inner properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.aRuleIsActive = false;\n\n    /**\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.customRules = null;\n\n    /**\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.directedRules = null;\n\n    /**\n     * @type {Array.<gmf.datasource.OGC>}\n     * @export\n     */\n    this.filtrableDataSources = [];\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.filtrableLayerNodeNames_ = null;\n\n    /**\n     * @type {gmfx.datasource.DataSources}\n     * @private\n     */\n    this.gmfDataSources_ = gmfDataSourcesHelper.collection;\n\n    /**\n     * @type {Array.<ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * The data source ready to be filtered, after it has been selected and\n     * prepared.\n     * @type {?gmf.datasource.OGC}\n     * @export\n     */\n    this.readyDataSource = null;\n\n    /**\n     * @type {!gmf.filters.filterselectorComponent.Controller_.RuleCache}\n     * @private\n     */\n    this.ruleCache_ = {};\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.saveFilterSaveModalShown = false;\n\n    // When the modal closes, reset name\n    $scope.$watch(\n      () => this.saveFilterSaveModalShown,\n      () => {\n        this.saveFilterName = '';\n      }\n    );\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.saveFilterName = '';\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.saveFilterManageModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.enableDataSourceRegistration_ = false;\n\n    $scope.$watch(\n      () => this.enableDataSourceRegistration_,\n      this.handleEnableDataSourceRegistrationChange_.bind(this)\n    );\n\n    /**\n     * The name of the data source that should be automatically selected\n     * by this component.\n     * @type {string|undefined}\n     * @private\n     */\n    this.defaultFiltrableDataSourceName_;\n\n    // Initialize the data sources registration\n    this.toggleDataSourceRegistration_();\n  }\n\n\n  /**\n   * @private\n   */\n  handleGmfUserFunctionalitiesChange_() {\n    const usrFunc = this.gmfUser_.functionalities;\n    if (usrFunc && usrFunc['filterable_layers']) {\n      this.filtrableLayerNodeNames_ = usrFunc['filterable_layers'];\n    } else {\n      this.filtrableLayerNodeNames_ = null;\n    }\n    if (usrFunc &&\n        usrFunc['preset_layer_filter'] &&\n        usrFunc['preset_layer_filter'][0]\n    ) {\n      this.defaultFiltrableDataSourceName_ = usrFunc['preset_layer_filter'][0];\n    } else {\n      this.defaultFiltrableDataSourceName_ = undefined;\n    }\n    this.toggleDataSourceRegistration_();\n  }\n\n\n  /**\n   * @private\n   */\n  toggleDataSourceRegistration_() {\n    const newDataSourceRegistration = !!this.filtrableLayerNodeNames_;\n    if (this.enableDataSourceRegistration_ !== newDataSourceRegistration) {\n      this.enableDataSourceRegistration_ = newDataSourceRegistration;\n    }\n  }\n\n\n  /**\n   * Called when the active property changes. Toggle data source registration.\n   * Also, when deactivated, deselect data source.\n   * @param {boolean} active Active.\n   * @private\n   */\n  handleActiveChange_(active) {\n    if (!active) {\n      this.aRuleIsActive = false;\n      this.timeout_(() => {\n        this.gmfDataSourceBeingFiltered.dataSource = null;\n      });\n    }\n  }\n\n\n  /**\n   * @param {boolean} register Whether register the data sources or not.\n   * @private\n   */\n  handleEnableDataSourceRegistrationChange_(register) {\n    const keys = this.listenerKeys_;\n\n    if (register) {\n      // Listen to data sources being added/removed\n      keys.push(\n        olEvents.listen(this.gmfDataSources_, 'add', this.handleDataSourcesAdd_, this),\n        olEvents.listen(this.gmfDataSources_, 'remove', this.handleDataSourcesRemove_, this)\n      );\n\n      // Manage the data sources that are already in the collection\n      this.gmfDataSources_.forEach(this.registerDataSource_, this);\n\n    } else {\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n\n      // Remove data sources that are in the collection\n      this.filtrableDataSources.length = 0;\n    }\n  }\n\n\n  /**\n   * Called when a data source is added to the collection of ngeo data sources.\n   * If the data source is 'valid', add it to the list of filtrable data\n   * sources.\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = evt.element;\n    if (dataSource instanceof gmfDatasourceOGC) {\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If the data source is 'valid', remove it from the list of\n   * filtrable data sources.\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (dataSource instanceof gmfDatasourceOGC) {\n      this.unregisterDataSource_(dataSource);\n    }\n  }\n\n\n  /**\n   * Register a data source if filtrable.  If it's the first time that the\n   * data source is about to be registered, then the `filtrable` property\n   * is set. Otherwise, it's used.\n   *\n   * @param {gmf.datasource.OGC} dataSource Data source\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    if (dataSource.filtrable === null) {\n      dataSource.filtrable = this.isDataSourceFiltrable_(dataSource);\n    }\n\n    if (dataSource.filtrable) {\n      this.filtrableDataSources.push(dataSource);\n\n      if (this.defaultFiltrableDataSourceName_ !== undefined &&\n          dataSource.name === this.defaultFiltrableDataSourceName_\n      ) {\n        this.gmfDataSourceBeingFiltered.dataSource = dataSource;\n      }\n    }\n  }\n\n\n  /**\n   * Unregister a data source if it's filtrable. Also, if it's the one\n   * that was currently selected, deselect it.\n   * @param {gmf.datasource.OGC} dataSource Data source\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    if (dataSource.filtrable) {\n      olArray.remove(this.filtrableDataSources, dataSource);\n\n      if (this.gmfDataSourceBeingFiltered.dataSource === dataSource) {\n        this.gmfDataSourceBeingFiltered.dataSource = null;\n      }\n    }\n  }\n\n\n  /**\n   * Determines whether the data source is valid for addition (or removal) to\n   * the list of filtrable data sources or not.\n   *\n   * To be filtrable, the data source must:\n   *\n   *  1) have its name in the list of filtrable layer node names\n   *  2) support WFS\n   *  3) have only one ogcLayers defined\n   *  4) the ogcLayer must be queryable\n   *\n   * If 1) is true but not any of the others, then the server has not been\n   * configured properly. In this case, a warning notification can be shown.\n   *\n   * @param {gmf.datasource.OGC} dataSource GMF data source object\n   * @param {boolean=} opt_notify Whether to show a warning notification or not\n   *     in case of a data source that has its name is in the list of\n   *     filtrable layer node names but it doesn't match the other requirements.\n   *     Defaults to `true.`\n   * @return {boolean} Whether the data source is valid to add to the list or\n   *     not.\n   * @private\n   */\n  isDataSourceFiltrable_(dataSource, opt_notify) {\n    let filtrable = true;\n    const gettext = this.gettextCatalog_;\n    const notify = opt_notify !== false;\n    const names = googAsserts.assert(this.filtrableLayerNodeNames_);\n    const msgs = [];\n\n    // (1) The name of the DS must be in list of filtrable layer node names\n    if (olArray.includes(names, dataSource.name)) {\n\n      // (2) The DS must support WFS\n      if (!dataSource.supportsWFS) {\n        msgs.push(gettext.getString(\n          'The data source doesn\\'t support WFS, which is required ' +\n          'to fetch the attributes to build the filter rules.'\n        ));\n      }\n\n      // (3) The DS must have only one ogcLayer\n      if (!dataSource.ogcLayers || !dataSource.ogcLayers.length) {\n        msgs.push(gettext.getString(\n          'The data source must have only 1 ogcLayer defined.'\n        ));\n      } else if (!dataSource.ogcLayers[0].queryable) {\n        // (4) The ogcLayer must be queryable\n        msgs.push(gettext.getString(\n          'The ogcLayer within the data source must be queryable.'\n        ));\n      }\n\n      filtrable = !msgs.length;\n\n      // Notify if the name is in list of filtrable layer node names but\n      // there are missing requirements.\n      if (notify && !filtrable) {\n        const p1 = gettext.getString(\n          `The following data source is marked as being filtrable,\n          but is missing some requirements: `\n        );\n        const p2 = `${dataSource.name} (${dataSource.id}).`;\n        const p3 = gettext.getString(\n          `Please, contact your administrator about this.\n          Here are the reasons: `\n        );\n        msgs.unshift(`${p1} ${p2} ${p3}`);\n        console.warn(msgs.join(' '));\n        this.ngeoNotification_.notify({\n          msg: msgs.join(' '),\n          type: ngeoMessageMessage.Type.WARNING\n        });\n      }\n    } else {\n      filtrable = false;\n    }\n\n    return filtrable;\n  }\n\n  /**\n   * @param {?gmf.datasource.OGC} dataSource Newly selected data source\n   *     object.\n   * @private\n   */\n  handleSelectedDataSourceChange_(dataSource) {\n\n    this.aRuleIsActive = false;\n    this.customRules = null;\n    this.directedRules = null;\n    this.readyDataSource = null;\n    this.gmfSavedFilters.currentDataSourceId = null;\n\n    // No need to do anything if no data source is selected\n    if (!dataSource) {\n      return;\n    }\n\n    // A data source has been selected. Make sure the component is active.\n    if (!this.active) {\n      this.active = true;\n    }\n\n    this.gmfDataSourcesHelper_.prepareFiltrableDataSource(\n      dataSource\n    ).then((dataSource) => {\n\n      // Data source is ready. Get any existing rules or create new ones from\n      // the attributes\n      let item = this.getRuleCacheItem_(dataSource);\n      if (!item) {\n        item = {\n          customRules: [],\n          directedRules: []\n        };\n        this.setRuleCacheItem_(dataSource, item);\n        if (dataSource.gmfLayer.metadata &&\n            dataSource.gmfLayer.metadata.directedFilterAttributes &&\n            dataSource.gmfLayer.metadata.directedFilterAttributes.length\n        ) {\n          const directedAttributes =\n              dataSource.gmfLayer.metadata.directedFilterAttributes;\n          const attributes = googAsserts.assert(dataSource.attributes);\n          for (const attribute of attributes) {\n            if (olArray.includes(directedAttributes, attribute.name)) {\n              item.directedRules.push(\n                this.ngeoRuleHelper_.createRuleFromAttribute(attribute)\n              );\n            }\n          }\n        }\n      }\n\n      this.customRules = item.customRules;\n      this.directedRules = item.directedRules;\n      this.readyDataSource = dataSource;\n      this.gmfSavedFilters.currentDataSourceId = dataSource.id;\n\n    });\n  }\n\n  /**\n   * @param {ngeo.datasource.DataSource} dataSource Data source.\n   * @return {?gmf.filters.filterselectorComponent.Controller_.RuleCacheItem} Rule cache item.\n   * @private\n   */\n  getRuleCacheItem_(dataSource) {\n    return this.ruleCache_[dataSource.id] || null;\n  }\n\n  /**\n   * @param {ngeo.datasource.DataSource} dataSource Data source.\n   * @param {gmf.filters.filterselectorComponent.Controller_.RuleCacheItem} item Rule cache item.\n   * @private\n   */\n  setRuleCacheItem_(dataSource, item) {\n    this.ruleCache_[dataSource.id] = item;\n  }\n\n  /**\n   * @export\n   */\n  saveFilterShowModal() {\n    this.saveFilterSaveModalShown = true;\n  }\n\n  /**\n   * @export\n   */\n  saveFilterSave() {\n\n    const name = this.saveFilterName;\n    const dataSource = googAsserts.assert(this.readyDataSource);\n    const dataSourceId = dataSource.id;\n    const alreadyExist = (this.gmfSavedFilters.indexOfItem(\n      name, dataSourceId) !== -1);\n    const condition = dataSource.filterCondition;\n\n    const msg = this.gettextCatalog_.getString(\n      `A filter with the same name already exists.\n      Do you want to overwrite it?`\n    );\n    if (!alreadyExist || confirm(msg)) {\n      // (1) Serialize the existing custom and directed rules\n      const customRules = this.customRules ?\n        this.ngeoRuleHelper_.serializeRules(this.customRules) : [];\n      const directedRules = this.directedRules ?\n        this.ngeoRuleHelper_.serializeRules(this.directedRules) : [];\n\n      // (2) Ask the service to save it\n      const item = /** @type {!gmf.filters.SavedFilters.Item} */ ({\n        condition,\n        customRules,\n        dataSourceId,\n        directedRules,\n        name\n      });\n      this.gmfSavedFilters.save(item);\n\n      // (3) Close popup, which resets the name\n      this.saveFilterSaveModalShown = false;\n    }\n  }\n\n  /**\n   * Load a saved filter item, replacing the current rules.\n   * @param {!gmf.filters.SavedFilters.Item} filterItem Filter item.\n   * @export\n   */\n  saveFilterLoadItem(filterItem) {\n\n    const dataSource = googAsserts.assert(this.readyDataSource);\n\n    // (1) Reset current rules\n    this.customRules = null;\n    this.directedRules = null;\n\n    const customRules = this.ngeoRuleHelper_.createRules(\n      filterItem.customRules);\n    const directedRules = this.ngeoRuleHelper_.createRules(\n      filterItem.directedRules);\n\n    // Timeout, which ensures the destruction of the previous filter component\n    // and the creation of a new one\n    this.timeout_(() => {\n      // (2) Set rules\n      this.customRules = customRules;\n      this.directedRules = directedRules;\n\n      // (3) Set condition\n      dataSource.filterCondition = filterItem.condition;\n\n      // (4) Update cache item\n      const cacheItem = googAsserts.assert(this.getRuleCacheItem_(dataSource));\n      cacheItem.customRules = customRules;\n      cacheItem.directedRules = directedRules;\n    });\n  }\n\n  /**\n   * @export\n   */\n  saveFilterManage() {\n    this.saveFilterManageModalShown = true;\n  }\n\n  /**\n   * Remove a saved filter item.\n   * @param {!gmf.filters.SavedFilters.Item} item Filter item.\n   * @export\n   */\n  saveFilterRemoveItem(item) {\n    this.gmfSavedFilters.remove(item);\n  }\n\n};\n\n\n/**\n * @typedef {Object.<number, !gmf.filters.filterselectorComponent.Controller_.RuleCacheItem>}\n */\nexports.Controller_.RuleCache;\n\n\n/**\n * @typedef {{\n *     customRules: (Array.<ngeo.rule.Rule>),\n *     directedRules: (Array.<ngeo.rule.Rule>)\n * }}\n */\nexports.Controller_.RuleCacheItem;\n\n\nexports.component('gmfFilterselector', {\n  bindings: {\n    active: '=',\n    map: '<',\n    toolGroup: '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfFilterselectorTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.filters.module\n */\nimport gmfFiltersFilterselectorComponent from 'gmf/filters/filterselectorComponent.js';\nimport gmfFiltersSavedFilters from 'gmf/filters/SavedFilters.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfFiltersModule', [\n  gmfFiltersFilterselectorComponent.name,\n  gmfFiltersSavedFilters.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.timeSliderComponent\n */\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\n\nimport 'jquery-ui/ui/widgets/slider.js';\nimport 'angular-ui-slider';\nimport './timeslider.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeTimeSliderComponent', [\n  ngeoMiscWMSTime.module.name,\n  'ui.slider',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree/timesliderComponent', require('./timesliderComponent.html'));\n});\n\n\n/**\n * Provide a directive to select a single date or a range of dates with a slider\n * Example:\n *\n *      <gmf-time-slider\n *          gmf-time-slider-time=\"{\n *            maxValue: '2013-12-31T00:00:00Z',\n *            minValue: '2006-01-01T00:00:00Z',\n *            mode: 'range'}\"\n *          gmf-time-slider-on-date-selected=\"ctrl.onDateSelected(time)\">\n *      </gmf-time-slider>\n *\n * @htmlAttribute {ngeox.TimeProperty} gmf-time-slider-time parameter for initialization.\n * @htmlAttribute {function()} gmf-time-slider-on-date-selected Expression evaluated after\n * date(s) changed\n * @param {angular.$timeout} $timeout angular timeout service\n * @param {angular.$filter} $filter angular filter service\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfTimeSlider\n */\nexports.directive_ = function($timeout, $filter) {\n  return {\n    scope: {\n      onDateSelected: '&gmfTimeSliderOnDateSelected',\n      time: '=gmfTimeSliderTime'\n    },\n    bindToController: true,\n    controller: 'gmfTimeSliderController as sliderCtrl',\n    restrict: 'AE',\n    templateUrl: 'gmf/layertree/timesliderComponent',\n    link: /** @type {!angular.LinkingFunctions} */ ({\n      pre: function preLink(scope, element, attrs, ctrl) {\n        ctrl.init();\n\n        ctrl.sliderOptions['stop'] = onSliderReleased_;\n        ctrl.sliderOptions['slide'] = computeDates_;\n\n        function onSliderReleased_(e, sliderUi) {\n          ctrl.onDateSelected({\n            time: computeDates_(e, sliderUi)\n          });\n          scope.$apply();\n        }\n\n        function computeDates_(e, sliderUi) {\n          let sDate, eDate, wmstime;\n          if (sliderUi.values) {\n            sDate = new Date(ctrl.getClosestValue_(sliderUi.values[0]));\n            eDate = new Date(ctrl.getClosestValue_(sliderUi.values[1]));\n            ctrl.dates = [sDate, eDate];\n            wmstime = {\n              start: sDate.getTime(),\n              end: eDate.getTime()\n            };\n          } else {\n            sDate = new Date(ctrl.getClosestValue_(sliderUi.value));\n            ctrl.dates = sDate;\n            wmstime = {\n              start: sDate.getTime()\n            };\n          }\n          scope.$apply();\n          return wmstime;\n        }\n      }\n    })\n  };\n};\n\n\nexports.directive('gmfTimeSlider', exports.directive_);\n\n\n/**\n * TimeSliderController - directive controller\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime WMSTime service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfTimeSliderController\n */\nexports.Controller_ = function($scope, ngeoWMSTime) {\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * Function called after date(s) changed/selected\n   * @function\n   * @export\n   */\n  this.onDateSelected;\n\n\n  /**\n   * A time object for directive initialization\n   * @type {ngeox.TimeProperty}\n   * @export\n   */\n  this.time;\n\n  /**\n   * If the component is used to select a date range\n   * @type {boolean}\n   * @export\n   */\n  this.isModeRange;\n\n  /**\n   * Minimal value of the slider (time in ms)\n   * @type {number}\n   * @export\n   */\n  this.minValue;\n\n  /**\n   * Maximal value of the slider (time in ms)\n   * @type {number}\n   * @export\n   */\n  this.maxValue;\n\n  /**\n   * Used when WMS time object has a property 'values' instead of an interval\n   * @type (?Array<number>)\n   */\n  this.timeValueList;\n\n  /**\n   * Default Slider options (used by ui-slider directive)\n   * @type {{\n   *  range : boolean,\n   *  min : number,\n   *  max : number\n   * }}\n   * @export\n   */\n  this.sliderOptions;\n\n  /**\n   * Model for the ui-slider directive (date in ms format)\n   * @type {Array.<number>|number}\n   * @export\n   */\n  this.dates;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  this.timeValueList = this.getTimeValueList_();\n\n  // Fetch the initial options for the component\n  const initialOptions_ = this.ngeoWMSTime_.getOptions(this.time);\n  this.isModeRange = this.time.mode === 'range';\n  this.minValue = initialOptions_.minDate;\n  this.maxValue = initialOptions_.maxDate;\n  this.dates = this.isModeRange ? [initialOptions_.values[0], initialOptions_.values[1]] :\n    initialOptions_.values;\n  this.sliderOptions = {\n    range: this.isModeRange,\n    min: this.minValue,\n    max: this.maxValue\n  };\n};\n\n/**\n * TimeSliderController.prototype.getTimeValueList_ - Get a list of time value instead\n * of using the wmstime interval as a list of possibles values\n * @private\n * @return {Array<number>}  - List of timestamp representing possible values\n */\nexports.Controller_.prototype.getTimeValueList_ = function() {\n  const wmsTime = this.time;\n  let timeValueList = null;\n  const minDate = new Date(this.minValue);\n  const maxDate = new Date(this.maxValue);\n\n  if (wmsTime.values) {\n    timeValueList = [];\n    wmsTime.values.forEach((date) => {\n      timeValueList.push(new Date(date).getTime());\n    });\n  } else {\n    const maxNbValues = 1024;\n    const endDate = new Date(minDate.getTime());\n    endDate.setFullYear(minDate.getFullYear() + maxNbValues * wmsTime.interval[0]);\n    endDate.setMonth(minDate.getMonth() + maxNbValues * wmsTime.interval[1],\n      minDate.getDate() + maxNbValues * wmsTime.interval[2]);\n    endDate.setSeconds(minDate.getSeconds() + maxNbValues * wmsTime.interval[3]);\n\n    if (endDate > maxDate) {\n      // Transform interval to a list of values when the number\n      // of values is below a threshold (maxNbValues)\n      timeValueList = [];\n      for (let i = 0; ; i++) {\n        const nextDate = new Date(minDate.getTime());\n        nextDate.setFullYear(minDate.getFullYear() + i * wmsTime.interval[0]);\n        nextDate.setMonth(minDate.getMonth() + i * wmsTime.interval[1],\n          minDate.getDate() + i * wmsTime.interval[2]);\n        nextDate.setSeconds(minDate.getSeconds() + i * wmsTime.interval[3]);\n        if (nextDate <= maxDate) {\n          timeValueList.push(nextDate.getTime());\n        } else {\n          break;\n        }\n      }\n    }\n  }\n  return timeValueList;\n};\n\n\n/**\n * Compute the closest available date from the given timestamp\n * @param  {number} timestamp selected datetime (in ms format)\n * @return {number} the closest available datetime (in ms format) from the timestamp\n * @private\n */\nexports.Controller_.prototype.getClosestValue_ = function(timestamp) {\n  if (timestamp <= this.minValue) {\n    return this.minValue;\n  }\n\n  if (timestamp >= this.maxValue) {\n    return this.maxValue;\n  }\n\n  if (this.timeValueList) {\n    // Time stops are defined as a list of values\n    let index;\n    let leftIndex = 0;\n    let rightIndex = this.timeValueList.length - 1;\n\n    while ((rightIndex - leftIndex) > 1) {\n      index = Math.floor((leftIndex + rightIndex) / 2);\n      if (this.timeValueList[index] >= timestamp) {\n        rightIndex = index;\n      } else {\n        leftIndex = index;\n      }\n    }\n\n    const leftDistance = Math.abs(this.timeValueList[leftIndex] - timestamp);\n    const rightDistance = Math.abs(this.timeValueList[rightIndex] - timestamp);\n\n    return this.timeValueList[leftDistance < rightDistance ? leftIndex : rightIndex];\n  } else {\n    // Time stops are defined by a start date plus an interval\n    const targetDate = new Date(timestamp);\n    const startDate = new Date(this.minValue);\n    let bestDate = new Date(this.minValue);\n    const maxDate = new Date(this.maxValue);\n    let bestDistance = Math.abs(targetDate - bestDate);\n\n    for (let i = 1; ; i++) {\n      // The start date should always be used as a reference\n      // because adding a month twice could differ from adding\n      // two months at once\n      const next = new Date(startDate.getTime());\n      next.setFullYear(startDate.getFullYear() + i * this.time.interval[0]);\n      next.setMonth(startDate.getMonth() + i *  this.time.interval[1],\n        startDate.getDate() + i * this.time.interval[2]);\n      next.setSeconds(startDate.getSeconds() + i * this.time.interval[3]);\n\n      if (next > maxDate) {\n        break;\n      }\n\n      const distance = Math.abs(targetDate - next);\n      if (distance <= bestDistance) {\n        bestDate = next;\n        bestDistance = distance;\n      } else {\n        break;\n      }\n    }\n\n    return bestDate.getTime();\n  }\n};\n\n\n/**\n * Format and localize time regarding a resolution.\n * @param {number} time (in ms format) timestamp to format and localize.\n * @return {string} Localized date string regarding the resolution.\n * @export\n */\nexports.Controller_.prototype.getLocalizedDate = function(time) {\n  return this.ngeoWMSTime_.formatTimeValue(time, this.time.resolution);\n};\n\n\nexports.controller('gmfTimeSliderController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.module\n */\nimport gmfLayertreeComponent from 'gmf/layertree/component.js';\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTimeSliderComponent from 'gmf/layertree/timeSliderComponent.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\n\nimport './common.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeModule', [\n  gmfLayertreeComponent.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTimeSliderComponent.name,\n  gmfLayertreeTreeManager.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.module\n */\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfPermalinkShareService from 'gmf/permalink/ShareService.js';\nimport gmfPermalinkShareComponent from 'gmf/permalink/shareComponent.js';\n\nimport './share.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfPermalinkModule', [\n  gmfPermalinkPermalink.module.name,\n  gmfPermalinkShareService.module.name,\n  gmfPermalinkShareComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optional. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.scaleselector\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport * as olEvents from 'ol/events.js';\nimport 'bootstrap/js/dropdown.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/map/scaleselector';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/map/scaleselector', require('./scaleselector.html'));\n});\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optional. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nconst directive = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', directive);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nconst ScaleselectorController = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  googAsserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = ScaleselectorController.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nScaleselectorController.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nScaleselectorController.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nScaleselectorController.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nScaleselectorController.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nScaleselectorController.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nScaleselectorController.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController', ScaleselectorController);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.module\n */\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.map.component\n */\nimport gmfPermalinkModule from 'gmf/permalink/module.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkModule.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapModule.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/map', require('./component.html'));\n});\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: 'gmf/map'\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.map.mousepositionComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport olControlMousePosition from 'ol/control/MousePosition.js';\nimport * as olProj from 'ol/proj.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapMouseposition', [\n  ngeoMiscFilters.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/map/mousepositionComponent', require('./mousepositionComponent.html'));\n});\n\n\nexports.value('gmfMapMousepositionTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfMapMousepositionTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/map/mousepositionComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfMapMousepositionTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfMapMousepositionTemplateUrl($attrs, gmfMapMousepositionTemplateUrl) {\n  return gmfMapMousepositionTemplateUrl($attrs);\n}\n\n/**\n * Provide a component to display the mouse position coordinates depending\n * on the chosen projection. The component also provides a projection picker\n * to choose how the coordinates are displayed.\n * service.\n *\n * Example:\n *  <gmf-mouseposition gmf-mouseposition-map=\"ctrl.map\"\n *     gmf-mouseposition-projections=\"ctrl.projections\">\n *  </gmf-mouseposition>\n *\n * @htmlAttribute {ol.Map} gmf-mouseposition-map The map.\n * @htmlAttribute {Array.<gmfx.MousePositionProjection>}\n *    gmf-mouseposition-projection The list of the projections.\n *\n * @ngdoc component\n * @ngname gmfMouseposition\n */\nexports.component_ = {\n  controller: 'gmfMousepositionController as ctrl',\n  bindings: {\n    'map': '<gmfMousepositionMap',\n    'projections': '<gmfMousepositionProjections'\n  },\n  templateUrl: gmfMapMousepositionTemplateUrl\n};\n\nexports.component('gmfMouseposition',\n  exports.component_);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfMousepositionController\n */\nexports.Controller_ = function($element, $filter, $scope, gettextCatalog) {\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!Array.<!gmfx.MousePositionProjection>}\n   * @export\n   */\n  this.projections;\n\n  /**\n   * @type {!gmfx.MousePositionProjection}\n   * @export\n   */\n  this.projection;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type  {?ol.control.MousePosition}\n   * @private\n   */\n  this.control_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.$scope_.$on('gettextLanguageChanged', () => {\n    this.initOlControl_();\n  });\n\n  // Init control once, in case of applications that never set the language.\n  this.initOlControl_();\n};\n\n\n/**\n * Init the ol.control.MousePosition\n * @private\n */\nexports.Controller_.prototype.initOlControl_ = function() {\n  if (this.control_ !== null) {\n    this.map.removeControl(this.control_);\n  }\n\n  // function that apply the filter.\n  const formatFn = function(coordinates) {\n    const filterAndArgs = this.projection.filter.split(':');\n    const filter = this.$filter_(filterAndArgs.shift());\n    googAsserts.assertFunction(filter);\n    const args = filterAndArgs;\n    args.unshift(coordinates);\n    return filter.apply(this, args);\n  };\n\n  const gettextCatalog = this.gettextCatalog_;\n  this.control_ = new olControlMousePosition({\n    className: 'gmf-mouseposition-control',\n    coordinateFormat: formatFn.bind(this),\n    target: angular.element('.gmf-mouseposition-control-target', this.$element_)[0],\n    undefinedHTML: gettextCatalog.getString('Coordinates')\n  });\n\n  this.setProjection(this.projections[0]);\n\n  this.map.addControl(this.control_);\n};\n\n\n/**\n * @param {gmfx.MousePositionProjection} projection The new projection to use.\n * @export\n */\nexports.Controller_.prototype.setProjection = function(projection) {\n  this.control_.setProjection(olProj.get(projection.code));\n  this.projection = projection;\n};\n\nexports.controller('gmfMousepositionController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.map.module\n */\nimport gmfMapComponent from 'gmf/map/component.js';\nimport gmfMapMousepositionComponent from 'gmf/map/mousepositionComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapModule', [\n  gmfMapComponent.name,\n  gmfMapMousepositionComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.grid.Config\n */\nimport * as olBase from 'ol/index.js';\n\n/**\n * @param {Array.<Object>|undefined} data Entries/objects to be shown in a grid.\n * @param {Array.<ngeox.GridColumnDef>|undefined} columnDefs Column definition of a grid.\n * @constructor\n * @struct\n * @export\n */\nconst exports = function(data, columnDefs) {\n  /**\n   * @type {Array.<Object>|undefined}\n   * @export\n   */\n  this.data = data;\n\n  /**\n   * @type {Array.<ngeox.GridColumnDef>|undefined}\n   * @export\n   */\n  this.columnDefs = columnDefs;\n\n  /**\n   * @type {!Object.<string, Object>}\n   * @export\n   */\n  this.selectedRows = {};\n};\n\n\n/**\n * Get an ID for a row.\n * @param {Object} attributes An entry/row.\n * @return {string} Unique id for this object.\n * @export\n */\nexports.getRowUid = function(attributes) {\n  return `${olBase.getUid(attributes)}`;\n};\n\n\n/**\n * Is the given row selected?\n * @param {Object} attributes An entry/row.\n * @return {boolean} True if already selected. False otherwise.\n * @export\n */\nexports.prototype.isRowSelected = function(attributes) {\n  return !!this.selectedRows[exports.getRowUid(attributes)];\n};\n\n\n/**\n * Returns the number of selected rows.\n * @return {number} Number of selected rows.\n * @export\n */\nexports.prototype.getSelectedCount = function() {\n  return Object.keys(this.selectedRows).length;\n};\n\n\n/**\n * Returns the selected rows.\n * @return {Array.<Object>} Selected rows in the current ordering.\n * @export\n */\nexports.prototype.getSelectedRows = function() {\n  return this.data.filter(row => this.isRowSelected(row));\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @public\n */\nexports.prototype.selectRow = function(attributes) {\n  const uid = exports.getRowUid(attributes);\n  this.selectedRows[uid] = attributes;\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @public\n */\nexports.prototype.toggleRow = function(attributes) {\n  const uid = exports.getRowUid(attributes);\n  const isSelected = this.isRowSelected(attributes);\n  if (isSelected) {\n    delete this.selectedRows[uid];\n  } else {\n    this.selectedRows[uid] = attributes;\n  }\n};\n\n\n/**\n * Select all rows.\n * @export\n */\nexports.prototype.selectAll = function() {\n  this.data.forEach((attributes) => {\n    this.selectRow(attributes);\n  });\n};\n\n\n/**\n * Deselect all rows.\n * @export\n */\nexports.prototype.unselectAll = function() {\n  for (const rowId in this.selectedRows) {\n    delete this.selectedRows[rowId];\n  }\n};\n\n\n/**\n * Invert selection.\n * @export\n */\nexports.prototype.invertSelection = function() {\n  this.data.forEach((attributes) => {\n    this.toggleRow(attributes);\n  });\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoGridConfig', []);\n\n\nexport default exports;\n","/**\n * @module ngeo.grid.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGridConfig from 'ngeo/grid/Config.js';\nimport * as olHas from 'ol/has.js';\n\nimport 'floatthead';\nimport 'angular-float-thead';\nimport 'font-awesome/css/font-awesome.css';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGrid', [\n  ngeoGridConfig.module.name,\n  ngeoMiscFilters.name,\n  'floatThead',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/grid', require('./component.html'));\n});\n\n\nexports.value('ngeoGridTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoGridTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/grid';\n  }\n);\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoGridTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoGridTemplateUrl($attrs, ngeoGridTemplateUrl) {\n  return ngeoGridTemplateUrl($attrs);\n}\n\n\n/**\n * A grid component for displaying tabular data. The columns of the grid\n * are sortable, rows can be selected with a single click (also in combination\n * with SHIFT and CTRL/Meta).\n *\n * Example:\n *\n *     <ngeo-grid\n *       ngeo-grid-configuration=\"::ctrl.gridConfiguration\"\n *     </ngeo-grid>\n *\n * @htmlAttribute {ngeo.grid.Config} ngeo-grid-configuration The\n * configuration to use.\n *\n * @ngdoc component\n * @ngname ngeoGrid\n */\nexports.component_ = {\n  controller: 'ngeoGridController as ctrl',\n  bindings: {\n    'configuration': '=ngeoGridConfiguration'\n  },\n  templateUrl: ngeoGridTemplateUrl\n};\n\nexports.component('ngeoGrid', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoGridController\n */\nexports.Controller_ = function($scope) {\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.grid.Config}\n   * @export\n   */\n  this.configuration;\n\n  /**\n   * @type {Object.<string, Object>}\n   * @export\n   */\n  this.selectedRows;\n\n  /**\n   * The name of the column used to sort the grid.\n   * @type {string}\n   * @export\n   */\n  this.sortedBy;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.sortAscending = true;\n\n  /**\n   * Configuration object for float-thead.\n   * @type {Object}\n   * @export\n   */\n  this.floatTheadConfig = {\n    'scrollContainer': function($table) {\n      return $table.closest('.ngeo-grid-table-container');\n    }\n  };\n};\n\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.selectedRows = this.configuration.selectedRows;\n};\n\n\n/**\n * Sort function that always puts undefined values to the bottom of the grid.\n * A new call will sort ascending. A next one will sort descending (and so\n * on).\n * @param {string} columnName The name of the column that should be used to\n *    sort the data.\n * @export\n */\nexports.Controller_.prototype.sort = function(columnName) {\n  this.sortAscending = this.sortedBy === columnName ? !this.sortAscending : true;\n  this.sortedBy = columnName;\n\n  const asc = this.sortAscending ? 1 : -1;\n  this.configuration.data.sort((attributes1, attributes2) => {\n    if (!attributes1[columnName]) {\n      return 1;\n    }\n    if (!attributes2[columnName]) {\n      return -1;\n    }\n    return attributes1[columnName] > attributes2[columnName] ? asc : -asc;\n  });\n};\n\n\n/**\n * Handler for clicks on a row.\n * @param {Object} attributes An entry/row.\n * @param {jQuery.Event} event Event.\n * @export\n */\nexports.Controller_.prototype.clickRow = function(attributes, event) {\n  const shiftKey = this.isShiftKeyOnly_(event);\n  const platformModifierKey = this.isPlatformModifierKeyOnly_(event);\n\n  this.clickRow_(attributes, shiftKey, platformModifierKey);\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @param {boolean} shiftKey Shift pressed?\n * @param {boolean} platformModifierKey CTRL/Meta pressed?\n * @private\n */\nexports.Controller_.prototype.clickRow_ = function(\n  attributes, shiftKey, platformModifierKey) {\n\n  if (shiftKey && !platformModifierKey) {\n    this.selectRange_(attributes);\n  } else if (!shiftKey && platformModifierKey) {\n    this.configuration.toggleRow(attributes);\n  } else {\n    const isSelected = this.configuration.isRowSelected(attributes);\n    this.configuration.unselectAll();\n    if (!isSelected) {\n      this.configuration.selectRow(attributes);\n    }\n  }\n};\n\n\n/**\n * Selects all rows between the given row and the closest already selected row.\n * @param {Object} attributes An entry/row.\n * @private\n */\nexports.Controller_.prototype.selectRange_ = function(attributes) {\n  const targetUid = ngeoGridConfig.getRowUid(attributes);\n  const data = this.configuration.data;\n\n  if (this.configuration.isRowSelected(attributes)) {\n    return;\n  }\n\n  // get the position of the clicked and all already selected rows\n  /** @type {number|undefined} */\n  let posClickedRow = undefined;\n  const posSelectedRows = [];\n  for (let i = 0; i < data.length; i++) {\n    const currentRow = data[i];\n    const currentUid = ngeoGridConfig.getRowUid(currentRow);\n\n    if (targetUid === currentUid) {\n      posClickedRow = i;\n    } else if (this.configuration.isRowSelected(currentRow)) {\n      posSelectedRows.push(i);\n    }\n  }\n  googAsserts.assert(posClickedRow !== undefined);\n\n  if (posSelectedRows.length == 0) {\n    // if no other row is selected, select the clicked one and stop\n    this.configuration.selectRow(attributes);\n  }\n\n  // find the selected row which is the closest to the clicked row\n  let distance = Infinity;\n  let posClosestRow = posSelectedRows[0];\n  for (let j = 0; j < posSelectedRows.length; j++) {\n    const currentPos = posSelectedRows[j];\n    const currentDistance = Math.abs(currentPos - posClickedRow);\n    if (distance > currentDistance) {\n      distance = currentDistance;\n      posClosestRow = currentPos;\n    }\n    // note: this could be optimized because `posSelectedRows` is ordered.\n  }\n\n  // then select all rows between the clicked one and the closest\n  const rangeStart = (posClickedRow < posClosestRow) ? posClickedRow : posClosestRow;\n  const rangeEnd = (posClickedRow > posClosestRow) ? posClickedRow : posClosestRow;\n\n  for (let l = rangeStart; l <= rangeEnd; l++) {\n    this.configuration.selectRow(data[l]);\n  }\n};\n\n\n/**\n * Prevent the default browser behaviour of selecting text\n * when selecting multiple rows with SHIFT or CTRL/Meta.\n * @param {jQuery.Event} event Event.\n * @export\n */\nexports.Controller_.prototype.preventTextSelection = function(event) {\n  const shiftKey = this.isShiftKeyOnly_(event);\n  const platformModifierKey = this.isPlatformModifierKeyOnly_(event);\n\n  if (shiftKey || platformModifierKey) {\n    event.preventDefault();\n  }\n};\n\n\n/**\n * Same as `ol.events.condition.platformModifierKeyOnly`.\n * @param {jQuery.Event} event Event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @private\n */\nexports.Controller_.prototype.isPlatformModifierKeyOnly_ = function(event) {\n  return !event.altKey &&\n    (olHas.MAC ? event.metaKey : event.ctrlKey) &&\n    !event.shiftKey;\n};\n\n\n/**\n * Same as `ol.events.condition.shiftKeyOnly`.\n * @param {jQuery.Event} event Event.\n * @return {boolean} True if only the shift key is pressed.\n * @private\n */\nexports.Controller_.prototype.isShiftKeyOnly_ = function(event) {\n  return (\n    !event.altKey &&\n      !(event.metaKey || event.ctrlKey) &&\n      event.shiftKey);\n};\n\n\nexports.controller('ngeoGridController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.query.gridComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadCsv from 'ngeo/download/Csv.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\n/** @suppress {extraRequire} */\nimport ngeoGridComponent from 'ngeo/grid/component.js';\n\nimport ngeoGridConfig from 'ngeo/grid/Config.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/** @suppress {extraRequire} - required for `ngeoQueryResult` */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olCollection from 'ol/Collection.js';\nimport * as olExtent from 'ol/extent.js';\nimport olMap from 'ol/Map.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryGridComponent', [\n  ngeoDownloadCsv.module.name,\n  ngeoDownloadService.name,\n  ngeoGridComponent.name,\n  ngeoGridConfig.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.value('gmfDisplayquerygridTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfDisplayquerygridTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/query/gridComponent';\n  }\n);\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/query/gridComponent', require('./gridComponent.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfDisplayquerygridTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfDisplayquerygridTemplateUrl($element, $attrs, gmfDisplayquerygridTemplateUrl) {\n  return gmfDisplayquerygridTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provides a component to display results of the {@link ngeo.queryResult} in a\n * grid and shows related features on the map using\n * the {@link ngeo.map.FeatureOverlayMgr}.\n *\n * You can override the default component's template by setting the\n * value `gmfDisplayquerygridTemplateUrl`.\n *\n * Features displayed on the map use a default style but you can override these\n * styles by passing ol.style.Style objects as attributes of this component.\n *\n * Note: the following ng-class need to be present in the interface <body> element to display the footer\n * when the grid is active (initially there should be the code for the profile tool):\n *      <body ng-class=\"{'gmf-profile-chart-active': !!profileChartActive, 'gmf-query-grid-active': !!queryGridActive}\">\n *\n * Example:\n *\n *      <gmf-displayquerygrid\n *        gmf-displayquerygrid-map=\"ctrl.map\"\n *        gmf-displayquerygrid-featuresstyle=\"ctrl.styleForAllFeatures\"\n *        gmf-displayquerygrid-selectedfeaturestyle=\"ctrl.styleForTheCurrentFeature\">\n *      </gmf-displayquerygrid>\n *\n * @htmlAttribute {boolean} gmf-displayquerygrid-active The active state of the component.\n * @htmlAttribute {ol.style.Style} gmf-displayquerygrid-featuresstyle A style\n *     object for all features from the result of the query.\n * @htmlAttribute {ol.style.Style} gmf-displayquerygrid-selectedfeaturestyle A style\n *     object for the currently selected features.\n * @htmlAttribute {ol.Map} gmf-displayquerygrid-map The map.\n * @htmlAttribute {boolean?} gmf-displayquerygrid-removeemptycolumns Optional. Should\n *     empty columns be hidden? Default: `false`.\n * @htmlAttribute {number?} gmf-displayquerygrid-maxrecenterzoom Optional. Maximum\n *     zoom-level to use when zooming to selected features.\n * @htmlAttribute {gmfx.GridMergeTabs?} gmf-displayquerygrid-gridmergetabs Optional.\n *     Configuration to merge grids with the same attributes into a single grid.\n *\n * @ngdoc component\n * @ngname gmfDisplayquerygrid\n */\nexports.component_ = {\n  controller: 'GmfDisplayquerygridController as ctrl',\n  bindings: {\n    'active': '=?gmfDisplayquerygridActive',\n    'featuresStyleFn': '&gmfDisplayquerygridFeaturesstyle',\n    'selectedFeatureStyleFn': '&gmfDisplayquerygridSelectedfeaturestyle',\n    'getMapFn': '&gmfDisplayquerygridMap',\n    'removeEmptyColumnsFn': '&?gmfDisplayquerygridRemoveemptycolumns',\n    'maxResultsFn': '&?gmfDisplayquerygridMaxresults',\n    'maxRecenterZoomFn': '&?gmfDisplayquerygridMaxrecenterzoom',\n    'mergeTabs': '<?gmfDisplayquerygridMergetabs'\n  },\n  templateUrl: gmfDisplayquerygridTemplateUrl\n};\n\n\nexports.component('gmfDisplayquerygrid', exports.component_);\n\n\n/**\n * Controller for the query grid.\n *\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.QueryResult} ngeoQueryResult ngeo query result.\n * @param {!ngeo.query.MapQuerent} ngeoMapQuerent ngeo map querent service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.download.Csv} ngeoCsvDownload CSV download service.\n * @param {!angular.JQLite} $element Element.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisplayquerygridController\n */\nexports.Controller_ = function($injector, $scope, ngeoQueryResult, ngeoMapQuerent,\n  ngeoFeatureOverlayMgr, $timeout, ngeoCsvDownload, $element) {\n\n  const queryOptions = /** @type {ngeox.QueryOptions} */ (\n    $injector.has('ngeoQueryOptions') ?\n      $injector.get('ngeoQueryOptions') : {});\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {!ngeox.QueryResult}\n   * @export\n   */\n  this.ngeoQueryResult = ngeoQueryResult;\n\n  /**\n   * @type {!ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n  /**\n   * @type {!ngeo.download.Csv}\n   * @private\n   */\n  this.ngeoCsvDownload_ = ngeoCsvDownload;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.maxResults = queryOptions.limit !== undefined ? queryOptions.limit : 50;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.pending = false;\n\n  /**\n   * @type {!Object.<string, gmfx.GridSource>}\n   * @export\n   */\n  this.gridSources = {};\n\n  /**\n   * IDs of the grid sources in the order they were loaded.\n   * @type {!Array.<string>}\n   * @export\n   */\n  this.loadedGridSources = [];\n\n  /**\n   * The id of the currently shown query source.\n   * @type {string|number|null}\n   * @export\n   */\n  this.selectedTab = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.removeEmptyColumns_ = false;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.maxRecenterZoom;\n\n  /**\n   * @type {!gmfx.GridMergeTabs}\n   * @export\n   */\n  this.mergeTabs = {};\n\n  /**\n   * A mapping between row uid and the corresponding feature for each\n   * source.\n   * @type {!Object.<string, Object.<string, ol.Feature>>}\n   * @private\n   */\n  this.featuresForSources_ = {};\n\n  // Styles for displayed features (features) and selected features\n  // (highlightFeatures_) (user can set both styles).\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.highlightFeatures_ = new olCollection();\n\n  /**\n   * Filename\n   * @type {string}\n   * @private\n   */\n  this.filename_ = $injector.has('gmfCsvFilename') ?\n    $injector.get('gmfCsvFilename') : 'query-results.csv';\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  // Watch the ngeo query result service.\n  this.$scope_.$watchCollection(\n    () => ngeoQueryResult,\n    (newQueryResult, oldQueryResult) => {\n      if (newQueryResult !== oldQueryResult) {\n        this.updateData_();\n      }\n    });\n\n  /**\n   * An unregister function returned from `$scope.$watchCollection` for\n   * \"on-select\" changes (when rows are selected/unselected).\n   * @type {?function()}\n   * @private\n   */\n  this.unregisterSelectWatcher_ = null;\n};\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.removeEmptyColumns_ = this['removeEmptyColumnsFn'] ? this['removeEmptyColumnsFn']() === true : false;\n  this.maxRecenterZoom = this['maxRecenterZoomFn'] ? this['maxRecenterZoomFn']() : undefined;\n\n  const featuresOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  featuresOverlay.setFeatures(this.features_);\n  const featuresStyle = this['featuresStyleFn']();\n  if (featuresStyle !== undefined) {\n    googAsserts.assertInstanceof(featuresStyle, olStyleStyle);\n    featuresOverlay.setStyle(featuresStyle);\n  }\n\n  const highlightFeaturesOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  highlightFeaturesOverlay.setFeatures(this.highlightFeatures_);\n  let highlightFeatureStyle = this['selectedFeatureStyleFn']();\n  if (highlightFeatureStyle !== undefined) {\n    googAsserts.assertInstanceof(highlightFeatureStyle, olStyleStyle);\n  } else {\n    const fill = new olStyleFill({color: [255, 0, 0, 0.6]});\n    const stroke = new olStyleStroke({color: [255, 0, 0, 1], width: 2});\n    highlightFeatureStyle = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke,\n      zIndex: 10\n    });\n  }\n  highlightFeaturesOverlay.setStyle(highlightFeatureStyle);\n\n  const mapFn = this['getMapFn'];\n  if (mapFn) {\n    const map = mapFn();\n    googAsserts.assertInstanceof(map, olMap);\n    this.map_ = map;\n  }\n};\n\n/**\n * Returns a list of grid sources in the order they were loaded.\n * @export\n * @return {Array.<gmfx.GridSource>} Grid sources.\n */\nexports.Controller_.prototype.getGridSources = function() {\n  return this.loadedGridSources.map(sourceLabel => this.gridSources[sourceLabel]);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateData_ = function() {\n  // close if there are no results\n  if (this.ngeoQueryResult.total === 0 && !this.hasOneWithTooManyResults_()) {\n    const oldActive = this.active;\n    this.clear();\n    if (oldActive) {\n      // don't close if there are pending queries\n      this.active = this.ngeoQueryResult.pending;\n      this.pending = this.ngeoQueryResult.pending;\n    }\n    return;\n  }\n\n  this.active = true;\n  this.pending = false;\n  let sources = this.ngeoQueryResult.sources;\n  // merge sources if requested\n  if (Object.keys(this.mergeTabs).length > 0) {\n    sources = this.getMergedSources_(sources);\n  }\n\n  // create grids (only for source with features or with too many results)\n  sources.forEach((source) => {\n    if (source.tooManyResults) {\n      this.makeGrid_(null, source);\n    } else {\n      source.id = this.escapeValue(source.id);\n      const features = source.features;\n      if (features.length > 0) {\n        this.collectData_(source);\n      }\n    }\n  });\n\n  if (this.loadedGridSources.length === 0) {\n    // if no grids were created, do not show\n    this.active = false;\n    return;\n  }\n\n  // keep the first existing navigation tab open\n  if (this.selectedTab === null || !((`${this.selectedTab}`) in this.gridSources)) {\n    // selecting the tab is done in a timeout, because otherwise in rare cases\n    // `ng-class` might set the `active` class on multiple tabs.\n    this.$timeout_(() => {\n      const firstSourceId = this.loadedGridSources[0];\n      this.selectTab(this.gridSources[firstSourceId]);\n    }, 0);\n  }\n};\n\n\n/**\n * @private\n * @return {boolean} If one of the source has too many results.\n */\nexports.Controller_.prototype.hasOneWithTooManyResults_ = function() {\n  return this.ngeoQueryResult.sources.some(source => source.tooManyResults);\n};\n\n/**\n * Returns the value with all symbols and spaces replaced by an underscore.\n * @param {string|number} value A value to escape.\n * @returns {string|number} value An escaped value.\n * @export\n */\nexports.Controller_.prototype.escapeValue = function(value) {\n  // Work-around for Number.isInteger() when not always getting a number ...\n  if (Number.isInteger(/** @type {number} */ (value))) {\n    return value;\n  } else {\n    const toEscape = /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\ |]/g;\n    if (value.match(toEscape) !== null) {\n      return value.replace(toEscape, '_');\n    } else {\n      return value;\n    }\n  }\n};\n\n\n/**\n * Returns if the given grid source is selected?\n * @export\n * @param {gmfx.GridSource} gridSource Grid source.\n * @return {boolean} Is selected?\n */\nexports.Controller_.prototype.isSelected = function(gridSource) {\n  return this.selectedTab === gridSource.source.label;\n};\n\n\n/**\n * Try to merge the mergable sources.\n * @param {Array.<ngeox.QueryResultSource>} sources Sources.\n * @return {Array.<ngeox.QueryResultSource>} The merged sources.\n * @private\n */\nexports.Controller_.prototype.getMergedSources_ = function(sources) {\n  const allSources = [];\n  /** @type {Object.<string, ngeox.QueryResultSource>} */\n  const mergedSources = {};\n\n  sources.forEach((source) => {\n    // check if this source can be merged\n    const mergedSource = this.getMergedSource_(source, mergedSources);\n\n    if (mergedSource === null) {\n      // this source should not be merged, add as is\n      allSources.push(source);\n    }\n  });\n\n  for (const mergedSourceId in mergedSources) {\n    allSources.push(mergedSources[mergedSourceId]);\n  }\n\n  return allSources;\n};\n\n\n/**\n * Check if the given source should be merged. If so, an artificial source\n * that will contain the features of all mergable sources is returned. If not,\n * `null` is returned.\n * @param {ngeox.QueryResultSource} source Source.\n * @param {Object.<string, ngeox.QueryResultSource>} mergedSources Merged sources.\n * @return {?ngeox.QueryResultSource} A merged source of null if the source should\n *    not be merged.\n * @private\n */\nexports.Controller_.prototype.getMergedSource_ = function(source, mergedSources) {\n  let mergeSourceId = null;\n\n  for (const currentMergeSourceId in this.mergeTabs) {\n    const sourceLabels = this.mergeTabs[currentMergeSourceId];\n    const containsSource = sourceLabels.some(sourceLabel => sourceLabel == source.label);\n    if (containsSource) {\n      mergeSourceId = currentMergeSourceId;\n      break;\n    }\n  }\n\n  if (mergeSourceId === null) {\n    // this source should not be merged\n    return null;\n  }\n\n  /** @type {ngeox.QueryResultSource} */\n  let mergeSource;\n  if (mergeSourceId in mergedSources) {\n    mergeSource = mergedSources[mergeSourceId];\n  } else {\n    mergeSource = {\n      features: [],\n      id: mergeSourceId,\n      label: mergeSourceId,\n      limit: this.maxResults,\n      pending: false,\n      queried: true,\n      tooManyResults: false,\n      totalFeatureCount: undefined\n    };\n    mergedSources[mergeSourceId] = mergeSource;\n  }\n\n  // add features of source to merge source\n  source.features.forEach((feature) => {\n    mergeSource.features.push(feature);\n  });\n\n  // if one of the source has too many results, the resulting merged source will\n  // also be marked with `tooManyResults` and will not contain any features.\n  mergeSource.tooManyResults = mergeSource.tooManyResults || source.tooManyResults;\n  if (mergeSource.tooManyResults) {\n    mergeSource.totalFeatureCount = (mergeSource.totalFeatureCount !== undefined) ?\n      mergeSource.totalFeatureCount + mergeSource.features.length : mergeSource.features.length;\n    mergeSource.features = [];\n  }\n  if (source.totalFeatureCount !== undefined) {\n    mergeSource.totalFeatureCount = (mergeSource.totalFeatureCount !== undefined) ?\n      mergeSource.totalFeatureCount + source.totalFeatureCount : source.totalFeatureCount;\n  }\n\n  return mergeSource;\n};\n\n\n/**\n * Collect all features in the queryResult object.\n * @param {ngeox.QueryResultSource} source Result source.\n * @private\n */\nexports.Controller_.prototype.collectData_ = function(source) {\n  const features = source.features;\n  const allProperties = [];\n  const featureGeometriesNames = [];\n  const featuresForSource = {};\n  let properties, featureGeometryName;\n  features.forEach((feature) => {\n    properties = feature.getProperties();\n    if (properties !== undefined) {\n      // Keeps distinct geometry names to remove theme later.\n      featureGeometryName = feature.getGeometryName();\n      if (featureGeometriesNames.indexOf(featureGeometryName) === -1) {\n        featureGeometriesNames.push(featureGeometryName);\n      }\n\n      allProperties.push(properties);\n      featuresForSource[ngeoGridConfig.getRowUid(properties)] = feature;\n    }\n  });\n\n  this.cleanProperties_(allProperties, featureGeometriesNames);\n  if (allProperties.length > 0) {\n    const gridCreated = this.makeGrid_(allProperties, source);\n    if (gridCreated) {\n      this.featuresForSources_[`${source.label}`] = featuresForSource;\n    }\n  }\n};\n\n\n/**\n * Remove all unwanted columns.\n * @param {Array.<Object>} allProperties A row.\n * @param {Array.<string>} featureGeometriesNames Geometry names.\n * @private\n */\nexports.Controller_.prototype.cleanProperties_ = function(\n  allProperties, featureGeometriesNames) {\n  allProperties.forEach((properties) => {\n    featureGeometriesNames.forEach((featureGeometryName) => {\n      delete properties[featureGeometryName];\n    });\n    delete properties['boundedBy'];\n    delete properties['ngeo_feature_type_'];\n  });\n\n  if (this.removeEmptyColumns_ === true) {\n    this.removeEmptyColumnsFn_(allProperties);\n  }\n};\n\n\n/**\n * Remove columns that will be completely empty between each properties.\n * @param {Array.<Object>} allProperties A row.\n * @private\n */\nexports.Controller_.prototype.removeEmptyColumnsFn_ = function(\n  allProperties) {\n  // Keep all keys that correspond to at least one value in a properties object.\n  const keysToKeep = [];\n  let i, key;\n  for (key in allProperties[0]) {\n    for (i = 0; i < allProperties.length; i++) {\n      if (allProperties[i][key] !== undefined) {\n        keysToKeep.push(key);\n        break;\n      }\n    }\n  }\n  // Get all keys that previously always refers always to an empty value.\n  let keyToRemove;\n  allProperties.forEach((properties) => {\n    keyToRemove = [];\n    for (key in properties) {\n      if (keysToKeep.indexOf(key) === -1) {\n        keyToRemove.push(key);\n      }\n    }\n    // Remove these keys.\n    keyToRemove.forEach((key) => {\n      delete properties[key];\n    });\n  });\n};\n\n\n/**\n * @param {?Array.<Object>} data Grid rows.\n * @param {ngeox.QueryResultSource} source Query source.\n * @return {boolean} Returns true if a grid was created.\n * @private\n */\nexports.Controller_.prototype.makeGrid_ = function(data, source) {\n  const sourceLabel = `${source.label}`;\n  let gridConfig = null;\n  if (data !== null) {\n    gridConfig = this.getGridConfiguration_(data);\n    if (gridConfig === null) {\n      return false;\n    }\n  }\n  if (this.loadedGridSources.indexOf(sourceLabel) == -1) {\n    this.loadedGridSources.push(sourceLabel);\n  }\n  this.gridSources[sourceLabel] = {\n    configuration: gridConfig,\n    source: source\n  };\n  return true;\n};\n\n\n/**\n * @param {Array.<!Object>} data Grid rows.\n * @return {?ngeo.grid.Config} Grid config.\n * @private\n */\nexports.Controller_.prototype.getGridConfiguration_ = function(\n  data) {\n  googAsserts.assert(data.length > 0);\n  const clone = {};\n  Object.assign(clone, data[0]);\n  delete clone.ol_uid;\n  const columns = Object.keys(clone);\n\n  /** @type {Array.<ngeox.GridColumnDef>} */\n  const columnDefs = [];\n  columns.forEach((column) => {\n    columnDefs.push(/** @type {ngeox.GridColumnDef} */ ({\n      name: column\n    }));\n  });\n\n  if (columnDefs.length > 0) {\n    return new ngeoGridConfig(data, columnDefs);\n  } else {\n    // no columns, do not show grid\n    return null;\n  }\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.active = false;\n  this.pending = false;\n  this.gridSources = {};\n  this.loadedGridSources = [];\n  this.selectedTab = null;\n  this.tooManyResults = false;\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n  this.ngeoMapQuerent_.clear();\n  this.featuresForSources_ = {};\n  if (this.unregisterSelectWatcher_) {\n    this.unregisterSelectWatcher_();\n  }\n};\n\n\n/**\n * Select the tab for the given grid source.\n * @param {gmfx.GridSource} gridSource Grid source.\n * @export\n */\nexports.Controller_.prototype.selectTab = function(gridSource) {\n  const source = gridSource.source;\n  this.selectedTab = source.label;\n\n  if (this.unregisterSelectWatcher_) {\n    this.unregisterSelectWatcher_();\n    this.unregisterSelectWatcher_ = null;\n  }\n\n  if (gridSource.configuration !== null) {\n    this.unregisterSelectWatcher_ = this.$scope_.$watchCollection(\n      () => gridSource.configuration.selectedRows,\n      (newSelected, oldSelectedRows) => {\n        if (Object.keys(newSelected) !== Object.keys(oldSelectedRows)) {\n          this.onSelectionChanged_();\n        }\n      });\n  }\n  this.updateFeatures_(gridSource);\n\n  this.reflowGrid_();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.reflowGrid_ = function() {\n  // This is a \"work-around\" to make sure that the grid is rendered correctly.\n  // When a pane is activated by setting `this.selectedTab`, the class `active`\n  // is not yet set on the pane. That's why the class is set manually, and\n  // after the pane is shown (in the next digest loop), the grid table can\n  // be refreshed.\n  const id = this.escapeValue(this.selectedTab || '');\n  const activePane = this.$element_.find(`div.tab-pane#${id}`);\n  activePane.removeClass('active').addClass('active');\n  this.$timeout_(() => {\n    activePane.find('div.ngeo-grid-table-container table')['trigger']('reflow');\n  });\n};\n\n\n/**\n * Called when the row selection has changed.\n * @private\n */\nexports.Controller_.prototype.onSelectionChanged_ = function() {\n  if (this.selectedTab === null) {\n    return;\n  }\n\n  const gridSource = this.gridSources[`${this.selectedTab}`];\n  this.updateFeatures_(gridSource);\n};\n\n\n/**\n * @param {gmfx.GridSource} gridSource Grid source\n * @private\n */\nexports.Controller_.prototype.updateFeatures_ = function(gridSource) {\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n\n  if (gridSource.configuration === null) {\n    return;\n  }\n\n  const sourceLabel = `${gridSource.source.label}`;\n  const featuresForSource = this.featuresForSources_[sourceLabel];\n  const selectedRows = gridSource.configuration.selectedRows;\n\n  for (const rowId in featuresForSource) {\n    const feature = featuresForSource[rowId];\n    if (rowId in selectedRows) {\n      this.highlightFeatures_.push(feature);\n    } else {\n      this.features_.push(feature);\n    }\n  }\n};\n\n\n/**\n * Get the currently shown grid source.\n * @export\n * @return {gmfx.GridSource|null} Grid source.\n */\nexports.Controller_.prototype.getActiveGridSource = function() {\n  if (this.selectedTab === null) {\n    return null;\n  } else {\n    return this.gridSources[`${this.selectedTab}`];\n  }\n};\n\n\n/**\n * Returns if a row of the currently active grid is selected?\n * @export\n * @return {boolean} Is one selected?\n */\nexports.Controller_.prototype.isOneSelected = function() {\n  const source = this.getActiveGridSource();\n  if (source === null || source.configuration === null) {\n    return false;\n  } else {\n    return source.configuration.getSelectedCount() > 0;\n  }\n};\n\n\n/**\n * Returns the number of selected rows of the currently active grid.\n * @export\n * @return {number} The number of selected rows.\n */\nexports.Controller_.prototype.getSelectedRowCount = function() {\n  const source = this.getActiveGridSource();\n  if (source === null || source.configuration === null) {\n    return 0;\n  } else {\n    return source.configuration.getSelectedCount();\n  }\n};\n\n\n/**\n * Select all rows of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.selectAll = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.selectAll();\n  }\n};\n\n\n/**\n * Deselect all rows of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.unselectAll = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.unselectAll();\n  }\n};\n\n\n/**\n * Invert the selection of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.invertSelection = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.invertSelection();\n  }\n};\n\n\n/**\n * Zoom to the selected features.\n * @export\n */\nexports.Controller_.prototype.zoomToSelection = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    const extent = olExtent.createEmpty();\n    this.highlightFeatures_.forEach((feature) => {\n      olExtent.extend(extent, feature.getGeometry().getExtent());\n    });\n    const size = this.map_.getSize();\n    googAsserts.assert(size !== undefined);\n    const maxZoom = this.maxRecenterZoom;\n    this.map_.getView().fit(extent, {size, maxZoom});\n  }\n};\n\n\n/**\n * Start a CSV download for the selected features.\n * @export\n */\nexports.Controller_.prototype.downloadCsv = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    const columnDefs = source.configuration.columnDefs;\n    googAsserts.assert(columnDefs !== undefined);\n    const selectedRows = source.configuration.getSelectedRows();\n\n    this.ngeoCsvDownload_.startDownload(\n      selectedRows, columnDefs, this.filename_);\n  }\n};\n\n\nexports.controller('GmfDisplayquerygridController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.swipe\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMiscSwipe', []);\n\n\n/**\n * ===========================================\n * NOTE: It is an inversed copy of ngSwipe.\n * Angular ngSwipe assumes that vertical\n * swipe is a scroll.\n * For more details:\n * https://docs.angularjs.org/api/ngTouch/service/$swipe\n * ===========================================\n */\n\n/**\n * @ngdoc service\n * @name $verticalSwipe\n *\n * @description\n * The `$verticalSwipe` service is a service that abstracts the messier details of hold-and-drag swipe\n * behavior, to make implementing swipe-related directives more convenient.\n *\n * Requires the {@link ngTouch `ngTouch`} module to be installed.\n *\n * `$verticalSwipe` is used by the `ngeoSwipeUp` and `ngeoSwipeDown` directives.\n *\n * # Usage\n * The `$verticalSwipe` service is an object with a single method: `bind`. `bind` takes an element\n * which is to be watched for swipes, and an object with four handler functions. See the\n * documentation for `bind` below.\n */\n\nexports.factory('$verticalSwipe', [function() {\n  // The total distance in any direction before we make the call on swipe vs. scroll.\n  const MOVE_BUFFER_RADIUS = 10;\n\n  const POINTER_EVENTS = {\n    'mouse': {\n      start: 'mousedown',\n      move: 'mousemove',\n      end: 'mouseup'\n    },\n    'touch': {\n      start: 'touchstart',\n      move: 'touchmove',\n      end: 'touchend',\n      cancel: 'touchcancel'\n    },\n    'pointer': {\n      start: 'pointerdown',\n      move: 'pointermove',\n      end: 'pointerup',\n      cancel: 'pointercancel'\n    }\n  };\n\n  function getCoordinates(event) {\n    const originalEvent = event.originalEvent || event;\n    const touches = originalEvent.touches && originalEvent.touches.length ? originalEvent.touches : [originalEvent];\n    const e = (originalEvent.changedTouches && originalEvent.changedTouches[0]) || touches[0];\n\n    return {\n      x: e.clientX,\n      y: e.clientY\n    };\n  }\n\n  function getEvents(pointerTypes, eventType) {\n    const res = [];\n    angular.forEach(pointerTypes, (pointerType) => {\n      const eventName = POINTER_EVENTS[pointerType][eventType];\n      if (eventName) {\n        res.push(eventName);\n      }\n    });\n    return res.join(' ');\n  }\n\n  return {\n    /**\n     * @ngdoc method\n     * @name $verticalSwipe#bind\n     * @param {!angular.JQLite} element Element.\n     * @param {Object} eventHandlers - Event handlers object with `start`, `cancel` and `end` callbacks\n     * @param {Array<string>} pointerTypes - Types of pointer\n     *\n     * @description\n     * The main method of `$verticalSwipe`. It takes an element to be watched for swipe motions, and an\n     * object containing event handlers.\n     * The pointer types that should be used can be specified via the optional\n     * third argument, which is an array of strings `'mouse'`, `'touch'` and `'pointer'`. By default,\n     * `$verticalSwipe` will listen for `mouse`, `touch` and `pointer` events.\n     *\n     * The four events are `start`, `move`, `end`, and `cancel`. `start`, `move`, and `end`\n     * receive as a parameter a coordinates object of the form `{ x: 150, y: 310 }` and the raw\n     * `event`. `cancel` receives the raw `event` as its single parameter.\n     *\n     * `start` is called on either `mousedown`, `touchstart` or `pointerdown`. After this event, `$verticalSwipe` is\n     * watching for `touchmove`, `mousemove` or `pointermove` events. These events are ignored until the total\n     * distance moved in either dimension exceeds a small threshold.\n     *\n     * Once this threshold is exceeded, either the vertical or vertical delta is greater.\n     * - If the vertical distance is greater, this is a swipe and `move` and `end` events follow.\n     * - If the horizontal distance is greater, this is a scroll, and we let the browser take over.\n     *   A `cancel` event is sent.\n     *\n     * `move` is called on `mousemove`, `touchmove` and `pointermove` after the above logic has determined that\n     * a swipe is in progress.\n     *\n     * `end` is called when a swipe is successfully completed with a `touchend`, `mouseup` or `pointerup`.\n     *\n     * `cancel` is called either on a `touchcancel` or `pointercancel`  from the browser, or when we begin scrolling\n     * as described above.\n     *\n     */\n    bind(element, eventHandlers, pointerTypes) {\n      // Absolute total movement, used to control swipe vs. scroll.\n      let totalX, totalY;\n      // Coordinates of the start position.\n      let startCoords;\n      // Last event's position.\n      let lastPos;\n      // Whether a swipe is active.\n      let active = false;\n\n      pointerTypes = pointerTypes || ['mouse', 'touch', 'pointer'];\n      element.on(getEvents(pointerTypes, 'start'), (event) => {\n        startCoords = getCoordinates(event);\n        active = true;\n        totalX = 0;\n        totalY = 0;\n        lastPos = startCoords;\n        if (eventHandlers['start']) {\n          eventHandlers['start'](startCoords, event);\n        }\n      });\n      const events = getEvents(pointerTypes, 'cancel');\n      if (events) {\n        element.on(events, (event) => {\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n        });\n      }\n\n      element.on(getEvents(pointerTypes, 'move'), (event) => {\n        if (!active) {\n          return;\n        }\n\n        // Android will send a touchcancel if it thinks we're starting to scroll.\n        // So when the total distance (+ or - or both) exceeds 10px in either direction,\n        // we either:\n        // - On totalX > totalY, we send preventDefault() and treat this as a swipe.\n        // - On totalY > totalX, we let the browser handle it as a scroll.\n\n        if (!startCoords) {\n          return;\n        }\n        const coords = getCoordinates(event);\n\n        totalX += Math.abs(coords.x - lastPos.x);\n        totalY += Math.abs(coords.y - lastPos.y);\n\n        lastPos = coords;\n\n        if (totalX < MOVE_BUFFER_RADIUS && totalY < MOVE_BUFFER_RADIUS) {\n          return;\n        }\n\n        // One of totalX or totalY has exceeded the buffer, so decide on swipe vs. scroll.\n        if (totalX > totalY) {\n          // Allow native scrolling to take over.\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n          return;\n        } else {\n          // Prevent the browser from scrolling.\n          event.preventDefault();\n          if (eventHandlers['move']) {\n            eventHandlers['move'](coords, event);\n          }\n        }\n      });\n\n      element.on(getEvents(pointerTypes, 'end'), (event) => {\n        if (!active) {\n          return;\n        }\n        active = false;\n        if (eventHandlers['end']) {\n          eventHandlers['end'](getCoordinates(event), event);\n        }\n      });\n    }\n  };\n}]);\n\nexports.makeSwipeDirective_ = function(directiveName, direction, eventName) {\n  exports.directive(directiveName, ['$parse', '$verticalSwipe', function($parse, $verticalSwipe) {\n    // The maximum horizontal delta for a swipe should be less than 75px.\n    const MAX_HORIZONTAL_DISTANCE = 75;\n    // Horizontal distance should not be more than a fraction of the vertical distance.\n    const MAX_HORIZONTAL_RATIO = 0.3;\n    // At least a 30px lateral motion is necessary for a swipe.\n    const MIN_VERTICAL_DISTANCE = 30;\n\n    return function(scope, element, attr) {\n      const swipeHandler = $parse(attr[directiveName]);\n\n      let startCoords, valid;\n\n      function validSwipe(coords) {\n        // Check that it's within the coordinates.\n        // Absolute vertical distance must be within tolerances.\n        // Horizontal distance, we take the current X - the starting X.\n        // This is negative for downward swipes and positive for upward swipes.\n        // After multiplying by the direction (-1 for down, +1 for up), legal swipes\n        // (ie. same direction as the directive wants) will have a positive delta and\n        // illegal ones a negative delta.\n        // Therefore this delta must be positive, and larger than the minimum.\n        if (!startCoords) {\n          return false;\n        }\n        const deltaY = (coords.y - startCoords.y) * direction;\n        const deltaX = Math.abs(coords.x - startCoords.x);\n        return valid && // Short circuit for already-invalidated swipes.\n            deltaX < MAX_HORIZONTAL_DISTANCE &&\n            deltaY > 0 &&\n            deltaY > MIN_VERTICAL_DISTANCE &&\n            deltaX / deltaY < MAX_HORIZONTAL_RATIO;\n      }\n\n      const pointerTypes = ['touch'];\n      if (!angular.isDefined(attr['ngeoSwipeDisableMouse'])) {\n        pointerTypes.push('mouse');\n      }\n      $verticalSwipe.bind(element, {\n        'start': function(coords, event) {\n          startCoords = coords;\n          valid = true;\n        },\n        'cancel': function(event) {\n          valid = false;\n        },\n        'end': function(coords, event) {\n          if (validSwipe(coords)) {\n            scope.$apply(() => {\n              element.triggerHandler(eventName);\n              swipeHandler(scope, {$event: event});\n            });\n          }\n        }\n      }, pointerTypes);\n    };\n  }]);\n};\n\n// Down is negative Y-coordinate, up is positive.\nexports.makeSwipeDirective_('ngeoSwipeDown', 1, 'swipedown');\nexports.makeSwipeDirective_('ngeoSwipeUp', -1, 'swipeup');\n\n\nexport default exports;\n","/**\n * @module gmf.query.windowComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscSwipe from 'ngeo/misc/swipe.js';\n\n/** @suppress {extraRequire} - required for `ngeoQueryResult` */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olCollection from 'ol/Collection.js';\nimport * as olObj from 'ol/obj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport 'jquery-ui/ui/widgets/resizable.js';\nimport 'angular-animate';\nimport 'angular-touch';\nimport 'bootstrap/js/collapse.js';\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryWindowComponent', [\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscSwipe.name,\n  ngeoQueryMapQuerent.module.name,\n  'ngAnimate',\n  'ngTouch',\n]);\n\n\nexports.config(['$animateProvider',\n  /**\n   * For performance reason, only perform animation on elements that have the\n   * `gmf-animatable` css class.\n   * @param {angular.$animateProvider} $animateProvider animate provider.\n   */\n  function($animateProvider) {\n    $animateProvider.classNameFilter(/gmf-animatable/);\n  }\n]);\n\n\nexports.value('gmfDisplayquerywindowTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfDisplayquerywindowTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/query/windowComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/query/windowComponent', require('./windowComponent.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfDisplayquerywindowTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfDisplayquerywindowTemplateUrl($element, $attrs, gmfDisplayquerywindowTemplateUrl) {\n  return gmfDisplayquerywindowTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component to display results of the {@link ngeo.queryResult}\n * and shows related features on the map using the {@link ngeo.map.FeatureOverlayMgr}.\n *\n * You can override the default component's template by setting the\n * value `gmfDisplayquerywindowTemplateUrl`.\n *\n * Features displayed on the map use a default style but you can override these\n * styles by passing ol.style.Style objects as attributes of this component.\n *\n * Example:\n *\n *      <gmf-displayquerywindow\n *        gmf-displayquerywindow-featuresstyle=\"ctrl.styleForAllFeatures\"\n *        gmf-displayquerywindow-selectedfeaturestyle=\"ctrl.styleForTheCurrentFeature\">\n *      </gmf-displayquerywindow>\n *\n * @htmlAttribute {ol.style.Style} gmf-displayquerywindow-featuresstyle A style\n *     object for all features from the result of the query.\n * @htmlAttribute {ol.style.Style} selectedfeaturestyle A style\n *     object for the current displayed feature.\n * @htmlAttribute {boolean=} defaultcollapsed If the query result window is\n *     collapsed.\n * @htmlAttribute {boolean} desktop If the component is used in the desktop\n *     application.\n * @htmlAttribute {boolean} showunqueriedlayers If also layers, that have not\n *     been queried for the last query, should be shown in the filter.\n *\n * @ngdoc component\n * @ngname gmfDisplayquerywindow\n */\nexports.component_ = {\n  controller: 'GmfDisplayquerywindowController as ctrl',\n  bindings: {\n    'draggableContainment': '<?gmfDisplayquerywindowDraggableContainment',\n    'featuresStyleFn': '&gmfDisplayquerywindowFeaturesstyle',\n    'selectedFeatureStyleFn': '&gmfDisplayquerywindowSelectedfeaturestyle',\n    'defaultCollapsedFn': '&?gmfDisplayquerywindowDefaultcollapsed',\n    'desktop': '=gmfDisplayquerywindowDesktop',\n    'showUnqueriedLayers': '=gmfDisplayquerywindowShowunqueriedlayers'\n  },\n  templateUrl: gmfDisplayquerywindowTemplateUrl\n};\n\n\nexports.component('gmfDisplayquerywindow', exports.component_);\n\n\n/**\n * @param {!jQuery} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.QueryResult} ngeoQueryResult ngeo query result.\n * @param {!ngeo.query.MapQuerent} ngeoMapQuerent ngeo map querent service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisplayquerywindowController\n */\nexports.Controller_ = function($element, $scope, ngeoQueryResult, ngeoMapQuerent,\n  ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {Element|string}\n   * @export\n   */\n  this.draggableContainment;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.desktop = false;\n\n  /**\n   * Is the window currently collapsed?\n   * When used for Desktop, it is shown non-collapsed.\n   * @type {boolean}\n   * @export\n   */\n  this.collapsed = !this.desktop;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.showUnqueriedLayers_ = false;\n\n  /**\n   * Object that is used to filter the source list in the template.\n   * @type {Object}\n   * @export\n   */\n  this.sourcesFilter = {'queried': true};\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @export\n   */\n  this.ngeoQueryResult = {\n    sources: [],\n    total: 0,\n    pending: false\n  };\n\n  /**\n   * @type {!ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.selectedSource = null;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.highlightFeatures_ = new olCollection();\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.source = null;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature = null;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.currentResult = -1;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isNext = true;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.animate = 0;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.open = false;\n\n  /**\n   * @const {!jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  $scope.$watchCollection(\n    () => ngeoQueryResult,\n    (newQueryResult, oldQueryResult) => {\n      this.updateQueryResult_(newQueryResult);\n      if (newQueryResult.total > 0) {\n        this.show();\n      } else if (oldQueryResult !== newQueryResult) {\n        this.close();\n      }\n    });\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.draggableContainment = this.draggableContainment || 'document';\n  this.desktop = this.desktop;\n  this.collapsed = this['defaultCollapsedFn'] ?\n    this['defaultCollapsedFn']() === true : !this.desktop;\n\n  this.showUnqueriedLayers_ = this['showUnqueriedLayers'] ?\n    this['showUnqueriedLayers'] === true : false;\n\n  this.sourcesFilter = this.showUnqueriedLayers_ ? {} : {'queried': true};\n\n  const featuresOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  featuresOverlay.setFeatures(this.features_);\n  const featuresStyle = this['featuresStyleFn']();\n  if (featuresStyle !== undefined) {\n    googAsserts.assertInstanceof(featuresStyle, olStyleStyle);\n    featuresOverlay.setStyle(featuresStyle);\n  }\n\n  const highlightFeaturesOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  highlightFeaturesOverlay.setFeatures(this.highlightFeatures_);\n  let highlightFeatureStyle = this['selectedFeatureStyleFn']();\n  if (highlightFeatureStyle !== undefined) {\n    googAsserts.assertInstanceof(highlightFeatureStyle, olStyleStyle);\n  } else {\n    const fill = new olStyleFill({color: [255, 0, 0, 0.6]});\n    const stroke = new olStyleStroke({color: [255, 0, 0, 1], width: 2});\n    highlightFeatureStyle = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke\n    });\n  }\n  highlightFeaturesOverlay.setStyle(highlightFeatureStyle);\n\n  if (this.desktop) {\n    this.element_.find('.gmf-displayquerywindow .windowcontainer').draggable({\n      'cancel': 'input,textarea,button,select,option,tr',\n      'containment': this.draggableContainment\n    });\n    this.element_.find('.gmf-displayquerywindow .windowcontainer').resizable({\n      'minHeight': 240,\n      'minWidth': 240\n    });\n  }\n};\n\n\n/**\n * Remove current displayed results then get new results from the\n * ngeoQueryResult service. Display all results on the map and display,\n * highlight the first feature.\n * @export\n */\nexports.Controller_.prototype.show = function() {\n  this.clear();\n  this.updateFeatures_();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateFeatures_ = function() {\n  this.setCurrentResult_(0, false);\n  if (this.source !== null) {\n    this.collectFeatures_();\n    this.highlightCurrentFeature_();\n    this.open = true;\n  }\n};\n\n/**\n * Select a source and a feature depending of the given position.\n * @param {number} position The index of the feature. If the position is bigger\n * than the length of the first source, get it in the next source. Etc.\n * @param {boolean} setHighlight True to set the highlight automatically.\n * @return {boolean} True if result has changed. False else.\n * @private\n */\nexports.Controller_.prototype.setCurrentResult_ = function(\n  position, setHighlight) {\n  let hasChanged = false;\n  if (position !== this.currentResult) {\n    let i, source, features;\n    const lastFeature = this.feature;\n    const sources = this.ngeoQueryResult.sources;\n    this.currentResult = position;\n    for (i = 0; i < sources.length; i++) {\n      source = sources[i];\n      if (this.selectedSource !== null && this.selectedSource !== source) {\n        // when filtering on a source, only consider features of the selected source\n        continue;\n      }\n      features = source.features;\n      if (position >= features.length) {\n        position -= features.length;\n      } else {\n        this.source = source;\n        this.feature = source.features[position];\n        hasChanged = true;\n        break;\n      }\n    }\n    if (setHighlight) {\n      this.highlightCurrentFeature_(lastFeature);\n    }\n  }\n  return hasChanged;\n};\n\n\n/**\n * Select the logical previous source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.previous = function() {\n  let position = this.currentResult - 1;\n  if (position < 0) {\n    position = this.getResultLength() - 1;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(false);\n  }\n};\n\n\n/**\n * Select the logical next source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.next = function() {\n  let position = this.currentResult + 1;\n  const positionMax = this.getResultLength() - 1;\n  if (position > positionMax) {\n    position = 0;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(true);\n  }\n};\n\n\n/**\n * Remove features without properties from the query result.\n * @param {ngeox.QueryResult} queryResult ngeo query result.\n * @private\n */\nexports.Controller_.prototype.updateQueryResult_ = function(queryResult) {\n  this.ngeoQueryResult.total = 0;\n  this.ngeoQueryResult.sources.length = 0;\n  for (let i = 0; i < queryResult.sources.length; i++) {\n    const source = queryResult.sources[i];\n    source.features = source.features.filter((feature) => {\n      googAsserts.assert(feature);\n      return !olObj.isEmpty(ngeoMiscFeatureHelper.getFilteredFeatureValues(feature));\n    });\n    this.ngeoQueryResult.sources.push(source);\n    this.ngeoQueryResult.total += source.features.length;\n  }\n};\n\n/**\n * Get the total count of features in the result of the query. If a source\n * has been select, only the number of features of that source are returned.\n * @return {number} Total number of features.\n * @export\n */\nexports.Controller_.prototype.getResultLength = function() {\n  if (this.selectedSource === null) {\n    return this.ngeoQueryResult.total;\n  } else {\n    return this.selectedSource.features.length;\n  }\n};\n\n\n/**\n * @return {boolean} If the first result is active.\n * @export\n */\nexports.Controller_.prototype.isFirst = function() {\n  return this.currentResult == 0;\n};\n\n\n/**\n * @return {boolean} If the last result is active.\n * @export\n */\nexports.Controller_.prototype.isLast = function() {\n  return this.currentResult == this.getResultLength() - 1;\n};\n\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * @return {Object?} Filtered properties of the current feature or null.\n * @export\n */\nexports.Controller_.prototype.getFeatureValues = function() {\n  if (!this.feature) {\n    return null;\n  }\n  return ngeoMiscFeatureHelper.getFilteredFeatureValues(this.feature);\n};\n\n\n/**\n * Special function that's used to set the \"animation\" value after to set the\n * \"isNext\" value. The aim is to wait on Angular to add a class (corresponding\n * to \"isNext\") on the DOM before to set the \"animation\" value and do the\n * animation.\n * @param {boolean} isNext used to indicate if the user wants to see the next\n * or the previous result.\n * @private\n */\nexports.Controller_.prototype.animate_ = function(isNext) {\n  this.isNext = isNext;\n  this.animate++;\n};\n\n\n/**\n * Collect all features in the queryResult object.\n * @private\n */\nexports.Controller_.prototype.collectFeatures_ = function() {\n  const sources = this.ngeoQueryResult.sources;\n  this.features_.clear();\n  for (let i = 0; i < sources.length; i++) {\n    const source = sources[i];\n    if (this.selectedSource !== null && this.selectedSource !== source) {\n      // when filtering on a source, only add features of the selected source\n      continue;\n    }\n    const features = source.features;\n    for (let ii = 0; ii < features.length; ii++) {\n      this.features_.push(features[ii]);\n    }\n  }\n};\n\n\n/**\n * Highlight the current displayed feature.\n * @param {ol.Feature=} opt_lastFeature last highlighted feature. Require if\n * it exists because it must be added to the 'non-selected' features collection.\n * @private\n */\nexports.Controller_.prototype.highlightCurrentFeature_ =\nfunction(opt_lastFeature) {\n  this.highlightFeatures_.clear();\n  this.features_.remove(this.feature);\n  this.highlightFeatures_.push(this.feature);\n  if (opt_lastFeature !== undefined) {\n    this.features_.push(opt_lastFeature);\n  }\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.close = function() {\n  this.open = false;\n  this.clear();\n  this.ngeoMapQuerent_.clear();\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.feature = null;\n  this.source = null;\n  this.currentResult = -1;\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n  this.selectedSource = null;\n};\n\n\n/**\n * @param {ngeox.QueryResultSource} source The source to select.\n * @export\n */\nexports.Controller_.prototype.setSelectedSource = function(source) {\n  if (source !== null && source.features.length <= 0) {\n    // sources with no results can not be selected\n    return;\n  }\n  this.clear();\n  this.selectedSource = source;\n  this.updateFeatures_();\n};\n\n\nexports.controller('GmfDisplayquerywindowController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.query.extraModule\n */\nimport gmfQueryGridComponent from 'gmf/query/gridComponent.js';\nimport gmfQueryWindowComponent from 'gmf/query/windowComponent.js';\n\nimport './grid.less';\nimport './window.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryExtraModule', [\n  gmfQueryGridComponent.name,\n  gmfQueryWindowComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.search.module\n */\nimport gmfSearchComponent from 'gmf/search/component.js';\nimport gmfSearchFulltextSearch from 'gmf/search/FulltextSearch.js';\n\nimport './search.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfSearchModule', [\n  gmfSearchComponent.name,\n  gmfSearchFulltextSearch.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.selectorComponent\n */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport * as olEvents from 'ol/events.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeSelectorComponent', [\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/theme/selectorComponent', require('./selectorComponent.html'));\n});\n\n\nexports.value('gmfThemeSelectorTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfThemeSelectorTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/theme/selectorComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfThemeSelectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfThemeSelectorTemplateUrl($attrs, gmfThemeSelectorTemplateUrl) {\n  return gmfThemeSelectorTemplateUrl($attrs);\n}\n\n\n/**\n * Note that this component works with the {@link gmf.layertree.TreeManager}.\n * Setting the theme will update the \"tree\" object of\n * this {@link gmf.layertree.TreeManager}.\n *\n * Example:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span ng-if=\"mainCtrl.gmfThemeManager.modeFlush\">\n *            <span translate>Theme:</span>\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.getThemeName()\" translate>Loading...</b>\n *            <b ng-if=\"mainCtrl.gmfThemeManager.getThemeName()\">{{mainCtrl.gmfThemeManager.getThemeName()|translate}}</b>\n *          </span>\n *          <span ng-if=\"!mainCtrl.gmfThemeManager.modeFlush\">\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.themeName\" translate>Themes</b>\n *          </span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *\n * The theme selector can operate in a 'flush' (as above) or 'add' mode. For more information\n * about these modes, refer to the documentation of {@link gmf.layertree.TreeManager}.\n *\n * Example in 'add' mode:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span translate>Themes</span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('gmfTreeManagerModeFlush', false);\n *        })();\n *      </script>\n *\n * @htmlAttribute {Function} gmf-themeselector-filter The themes filter.\n *\n * @type {!angular.Component}\n */\nexports.component_ = {\n  bindings: {\n    'filter': '<gmfThemeselectorFilter'\n  },\n  controller: 'gmfThemeselectorController',\n  templateUrl: gmfThemeSelectorTemplateUrl\n};\n\nexports.component('gmfThemeselector', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {gmf.theme.Manager} gmfThemeManager Tree manager service.\n * @param {gmf.theme.Themes} gmfThemes Themes service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfThemeselectorController\n */\nexports.Controller_ = function($scope, gmfThemeManager, gmfThemes) {\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = gmfThemeManager;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {Array.<Object>}\n   * @export\n   */\n  this.themes;\n\n  /**\n   * @type {Function|undefined}\n   * @export\n   */\n  this.filter;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(this.gmfThemes_, 'change', this.setThemes_, this));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n\n};\n\n/**\n * Store the loaded themes locally applying a filter (if any), then set the\n * current theme.\n * @private\n */\nexports.Controller_.prototype.setThemes_ = function() {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    // Keep only the themes dedicated to the theme switcher\n    this.themes = this.filter ? themes.filter(this.filter) : themes;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfTheme} theme Theme.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.Controller_.prototype.setTheme = function(theme, opt_silent) {\n  if (theme) {\n    this.gmfThemeManager.addTheme(theme, opt_silent);\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('gmfThemeselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.module\n */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeSelectorComponent from 'gmf/theme/selectorComponent.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeModule', [\n  gmfThemeSelectorComponent.name,\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.displaywindowComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\nimport 'font-awesome/css/font-awesome.css';\nimport 'jquery-ui/ui/widgets/resizable.js';\nimport 'jquery-ui/ui/widgets/draggable.js';\nimport 'angular-sanitize';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMessageDisplaywindowComponent', [\n  'ngSanitize',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/message/displaywindowComponent', require('./displaywindowComponent.html'));\n});\n\n\nexports.value('ngeoMessageDisplaywindowTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoMessageDisplaywindowTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/message/displaywindowComponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoMessageDisplaywindowTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoMessageDisplaywindowTemplateUrl($attrs, ngeoMessageDisplaywindowTemplateUrl) {\n  return ngeoMessageDisplaywindowTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!jQuery} $element Element.\n   * @param {!angular.$sce} $sce Angular sce service.\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!angular.$compile} $compile The compile provider.\n   * @private\n   * @ngInject\n   * @ngdoc controller\n   * @ngname ngeoDisplaywindowComponentController\n   */\n  constructor($element, $sce, $scope, $compile) {\n\n    // === Binding Properties ===\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.clearOnClose;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.content = null;\n\n    /**\n     * @type {?string}\n     */\n    this.contentTemplate = null;\n\n    /**\n     * @type {?angular.Scope}\n     */\n    this.contentScope = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.draggable;\n\n    /**\n     * @type {Element|string}\n     * @export\n     */\n    this.draggableContainment;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.desktop;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.height = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.open;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.resizable;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.title = null;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.url = null;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.width = null;\n\n\n    // === Injected Properties ===\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {!angular.$sce}\n     * @private\n     */\n    this.sce_ = $sce;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {angular.$compile}\n     * @private\n     */\n    this.compile_ = $compile;\n  }\n\n  /**\n   * Called on initialization of the component.\n   */\n  $onInit() {\n\n    // Initialize binding properties\n    this.clearOnClose = this.clearOnClose !== false;\n    this.content = this.content || null;\n    this.contentTemplate = this.contentTemplate || null;\n    this.contentScope = this.contentScope || null;\n    this.desktop = this.desktop !== false;\n    this.draggableContainment = this.draggableContainment || 'document';\n    this.open = this.open === true;\n\n    this.draggable = this.draggable !== undefined ?\n      this.draggable : this.desktop;\n    this.resizable = this.resizable !== undefined ?\n      this.resizable : this.desktop;\n\n    // Draggable\n    if (this.draggable) {\n      this.element_.find('.ngeo-displaywindow .windowcontainer').draggable({\n        'containment': this.draggableContainment,\n        'handle': 'div.header'\n      });\n    }\n\n    // Resizable\n    if (this.resizable) {\n      this.element_.find('.ngeo-displaywindow .windowcontainer').resizable({\n        'minHeight': 240,\n        'minWidth': 240\n      });\n    }\n\n    if (this.contentTemplate) {\n      const scope = googAsserts.assert(this.contentScope || this.scope_);\n      const compiled = this.compile_(this.contentTemplate)(scope);\n      const displayWindow = this.element_.find('.ngeo-displaywindow .windowcontainer .animation-container');\n      displayWindow.append(/** @type {?} */ (compiled));\n    }\n  }\n\n  /**\n   * @export\n   */\n  close() {\n    this.open = false;\n    if (this.clearOnClose) {\n      this.clear_();\n    }\n  }\n\n  /**\n   * @return {!Object.<string, string>} CSS style when using width/height\n   * @export\n   */\n  get style() {\n    return {\n      'height': this.height || '240px',\n      'width': this.width || '240px'\n    };\n  }\n\n  /**\n   * @return {string|undefined} Trusted url.\n   * @export\n   */\n  get urlTrusted() {\n    if (this.url) {\n      return /** @type {string} */ (this.sce_.trustAsResourceUrl(this.url));\n    }\n  }\n\n  /**\n   * @export\n   */\n  clear_() {\n    this.content = null;\n    this.height = null;\n    this.title = null;\n    this.url = null;\n    this.width = null;\n  }\n};\n\n\n/**\n * The `ngeo-displaywindow` component is an alternative to the `ngeo.message.Popup`.\n * What they have in common:\n *\n * - support title\n * - support url to be shown in an iframe\n * - support plain HTML content\n * - support sizing, i.e. height and width.\n * - support being opened/closed\n *\n * The differences with the `ngeo.message.Popup` are:\n *\n * - it supports being dragged\n * - it supports being resized\n * - support angularjs template content\n *\n * Example:\n *      <ngeo-displaywindow\n *        class=\"window1\"\n *        url=\"::ctrl.window1Content\"\n *        desktop=\"::false\"\n *        open=\"::true\"\n *        title=\"'Window 1 - The simplest window (close kills it)'\">\n *      </ngeo-displaywindow>\n *\n * @htmlAttribute {boolean=} ngeo-displaywindow-clear-on-close Whether to clear the content on close or not.\n * @htmlAttribute {string=} ngeo-displaywindow-content The html content. If not provided, you must provide\n *     an url.\n * @htmlAttribute {string=} ngeo-displaywindow-content-template AngularJS template. It gets compiled during runtime\n * with the supplied scope (ngeo-displaywindow-content-scope).\n * @htmlAttribute {angular.Scope=} ngeo-displaywindow-content-scope Scope used for ngeo-displaywindow-content-template.\n * @htmlAttribute {boolean=} ngeo-displaywindow-desktop If true, the window is draggable and resizable. If\n *     not set, you must set manually both parameter.\n * @htmlAttribute {boolean=} ngeo-displaywindow-draggable Whether the window is draggable or not.\n * @htmlAttribute {string=} ngeo-displaywindow-draggable-containment The zone (CSS selector) where the window\n *     is authorized to be dragged.\n * @htmlAttribute {string=} ngeo-displaywindow-height The default height of the window.\n * @htmlAttribute {boolean=} ngeo-displaywindow-open Whether the window is open or not.\n * @htmlAttribute {string=} ngeo-displaywindow-title The html title of the window.\n * @htmlAttribute {string=} ngeo-displaywindow-url The URL to open in an iframe, in the window. The content\n *     attribute must not be provided.\n * @htmlAttribute {string=} ngeo-displaywindow-width The default width of the window.\n * @ngdoc component\n * @ngname ngeoDisplaywindow\n */\nexports.component('ngeoDisplaywindow', {\n  bindings: {\n    'clearOnClose': '<?',\n    'content': '=?',\n    'contentTemplate': '<?',\n    'contentScope': '<?',\n    'desktop': '<?',\n    'draggable': '<?',\n    'draggableContainment': '<?',\n    'height': '=?',\n    'open': '=?',\n    'resizable': '<?',\n    'title': '=?',\n    'url': '=?',\n    'width': '=?'\n  },\n  controller: exports.Controller_,\n  templateUrl: ngeoMessageDisplaywindowTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.controlComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport olMap from 'ol/Map.js';\nimport olControlControl from 'ol/control/Control.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoControl', []);\n\n\n/**\n * Provides a directive that can be used to add a control to the map\n * using a DOM element.\n *\n * Example:\n *\n *     <div ngeo-control=\"ctrl.control\" ngeo-control-map=\"ctrl.map\"></div>\n *\n * The expression passed to \"ngeo-control\" should evaluate to a control\n * instance, and the expression passed to \"ngeo-control-map\" should\n * evaluate to a map instance.\n *\n * See our live example: [../examples/control.html](../examples/control.html)\n *\n * @htmlAttribute {ol.Map} ngeo-control-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoControl\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const control = /** @type {ol.control.Control} */\n              (scope.$eval(attrs['ngeoControl']));\n      googAsserts.assertInstanceof(control, olControlControl);\n\n      const map = /** @type {ol.Map} */\n              (scope.$eval(attrs['ngeoControlMap']));\n      googAsserts.assertInstanceof(map, olMap);\n\n      control.setTarget(element[0]);\n      map.addControl(control);\n    }\n  };\n};\n\n\nexports.directive('ngeoControl', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.filereaderComponent\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFilereader', []);\n\n/**\n * This directive is to used on an input file element. When a file is selected\n * the directive uses the browser `FileReader` API to read the file. The file\n * content is provided to the directive user through the assignable expression.\n * Only works for text files (`readAsText` used for reading the file). And does\n * not work in Internet Explorer 9.\n *\n * Example:\n *\n *      <input type=\"file\" ngeo-filereader=\"ctrl.fileContent\"\n *        ngeo-filereader-supported=\"ctrl.supported\"/>\n *\n * See our live example: [../examples/importfeatures.html](../examples/importfeatures.html)\n *\n * @htmlAttribute {string} ngeo-filereader The content of the file read.\n * @htmlAttribute {boolean=} ngeo-filereader-supported Whether the FileReader API is supported.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoFilereader\n */\nexports.component_ = function($window) {\n  return {\n    restrict: 'A',\n    scope: {\n      'fileContent': '=ngeoFilereader',\n      'supported': '=?ngeoFilereaderSupported'\n    },\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      const supported = 'FileReader' in $window;\n      scope['supported'] = supported;\n      if (!supported) {\n        return;\n      }\n      element.on('change', (changeEvent) => {\n        /** @type {!FileReader} */\n        const fileReader = new $window.FileReader();\n        fileReader.onload = (\n          /**\n                 * @param {!ProgressEvent} evt Event.\n                 */\n          function(evt) {\n            scope.$apply(() => {\n              scope['fileContent'] = evt.target.result;\n            });\n          });\n        fileReader.readAsText(changeEvent.target.files[0]);\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoFilereader',\n  exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.getBrowserLanguage\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGetBrowserLanguage', []);\n\n\n/**\n * Provides a function that returns the most appropriate 2-letter\n * language code depending on the list of available languages and the browser\n * languages settings.\n *\n * @param {angular.$window} $window Angular $window service.\n * @return {ngeox.miscGetBrowserLanguage} The \"GetBrowserLanguage\" function.\n *\n * @ngdoc service\n * @ngname ngeoGetBrowserLanguage\n * @ngInject\n */\nexports.factory_ = function($window) {\n  return (\n    /**\n     * @param {Array.<string>} availableLanguages Available languages.\n     * @return {string} The \"best\" language code.\n     */\n    function(availableLanguages) {\n      const nav = $window.navigator;\n      let browserLanguages = nav.languages || nav.language ||\n            nav.browserLanguage || nav.systemLanguage || nav.userLanguage;\n      if (!Array.isArray(browserLanguages)) {\n        browserLanguages = [browserLanguages];\n      }\n      browserLanguages = browserLanguages.map(item => item.substring(0, 2));\n      // remove duplicated language codes\n      browserLanguages = browserLanguages.filter((item, index, arr) => arr.indexOf(item) == index);\n      const supportedLanguages = browserLanguages.filter(item => availableLanguages.indexOf(item) != -1);\n      return supportedLanguages[0];\n    });\n};\n\nexports.factory('ngeoGetBrowserLanguage', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.extraModule\n */\nimport ngeoMiscAutoProjection from 'ngeo/misc/AutoProjection.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\nimport ngeoMiscControlComponent from 'ngeo/misc/controlComponent.js';\nimport ngeoMiscDatepickerComponent from 'ngeo/misc/datepickerComponent.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoMiscFilereaderComponent from 'ngeo/misc/filereaderComponent.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoMiscGetBrowserLanguage from 'ngeo/misc/getBrowserLanguage.js';\nimport ngeoMiscSortableComponent from 'ngeo/misc/sortableComponent.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMiscExtraModule', [\n  ngeoMiscAutoProjection.module.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscControlComponent.name,\n  ngeoMiscDatepickerComponent.name,\n  ngeoMiscDebounce.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscFile.module.name,\n  ngeoMiscFilereaderComponent.name,\n  ngeoMiscFilters.name,\n  ngeoMiscGetBrowserLanguage.name,\n  ngeoMiscSortableComponent.name,\n  ngeoMiscTime.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.query.mapQueryComponent\n */\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport * as olEvents from 'ol/events.js';\n\nconst exports = angular.module('ngeoMapQuery', [\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\n/**\n * Provides a \"map query\" directive.\n *\n * This directive is responsible of binding a map and the ngeo query service\n * together. While active, clicks made on the map are listened by the directive\n * and a request gets issued to the query service.\n *\n * This directive doesn't require to be rendered in a visible DOM element, but\n * it could be used with a ngeo-btn to manage the activation of the directive.\n * See below an example without any use of UI:\n *\n * Example:\n *\n *      <span\n *        ngeo-map-query=\"\"\n *        ngeo-map-query-map=\"::ctrl.map\"\n *        ngeo-map-query-active=\"ctrl.queryActive\"\n *        ngeo-map-query-autoclear=\"ctrl.queryAutoClear\">\n *      </span>\n *\n * See our live example: [../examples/mapquery.html](../examples/mapquery.html)\n *\n * @param {ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n * @param {angular.$injector} $injector Main injector.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoMapQuery\n */\nexports.directive_ = function(ngeoMapQuerent, $injector) {\n  return {\n    restrict: 'A',\n    scope: false,\n    link: (scope, elem, attrs) => {\n      const map = scope.$eval(attrs['ngeoMapQueryMap']);\n      let clickEventKey_ = null;\n      let pointerMoveEventKey_ = null;\n\n      /**\n       * Called when the map is clicked while this controller is active. Issue\n       * a request to the query service using the coordinate that was clicked.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handleMapClick_ = function(evt) {\n        const coordinate = evt.coordinate;\n        ngeoMapQuerent.issue({\n          coordinate,\n          map\n        });\n      };\n\n      /**\n       * Called when the pointer is moved while this controller is active.\n       * Change the mouse pointer when hovering a non-transparent pixel on the\n       * map.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handlePointerMove_ = function(evt) {\n        if (!evt.dragging) {\n          const pixel = map.getEventPixel(evt.originalEvent);\n          const queryable = function(layer) {\n            const visible = layer.get('visible');\n            const sourceids = layer.get('querySourceIds');\n            return visible && !!sourceids;\n          };\n          const hit = map.forEachLayerAtPixel(pixel, () => true, undefined, queryable);\n          map.getTargetElement().style.cursor = hit ? 'pointer' : '';\n        }\n      };\n\n      /**\n       * Listen to the map events.\n       */\n      const activate_ = function() {\n        clickEventKey_ = olEvents.listen(map, 'singleclick', handleMapClick_);\n        const queryOptions = /** @type {ngeox.QueryOptions} */ (\n          $injector.has('ngeoQueryOptions') ? $injector.get('ngeoQueryOptions') : {}\n        );\n        if (queryOptions.cursorHover) {\n          pointerMoveEventKey_ = olEvents.listen(map, 'pointermove', handlePointerMove_);\n        }\n      };\n\n      /**\n       * Unlisten the map events.\n       */\n      const deactivate_ = function() {\n        if (clickEventKey_ !== null) {\n          olEvents.unlistenByKey(clickEventKey_);\n          clickEventKey_ = null;\n        }\n        if (pointerMoveEventKey_ !== null) {\n          olEvents.unlistenByKey(pointerMoveEventKey_);\n          pointerMoveEventKey_ = null;\n        }\n        if (scope.$eval(attrs['ngeoMapQueryAutoclear']) !== false) {\n          ngeoMapQuerent.clear();\n        }\n      };\n\n      // watch 'active' property -> activate/deactivate accordingly\n      scope.$watch(attrs['ngeoMapQueryActive'],\n        (newVal, oldVal) => {\n          if (newVal) {\n            activate_();\n          } else {\n            deactivate_();\n          }\n        }\n      );\n    }\n  };\n};\n\nexports.directive('ngeoMapQuery', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.WfsPermalink\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olExtent from 'ol/extent.js';\nimport * as olFormatFilter from 'ol/format/filter.js';\nimport olFormatWFS from 'ol/format/WFS.js';\n\n/**\n * WFS permalink service that can be used to load features with a WFS\n * GetFeature request given query parameters.\n *\n * Resulting features are then highlighted and\n * the map is zoomed to the nearest map extent.\n *\n * Parameters:\n *\n * - ``wfs_layer`` tells what layer will be queried\n * - ``wfs_showFeatures`` (boolean) tells if the features should be\n *   highlighted and listed (when true) or if the map should only be\n *   recentered on the features (when false). Default is true.\n * - other parameters will be considered as WFS attribute/values filters and\n *   must be of the form:\n *   ``wfs_<layer attribute name>=<a comma-separated list of values>``\n *\n * Example:\n * http://example.com?wfs_layer=parcels&wfs_city=Oslo&wfs_number=12,34,56\n * will load parcels #12, 34 and 56 of the city of Oslo.\n *\n * It is possible to define several groups of filtering parameters by:\n *\n * - adding a ``wfs_ngroups`` parameter telling how many groups are defined\n * - prefixing all filtering parameters by the number of each group,\n *   starting at 0. For instance ``wfs_0_<layer attribute name>``\n *\n * Example:\n * http://example.com?wfs_layer=parcels&wfs_ngroups=2\n * &wfs_0_city=Oslo&wfs_0_number=12,34,56&wfs_1_city=Paris&wfs_1_number=78,90\n * will load parcels #12, 34 and 56 of the city of Oslo as well as\n * parcels #78 and 90 of the city of Paris.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular $http service.\n * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n * @param {ngeox.WfsPermalinkOptions} ngeoWfsPermalinkOptions The options to\n *     configure the ngeo wfs permalink service with.\n * @ngdoc service\n * @ngname ngeoWfsPermalink\n * @ngInject\n */\nconst WfsPermalinkService = function($http, ngeoQueryResult, ngeoWfsPermalinkOptions) {\n\n  const options = ngeoWfsPermalinkOptions;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = options.url;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxFeatures_ = options.maxFeatures !== undefined ? options.maxFeatures : 50;\n\n  /**\n   * @type {Object<string, ngeox.WfsType>}\n   * @private\n   */\n  this.wfsTypes_ = {};\n\n  googAsserts.assertArray(options.wfsTypes, 'wfsTypes is not correctly set');\n  options.wfsTypes.forEach((wfsType) => {\n    this.wfsTypes_[wfsType.featureType] = wfsType;\n  });\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.defaultFeatureNS_ = options.defaultFeatureNS;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.defaultFeaturePrefix_ = options.defaultFeaturePrefix;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.pointRecenterZoom_ = options.pointRecenterZoom;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @private\n   */\n  this.result_ = ngeoQueryResult;\n};\n\n\n/**\n * Clear the results.\n * @export\n */\nWfsPermalinkService.prototype.clear = function() {\n  this.clearResult_();\n};\n\n\n/**\n * Build a WFS GetFeature request for the given query parameter data, send the\n * request and add the received features to {@link ngeox.QueryResult}.\n *\n * @param {ngeox.WfsPermalinkData} queryData Query data for the WFS request.\n * @param {ol.Map} map The ol3 map object to get the current projection from.\n * @export\n */\nWfsPermalinkService.prototype.issue = function(queryData, map) {\n  googAsserts.assert(this.url_,\n    'url is not set. to use the wfs permalink service, ' +\n      'set the value `ngeoWfsPermalinkOptions`');\n  this.clearResult_();\n\n  const typeName = queryData.wfsType;\n  if (!this.wfsTypes_.hasOwnProperty(typeName)) {\n    return;\n  }\n  const wfsType = this.wfsTypes_[typeName];\n\n  const filters = this.createFilters_(queryData.filterGroups);\n  if (filters === null) {\n    return;\n  }\n\n  this.issueRequest_(wfsType, filters, map, queryData.showFeatures);\n};\n\n\n/**\n * @param {ngeox.WfsType} wfsType Type.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {ol.Map} map The ol3 map object to get the current projection from.\n * @param {boolean} showFeatures Show features or only zoom to feature extent?\n * @private\n */\nWfsPermalinkService.prototype.issueRequest_ = function(wfsType, filter, map, showFeatures) {\n  const wfsFormat = new olFormatWFS();\n  const featureRequestXml = wfsFormat.writeGetFeature({\n    srsName: map.getView().getProjection().getCode(),\n    featureNS: (wfsType.featureNS !== undefined) ?\n      wfsType.featureNS : this.defaultFeatureNS_,\n    featurePrefix: (wfsType.featurePrefix !== undefined) ?\n      wfsType.featurePrefix : this.defaultFeaturePrefix_,\n    featureTypes: [wfsType.featureType],\n    outputFormat: 'GML3',\n    filter: filter,\n    maxFeatures: this.maxFeatures_\n  });\n\n  const featureRequest = new XMLSerializer().serializeToString(featureRequestXml);\n  const config = {\n    headers: {'Content-Type': 'text/xml; charset=UTF-8'}\n  };\n  this.$http_.post(this.url_, featureRequest, config).then((response) => {\n    const features = wfsFormat.readFeatures(response.data);\n    if (features.length == 0) {\n      return;\n    }\n\n    // zoom to features\n    const size = map.getSize();\n    if (size !== undefined) {\n      const maxZoom = this.pointRecenterZoom_;\n      const padding = [10, 10, 10, 10];\n      map.getView().fit(this.getExtent_(features), {size, maxZoom, padding});\n    }\n\n    // then show if requested\n    if (showFeatures) {\n      const resultSource = /** @type {ngeox.QueryResultSource} */ ({\n        'features': features,\n        'id': wfsType.featureType,\n        'identifierAttributeField': wfsType.label,\n        'label': wfsType.featureType,\n        'pending': false\n      });\n\n      this.result_.sources.push(resultSource);\n      this.result_.total = features.length;\n    }\n  });\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @return {ol.Extent} The extent of all features.\n * @private\n */\nWfsPermalinkService.prototype.getExtent_ = function(features) {\n  return features.reduce((extent, feature) => olExtent.extend(extent, feature.getGeometry().getExtent()), olExtent.createEmpty());\n};\n\n/**\n * Create OGC filters for the filter groups extracted from the query params.\n *\n * @param {Array.<ngeox.WfsPermalinkFilterGroup>} filterGroups Filter groups.\n * @return {ol.format.filter.Filter} OGC filters.\n * @private\n */\nWfsPermalinkService.prototype.createFilters_ = function(filterGroups) {\n  if (filterGroups.length == 0) {\n    return null;\n  }\n  const f = olFormatFilter;\n  const createFiltersForGroup = function(filterGroup) {\n    const filters = filterGroup.filters.map((filterDef) => {\n      const condition = filterDef.condition;\n      if (Array.isArray(condition)) {\n        return WfsPermalinkService.or_(condition.map(cond => f.equalTo(filterDef.property, cond)));\n      } else {\n        return f.equalTo(filterDef.property, filterDef.condition);\n      }\n    });\n    return WfsPermalinkService.and_(filters);\n  };\n  return WfsPermalinkService.or_(filterGroups.map(createFiltersForGroup));\n};\n\n\n/**\n * Join a list of filters with `and(...)`.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.and_ = function(filters) {\n  return WfsPermalinkService.joinFilters_(filters, olFormatFilter.and);\n};\n\n\n/**\n * Join a list of filters with `or(...)`.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.or_ = function(filters) {\n  return WfsPermalinkService.joinFilters_(filters, olFormatFilter.or);\n};\n\n\n/**\n * Join a list of filters with a given join function.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @param {function(!ol.format.filter.Filter, !ol.format.filter.Filter):\n *    ol.format.filter.Filter} joinFn The function to join two filters.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.joinFilters_ = function(filters, joinFn) {\n  return filters.reduce((combinedFilters, currentFilter) => {\n    if (combinedFilters === null) {\n      return currentFilter;\n    } else {\n      googAsserts.assert(currentFilter !== null);\n      return joinFn(combinedFilters, currentFilter);\n    }\n  }, null);\n};\n\n\n/**\n * Clear every features for all result sources and reset the total counter\n * as well.\n * @private\n */\nWfsPermalinkService.prototype.clearResult_ = function() {\n  this.result_.total = 0;\n  this.result_.sources.forEach((source) => {\n    source.features.length = 0;\n  });\n};\n\n\n/**\n * @type {!angular.Module}\n */\nWfsPermalinkService.module = angular.module('ngeoWfsPermalink', [\n  // FIXME add dependencies\n]);\n\n\n/**\n * Value that is supposed to be set in applications to enable the WFS\n * permalink functionality.\n */\nWfsPermalinkService.module.value('ngeoWfsPermalinkOptions',\n  /** @type {ngeox.WfsPermalinkOptions} */ ({\n    url: '',\n    wfsTypes: [],\n    defaultFeatureNS: '',\n    defaultFeaturePrefix: ''\n  })\n);\n\n\nWfsPermalinkService.module.service('ngeoWfsPermalink', WfsPermalinkService);\n\n\nexport default WfsPermalinkService;\n","/**\n * @module gmf.controllers.AbstractAppController\n */\nimport 'jquery';\nimport 'angular';\nimport 'angular-gettext';\nimport 'angular-dynamic-locale';\nimport gmfAuthenticationModule from 'gmf/authentication/module.js';\n\nimport gmfBackgroundlayerselectorComponent from 'gmf/backgroundlayerselector/component.js';\nimport gmfDatasourceModule from 'gmf/datasource/module.js';\nimport gmfDisclaimerComponent from 'gmf/disclaimer/component.js';\nimport gmfFiltersModule from 'gmf/filters/module.js';\nimport gmfLayertreeModule from 'gmf/layertree/module.js';\nimport gmfMapModule from 'gmf/map/module.js';\nimport gmfQueryExtraModule from 'gmf/query/extraModule.js';\nimport gmfSearchModule from 'gmf/search/module.js';\nimport gmfThemeModule from 'gmf/theme/module.js';\nimport ngeoMessageDisplaywindowComponent from 'ngeo/message/displaywindowComponent.js';\nimport ngeoMiscExtraModule from 'ngeo/misc/extraModule.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport ngeoQueryMapQueryComponent from 'ngeo/query/mapQueryComponent.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerWfsPermalink from 'ngeo/statemanager/WfsPermalink.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * Application abstract controller.\n *\n * This file includes `goog.require` for base components/directives used\n * by the HTML page and the controller to provide the configuration.\n *\n * @param {gmfx.Config} config A part of the application config.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @ngdoc controller\n * @ngInject\n * @export\n */\nconst exports = function(config, $scope, $injector) {\n\n  /**\n   * Location service\n   * @type {ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = $injector.get('ngeoLocation');\n  if (this.ngeoLocation.hasParam('debug')) {\n    // make the injector globally available\n    window.injector = $injector;\n  }\n\n  googAsserts.assertInstanceof(this.map, olMap);\n\n  /**\n   * Ngeo FeatureHelper service\n   * @type {ngeo.misc.FeatureHelper}\n   */\n  const ngeoFeatureHelper = $injector.get('ngeoFeatureHelper');\n  ngeoFeatureHelper.setProjection(googAsserts.assert(this.map.getView().getProjection()));\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = $injector.get('gmfThemeManager');\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.get('gmfTreeManager');\n\n  /**\n   * Themes service\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.get('gmfThemes');\n\n  /**\n   * Permalink service\n   * @type {gmf.permalink.Permalink}\n   * @private\n   */\n  this.permalink_ = $injector.get('gmfPermalink');\n\n  /**\n   * Authentication service\n   * @type {gmf.authentication.Service}\n   */\n  const gmfAuthentication = $injector.get('gmfAuthenticationService');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.hasEditableLayers = false;\n\n  /**\n   * @private\n   */\n  this.updateHasEditableLayers_ = function() {\n    this.gmfThemes_.hasEditableLayers().then((hasEditableLayers) => {\n      this.hasEditableLayers = hasEditableLayers;\n    });\n  };\n\n  /**\n   * @param {gmfx.AuthenticationEvent} evt Event.\n   */\n  const userChange = (evt) => {\n    const user = evt.detail.user;\n    const roleId = (user.username !== null) ? user.role_id : undefined;\n\n    // Open filter panel if 'open_panel' is set in functionalities and\n    // has 'layer_filter' as first value\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      const functionalities = this.gmfUser.functionalities;\n      if (functionalities &&\n          functionalities.open_panel &&\n          functionalities.open_panel[0] === 'layer_filter') {\n        this.filterSelectorActive = true;\n      }\n    });\n\n    // Reload theme and background layer when login status changes.\n    const previousThemeName = this.gmfThemeManager.getThemeName();\n    this.gmfThemeManager.setThemeName('', true);\n    if (evt.type !== 'ready') {\n      this.updateCurrentTheme_(previousThemeName);\n    }\n    // Reload themes when login status changes.\n    this.gmfThemes_.loadThemes(roleId);\n    this.updateHasEditableLayers_();\n  };\n\n  olEvents.listen(gmfAuthentication, 'ready', userChange);\n  olEvents.listen(gmfAuthentication, 'login', userChange);\n  olEvents.listen(gmfAuthentication, 'logout', userChange);\n\n  /**\n   * @type {Array.<gmfx.SearchComponentDatasource>}\n   * @export\n   */\n  this.searchDatasources = [{\n    labelKey: 'label',\n    groupValues: /** @type {Array.<string>} **/ ($injector.get('gmfSearchGroups')),\n    groupActions: /** @type {Array.<string>} **/ ($injector.get('gmfSearchActions')),\n    projection: `EPSG:${config.srid || 21781}`,\n    url: /** @type {string} **/ ($injector.get('fulltextsearchUrl'))\n  }];\n\n  /**\n   * @type {!Object.<string, string>}\n   * @export\n   */\n  this.dimensions = {};\n\n  // watch any change on dimensions object to refresh the url\n  this.permalink_.setDimensions(this.dimensions);\n\n  // Injecting the gmfDataSourcesManager service creates the data sources\n  const gmfDataSourcesManager = $injector.get('gmfDataSourcesManager');\n  // Init the datasources with our map.\n  gmfDataSourcesManager.setDatasourceMap(this.map);\n  // Give the dimensions to the gmfDataSourcesManager\n  gmfDataSourcesManager.setDimensions(this.dimensions);\n\n  if ($injector.has('gmfDefaultDimensions')) {\n    // Set defaults\n    const defaultDimensions = $injector.get('gmfDefaultDimensions');\n    for (const dim in defaultDimensions) {\n      if (this.dimensions[dim] === undefined) {\n        this.dimensions[dim] = defaultDimensions[dim];\n      }\n    }\n  }\n\n  /**\n   * @type {ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = $injector.get('ngeoBackgroundLayerMgr');\n\n  // watch any change on dimensions object to refresh the background layer\n  $scope.$watchCollection(() => this.dimensions, () => {\n    this.backgroundLayerMgr_.updateDimensions(this.map, this.dimensions);\n  });\n\n  this.backgroundLayerMgr_.on('change', () => {\n    this.backgroundLayerMgr_.updateDimensions(this.map, this.dimensions);\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.leftNavVisible = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.rightNavVisible = false;\n\n  const queryFill = new olStyleFill({color: [255, 170, 0, 0.6]});\n  const queryStroke = new olStyleStroke({color: [255, 170, 0, 1], width: 2});\n\n  /**\n   * FeatureStyle used by the gmf.query.windowComponent\n   * @type {ol.style.Style}\n   * @export\n   */\n  this.queryFeatureStyle = new olStyleStyle({\n    fill: queryFill,\n    image: new olStyleCircle({\n      fill: queryFill,\n      radius: 5,\n      stroke: queryStroke\n    }),\n    stroke: queryStroke\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.filterSelectorActive = false;\n\n  /**\n   * The active state of the ngeo query directive.\n   * @type {boolean}\n   * @export\n   */\n  this.queryActive = true;\n\n  /**\n   * Set the clearing of the ngeoQuery after the deactivation of the query\n   * @type {boolean}\n   * @export\n   */\n  this.queryAutoClear = true;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.printPanelActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.printActive = false;\n\n  /**\n   * @type {ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = $injector.get('ngeoMapQuerent');\n\n  // Don't deactivate ngeoQuery on print activation\n  $scope.$watch(() => this.printPanelActive, (newVal) => {\n    // Clear queries if another panel is open but not if user go back to the\n    // map form the print.\n    if (!newVal && !this.queryActive) {\n      this.ngeoMapQuerent_.clear();\n    }\n    this.queryAutoClear = !newVal;\n    this.printActive = newVal;\n  });\n\n  /**\n   * The active state of the directive responsible of point measurements.\n   * @type {boolean}\n   * @export\n   */\n  this.measurePointActive = false;\n\n  /**\n   * The active state of the directive responsible of length measurements.\n   * @type {boolean}\n   * @export\n   */\n  this.measureLengthActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawFeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawProfilePanelActive = false;\n\n  /**\n   * @type {gmfx.User}\n   * @export\n   */\n  this.gmfUser = $injector.get('gmfUser');\n\n  /**\n   * @type {ngeox.miscGetBrowserLanguage}\n   */\n  this.getBrowserLanguage = $injector.get('ngeoGetBrowserLanguage');\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   */\n  this.stateManager = $injector.get('ngeoStateManager');\n\n  /**\n   * @type {tmhDynamicLocale}\n   */\n  this.tmhDynamicLocale = $injector.get('tmhDynamicLocale');\n\n  /**\n   * @type {angular.Scope}\n   */\n  this.$scope = $scope;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.lang;\n\n  /**\n   * Default language\n   * @type {string}\n   */\n  this.defaultLang = $injector.get('defaultLang');\n\n  /**\n   * Languages URL\n   * @type {!Object.<string, string>}\n   */\n  this.langUrls = $injector.get('langUrls');\n\n  /**\n   * The gettext catalog\n   * @type {angularGettext.Catalog}\n   */\n  this.gettextCatalog = $injector.get('gettextCatalog');\n\n  this.initLanguage();\n\n  const mapTools = 'mapTools';\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.mapToolsGroup = mapTools;\n\n  /**\n   * The ngeo feature overlay manager service\n   * @type {ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.get('ngeoFeatureOverlayMgr');\n  ngeoFeatureOverlayMgr.init(this.map);\n\n  /**\n   * The ngeo ToolActivate manager service.\n   * @type {ngeo.misc.ToolActivateMgr}\n   */\n  const ngeoToolActivateMgr = $injector.get('ngeoToolActivateMgr');\n\n  const queryToolActivate = new ngeoMiscToolActivate(this, 'queryActive');\n  ngeoToolActivateMgr.registerTool(mapTools, queryToolActivate, true);\n\n  const measurePointActivate = new ngeoMiscToolActivate(this, 'measurePointActive');\n  ngeoToolActivateMgr.registerTool(mapTools, measurePointActivate, false);\n\n  const measureLengthActivate = new ngeoMiscToolActivate(this, 'measureLengthActive');\n  ngeoToolActivateMgr.registerTool(mapTools, measureLengthActivate, false);\n\n  const drawFeatureActivate = new ngeoMiscToolActivate(this, 'drawFeatureActive');\n  ngeoToolActivateMgr.registerTool(mapTools, drawFeatureActivate, false);\n\n  const drawProfilePanelActivate = new ngeoMiscToolActivate(this, 'drawProfilePanelActive');\n  ngeoToolActivateMgr.registerTool(mapTools, drawProfilePanelActivate, false);\n\n  const printPanelActivate = new ngeoMiscToolActivate(this, 'printPanelActive');\n  ngeoToolActivateMgr.registerTool(mapTools, printPanelActivate, false);\n\n  $scope.$root.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n    this.gmfThemes_.getThemeObject(name).then((theme) => {\n      this.setDefaultBackground_(theme);\n    });\n  });\n\n  /**\n   * @param {boolean} skipPermalink If True, don't use permalink\n   * background layer.\n   * @private\n   */\n  this.updateCurrentBackgroundLayer_ = function(skipPermalink) {\n    this.gmfThemes_.getBgLayers().then((layers) => {\n      let background;\n      if (!skipPermalink) {\n        // get the background from the permalink\n        background = this.permalink_.getBackgroundLayer(layers);\n      }\n      if (!background) {\n        // get the background from the user settings\n        const functionalities = this.gmfUser.functionalities;\n        if (functionalities) {\n          const defaultBasemapArray = functionalities.default_basemap;\n          if (defaultBasemapArray.length > 0) {\n            const defaultBasemapLabel = defaultBasemapArray[0];\n            background = olArray.find(layers, layer => layer.get('label') === defaultBasemapLabel);\n          }\n        }\n      }\n      if (!background && layers[1]) {\n        // fallback to the layers list, use the second one because the first\n        // is the blank layer\n        background = layers[1];\n      }\n\n      if (background) {\n        this.backgroundLayerMgr_.set(this.map, background);\n      }\n    });\n  }.bind(this);\n\n  this.updateCurrentBackgroundLayer_(false);\n\n  // Static \"not used\" functions should be in the window because otherwise\n  // closure remove them. \"export\" tag doesn't work on static function below,\n  // we \"export\" them as externs in the gmfx options file.\n  const gmfx = window.gmfx || {};\n  /**\n   * @export\n   */\n  window.gmfx = gmfx;\n\n  /**\n   * Static function to create a popup with an iframe.\n   * @param {string} url an url.\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width.\n   * @param {number=} opt_height CSS height.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  gmfx.openIframePopup = (\n    url, title, opt_width, opt_height, opt_apply\n  ) => {\n    this.displaywindowUrl = url;\n    gmfx.openPopup_(title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * Static function to create a popup with html content.\n   * @param {string} content (text or html).\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  gmfx.openTextPopup = (\n    content, title, opt_width, opt_height, opt_apply\n  ) => {\n    this.displaywindowContent = content;\n    gmfx.openPopup_(title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   */\n  gmfx.openPopup_ = (title, opt_width, opt_height, opt_apply) => {\n\n    this.displaywindowTitle = title;\n    this.displaywindowOpen = true;\n\n    if (opt_width) {\n      this.displaywindowWidth = `${opt_width}px`;\n    }\n    if (opt_height) {\n      this.displaywindowHeight = `${opt_height}px`;\n    }\n    if (opt_apply !== false) {\n      this.$scope.$apply();\n    }\n  };\n\n  /**\n   * Whether to update the size of the map on browser window resize.\n   * @type {boolean}\n   * @export\n   */\n  this.manageResize = false;\n\n  /**\n   * The duration (milliseconds) of the animation that may occur on the div\n   * containing the map. Used to smoothly resize the map while the animation\n   * is in progress.\n   * @type {number|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n  const cgxp = window.cgxp || {};\n  /**\n   * @export\n   */\n  window.cgxp = cgxp;\n  /**\n   * @export\n   */\n  cgxp.tools = window.cgxp.tools || {};\n  /**\n   * Static function to create a popup with an iframe.\n   * @param {string} url an url.\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  cgxp.tools.openInfoWindow = function(url, title, opt_width, opt_height, opt_apply) {\n    gmfx.openIframePopup(url, title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowContent = null;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.displaywindowDraggableContainment = '.gmf-map';\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowHeight = null;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.displaywindowOpen = false;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowTitle = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowUrl = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowWidth = null;\n};\n\n\n/**\n * @return {boolean} Return true if a user exists and its 'is_password_changed' value is explicitly set\n *     to false.\n * @export\n */\nexports.prototype.userMustChangeItsPassword = function() {\n  return this.gmfUser.is_password_changed === false;\n};\n\n\n/**\n * @param {Array.<ol.layer.Base>} layers Layers list.\n * @param {Array.<string>} labels default_basemap list.\n * @return {ol.layer.Base} layer or null\n */\nexports.getLayerByLabels = function(layers, labels) {\n  if (labels && labels.length > 0) {\n    return olArray.find(layers, layer => layer.get('label') === labels[0]);\n  }\n  return null;\n};\n\n\n/**\n * @param {string} lang Language code.\n * @export\n */\nexports.prototype.switchLanguage = function(lang) {\n  googAsserts.assert(lang in this.langUrls);\n  this.gettextCatalog.setCurrentLanguage(lang);\n  this.gettextCatalog.loadRemote(this.langUrls[lang]);\n  this.tmhDynamicLocale.set(lang);\n  this.lang = lang;\n};\n\n\n/**\n */\nexports.prototype.initLanguage = function() {\n  this.$scope.$watch(() => this.lang, (newValue) => {\n    this.stateManager.updateState({\n      'lang': newValue\n    });\n  });\n\n  const browserLanguage = /** @type {string|undefined} */\n      (this.getBrowserLanguage(Object.keys(this.langUrls)));\n  const urlLanguage = /** @type {string|undefined} */\n      (this.stateManager.getInitialValue('lang'));\n\n  if (urlLanguage !== undefined && urlLanguage in this.langUrls) {\n    this.switchLanguage(urlLanguage);\n    return;\n  } else if (browserLanguage !== undefined && browserLanguage in this.langUrls) {\n    this.switchLanguage(browserLanguage);\n    return;\n  } else {\n    // if there is no information about language preference,\n    // fallback to default language\n\n    this.switchLanguage(this.defaultLang);\n    return;\n  }\n};\n\n\n/**\n * @param {gmfThemes.GmfTheme} theme Theme.\n * @private\n */\nexports.prototype.setDefaultBackground_ = function(theme) {\n  this.gmfThemes_.getBgLayers().then((layers) => {\n    let layer;\n\n    // get the background from the permalink\n    layer = this.permalink_.getBackgroundLayer(layers);\n\n    if (!layer && this.gmfUser.functionalities) {\n      // get the background from the user settings\n      layer = exports.getLayerByLabels(layers, this.gmfUser.functionalities.default_basemap);\n    }\n\n    if (!layer && theme) {\n      // get the background from the theme\n      layer = exports.getLayerByLabels(layers, theme.functionalities.default_basemap);\n    }\n\n    if (!layer) {\n      // fallback to the layers list, use the second one because the first is the blank layer.\n      layer = layers[layers.length > 1 ? 1 : 0];\n    }\n\n    googAsserts.assert(layer);\n    this.backgroundLayerMgr_.set(this.map, layer);\n  });\n};\n\n/**\n * @param {string} fallbackThemeName fallback theme name.\n * @private\n */\nexports.prototype.updateCurrentTheme_ = function(fallbackThemeName) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.permalink_.defaultThemeNameFromFunctionalities();\n    if (themeName) {\n      const theme = gmfThemeThemes.findThemeByName(themes, /** @type {string} */ (themeName));\n      if (theme) {\n        this.gmfThemeManager.addTheme(theme, true);\n      }\n    } else {\n      this.gmfThemeManager.setThemeName(fallbackThemeName);\n    }\n  });\n};\n\n/**\n * @protected\n * @return {Element} Span element with font-awesome inside of it\n */\nexports.prototype.getLocationIcon = function() {\n  const arrow = document.createElement('span');\n  arrow.className = 'fa fa-location-arrow';\n  arrow.style.transform = 'rotate(-0.82rad)';\n  const arrowWrapper = document.createElement('span');\n  arrowWrapper.appendChild(arrow);\n  return arrowWrapper;\n};\n\n\nexports.module = angular.module('GmfAbstractAppControllerModule', [\n  'gettext',\n  'tmh.dynamicLocale',\n  gmfAuthenticationModule.name,\n  gmfBackgroundlayerselectorComponent.name,\n  gmfDatasourceModule.name,\n  gmfDisclaimerComponent.name,\n  gmfFiltersModule.name,\n  gmfLayertreeModule.name,\n  gmfMapModule.name,\n  gmfQueryExtraModule.name,\n  gmfSearchModule.name,\n  gmfThemeModule.name,\n  ngeoMessageDisplaywindowComponent.name,\n  ngeoMiscExtraModule.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoQueryMapQuerent.module.name,\n  ngeoQueryMapQueryComponent.name,\n  ngeoStatemanagerModule.name,\n  ngeoStatemanagerWfsPermalink.module.name,\n]);\n\n\nexports.module.controller('AbstractController', exports);\n\n\nexports.module.value('ngeoExportFeatureFormats', [\n  ngeoMiscFeatureHelper.FormatType.KML,\n  ngeoMiscFeatureHelper.FormatType.GPX\n]);\n\nexports.module.config(['tmhDynamicLocaleProvider', 'angularLocaleScript',\n  /**\n   * @param {tmhDynamicLocaleProvider} tmhDynamicLocaleProvider angular-dynamic-locale provider.\n   * @param {string} angularLocaleScript the script.\n   */\n  function(tmhDynamicLocaleProvider, angularLocaleScript) {\n    // configure the script URL\n    tmhDynamicLocaleProvider.localeLocationPattern(angularLocaleScript);\n  }\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.ModifyCircle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport * as olCoordinate from 'ol/coordinate.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olExtent from 'ol/extent.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport {fromCircle} from 'ol/geom/Polygon.js';\nimport olInteractionPointer, {handleEvent as pointerHandleEvent} from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStructsRBush from 'ol/structs/RBush.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleDragEvent: exports.handleDragEvent_,\n    handleEvent: exports.handleEvent,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * Editing vertex.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {ol.structs.RBush.<ol.ModifySegmentDataType>}\n   * @private\n   */\n  this.rBush_ = new olStructsRBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  this.features_.forEach(feature => this.addFeature_(feature));\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  if (feature.getGeometry().getType() === 'Polygon' &&\n      !!feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n    const geometry = /** @type {ol.geom.Polygon}*/ (feature.getGeometry());\n    this.writeCircleGeometry_(feature, geometry);\n\n    const map = this.getMap();\n    if (map) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<ol.ModifySegmentDataType>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n       * @param {ol.ModifySegmentDataType} node RTree node.\n       */\n    (node) => {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nexports.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = rings.length; j < jj; ++j) {\n    coordinates = rings[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(olExtent.boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates Coordinates.\n * @return {ol.Feature} Vertex feature.\n * @private\n */\nexports.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new olFeature(new olGeomPoint(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} a The first segment data.\n * @param {ol.ModifySegmentDataType} b The second segment data.\n * @return {number} The difference in indexes.\n * @private\n */\nexports.compareIndexes_ = function(a, b) {\n  return a.index - b.index;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDownEvent_ = function(evt) {\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  this.dragSegments_ = [];\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = olExtent.boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(exports.compareIndexes_);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = olBase.getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += `-${depth.join('-')}`; // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (olCoordinate.equals(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (olCoordinate.equals(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      }\n    }\n  }\n  return !!this.vertexFeature_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDragEvent_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const vertex = evt.coordinate;\n  const geometry = /** @type {ol.geom.Polygon}*/ (this.dragSegments_[0][0].geometry);\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const line = new olGeomLineString([center, vertex]);\n\n\n  /**\n   * @type {ol.geom.Circle}\n   */\n  const circle = new olGeomCircle(center, line.getLength());\n  const coordinates = fromCircle(circle, 64).getCoordinates();\n  this.setGeometryCoordinates_(geometry, coordinates);\n\n\n  const azimut = ngeoInteractionMeasureAzimut.getAzimut(line);\n  this.features_.getArray()[0].set(ngeoFormatFeatureProperties.AZIMUT, azimut);\n\n  this.createOrUpdateVertexFeature_(vertex);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleUpEvent_ = function(evt) {\n  this.rBush_.clear();\n  this.writeCircleGeometry_(this.dragSegments_[0][0].feature,\n    this.dragSegments_[0][0].geometry);\n\n  if (this.modified_) {\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifyend', {features: this.features_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.ModifyCircle}\n * @api\n */\nexports.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof olMapBrowserPointerEvent)) {\n    return true;\n  }\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == 'pointermove' && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n\n  return pointerHandleEvent.call(this, mapBrowserEvent) &&\n      !handled;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.PluggableMap} map Map.\n * @private\n */\nexports.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return olCoordinate.squaredDistanceToSegment(pixelCoordinate, a.segment) -\n        olCoordinate.squaredDistanceToSegment(pixelCoordinate, b.segment);\n  };\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = olExtent.boundingExtent([lowerLeft, upperRight]);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = (olCoordinate.closestOnSegment(pixelCoordinate,\n      closestSegment));\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    if (Math.sqrt(olCoordinate.squaredDistance(pixel, vertexPixel)) <=\n        this.pixelTolerance_) {\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = olCoordinate.squaredDistance(vertexPixel, pixel1);\n      const squaredDist2 = olCoordinate.squaredDistance(vertexPixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      this.snappedToVertex_ = dist <= this.pixelTolerance_;\n      if (this.snappedToVertex_) {\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        this.createOrUpdateVertexFeature_(vertex);\n        const vertexSegments = {};\n        vertexSegments[olBase.getUid(closestSegment)] = true;\n        let segment;\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          segment = nodes[i].segment;\n          if ((olCoordinate.equals(closestSegment[0], segment[0]) &&\n              olCoordinate.equals(closestSegment[1], segment[1]) ||\n              (olCoordinate.equals(closestSegment[0], segment[1]) &&\n              olCoordinate.equals(closestSegment[1], segment[0])))) {\n            vertexSegments[olBase.getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n        return;\n      }\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nexports.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.ModifyRectangle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorPoints_ = new olLayerVector({\n    source: new olSourceVector({\n      wrapX: !!options.wrapX\n    }),\n    visible: this.getActive(),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {Object.<number, ngeo.interaction.ModifyRectangle.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {?ngeo.interaction.ModifyRectangle.ModifyParams}\n   * @private\n   */\n  this.params_ = null;\n\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n  this.features_.forEach((feature) => {\n    this.addFeature_(feature);\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionPointer.prototype.setActive.call(this, active);\n  if (this.vectorPoints_) {\n    this.vectorPoints_.setVisible(active);\n  }\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const featureGeom = feature.getGeometry();\n  if (featureGeom instanceof olGeomPolygon) {\n\n    // If the feature's corners are already set, no need to set them again\n    const uid = olBase.getUid(feature);\n    let item = this.cache_[uid];\n    if (item) {\n      return;\n    }\n\n    const pointSource = this.vectorPoints_.getSource();\n\n    // from each corners, create a point feature and add it to the point layer.\n    // each point is then associated with 2 siblings in order to update the\n    // siblings geometry at the same time when a point gets dragged around.\n    // mark each one as 'corner'\n    const corners = featureGeom.getCoordinates()[0];\n    while (corners.length > 4) {\n      if (corners[0][0] < corners[1][0] && corners[0][1] <= corners[1][1]) {\n        corners.pop();\n      } else {\n        corners.shift();\n      }\n    }\n    const pointFeatures = [];\n    let cornerPoint;\n    let cornerFeature;\n    corners.forEach((corner) => {\n      cornerPoint = new olGeomPoint(corner);\n      cornerFeature = new olFeature({\n        'corner': true,\n        'geometry': cornerPoint,\n        'siblingX': null,\n        'siblingY': null,\n        'boxFeature': feature\n      });\n\n      pointFeatures.push(cornerFeature);\n    }, this);\n    item = /** @type {ngeo.interaction.ModifyRectangle.CacheItem} */ ({\n      corners: pointFeatures\n    });\n    this.cache_[uid] = item;\n\n    let previousFeature;\n    let nextFeature;\n    pointFeatures.forEach((cornerFeature, index) => {\n      previousFeature = pointFeatures[index - 1];\n      if (!previousFeature) {\n        previousFeature = pointFeatures[pointFeatures.length - 1];\n      }\n\n      nextFeature = pointFeatures[index + 1];\n      if (!nextFeature) {\n        nextFeature = pointFeatures[0];\n      }\n\n      if (index % 2 === 0) {\n        cornerFeature.set('siblingX', nextFeature);\n        cornerFeature.set('siblingY', previousFeature);\n      } else {\n        cornerFeature.set('siblingX', previousFeature);\n        cornerFeature.set('siblingY', nextFeature);\n      }\n\n    }, this);\n    pointSource.addFeatures(pointFeatures);\n  }\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n    this.params_ = this.initializeParams_();\n  }\n};\n\n\n/**\n * @return {ngeo.interaction.ModifyRectangle.ModifyParams} The initialised params\n * @private\n */\nexports.prototype.initializeParams_ = function() {\n  const feature = this.feature_;\n\n  // 1. Find the origin (opposite) point for the modify operation\n  // siblingY relative to the origin is siblingX relative to the opposite\n  const siblingY = feature.get('siblingX');\n  googAsserts.assertInstanceof(siblingY, olFeature);\n\n  const origin = siblingY.get('siblingY');\n  googAsserts.assertInstanceof(origin, olFeature);\n  const originPoint = origin.getGeometry();\n  googAsserts.assertInstanceof(originPoint, olGeomPoint);\n  const originCoordinate = originPoint.getCoordinates();\n  const originPixel = this.getMap().getPixelFromCoordinate(originCoordinate);\n\n  // 2. Find the origin's X sibling and the normal vector from the origin to it\n  const siblingX = origin.get('siblingX');\n  googAsserts.assertInstanceof(siblingX, olFeature);\n  const siblingXPoint = siblingX.getGeometry();\n  googAsserts.assertInstanceof(siblingXPoint, olGeomPoint);\n  const siblingXCoordinate = siblingXPoint.getCoordinates();\n  const siblingXPixel = this.getMap().getPixelFromCoordinate(siblingXCoordinate);\n  let vectorX = [\n    siblingXPixel[0] - originPixel[0],\n    siblingXPixel[1] - originPixel[1]\n  ];\n  const vectorXMagnitude = Math.sqrt(vectorX[0] * vectorX[0] + vectorX[1] * vectorX[1]);\n  vectorX[0] /= vectorXMagnitude;\n  vectorX[1] /= vectorXMagnitude;\n\n  // 3. Find the origin's Y sibling and the normal vector from the origin to it\n  const siblingYPoint = siblingY.getGeometry();\n  googAsserts.assertInstanceof(siblingYPoint, olGeomPoint);\n  const siblingYCoordinate = siblingYPoint.getCoordinates();\n  const siblingYPixel = this.getMap().getPixelFromCoordinate(siblingYCoordinate);\n  let vectorY = [\n    siblingYPixel[0] - originPixel[0],\n    siblingYPixel[1] - originPixel[1]\n  ];\n  const vectorYMagnitude = Math.sqrt(vectorY[0] * vectorY[0] + vectorY[1] * vectorY[1]);\n  vectorY[0] /= vectorYMagnitude;\n  vectorY[1] /= vectorYMagnitude;\n\n  // 4. Validate the vectors.\n  if (isNaN(vectorX[0]) && isNaN(vectorY[0])) {\n    // Both vector are invalid. Rotation information has already been lost\n    vectorX = [0, 1];\n    vectorY = [1, 0];\n  } else if (isNaN(vectorX[0])) {\n    vectorX = [vectorY[1], -vectorY[0]];\n  } else if (isNaN(vectorY[0])) {\n    vectorY = [vectorX[1], -vectorX[0]];\n  }\n\n  return {\n    originCoordinate,\n    originPixel,\n    siblingXPoint,\n    siblingYPoint,\n    vectorX,\n    vectorY\n  };\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const item = this.cache_[uid];\n  const corners = item.corners;\n  for (let i = 0; i < corners.length; i++) {\n    this.vectorPoints_.getSource().removeFeature(corners[i]);\n  }\n  this.feature_ = null;\n  corners.length = 0;\n  delete this.cache_[uid];\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.vectorPoints_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  const feature = map.forEachFeatureAtPixel(evt.pixel, feature =>\n    (feature.get('siblingX') && feature.get('siblingY') ? feature : undefined)\n  );\n\n  if (feature) {\n    this.feature_ = feature;\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const feature = this.feature_;\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (feature.getGeometry());\n\n  if (geometry instanceof olGeomPoint) {\n    geometry.setCoordinates(evt.coordinate);\n\n    const destinationPixel = evt.pixel;\n\n    const originPixel = this.params_.originPixel;\n    const siblingXPoint = this.params_.siblingXPoint;\n    const siblingYPoint = this.params_.siblingYPoint;\n    const vectorX = this.params_.vectorX;\n    const vectorY = this.params_.vectorY;\n    const originCoordinate = this.params_.originCoordinate;\n\n    // Calculate new positions of siblings\n    const b2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorX);\n    const b2Coordinate = this.getMap().getCoordinateFromPixel(b2Pixel);\n    siblingXPoint.setCoordinates(b2Coordinate);\n\n    const c2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorY);\n    const c2Coordinate = this.getMap().getCoordinateFromPixel(c2Pixel);\n    siblingYPoint.setCoordinates(c2Coordinate);\n\n\n    // Resize the box\n    const boxFeature = feature.get('boxFeature');\n    const geom = boxFeature.getGeometry();\n    googAsserts.assertInstanceof(geom, olGeomPolygon);\n    geom.setCoordinates([[evt.coordinate, b2Coordinate, originCoordinate, c2Coordinate, evt.coordinate]]);\n  }\n};\n\n\n/**\n * Calculate the new position of a point as projected on a vector from origin to\n * destination.\n * @param {ol.Pixel} origin Pixel of origin (opposite of the drag handle)\n * @param {ol.Pixel} destination Pixel of destination (the handle we dragged)\n * @param {ol.Pixel} vector The normalized vector to the point\n * @return {ol.Pixel} The new pixel of the point\n * @private\n */\nexports.prototype.calculateNewPixel_ = function(\n  origin, destination, vector) {\n\n  const aVector = [destination[0] - origin[0], destination[1] - origin[1]];\n\n  const abScalarProduct = aVector[0] * vector[0] + aVector[1] * vector[1];\n\n  const deltaVector = [\n    (vector[0] * abScalarProduct),\n    (vector[1] * abScalarProduct)\n  ];\n\n  return [deltaVector[0] + origin[0], deltaVector[1] + origin[1]];\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifyend', {features: this.features_});\n    this.dispatchEvent(event);\n    this.params_ = null;\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * @typedef {{\n *     corners: Array.<ol.Feature>\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     originCoordinate: ol.Coordinate,\n *     originPixel: ol.Pixel,\n *     siblingXPoint: ol.geom.Point,\n *     siblingYPoint: ol.geom.Point,\n *     vectorX: Array.<number>,\n *     vectorY: Array.<number>\n * }}\n */\nexports.ModifyParams;\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Modify\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModifyCircle from 'ngeo/interaction/ModifyCircle.js';\nimport ngeoInteractionModifyRectangle from 'ngeo/interaction/ModifyRectangle.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olCollection from 'ol/Collection.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * This interaction combines multiple kind of feature modification interactions\n * in order to be able to modify vector features depending on their geometry\n * type. The different kind of interactions supported are:\n *\n * - `ol.interaction.Modify`\n * - `ngeo.interaction.ModifyCircle`\n * - `ngeo.interaction.ModifyRectangle`\n *\n * This interaction receives a collection of features. Its job is to listen\n * to added/removed features to and from it and add them in the proper\n * collection that is uniquely used for each inner interaction. Those inner\n * interactions follow the `active` property of this interaction, i.e. when\n * this interaction is activated, so do the inner interactions. Since they will\n * never share the same feature, they don't collide with one an other.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Interaction}\n * @param {olx.interaction.ModifyOptions} options Options.\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.otherFeatures_ = new olCollection();\n\n  this.interactions_.push(new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.otherFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.circleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyCircle({\n    features: this.circleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.rectangleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyRectangle({\n    features: this.rectangleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionInteraction.prototype.setActive.call(this, active);\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const interactions = this.interactions_;\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    interactions.forEach((interaction) => {\n      currentMap.removeInteraction(interaction);\n    });\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    interactions.forEach((interaction) => {\n      map.addInteraction(interaction);\n    });\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Toggle interactions.\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const interactions = this.interactions_;\n  const keys = this.listenerKeys_;\n\n  interactions.forEach((interaction) => {\n    interaction.setActive(active && !!map);\n  });\n\n  if (active && map) {\n    this.features_.forEach(feature => this.addFeature_(feature));\n    keys.push(\n      olEvents.listen(this.features_, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.features_.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.push(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.remove(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {ol.Collection.<ol.Feature>} Collection of features for this feature.\n * @private\n */\nexports.prototype.getFeatureCollection_ = function(feature) {\n  let features;\n  const isCircle = feature.get(ngeoFormatFeatureProperties.IS_CIRCLE);\n  const isRectangle = feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE);\n  if (isCircle === true || isCircle === 'true') {\n    features = this.circleFeatures_;\n  } else if (isRectangle === true || isRectangle === 'true') {\n    features = this.rectangleFeatures_;\n  } else {\n    features = this.otherFeatures_;\n  }\n  return features;\n};\n\n\nexport default exports;\n","/**\n * @module gmf.import.wmsCapabilityLayertreeComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\n\nimport * as olBase from 'ol/index.js';\n\nimport 'bootstrap/js/collapse.js';\n\n\nconst exports = angular.module('gmfWmscapabilitylayertreenode', [\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  ngeoMessagePopup.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/import/wmsCapabilityLayertreeComponent', require('./wmsCapabilityLayertreeComponent.html'));\n});\n\n\nexports.value('gmfWmscapabilitylayertreenodeTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfWmscapabilitylayertreenodeTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/import/wmsCapabilityLayertreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfWmscapabilitylayertreenodeTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfWmscapabilitylayertreenodeTemplateUrl($attrs, gmfWmscapabilitylayertreenodeTemplateUrl) {\n  return gmfWmscapabilitylayertreenodeTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!gmf.datasource.ExternalDataSourcesManager}\n   *     gmfExternalDataSourcesManager GMF service responsible of managing\n   *     external data sources.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfWmscapabilitylayertreenodeController\n   */\n  constructor(gmfExternalDataSourcesManager) {\n\n    // Binding properties\n\n    /**\n     * WMS Capabilities definition\n     * @type {!Object}\n     * @export\n     */\n    this.capabilities;\n\n    /**\n     * WMS Capability Layer object.\n     * @type {!Object}\n     * @export\n     */\n    this.layer;\n\n    /**\n     * The original server url that was used to build the WMS GetCapabilities\n     * request.\n     * @type {string}\n     * @export\n     */\n    this.url;\n\n\n    // Injected properties\n\n    /**\n     * @type {!gmf.datasource.ExternalDataSourcesManager}\n     * @private\n     */\n    this.gmfExternalDataSourcesManager_ = gmfExternalDataSourcesManager;\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object\n   * @export\n   */\n  createAndAddDataSource(layer) {\n    this.gmfExternalDataSourcesManager_.createAndAddDataSourceFromWMSCapability(\n      layer,\n      this.capabilities,\n      this.url\n    );\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object\n   * @return {number} Unique id for the Capability Layer.\n   * @export\n   */\n  getUid(layer) {\n    return olBase.getUid(layer);\n  }\n};\n\n\nexports.component('gmfWmscapabilitylayertreenode', {\n  bindings: {\n    'capabilities': '<',\n    'layer': '<',\n    'url': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfWmscapabilitylayertreenodeTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.import.wmtsCapabilityLayertreeComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\n\nimport * as olBase from 'ol/index.js';\n\nconst exports = angular.module('gmfWmtscapabilitylayertree', [\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  ngeoMessagePopup.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/import/wmtsCapabilityLayertreeComponent', require('./wmtsCapabilityLayertreeComponent.html'));\n});\n\n\nexports.value('gmfWmtscapabilitylayertreTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfWmtscapabilitylayertreTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/import/wmtsCapabilityLayertreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfWmtscapabilitylayertreTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfWmtscapabilitylayertreTemplateUrl($attrs, gmfWmtscapabilitylayertreTemplateUrl) {\n  return gmfWmtscapabilitylayertreTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!gmf.datasource.ExternalDataSourcesManager}\n   *     gmfExternalDataSourcesManager GMF service responsible of managing\n   *     external data sources.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfWmtscapabilitylayertreeController\n   */\n  constructor(gmfExternalDataSourcesManager) {\n\n    // Binding properties\n\n    /**\n     * WMS Capabilities definition\n     * @type {!Object}\n     * @export\n     */\n    this.capabilities;\n\n    /**\n     * List of WMTS Capability Layer objects.\n     * @type {!Array.<!Object>}\n     * @export\n     */\n    this.layers;\n\n    /**\n     * The original WMTS GetCapabilities url that was used to fetch the\n     * capability layers.\n     * @type {string}\n     * @export\n     */\n    this.url;\n\n\n    // Injected properties\n\n    /**\n     * @type {!gmf.datasource.ExternalDataSourcesManager}\n     * @private\n     */\n    this.gmfExternalDataSourcesManager_ = gmfExternalDataSourcesManager;\n  }\n\n  /**\n   * @param {!Object} layer WMTS Capability Layer object\n   * @export\n   */\n  createAndAddDataSource(layer) {\n    const manager = this.gmfExternalDataSourcesManager_;\n    manager.createAndAddDataSourceFromWMTSCapability(\n      layer,\n      this.capabilities,\n      this.url\n    );\n  }\n\n  /**\n   * @param {!Object} layer WMTS Capability Layer object\n   * @return {number} Unique id for the Capability Layer.\n   * @export\n   */\n  getUid(layer) {\n    return olBase.getUid(layer);\n  }\n};\n\n\nexports.component('gmfWmtscapabilitylayertree', {\n  bindings: {\n    'capabilities': '<',\n    'layers': '<',\n    'url': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfWmtscapabilitylayertreTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.import.importdatasourceComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\n\n/** @suppress {extraRequire} */\nimport gmfImportWmsCapabilityLayertreeComponent from 'gmf/import/wmsCapabilityLayertreeComponent.js';\n\n/** @suppress {extraRequire} */\nimport gmfImportWmtsCapabilityLayertreeComponent from 'gmf/import/wmtsCapabilityLayertreeComponent.js';\n\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\nconst exports = angular.module('gmfImportdatasource', [\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfImportWmsCapabilityLayertreeComponent.name,\n  gmfImportWmtsCapabilityLayertreeComponent.name,\n  ngeoQueryQuerent.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/import/importdatasourceComponent', require('./importdatasourceComponent.html'));\n});\n\n\nexports.value('gmfImportdatasourceTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfImportdatasourceTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/import/importdatasourceComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfImportdatasourceTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfImportdatasourceTemplateUrl($attrs, gmfImportdatasourceTemplateUrl) {\n  return gmfImportdatasourceTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!jQuery} $element Element.\n   * @param {!angular.$filter} $filter Angular filter.\n   * @param {!angular.$injector} $injector Main injector.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!gmf.datasource.ExternalDataSourcesManager}\n   *     gmfExternalDataSourcesManager GMF service responsible of managing\n   *     external data sources.\n   * @param {!ngeo.query.Querent} ngeoQuerent Ngeo querent service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfImportdatasourceController\n   */\n  constructor($element, $filter, $injector, $scope, $timeout,\n    gmfExternalDataSourcesManager, ngeoQuerent) {\n\n    // Binding properties\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n\n    // Injected properties\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!gmf.datasource.ExternalDataSourcesManager}\n     * @private\n     */\n    this.gmfExternalDataSourcesManager_ = gmfExternalDataSourcesManager;\n\n    /**\n     * @type {!ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n\n    // Model properties\n\n    /**\n     * @type {File|undefined}\n     * @export\n     */\n    this.file;\n\n    /**\n     * @type {string|undefined}\n     * @export\n     */\n    this.url;\n\n\n    // Inner properties\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.fileInput_ = $element.find('input[type=file]');\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.hasError = false;\n\n    /**\n     * @type {?angular.$q.Promise}\n     * @private\n     */\n    this.hasErrorPromise_ = null;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.mode = exports.Controller_.Mode.ONLINE;\n\n    /**\n     * @type {!Array.<string>}\n     * @export\n     */\n    this.modes = [\n      exports.Controller_.Mode.LOCAL,\n      exports.Controller_.Mode.ONLINE\n    ];\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.pending = false;\n\n    /**\n     * @type {!ngeox.unitPrefix}\n     * @private\n     */\n    this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ (\n      $filter('ngeoUnitPrefix'));\n\n    /**\n     * Current WMS Capabilities that were connected.\n     * @type {?Object}\n     * @export\n     */\n    this.wmsCapabilities = null;\n\n    /**\n     * Current WTMS Capabilities that were connected.\n     * @type {?Object}\n     * @export\n     */\n    this.wmtsCapabilities = null;\n\n    /**\n     * @type {Bloodhound|undefined}\n     * @private\n     */\n    this.serversEngine_;\n\n    const servers = $injector.has('gmfExternalOGCServers') ?\n      /** @type {Array.<!gmfx.ExternalOGCServer>|undefined} */ (\n        $injector.get('gmfExternalOGCServers')\n      ) : undefined;\n\n    if (servers) {\n      const serverUrls = servers.map(server => server['url']);\n      this.serversEngine_ = new Bloodhound({\n        /**\n         * Allows search queries to match from string from anywhere within\n         * the url, and not only from the beginning of the string (which is\n         * the default, non-configurable behaviour of bloodhound).\n         *\n         * Borrowed from:\n         * https://stackoverflow.com/questions/22059933/twitter-typeahead-js-how-to-return-all-matched-elements-within-a-string\n         *\n         * @param {BloodhoundDatum} datum Datum.\n         * @return {Array.<string>} List of datum tokenizers.\n         */\n        datumTokenizer: (datum) => {\n          googAsserts.assertString(datum);\n          const originalDatumTokenizers = Bloodhound.tokenizers.whitespace(\n            datum);\n          googAsserts.assert(originalDatumTokenizers);\n          const datumTokenizers = [];\n          for (const originalDatumTokenizer of originalDatumTokenizers) {\n            let i = 0;\n            while ((i + 1) < originalDatumTokenizer.length) {\n              datumTokenizers.push(\n                originalDatumTokenizer.substr(\n                  i,\n                  originalDatumTokenizer.length\n                )\n              );\n              i++;\n            }\n          }\n          return datumTokenizers;\n        },\n        queryTokenizer: Bloodhound.tokenizers.whitespace,\n        identify: false,\n        local: serverUrls\n      });\n    }\n\n    // Register input[type=file] onchange event, use HTML5 File api\n    this.fileInput_.on('change', () => {\n      this.file = this.fileInput_[0].files && this.fileInput_[0].files[0] ?\n        this.fileInput_[0].files[0] : undefined;\n      this.scope_.$apply();\n    });\n  }\n\n  /**\n   * Called on initialization of the component.\n   */\n  $onInit() {\n    this.gmfExternalDataSourcesManager_.map = this.map;\n\n\n    if (this.serversEngine_) {\n      // Timeout to let Angular render the placeholder of the input properly,\n      // otherwise typeahead would copy the string with {{}} in it...\n      this.timeout_(() => {\n        googAsserts.assert(this.serversEngine_);\n        const $urlInput = this.element_.find('input[name=url]');\n        const $connectBtn = this.element_.find('button.gmf-importdatasource-connect-btn');\n        $urlInput.typeahead({\n          hint: true,\n          highlight: true,\n          minLength: 1\n        }, {\n          name: 'url',\n          source: this.serversEngine_.ttAdapter()\n        }).bind('typeahead:select', (ev, suggestion) => {\n          this.timeout_(() => {\n            this.url = suggestion;\n            this.scope_.$apply();\n            $connectBtn.focus();\n          });\n        });\n      });\n    }\n  }\n\n  /**\n   * Triggers a 'click' on the \"Browse\" button.\n   * @export\n   */\n  browse() {\n    this.element_.find('input[type=file][name=file]').click();\n  }\n\n  /**\n   * Connect to given online resource URL.\n   * @export\n   */\n  connect() {\n    const url = googAsserts.assertString(this.url);\n    const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n    this.startWorking_();\n    if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n      this.ngeoQuerent_.wmsGetCapabilities(url).then(\n        (wmsCapabilities) => {\n          this.wmsCapabilities = wmsCapabilities;\n          this.stopWorking_();\n        },\n        () => {\n          // Something went wrong...\n          this.stopWorking_(true);\n        }\n      );\n    } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n      this.ngeoQuerent_.wmtsGetCapabilities(url).then(\n        (wmtsCapabilities) => {\n          this.wmtsCapabilities = wmtsCapabilities;\n          this.stopWorking_();\n        },\n        () => {\n          // Something went wrong...\n          this.stopWorking_(true);\n        }\n      );\n    } else {\n      // Could not determine the type of url\n      this.timeout_(() => {\n        this.stopWorking_(true);\n      });\n    }\n  }\n\n  /**\n   * Create data source from file.\n   * @export\n   */\n  load() {\n    const file = googAsserts.assert(this.file);\n    this.gmfExternalDataSourcesManager_.createAndAddDataSourceFromFile(file);\n  }\n\n  /**\n   * @return {string} The name of the file and human-readable size.\n   * @export\n   */\n  get fileNameAndSize() {\n    let nameAndSize = '';\n\n    const file = this.file;\n    if (file !== undefined) {\n      const fileSize = this.unitPrefixFormat_(file.size, 'o');\n      nameAndSize = `${file.name}, ${fileSize}`;\n    }\n\n    return nameAndSize;\n  }\n\n\n  // === Private methods ===\n\n  /**\n   * @private\n   */\n  startWorking_() {\n    this.pending = true;\n    this.hasError = false;\n\n    // Clear any previous objects\n    this.wmsCapabilities = null;\n    this.wmtsCapabilities = null;\n  }\n\n  /**\n   * @param {boolean=} opt_hasError Whether we stopped working because of after\n   *     an error.\n   * @private\n   */\n  stopWorking_(opt_hasError = false) {\n    this.pending = false;\n    if (opt_hasError) {\n      this.hasError = true;\n      if (this.hasErrorPromise_) {\n        this.timeout_.cancel(this.hasErrorPromise_);\n      }\n      this.hasErrorPromise_ = this.timeout_(() => {\n        this.hasError = false;\n        this.hasErrorPromise_ = null;\n      }, 3000);\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.Controller_.Mode = {\n  LOCAL: 'Local',\n  ONLINE: 'Online'\n};\n\n\nexports.component('gmfImportdatasource', {\n  bindings: {\n    'map': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfImportdatasourceTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.import.module\n */\nimport gmfImportImportdatasourceComponent from 'gmf/import/importdatasourceComponent.js';\nimport gmfImportWmsCapabilityLayertreeComponent from 'gmf/import/wmsCapabilityLayertreeComponent.js';\nimport gmfImportWmtsCapabilityLayertreeComponent from 'gmf/import/wmtsCapabilityLayertreeComponent.js';\n\nimport './import.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfImportModule', [\n  gmfImportImportdatasourceComponent.name,\n  gmfImportWmsCapabilityLayertreeComponent.name,\n  gmfImportWmtsCapabilityLayertreeComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.Controller\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {ol.Collection.<ol.Feature>} ngeoFeatures Collection of features.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDrawfeatureController\n */\nconst exports = function($scope, $sce, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * Alternate collection of features in which to push the drawn features.\n   * If not defined, then `ngeoFeatures` is used instead.\n   * @type {!ol.Collection.<!ol.Feature>|undefined}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showMeasure;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n  // Fill the string collection\n  gettextCatalog.getString('Point');\n  gettextCatalog.getString('LineString');\n  gettextCatalog.getString('Polygon');\n  gettextCatalog.getString('Circle');\n  gettextCatalog.getString('Rectangle');\n  gettextCatalog.getString('Text');\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = ngeoFeatures;\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawPoint;\n\n  /**\n   * @type {ngeo.interaction.MeasureLength}\n   * @export\n   */\n  this.measureLength;\n\n  /**\n   * @type {ngeo.interaction.MeasureArea}\n   * @export\n   */\n  this.measureArea;\n\n  /**\n   * @type {ngeo.interaction.MeasureAzimut}\n   * @export\n   */\n  this.measureAzimut;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawRectangle;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawText;\n\n\n  // Watch the \"active\" property, and disable the draw interactions\n  // when \"active\" gets set to false.\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      if (newVal === false) {\n        this.interactions_.forEach((interaction) => {\n          interaction.setActive(false);\n        });\n      }\n    }\n  );\n\n};\n\n\n/**\n * Register a draw|measure interaction by setting it inactive, decorating it\n * and adding it to the map\n * @param {ol.interaction.Interaction} interaction Interaction to register.\n * @export\n */\nexports.prototype.registerInteraction = function(\n  interaction) {\n  this.interactions_.push(interaction);\n  interaction.setActive(false);\n  ngeoMiscDecorate.interaction(interaction);\n  this.map.addInteraction(interaction);\n};\n\n\n/**\n * Called when any of the draw or measure interaction active property changes.\n * Set the active property of this directive accordingly, i.e. if at least\n * one of the draw or measure is active then the active property is set to true.\n * @param {ol.Object.Event} event Event.\n * @export\n */\nexports.prototype.handleActiveChange = function(event) {\n  this.active = this.interactions_.some(interaction => interaction.getActive(), this);\n};\n\n\n/**\n * Called when a feature is finished being drawn. Set the default properties\n * for its style, then set its style and add it to the features collection.\n * @param {string} type Type of geometry being drawn.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.prototype.handleDrawEnd = function(type, event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  googAsserts.assert(sketch);\n\n  const azimut = sketch.get('azimut');\n\n  const features = this.features || this.ngeoFeatures_;\n\n  const feature = new olFeature(sketch.getGeometry());\n\n  const prop = ngeoFormatFeatureProperties;\n\n  switch (type) {\n    case ngeoGeometryType.CIRCLE:\n      feature.set(prop.IS_CIRCLE, true);\n      if (azimut !== undefined) {\n        feature.set(prop.AZIMUT, azimut);\n      }\n      break;\n    case ngeoGeometryType.TEXT:\n      feature.set(prop.IS_TEXT, true);\n      break;\n    case ngeoGeometryType.RECTANGLE:\n      feature.set(prop.IS_RECTANGLE, true);\n      break;\n    default:\n      break;\n  }\n\n  /**\n   * @type {string}\n   */\n  const name = this.gettextCatalog_.getString(type);\n  feature.set(prop.NAME, `${name} ${features.getLength() + 1}`);\n\n  /**\n   * @type {string}\n   */\n  const color = type !== ngeoGeometryType.TEXT ? '#DB4436' : '#000000';\n  feature.set(prop.COLOR, color);\n\n  feature.set(prop.ANGLE, 0);\n  feature.set(prop.OPACITY, 0.2);\n  feature.set(prop.SHOW_MEASURE, this.showMeasure ? true : false);\n  feature.set(prop.SHOW_LABEL, false);\n  feature.set(prop.SIZE, 10);\n  feature.set(prop.STROKE, 2);\n\n  // set style\n  this.featureHelper_.setStyle(feature);\n\n  // push in collection\n  features.push(feature);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDrawfeatureController', [\n  ngeoDrawFeatures.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\nexports.module.controller('ngeoDrawfeatureController', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.point\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawpoint', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawPoint = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawPoint);\n      drawFeatureCtrl.drawPoint = drawPoint;\n\n      olEvents.listen(\n        drawPoint,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POINT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawPoint,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawpoint', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.rectangle\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawrectangle', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawrectangle\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawRectangle = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n        geometryFunction: (coordinates, geometry) => {\n          if (!geometry) {\n            geometry = new olGeomPolygon(null);\n          }\n          const start = coordinates[0];\n          const end = coordinates[1];\n          geometry.setCoordinates([\n            [start, [start[0], end[1]], end, [end[0], start[1]], start]\n          ]);\n          return geometry;\n        },\n        maxPoints: 2\n      });\n\n      drawFeatureCtrl.registerInteraction(drawRectangle);\n      drawFeatureCtrl.drawRectangle = drawRectangle;\n\n      olEvents.listen(\n        drawRectangle,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.RECTANGLE),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawRectangle,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawrectangle', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.text\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawtext', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawtext\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawText = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawText);\n      drawFeatureCtrl.drawText = drawText;\n\n      olEvents.listen(\n        drawText,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.TEXT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawText,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawtext', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.area\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurearea', [\n  ngeoDrawController.module.name\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing polygon');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br>' +\n          'Double-click or click starting point to finish');\n\n      const measureArea = new ngeoInteractionMeasureArea($filter('ngeoUnitPrefix'), gettextCatalog, {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureArea);\n      drawFeatureCtrl.measureArea = measureArea;\n\n      olEvents.listen(\n        measureArea,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POLYGON),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureArea,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurearea', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.azimut\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport {fromCircle} from 'ol/geom/Polygon.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasureazimut', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing circle');\n      const contMsg = gettextCatalog.getString('Click to finish');\n\n      const measureAzimut = new ngeoInteractionMeasureAzimut(\n        $filter('ngeoUnitPrefix'), $filter('number'), {\n          style: new olStyleStyle(),\n          startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n          continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n          precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined,\n          decimals: $injector.has('ngeoMeasureDecimals') ? $injector.get('ngeoMeasureDecimals') : undefined\n        });\n\n      drawFeatureCtrl.registerInteraction(measureAzimut);\n      drawFeatureCtrl.measureAzimut = measureAzimut;\n\n      olEvents.listen(\n        measureAzimut,\n        'measureend',\n        /**\n         * @param {ngeox.MeasureEvent} event Event.\n         */\n        (event) => {\n          // In the case of azimut measure interaction, the feature's\n          // geometry is actually a collection (line + circle)\n          // For our purpose here, we only need the circle, which gets\n          // transformed into a polygon with 64 sides.\n          const geometry = /** @type {ol.geom.GeometryCollection} */\n                (event.detail.feature.getGeometry());\n          const circle = /** @type {ol.geom.Circle} */ (\n            geometry.getGeometries()[1]);\n          const polygon = fromCircle(circle, 64);\n          event.detail.feature = new olFeature(polygon);\n          const azimut = ngeoInteractionMeasureAzimut.getAzimut(\n            /** @type {ol.geom.LineString} */ (geometry.getGeometries()[0])\n          );\n          event.detail.feature.set('azimut', azimut);\n\n          drawFeatureCtrl.handleDrawEnd(ngeoGeometryType.CIRCLE, event);\n        },\n        drawFeatureCtrl\n      );\n\n      olEvents.listen(\n        measureAzimut,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasureazimut', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.length\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurelength', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing line');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br>' +\n          'Double-click or click last point to finish');\n\n      const measureLength = new ngeoInteractionMeasureLength($filter('ngeoUnitPrefix'), gettextCatalog, {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureLength);\n      drawFeatureCtrl.measureLength = measureLength;\n\n      olEvents.listen(\n        measureLength,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.LINE_STRING),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureLength,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurelength', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.component\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawPoint from 'ngeo/draw/point.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawRectangle from 'ngeo/draw/rectangle.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawText from 'ngeo/draw/text.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureArea from 'ngeo/measure/area.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureAzimut from 'ngeo/measure/azimut.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureLength from 'ngeo/measure/length.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawfeature', [\n  ngeoDrawController.module.name,\n  ngeoDrawPoint.name,\n  ngeoDrawRectangle.name,\n  ngeoDrawText.name,\n  ngeoMeasureArea.name,\n  ngeoMeasureAzimut.name,\n  ngeoMeasureLength.name,\n]);\n\n\n/**\n * Directive used to draw vector features on a map.\n * Example:\n *\n *     <ngeo-drawfeature\n *         ngeo-btn-group\n *         class=\"btn-group\"\n *         ngeo-drawfeature-active=\"ctrl.drawActive\"\n *         ngeo-drawfeature-map=\"::ctrl.map\">\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawpoint\n *         class=\"btn btn-default ngeo-drawfeature-point\"\n *         ng-class=\"{active: dfCtrl.drawPoint.active}\"\n *         ng-model=\"dfCtrl.drawPoint.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurelength\n *         class=\"btn btn-default ngeo-drawfeature-linestring\"\n *         ng-class=\"{active: dfCtrl.measureLength.active}\"\n *         ng-model=\"dfCtrl.measureLength.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurearea\n *         class=\"btn btn-default ngeo-drawfeature-polygon\"\n *         ng-class=\"{active: dfCtrl.measureArea.active}\"\n *         ng-model=\"dfCtrl.measureArea.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measureazimut\n *         class=\"btn btn-default ngeo-drawfeature-circle\"\n *         ng-class=\"{active: dfCtrl.measureAzimut.active}\"\n *         ng-model=\"dfCtrl.measureAzimut.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawrectangle\n *         class=\"btn btn-default ngeo-drawfeature-rectangle\"\n *         ng-class=\"{active: dfCtrl.drawRectangle.active}\"\n *         ng-model=\"dfCtrl.drawRectangle.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawtext\n *         class=\"btn btn-default ngeo-drawfeature-text\"\n *         ng-class=\"{active: dfCtrl.drawText.active}\"\n *         ng-model=\"dfCtrl.drawText.active\"></a>\n *     </ngeo-drawfeature>\n *\n * @htmlAttribute {boolean} ngeo-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {!ol.Collection=} ngeo-drawfeature-features The features\n *     collection in which to push the drawn features. If none is provided,\n *     then the `ngeoFeatures` collection is used.\n * @htmlAttribute {ol.Map} ngeo-drawfeature-map The map.\n * @htmlAttribute {boolean} ngeo-drawfeature-showmeasure. Checks the\n *      checkbox in order to display the feature measurements as a label.\n *      Default to false.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawfeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoDrawfeatureController as dfCtrl',\n    scope: true,\n    bindToController: {\n      'active': '=ngeoDrawfeatureActive',\n      'features': '=?ngeoDrawfeatureFeatures',\n      'map': '=ngeoDrawfeatureMap',\n      'showMeasure': '=?ngeoDrawfeatureShowmeasure'\n    }\n  };\n};\n\nexports.directive('ngeoDrawfeature', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.XSDAttributes\n */\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\n\n/**\n * An service used to fetch the XSD attribute definition of layers using their\n * id from a GeoMapFish server.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n * @ngInject\n */\nconst exports = function($http, gmfLayersUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = gmfLayersUrl;\n\n  /**\n   * @type {Object.<number, !angular.$q.Promise>}\n   * @private\n   */\n  this.promises_ = {};\n\n};\n\n\n/**\n * @param {number} id Layer id.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getAttributes = function(id) {\n  if (!this.promises_[id]) {\n    const url = `${this.baseUrl_}/${id}/md.xsd`;\n    this.promises_[id] = this.http_.get(url).then(\n      this.handleGetAttributes_.bind(this));\n  }\n  return this.promises_[id];\n};\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @export\n */\nexports.prototype.handleGetAttributes_ = function(resp) {\n  return new ngeoFormatXSDAttribute().read(resp.data);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfXSDAttributes', []);\nexports.module.service('gmfXSDAttributes', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.EditFeature\n */\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Service that provides methods to get, insert, update and delete vector\n * features with the use of a GeoMapFish Protocol as back-end.\n *\n * The GeoJSON format is used when obtaining or sending features.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n * @ngInject\n */\nconst exports = function($http, gmfLayersUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * Url to the GeoMapFish layers service. Required in applications that use:\n   * - the editfeature tools\n   * - the objectediting tools\n   *\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = gmfLayersUrl;\n\n};\n\n\n/**\n * Build a query to the MapFish protocol to fetch features from a list\n * of layer ids inside a specified extent.\n *\n * @param {Array.<number>} layerIds List of layer ids to get the features from.\n * @param {ol.Extent} extent The extent where to get the features from.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getFeaturesInExtent = function(layerIds, extent) {\n  const url = olUri.appendParams(\n    `${this.baseUrl_}/${layerIds.join(',')}`,\n    {\n      'bbox': extent.join(',')\n    }\n  );\n  return this.http_.get(url).then(this.handleGetFeatures_.bind(this));\n};\n\n\n/**\n * Build a query to the MapFish protocol to fetch features from a list\n * of layer ids and a list of comparison filters.\n *\n * This method is called in the ObjectEditing service, which is injected in\n * the permalink service, i.e. it's always called. Since we don't have to\n * define the url to the GMF Protocol (layers) a dummy promise returns an\n * empty array of features if the url is not defined.\n *\n * @param {!Array.<number>} layerIds List of layer ids to get the features from.\n * @param {!Array.<!gmfx.ComparisonFilter>} filters List of comparison filters\n * @return {angular.$q.Promise} Promise.\n */\nexports.prototype.getFeaturesWithComparisonFilters = function(\n  layerIds, filters\n) {\n  const properties = [];\n  const params = {};\n\n  for (const filter of filters) {\n    params[`${filter.property}__${filter.operator}`] = filter.value;\n    properties.push(filter.property);\n  }\n\n  params['queryable'] = properties.join(',');\n\n  const url = olUri.appendParams(`${this.baseUrl_}/${layerIds.join(',')}`, params);\n  return this.http_.get(url).then(this.handleGetFeatures_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Array.<ol.Feature>} List of features.\n * @private\n */\nexports.prototype.handleGetFeatures_ = function(resp) {\n  return new olFormatGeoJSON().readFeatures(resp.data);\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {Array.<ol.Feature>} features List of features to insert.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.insertFeatures = function(layerId, features) {\n  const url = `${this.baseUrl_}/${layerId}`;\n  const geoJSON = new olFormatGeoJSON().writeFeatures(features);\n  return this.http_.post(url, geoJSON, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {ol.Feature} feature The feature to update.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.updateFeature = function(layerId, feature) {\n  const url = `${this.baseUrl_}/${layerId.toString()}/${feature.getId()}`;\n  const geoJSON = new olFormatGeoJSON().writeFeature(feature);\n  return this.http_.put(url, geoJSON, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {ol.Feature} feature The feature to delete.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.deleteFeature = function(layerId, feature) {\n  const url = `${this.baseUrl_}/${layerId.toString()}/${feature.getId()}`;\n  return this.http_.delete(url, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfEditFeature', []);\nexports.module.service('gmfEditFeature', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.raster.RasterService\n */\n/**\n * The Raster service.\n * Uses the c2cgeoportal's raster to obtain different kinds of\n * information at a specific coordinate.\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfRasterUrl URL to a the c2cgeoportal raster service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfRaster\n */\nconst exports = function($http, gmfRasterUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = gmfRasterUrl;\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Object=} opt_params Optional parameters for the request.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getRaster = function(coordinate, opt_params) {\n\n  const params = opt_params || {};\n  params[exports.Param.X] = coordinate[0];\n  params[exports.Param.Y] = coordinate[1];\n\n  return this.$http_.get(this.url_, {\n    params\n  }).then(this.handleGetRaster_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Object.<string, number>} The response object.\n * @private\n */\nexports.prototype.handleGetRaster_ = function(resp) {\n  return resp.data;\n};\n\n\n/**\n * @enum {string}\n */\nexports.Param = {\n  X: 'lon',\n  Y: 'lat'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfRaster', []);\nexports.module.service('gmfRaster', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.somerc\n */\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\n\nproj4.Proj.projections.add(somerc);\nconst exports = 'somerc';\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.EPSG21781\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\nimport somerc from 'ngeo/proj/somerc.js';\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  `+proj=${somerc}`,\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n","/**\n * @module ngeo.search.searchDirective\n */\n\n/**\n * Provides the \"ngeoSearch\" directive, which uses Twitter's\n * typeahead component to change an input text into a search field.\n *\n * Example:\n *\n *      <input type=\"text\"\n *        ngeo-search=\"ctrl.typeaheadOptions\"\n *        ngeo-search-datasets=\"ctrl.typeaheadDatasets\"\n *        ngeo-search-listeners=\"crtl.typeaheadListeners\">\n *\n * See our live example: [../examples/search.html](../examples/search.html)\n *\n * @htmlAttribute {TypeaheadOptions} ngeo-search The options.\n * @htmlAttribute {Array.<TypeaheadDataset>} ngeo-search-datasets The sources datasets.\n * @htmlAttribute {ngeox.SearchDirectiveListeners} ngeo-search-listeners The listeners.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoSearch\n */\nconst exports = function() {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const typeaheadOptionsExpr = attrs['ngeoSearch'];\n      const typeaheadOptions = /** @type {TypeaheadOptions} */\n              (scope.$eval(typeaheadOptionsExpr));\n\n      const typeaheadDatasetsExpr = attrs['ngeoSearchDatasets'];\n      const typeaheadDatasets = /** @type {Array.<TypeaheadDataset>} */\n              (scope.$eval(typeaheadDatasetsExpr));\n\n      const args = typeaheadDatasets.slice();\n      args.unshift(typeaheadOptions);\n\n      element.typeahead(...args);\n\n      const typeaheadListenersExpr = attrs['ngeoSearchListeners'];\n      const typeaheadListeners_ =\n              /** @type {ngeox.SearchDirectiveListeners} */\n              (scope.$eval(typeaheadListenersExpr));\n\n      /**\n       * @type {ngeox.SearchDirectiveListeners}\n       */\n      const typeaheadListeners = exports.adaptListeners_(\n        typeaheadListeners_);\n\n      element.on('typeahead:open', () => {\n        scope.$apply(() => {\n          typeaheadListeners.open();\n        });\n      });\n\n      element.on('typeahead:close', () => {\n        scope.$apply(() => {\n          typeaheadListeners.close();\n        });\n      });\n\n      element.on('typeahead:cursorchange',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.cursorchange(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:select',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.select(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:autocomplete',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.autocomplete(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:asyncreceive',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {TypeaheadDataset} dataset Dataset.\n         * @param {string} query Query.\n         */\n        (event, dataset, query) => {\n          scope.$apply(() => {\n            const empty = element.data('tt-typeahead')['menu']['_allDatasetsEmpty']();\n            typeaheadListeners.datasetsempty(event, query, empty);\n          });\n        });\n\n    }\n  };\n};\n\n\n/**\n * Create a real ngeox.SearchDirectiveListeners object out of the object\n * returned by $eval.\n * @param {ngeox.SearchDirectiveListeners} object Object.\n * @return {ngeox.SearchDirectiveListeners} The listeners object.\n * @private\n */\nexports.adaptListeners_ = function(object) {\n  /** @type {ngeox.SearchDirectiveListeners} */\n  let typeaheadListeners;\n  if (object === undefined) {\n    typeaheadListeners = {\n      open() {},\n      close() {},\n      cursorchange() {},\n      datasetsempty() {},\n      select() {},\n      autocomplete() {}\n    };\n  } else {\n    typeaheadListeners = {\n      open: object.open !== undefined ?\n        object.open : () => {},\n      close: object.close !== undefined ?\n        object.close : () => {},\n      cursorchange: object.cursorchange !== undefined ?\n        object.cursorchange : () => {},\n      datasetsempty: object.datasetsempty !== undefined ?\n        object.datasetsempty : () => {},\n      select: object.select !== undefined ?\n        object.select : () => {},\n      autocomplete: object.autocomplete !== undefined ?\n        object.autocomplete : () => {}\n    };\n  }\n  return typeaheadListeners;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSearchDirective', []);\n\n\n// Register the directive in the module\nexports.module.directive('ngeoSearch', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.colorpickerComponent\n */\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoColorpicker', []);\n\n\nexports.value('ngeoColorpickerTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoColorpickerTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/misc/colorpickerComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/misc/colorpickerComponent', require('./colorpickerComponent.html'));\n});\n\n\n/**\n * Provides the \"ngeoColorpicker\" directive, a widget for\n * selecting a color among predefined ones.\n *\n * Example:\n *\n *     <div ngeo-colorpicker=\"ctrl.colors\">\n *     </div>\n *\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoColorpickerTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoColorpicker\n */\nexports.component_ = function(ngeoColorpickerTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: {\n      colors: '<?ngeoColorpicker',\n      color: '=?ngeoColorpickerColor'\n    },\n    controller: 'NgeoColorpickerController as ctrl',\n    bindToController: true,\n    templateUrl: ngeoColorpickerTemplateUrl\n  };\n};\n\nexports.directive('ngeoColorpicker',\n  exports.component_);\n\n/**\n * Fefault colors for the colorpicker\n * @type {Array.<Array.<string>>}\n * @const\n * @export\n */\nexports.DEFAULT_COLORS = [\n  ['#F4EB37', '#CDDC39', '#62AF44', '#009D57', '#0BA9CC', '#4186F0', '#3F5BA9', '#7C3592', '#A61B4A', '#DB4436', '#F8971B', '#F4B400', '#795046'],\n  ['#F9F7A6', '#E6EEA3', '#B7DBAB', '#7CCFA9', '#93D7E8', '#9FC3FF', '#A7B5D7', '#C6A4CF', '#D698AD', '#EE9C96', '#FAD199', '#FFDD5E', '#B29189'],\n  ['#ffffff', '#CCCCCC', '#777', '#000000']\n];\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.Controller_ = function($scope, $element, $attrs) {\n\n  /**\n   * The set of color\n   * @type {Array.<Array.<string>>}\n   * @export\n   */\n  this.colors = this.colors || exports.DEFAULT_COLORS;\n\n  /**\n   * The selected color\n   * @type {undefined|string}\n   * @export\n   */\n  this.color;\n};\n\n/**\n * @param {string} color The color to select.\n * @export\n */\nexports.Controller_.prototype.setColor = function(color) {\n  this.color = color;\n};\n\nexports.controller('NgeoColorpickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.AutoProjection\n */\nimport * as olProj from 'ol/proj.js';\nimport * as olExtent from 'ol/extent.js';\n\n/**\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoAutoProjection\n */\nconst exports = function() {};\n\n\n/**\n * Parse a string and return a coordinate if the result is valid. Given string\n * must be a two numbers separated by a space.\n * @param {string} str the string to parse.\n * @return {?ol.Coordinate} A coordinate or null if the format is not valid.\n * @export\n */\nexports.prototype.stringToCoordinates = function(str) {\n  const coords = str.match(/([\\d\\.']+)[\\s,]+([\\d\\.']+)/);\n  if (coords) {\n    const x = parseFloat(coords[1].replace('\\'', ''));\n    const y = parseFloat(coords[2].replace('\\'', ''));\n    if (!isNaN(x) && !isNaN(y)) {\n      return [x, y];\n    }\n  }\n  return null;\n};\n\n\n/**\n * Get an array of projections corresponding to their EPSG codes. Log an error\n *     for each code that are not defined in ol projections.\n * @param {Array.<string>} projectionsCodes EPSG codes (e.g. 'EPSG:3857',\n *     'epsg:3857' or '3857').\n * @return {Array.<ol.proj.Projection>} An array of projections.\n * @export\n */\nexports.prototype.getProjectionList = function(projectionsCodes) {\n  let code, proj;\n  const projections = [];\n  projectionsCodes.forEach((projection) => {\n    code = projection.toUpperCase();\n    if (code.substr(0, 5) != 'EPSG:') {\n      code = `EPSG:${code}`;\n    }\n    proj = olProj.get(code);\n    if (proj !== null) {\n      projections.push(proj);\n    } else {\n      console.error(`The projection ${code} is not defined in ol.proj.`);\n    }\n  });\n  return projections;\n};\n\n\n/**\n * It projects the point using the projection array and finds the first one for\n * which it falls inside of the viewProjection extent.\n * @param {ol.Coordinate} coordinates The point to test.\n * @param {ol.Extent} extent Limits in which coordinates can be valid.\n * @param {ol.proj.Projection} viewProjection Target projection the point.\n * @param {Array.<ol.proj.Projection>=} opt_projections optional array of\n *     projections. The point is tested in each projection, in the order of\n *     the array.\n * @return {?ol.Coordinate} A coordinates in the view's projection if it matches\n *     in one of the given projections, or null else.\n * @export\n */\nexports.prototype.tryProjections = function(coordinates,\n  extent, viewProjection, opt_projections) {\n  let position;\n  if (opt_projections === undefined) {\n    opt_projections = [viewProjection];\n  }\n  opt_projections.some((projection) => {\n    try {\n      position = olProj.transform(coordinates, projection, viewProjection);\n      if (olExtent.containsCoordinate(extent, position)) {\n        return true;\n      }\n    } catch (e) {\n      // Wrong coordinate leads to a transform error and ol throw an exception that we won't log.\n    }\n    position = null;\n  });\n  return position;\n};\n\n\n/**\n * Same as AutoProjection.tryProjections but if tryProjections return null,\n * re-call it with coordinates in reverse order.\n * @param {ol.Coordinate} coordinates The point to test.\n * @param {ol.Extent} extent Limits in which coordinates can be valid.\n * @param {ol.proj.Projection} viewProjection Target projection the point.\n * @param {Array.<ol.proj.Projection>=} opt_projections optional array of\n *     projections. The point is tested in each projection, in the order of\n *     the array.\n * @return {?ol.Coordinate} A coordinates in the view's projection if it matches\n *     in one of the given projections, or null else.\n * @export\n */\nexports.prototype.tryProjectionsWithInversion = function(\n  coordinates, extent, viewProjection, opt_projections) {\n  let position = this.tryProjections(coordinates, extent, viewProjection,\n    opt_projections);\n  if (position === null) {\n    position = this.tryProjections(coordinates.reverse(), extent,\n      viewProjection, opt_projections);\n  }\n  return position;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoAutoProjection', []);\nexports.module.service('ngeoAutoProjection', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.search.FulltextSearch\n */\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides the c2c-geoportal full-text search.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngInject\n * @export\n * @ngname gmfFulltextSearch\n */\nconst exports = function($injector, $http) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = /** @type {string} **/ ($injector.get('fulltextsearchUrl'));\n\n  const url = this.url_.split('?');\n  /**\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = url[0];\n\n  const queryString = (url.length == 2) ? `?${url[1]}` : '';\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  this.defaultParams_ = ngeoUtils.decodeQueryString(queryString);\n};\n\n/**\n * Perform a search query on the c2c-geoportal full-text search.\n * @param {string} query Search query.\n * @param {Object.<string, string>} params Additional parameters.\n * @returns {Promise} Request promise with data array.\n */\nexports.prototype.search = function(query, params) {\n  const queryParams = Object.assign({}, this.defaultParams_, params);\n\n  queryParams['query'] = query;\n\n  const url = `${this.baseUrl_}?${ngeoUtils.encodeQueryString(queryParams)}`;\n\n  return new Promise((resolve, reject) => {\n    this.$http_.get(url)\n      .then(resp => resolve(resp['data']))\n      .catch(reject);\n  });\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSearchFulltextSearch', []);\nexports.module.service('gmfSearchFulltextSearch', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.download.Csv\n */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\n/**\n * Service to generate and download a CSV file from tabular data.\n * Column headers are translated using {@link angularGettext.Catalog}.\n *\n * @param {angular.$injector} $injector Main injector.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoCsvDownload\n * @ngInject\n */\nconst exports = function($injector, gettextCatalog) {\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * File extension of the CSV file.\n   * @type {string}\n   * @private\n   */\n  this.encoding_ = $injector.has('ngeoCsvEncoding') ?\n    $injector.get('ngeoCsvEncoding') : 'utf-8';\n\n  /**\n   * File extension of the CSV file.\n   * @type {string}\n   * @private\n   */\n  this.extension_ = $injector.has('ngeoCsvExtension') ?\n    $injector.get('ngeoCsvExtension') : '.csv';\n\n  /**\n   * Whether to include the header in the exported file or not.\n   * @type {boolean}\n   * @private\n   */\n  this.includeHeader_ = $injector.has('ngeoCsvIncludeHeader') ?\n    $injector.get('ngeoCsvIncludeHeader') : true;\n\n  /**\n   * Quote character.\n   * @type {string}\n   * @private\n   */\n  this.quote_ = $injector.has('ngeoCsvQuote') ?\n    $injector.get('ngeoCsvQuote') : '\"';\n\n  /**\n   * Separator character.\n   * @type {string}\n   * @private\n   */\n  this.separator_ = $injector.has('ngeoCsvSeparator') ?\n    $injector.get('ngeoCsvSeparator') : ',';\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n};\n\n\n/**\n * Generate a CSV.\n *\n * @param {Array.<Object>} data Entries/objects to include in the CSV.\n * @param {Array.<ngeox.GridColumnDef>} columnDefs Column definitions.\n * @return {string} The CSV file as string.\n * @export\n */\nexports.prototype.generateCsv = function(data, columnDefs) {\n  if (data.length == 0 || columnDefs.length == 0) {\n    return '';\n  }\n\n  const translatedColumnHeaders = columnDefs.map(columnHeader => this.gettextCatalog_.getString(columnHeader.name));\n\n  const header = this.getRow_(translatedColumnHeaders);\n  const dataRows = data.map((values) => {\n    const rowValues = columnDefs.map(columnHeader => values[columnHeader.name]);\n    return this.getRow_(rowValues);\n  });\n\n  return this.includeHeader_ ? header + dataRows.join('') : dataRows.join('');\n};\n\n\n/**\n * @param {Array.<?>} values Values.\n * @return {string} CSV row.\n * @private\n */\nexports.prototype.getRow_ = function(values) {\n  const matchAllQuotesRegex = new RegExp(this.quote_, 'g');\n  const doubleQuote = this.quote_ + this.quote_;\n\n  const rowValues = values.map((value) => {\n    if (value !== undefined && value !== null) {\n      value = `${value}`;\n      // wrap each value into quotes and escape quotes with double quotes\n      return this.quote_ + value.replace(matchAllQuotesRegex, doubleQuote) + this.quote_;\n    } else {\n      return '';\n    }\n  });\n\n  return `${rowValues.join(this.separator_)}\\n`;\n};\n\n\n/**\n * Generate a CSV and start a download with the generated file.\n *\n * @param {Array.<Object>} data Entries/objects to include in the CSV.\n * @param {Array.<ngeox.GridColumnDef>} columnDefs Column definitions.\n * @param {string} fileName The CSV file name, without the extension.\n * @export\n */\nexports.prototype.startDownload = function(data, columnDefs, fileName) {\n  const fileContent = this.generateCsv(data, columnDefs);\n  this.download_(\n    fileContent, fileName, `text/csv;charset=${this.encoding_}`);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoCsvDownload', [\n  ngeoDownloadService.name\n]);\nexports.module.service('ngeoCsvDownload', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.resizemap\n */\nimport googAsserts from 'goog/asserts.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.shareComponent\n */\nimport gmfPermalinkShareService from 'gmf/permalink/ShareService.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\nconst exports = angular.module('gmfPermalinkShareComponent', [\n  gmfPermalinkShareService.module.name,\n  ngeoStatemanagerLocation.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/permalink/shareComponent', require('./shareComponent.html'));\n});\n\n\nexports.value('gmfPermalinkShareTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfPermalinkShareTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/permalink/shareComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfPermalinkShareTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfPermalinkShareTemplateUrl($attrs, gmfPermalinkShareTemplateUrl) {\n  return gmfPermalinkShareTemplateUrl($attrs);\n}\n\n\n/**\n * Component to display a shortened permalink and share it by email\n * Example:\n *\n *      <gmf-share\n *        gmf-share-email=\"true\">\n *      </gmf-share>\n *\n * @htmlAttribute {boolean} gmf-share-email Enable emailing capability.\n * @type {!angular.Component}\n */\nexports.component_ = {\n  bindings: {\n    'enableEmail': '<gmfShareEmail'\n  },\n  controller: 'GmfShareController',\n  templateUrl: gmfPermalinkShareTemplateUrl\n};\nexports.component('gmfShare', exports.component_);\n\n\nclass ShareComponentController {\n  /**\n   * The controller for the share component\n   * @param {angular.Scope} $scope Scope.\n   * @param {ngeo.statemanager.Location} ngeoLocation ngeo Location service.\n   * @param {gmf.permalink.ShareService} gmfShareService service for sharing map.\n   * @param {angular.$q} $q Angular q service\n   * @param {angular.Attributes} $attrs Attributes.\n   * @constructor\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfShareController\n   */\n  constructor($scope, ngeoLocation, gmfShareService, $q, $attrs) {\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @type {gmf.permalink.ShareService}\n     * @private\n     */\n    this.gmfShareService_ = gmfShareService;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.$q_ = $q;\n\n    /**\n     * @type {ngeo.statemanager.Location}\n     * @private\n     */\n    this.ngeoLocation_ = ngeoLocation;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.enableEmail;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.shortLink;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.email;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.message;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.permalink_ = this.ngeoLocation_.getUriString();\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.showLengthWarning = this.permalink_.length > gmfPermalinkShareService.URL_MAX_LEN ||\n    ngeoLocation.getPath() > gmfPermalinkShareService.URL_PATH_MAX_LEN;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.successfullySent = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.errorOnsend = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.errorOnGetShortUrl = false;\n\n    this.getShortUrl();\n  }\n\n  /**\n   * Get the short version of the permalink if the email is not provided\n   * @export\n   */\n  getShortUrl() {\n    this.$q_.when(this.gmfShareService_.getShortUrl(this.permalink_))\n      .then((resp) => {\n        this.shortLink = resp.data.short_url;\n        this.errorOnGetShortUrl = false;\n      }, (resp) => {\n        this.shortLink = this.permalink;\n        this.errorOnGetShortUrl = true;\n      });\n  }\n\n  /**\n   * Send the short version of the permalink if the email is provided\n   * @export\n   */\n  sendShortUrl() {\n    if (this.$scope_['gmfShareForm'].$valid) {\n      this.$q_.when(this.gmfShareService_.sendShortUrl(this.permalink_, this.email, this.message))\n        .then((resp) => {\n          this.successfullySent = true;\n        }, (resp) => {\n          this.errorOnsend = true;\n        });\n    }\n  }\n}\n\nexports.controller('GmfShareController', ShareComponentController);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.datasourceGroupTreeComponent\n */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeDatasourceGroupTreeComponent', [\n  ngeoDatasourceDataSources.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree/datasourceGroupTreeComponent', require('./datasourceGroupTreeComponent.html'));\n});\n\n\nexports.value('gmfLayertreeDatasourceGroupTreeTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfLayertreeDatasourceGroupTreeTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/layertree/datasourceGroupTreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfLayertreeDatasourceGroupTreeTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfLayertreeDatasourceGroupTreeTemplateUrl($attrs, gmfLayertreeDatasourceGroupTreeTemplateUrl) {\n  return gmfLayertreeDatasourceGroupTreeTemplateUrl($attrs);\n}\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources\n   *     service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfDatasourcegrouptreeController\n   */\n  constructor($scope, ngeoDataSources) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.datasource.Group}\n     * @export\n     */\n    this.group;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n  }\n\n  /**\n   * @return {string} Group uid.\n   * @export\n   */\n  getGroupUid() {\n    return `datasourcegrouptree-${olBase.getUid(this.group)}`;\n  }\n\n  /**\n   * Toggle visibility of the group itself, i.e. its visibility state.\n   * @export\n   */\n  toggle() {\n    this.group.toggleVisibilityState();\n  }\n\n  /**\n   * Toggle visible property of a data source.\n   * @param {ngeo.datasource.DataSource} dataSource Data source to toggle the\n   * visibility\n   * @export\n   */\n  toggleDataSource(dataSource) {\n    dataSource.visible = !dataSource.visible;\n  }\n\n  /**\n   * Remove all data sources from the `ngeo.datasource.DataSources` collection, which\n   * will automatically remove them from the Group. The group itself\n   * is going to be removed as well, destroying this component in the process.\n   * @export\n   */\n  remove() {\n    for (let i = this.group.dataSources.length - 1, ii = 0; i >= ii; i--) {\n      this.dataSources_.remove(this.group.dataSources[i]);\n    }\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove from\n   *     the `ngeo.DataSources` collection.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSources_.remove(dataSource);\n  }\n};\n\n\nexports.component('gmfDatasourcegrouptree', {\n  bindings: {\n    'group': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfLayertreeDatasourceGroupTreeTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach((feature) => {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    });\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach((feature) => {\n        this.featureHelper_.setStyle(feature);\n      });\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return decodeURI(pathElements[pathElements.length - 1]);\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoDrawFeatures.name,\n  ngeoLayertreeController.module.name,\n  ngeoMiscDebounce.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoStatemanagerModule.name,\n]);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoStatemanagerService.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.datepickerComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\n\nimport 'angular-ui-date';\nimport 'jquery-ui/themes/base/all.css';\n\n// FIXME: import the locales in the applications\nimport 'jquery-ui/ui/i18n/datepicker-fr.js';\nimport 'jquery-ui/ui/i18n/datepicker-en-GB.js';\nimport 'jquery-ui/ui/i18n/datepicker-de.js';\nimport 'jquery-ui/ui/i18n/datepicker-it.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDatePicker', [\n  ngeoMiscTime.module.name,\n  'ui.date',\n]);\n\n\nexports.value('ngeoDatePickerTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoDatePickerTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/misc/datepickerComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/misc/datepickerComponent', require('./datepickerComponent.html'));\n});\n\n\n/**\n * Provide a directive to select a single date or a range of dates. Requires\n * jQuery UI for the 'datepicker' widget.\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n * ngeoDatePickerTemplateUrl Template for the directive.\n * @param  {angular.$timeout} $timeout angular timeout service\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDatePicker\n */\nexports.component_ = function(ngeoDatePickerTemplateUrl,  $timeout) {\n  return {\n    scope: {\n      onDateSelected: '&',\n      time: '='\n    },\n    bindToController: true,\n    controller: 'ngeoDatePickerController as datepickerCtrl',\n    restrict: 'AE',\n    templateUrl: ngeoDatePickerTemplateUrl,\n    link: (scope, element, attrs, ctrl) => {\n      ctrl.init();\n\n      const lang =  ctrl.gettextCatalog_.getCurrentLanguage();\n      $['datepicker']['setDefaults']($['datepicker']['regional'][lang]);\n\n      ctrl.sdateOptions = angular.extend({}, ctrl.sdateOptions, {\n        'minDate': ctrl.initialMinDate,\n        'maxDate': ctrl.initialMaxDate,\n        'onClose': (selectedDate) => {\n          if (selectedDate) {\n            $(element[0]).find('input[name=\"edate\"]').datepicker('option', 'minDate', selectedDate);\n          }\n        }\n      });\n\n      ctrl.edateOptions = angular.extend({}, ctrl.edateOptions, {\n        'minDate': ctrl.initialMinDate,\n        'maxDate': ctrl.initialMaxDate,\n        'onClose': (selectedDate) => {\n          if (selectedDate) {\n            $(element[0]).find('input[name=\"sdate\"]').datepicker('option', 'maxDate', selectedDate);\n          }\n        }\n      });\n\n      angular.element('body').on('hidden.bs.popover', () => {\n        const dp = angular.element('#ui-datepicker-div');\n        if (dp && dp.css('display') === 'block') {\n          $(element[0]).find('input[name$=\"date\"]').datepicker('hide');\n        }\n      });\n\n      $timeout(() => {\n        angular.element('#ui-datepicker-div').on('mousedown', (e) => {\n          e.stopPropagation();\n        });\n      });\n    }\n  };\n};\n\nexports.directive('ngeoDatePicker', exports.component_);\n\n\n/**\n * DatePickerController - directive conttroller\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$injector} $injector injector.\n * @param {!ngeo.misc.Time} ngeoTime time service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDatePickerController\n */\nexports.Controller_ = function($scope, $injector,\n  ngeoTime, gettextCatalog) {\n\n  /**\n   * @type {!ngeo.misc.Time}\n   * @private\n   */\n  this.ngeoTime_ = ngeoTime;\n\n  /**\n   * @type {!ngeox.TimeProperty}\n   * @export\n   */\n  this.time;\n\n  /**\n   * The gettext catalog\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n\n  /**\n   * If the component is used to select a date range\n   * @type {boolean}\n   * @export\n   */\n  this.isModeRange;\n\n\n  /**\n   * Function called after date(s) changed/selected\n   * @type {function({time: {start: number, end: number}})}\n   * @export\n   */\n  this.onDateSelected;\n\n\n  /**\n   * Initial min date for the datepicker\n   * @type {!Date}\n   */\n  this.initialMinDate;\n\n  /**\n   * Initial max date for the datepickeronDateSelected\n   * @type {!Date}\n   */\n  this.initialMaxDate;\n\n  /**\n   * Datepicker options for the second datepicker (only for range mode)\n   * @type {Object}\n   * @export\n   */\n  this.edateOptions = {\n    'changeMonth': true,\n    'changeYear': true\n  };\n\n  /**\n   * Datepicker options for the first datepicker\n   * @type {Object}\n   * @export\n   */\n  this.sdateOptions = {\n    'changeMonth': true,\n    'changeYear': true\n  };\n\n  /**\n   * Start date model for the first date picker\n   * @type {Date}\n   * @export\n   */\n  this.sdate;\n\n  /**\n   * End date model for the second datepicker (only for range mode)\n   * @type {Date}\n   * @export\n   */\n  this.edate;\n\n  $scope.$watchGroup(['datepickerCtrl.sdate', 'datepickerCtrl.edate'], (newDates, oldDates) => {\n    const sDate = newDates[0];\n    const eDate = newDates[1];\n\n    if (angular.isDate(sDate) && (!this.isModeRange || angular.isDate(eDate))) {\n      this.onDateSelected({\n        time: {\n          start: this.ngeoTime_.getTime(sDate),\n          end: this.ngeoTime_.getTime(eDate)\n        }\n      });\n    }\n  });\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  //fetch the initial options for the component\n  const initialOptions_ = this.ngeoTime_.getOptions(this.time);\n  this.initialMinDate = this.ngeoTime_.createDate(initialOptions_.minDate);\n  this.initialMaxDate = this.ngeoTime_.createDate(initialOptions_.maxDate);\n  this.isModeRange = this.time.mode === 'range';\n\n  if (this.isModeRange) {\n    googAsserts.assertArray(initialOptions_.values);\n    this.sdate = this.ngeoTime_.createDate(initialOptions_.values[0]);\n    this.edate = this.ngeoTime_.createDate(initialOptions_.values[1]);\n  } else {\n    googAsserts.assertNumber(initialOptions_.values);\n    this.sdate = this.ngeoTime_.createDate(initialOptions_.values);\n  }\n};\n\nexports.controller('ngeoDatePickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.Attribute\n */\nconst exports = {};\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\n\n\n/**\n * Set the `type` and `geomType` properties of an attribute if the given\n * type is a geometry one.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type Type.\n * @return {boolean} Whether both attribute type and geomType were set.\n */\nexports.setGeometryType = function(attribute, type) {\n  const geomRegex =\n    /gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/;\n  if (geomRegex.exec(type)) {\n    attribute.type = ngeoFormatAttributeType.GEOMETRY;\n    if (/^gml:Point/.exec(type)) {\n      attribute.geomType = 'Point';\n    } else if (/^gml:LineString|^gml:Curve/.exec(type)) {\n      attribute.geomType = 'LineString';\n    } else if (/^gml:Polygon|^gml:Surface/.exec(type)) {\n      attribute.geomType = 'Polygon';\n    } else if (/^gml:MultiPoint/.exec(type)) {\n      attribute.geomType = 'MultiPoint';\n    } else if (/^gml:MultiLineString|^gml:MultiCurve/.exec(type)) {\n      attribute.geomType = 'MultiLineString';\n    } else if (/^gml:MultiPolygon|^gml:MultiSurface/.exec(type)) {\n      attribute.geomType = 'MultiPolygon';\n    }\n  }\n  return !!attribute.type && !!attribute.geomType;\n};\n\n\nexport default exports;\n","/**\n * @module gmf.editing.EnumerateAttribute\n */\nconst exports = class {\n\n  /**\n   * The EnumerateAttribute is responsible of fetching all possible of a given\n   * attribute of a given data source (gmf layer).\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfEnumerateAttribute\n   */\n  constructor($http, gmfLayersUrl) {\n\n    // === Injected services ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.baseUrl_ = gmfLayersUrl;\n\n    /**\n     * @type {Object.<string, !angular.$q.Promise>}\n     * @private\n     */\n    this.promises_ = {};\n  }\n\n  /**\n   * @param {gmf.datasource.OGC} dataSource Data source.\n   * @param {string} attribute Attribute name.\n   * @return {angular.$q.Promise} Promise.\n   */\n  getAttributeValues(dataSource, attribute) {\n    const promiseId = `${dataSource.id}_${attribute}`;\n    const name = dataSource.name;\n    if (!this.promises_[promiseId]) {\n      const url = `${this.baseUrl_}/${name}/values/${attribute}`;\n      this.promises_[promiseId] = this.http_.get(url).then(\n        this.handleGetAttributeValues_.bind(this));\n    }\n    return this.promises_[promiseId];\n  }\n\n  /**\n   * @param {angular.$http.Response} resp Ajax response.\n   * @return {Array.<gmfThemes.GmfLayerAttributeValue>} List of the attribute\n   *     values.\n   * @export\n   */\n  handleGetAttributeValues_(resp) {\n    const data = /** @type {gmfThemes.GmfLayerAttributeValuesResponse} */ (\n      resp.data);\n    return data.items;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfEnumerateAttribute', []);\nexports.module.service('gmfEnumerateAttribute', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.File\n */\n/**\n * @constructor\n * @param {angular.$q} $q .\n * @param {angular.$http} $http .\n * @param {gettext} gettext .\n * @ngInject\n */\nconst exports = function($q, $http, gettext) {\n  let fileReader, canceler;\n\n  // Test the validity of the file size\n  this.isValidFileSize = function(fileSize) {\n    return !(fileSize > 20000000); // 20 Mo\n  };\n\n  this.isWmsGetCap = function(fileContent) {\n    return /<(WMT_MS_Capabilities|WMS_Capabilities)/.test(fileContent);\n  };\n\n  this.isWmtsGetCap = function(fileContent) {\n    return /<Capabilities/.test(fileContent);\n  };\n\n  this.isKml = function(fileContent) {\n    return /<kml/.test(fileContent) && /<\\/kml>/.test(fileContent);\n  };\n\n  this.isGpx = function(fileContent) {\n    return /<gpx/.test(fileContent) && /<\\/gpx>/.test(fileContent);\n  };\n\n  /**\n   * @param {!Blob} file .\n   * @return {angular.$q.Promise<string>} .\n   */\n  this.read = function(file) {\n    const defer = $q.defer();\n    if (fileReader && fileReader.readyState === FileReader.LOADING) {\n      fileReader.abort();\n    }\n    fileReader = new FileReader();\n    fileReader.onload = function(evt) {\n      defer.resolve(evt.target.result);\n    };\n    fileReader.onerror = function(evt) {\n      const err = evt.target.error;\n      console.error('Reading file failed: ', err);\n      defer.reject({\n        'message': err.code == 20 ? gettext('Operation canceled') : gettext('Read failed'),\n        'reason': err.message\n      });\n    };\n    fileReader.onprogress = function(evt) {\n      defer.notify(evt);\n    };\n    // Read the file\n    fileReader.readAsText(file);\n    return defer.promise;\n  };\n\n  /**\n   * @param {string} url .\n   * @param {angular.$q.Deferred=} opt_cancelP .\n   * @return {angular.$q.Promise<Blob>} .\n   */\n  this.load = function(url, opt_cancelP) {\n\n    if (canceler) {\n      canceler.resolve();\n    }\n    canceler = opt_cancelP || $q.defer();\n\n    // Angularjs doesn't handle onprogress event\n    const defer = $q.defer();\n    $http.get(url, {\n      timeout: canceler.promise\n    }).then((response) => {\n      defer.resolve(response.data);\n    }, (reason) => {\n      console.error('Uploading file failed: ', reason);\n      defer.reject({\n        'message': gettext('Upload failed'),\n        'reason': reason\n      });\n    });\n    return defer.promise;\n  };\n};\n\nexports.module = angular.module('ngeoFile', []);\n\nexports.module.service('ngeoFile', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.controllers.AbstractDesktopController\n */\nimport gmfControllersAbstractAppController from 'gmf/controllers/AbstractAppController.js';\nimport gmfContextualdataModule from 'gmf/contextualdata/module.js';\nimport gmfDrawingModule from 'gmf/drawing/module.js';\nimport gmfEditingModule from 'gmf/editing/module.js';\nimport gmfPermalinkShareComponent from 'gmf/permalink/shareComponent.js';\nimport gmfPrintComponent from 'gmf/print/component.js';\nimport gmfProfileModule from 'gmf/profile/module.js';\nimport gmfRasterComponent from 'gmf/raster/component.js';\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoQueryBboxQueryComponent from 'ngeo/query/bboxQueryComponent.js';\nimport gmfImportModule from 'gmf/import/module.js';\nimport * as olBase from 'ol/index.js';\nimport * as olProj from 'ol/proj.js';\nimport * as olObj from 'ol/obj.js';\nimport olCollection from 'ol/Collection.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olControlScaleLine from 'ol/control/ScaleLine.js';\nimport olControlZoom from 'ol/control/Zoom.js';\nimport olControlRotate from 'ol/control/Rotate.js';\nimport * as olInteraction from 'ol/interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Desktop application abstract controller.\n *\n * This file includes `goog.require`'s for desktop components/directives used\n * by the HTML page and the controller to provide the configuration.\n *\n * @param {gmfx.Config} config A part of the application config.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @extends {gmf.controllers.AbstractAppController}\n * @ngdoc controller\n * @ngInject\n * @export\n */\nconst exports = function(config, $scope, $injector) {\n\n  const viewConfig = {\n    projection: olProj.get(`EPSG:${config.srid || 21781}`)\n  };\n  olObj.assign(viewConfig, config.mapViewConfig || {});\n\n  const arrow = gmfControllersAbstractAppController.prototype.getLocationIcon();\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    pixelRatio: config.mapPixelRatio,\n    layers: [],\n    view: new olView(viewConfig),\n    controls: config.mapControls || [\n      new olControlScaleLine({\n        target: document.getElementById('scaleline')\n      }),\n      new olControlZoom({\n        zoomInTipLabel: '',\n        zoomOutTipLabel: ''\n      }),\n      new olControlRotate({\n        label: arrow,\n        tipLabel: ''\n      })\n    ],\n    interactions: config.mapInteractions || olInteraction.defaults({\n      pinchRotate: true,\n      altShiftDragRotate: true\n    }),\n    loadTilesWhileAnimating: true,\n    loadTilesWhileInteracting: true\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.loginActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.toolsActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modalShareShown = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.editFeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.routingfeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.googleStreetViewActive = false;\n\n  /**\n   * @type {!ol.style.Style}\n   * @export\n   */\n  this.googleStreetViewStyle = new olStyleStyle({\n    text: new olStyleText({\n      fill: new olStyleFill({color: '#279B61'}),\n      font: 'normal 30px FontAwesome',\n      offsetY: -15,\n      stroke: new olStyleStroke({color: '#ffffff', width: 3}),\n      text: '\\uf041'\n    })\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.importDataSourceActive = false;\n\n  const body = $('body');\n\n  // initialize tooltips\n  body.tooltip({\n    container: 'body',\n    trigger: 'hover',\n    selector: '[data-toggle=\"tooltip\"]'\n  });\n\n  // deactivate tooltips on touch device\n  body.on('touchstart.detectTouch', () => {\n    body.tooltip('destroy');\n    body.off('touchstart.detectTouch');\n  });\n\n  /**\n   * Collection of features for the draw interaction\n   * @type {ol.Collection.<ol.Feature>}\n   */\n  const ngeoFeatures = $injector.get('ngeoFeatures');\n\n  /**\n   * @type {ngeo.map.FeatureOverlay}\n   * @export\n   */\n  this.drawFeatureLayer = $injector.get('ngeoFeatureOverlayMgr')\n    .getFeatureOverlay();\n  this.drawFeatureLayer.setFeatures(ngeoFeatures);\n\n  const ngeoFeatureHelper = $injector.get('ngeoFeatureHelper');\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.editFeatureVectorLayer = new olLayerVector({\n    source: new olSourceVector({\n      wrapX: false,\n      features: new olCollection()\n    }),\n    style: (feature, resolution) => ngeoFeatureHelper.createEditingStyles(feature)\n    // style: ngeoFeatureHelper.createEditingStyles.bind(ngeoFeatureHelper)\n  });\n  this.editFeatureVectorLayer.setMap(this.map);\n\n  /**\n   * The ngeo ToolActivate manager service.\n   * @type {ngeo.misc.ToolActivateMgr}\n   */\n  const ngeoToolActivateMgr = $injector.get('ngeoToolActivateMgr');\n\n  const editFeatureActivate = new ngeoMiscToolActivate(this, 'editFeatureActive');\n  ngeoToolActivateMgr.registerTool('mapTools', editFeatureActivate, false);\n\n  const googleStreetViewActivate = new ngeoMiscToolActivate(\n    this,\n    'googleStreetViewActive'\n  );\n  ngeoToolActivateMgr.registerTool('mapTools', googleStreetViewActivate, false);\n\n  /**\n   * @type {ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.scaleSelectorOptions = {\n    dropup: true\n  };\n\n  /**\n   * @type {ol.geom.LineString}\n   * @export\n   */\n  this.profileLine = null;\n\n  gmfControllersAbstractAppController.call(this, config, $scope, $injector);\n\n  // Close the login panel on successful login.\n  $scope.$watch(() => this.gmfUser.username, (newVal) => {\n    if (newVal !== null && this.loginActive) {\n      this.loginActive = false;\n    }\n  });\n};\n\nolBase.inherits(exports, gmfControllersAbstractAppController);\n\nexports.module = angular.module('GmfAbstractDesktopControllerModule', [\n  gmfControllersAbstractAppController.module.name,\n  gmfContextualdataModule.name,\n  gmfDrawingModule.name,\n  gmfEditingModule.name,\n  gmfPermalinkShareComponent.name,\n  gmfPrintComponent.name,\n  gmfProfileModule.name,\n  gmfRasterComponent.name,\n  ngeoDrawFeatures.name,\n  ngeoMapResizemap.name,\n  ngeoQueryBboxQueryComponent.name,\n  gmfImportModule.name,\n]);\n\nexports.module.controller(\n  'AbstractDesktopController',\n  exports);\n\nexports.module.value('isDesktop', true);\n\nexports.module.value('ngeoQueryOptions', {\n  'limit': 20\n});\n\nexports.module.value('ngeoMeasurePrecision', 3);\nexports.module.value('ngeoMeasureDecimals', 0);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport * as olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complete then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n","/**\n * @module gmf.contextualdata.component\n */\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\nimport googAsserts from 'goog/asserts.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olProj from 'ol/proj.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfContextualdata', [\n  gmfRasterRasterService.module.name,\n]);\n\n\n/**\n * Provide a directive responsible of displaying contextual data after a right\n * click on the map.\n *\n * This directive doesn't require being rendered in a visible DOM element.\n * It's usually added to the element where the map directive is also added.\n *\n * Example:\n *\n *     <gmf-map gmf-map-map=\"mainCtrl.map\"\n *         gmf-contextualdata\n *         gmf-contextualdata-map=\"::mainCtrl.map\"\n *         gmf-contextualdata-projections=\"::[21781,4326]\">\n *\n * The content of the popover is managed in a partial that must be defined\n * using the `gmfContextualdatacontentTemplateUrl` value. See\n * {@link gmf.contextualdatacontentDirective} for more details.\n *\n * One can also provide a `gmf-contextualdata-callback` attribute in order to\n * do some additional computing on the coordinate or the values received for\n * the raster service. The callback function is called with the coordinate of\n * the clicked point and the response data from the server. It is intended to\n * return an object of additional properties to add to the scope.\n *\n * See the [../examples/contribs/gmf/contextualdata.html](../examples/contribs/gmf/contextualdata.html) example for a usage sample.\n *\n * @htmlAttribute {ol.Map} map The map.\n * @htmlAttribute {Array<number>} projections The list of projections.\n * @htmlAttribute {Function} callback A function called after server\n *    (raster) data is received in case some additional computing is required.\n *    Optional.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfContextualdata\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    scope: false,\n    controller: 'GmfContextualdataController as cdCtrl',\n    bindToController: {\n      'map': '<gmfContextualdataMap',\n      'projections': '<gmfContextualdataProjections',\n      'callback': '<gmfContextualdataCallback'\n    },\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {gmf.contextualdata.component.Controller_} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      controller.init();\n    }\n  };\n};\n\nexports.directive('gmfContextualdata',\n  exports.directive_);\n\n\n/**\n *\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {!angular.Scope} $scope Scope.\n * @param {gmf.raster.RasterService} gmfRaster Gmf Raster service\n *\n * @constructor\n * @private\n * @ngdoc controller\n * @ngInject\n */\nexports.Controller_ = function($compile, $timeout, $scope, gmfRaster) {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {Array<number>}\n   * @export\n   */\n  this.projections;\n\n  /**\n   * @type {function(ol.Coordinate, Object):Object}\n   * @export\n   */\n  this.callback;\n\n  /**\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.overlay_;\n\n  /**\n   * @type {angular.$compile}\n   * @private\n   */\n  this.$compile_ = $compile;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  angular.element('body').on('mousedown', this.hidePopover.bind(this));\n};\n\n/**\n *\n */\nexports.Controller_.prototype.init = function() {\n  this.preparePopover_();\n\n  const mapDiv = this.map.getTargetElement();\n  googAsserts.assertElement(mapDiv);\n\n  olEvents.listen(mapDiv, 'contextmenu',\n    this.handleMapContextMenu_, this);\n};\n\n/**\n * @param {!Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(event) {\n  this.$scope_.$apply(() => {\n    const pixel = this.map.getEventPixel(event);\n    const coordinate = this.map.getCoordinateFromPixel(pixel);\n    this.setContent_(coordinate);\n    event.preventDefault();\n    this.hidePopover();\n    this.showPopover();\n\n    // Use timeout to let the popover content to be rendered before displaying it.\n    this.timeout_(() => {\n      this.overlay_.setPosition(coordinate);\n    });\n  });\n};\n\nexports.Controller_.prototype.setContent_ = function(coordinate) {\n  const scope = this.$scope_.$new(true);\n  this.$compile_(this.content_)(scope);\n\n  const mapProjection = this.map.getView().getProjection().getCode();\n  this.projections.forEach((proj) => {\n    const coord = olProj.transform(coordinate, mapProjection, `EPSG:${proj}`);\n    scope[`coord_${proj}`] = coord;\n    scope[`coord_${proj}_eastern`] = coord[0];\n    scope[`coord_${proj}_northern`] = coord[1];\n  });\n\n  const getRasterSuccess = function(resp) {\n    olObj.assign(scope, resp);\n    if (this.callback) {\n      olObj.assign(scope, this.callback.call(this, coordinate, resp));\n    }\n  }.bind(this);\n  const getRasterError = function(resp) {\n    console.error('Error on getting the raster.');\n  };\n  this.gmfRaster_.getRaster(coordinate).then(\n    getRasterSuccess,\n    getRasterError\n  );\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.preparePopover_ = function() {\n\n  const container = document.createElement('DIV');\n  container.classList.add('popover');\n  container.classList.add('bottom');\n  container.classList.add('gmf-contextualdata');\n  angular.element(container).css('position', 'relative');\n  const arrow = document.createElement('DIV');\n  arrow.classList.add('arrow');\n  container.appendChild(arrow);\n  this.content_ = document.createElement('DIV');\n  this.content_.setAttribute('gmf-contextualdatacontent', '');\n  this.content_.classList.add('popover-content');\n  container.appendChild(this.content_);\n\n  this.overlay_ = new olOverlay({\n    element: container,\n    stopEvent: true,\n    autoPan: true,\n    autoPanAnimation: /** @type {olx.animation.PanOptions} */ ({\n      duration: 250\n    }),\n    positioning: 'top-center'\n  });\n  this.map.addOverlay(this.overlay_);\n};\n\nexports.Controller_.prototype.showPopover = function() {\n  const element = /** @type {Object} */ (this.overlay_.getElement());\n  angular.element(element).css('display', 'block');\n};\n\nexports.Controller_.prototype.hidePopover = function() {\n  const element = /** @type {Object} */ (this.overlay_.getElement());\n  angular.element(element).css('display', 'none');\n};\n\nexports.controller('GmfContextualdataController', exports.Controller_);\n\n\n/**\n * Provide a directive responsible of formatting the content of the popover for\n * the contextual data directive.\n *\n * Its main purpose is to configure the template to be used.\n * Integrators should ensure that the template values match the configuration\n * of the contextual data directive.\n *\n * For each projection the following expressions can be used (replace xxxx by\n * the relevant projection code:\n *  - {{coord_xxxx}},\n *  - {{coord_xxxx_eastern}},\n *  - {{coord_xxxx_northern}}\n *\n * Tip: one should use the `ngeoNumberCoordinates` and `ngeoDMSCoordinates`.\n *\n * The raster service is requested to query additional information. The\n * integrators can also use `{{xxxx}}` where `xxxx` will be replaced by\n * the name of the raster layers (for example 'srtm').\n *\n * See the [../examples/contribs/gmf/contextualdata.html](../examples/contribs/gmf/contextualdata.html) example for a usage sample.\n *\n * @param {string} gmfContextualdatacontentTemplateUrl Url to template.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfContextualdatacontent\n */\nexports.contentDirective_ = function(\n  gmfContextualdatacontentTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: gmfContextualdatacontentTemplateUrl\n  };\n};\n\nexports.directive('gmfContextualdatacontent', exports.contentDirective_);\n\n\nexport default exports;\n","/**\n * @module gmf.contextualdata.module\n */\nimport gmfContextualdataComponent from 'gmf/contextualdata/component.js';\n\nimport './contextualdata.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfContextualdataModule', [\n  gmfContextualdataComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.print.VectorEncoder\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport * as olMath from 'ol/math.js';\nimport olStyleIcon from 'ol/style/Icon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport * as olColor from 'ol/color.js';\n\n/**\n * @constructor\n */\nconst exports = function() {\n  /**\n   * @type {ol.format.GeoJSON}\n   */\n  this.geojsonFormat = new olFormatGeoJSON();\n};\n\n\n/**\n * @enum {string}\n */\nexports.PrintStyleType = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.print.VectorEncoder.PrintStyleType>}\n * @private\n */\nexports.PrintStyleTypes_ = {\n  'LineString': exports.PrintStyleType.LINE_STRING,\n  'Point': exports.PrintStyleType.POINT,\n  'Polygon': exports.PrintStyleType.POLYGON,\n  'MultiLineString': exports.PrintStyleType.LINE_STRING,\n  'MultiPoint': exports.PrintStyleType.POINT,\n  'MultiPolygon': exports.PrintStyleType.POLYGON\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Vector} layer Layer.\n * @param {number} resolution Resolution.\n */\nexports.prototype.encodeVectorLayer = function(arr, layer, resolution) {\n  const source = layer.getSource();\n  googAsserts.assertInstanceof(source, olSourceVector);\n\n  const features = source.getFeatures();\n\n  const /** @type {Array.<GeoJSONFeature>} */ geojsonFeatures = [];\n  const mapfishStyleObject = /** @type {MapFishPrintVectorStyle} */ ({\n    version: 2\n  });\n\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    const originalFeature = features[i];\n\n    let styleData = null;\n    let styleFunction = originalFeature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      styleData = styleFunction.call(originalFeature, resolution);\n    } else {\n      styleFunction = layer.getStyleFunction();\n      if (styleFunction !== undefined) {\n        styleData = styleFunction.call(layer, originalFeature, resolution);\n      }\n    }\n    const origGeojsonFeature = this.geojsonFormat.writeFeatureObject(originalFeature);\n    /**\n     * @type {Array<ol.style.Style>}\n     */\n    const styles = (styleData !== null && !Array.isArray(styleData)) ? [styleData] : styleData;\n    googAsserts.assert(Array.isArray(styles));\n\n    if (styles !== null && styles.length > 0) {\n      let isOriginalFeatureAdded = false;\n      for (let j = 0, jj = styles.length; j < jj; ++j) {\n        const style = styles[j];\n        let geometry = style.getGeometry();\n        let geojsonFeature;\n        if (!geometry) {\n          geojsonFeature = origGeojsonFeature;\n          geometry = originalFeature.getGeometry();\n          // no need to encode features with no geometry\n          if (!geometry) {\n            continue;\n          }\n          if (!isOriginalFeatureAdded) {\n            geojsonFeatures.push(geojsonFeature);\n            isOriginalFeatureAdded = true;\n          }\n        } else {\n          let styledFeature = originalFeature.clone();\n          styledFeature.setGeometry(geometry);\n          geojsonFeature = this.geojsonFormat.writeFeatureObject(styledFeature);\n          geometry = styledFeature.getGeometry();\n          styledFeature = null;\n          geojsonFeatures.push(geojsonFeature);\n        }\n\n        const geometryType = geometry.getType();\n        if (geojsonFeature.properties === null) {\n          geojsonFeature.properties = {};\n        }\n\n        const featureStyleProp = `_ngeo_style_${j}`;\n        const styleId = `${olBase.getUid(style).toString()}-${geometryType}`;\n        this.encodeVectorStyle(mapfishStyleObject, geometryType, style, styleId, featureStyleProp);\n        geojsonFeature.properties[featureStyleProp] = styleId;\n      }\n    }\n  }\n\n  // MapFish Print fails if there are no style rules, even if there are no\n  // features either. To work around this we just ignore the layer if the\n  // array of GeoJSON features is empty.\n  // See https://github.com/mapfish/mapfish-print/issues/279\n\n  if (geojsonFeatures.length > 0) {\n    const geojsonFeatureCollection = /** @type {GeoJSONFeatureCollection} */ ({\n      type: 'FeatureCollection',\n      features: geojsonFeatures\n    });\n    const object = /** @type {MapFishPrintVectorLayer} */ ({\n      geoJson: geojsonFeatureCollection,\n      opacity: layer.getOpacity(),\n      style: mapfishStyleObject,\n      type: 'geojson'\n    });\n    arr.push(object);\n  }\n};\n\n\n/**\n * @param {MapFishPrintVectorStyle} object MapFish style object.\n * @param {ol.geom.GeometryType} geometryType Type of the GeoJSON geometry\n * @param {ol.style.Style} style Style.\n * @param {string} styleId Style id.\n * @param {string} featureStyleProp Feature style property name.\n */\nexports.prototype.encodeVectorStyle = function(object, geometryType, style, styleId, featureStyleProp) {\n  if (!(geometryType in exports.PrintStyleTypes_)) {\n    // unsupported geometry type\n    return;\n  }\n  const styleType = exports.PrintStyleTypes_[geometryType];\n  const key = `[${featureStyleProp} = '${styleId}']`;\n  if (key in object) {\n    // do nothing if we already have a style object for this CQL rule\n    return;\n  }\n  const styleObject = /** @type {MapFishPrintSymbolizers} */ ({\n    symbolizers: []\n  });\n  object[key] = styleObject;\n  const fillStyle = style.getFill();\n  const imageStyle = style.getImage();\n  const strokeStyle = style.getStroke();\n  const textStyle = style.getText();\n  if (styleType === exports.PrintStyleType.POLYGON) {\n    if (fillStyle !== null) {\n      this.encodeVectorStylePolygon(\n        styleObject.symbolizers, fillStyle, strokeStyle);\n    }\n  } else if (styleType === exports.PrintStyleType.LINE_STRING) {\n    if (strokeStyle !== null) {\n      this.encodeVectorStyleLine(styleObject.symbolizers, strokeStyle);\n    }\n  } else if (styleType === exports.PrintStyleType.POINT) {\n    if (imageStyle !== null) {\n      this.encodeVectorStylePoint(styleObject.symbolizers, imageStyle);\n    }\n  }\n  if (textStyle !== null) {\n    this.encodeTextStyle(styleObject.symbolizers, textStyle);\n  }\n};\n\n\n/**\n * @param {MapFishPrintSymbolizerPoint|MapFishPrintSymbolizerPolygon} symbolizer MapFish Print symbolizer.\n * @param {!ol.style.Fill} fillStyle Fill style.\n * @protected\n */\nexports.prototype.encodeVectorStyleFill = function(symbolizer, fillStyle) {\n  let fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(typeof fillColor === 'string' || Array.isArray(fillColor));\n    fillColor = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    symbolizer.fillColor = ngeoUtils.rgbArrayToHex(fillColor);\n    symbolizer.fillOpacity = fillColor[3];\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStyleLine = function(symbolizers, strokeStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerLine} */ ({\n    type: 'line'\n  });\n  this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n  symbolizers.push(symbolizer);\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Image} imageStyle Image style.\n * @protected\n */\nexports.prototype.encodeVectorStylePoint = function(symbolizers, imageStyle) {\n  let symbolizer;\n  if (imageStyle instanceof olStyleCircle) {\n    symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n      type: 'point'\n    });\n    symbolizer.pointRadius = imageStyle.getRadius();\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      this.encodeVectorStyleFill(symbolizer, fillStyle);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n    }\n  } else if (imageStyle instanceof olStyleIcon) {\n    const src = imageStyle.getSrc();\n    if (src !== undefined) {\n      symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n        type: 'point',\n        externalGraphic: src\n      });\n      const opacity = imageStyle.getOpacity();\n      if (opacity !== null) {\n        symbolizer.graphicOpacity = opacity;\n      }\n      const size = imageStyle.getSize();\n      if (size !== null) {\n        let scale = imageStyle.getScale();\n        if (isNaN(scale)) {\n          scale = 1;\n        }\n        symbolizer.graphicWidth = size[0] * scale;\n        symbolizer.graphicHeight = size[1] * scale;\n      }\n      let rotation = imageStyle.getRotation();\n      if (isNaN(rotation)) {\n        rotation = 0;\n      }\n      symbolizer.rotation = olMath.toDegrees(rotation);\n    }\n  } else if (imageStyle instanceof olStyleRegularShape) {\n    /**\n     * Mapfish Print does not support image defined with ol.style.RegularShape.\n     * As a workaround, I try to map the image on a well-known image name.\n     */\n    const points = /** @type {ol.style.RegularShape} */ (imageStyle).getPoints();\n    if (points !== null) {\n      symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n        type: 'point'\n      });\n      if (points === 4) {\n        symbolizer.graphicName = 'square';\n      } else if (points === 3) {\n        symbolizer.graphicName = 'triangle';\n      } else if (points === 5) {\n        symbolizer.graphicName = 'star';\n      } else if (points === 8) {\n        symbolizer.graphicName = 'cross';\n      }\n      const sizeShape = imageStyle.getSize();\n      if (sizeShape !== null) {\n        symbolizer.graphicWidth = sizeShape[0];\n        symbolizer.graphicHeight = sizeShape[1];\n      }\n      const rotationShape = imageStyle.getRotation();\n      if (!isNaN(rotationShape) && rotationShape !== 0) {\n        symbolizer.rotation = olMath.toDegrees(rotationShape);\n      }\n      const opacityShape = imageStyle.getOpacity();\n      if (opacityShape !== null) {\n        symbolizer.graphicOpacity = opacityShape;\n      }\n      const strokeShape = imageStyle.getStroke();\n      if (strokeShape !== null) {\n        this.encodeVectorStyleStroke(symbolizer, strokeShape);\n      }\n      const fillShape = imageStyle.getFill();\n      if (fillShape !== null) {\n        this.encodeVectorStyleFill(symbolizer, fillShape);\n      }\n    }\n  }\n  if (symbolizer !== undefined) {\n    symbolizers.push(symbolizer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStylePolygon = function(symbolizers, fillStyle, strokeStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerPolygon} */ ({\n    type: 'polygon'\n  });\n  this.encodeVectorStyleFill(symbolizer, fillStyle);\n  if (strokeStyle !== null) {\n    this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n  }\n  symbolizers.push(symbolizer);\n};\n\n\n/**\n * @param {MapFishPrintSymbolizerPoint|MapFishPrintSymbolizerLine|MapFishPrintSymbolizerPolygon}\n *      symbolizer MapFish Print symbolizer.\n * @param {!ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStyleStroke = function(symbolizer, strokeStyle) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(typeof strokeColor === 'string' || Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    symbolizer.strokeColor = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    symbolizer.strokeOpacity = strokeColorRgba[3];\n  }\n  const strokeDashstyle = strokeStyle.getLineDash();\n  if (strokeDashstyle !== null) {\n    symbolizer.strokeDashstyle = strokeDashstyle.join(' ');\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    symbolizer.strokeWidth = strokeWidth;\n  }\n  const strokeLineCap = strokeStyle.getLineCap();\n  if (strokeLineCap) {\n    symbolizer.strokeLinecap = strokeStyle.getLineCap();\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizerText>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Text} textStyle Text style.\n * @protected\n */\nexports.prototype.encodeTextStyle = function(symbolizers, textStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerText} */ ({\n    type: 'Text'\n  });\n  const label = textStyle.getText();\n  if (label !== undefined) {\n    symbolizer.label = label;\n    let xAlign = 'c';\n    let yAlign = 'm';\n\n    const olTextAlign = textStyle.getTextAlign();\n    // 'left', 'right', 'center', 'end' or 'start'.\n    if (olTextAlign === 'left' || olTextAlign === 'start') {\n      xAlign = 'l';\n    } else if (olTextAlign === 'right' || olTextAlign === 'end') {\n      xAlign = 'r';\n    }\n\n    const olTextBaseline = textStyle.getTextBaseline();\n    // 'bottom', 'top', 'middle', 'alphabetic', 'hanging' or 'ideographic'\n    if (olTextBaseline === 'bottom') {\n      yAlign = 'l';\n    } else if (olTextBaseline === 'top') {\n      yAlign = 't';\n    }\n    symbolizer.labelAlign = `${xAlign}${yAlign}`;\n\n    const labelRotation = textStyle.getRotation();\n    if (labelRotation !== undefined) {\n      // Mapfish Print expects a string, not a number to rotate text\n      symbolizer.labelRotation = (labelRotation * 180 / Math.PI).toString();\n      // rotate around the vertical/horizontal center\n      symbolizer.labelAlign = 'cm';\n    }\n\n    const fontStyle = textStyle.getFont();\n    if (fontStyle !== undefined) {\n      const font = fontStyle.split(' ');\n      if (font.length >= 3) {\n        symbolizer.fontWeight = font[0];\n        symbolizer.fontSize = font[1];\n        symbolizer.fontFamily = font.splice(2).join(' ');\n      }\n    }\n\n    const strokeStyle = textStyle.getStroke();\n    if (strokeStyle !== null) {\n      const strokeColor = strokeStyle.getColor();\n      googAsserts.assert(typeof strokeColor === 'string' || Array.isArray(strokeColor));\n      const strokeColorRgba = olColor.asArray(strokeColor);\n      googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n      symbolizer.haloColor = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n      symbolizer.haloOpacity = strokeColorRgba[3];\n      const width = strokeStyle.getWidth();\n      if (width !== undefined) {\n        // Width is a stroke, radius a radius, so divide by 2\n        symbolizer.haloRadius = width / 2;\n      }\n    }\n\n    const fillStyle = textStyle.getFill();\n    if (fillStyle !== null) {\n      const fillColor = fillStyle.getColor();\n      googAsserts.assert(typeof fillColor === 'string' || Array.isArray(fillColor));\n      const fillColorRgba = olColor.asArray(fillColor);\n      googAsserts.assert(Array.isArray(fillColorRgba), 'only supporting fill colors');\n      symbolizer.fontColor = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    }\n\n    // Mapfish Print allows offset only if labelAlign is defined.\n    if (symbolizer.labelAlign !== undefined) {\n      symbolizer.labelXOffset = textStyle.getOffsetX();\n      // Mapfish uses the opposite direction of OpenLayers for y axis, so the\n      // minus sign is required for the y offset to be identical.\n      symbolizer.labelYOffset = -textStyle.getOffsetY();\n    }\n\n    symbolizers.push(symbolizer);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.print.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoPrintVectorEncoder from 'ngeo/print/VectorEncoder.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olArray from 'ol/array.js';\nimport * as olObj from 'ol/obj.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olMath from 'ol/math.js';\nimport * as olSize from 'ol/size.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport olTilegridWMTS from 'ol/tilegrid/WMTS.js';\n\n/**\n * Provides a function to create ngeo.print.Service objects used to\n * interact with MapFish Print v3 services.\n *\n * ngeo.print.Service objects expose the following methods:\n *\n * - createSpec: create a report specification object\n * - createReport: send a create report request\n * - getStatus: get the status of a report\n * - getReportUrl: get the URL of a report\n * - getCapabilities: get the capabilities of the server\n *\n *\n *     let printBaseUrl = 'http://example.com/print';\n *     let print = new ngeo.print.Service(printBaseUrl);\n *\n *     let scale = 5000;\n *     let dpi = 72;\n *     let layout = 'A4 portrait';\n *     let format = 'pdf';\n *     let reportSpec = print.createSpec(map, scale, dpi, layout, format, {\n *       'title': 'A title for my report',\n *       'rotation': 45 // degree\n *     });\n *\n * See our live example: [../examples/mapfishprint.html](../examples/mapfishprint.html)\n *\n * TODO and limitations:\n *\n * - createSpec should also accept a bbox instead of a center and a scale.\n * - Add support for ol.style.RegularShape. MapFish Print supports symbols\n *   like crosses, stars and squares, so printing regular shapes should be\n *   possible.\n * - ol.style.Icon may use a sprite image, and offsets to define to rectangle\n *   to use within the sprite. This type of icons won't be printed correctly\n *   as MapFish Print does not support sprite icons.\n *\n * @constructor\n * @struct\n * @param {string} url URL to MapFish print web service.\n * @param {angular.$http} $http Angular $http service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper service.\n */\nconst exports = function(url, $http, gettextCatalog, ngeoLayerHelper) {\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = url;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.print.VectorEncoder}\n   * @private\n   */\n  this.vectorEncoder_ = new ngeoPrintVectorEncoder();\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.printNativeAngle_ = true;\n};\n\n\n/**\n * Cancel a report.\n * @param {string} ref Print report reference.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.cancel = function(ref, opt_httpConfig) {\n  const httpConfig = opt_httpConfig !== undefined ? opt_httpConfig :\n    /** @type {angular.$http.Config} */ ({});\n  const url = `${this.url_}/cancel/${ref}`;\n  // \"delete\" is a reserved word, so use ['delete']\n  return this.$http_['delete'](url, httpConfig);\n};\n\n\n/**\n * Create a report specification.\n * @param {ol.Map} map Map.\n * @param {number} scale Scale.\n * @param {number} dpi DPI.\n * @param {string} layout Layout.\n * @param {string} format Formats.\n * @param {Object.<string, *>} customAttributes Custom attributes.\n * @return {MapFishPrintSpec} The print spec.\n * @export\n */\nexports.prototype.createSpec = function(\n  map, scale, dpi, layout, format, customAttributes) {\n\n  const specMap = /** @type {MapFishPrintMap} */ ({\n    dpi: dpi,\n    rotation: /** number */ (customAttributes['rotation'])\n  });\n\n  this.encodeMap_(map, scale, specMap);\n\n  const attributes = /** @type {!MapFishPrintAttributes} */ ({\n    map: specMap\n  });\n  olObj.assign(attributes, customAttributes);\n\n  const lang = this.gettextCatalog_.currentLanguage;\n\n  const spec = /** @type {MapFishPrintSpec} */ ({\n    attributes,\n    format,\n    lang,\n    layout\n  });\n\n  return spec;\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @param {number} scale Scale.\n * @param {MapFishPrintMap} object Object.\n * @private\n */\nexports.prototype.encodeMap_ = function(map, scale, object) {\n  const view = map.getView();\n  const viewCenter = view.getCenter();\n  const viewProjection = view.getProjection();\n  const viewResolution = view.getResolution();\n  const viewRotation = object.rotation || olMath.toDegrees(view.getRotation());\n\n  googAsserts.assert(viewCenter !== undefined);\n  googAsserts.assert(viewProjection !== undefined);\n\n  object.center = viewCenter;\n  object.projection = viewProjection.getCode();\n  object.rotation = viewRotation;\n  object.scale = scale;\n  object.layers = [];\n\n  const mapLayerGroup = map.getLayerGroup();\n  googAsserts.assert(mapLayerGroup);\n  this.printNativeAngle_ = !(mapLayerGroup.get('printNativeAngle') === false);\n  let layers = this.ngeoLayerHelper_.getFlatLayers(mapLayerGroup);\n\n  // Sort the layer by ZIndex\n  olArray.stableSort(layers, (layer_a, layer_b) => layer_a.getZIndex() - layer_b.getZIndex());\n  layers = layers.slice().reverse();\n\n  layers.forEach((layer) => {\n    if (layer.getVisible()) {\n      googAsserts.assert(viewResolution !== undefined);\n      this.encodeLayer(object.layers, layer, viewResolution);\n    }\n  });\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Base} layer Layer.\n * @param {number} resolution Resolution.\n */\nexports.prototype.encodeLayer = function(arr, layer, resolution) {\n  if (layer instanceof olLayerImage) {\n    this.encodeImageLayer_(arr, layer);\n  } else if (layer instanceof olLayerTile) {\n    this.encodeTileLayer_(arr, layer);\n  } else if (layer instanceof olLayerVector) {\n    this.vectorEncoder_.encodeVectorLayer(arr, layer, resolution);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Image} layer Layer.\n * @private\n */\nexports.prototype.encodeImageLayer_ = function(arr, layer) {\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  const source = layer.getSource();\n  if (source instanceof olSourceImageWMS) {\n    this.encodeImageWmsLayer_(arr, layer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Image} layer Layer.\n * @private\n */\nexports.prototype.encodeImageWmsLayer_ = function(arr, layer) {\n  const source = layer.getSource();\n\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  googAsserts.assertInstanceof(source, olSourceImageWMS);\n\n  const url = source.getUrl();\n  if (url !== undefined) {\n    this.encodeWmsLayer_(\n      arr, layer.getOpacity(), url, source.getParams());\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {number} opacity Opacity of the layer.\n * @param {string} url Url of the WMS server.\n * @param {Object} params Url parameters\n * @private\n */\nexports.prototype.encodeWmsLayer_ = function(arr, opacity, url, params) {\n  if (url.startsWith('//')) {\n    url = window.location.protocol  + url;\n  }\n  const url_url = new URL(url);\n  const customParams = {'TRANSPARENT': true};\n  if (url_url.searchParams) {\n    for (const element of url_url.searchParams) {\n      customParams[element[0]] = element[1];\n    }\n  }\n  for (const key in params) {\n    const value = params[key];\n    // remove empty params\n    if (value !== null && value !== undefined) {\n      customParams[key] = value;\n    }\n  }\n  delete customParams['LAYERS'];\n  delete customParams['FORMAT'];\n  delete customParams['SERVERTYPE'];\n  delete customParams['VERSION'];\n\n  const object = /** @type {MapFishPrintWmsLayer} */ ({\n    baseURL: exports.getAbsoluteUrl_(url_url.origin + url_url.pathname),\n    imageFormat: 'FORMAT' in params ? params['FORMAT'] : 'image/png',\n    layers: params['LAYERS'].split(','),\n    customParams: customParams,\n    serverType: params['SERVERTYPE'],\n    type: 'wms',\n    opacity: opacity,\n    version: params['VERSION'],\n    useNativeAngle: this.printNativeAngle_,\n  });\n  arr.push(object);\n};\n\n\n/**\n * @param {string} url URL.\n * @return {string} Absolute URL.\n * @private\n */\nexports.getAbsoluteUrl_ = function(url) {\n  const a = document.createElement('a');\n  a.href = encodeURI(url);\n  return decodeURI(a.href);\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileLayer_ = function(arr, layer) {\n  googAsserts.assertInstanceof(layer, olLayerTile);\n  const source = layer.getSource();\n  if (source instanceof olSourceWMTS) {\n    this.encodeTileWmtsLayer_(arr, layer);\n  } else if (source instanceof olSourceTileWMS) {\n    this.encodeTileWmsLayer_(arr, layer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileWmtsLayer_ = function(arr, layer) {\n  googAsserts.assertInstanceof(layer, olLayerTile);\n  const source = layer.getSource();\n  googAsserts.assertInstanceof(source, olSourceWMTS);\n\n  const projection = source.getProjection();\n  const tileGrid = source.getTileGrid();\n  googAsserts.assertInstanceof(tileGrid, olTilegridWMTS);\n  const matrixIds = tileGrid.getMatrixIds();\n\n  /** @type {Array.<MapFishPrintWmtsMatrix>} */\n  const matrices = [];\n\n  for (let i = 0, ii = matrixIds.length; i < ii; ++i) {\n    const tileRange = tileGrid.getFullTileRange(i);\n    matrices.push(/** @type {MapFishPrintWmtsMatrix} */ ({\n      identifier: matrixIds[i],\n      scaleDenominator: tileGrid.getResolution(i) *\n          projection.getMetersPerUnit() / 0.28E-3,\n      tileSize: olSize.toSize(tileGrid.getTileSize(i)),\n      topLeftCorner: tileGrid.getOrigin(i),\n      matrixSize: [\n        tileRange.maxX - tileRange.minX,\n        tileRange.maxY - tileRange.minY\n      ]\n    }));\n  }\n\n  const dimensions = source.getDimensions();\n  const dimensionKeys = Object.keys(dimensions);\n\n  const object = /** @type {MapFishPrintWmtsLayer} */ ({\n    baseURL: this.getWmtsUrl_(source),\n    dimensions: dimensionKeys,\n    dimensionParams: dimensions,\n    imageFormat: source.getFormat(),\n    layer: source.getLayer(),\n    matrices: matrices,\n    matrixSet: source.getMatrixSet(),\n    opacity: layer.getOpacity(),\n    requestEncoding: source.getRequestEncoding(),\n    style: source.getStyle(),\n    type: 'WMTS',\n    version: source.getVersion()\n  });\n\n  arr.push(object);\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileWmsLayer_ = function(arr, layer) {\n  const source = layer.getSource();\n\n  googAsserts.assertInstanceof(layer, olLayerTile);\n  googAsserts.assertInstanceof(source, olSourceTileWMS);\n\n  this.encodeWmsLayer_(\n    arr, layer.getOpacity(), source.getUrls()[0], source.getParams());\n};\n\n\n/**\n * Return the WMTS URL to use in the print spec.\n * @param {ol.source.WMTS} source The WMTS source.\n * @return {string} URL.\n * @private\n */\nexports.prototype.getWmtsUrl_ = function(source) {\n  const urls = source.getUrls();\n  googAsserts.assert(urls.length > 0);\n  return exports.getAbsoluteUrl_(urls[0]);\n};\n\n\n/**\n * Send a create report request to the MapFish Print service.\n * @param {MapFishPrintSpec} printSpec Print specification.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.createReport = function(printSpec, opt_httpConfig) {\n  const format = printSpec.format || 'pdf';\n  const url = `${this.url_}/report.${format}`;\n  const httpConfig = /** @type {!angular.$http.Config} */ ({\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8'\n    }\n  });\n  olObj.assign(httpConfig,\n    opt_httpConfig !== undefined ? opt_httpConfig : {});\n  return this.$http_.post(url, printSpec, httpConfig);\n};\n\n\n/**\n * Get the status of a report.\n * @param {string} ref Print report reference.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.getStatus = function(ref, opt_httpConfig) {\n  const httpConfig = opt_httpConfig !== undefined ? opt_httpConfig :\n    /** @type {angular.$http.Config} */ ({});\n  const url = `${this.url_}/status/${ref}.json`;\n  return this.$http_.get(url, httpConfig);\n};\n\n\n/**\n * Get the URL of a report.\n * @param {string} ref Print report reference.\n * @return {string} The report URL for this ref.\n * @export\n */\nexports.prototype.getReportUrl = function(ref) {\n  return `${this.url_}/report/${ref}`;\n};\n\n\n/**\n * Get the print capabilities from MapFish Print.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n */\nexports.prototype.getCapabilities = function(opt_httpConfig) {\n  const httpConfig =\n    opt_httpConfig !== undefined ? opt_httpConfig : /** @type {angular.$http.Config} */ ({\n      withCredentials: true\n    });\n  const url = `${this.url_}/capabilities.json`;\n  return this.$http_.get(url, httpConfig);\n};\n\n\n/**\n * @param {angular.$http} $http Angular $http service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @return {ngeox.CreatePrint} The function to create a print service.\n * @ngInject\n * @ngdoc service\n * @ngname ngeoCreatePrint\n */\nexports.createPrintServiceFactory = function($http, gettextCatalog, ngeoLayerHelper) {\n  return (\n    /**\n     * @param {string} url URL to MapFish print service.\n     */\n    function(url) {\n      return new exports(url, $http, gettextCatalog, ngeoLayerHelper);\n    }\n  );\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoPrint', [\n  ngeoMapLayerHelper.module.name\n]);\nexports.module.service('ngeoPrintService', exports);\nexports.module.factory('ngeoCreatePrint', exports.createPrintServiceFactory);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.editFeatureSelectorComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport gmfEditingEditFeatureComponent from 'gmf/editing/editFeatureComponent.js';\n\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfEditingFeatureSelectorComponent', [\n  gmfEditingEditFeatureComponent.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/editing/editFeatureSelectorComponent', require('./editFeatureSelectorComponent.html'));\n});\n\n\n/**\n * Directive that uses the GMF Theme service to collect the editable layers\n * and create a drop-down list out of them. When the user selects one of the\n * layer from the list, a `gmf-editfeature` directive is created and shown,\n * which allows the user to edit that layer.\n *\n * Example:\n *\n *     <gmf-editfeatureselector\n *         gmf-editfeatureselector-active=\"ctrl.editFeatureSelectorActive\"\n *         gmf-editfeatureselector-map=\"::ctrl.map\"\n *         gmf-editfeatureselector-tolerance=\"::ctrl.tolerance\"\n *         gmf-editfeatureselector-vector=\"::ctrl.vectorLayer\">\n *     </gmf-editfeatureselector>\n *\n * @htmlAttribute {boolean} gmf-editfeatureselector-active Whether the\n *     directive is active or not.\n * @htmlAttribute {ol.Map} gmf-editfeatureselector-map The map.\n * @htmlAttribute {number|undefined} gmf-editfeatureselector-tolerance The\n *     buffer in pixels to use when making queries to get the features.\n * @htmlAttribute {ol.layer.Vector} gmf-editfeatureselector-vector The vector\n *     layer where the selected or created features are drawn.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfEditfeatureselector\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfEditfeatureselectorController as efsCtrl',\n    scope: {\n      'active': '=gmfEditfeatureselectorActive',\n      'map': '<gmfEditfeatureselectorMap',\n      'tolerance': '<?gmfEditfeatureselectorTolerance',\n      'vectorLayer': '<gmfEditfeatureselectorVector'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/editing/editFeatureSelectorComponent'\n  };\n};\n\n\nexports.directive('gmfEditfeatureselector', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfEditfeatureselectorController\n */\nexports.Controller_ = function($scope, $timeout, gmfThemes, gmfTreeManager) {\n\n  // === Directive options ===\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = this.active === true;\n\n  $scope.$watch(\n    () => this.active,\n    this.handleActiveChange_.bind(this)\n  );\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.tolerance;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.vectorLayer;\n\n\n  // === Injected services ===\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @param {Array.<ngeo.layertree.Controller>} value First level controllers.\n   */\n  const updateEditableTreeCtrls = function(value) {\n    // Timeout required, because the collection event is fired before the\n    // leaf nodes are created and they are the ones we're looking for here.\n    this.$timeout_(() => {\n      if (value) {\n        const editables = this.editableTreeCtrls;\n\n        editables.length = 0;\n        this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.editable) {\n            googAsserts.assert(treeCtrl.children.length === 0);\n            editables.push(treeCtrl);\n          }\n        });\n      }\n    }, 0);\n  };\n\n  /**\n   * @type {function()}\n   * @private\n   */\n  this.treeCtrlsWatcherUnregister_ = $scope.$watchCollection(() => {\n    if (gmfTreeManager.rootCtrl) {\n      return gmfTreeManager.rootCtrl.children;\n    }\n  }, updateEditableTreeCtrls.bind(this));\n\n\n  // === Other inner properties ===\n\n  /**\n   * Flag shared with the `gmf-editfeature` directive used to determine if it\n   * has unsaved changes or not.\n   * @type {boolean}\n   * @export\n   */\n  this.dirty = false;\n\n  /**\n   * List of editable Layertree controllers.\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.editableTreeCtrls = [];\n\n  /**\n   * The currently selected Layertree controller.\n   * @type {?ngeo.layertree.Controller}\n   * @export\n   */\n  this.selectedEditableTreeCtrl = null;\n\n  $scope.$watch(\n    () => this.selectedEditableTreeCtrl,\n    (newValue, oldValue) => {\n      this.dirty = false;\n      this.state = gmfEditingEditFeatureComponent.State.IDLE;\n    }\n  );\n\n  /**\n   * The state of this directive shared with the `gmf-editfeature` directive.\n   * This property allows the proper management of the \"stop editing\" button.\n   * When clicked, the according state is set and the `gmf-editfeature`\n   * directive checks if it has unsaved changes and allow this directive to\n   * continue the action that was made or not.\n   * @type {string}\n   * @export\n   */\n  this.state = gmfEditingEditFeatureComponent.State.IDLE;\n\n  $scope.$watch(\n    () => this.state,\n    (newValue, oldValue) => {\n      if (newValue === gmfEditingEditFeatureComponent.State.STOP_EDITING_EXECUTE ||\n          newValue === gmfEditingEditFeatureComponent.State.DEACTIVATE_EXECUTE) {\n        this.selectedEditableTreeCtrl = null;\n      }\n      if (newValue === gmfEditingEditFeatureComponent.State.DEACTIVATE_EXECUTE) {\n        this.active = false;\n      }\n    }\n  );\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n\n};\n\n\n/**\n * Called when the 'stop editing' button is clicked. Set the 'state'\n * variable to 'pending' allow the editfeature directive to check if it can\n * stop or if it requires confirmation due to unsaved modifications.\n * @export\n */\nexports.Controller_.prototype.stopEditing = function() {\n  this.state = gmfEditingEditFeatureComponent.State.STOP_EDITING_PENDING;\n};\n\n\n/**\n * Called when the active property of the this directive changes. Manage\n * the activation/deactivation accordingly.\n * @param {boolean} active Whether the directive is active or not.\n * @private\n */\nexports.Controller_.prototype.handleActiveChange_ = function(active) {\n  if (!active) {\n    if (!this.dirty) {\n      this.stopEditing();\n    } else {\n      // There are unsaved modifications. Prevent the deactivation and\n      // set the state accordingly for the `gmf-editfeature` directive\n      // to manage the unsaved modifications.\n      // The changes are made inside a $timeout to be taken into account\n      // in the next digest cycle.\n      this.$timeout_(() => {\n        this.active = true;\n        this.stopEditing();\n      });\n    }\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.treeCtrlsWatcherUnregister_();\n};\n\n\nexports.controller('GmfEditfeatureselectorController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.module\n */\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\nimport gmfEditingEditFeatureComponent from 'gmf/editing/editFeatureComponent.js';\nimport gmfEditingEditFeatureSelectorComponent from 'gmf/editing/editFeatureSelectorComponent.js';\nimport gmfEditingEnumerateAttribute from 'gmf/editing/EnumerateAttribute.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport gmfEditingXSDAttributes from 'gmf/editing/XSDAttributes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfEditingModule', [\n  gmfEditingEditFeature.module.name,\n  gmfEditingEditFeatureComponent.name,\n  gmfEditingEditFeatureSelectorComponent.name,\n  gmfEditingEnumerateAttribute.module.name,\n  gmfEditingSnapping.module.name,\n  gmfEditingXSDAttributes.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.search.createGeoJSONBloodhound\n */\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olObj from 'ol/obj.js';\n\nimport 'corejs-typeahead';\n\n\n/**\n * @param {string} url an URL to a search service.\n * @param {(function(GeoJSONFeature): boolean)=} opt_filter function to filter\n *     results.\n * @param {ol.proj.Projection=} opt_featureProjection Feature projection.\n * @param {ol.proj.Projection=} opt_dataProjection Data projection.\n * @param {BloodhoundOptions=} opt_options optional Bloodhound options. If\n *     undefined, the default Bloodhound config will be used.\n * @param {BloodhoundRemoteOptions=} opt_remoteOptions optional Bloodhound\n * remote options. Effective only if `remote` is not defined in `opt_options`.\n * @return {Bloodhound} The Bloodhound object.\n */\nconst exports = function(url, opt_filter, opt_featureProjection,\n  opt_dataProjection, opt_options, opt_remoteOptions) {\n  const geojsonFormat = new olFormatGeoJSON();\n  const bloodhoundOptions = /** @type {BloodhoundOptions} */ ({\n    remote: {\n      url,\n      prepare(query, settings) {\n        settings.url = settings.url.replace('%QUERY', query);\n        return settings;\n      },\n      transform(parsedResponse) {\n        /** @type {GeoJSONFeatureCollection} */\n        let featureCollection = /** @type {GeoJSONFeatureCollection} */\n            (parsedResponse);\n        if (opt_filter !== undefined) {\n          featureCollection = /** @type {GeoJSONFeatureCollection} */ ({\n            type: 'FeatureCollection',\n            features: featureCollection.features.filter(opt_filter)\n          });\n        }\n\n        return geojsonFormat.readFeatures(featureCollection, {\n          featureProjection: opt_featureProjection,\n          dataProjection: opt_dataProjection\n        });\n      }\n    },\n    // datumTokenizer is required by the Bloodhound constructor but it\n    // is not used when only a remote is passsed to Bloodhound.\n    datumTokenizer: () => {},\n    queryTokenizer: Bloodhound.tokenizers.whitespace\n  });\n\n  // the options objects are cloned to avoid updating the passed object\n  const options = olObj.assign({}, opt_options || {});\n  const remoteOptions = olObj.assign({}, opt_remoteOptions || {});\n\n  if (options.remote) {\n    // move the remote options to opt_remoteOptions\n    olObj.assign(remoteOptions, options.remote);\n    delete options.remote;\n  }\n\n  olObj.assign(bloodhoundOptions, options);\n  olObj.assign(bloodhoundOptions.remote, remoteOptions);\n\n  return new Bloodhound(bloodhoundOptions);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSearchCreategeojsonbloodhound', []);\n\nexports.module.value(\n  'ngeoSearchCreateGeoJSONBloodhound',\n  exports);\n\n\n/**\n * Provides a function that creates a Bloodhound engine\n * expecting GeoJSON responses from the search web service, which creates\n * `ol.Feature` objects as suggestions.\n *\n * Example:\n *\n *     let bloodhound = createGeoJSONBloodhound(\n *       'http://example.com/fulltextsearch?query=%QUERY',\n *       aFilterFunction,\n *       ol.proj.get('EPSG:3857'));\n *     bloodhound.initialize();\n *\n *     let bloodhound = createGeoJSONBloodhound(\n *       '',\n *       undefined,\n *       ol.proj.get('EPSG:3857'),\n *       ol.proj.get('EPSG:21781'),\n *       {\n *         remote: {\n *           url: mySearchEngineUrl,\n *           replace: function(url, query) {\n *             return url +\n *                 '?qtext=' + encodeURIComponent(query) +\n *                 '&lang=' + gettextCatalog.currentLanguage;\n *           }\n *         }\n *       }\n *     );\n *     bloodhound.initialize();\n *\n * @typedef {function(string, (function(GeoJSONFeature): boolean)=,\n * ol.proj.Projection=, ol.proj.Projection=, BloodhoundOptions=,\n * BloodhoundRemoteOptions=):Bloodhound}\n * @ngdoc service\n * @ngname search.createGeoJSONBloodhound\n */\nexports.Function;\n\n\nexport default exports;\n","/**\n * @module ngeo.search.createLocationSearchBloodhound\n */\nimport * as olObj from 'ol/obj.js';\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olFeature from 'ol/Feature.js';\n\nimport 'corejs-typeahead';\n\n\n/**\n * @param {ngeox.search.LocationSearchOptions=} opt_options Options.\n * @return {Bloodhound} The Bloodhound object.\n */\nconst exports = function(opt_options) {\n  const options = opt_options || {};\n\n  const sourceProjection = olProj.get(ngeoProjEPSG21781);\n  const targetProjection = options.targetProjection;\n\n  /**\n   * @param {string} bbox Bbox string.\n   * @return {?ol.Extent} Parsed extent.\n   */\n  const parseBbox = (bbox) => {\n    const regex = /BOX\\((.*?) (.*?),(.*?) (.*?)\\)/g;\n    const match = regex.exec(bbox);\n    if (match !== null) {\n      return [\n        parseFloat(match[1]),\n        parseFloat(match[2]),\n        parseFloat(match[3]),\n        parseFloat(match[4])\n      ];\n    } else {\n      return null;\n    }\n  };\n\n  const removeHtmlTags = label => label.replace(/<\\/?[ib]>/g, '');\n\n  const extractName = (label) => {\n    const regex = /<b>(.*?)<\\/b>/g;\n    const match = regex.exec(label);\n    if (match !== null) {\n      return match[1];\n    } else {\n      return label;\n    }\n  };\n\n  const bloodhoundOptions = /** @type {BloodhoundOptions} */ ({\n    remote: {\n      url: 'https://api3.geo.admin.ch/rest/services/api/SearchServer?type=locations&searchText=%QUERY',\n      prepare: (query, settings) => {\n        settings.url = settings.url.replace('%QUERY', query);\n        if (options.limit !== undefined) {\n          settings.url += `&limit=${options.limit}`;\n        }\n        if (options.origins !== undefined) {\n          settings.url += `&origins=${options.origins}`;\n        }\n\n        return (options.prepare !== undefined) ?\n          options.prepare(query, settings) : settings;\n      },\n      transform: (/** @type {geoAdminx.SearchLocationResponse} */ parsedResponse) => {\n        const features = parsedResponse.results.map((/** @type {geoAdminx.SearchLocationResult} */ result) => {\n          const attrs = result.attrs;\n\n          // note that x and y are switched!\n          const point = new olGeomPoint([attrs.y, attrs.x]);\n          let bbox = parseBbox(attrs.geom_st_box2d);\n          if (targetProjection !== undefined) {\n            point.transform(sourceProjection, targetProjection);\n            if (bbox !== null) {\n              bbox = olProj.transformExtent(bbox, sourceProjection, targetProjection);\n            }\n          }\n\n          attrs['geometry'] = point;\n          attrs['bbox'] = bbox;\n\n          // create a label without HTML tags\n          const label = attrs.label;\n          attrs['label_no_html'] = removeHtmlTags(label);\n          attrs['label_simple'] = extractName(label);\n\n          const feature = new olFeature(attrs);\n          feature.setId(attrs.featureId);\n\n          return feature;\n        });\n\n        return features;\n      }\n    },\n    // datumTokenizer is required by the Bloodhound constructor but it\n    // is not used when only a remote is passsed to Bloodhound.\n    datumTokenizer: () => {},\n    queryTokenizer: Bloodhound.tokenizers.whitespace\n  });\n\n  // the options objects are cloned to avoid updating the passed object\n  const bhOptions = olObj.assign({}, options.options || {});\n  const remoteOptions = olObj.assign({}, options.remoteOptions || {});\n\n  if (bhOptions.remote) {\n    // move the remote options to opt_remoteOptions\n    olObj.assign(remoteOptions, bhOptions.remote);\n    delete bhOptions.remote;\n  }\n\n  olObj.assign(bloodhoundOptions, bhOptions);\n  olObj.assign(bloodhoundOptions.remote, remoteOptions);\n\n  return new Bloodhound(bloodhoundOptions);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoCreateLocationSearchBloodhound', []);\n\nexports.module.value(\n  'ngeoCreateLocationSearchBloodhound',\n  exports);\n\n\n/**\n * Provides a function that creates a Bloodhound engine\n * for the GeoAdmin Location Search API, which creates `ol.Feature` objects\n * as suggestions.\n *\n * See: http://api3.geo.admin.ch/services/sdiservices.html#search\n *\n * Example:\n *\n *     let bloodhound = ngeoCreateLocationSearchBloodhound({\n *       targetProjection: ol.proj.get('EPSG:3857'),\n *       limit: 10\n *     });\n *     bloodhound.initialize();\n *\n * @typedef {function(ngeox.search.LocationSearchOptions=):Bloodhound}\n * @ngdoc service\n * @ngname search.createLocationSearchBloodhound\n */\nexports.Function;\n\n\nexport default exports;\n","/**\n * @module ngeo.search.module\n */\nimport ngeoSearchSearchDirective from 'ngeo/search/searchDirective.js';\nimport ngeoSearchCreateGeoJSONBloodhound from 'ngeo/search/createGeoJSONBloodhound.js';\nimport ngeoSearchCreateLocationSearchBloodhound from 'ngeo/search/createLocationSearchBloodhound.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoSearchModule', [\n  ngeoSearchSearchDirective.module.name,\n  ngeoSearchCreateGeoJSONBloodhound.module.name,\n  ngeoSearchCreateLocationSearchBloodhound.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.drawing.featureStyleComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingFeatureStyle', [\n  ngeoMiscColorpickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/drawing/featureStyleComponent', require('./featureStyleComponent.html'));\n});\n\n\n/**\n * Directive used to set the style of a vector feature. The options depend\n * on the type of geometry.\n * Example:\n *\n *     <gmf-featurestyle\n *         gmf-featurestyle-feature=\"ctrl.selectedFeature\">\n *     </gmf-featurestyle>\n *\n * @htmlAttribute {ol.Feature} gmf-featurestyle-feature The feature.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfFeaturestyle\n */\nexports.directive_ = function() {\n  return {\n    controller: 'GmfFeaturestyleController as fsCtrl',\n    scope: {\n      'feature': '=gmfFeaturestyleFeature'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/drawing/featureStyleComponent'\n  };\n};\n\n\nexports.directive('gmfFeaturestyle',\n  exports.directive_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Gmf feature helper service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfFeaturestyleController\n */\nexports.Controller_ = function($scope, ngeoFeatureHelper) {\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.color = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.label = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.measure = undefined;\n\n  $scope.$watch(\n    () => this.color,\n    this.handleColorSet_.bind(this)\n  );\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = [];\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.type;\n\n  $scope.$watch(\n    () => this.feature,\n    this.handleFeatureSet_.bind(this)\n  );\n\n};\n\n\n/**\n * Called when a new feature is set, which can also be null.\n * @param {?ol.Feature} newFeature New feature or null value.\n * @param {?ol.Feature} previousFeature Previous feature or null value.\n * @private\n */\nexports.Controller_.prototype.handleFeatureSet_ = function(\n  newFeature, previousFeature) {\n\n  const keys = this.featureListenerKeys_;\n\n  if (previousFeature) {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.type = undefined;\n    this.color = undefined;\n    this.measure = undefined;\n    this.label = undefined;\n  }\n\n  if (newFeature) {\n    [\n      ngeoFormatFeatureProperties.ANGLE,\n      ngeoFormatFeatureProperties.COLOR,\n      ngeoFormatFeatureProperties.NAME,\n      ngeoFormatFeatureProperties.SHOW_LABEL,\n      ngeoFormatFeatureProperties.OPACITY,\n      ngeoFormatFeatureProperties.SHOW_MEASURE,\n      ngeoFormatFeatureProperties.SIZE,\n      ngeoFormatFeatureProperties.STROKE\n    ].forEach(function(propName) {\n      keys.push(\n        olEvents.listen(\n          newFeature,\n          `change:${propName}`,\n          this.handleFeatureChange_,\n          this\n        )\n      );\n    }, this);\n\n    const geometry = newFeature.getGeometry();\n    googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n    keys.push(\n      olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      )\n    );\n\n    this.type = this.featureHelper_.getType(newFeature);\n    this.color = this.featureHelper_.getColorProperty(newFeature);\n    this.measure = this.featureHelper_.getMeasure(newFeature);\n  }\n};\n\n\n/**\n * @param {string|undefined} newColor Color.\n * @private\n */\nexports.Controller_.prototype.handleColorSet_ = function(\n  newColor) {\n  if (this.feature && newColor) {\n    const currentColor = this.feature.get(ngeoFormatFeatureProperties.COLOR);\n    if (currentColor !== newColor) {\n      this.feature.set(ngeoFormatFeatureProperties.COLOR, newColor);\n    }\n  }\n};\n\n\n/**\n * @param {number|undefined} value A name value to set or undefined to get.\n * @return {number} The angle of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetAngle = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.ANGLE, value));\n};\n\n\n/**\n * @param {string|undefined} value A name value to set or undefined to get.\n * @return {string} The name of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetName = function(value) {\n  return googAsserts.assertString(this.getSetProperty_(ngeoFormatFeatureProperties.NAME, value));\n};\n\n/**\n * @param {boolean|undefined} value A value to set or undefined for the\n *     purpose of showing the attribute labels or not.\n * @return {boolean} Whether to show the labels or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowLabel = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_LABEL, value));\n};\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetOpacity = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.OPACITY, value));\n};\n\n\n/**\n * @param {boolean|undefined} value A value to set or undefined to get for the\n *     purpose of showing the geometry measurements or not.\n * @return {boolean} Whether to show the measurements or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowMeasure = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_MEASURE, value));\n};\n\n\n/**\n * @param {number|undefined} value A size value to set or undefined to get.\n * @return {number} The size of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetSize = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.SIZE, value));\n};\n\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetStroke = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.STROKE, value));\n};\n\n\n/**\n * @param {string} key The property name.\n * @param {boolean|number|string|undefined} value A value to set or undefined\n *     to get.\n * @return {boolean|number|string} The property value of the feature.\n * @private\n */\nexports.Controller_.prototype.getSetProperty_ = function(key, value) {\n  if (value !== undefined) {\n    this.feature.set(key, value);\n  }\n  return /** @type {boolean|number|string} */ (this.feature.get(key));\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeatureChange_ = function() {\n  const feature = this.feature;\n\n  if (!feature) {\n    return;\n  }\n\n  this.featureHelper_.setStyle(feature, true);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleGeometryChange_ = function() {\n  googAsserts.assert(this.feature);\n  this.measure = this.featureHelper_.getMeasure(this.feature);\n\n  const showMeasure = this.featureHelper_.getShowMeasureProperty(this.feature);\n  if (showMeasure) {\n    this.handleFeatureChange_();\n  }\n\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfFeaturestyleController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.drawing.drawFeatureComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\nimport googAsserts from 'goog/asserts.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoMenu from 'ngeo/Menu.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingExportfeaturesComponent from 'ngeo/editing/exportfeaturesComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawComponent from 'ngeo/draw/component.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModify from 'ngeo/interaction/Modify.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfDrawFeatureComponent', [\n  gmfDrawingFeatureStyleComponent.name,\n  ngeoEditingExportfeaturesComponent.name,\n  ngeoMiscBtnComponent.name,\n  ngeoDrawComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/drawing/drawFeatureComponent', require('./drawFeatureComponent.html'));\n});\n\n\n/**\n * Directive used to create, modify and delete vector features on a map with\n * the addition of changing their style.\n * Example:\n *\n *     <gmf-drawfeature\n *         gmf-drawfeature-active=\"ctrl.drawFeatureActive\"\n *         gmf-drawfeature-map=\"::ctrl.map\">\n *     </gmf-drawfeature>\n *\n * @htmlAttribute {boolean} gmf-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {ol.Map} gmf-drawfeature-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfDrawfeature\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfDrawfeatureController as efCtrl',\n    scope: {\n      'active': '=gmfDrawfeatureActive',\n      'map': '<gmfDrawfeatureMap',\n      'showMeasure': '=?gmfDrawfeatureShowmeasure'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/drawing/drawFeatureComponent'\n  };\n};\n\n\nexports.directive('gmfDrawfeature',\n  exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {!ol.Collection.<!ol.Feature>} ngeoFeatures Collection of features.\n * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDrawfeatureController\n */\nexports.Controller_ = function($scope, $timeout, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures, ngeoToolActivateMgr) {\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawActive = false;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.drawToolActivate = new ngeoMiscToolActivate(this, 'drawActive');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.mapSelectActive = true;\n\n  /**\n   * @type {number?}\n   * @private\n   */\n  this.longPressTimeout_ = null;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.mapSelectToolActivate = new ngeoMiscToolActivate(this, 'mapSelectActive');\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {!ol.Collection.<!ol.Feature>}\n   * @export\n   */\n  this.features = ngeoFeatures;\n\n  /**\n   * @type {!ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.selectedFeature = null;\n\n  /**\n   * @type {!ol.Collection.<!ol.Feature>}\n   * @export\n   */\n  this.selectedFeatures = new olCollection();\n\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.interactions_ = new olCollection();\n\n  /**\n   * @type {!ngeo.interaction.Modify}\n   * @private\n   */\n  this.modify_ = new ngeoInteractionModify({\n    features: this.selectedFeatures,\n    style: ngeoFeatureHelper.getVertexStyle(false)\n  });\n  this.interactions_.push(this.modify_);\n\n  /**\n   * @type {?ngeo.Menu}\n   * @private\n   */\n  this.menu_ = null;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.modifyToolActivate = new ngeoMiscToolActivate(this.modify_, 'active');\n\n  /**\n   * @type {!ngeo.interaction.Translate}\n   * @private\n   */\n  this.translate_ = new ngeoInteractionTranslate({\n    features: this.selectedFeatures,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf047',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.translate_);\n\n  /**\n   * @type {!ngeo.interaction.Rotate}\n   * @private\n   */\n  this.rotate_ = new ngeoInteractionRotate({\n    features: this.selectedFeatures,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf01e',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.rotate_);\n\n  this.initializeInteractions_();\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.rotateToolActivate = new ngeoMiscToolActivate(this.rotate_, 'active');\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.translateToolActivate = new ngeoMiscToolActivate(this.translate_, 'active');\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * Flag used to determine whether the selection of a feature was made\n   * from the selection of an item from the list or not (the map, contextual\n   * menu, etc.)\n   * @type {boolean}\n   * @private\n   */\n  this.listSelectionInProgress_ = false;\n\n  $scope.$watch(\n    () => this.active,\n    this.handleActiveChange_.bind(this)\n  );\n\n  $scope.$watch(\n    () => this.drawActive,\n    (active) => {\n      if (active) {\n        this.selectedFeature = null;\n      }\n    }\n  );\n\n  $scope.$watch(\n    () => this.selectedFeature,\n    (newFeature, previousFeature) => {\n      this.selectedFeatures.clear();\n      if (previousFeature) {\n        this.featureHelper_.setStyle(previousFeature);\n        this.unregisterInteractions_();\n      }\n      if (newFeature) {\n        this.featureHelper_.setStyle(newFeature, true);\n        this.selectedFeatures.push(newFeature);\n        this.registerInteractions_();\n        if (this.listSelectionInProgress_) {\n          this.featureHelper_.panMapToFeature(newFeature, this.map);\n          this.listSelectionInProgress_ = false;\n        }\n      } else if (this.menu_) {\n        this.map.removeOverlay(this.menu_);\n        this.menu_ = null;\n      }\n    }\n  );\n\n  $scope.$watch(\n    () => this.mapSelectActive,\n    this.handleMapSelectActiveChange_.bind(this)\n  );\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nameProperty = ngeoFormatFeatureProperties.NAME;\n\n  /**\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n};\n\n\n/**\n * Initialize interactions by setting them inactive and decorating them\n * @private\n */\nexports.Controller_.prototype.initializeInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    interaction.setActive(false);\n    ngeoMiscDecorate.interaction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by adding them to the map\n * @private\n */\nexports.Controller_.prototype.registerInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.addInteraction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by removing them to the map\n * @private\n */\nexports.Controller_.prototype.unregisterInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.removeInteraction(interaction);\n  });\n};\n\n\n/**\n * Called when the active property of the this directive changes. Manage\n * the activation/deactivation accordingly (event management, etc.)\n * @param {boolean} active Whether the directive is active or not.\n * @private\n */\nexports.Controller_.prototype.handleActiveChange_ = function(active) {\n\n  const keys = this.listenerKeys_;\n  const drawUid = ['draw-', olBase.getUid(this)].join('-');\n  const otherUid = ['other-', olBase.getUid(this)].join('-');\n  const toolMgr = this.ngeoToolActivateMgr_;\n\n  if (active) {\n    // when activated\n\n    keys.push(\n      olEvents.listen(this.features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features, 'remove', this.handleFeaturesRemove_, this)\n    );\n\n    keys.push(olEvents.listen(this.translate_,\n      'translateend',\n      this.handleTranslateEnd_, this));\n\n    keys.push(olEvents.listen(this.rotate_, 'rotateend', this.handleRotateEnd_, this));\n\n    toolMgr.registerTool(drawUid, this.drawToolActivate, false);\n    toolMgr.registerTool(drawUid, this.mapSelectToolActivate, true);\n\n    toolMgr.registerTool(otherUid, this.drawToolActivate, false);\n    toolMgr.registerTool(otherUid, this.modifyToolActivate, true);\n    toolMgr.registerTool(otherUid, this.translateToolActivate, false);\n    toolMgr.registerTool(otherUid, this.rotateToolActivate, false);\n\n    this.mapSelectActive = true;\n    this.modify_.setActive(true);\n  } else {\n    // when deactivated\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n\n    toolMgr.unregisterTool(drawUid, this.drawToolActivate);\n    toolMgr.unregisterTool(drawUid, this.mapSelectToolActivate);\n\n    toolMgr.unregisterTool(otherUid, this.drawToolActivate);\n    toolMgr.unregisterTool(otherUid, this.modifyToolActivate);\n    toolMgr.unregisterTool(otherUid, this.translateToolActivate);\n    toolMgr.unregisterTool(otherUid, this.rotateToolActivate);\n\n    this.drawActive = false;\n    this.modify_.setActive(false);\n    this.mapSelectActive = false;\n    this.selectedFeature = null;\n\n    if (this.menu_) {\n      this.map.removeOverlay(this.menu_);\n      this.menu_ = null;\n    }\n  }\n\n};\n\n\n/**\n * Method called when a selection occurs from the list, i.e. when an item in\n * the list of features is clicked. Called from the template, so no need to\n * update Angular's scope.\n * @param {!ol.Feature} feature Feature to select.\n * @export\n */\nexports.Controller_.prototype.selectFeatureFromList = function(feature) {\n  this.listSelectionInProgress_ = true;\n  this.selectedFeature = feature;\n  this.drawActive = false;\n};\n\n\n/**\n * @return {!Array.<!ol.Feature>} Array.\n * @export\n */\nexports.Controller_.prototype.getFeaturesArray = function() {\n  return this.features.getArray();\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.clearFeatures = function() {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete all the features?');\n  if (confirm(msg)) {\n    this.features.clear();\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature The feature to remove from the selection.\n * @export\n */\nexports.Controller_.prototype.removeFeature = function(feature) {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete the selected feature?');\n  if (confirm(msg)) {\n    this.features.remove(feature);\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturesAdd_ = function(evt) {\n  // timeout to prevent double-click to zoom the map\n  this.timeout_(() => {\n    this.selectedFeature = /** @type {ol.Feature} */ (evt.element);\n    this.drawActive = false;\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturesRemove_ = function(evt) {\n  this.selectedFeature = null;\n};\n\n\n/**\n * Called when the mapSelectActive property changes.\n * @param {boolean} active Whether the map select is active or not.\n * @private\n */\nexports.Controller_.prototype.handleMapSelectActiveChange_ = function(\n  active) {\n\n  const mapDiv = this.map.getViewport();\n  googAsserts.assertElement(mapDiv);\n\n  if (active) {\n    olEvents.listen(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.listen(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n    olEvents.listen(mapDiv, 'touchstart',\n      this.handleMapTouchStart_, this);\n\n    olEvents.listen(mapDiv, 'touchmove',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.listen(mapDiv, 'touchend',\n      this.handleMapTouchEnd_, this);\n\n  } else {\n    olEvents.unlisten(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.unlisten(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n    olEvents.unlisten(mapDiv, 'touchstart',\n      this.handleMapTouchStart_, this);\n\n    olEvents.unlisten(mapDiv, 'touchmove',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.unlisten(mapDiv, 'touchend',\n      this.handleMapTouchEnd_, this);\n  }\n};\n\n\n/**\n * @param {!ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapClick_ = function(evt) {\n\n  const pixel = evt.pixel;\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 5\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // do not do any further action if feature is null or already selected\n  if (feature === this.selectedFeature) {\n    return;\n  }\n\n  this.selectedFeature = feature;\n\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapTouchStart_ = function(evt) {\n  this.longPressTimeout_ = setTimeout(() => {\n    this.handleMapContextMenu_(evt);\n  }, 500);\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapTouchEnd_ = function(evt) {\n  clearTimeout(this.longPressTimeout_);\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(evt) {\n  const gettextCatalog = this.gettextCatalog_;\n  const pixel = this.map.getEventPixel(evt);\n  const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 7\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // show contextual menu when clicking on certain types of features\n  if (feature) {\n    let actions = [];\n\n    const type = this.featureHelper_.getType(feature);\n    if (type == ngeoGeometryType.CIRCLE ||\n        type == ngeoGeometryType.LINE_STRING ||\n        type == ngeoGeometryType.POLYGON ||\n        type == ngeoGeometryType.RECTANGLE) {\n      actions = actions.concat([{\n        cls: 'fa fa-arrows',\n        label: gettextCatalog.getString('Move'),\n        name: 'move'\n      }, {\n        cls: 'fa fa-rotate-right',\n        label: gettextCatalog.getString('Rotate'),\n        name: 'rotate'\n      }]);\n    }\n\n    actions = actions.concat([{\n      cls: 'fa fa-trash-o',\n      label: gettextCatalog.getString('Delete'),\n      name: 'delete'\n    }]);\n\n    this.menu_ = new ngeoMenu({\n      actions\n    });\n\n    olEvents.listen(this.menu_, 'actionclick',\n      this.handleMenuActionClick_, this);\n    this.map.addOverlay(this.menu_);\n\n    this.menu_.open(coordinate);\n\n    evt.preventDefault();\n    evt.stopPropagation();\n  }\n\n  // do not do any further action if feature is null or already selected\n  if (feature === this.selectedFeature) {\n    return;\n  }\n\n  this.modify_.setActive(true);\n\n  this.selectedFeature = feature;\n\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.MenuEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuActionClick_ = function(evt) {\n  const action = evt.detail.action;\n\n  switch (action) {\n    case 'delete':\n      googAsserts.assert(\n        this.selectedFeature, 'Selected feature should be truthy');\n      this.removeFeature(this.selectedFeature);\n      this.scope_.$apply();\n      break;\n    case 'move':\n      this.translate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    case 'rotate':\n      this.rotate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    default:\n      // FIXME\n      console.log(`FIXME - support: ${action}`);\n      break;\n  }\n};\n\n\n/**\n * @param {!ol.interaction.Translate.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleTranslateEnd_ = function(evt) {\n  this.translate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.RotateEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleRotateEnd_ = function(evt) {\n  this.rotate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfDrawfeatureController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.drawing.module\n */\nimport gmfDrawingDrawFeatureComponent from 'gmf/drawing/drawFeatureComponent.js';\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingModule', [\n  gmfDrawingDrawFeatureComponent.name,\n  gmfDrawingFeatureStyleComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.profile.d3Elevation\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olObj from 'ol/obj.js';\n\nimport 'd3-transition';\nimport {bisector, extent} from 'd3-array';\nimport {axisBottom, axisLeft} from 'd3-axis';\nimport {scaleLinear} from 'd3-scale';\nimport {mouse, select, selectAll} from 'd3-selection';\nimport {area, line} from 'd3-shape';\nconst d3 = {\n  bisector,\n  extent,\n  axisBottom,\n  axisLeft,\n  scaleLinear,\n  mouse,\n  select,\n  selectAll,\n  area,\n  line,\n};\n\n\n/**\n * Provides a D3js component to be used to draw an elevation\n * profile chart.\n *\n *     let selection = d3.select('#element_id');\n *     let profile = ngeo.profile.d3Elevation({\n *       distanceExtractor: function (item) {return item['dist'];},\n *       linesConfiguration: {\n *         'lineZ1': {\n *           zExtractor: function (item) {return item['values']['z1'];}\n *         },\n *         'lineZ2': {\n *           color: '#00F',\n *           zExtractor: function (item) {return item['values']['z2'];}\n *         }\n *       },\n *       hoverCallback: function(point, dist, xUnits, elevations, yUnits) {\n *         console.log(point.x, point.y);\n *       },\n *       outCallback: function() {\n *         console.log(\"out\");\n *       }\n *     });\n *     selection.datum(data).call(profile);\n *\n * The selection data must be an array.\n * The layout for the items of this array is unconstrained: the distance values\n * is extracted using the distanceExtractor config option and multiples z values\n * can be displayed by providing multiple linesConfiguration with its specific\n * zExtractor.\n * Optionally you can provide a color in your linesConfiguration. A line without\n * color will be red. Each linesConfiguration name is used as class for its\n * respective line. So you can pass a styleDefs config option (inline css) to\n * customize the line or all the chart.\n * Optionally, POIs can be displayed and depend on a poiExtractor\n * config option.\n *\n * The data below will work for the above example:\n *\n *     [\n *         {\n *             \"y\": 199340,\n *             \"values\": {\"z1\": 788.7, \"z2\": 774.2},\n *             \"dist\": 0.0,\n *             \"x\": 541620\n *         }, ...\n *     ]\n *\n * @return {Object} D3js component.\n * @param {ngeox.profile.ProfileOptions} options Profile options.\n * @export\n */\nconst exports = function(options) {\n  /**\n   * Whether the simplified profile should be shown.\n   * @type {boolean}\n   */\n  const light = options.light !== undefined ? options.light : false;\n\n\n  /**\n   * The values for margins around the chart defined in pixels.\n   */\n  const margin = light ? {top: 0, right: 0, bottom: 0, left: 0} :\n    {top: 10, right: 20, bottom: 30, left: 40};\n\n  /**\n   * Hover callback function.\n   * @type {function(Object, number, string, Object.<string, number>, string)}\n   */\n  const hoverCallback = options.hoverCallback !== undefined ?\n    options.hoverCallback : () => {};\n\n  /**\n   * Out callback function.\n   * @type {function()}\n   */\n  const outCallback = options.outCallback !== undefined ?\n    options.outCallback : () => {};\n\n  /**\n   * Distance data extractor used to get the dist values.\n   */\n  const distanceExtractor = options.distanceExtractor;\n\n  /**\n   * Line configuration object.\n   */\n  const linesConfiguration = options.linesConfiguration;\n\n  /**\n   * Number of different configurations for the line.\n   */\n  const numberOfLines = Object.keys(linesConfiguration).length;\n\n  /**\n   * Method to get the coordinate in pixels from a distance.\n   */\n  const bisectDistance = d3.bisector(d => distanceExtractor(d)).left;\n\n  /**\n   * POI data extractor.\n   */\n  const poiExtractor = options.poiExtractor;\n\n  /**\n   * Optional SVG inline style.\n   */\n  const styleDefs = options.styleDefs;\n\n  /**\n   * @type {number}\n   */\n  const poiLabelAngle = options.poiLabelAngle !== undefined ?\n    options.poiLabelAngle : -60;\n\n  /**\n   * @type {Object.<string, string>}\n   */\n  const i18n = options.i18n || {};\n\n  /**\n   * @type {string}\n   */\n  const xAxisLabel = (i18n.xAxis || 'Distance');\n\n  /**\n   * @type {string}\n   */\n  const yAxisLabel = (i18n.yAxis || 'Elevation');\n\n  /**\n   * @type {ngeox.profile.ProfileFormatter}\n   */\n  const formatter = {\n    /**\n     * @param {number} dist Distance.\n     * @param {string} units Units.\n     * @return {string} Distance.\n     */\n    xhover(dist, units) {\n      return `${parseFloat(dist.toPrecision(3))} ${units}`;\n    },\n    /**\n     * @param {number} ele Elevation.\n     * @param {string} units Units.\n     * @return {string} Elevation.\n     */\n    yhover(ele, units) {\n      return `${Math.round(ele)} m`;\n    },\n    /**\n     * @param {number} dist Distance.\n     * @param {string} units Units.\n     * @return {string|number} Distance.\n     */\n    xtick(dist, units) {\n      return dist;\n    },\n    /**\n     * @param {number} ele Elevation.\n     * @param {string} units Units.\n     * @return {string|number} Elevation.\n     */\n    ytick(ele, units) {\n      return ele;\n    }\n  };\n\n  if (options.formatter !== undefined) {\n    olObj.assign(formatter, options.formatter);\n  }\n\n  /**\n   * @type {boolean}\n   */\n  const lightXAxis = options.lightXAxis !== undefined ? options.lightXAxis : false;\n\n  // Objects shared with the showPois function\n  /**\n   * @type {Object}\n   */\n  let svg;\n\n  /**\n   * D3 x scale.\n   */\n  let x;\n\n  /**\n   * D3 y scale.\n   */\n  let y;\n\n  /**\n   * Scale modifier to allow customizing the x and y scales.\n   */\n  const scaleModifier = options.scaleModifier;\n\n  let g;\n\n  /**\n   * Height of the chart in pixels\n   */\n  let height;\n\n  /**\n   * Width of the chart in pixels\n   */\n  let width;\n\n  /**\n  * Factor to determine whether to use 'm' or 'km'.\n  */\n  let xFactor;\n\n  /**\n  * Distance units. Either 'm' or 'km'.\n  */\n  let xUnits;\n\n  /**\n   * D3 extent of the distance.\n   */\n  let xDomain;\n\n\n  const profile = function(selection) {\n    selection.each(function(data) {\n      d3.select(this).selectAll('svg').remove();\n      if (data === undefined) {\n        return;\n      }\n\n      width = Math.max(this.clientWidth - margin.right - margin.left, 0);\n      x = d3.scaleLinear().range([0, width]);\n\n      height = Math.max(this.clientHeight - margin.top - margin.bottom, 0);\n      y = d3.scaleLinear().range([height, 0]);\n\n      const xAxis = d3.axisBottom(x);\n      const yAxis = d3.axisLeft(y);\n\n      let area;\n      if (numberOfLines === 1) {\n        area = d3.area()\n          .x(d => x(distanceExtractor(d)))\n          .y0(height)\n          .y1((d) => {\n            const firstLineName =  Object.keys(linesConfiguration)[0];\n            return y(linesConfiguration[firstLineName].zExtractor(d));\n          });\n      }\n\n      // Select the svg element, if it exists.\n      svg = d3.select(this).selectAll('svg').data([data]);\n      // Otherwise, create the skeletal chart.\n      const svgEnter = svg.enter().append('svg');\n      // Then select it again to get the complete object.\n      svg = d3.select(this).selectAll('svg').data([data]);\n\n      if (styleDefs !== undefined) {\n        svgEnter.append('defs').append('style')\n          .attr('type', 'text/css')\n          .text(styleDefs);\n      }\n      const gEnter = svgEnter.append('g');\n\n      clearPois();\n\n      gEnter.style('font', '11px Arial');\n\n      if (numberOfLines === 1) {\n        gEnter.append('path').attr('class', 'area')\n          .style('fill', 'rgba(222, 222, 222, 0.5)');\n      }\n\n      gEnter.insert('g', ':first-child')\n        .attr('class', 'grid-y');\n\n      if (!light) {\n        gEnter.append('g')\n          .attr('class', 'x axis')\n          .attr('transform', `translate(0,${height})`);\n\n        gEnter.append('text')\n          .attr('class', 'x label')\n          .attr('text-anchor', 'end')\n          .attr('x', width - 4)\n          .attr('y', height - 4);\n\n        gEnter.append('g')\n          .attr('class', 'y axis');\n\n        gEnter.append('text')\n          .attr('class', 'y label')\n          .attr('text-anchor', 'end')\n          .attr('y', 6)\n          .attr('dy', '.75em')\n          .attr('transform', 'rotate(-90)')\n          .style('fill', 'grey')\n          .text(`${yAxisLabel} [m]`);\n\n        gEnter.append('g')\n          .attr('class', 'metas')\n          .attr('transform', `translate(${width + 3}, 0)`);\n      }\n\n      gEnter.append('g').attr('class', 'pois');\n\n      const xHover = gEnter.append('g').attr('class', 'x grid-hover');\n      xHover.append('svg:line').attr('stroke-dasharray', '5,5');\n      xHover.append('text');\n\n      gEnter.append('rect')\n        .attr('class', 'overlay')\n        .attr('width', width)\n        .attr('height', height)\n        .style('fill', 'none')\n        .style('pointer-events', 'all');\n\n      // Update the outer dimensions.\n      svg.attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom);\n\n      // Update the inner dimensions.\n      g = svg.select('g')\n        .attr('transform', `translate(${margin.left},${\n          margin.top})`);\n\n      xDomain = d3.extent(data, d => distanceExtractor(d));\n      x.domain(xDomain);\n\n      // Return an array with the min and max value of the min/max values of\n      // each lines.\n      const yDomain = function() {\n        let elevationsValues = [];\n        let extent, name;\n        // Get min/max values (extent) of each lines.\n        for (name in linesConfiguration) {\n          extent = d3.extent(data, d => linesConfiguration[name].zExtractor(d));\n          elevationsValues = elevationsValues.concat(extent);\n        }\n        return [\n          Math.min.apply(null, elevationsValues),\n          Math.max.apply(null, elevationsValues)\n        ];\n      }();\n\n      y.domain(yDomain);\n\n      // set the ratio according to the horizontal distance\n      if (scaleModifier !== undefined) {\n        scaleModifier(x, y, width, height);\n      } else {\n        // By default, add a small padding so that it looks nicer\n        const padding = (yDomain[1] - yDomain[0]) * 0.1;\n        y.domain([yDomain[0] - padding, yDomain[1] + padding]);\n      }\n\n      // Update the area path.\n      if (numberOfLines === 1) {\n        g.select('.area')\n          .transition()\n          .attr('d', area);\n      }\n\n      // Set style and update the lines paths and y hover guides for each lines.\n      let line, name, yHover;\n      for (name in linesConfiguration) {\n        // Set style of each line and add a class with its respective name.\n        gEnter.append('path').attr('class', `line ${name}`)\n          .style('stroke', linesConfiguration[name].color || '#F00')\n          .style('fill', 'none');\n\n        // Set y hover guides\n        yHover = gEnter.append('g').attr('class', `y grid-hover ${name}`);\n        yHover.append('svg:line').attr('stroke-dasharray', '5,5');\n        yHover.append('text');\n\n        // Configure the d3 line.\n        line = d3.line()\n          .x(d => x(distanceExtractor(d)))\n          .y(d => y(linesConfiguration[name].zExtractor(d)));\n\n        // Update path for the line.\n        g.select(`.line.${name}`)\n          .transition()\n          .attr('d', line);\n      }\n\n      if (xDomain[1] > 2000) {\n        xFactor = 1000;\n        xUnits = 'km';\n      } else {\n        xFactor = 1;\n        xUnits = 'm';\n      }\n\n      if (!light) {\n        xAxis.tickFormat(d => formatter.xtick(d / xFactor, xUnits));\n        if (lightXAxis) {\n          xAxis.tickValues([0, x.domain()[1]]);\n        }\n\n        yAxis.tickFormat(d => formatter.ytick(d, 'm'));\n\n        g.select('.x.axis')\n          .transition()\n          .call(xAxis);\n\n        g.select('.x.label')\n          .text(`${xAxisLabel} [${xUnits}]`)\n          .style('fill', 'grey')\n          .style('shape-rendering', 'crispEdges');\n\n        // Avoid too much lines with overlapping labels in small profiles\n        if (height / 15 < 10) {\n          yAxis.ticks(height / 15);\n        }\n\n        g.select('.y.axis')\n          .transition()\n          .call(yAxis);\n      }\n\n      g.select('.grid-y')\n        .transition()\n        .call(yAxis.tickSize(-width, 0).tickFormat(''))\n        .selectAll('.tick line')\n        .style('stroke', '#ccc')\n        .style('opacity', 0.7);\n\n      g.selectAll('.axis').selectAll('path, line')\n        .style('fill', 'none')\n        .style('stroke', '#000')\n        .style('shape-rendering', 'crispEdges');\n\n      g.select('.grid-y').select('path')\n        .style('stroke', 'none');\n\n      g.selectAll('.grid-hover line')\n        .style('stroke', '#222')\n        .style('opacity', 0.8);\n\n      g.select('.overlay')\n        .on('mouseout', mouseout)\n        .on('mousemove', mousemove);\n\n      function mousemove() {\n        const mouseX = d3.mouse(this)[0];\n        const x0 = x.invert(mouseX);\n\n        profile.highlight(x0);\n      }\n\n      function mouseout() {\n        profile.clearHighlight();\n      }\n    });\n  };\n\n  /**\n   * Remove any highlight.\n   * Fire the outCallback callback.\n   */\n  profile.clearHighlight = function() {\n    g.selectAll('.grid-hover')\n      .style('display', 'none');\n    outCallback.call(null);\n  };\n\n  /**\n   * Highlight the given distance and corresponding elevation on chart.\n   * Fire the hoverCallback callback with corresponding point.\n   * @param {number} distance Distance.\n   */\n  profile.highlight = function(distance) {\n    const data = svg.datum();\n    const i = bisectDistance(data, distance);\n    if (i >= data.length) {\n      return;\n    }\n\n    const point = data[i];\n    const dist = distanceExtractor(point);\n    let elevation;\n    const elevations = [];\n    const elevationsRef = {};\n    let lineName;\n\n    for (lineName in linesConfiguration) {\n      elevation = linesConfiguration[lineName].zExtractor(point);\n      elevations.push(elevation);\n      elevationsRef[lineName] = elevation;\n      g.select(`.y.grid-hover.${lineName}`)\n        .style('display', 'inline')\n        .select('line')\n        .attr('x1', x(0))\n        .attr('y1', y(elevation))\n        .attr('x2', width)\n        .attr('y2', y(elevation));\n    }\n\n    g.select('.x.grid-hover')\n      .style('display', 'inline')\n      .select('line')\n      .attr('x1', x(dist))\n      .attr('y1', height)\n      .attr('x2', x(dist))\n      .attr('y2', y(Math.max.apply(null, elevations)));\n\n    const right = dist > xDomain[1] / 2;\n    let xtranslate = x(dist);\n    xtranslate += right ? -10 : 10;\n\n    g.select('.x.grid-hover text')\n      .text(formatter.xhover(dist / xFactor, xUnits))\n      .style('text-anchor', right ? 'end' : 'start')\n      .attr('transform', `translate(${xtranslate},${\n        height - 10})`);\n\n    const yUnits = 'm';\n    // Display altitude on guides only if there is one line.\n    if (numberOfLines === 1) {\n      g.select('.y.grid-hover text')\n        .text(formatter.yhover(elevations[0], 'm'))\n        .style('text-anchor', right ? 'end' : 'start')\n        .attr('transform', `translate(${xtranslate},${\n          y(elevations[0]) - 10})`);\n    }\n    hoverCallback.call(null, point, dist / xFactor, xUnits, elevationsRef,\n      yUnits);\n  };\n\n\n  profile.showPois = function(pois) {\n    pois = pois !== undefined ? pois : [];\n    googAsserts.assert(pois.length === 0 || poiExtractor !== undefined);\n\n    const pe = poiExtractor;\n    const g = svg.select('g');\n    const profileData = svg.datum();\n    const ps = g.select('.pois');\n\n    const p = ps.selectAll('.poi').data(pois, (d) => {\n      const i = bisectDistance(profileData, Math.round(pe.dist(d) * 10) / 10, 1);\n      const point = profileData[i];\n      if (point) {\n        let lineName;\n        const elevations = [];\n        for (lineName in linesConfiguration) {\n          elevations.push(linesConfiguration[lineName].zExtractor(point));\n        }\n        const z = Math.max.apply(null, elevations);\n        pe.z(d, z);\n      }\n      return pe.id(d);\n    });\n\n    const poiEnterG = p.enter()\n      .append('g')\n      .attr('class', 'poi');\n\n    poiEnterG.append('text')\n      .attr('x', light ? 0 : 9)\n      .attr('dy', '.35em')\n      .attr('text-anchor', light ? 'middle' : 'start');\n\n    poiEnterG.append('line')\n      .style('shape-rendering', 'crispEdges');\n\n    poiEnterG.style('opacity', 0)\n      .transition()\n      .duration(1000)\n      .delay(100)\n      .style('opacity', 1);\n\n    poiEnterG.selectAll('text')\n      .attr('transform', (d) => {\n        if (light) {\n          return ['translate(',\n            x(pe.dist(d)), ',',\n            y(pe.z(d)) - 10, ')'\n          ].join('');\n        } else {\n          return ['translate(',\n            x(pe.dist(d)), ',',\n            y(pe.z(d)) - 20, ') rotate(', poiLabelAngle, ')'\n          ].join('');\n        }\n      })\n      .text(d => pe.sort(d) + (light ? '' : (` - ${pe.title(d)}`)));\n\n    poiEnterG.selectAll('line')\n      .style('stroke', 'grey')\n      .attr('x1', d => x(pe.dist(d)))\n      .attr('y1', d => y(y.domain()[0]))\n      .attr('x2', d => x(pe.dist(d)))\n      .attr('y2', d => y(pe.z(d)));\n\n    // remove unused pois\n    poiEnterG.exit().remove();\n  };\n\n  function clearPois() {\n    profile.showPois([]);\n  }\n\n\n  return profile;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.profile.elevationComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoProfileD3Elevation from 'ngeo/profile/d3Elevation.js';\n\nimport {select} from 'd3-selection';\nconst d3 = {\n  select,\n};\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoProfile', [\n  ngeoMiscDebounce.name\n]);\n\n\n/**\n * Provides a directive used to insert an elevation profile chart\n * in the DOM.\n *\n * Example:\n *\n *      <div ngeo-profile=\"ctrl.profileData\"\n *        ngeo-profile-options=\"ctrl.profileOptions\"\n *        ngeo-profile-pois=\"ctrl.profilePois\">\n *      </div>\n *\n * Where \"ctrl.profileOptions\" is of type {@link ngeox.profile.ProfileOptions};\n * \"ctrl.profileData\" and \"ctrl.profilePois\" are arrays which will be\n * processed by {@link ngeox.profile.ElevationExtractor} and\n * {@link ngeox.profile.PoiExtractor}.\n *\n * See our live example: [../examples/profile.html](../examples/profile.html)\n *\n * @htmlAttribute {?Object} ngeo-profile The profile data.\n * @htmlAttribute {ngeox.profile.ProfileOptions} ngeo-profile-options The options.\n * @htmlAttribute {?Array} ngeo-profile-pois The data for POIs.\n * @htmlAttribute {*} ngeo-profile-highlight Any property on the scope which\n * evaluated value may correspond to distance from origin.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoProfile\n */\nexports.directive_ = function(ngeoDebounce) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const optionsAttr = attrs['ngeoProfileOptions'];\n      googAsserts.assert(optionsAttr !== undefined);\n\n      const selection = d3.select(element[0]);\n      let profile, elevationData, poiData;\n\n      scope.$watchCollection(optionsAttr, (newVal) => {\n\n        const options = /** @type {ngeox.profile.ProfileOptions} */\n                (olObj.assign({}, newVal));\n\n        if (options !== undefined) {\n\n          // proxy the hoverCallback and outCallbackin order to be able to\n          // call $applyAsync\n          //\n          // We're using $applyAsync here because the callback may be\n          // called inside the Angular context. For example, it's the case\n          // when the user hover's the line geometry on the map and the\n          // profileHighlight property is changed.\n          //\n          // For that reason we use $applyAsync instead of $apply here.\n          if (options.hoverCallback !== undefined) {\n            const origHoverCallback = options.hoverCallback;\n            options.hoverCallback = function(...args) {\n              origHoverCallback(...args);\n              scope.$applyAsync();\n            };\n          }\n\n          if (options.outCallback !== undefined) {\n            const origOutCallback = options.outCallback;\n            options.outCallback = function() {\n              origOutCallback();\n              scope.$applyAsync();\n            };\n          }\n\n          profile = ngeoProfileD3Elevation(options);\n          refreshData();\n        }\n      });\n\n      scope.$watch(attrs['ngeoProfile'], (newVal, oldVal) => {\n        elevationData = newVal;\n        refreshData();\n      });\n\n      scope.$watch(attrs['ngeoProfilePois'], (newVal, oldVal) => {\n        poiData = newVal;\n        refreshData();\n      });\n\n      scope.$watch(attrs['ngeoProfileHighlight'],\n        (newVal, oldVal) => {\n          if (newVal === undefined) {\n            return;\n          }\n          if (newVal > 0) {\n            profile.highlight(newVal);\n          } else {\n            profile.clearHighlight();\n          }\n        });\n\n      olEvents.listen(window, 'resize', ngeoDebounce(refreshData, 50, true));\n\n      function refreshData() {\n        if (profile !== undefined) {\n          selection.datum(elevationData).call(profile);\n          if (elevationData !== undefined) {\n            profile.showPois(poiData);\n          }\n        }\n      }\n    }\n  };\n};\n\nexports.directive('ngeoProfile', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.profile.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olOverlay from 'ol/Overlay.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olObj from 'ol/obj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadCsv from 'ngeo/download/Csv.js';\n\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProfileElevationComponent from 'ngeo/profile/elevationComponent.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfProfile', [\n  ngeoDownloadCsv.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoProfileElevationComponent.name,\n]);\n\n\nexports.value('gmfProfileTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfProfileTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/profile';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/profile', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfProfileTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfProfileTemplateUrl($element, $attrs, gmfProfileTemplateUrl) {\n  return gmfProfileTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component that display a profile panel. This profile use the given\n * LineString geometry to request the c2cgeoportal profile.json service. The\n * raster used in the request are the keys of the 'linesconfiguration' object.\n * The 'map' attribute is optional and are only used to display on the map the\n * information that concern the hovered point (in the profile and on the map)\n * of the line.\n * This profile relies on the ngeo.profile (d3) and ngeo.ProfileComponent.\n *\n * Example:\n *\n *      <gmf-profile\n *        gmf-profile-active=\"ctrl.profileActive\"\n *        gmf-profile-line=\"ctrl.profileLine\"\n *        gmf-profile-map=\"::ctrl.map\"\n *        gmf-profile-linesconfiguration=\"::ctrl.profileLinesconfiguration\">\n *      </gmf-profile>\n *\n *\n * @htmlAttribute {boolean} gmf-profile-active Active the component.\n * @htmlAttribute {ol.geom.LineString} gmf-profile-line The linestring geometry\n *     to use to draw the profile.\n * @htmlAttribute {ol.Map?} gmf-profile-map An optional map.\n * @htmlAttribute {Object.<string, gmfx.ProfileLineConfiguration>}\n *     gmf-profile-linesconfiguration The configuration of the lines. Each keys\n *     will be used to request elevation layers.\n * @htmlAttribute {ol.style.Style?} gmf-profile-hoverpointstyle Optional style\n *     for the 'on Hover' point on the line.\n * @htmlAttribute {number?} gmf-profile-numberofpoints Optional maximum limit of\n *     points to request. Default to 100.\n * @htmlAttribute {Object.<string, *>?} gmf-profile-options Optional options\n *     object like {@link ngeox.profile.ProfileOptions} but without any\n *     mandatory value. Will be passed to the ngeo profile component. Providing\n *     'linesConfiguration', 'distanceExtractor', hoverCallback, outCallback\n *     or i18n will override native gmf profile values.\n *\n * @ngdoc component\n * @ngname gmfProfile\n */\nexports.component_ = {\n  controller: 'GmfProfileController as ctrl',\n  bindings: {\n    'active': '=gmfProfileActive',\n    'line': '=gmfProfileLine',\n    'getMapFn': '&?gmfProfileMap',\n    'getLinesConfigurationFn': '&gmfProfileLinesconfiguration',\n    'getHoverPointStyleFn': '&?gmfProfileHoverpointstyle',\n    'getNbPointsFn': '&?gmfProfileNumberofpoints',\n    'getOptionsFn': '&?gmfProfileOptions'\n  },\n  templateUrl: gmfProfileTemplateUrl\n};\n\nexports.component('gmfProfile', exports.component_);\n\n\n/**\n * @param {angular.Scope} $scope Angular scope.\n * @param {angular.$http} $http Angular http service.\n * @param {angular.JQLite} $element Element.\n * @param {angular.$filter} $filter Angular filter\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Feature overlay\n *     manager.\n * @param {string} gmfProfileJsonUrl URL of GMF service JSON profile.\n * @param {ngeo.download.Csv} ngeoCsvDownload CSV Download service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfProfileController\n */\nexports.Controller_ = function($scope, $http, $element, $filter,\n  gettextCatalog, ngeoFeatureOverlayMgr, gmfProfileJsonUrl,\n  ngeoCsvDownload) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {angular.$filter}\n   * @export\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.pointHoverOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.gmfProfileJsonUrl_ = gmfProfileJsonUrl;\n\n  /**\n   * @type {ngeo.download.Csv}\n   * @private\n   */\n  this.ngeoCsvDownload_ = ngeoCsvDownload;\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?Object<string, !gmfx.ProfileLineConfiguration>}\n   * @private\n   */\n  this.linesConfiguration_ = null;\n\n  /**\n   * @type {!Array.<string>}\n   * @private\n   */\n  this.layersNames_ = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.nbPoints_ = 100;\n\n  /**\n   * @type {ol.geom.LineString}\n   * @export\n   */\n  this.line;\n\n  /**\n   * @type {Array.<Object>}\n   * @export\n   */\n  this.profileData = [];\n\n  /**\n   * @type {gmfx.ProfileHoverPointInformations}\n   * @export\n   */\n  this.currentPoint = {\n    coordinate: undefined,\n    distance: undefined,\n    elevations: {},\n    xUnits: undefined,\n    yUnits: undefined\n  };\n\n  /**\n   * Distance to highlight on the profile. (Property used in ngeo.Profile.)\n   * @type {number}\n   * @export\n   */\n  this.profileHighlight = -1;\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltip_ = null;\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n  /**\n   * @type {ol.Feature}\n   * @private\n   */\n  this.snappedPoint_ = new olFeature();\n  this.pointHoverOverlay_.addFeature(this.snappedPoint_);\n\n  /**\n   * @type {ngeox.profile.I18n}\n   * @private\n   */\n  this.profileLabels_ = {\n    xAxis: gettextCatalog.getString('Distance'),\n    yAxis: gettextCatalog.getString('Elevation')\n  };\n\n\n  /**\n   * @type {?ngeox.profile.ProfileOptions}\n   * @export\n   */\n  this.profileOptions = null;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = false;\n\n  /**\n   * @type {ol.EventsKey}\n   * @private\n   */\n  this.pointerMoveKey_;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isErrored = false;\n\n\n  // Watch the active value to activate/deactive events listening.\n  $scope.$watch(\n    () => this.active,\n    (newValue, oldValue) => {\n      if (oldValue !== newValue) {\n        this.updateEventsListening_();\n      }\n    });\n\n  // Watch the line to update the profileData (data for the chart).\n  $scope.$watch(\n    () => this.line,\n    (newLine, oldLine) => {\n      if (oldLine !== newLine) {\n        this.update_();\n      }\n    });\n\n  this.updateEventsListening_();\n};\n\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.map_ = this['getMapFn'] ? this['getMapFn']() : null;\n  this.nbPoints_ = this['getNbPointsFn'] ? this['getNbPointsFn']() : 100;\n\n  let hoverPointStyle;\n  const hoverPointStyleFn = this['getHoverPointStyleFn'];\n  if (hoverPointStyleFn) {\n    hoverPointStyle = hoverPointStyleFn();\n    googAsserts.assertInstanceof(hoverPointStyle, olStyleStyle);\n  } else {\n    hoverPointStyle = new olStyleStyle({\n      image: new olStyleCircle({\n        fill: new olStyleFill({color: '#ffffff'}),\n        radius: 3\n      })\n    });\n  }\n  this.pointHoverOverlay_.setStyle(hoverPointStyle);\n\n  const linesConfiguration = this['getLinesConfigurationFn']();\n  googAsserts.assertInstanceof(linesConfiguration, Object);\n\n  this.linesConfiguration_ = linesConfiguration;\n\n  for (const name in this.linesConfiguration_) {\n    // Keep an array of all layer names.\n    this.layersNames_.push(name);\n    // Add generic zExtractor to lineConfiguration object that doesn't have one.\n    const lineConfig = this.linesConfiguration_[name];\n    if (!lineConfig.zExtractor) {\n      this.linesConfiguration_[name].zExtractor = this.getZFactory_(name);\n    }\n  }\n\n  this.profileOptions = /** @type {ngeox.profile.ProfileOptions} */ ({\n    linesConfiguration: this.linesConfiguration_,\n    distanceExtractor: this.getDist_,\n    hoverCallback: this.hoverCallback_.bind(this),\n    outCallback: this.outCallback_.bind(this),\n    i18n: this.profileLabels_\n  });\n\n  const optionsFn = this['getOptionsFn'];\n  if (optionsFn) {\n    const options = optionsFn();\n    googAsserts.assertObject(options);\n    olObj.assign(this.profileOptions, options);\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.update_ = function() {\n  this.isErrored = false;\n  if (this.line) {\n    this.getJsonProfile_();\n  } else {\n    this.profileData = [];\n  }\n  this.active = !!this.line;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateEventsListening_ = function() {\n  if (this.active && this.map_ !== null) {\n    this.pointerMoveKey_ = olEvents.listen(this.map_, 'pointermove',\n      this.onPointerMove_.bind(this));\n  } else {\n    olEvents.unlistenByKey(this.pointerMoveKey_);\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n * @private\n */\nexports.Controller_.prototype.onPointerMove_ = function(e) {\n  if (e.dragging || !this.line) {\n    return;\n  }\n  const coordinate = this.map_.getEventCoordinate(e.originalEvent);\n  const closestPoint = this.line.getClosestPoint(coordinate);\n  // compute distance to line in pixels\n  const eventToLine = new olGeomLineString([closestPoint, coordinate]);\n  const pixelDist = eventToLine.getLength() / this.map_.getView().getResolution();\n\n  if (pixelDist < 16) {\n    this.profileHighlight = this.getDistanceOnALine_(closestPoint, this.line);\n  } else {\n    this.profileHighlight = -1;\n  }\n  this.$scope_.$apply();\n};\n\n\n/**\n * Return the distance between the beginning of the line and the given point.\n * The point must be on the line. If not, this function will return the total\n * length of the line.\n * @param {ol.Coordinate} pointOnLine A point on the given line.\n * @param {ol.geom.LineString} line A line.\n * @return {number} A distance.\n * @private\n */\nexports.Controller_.prototype.getDistanceOnALine_ = function(pointOnLine,\n  line) {\n  let segment;\n  let distOnLine = 0;\n  const fakeExtent = [\n    pointOnLine[0] - 0.5,\n    pointOnLine[1] - 0.5,\n    pointOnLine[0] + 0.5,\n    pointOnLine[1] + 0.5\n  ];\n  this.line.forEachSegment((firstPoint, lastPoint) => {\n    segment = new olGeomLineString([firstPoint, lastPoint]);\n    // Is the pointOnLine on this swegement ?\n    if (segment.intersectsExtent(fakeExtent)) {\n      // If the closestPoint is on the line, add the distance between the first\n      // point of this segment and the pointOnLine.\n      segment.setCoordinates([firstPoint, pointOnLine]);\n      return distOnLine += segment.getLength(); // Assign value and break;\n    } else {\n      // Do the sum of the length of each eventual previous segment.\n      distOnLine += segment.getLength();\n    }\n  });\n  return distOnLine;\n};\n\n\n/**\n * @param {Object} point Point.\n * @param {number} dist distance on the line.\n * @param {string} xUnits X units label.\n * @param {Object.<string, number>} elevationsRef Elevations references.\n *  @param {string} yUnits Y units label.\n * @private\n */\nexports.Controller_.prototype.hoverCallback_ = function(point, dist, xUnits,\n  elevationsRef, yUnits) {\n  // Update information point.\n  let ref;\n  const coordinate = [point.x, point.y];\n  for (ref in elevationsRef) {\n    this.currentPoint.elevations[ref] = elevationsRef[ref];\n  }\n  this.currentPoint.distance = dist;\n  this.currentPoint.xUnits = xUnits;\n  this.currentPoint.yUnits = yUnits;\n  this.currentPoint.coordinate = coordinate;\n\n  // Update hover.\n  const geom = new olGeomPoint(coordinate);\n  this.createMeasureTooltip_();\n  this.measureTooltipElement_.innerHTML = this.getTooltipHTML_();\n  this.measureTooltip_.setPosition(coordinate);\n  this.snappedPoint_.setGeometry(geom);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.outCallback_ = function() {\n  // Reset information point.\n  this.currentPoint.coordinate = undefined;\n  this.currentPoint.distance = undefined;\n  this.currentPoint.elevations = {};\n  this.currentPoint.xUnits = undefined;\n  this.currentPoint.yUnits = undefined;\n\n  // Reset hover.\n  this.removeMeasureTooltip_();\n  this.snappedPoint_.setGeometry(null);\n};\n\n\n/**\n * @return {string} A texte formatted to a tooltip.\n * @private\n */\nexports.Controller_.prototype.getTooltipHTML_ = function() {\n  const separator = ' : ';\n  let elevationName, translatedElevationName;\n  const innerHTML = [];\n  const number = this.$filter_('number');\n  const DistDecimal = this.currentPoint.xUnits === 'm' ? 0 : 2;\n  innerHTML.push(\n    `${this.profileLabels_.xAxis +\n      separator +\n      number(this.currentPoint.distance, DistDecimal)\n    } ${\n      this.currentPoint.xUnits}`\n  );\n  for (elevationName in this.currentPoint.elevations) {\n    translatedElevationName = this.gettextCatalog_.getString(elevationName);\n    innerHTML.push(\n      `${translatedElevationName +\n        separator +\n        number(this.currentPoint.elevations[elevationName], 0)\n      } ${this.currentPoint.yUnits}`\n    );\n  }\n  return innerHTML.join('</br>');\n};\n\n\n/**\n * Creates a new 'hover' tooltip\n * @private\n */\nexports.Controller_.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.className += 'tooltip ngeo-tooltip-measure';\n  this.measureTooltip_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center'\n  });\n  this.map_.addOverlay(this.measureTooltip_);\n};\n\n\n/**\n * Destroy the 'hover' tooltip\n * @private\n */\nexports.Controller_.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(\n      this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.map_.removeOverlay(this.measureTooltip_);\n  }\n};\n\n\n/**\n * Return the color value of a gmfx.ProfileLineConfiguration.\n * @param {string} layerName name of the elevation layer.\n * @return {string|undefined} A HEX color or undefined is nothing is found.\n * @export\n */\nexports.Controller_.prototype.getColor = function(layerName) {\n  const lineConfiguration = this.linesConfiguration_[layerName];\n  if (!lineConfiguration) {\n    return undefined;\n  }\n  return lineConfiguration.color;\n};\n\n\n/**\n * Return a copy of the existing layer names.\n * @return {Array.<string>} The names of layers.\n * @export\n */\nexports.Controller_.prototype.getLayersNames = function() {\n  return this.layersNames_.slice(0);\n};\n\n\n/**\n * @param {string} layerName name of the elevation layer.\n * @return {function(Object):number} Z extractor function.\n * @private\n */\nexports.Controller_.prototype.getZFactory_ = function(layerName) {\n  /**\n   * Generic GMF extractor for the 'given' value in 'values' in profileData.\n   * @param {Object} item The item.\n   * @return {number} The elevation.\n   * @private\n   */\n  const getZFn = function(item) {\n    if ('values' in item && layerName in item['values']) {\n      return parseFloat(item['values'][layerName]);\n    }\n    return 0;\n  };\n  return getZFn;\n};\n\n\n/**\n * Extractor for the 'dist' value in profileData.\n * @param {Object} item The item.\n * @return {number} The distance.\n * @private\n */\nexports.Controller_.prototype.getDist_ = function(item) {\n  if ('dist' in item) {\n    return item['dist'];\n  }\n  return 0;\n};\n\n\n/**\n * Request the profile.\n * @private\n */\nexports.Controller_.prototype.getJsonProfile_ = function() {\n  const geom = {\n    'type': 'LineString',\n    'coordinates': this.line.getCoordinates()\n  };\n\n  const params = {\n    'layers': this.layersNames_.join(','),\n    'geom': JSON.stringify(geom),\n    'nbPoints': this.nbPoints_\n  };\n\n  /** @type {Function} */ (this.$http_)({\n    url: this.gmfProfileJsonUrl_,\n    method: 'POST',\n    params: params,\n    paramSerializer: '$httpParamSerializerJQLike',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n  }).then(\n    this.getProfileDataSuccess_.bind(this),\n    this.getProfileDataError_.bind(this)\n  );\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\nexports.Controller_.prototype.getProfileDataSuccess_ = function(resp) {\n  const profileData = resp.data['profile'];\n  if (profileData instanceof Array) {\n    this.profileData = profileData;\n  }\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\nexports.Controller_.prototype.getProfileDataError_ = function(resp) {\n  this.isErrored = true;\n  console.error('Can not get JSON profile.');\n};\n\n\n/**\n * Request the csv profile with the current profile data.\n * @export\n */\nexports.Controller_.prototype.downloadCsv = function() {\n  if (this.profileData.length === 0) {\n    return;\n  }\n\n  /** @type {Array.<ngeox.GridColumnDef>} */\n  const headers = [];\n  let hasDistance = false;\n  const firstPoint = this.profileData[0];\n  if ('dist' in firstPoint) {\n    headers.push({name: 'distance'});\n    hasDistance = true;\n  }\n  const layers = [];\n  for (const layer in firstPoint['values']) {\n    headers.push({'name': layer});\n    layers.push(layer);\n  }\n  headers.push({name: 'x'});\n  headers.push({name: 'y'});\n\n  const rows = this.profileData.map((point) => {\n    const row = {};\n    if (hasDistance) {\n      row['distance'] = point['dist'];\n    }\n\n    layers.forEach((layer) => {\n      row[layer] = point['values'][layer];\n    });\n\n    row['x'] = point['x'];\n    row['y'] = point['y'];\n\n    return row;\n  });\n\n  this.ngeoCsvDownload_.startDownload(rows, headers, 'profile.csv');\n};\n\n\nexports.controller('GmfProfileController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.profile.drawLineComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport olCollection from 'ol/Collection.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olMap from 'ol/Map.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawProfileLine', [\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\n\n/**\n * Simple directive that can be put on any element. The directive listen on\n * clicks events to allow/disallow to draw one line (and only one) on the\n * map. Typically used to draw the line that will serve the gmf.Profile.\n *\n * Example:\n *\n *      <gmf-drawprofileline\n *        gmf-drawprofileline-active=\"mainCtrl.drawProfileActive\"\n *        gmf-drawprofileline-map=\"mainCtrl.map\"\n *        gmf-drawprofileline-line=\"mainCtrl.line\"\n *      </gmf-drawprofileline>\n *\n *\n * @htmlAttribute {ol.Map} gmf-drawprofileline-map The map.\n * @htmlAttribute {ol.geom.LineString} gmf-drawprofileline-line The variable to\n *     connect with the drawed line.\n * @htmlAttribute {boolean=} gmf-drawprofileline-active Active the component.\n * @htmlAttribute {ol.style.Style=} gmf-drawprofileline-style Optional style\n *     for the drawed line.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname gmfDrawprofileline\n */\nexports.directive_ = function() {\n  return {\n    scope: true,\n    controller: 'GmfDrawprofilelineController as ctrl',\n    restrict: 'A',\n    bindToController: {\n      'getMapFn': '&gmfDrawprofilelineMap',\n      'line': '=gmfDrawprofilelineLine',\n      'active': '=gmfDrawprofilelineActive',\n      'getStyleFn': '&?gmfDrawprofilelineStyle'\n    }\n  };\n};\n\n\nexports.directive('gmfDrawprofileline',\n  exports.directive_);\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Feature overlay\n *     manager.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfDrawprofilelineController\n */\nexports.Controller_ = function($scope, $element, $timeout,\n  ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {?ol.geom.LineString}\n   * @export\n   */\n  this.line;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  const overlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n  overlay.setFeatures(this.features_);\n\n  let style;\n  const styleFn = this['getStyleFn'];\n  if (styleFn) {\n    style = styleFn();\n    googAsserts.assertInstanceof(style, olStyleStyle);\n  } else {\n    style = new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 2\n      })\n    });\n  }\n  overlay.setStyle(style);\n\n  /**\n   * @type {!ol.interaction.Draw}\n   * @export\n   */\n  this.interaction = new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    features: this.features_\n  });\n\n  ngeoMiscDecorate.interaction(this.interaction);\n\n  // Clear the line as soon as the interaction is activated.\n  this.interaction.on('change:active', () => {\n    if (this.interaction.getActive()) {\n      this.clear_();\n    }\n  });\n\n  // Update the profile with the new geometry.\n  this.interaction.on('drawend', (event) => {\n    this.line = event.feature.getGeometry();\n    // using timeout to prevent double click to zoom the map\n    $timeout(() => {\n      this.interaction.setActive(false);\n    }, 0);\n  });\n\n  // Line may be removed from an other component\n  // for example closing the chart panel\n  $scope.$watch(\n    () => this.line,\n    (newLine, oldLine) => {\n      if (newLine === null) {\n        this.clear_();\n      }\n    });\n\n  $scope.$watch(\n    () => this.active,\n    (newValue) => {\n      if (newValue === false) {\n        this.clear_();\n      }\n      // Will activate the interaction automatically the first time\n      this.interaction.setActive(this.active);\n    }\n  );\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const map = this['getMapFn']();\n  googAsserts.assertInstanceof(map, olMap);\n  this.map_ = map;\n  this.map_.addInteraction(this.interaction);\n};\n\n\n/**\n * Clear the overlay and profile line.\n * @private\n */\nexports.Controller_.prototype.clear_ = function() {\n  this.features_.clear();\n  this.line = null;\n};\n\n\nexports.controller('GmfDrawprofilelineController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.profile.module\n */\nimport gmfProfileComponent from 'gmf/profile/component.js';\nimport gmfProfileDrawLineComponent from 'gmf/profile/drawLineComponent.js';\n\nimport './profile.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfProfileModule', [\n  gmfProfileComponent.name,\n  gmfProfileDrawLineComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.query.bboxQueryComponent\n */\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olInteractionDragBox from 'ol/interaction/DragBox.js';\nimport * as olEventsCondition from 'ol/events/condition.js';\n\nconst exports = angular.module('ngeoBboxQuery', [\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\n/**\n * Provides a \"bbox query\" directive.\n *\n * This directive is responsible of binding a map and the ngeo query service\n * together. While active, drawing a bbox while CTRL or the 'meta' key is pressed\n * issues a request to the query service.\n *\n * This directive doesn't require to be rendered in a visible DOM element, but\n * it could be used with a ngeo-btn to manage the activation of the directive.\n * See below an example without any use of UI:\n *\n * Example:\n *\n *      <span\n *        ngeo-bbox-query=\"\"\n *        ngeo-bbox-query-map=\"::ctrl.map\"\n *        ngeo-bbox-query-limit=\"50\"\n *        ngeo-bbox-query-active=\"ctrl.queryActive\">\n *        ngeo-bbox-query-autoclear=\"ctrl.queryAutoClear\">\n *      </span>\n *\n * See the live example: [../examples/bboxquery.html](../examples/bboxquery.html)\n *\n * @param {ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBboxQuery\n */\nexports.directive_ = function(ngeoMapQuerent) {\n  return {\n    restrict: 'A',\n    scope: false,\n    link: (scope, elem, attrs) => {\n      /**\n       * @type {ol.Map}\n       */\n      const map = scope.$eval(attrs['ngeoBboxQueryMap']);\n\n      const interaction = new olInteractionDragBox({\n        condition: olEventsCondition.platformModifierKeyOnly\n      });\n\n      /**\n       * Called when a bbox is drawn while this controller is active. Issue\n       * a request to the query service using the extent that was drawn.\n       * @param {ol.interaction.DragBox.Event} evt Event.\n       */\n      const handleBoxEnd = function(evt) {\n        const extent = interaction.getGeometry().getExtent();\n        ngeoMapQuerent.issue({\n          limit: scope.$eval(attrs['ngeoBboxQueryLimit']),\n          extent: extent,\n          map: map\n        });\n      };\n      interaction.on('boxend', handleBoxEnd);\n\n      // watch 'active' property -> activate/deactivate accordingly\n      scope.$watch(attrs['ngeoBboxQueryActive'],\n        (newVal, oldVal) => {\n          if (newVal) {\n            // activate\n            map.addInteraction(interaction);\n          } else {\n            // deactivate\n            map.removeInteraction(interaction);\n            if (scope.$eval(attrs['ngeoBboxQueryAutoclear']) !== false) {\n              ngeoMapQuerent.clear();\n            }\n          }\n        }\n      );\n    }\n  };\n};\n\nexports.directive('ngeoBboxQuery', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.raster.component\n */\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport * as olEvents from 'ol/events.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfRasterComponent', [\n  gmfRasterRasterService.module.name,\n  ngeoMiscDebounce.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/raster/widgetComponent', require('./widgetComponent.html'));\n});\n\n\nexports.value('gmfElevationwidgetTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfElevationwidgetTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/raster/widgetComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfElevationwidgetTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfElevationwidgetTemplateUrl($attrs, gmfElevationwidgetTemplateUrl) {\n  return gmfElevationwidgetTemplateUrl($attrs);\n}\n\n\n/**\n * Provide a directive that set a value each 500ms with the elevation under the\n * mouse cursor position on the map. The value must come from the elevation\n * service of a c2cgeoportal server. The server's URL must be defined as\n * config value of the application.\n *\n * Example:\n *\n *      <span gmf-elevation\n *            gmf-elevation-active=\"elevationActive\"\n *            gmf-elevation-elevation=\"elevationValue\"\n *            gmf-elevation-layer=\"mainCtrl.elevationLayer\"\n *            gmf-elevation-map=\"::mainCtrl.map\">\n *            {{elevationValue | number:2}}m\n *      </span>\n *\n *\n * @htmlAttribute {boolean} gmf-elevation-active A boolean to set active or\n *     deactive the component.\n * @htmlAttribute {number} gmf-elevation-elevation The value to set with the\n *     elevation value.\n * @htmlAttribute {string} gmf-elevation-layer Elevation layer to use.\n * @htmlAttribute {ol.Map} gmf-elevation-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname gmfElevation\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    controller: 'GmfElevationController as ctrl',\n    bindToController: true,\n    scope: {\n      'active': '<gmfElevationActive',\n      'elevation': '=gmfElevationElevation',\n      'loading': '=?gmfElevationLoading',\n      'layer': '<gmfElevationLayer',\n      'map': '=gmfElevationMap'\n    },\n    link: (scope, element, attr) => {\n      const ctrl = scope['ctrl'];\n\n      // Watch active or not.\n      scope.$watch(() => ctrl.active, function(active) {\n        this.toggleActive_(active);\n      }.bind(ctrl));\n\n      // Watch current layer.\n      scope.$watch(() => ctrl.layer, function(layer) {\n        this.layer = layer;\n        this.elevation = null;\n      }.bind(ctrl));\n    }\n  };\n};\n\n\nexports.directive('gmfElevation', exports.component_);\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {ngeox.miscDebounce} ngeoDebounce Ngeo debounce factory\n * @param {gmf.raster.RasterService} gmfRaster Gmf Raster service\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfElevationController\n */\nexports.Controller_ = function($scope, ngeoDebounce, gmfRaster) {\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  /**\n   * @type {boolean}\n   */\n  this.active;\n\n  /**\n   * @type {!number|undefined}\n   * @export\n   */\n  this.elevation;\n\n  /**\n   * @type {string}\n   */\n  this.layer;\n\n  /**\n   * @type {ol.Map}\n   */\n  this.map;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.inViewport_ = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.loading = false;\n};\n\n/**\n * Active or deactive the request of the raster each 500 ms on pointermove.\n * @param {boolean} active true to make requests.\n * @private\n */\nexports.Controller_.prototype.toggleActive_ = function(active) {\n  this.elevation = undefined;\n  if (active) {\n    googAsserts.assert(this.listenerKeys_.length === 0);\n\n    // Moving the mouse clears previously displayed elevation\n    this.listenerKeys_.push(olEvents.listen(this.map, 'pointermove',\n      function(e) {\n        this.scope_.$apply(() => {\n          this.inViewport_ = true;\n          this.elevation = undefined;\n          this.loading = false;\n        });\n      }, this));\n\n    // Launch the elevation service request when the user stops moving the\n    // mouse for less short delay\n    this.listenerKeys_.push(olEvents.listen(this.map, 'pointermove',\n      this.ngeoDebounce_(this.pointerStop_.bind(this), 500, true)\n    ));\n\n    this.listenerKeys_.push(olEvents.listen(this.map.getViewport(), 'mouseout', () => {\n      this.scope_.$apply(() => {\n        this.elevation = undefined;\n        this.inViewport_ = false;\n        this.loading = false;\n      });\n    }));\n  } else {\n    this.elevation = undefined;\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n};\n\n\n/**\n * Request data from a raster from a MapBrowserPointerEvent's coordinates.\n * Called when the user stopped moving the mouse for 500ms.\n * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n * @private\n */\nexports.Controller_.prototype.pointerStop_ = function(e) {\n  if (this.inViewport_) {\n    this.loading = true;\n    const params = {\n      'layers': this.layer\n    };\n    this.gmfRaster_.getRaster(e.coordinate, params).then(\n      this.getRasterSuccess_.bind(this),\n      this.getRasterError_.bind(this)\n    );\n  }\n};\n\n\n/**\n * @param {Object.<string, number>} resp Response of the get Raster service.\n * @private\n */\nexports.Controller_.prototype.getRasterSuccess_ = function(resp) {\n  googAsserts.assert(this.layer, 'A layer should be selected');\n  this.elevation = resp[this.layer];\n  this.loading = false;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.getRasterError_ = function() {\n  console.error('Error on getting the raster.');\n  this.elevation = undefined;\n  this.loading = false;\n};\n\n\nexports.controller('GmfElevationController', exports.Controller_);\n\n\n/**\n * Provides a component which encapsulates the elevation component (see above)\n * in a button with dropdown menu to be included in a application directly.\n *\n * Example:\n *  <gmf-elevationwidget\n *      gmf-elevationwidget-map=\"::mainCtrl.map\"\n *      gmf-elevationwidget-layers=\"::mainCtrl.elevationLayers\"\n *      gmf-elevationwidget-active=\"mainCtrl.showInfobar\">\n *  </gmf-elevationwidget>\n *\n * @htmlAttribute {ol.Map} gmf-elevationwidget-map The map.\n * @htmlAttribute {Array.<string>} gmf-elevationwidget-layers The list of\n *     layers.\n * @htmlAttribute {boolean} gmf-elevationwidget-active Whether to activate the\n *     elevation component.\n *\n * @ngdoc component\n * @ngname gmfElevationwidget\n */\nexports.widgetComponent_ = {\n  controller: 'gmfElevationwidgetController as ctrl',\n  bindings: {\n    'map': '<gmfElevationwidgetMap',\n    'layers': '<gmfElevationwidgetLayers',\n    'active': '<gmfElevationwidgetActive'\n  },\n  templateUrl: gmfElevationwidgetTemplateUrl\n};\nexports.component('gmfElevationwidget', exports.widgetComponent_);\n\n\n/**\n * @constructor\n * @private\n * @ngdoc controller\n */\nexports.WidgetController_ = function() {\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!Array.<string>}\n   * @export\n   */\n  this.layers;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.selectedElevationLayer;\n};\n\n\nexports.WidgetController_.prototype.$onInit = function() {\n  this.selectedElevationLayer = this.layers[0];\n};\n\n\nexports.controller('gmfElevationwidgetController',\n  exports.WidgetController_);\n\n\nexport default exports;\n","/**\n * @module ngeo.print.Utils\n */\nimport * as olHas from 'ol/has.js';\nimport * as olMath from 'ol/math.js';\n\n/**\n * Provides a service with print utility functions.\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoPrintUtils\n */\nconst exports = function() {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.extentHalfHorizontalDistance_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.extentHalfVerticalDistance_;\n\n};\n\n\n/**\n * @const\n * @private\n */\nexports.INCHES_PER_METER_ = 39.37;\n\n\n/**\n * @const\n * @private\n */\nexports.DOTS_PER_INCH_ = 72;\n\n\n/**\n * Return a function to use as map postcompose listener for drawing a print\n * mask on the map.\n * @param {function():ol.Size} getSize User-defined function returning the\n *     size in dots of the map to print.\n * @param {function(olx.FrameState):number} getScale User-defined function\n *     returning the scale of the map to print.\n * @param {function():number=} opt_rotation User defined function returning the\n *     inclination of the canvas in degree (-180 to 180).\n * returning the scale of the map to print.\n * @return {function(ol.render.Event)} Function to use as a map postcompose\n * listener.\n * @export\n */\nexports.prototype.createPrintMaskPostcompose = function(getSize, getScale, opt_rotation) {\n  const self = this;\n\n  return (\n  /**\n        * @param {ol.render.Event} evt Postcompose event.\n        */\n    function(evt) {\n      const context = evt.context;\n      const frameState = evt.frameState;\n\n      const resolution = frameState.viewState.resolution;\n\n      const viewportWidth = frameState.size[0] * frameState.pixelRatio;\n      const viewportHeight = frameState.size[1] * frameState.pixelRatio;\n\n      const center = [viewportWidth / 2, viewportHeight / 2];\n\n      const size = getSize();\n      const height = size[1] * olHas.DEVICE_PIXEL_RATIO;\n      const width = size[0] * olHas.DEVICE_PIXEL_RATIO;\n      const scale = getScale(frameState);\n\n      const ppi = exports.DOTS_PER_INCH_;\n      const ipm = exports.INCHES_PER_METER_;\n\n      const extentHalfWidth =\n           (((width / ppi) / ipm) * scale / resolution) / 2;\n      self.extentHalfHorizontalDistance_ =\n           (((size[0] / ppi) / ipm) * scale) / 2;\n\n      const extentHalfHeight =\n           (((height / ppi) / ipm) * scale / resolution) / 2;\n      self.extentHalfVerticalDistance_ =\n           (((size[1] / ppi) / ipm) * scale) / 2;\n\n      // Draw a mask on the whole map.\n      context.beginPath();\n      context.moveTo(0, 0);\n      context.lineTo(viewportWidth, 0);\n      context.lineTo(viewportWidth, viewportHeight);\n      context.lineTo(0, viewportHeight);\n      context.lineTo(0, 0);\n      context.closePath();\n\n      // Draw the print zone\n      if (!opt_rotation) {\n        self.drawPrintZone_(context, center, extentHalfWidth,\n          extentHalfHeight);\n      } else {\n        const rotation = olMath.toRadians(opt_rotation());\n        self.drawPrintZoneWithRotation_(context, center, extentHalfWidth,\n          extentHalfHeight, rotation);\n      }\n\n      // Fill the mask\n      context.fillStyle = 'rgba(0, 5, 25, 0.5)';\n      context.fill();\n    }\n  );\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context of the Postcompose event.\n * @param {Array.<number>} center Center of the viewport (x; y).\n * @param {number} extentHalfWidth Extent half width.\n * @param {number} extentHalfHeight Extent half height.\n * @private\n */\nexports.prototype.drawPrintZone_ = function(context, center,\n  extentHalfWidth, extentHalfHeight) {\n  const minx = center[0] - extentHalfWidth;\n  const miny = center[1] - extentHalfHeight;\n  const maxx = center[0] + extentHalfWidth;\n  const maxy = center[1] + extentHalfHeight;\n\n  context.moveTo(minx, miny);\n  context.lineTo(minx, maxy);\n  context.lineTo(maxx, maxy);\n  context.lineTo(maxx, miny);\n  context.lineTo(minx, miny);\n  context.closePath();\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context of the Postcompose event.\n * @param {Array.<number>} center Center of the viewport (x; y).\n * @param {number} extentHalfWidth Extent half width.\n * @param {number} extentHalfHeight Extent half height.\n * @param {number} rotation Rotation value in radians.\n * @private\n */\nexports.prototype.drawPrintZoneWithRotation_ = function(context, center,\n  extentHalfWidth, extentHalfHeight, rotation) {\n  // diagonal = distance p1 to center.\n  const diagonal = Math.sqrt(Math.pow(extentHalfWidth, 2) +\n      Math.pow(extentHalfHeight, 2));\n  // gamma = angle between horizontal and diagonal (with rotation).\n  const gamma = Math.atan(extentHalfHeight / extentHalfWidth) - rotation;\n  // omega = angle between diagonal and vertical (with rotation).\n  const omega = Math.atan(extentHalfWidth / extentHalfHeight) - rotation;\n  // Calculation of each corner.\n  const x1 = center[0] - Math.cos(gamma) * diagonal;\n  const y1 = center[1] + Math.sin(gamma) * diagonal;\n  const x2 = center[0] + Math.sin(omega) * diagonal;\n  const y2 = center[1] + Math.cos(omega) * diagonal;\n  const x3 = center[0] + Math.cos(gamma) * diagonal;\n  const y3 = center[1] - Math.sin(gamma) * diagonal;\n  const x4 = center[0] - Math.sin(omega) * diagonal;\n  const y4 = center[1] - Math.cos(omega) * diagonal;\n\n  context.moveTo(x1, y1);\n  context.lineTo(x2, y2);\n  context.lineTo(x3, y3);\n  context.lineTo(x4, y4);\n  context.lineTo(x1, y1);\n  context.closePath();\n};\n\n\n/**\n * Get the optimal print scale for a map, the map being defined by its\n * size (in pixels) and resolution (in map units per pixel).\n * @param {ol.Size} mapSize Size of the map on the screen (px).\n * @param {number} mapResolution Resolution of the map on the screen.\n * @param {ol.Size} printMapSize Size of the map on the paper (dots).\n * @param {Array.<number>} printMapScales Supported map scales on the paper.\n * The scales are provided as scale denominators, sorted in ascending order.\n * E.g. `[500, 1000, 2000, 4000]`.\n * @return {number} The best scale. `-1` is returned if there is no optimal\n * scale, that is the optimal scale is lower than or equal to the first value\n * in `printMapScales`.\n * @export\n */\nexports.prototype.getOptimalScale = function(\n  mapSize, mapResolution, printMapSize, printMapScales) {\n\n  const mapWidth = mapSize[0] * mapResolution;\n  const mapHeight = mapSize[1] * mapResolution;\n\n  const scaleWidth = mapWidth * exports.INCHES_PER_METER_ *\n      exports.DOTS_PER_INCH_ / printMapSize[0];\n  const scaleHeight = mapHeight * exports.INCHES_PER_METER_ *\n      exports.DOTS_PER_INCH_ / printMapSize[1];\n\n  const scale = Math.min(scaleWidth, scaleHeight);\n\n  let optimal = -1;\n  for (let i = 0, ii = printMapScales.length; i < ii; ++i) {\n    if (scale > printMapScales[i]) {\n      optimal = printMapScales[i];\n    }\n  }\n\n  return optimal;\n};\n\n\n/**\n * Get the optimal map resolution for a print scale and a map size.\n * @param {ol.Size} mapSize Size of the map on the screen (px).\n * @param {ol.Size} printMapSize Size of the map on the paper (dots).\n * @param {number} printMapScale Map scale on the paper.\n * @return {number} The optimal map resolution.\n * @export\n */\nexports.prototype.getOptimalResolution = function(\n  mapSize, printMapSize, printMapScale) {\n\n  const dotsPerMeter =\n      exports.DOTS_PER_INCH_ * exports.INCHES_PER_METER_;\n\n  const resolutionX = (printMapSize[0] * printMapScale) /\n      (dotsPerMeter * mapSize[0]);\n  const resolutionY = (printMapSize[1] * printMapScale) /\n      (dotsPerMeter * mapSize[1]);\n\n  const optimalResolution = Math.max(resolutionX, resolutionY);\n\n  return optimalResolution;\n};\n\n\n/**\n * Get the coordinates of the bottom left corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the bottom left corner.\n */\nexports.prototype.getBottomLeftCorner = function(mapCenter) {\n  return [mapCenter[0] - this.extentHalfHorizontalDistance_,\n    mapCenter[1] - this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the bottom right corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.ç\n * @return {ol.Coordinate} The coordinates of the bottom right corner.\n */\nexports.prototype.getBottomRightCorner = function(mapCenter) {\n  return [mapCenter[0] + this.extentHalfHorizontalDistance_,\n    mapCenter[1] - this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the up left corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the up left corner.\n */\nexports.prototype.getUpLeftCorner = function(mapCenter) {\n  return [mapCenter[0] - this.extentHalfHorizontalDistance_,\n    mapCenter[1] + this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the up right corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the up right corner.\n */\nexports.prototype.getUpRightCorner = function(mapCenter) {\n  return [mapCenter[0] + this.extentHalfHorizontalDistance_,\n    mapCenter[1] + this.extentHalfVerticalDistance_];\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoPrintUtils', []);\nexports.module.service('ngeoPrintUtils', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.print.component\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoPrintService from 'ngeo/print/Service.js';\nimport ngeoPrintUtils from 'ngeo/print/Utils.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olMap from 'ol/Map.js';\nimport * as olMath from 'ol/math.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfPrintComponent', [\n  gmfAuthenticationService.module.name,\n  gmfThemeThemes.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoPrintService.module.name,\n  ngeoPrintUtils.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.value('gmfPrintTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['gmfPrintTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/print';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/print', require('./component.html'));\n});\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.PrintStateEnum = {\n\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT_IN_USE: 'notInUse',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  PRINTING: 'printing',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR_ON_REPORT: 'errorOnReport',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  CAPABILITIES_NOT_LOADED: 'capabilitiesNotLoaded',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR_ON_GETCAPABILITIES: 'errorOnGetCapabilities'\n};\n\n\nexports.value('gmfPrintState', {\n  'state': exports.PrintStateEnum.CAPABILITIES_NOT_LOADED\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfPrintTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfPrintTemplateUrl($element, $attrs, gmfPrintTemplateUrl) {\n  return gmfPrintTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component that display a print panel. This panel is populated with\n * a form corresponding to the capabilities delivered by a GMF print v3 server.\n * If you want to use another template for your print panel, you can see the\n * available layout information in the 'gmfx.PrintLayoutInfo' classes.\n *\n * Simple example:\n *\n *      <gmf-print\n *        gmf-print-map=\"::mainCtrl.map\"\n *        gmf-print-active=\"printActive\"\n *        gmf-print-rotatemask=\"::true\">\n *      </gmf-print>\n *\n * Example with user defined attribute:\n *\n *      <gmf-print\n *        gmf-print-map=\"::mainCtrl.map\"\n *        gmf-print-active=\"printActive\"\n *        gmf-print-rotatemask=\"::true\"\n *        gmf-print-hiddenattributes=\"::['name']\"\n *        gmf-print-attributes-out=\"::attributes\">\n *        <div ng-repeat=\"attribute in ::attributes\">\n *          <div ng-if=\"attribute.name == 'name'\">\n *            <input ng-model=\"attribute.value\" placeholder=\"name\" />\n *          </div>\n *        </div>\n *      </gmf-print>\n *\n * Note: The 'print' and 'cancel' functions can also be called via globals\n * events 'gmfStartPrint' and 'gmfCancelPrint'.\n *\n * @htmlAttribute {ol.Map} gmf-print-map The map.\n * @htmlAttribute {boolean} gmf-print-active A boolean that informs if the\n *     panel is open or not.\n * @htmlAttribute {boolean} gmf-print-rotatemask Optional. True to apply\n *     rotation on the mask instead of the map. By default, the map rotates.\n * @htmlAttribute {Object.<string, string|number|boolean>}\n *     gmf-print-fieldvalues optional. Key, value object to define default\n *     value in each of your print panel field. The key refers to the\n *     property's name of the field.\n *     Example: {'comments': 'demo', 'legend': false}. Doesn't work for the dpi\n *     and the scale. Server's values are used in priority.\n * @htmlAttribute {Array.<string>} gmf-print-hiddenattributes The list of attributes that should be hidden.\n * @ngdoc component\n * @ngname gmfPrint\n */\nexports.component_ = {\n  bindings: {\n    'map': '<gmfPrintMap',\n    'active': '=gmfPrintActive',\n    'rotateMask': '<?gmfPrintRotatemask',\n    'fieldValues': '<?gmfPrintFieldvalues',\n    'hiddenAttributeNames': '<?gmfPrintHiddenattributes',\n    'attributesOut': '=?gmfPrintAttributesOut'\n  },\n  controller: 'GmfPrintController',\n  templateUrl: gmfPrintTemplateUrl,\n  transclude: true\n};\n\n\nexports.component('gmfPrint', exports.component_);\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {angular.JQLite} $element Element.\n   * @param {angular.Scope} $rootScope Angular root scope.\n   * @param {angular.Scope} $scope Angular scope.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {ngeo.map.LayerHelper} ngeoLayerHelper The ngeo Layer Helper service.\n   * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo Feature Overlay\n   *     Manager service.\n   * @param {ngeo.print.Utils} ngeoPrintUtils The ngeo PrintUtils service.\n   * @param {ngeox.CreatePrint} ngeoCreatePrint The ngeo Create Print function.\n   * @param {string} gmfPrintUrl A MapFishPrint url.\n   * @param {gmf.authentication.Service} gmfAuthenticationService The authentication service.\n   * @param {ngeox.QueryResult} ngeoQueryResult ngeo query result.\n   * @param {angular.$filter} $filter Angular $filter service.\n   * @param {gmf.print.component.PrintStateEnum} gmfPrintState GMF print state.\n   * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n   * @private\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfPrintController\n   */\n  constructor($element, $rootScope, $scope, $timeout, $q, $injector,\n    gettextCatalog, ngeoLayerHelper, ngeoFeatureOverlayMgr,  ngeoPrintUtils,\n    ngeoCreatePrint, gmfPrintUrl, gmfAuthenticationService, ngeoQueryResult,\n    $filter, gmfPrintState, gmfThemes) {\n\n    /**\n     * @type {gmf.print.component.PrintStateEnum}\n     * @private\n     */\n    this.gmfPrintState_ = gmfPrintState;\n\n    /**\n     * @type {function(string): string}\n     * @private\n     */\n    this.translate_ = $filter('translate');\n\n    /**\n     * @type {ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.active;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.rotateMask = false;\n\n    /**\n     * @type {Object.<string, string|number|boolean>!}\n     * @export\n     */\n    this.fieldValues = {};\n\n    /**\n     * @type {Array.<string>}\n     * @export\n     */\n    this.attributesOut;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$rootScope_ = $rootScope;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.$timeout_ = $timeout;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.$q_ = $q;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {ol.layer.Vector}\n     * @private\n     */\n    this.featureOverlayLayer_ = ngeoFeatureOverlayMgr.getLayer();\n\n    /**\n     * @type {ngeo.print.Utils}\n     * @private\n     */\n    this.ngeoPrintUtils_ = ngeoPrintUtils;\n\n    /**\n     * @type {ngeo.print.Service}\n     * @private\n     */\n    this.ngeoPrint_ = ngeoCreatePrint(gmfPrintUrl);\n\n    /**\n     * @type {ngeox.QueryResult}\n     * @private\n     */\n    this.ngeoQueryResult_ = ngeoQueryResult;\n\n    /**\n     * @type {gmf.authentication.Service}\n     * @private\n     */\n    this.gmfAuthenticationService_ = gmfAuthenticationService;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    this.cacheVersion_ = '0';\n    if ($injector.has('cacheVersion')) {\n      this.cacheVersion_ = $injector.get('cacheVersion');\n    }\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.scaleInput = false;\n\n    if ($injector.has('gmfPrintOptions')) {\n      this.scaleInput = $injector.get('gmfPrintOptions')['scaleInput'];\n    }\n\n    /**\n     * @type {?angular.$q.Deferred}\n     * @private\n     */\n    this.requestCanceler_ = null;\n\n    /**\n     * @type {?angular.$q.Promise}\n     * @private\n     */\n    this.statusTimeoutPromise_ = null;\n\n    /**\n     * @type {Array.<number>|null}\n     * @private\n     */\n    this.onDragPreviousMousePosition_ = null;\n\n    /**\n     * @type {?angular.$q.Promise|null}\n     * @private\n     */\n    this.rotationTimeoutPromise_ = null;\n\n    /**\n     * @type {ol.EventsKey}\n     * @private\n     */\n    this.postComposeListenerKey_;\n\n    /**\n     * @type {ol.EventsKey}\n     * @private\n     */\n    this.pointerDragListenerKey_;\n\n    /**\n     * @type {ol.EventsKey}\n     * @private\n     */\n    this.mapViewResolutionChangeKey_;\n\n    /**\n     * Current report reference id.\n     * @type {string}\n     * @private\n     */\n    this.curRef_ = '';\n\n    /**\n     * Formats availables in capabilities.\n     * @type {Array.<string>}\n     * @private\n     */\n    this.formats_ = [];\n\n    /**\n     * An array of attributes objects from capabilities.\n     * @type {Array.<Object>}\n     * @private\n     */\n    this.layouts_ = [];\n\n    /**\n     * An attributes object from capabilities.\n     * @type {Object}\n     * @private\n     */\n    this.layout_ = {};\n\n    /**\n     * @type {Array.<number>}\n     * @private\n     */\n    this.paperSize_ = [];\n\n    /**\n     * @type {gmfx.PrintLayoutInfo}\n     * @export\n     */\n    this.layoutInfo = {};\n\n    /**\n     * @type {number}\n     * @export\n     */\n    this.rotation = 0;\n\n    /**\n     * @type {Array.<string>}\n     * @export\n     */\n    this.hiddenAttributeNames;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.scaleManuallySelected_ = false;\n\n    /**\n     * @type {angular.JQLite}\n     * @export\n     */\n    this.rotationInput_ = $element.find('.gmf-print-rotation-input');\n\n    this.rotationInput_.on('input', (event) => {\n      const rotation = $(event.target).val();\n      if (rotation !== '') {\n        this.setRotation(/** @type {number} */ (rotation));\n      }\n    });\n\n    /**\n     * @type {function(ol.render.Event)}\n     */\n    this.postcomposeListener_;\n\n    /**\n     * @type {angular.$http.HttpPromise}\n     * @private\n     */\n    this.capabilities_;\n\n    /**\n     * @type {gmfThemes.GmfOgcServers}\n     * @private\n     */\n    this.ogcServers_;\n\n    /**\n     * @type {Array.<gmfThemes.GmfTheme>}\n     * @private\n     */\n    this.currentThemes_;\n  }\n\n\n  /**\n   * Init the controller\n   */\n  $onInit() {\n    // Clear the capabilities if the roleId changes\n    this.$scope_.$watch(() => this.gmfAuthenticationService_.getRoleId(), () => {\n      this.gmfPrintState_.state = exports.PrintStateEnum.CAPABILITIES_NOT_LOADED;\n      this.capabilities_ = null;\n    });\n\n    this.$scope_.$watch(() => this.active, (active) => {\n      this.togglePrintPanel_(active);\n    });\n\n    // Print on event.\n    this.$rootScope_.$on('gmfStartPrint', (event, format) => {\n      this.print(`${format}`);\n    });\n\n    // Cancel print task on event.\n    this.$rootScope_.$on('gmfCancelPrint', () => {\n      this.cancel();\n    });\n\n    this.gmfThemes_.getOgcServersObject().then((ogcServersObject) => {\n      this.ogcServers_ = ogcServersObject;\n    });\n\n    this.gmfThemes_.getThemesObject().then((currentThemes) => {\n      this.currentThemes_ = currentThemes;\n    });\n\n    /**\n     * @return {ol.Size} Size in dots of the map to print.\n     */\n    const getSizeFn = () => this.paperSize_;\n\n    let getRotationFn;\n    if (this.rotateMask) {\n      /**\n       * @return {number} rotation to apply.\n       */\n      getRotationFn = () => this.rotation;\n    }\n\n    this.postcomposeListener_ = this.ngeoPrintUtils_.createPrintMaskPostcompose(\n      getSizeFn, this.getScaleFn.bind(this), getRotationFn);\n  }\n\n\n  /**\n   * @param {olx.FrameState} frameState Frame state.\n   * @return {number} Scale of the map to print.\n   */\n  getScaleFn(frameState) {\n    // Don't compute an optimal scale if the user manually choose a value not in\n    // the pre-defined scales. (`scaleInput` in `gmfPrintOptions`).\n    googAsserts.assert(this.layoutInfo.scales);\n    googAsserts.assert(this.layoutInfo.scale !== undefined);\n    if (!this.scaleManuallySelected_ &&\n        (this.layoutInfo.scale === -1 || olArray.includes(this.layoutInfo.scales, this.layoutInfo.scale))) {\n      const mapSize = frameState.size;\n      const viewResolution = frameState.viewState.resolution;\n      this.layoutInfo.scale = this.getOptimalScale_(mapSize, viewResolution);\n    }\n    return this.layoutInfo.scale;\n  }\n\n\n  /**\n   * @param {boolean} active True to listen events related to the print and get\n   *     capabilities. False to stop listen them and set rotation to 0.\n   * @private\n   */\n  togglePrintPanel_(active) {\n    if (active) {\n      if (!this.capabilities_) {\n        this.getCapabilities_();\n      }\n      this.capabilities_.then((resp) => {\n        // make sure the panel is still open\n        if (!this.active) {\n          return;\n        }\n        this.gmfPrintState_.state = exports.PrintStateEnum.NOT_IN_USE;\n        // Get capabilities - On success\n        this.parseCapabilities_(resp);\n        this.postComposeListenerKey_ = olEvents.listen(this.map, 'postcompose', this.postcomposeListener_);\n        this.pointerDragListenerKey_ = olEvents.listen(this.map, 'pointerdrag', this.onPointerDrag_, this);\n        this.mapViewResolutionChangeKey_ = olEvents.listen(this.map.getView(), 'change:resolution', () => {\n          this.scaleManuallySelected_ = false;\n        });\n        this.map.render();\n      }, (resp) => {\n        // Get capabilities - On error\n        this.gmfPrintState_.state = exports.PrintStateEnum.ERROR_ON_GETCAPABILITIES;\n        this.capabilities_ = null;\n      });\n    } else {\n      olEvents.unlistenByKey(this.postComposeListenerKey_);\n      olEvents.unlistenByKey(this.pointerDragListenerKey_);\n      olEvents.unlistenByKey(this.mapViewResolutionChangeKey_);\n      this.setRotation(0);\n      this.map.render(); // Redraw (remove) post compose mask;\n    }\n  }\n\n\n  /**\n   * Gets the print capabilities.\n   * @param {number|null=} opt_roleId The role id.\n   * @private\n   */\n  getCapabilities_(opt_roleId) {\n    this.capabilities_ = this.ngeoPrint_.getCapabilities(\n      /** @type {angular.$http.Config} */ ({\n        withCredentials: true,\n        params: opt_roleId ? {\n          'role': opt_roleId,\n          'cache_version': this.cacheVersion_\n        } : {\n          'cache_version': this.cacheVersion_\n        }\n      }));\n  }\n\n\n  /**\n   * Create the list of layouts, get the formats, get the first layout in\n   * gmf print v3 capabilities and then update the print panel layout information.\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  parseCapabilities_(resp) {\n    const data = resp['data'];\n    this.formats_ = data['formats'] || [];\n    this.layouts_ = data['layouts'];\n    this.layout_ = data['layouts'][0];\n\n    this.layoutInfo.layouts = [];\n    this.layouts_.forEach((layout) => {\n      this.layoutInfo.layouts.push(layout.name);\n    });\n\n    this.updateFields_();\n  }\n\n\n  /**\n   * Update layout information with the user values if there are always available in the\n   * current layout otherwise use the defaults values of the layout.\n   * If a field doesn't exist in the current layout, set it to undefined so the\n   * view can hide it. Update also the paper size.\n   * custom print templates).\n   * @private\n   */\n  updateFields_() {\n    this.layoutInfo.layout = this.layout_.name;\n\n    const mapInfo = this.isAttributeInCurrentLayout_('map');\n    googAsserts.assertObject(mapInfo);\n    const clientInfo = mapInfo['clientInfo'];\n    googAsserts.assertObject(clientInfo);\n    this.paperSize_ = [clientInfo['width'], clientInfo['height']];\n\n    this.updateCustomFields_();\n\n    const legend = this.isAttributeInCurrentLayout_('legend');\n    if (this.layoutInfo.legend === undefined) {\n      this.layoutInfo.legend = !!(legend !== undefined ?\n        legend : this.fieldValues['legend']);\n    }\n\n    this.layoutInfo.scales = clientInfo['scales'] || [];\n    this.layoutInfo.dpis = clientInfo['dpiSuggestions'] || [];\n\n    const mapSize = this.map.getSize();\n    const viewResolution = this.map.getView().getResolution();\n    this.layoutInfo.scale = this.getOptimalScale_(mapSize, viewResolution);\n\n    this.layoutInfo.dpi =\n        (this.layoutInfo.dpi && this.layoutInfo.dpis.indexOf(this.layoutInfo.dpi) > 0) ?\n          this.layoutInfo.dpi : this.layoutInfo.dpis[0];\n\n    this.layoutInfo.formats = {};\n    this.formats_.forEach((format) => {\n      this.layoutInfo.formats[format] = true;\n    });\n\n    this.attributesOut = this.layoutInfo['simpleAttributes'];\n\n    // Force the update of the mask\n    this.map.render();\n  }\n\n\n  /**\n   * Update simple attributes information with gmfx.Customfield to be able to generate a form\n   * from a custom GMF print v3 configuration.\n   * @private\n   */\n  updateCustomFields_() {\n    let name, rawType, value, type;\n    if (!this.layoutInfo.simpleAttributes) {\n      this.layoutInfo.simpleAttributes = [];\n    }\n    const simpleAttributes = this.layoutInfo.simpleAttributes;\n    const previousAttributes = simpleAttributes.splice(0, simpleAttributes.length);\n\n    // The attributes without 'clientParams' are the custom layout information (defined by end user).\n    this.layout_.attributes.forEach((attribute) => {\n      if (!attribute['clientParams']) {\n        name = `${attribute.name}`;\n        const defaultValue = attribute.default;\n        value = (defaultValue !== undefined && defaultValue !== '') ?\n          defaultValue : this.fieldValues[name];\n\n        // Try to use existing form field type\n        rawType = `${attribute.type}`;\n        switch (rawType) {\n          case 'String':\n            type = (name === 'comments') ? 'textarea' : 'text';\n            break;\n          case 'Boolean':\n            type = 'checkbox';\n            break;\n          case 'Number':\n            type = 'number';\n            value = parseFloat(value);\n            value = isNaN(value) ? 0 : value;\n            break;\n          default:\n            type = rawType;\n        }\n\n        // If it exists use the value of previous same field.\n        previousAttributes.forEach((c) => {\n          if (c.name === name && c.type === type) {\n            return value = c.value;\n          }\n        });\n\n        this.layoutInfo.simpleAttributes.push(/** gmfx.PrintSimpleAttributes */ ({\n          name,\n          type,\n          value\n        }));\n      }\n    });\n  }\n\n\n  /**\n   * Return a capabilities 'attribute' object corresponding to the given name.\n   * @param {string} name Name of the attribute to get.\n   * @return {Object|null} corresponding attribute or null.\n   * @private\n   */\n  isAttributeInCurrentLayout_(name) {\n    let attr = null;\n    this.layout_.attributes.forEach((attribute) => {\n      if (attribute.name === name) {\n        return attr = attribute;\n      }\n    });\n    return attr;\n  }\n\n\n  /**\n   * Set the current rotation value.\n   * Updating the rotation will redraw the mask or rotate the map (depending on the configuration).\n   * @param {number} rotation The optional new rotation value in degrees.\n   */\n  setRotation(rotation) {\n    this.rotation = olMath.clamp(rotation, -180, 180);\n\n    // sync all the inputs\n    this.rotationInput_.val(this.rotation.toString());\n\n    // Render the map to update the postcompose mask or rotate the map.\n    if (this.rotateMask) {\n      this.map.render();\n    } else {\n      this.map.getView().setRotation(olMath.toRadians(this.rotation));\n    }\n  }\n\n\n  /**\n   * Calculate the angle and the sense of rotation between two lines. One from the\n   * center of the map and the point of the last call to this function and one\n   * from the same center and the point of the current call.\n   * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n   * @private\n   */\n  onPointerDrag_(e) {\n    const originalEvent = e.originalEvent;\n    const mapCenter = this.map.getView().getCenter();\n    if (this.active && originalEvent.altKey && originalEvent.shiftKey && mapCenter) {\n      const center = this.map.getPixelFromCoordinate(mapCenter);\n      const pixel = e.pixel;\n      // Reset previous position between two different sessions of drags events.\n      if (this.rotationTimeoutPromise_ === null) {\n        this.onDragPreviousMousePosition_ = null;\n      } else {\n        // Cancel the timeout to keep this session of drags event\n        this.$timeout_.cancel(this.rotationTimeoutPromise_);\n        // Calculate angle and sense of rotation.\n        const p0x = this.onDragPreviousMousePosition_[0] - center[0];\n        const p0y = this.onDragPreviousMousePosition_[1] - center[1];\n        const p1x = pixel[0] - center[0];\n        const p1y = pixel[1] - center[1];\n        const centerToP0 = Math.sqrt(Math.pow(p0x, 2) + Math.pow(p0y, 2));\n        const centerToP1 = Math.sqrt(Math.pow(p1x, 2) + Math.pow(p1y, 2));\n        const sense = (p0x * p1y - p0y * p1x) > 0 ? 1 : -1;\n        let angle = (p0x * p1x + p0y * p1y) / (centerToP0 * centerToP1);\n        angle = angle <= 1 ? sense * Math.acos(angle) : 0;\n        const boost = centerToP1 / 200;\n        const increment = Math.round(olMath.toDegrees(angle) * boost);\n\n        // Set rotation then update the view.\n        this.setRotation(this.rotation + increment);\n        this.$scope_.$digest();\n      }\n      // Prepare the removal of this session of drags events\n      this.rotationTimeoutPromise_ = this.$timeout_(() => {\n        this.rotationTimeoutPromise_ = null;\n      }, 500);\n      // Keep the current position for the next calculation.\n      this.onDragPreviousMousePosition_ = pixel;\n    }\n  }\n\n\n  /**\n   * Create a print report based on the values of the 'layoutInfo' values.\n   * @param {string} format An output format corresponding to one format in the\n   *     capabilities document ('pdf', 'png', etc).\n   * @export\n   */\n  print(format) {\n    // Do not print if a print task is already processing.\n    if (this.gmfPrintState_.state === exports.PrintStateEnum.PRINTING) {\n      return;\n    }\n    this.requestCanceler_ = this.$q_.defer();\n    this.gmfPrintState_.state = exports.PrintStateEnum.PRINTING;\n\n    const mapSize = this.map.getSize();\n    const viewResolution = this.map.getView().getResolution() || 0;\n    const scale = this.layoutInfo.scale || this.getOptimalScale_(mapSize, viewResolution);\n    const datasource = this.getDataSource_();\n\n    const customAttributes = {\n      'datasource': datasource\n    };\n\n    if (this.layoutInfo.simpleAttributes) {\n      this.layoutInfo.simpleAttributes.forEach((field) => {\n        customAttributes[field.name] = field.value;\n      });\n    }\n\n    if (this.layoutInfo.legend) {\n      const legend = this.getLegend_(scale);\n      if (legend !== null) {\n        customAttributes['legend'] = this.getLegend_(scale);\n      }\n    }\n\n    googAsserts.assertNumber(this.layoutInfo.dpi);\n    googAsserts.assertString(this.layoutInfo.layout);\n\n    // convert the WMTS layers to WMS\n    const map = new olMap({});\n    map.setView(this.map.getView());\n    const ol_layers = this.ngeoLayerHelper_.getFlatLayers(this.map.getLayerGroup());\n    const new_ol_layers = [];\n    let print_native_angle = true;\n    for (let i = 0, ii = ol_layers.length; i < ii; i++) {\n      let layer = ol_layers[i];\n      const metadata = layer.get('metadata');\n      if (metadata) {\n        const server_name = metadata.ogcServer;\n        const layer_names = metadata.printLayers || metadata.layers;\n        if (server_name && layer_names) {\n          const server = this.ogcServers_[server_name];\n          if (server) {\n            layer = this.ngeoLayerHelper_.createBasicWMSLayer(\n              server.url,\n              layer_names,\n              server.imageType,\n              server.type\n            );\n          } else {\n            console.error('Missing ogcServer:', server_name);\n          }\n        }\n      }\n\n      // Get the print native angle parameter for WMS layers when set to not use default value\n      // Is applied only once when the value is overridden with a metadata from administration\n      if (layer instanceof olLayerImage && layer.get('printNativeAngle') === false) {\n        print_native_angle = false;\n      }\n\n      new_ol_layers.push(layer);\n    }\n    map.setLayerGroup(new olLayerGroup({\n      layers: new_ol_layers,\n      'printNativeAngle': print_native_angle\n    }));\n\n    const spec = this.ngeoPrint_.createSpec(map, scale, this.layoutInfo.dpi,\n      this.layoutInfo.layout, format, customAttributes);\n\n    // Add feature overlay layer to print spec.\n    const layers = [];\n    this.ngeoPrint_.encodeLayer(layers, this.featureOverlayLayer_,\n      viewResolution);\n    if (layers.length > 0) {\n      spec.attributes.map.layers.unshift(layers[0]);\n    }\n\n    this.ngeoPrint_.createReport(spec, /** @type {angular.$http.Config} */ ({\n      timeout: this.requestCanceler_.promise\n    })).then(\n      this.handleCreateReportSuccess_.bind(this),\n      this.handleCreateReportError_.bind(this)\n    );\n\n    // remove temporary map\n    map.setTarget(null);\n  }\n\n\n  /**\n   * Cancel the current print and reset its state.\n   * @export\n   */\n  cancel() {\n    // Cancel the latest request, if it's not finished yet.\n    if (this.requestCanceler_ !== null) {\n      this.requestCanceler_.resolve();\n    }\n\n    // Cancel the status timeout if there's one set, to make sure no other\n    // status request is sent.\n    if (this.statusTimeoutPromise_ !== null) {\n      this.$timeout_.cancel(this.statusTimeoutPromise_);\n    }\n\n    if (this.curRef_.length > 0) {\n      this.ngeoPrint_.cancel(this.curRef_);\n    }\n\n    this.resetPrintStates_();\n  }\n\n\n  /**\n   * @param {gmf.print.component.PrintStateEnum=} opt_printState the print state.\n   * @private\n   */\n  resetPrintStates_(opt_printState) {\n    this.gmfPrintState_.state = opt_printState || exports.PrintStateEnum.NOT_IN_USE;\n    this.curRef_ = '';\n  }\n\n\n  /**\n   * Get datasource object for print report\n   * @private\n   * @return {Array.<gmfx.datasource.DataSourcePrintReportObject>} the data\n   *     source objet for the print report\n   */\n  getDataSource_() {\n    let datasourceObj, data, columns;\n    const datasourceArr = [];\n    const sources = this.ngeoQueryResult_.sources;\n    sources.forEach(function(source) {\n      data = [];\n      columns = [];\n      source.features.forEach(function(feature, i) {\n        googAsserts.assert(feature);\n        const properties = ngeoMiscFeatureHelper.getFilteredFeatureValues(feature);\n        if (i === 0) {\n          columns = Object.keys(properties).map(function tanslateColumns(prop) {\n            return this.translate_(prop);\n          }, this);\n        }\n        data.push(Object.keys(properties).map(key => properties[key]));\n      }, this);\n      if (columns.length) {\n        datasourceObj =\n          /** @type {gmfx.datasource.DataSourcePrintReportObject} */({\n            title: this.translate_(source.label),\n            table: {\n              columns,\n              data\n            }\n          });\n        datasourceArr.push(datasourceObj);\n      }\n    }, this);\n    return datasourceArr;\n  }\n\n\n  /**\n   * Get the optimal scale to display the print mask. Return the first scale if\n   * no scale matches.\n   * @param {ol.Size|undefined} mapSize Size of the map on the screen (px).\n   * @param {number|undefined} viewResolution Resolution of the map on the screen.\n   * @return {number} The best scale. -1 is returned if there is no optimal\n   *     scale, that is the optimal scale is lower than or equal to the first\n   *     value in printMapScales.\n   * @private\n   */\n  getOptimalScale_(mapSize, viewResolution) {\n    const scales = this.layoutInfo.scales.slice();\n    if (mapSize !== undefined && viewResolution !== undefined) {\n      return this.ngeoPrintUtils_.getOptimalScale(mapSize, viewResolution,\n        this.paperSize_, scales.reverse());\n    }\n    return this.layoutInfo.scales[0];\n  }\n\n\n  /**\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  handleCreateReportSuccess_(resp) {\n    const mfResp = /** @type {MapFishPrintReportResponse} */ (resp.data);\n    const ref = mfResp.ref;\n    googAsserts.assert(ref.length > 0);\n    this.curRef_ = ref;\n    this.getStatus_(ref);\n  }\n\n\n  /**\n   * @param {string} ref Ref.\n   * @private\n   */\n  getStatus_(ref) {\n    this.requestCanceler_ = this.$q_.defer();\n    this.ngeoPrint_.getStatus(ref, /** @type {angular.$http.Config} */ ({\n      timeout: this.requestCanceler_.promise\n    })).then(\n      this.handleGetStatusSuccess_.bind(this, ref),\n      this.handleCreateReportError_.bind(this)\n    );\n  }\n\n\n  /**\n   * @param {string} ref Ref.\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  handleGetStatusSuccess_(ref, resp) {\n    const mfResp = /** @type {MapFishPrintStatusResponse} */ (resp.data);\n    const done = mfResp.done;\n    if (done) {\n      if (mfResp.status != 'error') {\n        // The report is ready. Open it by changing the window location.\n        window.location.href = this.ngeoPrint_.getReportUrl(ref);\n        this.resetPrintStates_();\n      } else {\n        console.error(mfResp.error);\n        this.handleCreateReportError_();\n      }\n    } else {\n      // The report is not ready yet. Check again in 1s.\n      this.statusTimeoutPromise_ = this.$timeout_(() => {\n        this.getStatus_(ref);\n      }, 1000, false);\n    }\n  }\n\n\n  /**\n   * @private\n   */\n  handleCreateReportError_() {\n    this.resetPrintStates_(exports.PrintStateEnum.ERROR_ON_REPORT);\n  }\n\n\n  /**\n   * @param {number} scale The scale to get the legend (for wms layers only).\n   * @return {Object?} Legend object for print report or null.\n   * @private\n   */\n  getLegend_(scale) {\n    const legend = {'classes': []};\n    let classes, layerNames, layerName, icons;\n    const gettextCatalog = this.gettextCatalog_;\n\n    // Get layers from layertree only.\n    const dataLayerGroup = this.ngeoLayerHelper_.getGroupFromMap(this.map,\n      gmfBase.DATALAYERGROUP_NAME);\n    const layers = this.ngeoLayerHelper_.getFlatLayers(dataLayerGroup);\n\n    // For each visible layer in reverse order, get the legend url.\n    layers.reverse().forEach((layer) => {\n      classes = [];\n      if (layer.getVisible() && layer.getSource()) {\n        // For WMTS layers.\n        if (layer instanceof olLayerTile) {\n          layerName = `${layer.get('layerNodeName')}`;\n          icons = this.getMetadataLegendImage_(layerName);\n          if (!icons) {\n            icons = this.ngeoLayerHelper_.getWMTSLegendURL(layer);\n          }\n          // Don't add classes without legend url.\n          if (icons) {\n            classes.push({\n              'name': gettextCatalog.getString(layerName),\n              'icons': [icons]\n            });\n          }\n        } else {\n          const source = /** @type ol.source.ImageWMS */ (layer.getSource());\n          // For each name in a WMS layer.\n          layerNames = source.getParams()['LAYERS'].split(',');\n          layerNames.forEach((name) => {\n            icons = this.getMetadataLegendImage_(name);\n            if (!icons) {\n              icons = this.ngeoLayerHelper_.getWMSLegendURL(source.getUrl(), name,\n                scale);\n            }\n            // Don't add classes without legend url or from layers without any\n            // active name.\n            if (icons && name.length !== 0) {\n              classes.push({\n                'name': gettextCatalog.getString(name),\n                'icons': [icons]\n              });\n            }\n          });\n        }\n      }\n\n      // Add classes object only if it contains something.\n      if (classes.length > 0) {\n        legend['classes'].push({'classes': classes});\n      }\n\n    });\n\n    return legend['classes'].length > 0 ?  legend : null;\n  }\n\n\n  /**\n   * Return the metadata legendImage of a layer from the found corresponding node\n   * or undefined.\n   * @param {string} layerName a layer name.\n   * @return {string|undefined} The legendImage or undefined.\n   * @private\n   */\n  getMetadataLegendImage_(layerName) {\n    const groupNode = gmfThemeThemes.findGroupByLayerNodeName(this.currentThemes_, layerName);\n    let node;\n    if (groupNode && groupNode.children) {\n      node = gmfThemeThemes.findObjectByName(groupNode.children, layerName);\n    }\n    let legendImage;\n    if (node && node.metadata) {\n      legendImage = node.metadata.legendImage;\n    }\n    return legendImage;\n  }\n\n\n  /**\n   * Set the current layout and update all layout information with this new layout parameters.\n   * @param {string!} layoutName A layout name as existing in the list of\n   *     existing layouts.\n   * @export\n   */\n  setLayout(layoutName) {\n    let layout;\n    this.layouts_.forEach((l) => {\n      if (l.name === layoutName) {\n        layout = l;\n        return true; // break;\n      }\n    });\n    this.layout_ = layout;\n    this.updateFields_();\n  }\n\n\n  /**\n   * Get or set the print scale value and adapt the zoom to match with this new scale.\n   * @param {number=} opt_scale A scale value as existing in the scales list field.\n   * @return {number|undefined} New scale.\n   * @export\n   */\n  getSetScale(opt_scale) {\n    if (opt_scale !== undefined) {\n      const mapSize = this.map.getSize() || [0, 0];\n      this.layoutInfo.scale = opt_scale;\n      const res = this.ngeoPrintUtils_.getOptimalResolution(mapSize, this.paperSize_, opt_scale);\n      const contrainRes = this.map.getView().constrainResolution(res, 0, 1);\n      this.map.getView().setResolution(contrainRes);\n      // Render the map to update the postcompose mask manually\n      this.map.render();\n      this.scaleManuallySelected_ = true;\n    }\n    return this.layoutInfo.scale;\n  }\n\n\n  /**\n   * Set the print dpi value.\n   * @param {number} dpi A dpi value as existing in the dpis list field.\n   * @export\n   */\n  setDpi(dpi) {\n    this.layoutInfo.dpi = dpi;\n  }\n\n\n  /**\n   * Check the current state of the print.\n   * @param {string} stateEnumKey An enum key from gmf.print.component.PrintStateEnum.\n   * @return {boolean} True if the given state matches with the current print\n   *     state. False otherwise.\n   * @export\n   */\n  isState(stateEnumKey) {\n    return this.gmfPrintState_.state === exports.PrintStateEnum[stateEnumKey];\n  }\n};\n\nexports.controller('GmfPrintController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.createfeatureComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nconst exports = angular.module('ngeoCreatefeature', [\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * A directive used to draw vector features of a single geometry type using\n * either a 'draw' or 'measure' interaction. Once a feature is finished being\n * drawn, it is added to a collection of features.\n *\n * The geometry types supported are:\n *  - Point\n *  - LineString\n *  - Polygon\n *\n * Example:\n *\n *     <a\n *       href\n *       translate\n *       ngeo-btn\n *       ngeo-createfeature\n *       ngeo-createfeature-active=\"ctrl.createPointActive\"\n *       ngeo-createfeature-features=\"ctrl.features\"\n *       ngeo-createfeature-geom-type=\"ctrl.pointGeomType\"\n *       ngeo-createfeature-map=\"::ctrl.map\"\n *       class=\"btn btn-default ngeo-createfeature-point\"\n *       ng-class=\"{active: ctrl.createPointActive}\"\n *       ng-model=\"ctrl.createPointActive\">\n *     </a>\n *\n * @htmlAttribute {boolean} ngeo-createfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {ol.Collection} ngeo-createfeature-features The collection of\n *     features where to add those created by this directive.\n * @htmlAttribute {string} ngeo-createfeature-geom-type Determines the type\n *     of geometry this directive should draw.\n * @htmlAttribute {ol.Map} ngeo-createfeature-map The map.\n *\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname ngeoCreatefeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoCreatefeatureController',\n    bindToController: true,\n    scope: {\n      'active': '=ngeoCreatefeatureActive',\n      'features': '=ngeoCreatefeatureFeatures',\n      'geomType': '=ngeoCreatefeatureGeomType',\n      'map': '=ngeoCreatefeatureMap'\n    }\n  };\n};\n\nexports.directive('ngeoCreatefeature', exports.directive_);\n\n\n/**\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.Scope} $scope Scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoCreatefeatureController\n */\nexports.Controller_ = function(gettextCatalog, $compile, $filter, $scope,\n  $timeout, ngeoEventHelper) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {ol.Collection.<!ol.Feature>|!ol.source.Vector}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {!angular.$compile}\n   * @private\n   */\n  this.compile_ = $compile;\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.filter_ = $filter;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * The draw or measure interaction responsible of drawing the vector feature.\n   * The actual type depends on the geometry type.\n   * @type {ol.interaction.Interaction}\n   * @private\n   */\n  this.interaction_;\n\n\n  // == Event listeners ==\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      this.interaction_.setActive(newVal);\n    }\n  );\n};\n\n\n/**\n * Initialize the directive.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.active = this.active === true;\n  const gettextCatalog = this.gettextCatalog_;\n\n  // Create the draw or measure interaction depending on the geometry type\n  let interaction;\n  if (this.geomType === ngeoGeometryType.POINT ||\n      this.geomType === ngeoGeometryType.MULTI_POINT\n  ) {\n    interaction = new olInteractionDraw({\n      type: /** @type {ol.geom.GeometryType} */ ('Point')\n    });\n  } else if (this.geomType === ngeoGeometryType.LINE_STRING ||\n      this.geomType === ngeoGeometryType.MULTI_LINE_STRING\n  ) {\n    const helpMsg = gettextCatalog.getString('Click to start drawing length');\n    const contMsg = gettextCatalog.getString(\n      'Click to continue drawing<br/>' +\n      'Double-click or click last point to finish'\n    );\n\n    interaction = new ngeoInteractionMeasureLength(\n      this.filter_('ngeoUnitPrefix'),\n      gettextCatalog,\n      {\n        style: new olStyleStyle(),\n        startMsg: this.compile_(`<div translate>${helpMsg}</div>`)(this.scope_)[0],\n        continueMsg: this.compile_(`<div translate>${contMsg}</div>`)(this.scope_)[0]\n      }\n    );\n  } else if (this.geomType === ngeoGeometryType.POLYGON ||\n      this.geomType === ngeoGeometryType.MULTI_POLYGON\n  ) {\n    const helpMsg = gettextCatalog.getString('Click to start drawing area');\n    const contMsg = gettextCatalog.getString(\n      'Click to continue drawing<br/>' +\n      'Double-click or click starting point to finish'\n    );\n\n    interaction = new ngeoInteractionMeasureArea(\n      this.filter_('ngeoUnitPrefix'),\n      gettextCatalog,\n      {\n        style: new olStyleStyle(),\n        startMsg: this.compile_(`<div translate>${helpMsg}</div>`)(this.scope_)[0],\n        continueMsg: this.compile_(`<div translate>${contMsg}</div>`)(this.scope_)[0]\n      }\n    );\n  }\n\n  googAsserts.assert(interaction);\n\n  interaction.setActive(this.active);\n  this.interaction_ = interaction;\n  this.map.addInteraction(interaction);\n\n  const uid = olBase.getUid(this);\n  if (interaction instanceof olInteractionDraw) {\n    this.ngeoEventHelper_.addListenerKey(\n      uid,\n      olEvents.listen(\n        interaction,\n        'drawend',\n        this.handleDrawEnd_,\n        this\n      )\n    );\n  } else if (interaction instanceof ngeoInteractionMeasureLength ||\n     interaction instanceof ngeoInteractionMeasureArea) {\n    this.ngeoEventHelper_.addListenerKey(\n      uid,\n      olEvents.listen(\n        interaction,\n        'measureend',\n        this.handleDrawEnd_,\n        this\n      )\n    );\n  }\n};\n\n\n/**\n * Called when a feature is finished being drawn. Add the feature to the\n * collection.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.Controller_.prototype.handleDrawEnd_ = function(event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  googAsserts.assert(sketch);\n\n  // convert to multi if geomType is multi and feature is not\n  let geometry = sketch.getGeometry();\n  const type = geometry.getType();\n  if (this.geomType.indexOf('Multi') != type.indexOf('Multi')) {\n    geometry = ngeoUtils.toMulti(geometry);\n  }\n  const feature = new olFeature(geometry);\n  if (this.features instanceof olCollection) {\n    this.features.push(feature);\n  } else {\n    this.features.addFeature(feature);\n  }\n};\n\n\n/**\n * Cleanup event listeners and remove the interaction from the map.\n */\nexports.Controller_.prototype.$onDestroy = function() {\n  this.timeout_(() => {\n    const uid = olBase.getUid(this);\n    this.ngeoEventHelper_.clearListenerKey(uid);\n    this.interaction_.setActive(false);\n    this.map.removeInteraction(this.interaction_);\n  }, 0);\n};\n\nexports.controller('ngeoCreatefeatureController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.datetimepickerComponent\n */\nimport DateFormatter from 'ngeo/misc/php-date-formatter.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.css';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDateTimePicker', ['gettext']);\n\n/**\n * A directive used to display a date or time picker\n *\n * Example:\n *\n *      <input ngeo-datetimepicker\n *          ngeo-datetimepicker-options=\"{timepicker: false}\"\n *\n * @htmlAttribute {Object} ngeo-datetimepicker-options The options.\n *\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname ngeoDatetimepicker\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    controller: exports.Controller_,\n    bindToController: true,\n    scope: {\n      'options': '<ngeoDatetimepickerOptions'\n    }\n  };\n};\n\nexports.directive('ngeoDatetimepicker', exports.component_);\n\n\n/**\n * @param {!jQuery} $element Element.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDatetimepickerController\n */\nexports.Controller_ = function($element, gettextCatalog) {\n  /**\n   * @const {!jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * The gettext catalog\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * The options\n   * @type {Object|String}\n   * @private\n   */\n  this.options;\n};\n\n\n/**\n * Initialize the directive.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const lang = this.gettextCatalog_.getCurrentLanguage();\n  $.datetimepicker.setLocale(lang);\n  $.datetimepicker.setDateFormatter(new DateFormatter());\n  if (typeof this.options === 'string') {\n    this.options = angular.fromJson(this.options);\n  }\n  this.element_.datetimepicker(this.options);\n};\n\nexports.controller('ngeoDateTimePickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.attributesComponent\n */\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscDatetimepickerComponent from 'ngeo/misc/datetimepickerComponent.js';\n\nconst exports = angular.module('ngeoAttributes', [\n  ngeoMiscDatetimepickerComponent.name,\n  ngeoMiscEventHelper.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/editing/attributescomponent', require('./attributescomponent.html'));\n});\n\n\nexports.value('ngeoAttributesTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoAttributesTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/editing/attributescomponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoAttributesTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoAttributesTemplateUrl($attrs, ngeoAttributesTemplateUrl) {\n  return ngeoAttributesTemplateUrl($attrs);\n}\n\n\n/**\n * Component used to render the attributes of a feature into a form.\n * Example:\n *\n *     <ngeo-attributes\n *       ngeo-attributes-attributes=\"::ctrl.attributes\"\n *       ngeo-attributes-disabled=\"ctrl.attributesDisabled\"\n *       ngeo-attributes-feature=\"::ctrl.feature\">\n *     </ngeo-attributes>\n *\n * @htmlAttribute {Array.<ngeox.Attribute>} ngeo-attributes-attributes The\n *     list of attributes to use.\n * @htmlAttribute {boolean} ngeo-attributes-disabled Whether the fieldset should\n *     be disabled or not.\n * @htmlAttribute {ol.Feature} ngeo-attributes-feature The feature.\n *\n * @ngdoc component\n * @ngname ngeoAttributes\n */\nexports.component_ = {\n  controller: 'ngeoAttributesController as attrCtrl',\n  bindings: {\n    'attributes': '=ngeoAttributesAttributes',\n    'disabled': '<ngeoAttributesDisabled',\n    'feature': '=ngeoAttributesFeature'\n  },\n  require: {\n    'form': '^'\n  },\n  templateUrl: ngeoAttributesTemplateUrl\n};\n\nexports.component('ngeoAttributes', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoAttributesController\n */\nexports.Controller_ = function($scope, ngeoEventHelper) {\n\n  /**\n   * The list of attributes to create the form with.\n   * @type {Array.<ngeox.Attribute>}\n   * @export\n   */\n  this.attributes;\n\n  /**\n   * Whether the fieldset should be disabled or not.\n   * @type {boolean}\n   * @export\n   */\n  this.disabled = false;\n\n  /**\n   * The feature containing the values.\n   * @type {ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * The properties bound to the form, initialized with the inner properties\n   * of the feature.\n   * @type {?Object.<string, *>}\n   * @export\n   */\n  this.properties;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * While changes happen from the form (from the template), they are applied\n   * to the feature inner properties. The 'propertychange' event registered\n   * above does the opposite, i.e. it listens to the feature inner properties\n   * changes and apply them to the form. To prevent circular issues, while\n   * applying changes coming from the form, this flag is set. While set, changes\n   * from the feature inner properties are ignored.\n   * @type {boolean}\n   * @private\n   */\n  this.updating_ = false;\n};\n\n\n/**\n * Initialise the component.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.properties = this.feature.getProperties();\n\n  // Listen to the feature inner properties change and apply them to the form\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(this.feature, 'propertychange', this.handleFeaturePropertyChange_, this)\n  );\n};\n\n\n/**\n * Called when an input node value changes\n * @param {string} name Attribute name\n * @export\n */\nexports.Controller_.prototype.handleInputChange = function(name) {\n  this.updating_ = true;\n  const value = this.properties[name];\n  this.feature.set(name, value);\n  this.updating_ = false;\n};\n\n\n/**\n * Cleanup event listeners.\n */\nexports.Controller_.prototype.$onDestroy = function() {\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n};\n\n\n/**\n * @param {ol.Object.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturePropertyChange_ = function(evt) {\n  if (this.updating_) {\n    return;\n  }\n  this.properties[evt.key] = evt.target.get(evt.key);\n  this.scope_.$apply();\n};\n\n\nexports.controller('ngeoAttributesController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.exportfeaturesComponent\n */\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\n\nconst exports = angular.module('ngeoExportfeatures', [\n  ngeoMiscFeatureHelper.module.name\n]);\n\n/**\n * Directive used to export vector features in different types of format.\n * To configure which formats to use, define the `ngeoExportFeatureFormats`\n * value, as such:\n *\n *     app.module.value('ngeoExportFeatureFormats', [\n *         ngeo.misc.FeatureHelper.FormatType.KML,\n *         ngeo.misc.FeatureHelper.FormatType.GPX\n *     ]);\n *\n * Example:\n *\n *     <button\n *       ngeo-exportfeatures\n *       ngeo-exportfeatures-features=\"ctrl.features\"\n *       class=\"btn btn-link\">Export</button>\n *\n * @htmlAttribute {ol.Collection.<ol.Feature>} ngeo-exportfeatures-features The\n *     features to export\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoExportfeatures\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoExportfeaturesController as efCtrl',\n    scope: true,\n    bindToController: {\n      'features': '=ngeoExportfeaturesFeatures'\n    }\n  };\n};\n\n\nexports.directive('ngeoExportfeatures', exports.directive_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoExportfeaturesController\n */\nexports.Controller_ = function($element, $injector, $scope,\n  ngeoFeatureHelper) {\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  const uid = olBase.getUid(this);\n  const id = ['ngeo-exportfeature', uid].join('-');\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.id_ = id;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  let formats;\n  if ($injector.has('ngeoExportFeatureFormats')) {\n    formats = $injector.get('ngeoExportFeatureFormats');\n  } else {\n    formats = [ngeoMiscFeatureHelper.FormatType.KML];\n  }\n\n  /**\n   * @type {?jQuery}\n   * @private\n   */\n  this.menu_ = null;\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.items_ = [];\n\n  // build the drop-down menu and items if there's more than one format\n  if (formats.length > 1) {\n    $element.attr('id', id);\n    const $menu = $('<ul />', {\n      'class': 'dropdown-menu',\n      'aria-labelledby': id\n    }).appendTo($element.parent()[0]);\n\n    this.menu_ = $menu;\n    let $item;\n\n    formats.forEach((format) => {\n      $item = $('<li />')\n        .appendTo($menu)\n        .append($('<a />', {\n          'href': '#',\n          'text': format\n        })\n          .on(\n            ['click', id].join('.'),\n            this.handleMenuItemClick_.bind(this, format)\n          )\n        );\n      this.items_.push($item);\n    });\n  }\n\n  /**\n   * @type {Array.<string>}\n   * @private\n   */\n  this.formats_ = formats;\n\n  $element.on(['click', id].join('.'), this.handleElementClick_.bind(this));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Called when the element bound to this directive is clicked. Use the feature\n * helper to export the feature(s) depending on the format(s) available(s).\n * If there's only one, the call to the export method is direct, otherwise\n * a drop-down menu is show to let the user choose the format of the export.\n * Finally, if there's only one feature in the collection to export and there's\n * more than one format set, some formats may not support the type of geometry.\n * If that's the case, then disable each format item in the drop-down menu\n * that doesn't support the type of geometry.\n * @private\n */\nexports.Controller_.prototype.handleElementClick_ = function() {\n\n  const features = this.features.getArray();\n\n  if (this.formats_.length === 1) {\n    this.featureHelper_.export(features, this.formats_[0]);\n  } else if (features.length === 1) {\n    const feature = features[0];\n    const geom = feature.getGeometry();\n    let $item;\n    this.formats_.forEach((format, i) => {\n      $item = this.items_[i];\n      if (format === ngeoMiscFeatureHelper.FormatType.GPX) {\n        if (geom instanceof olGeomPoint ||\n            geom instanceof olGeomLineString) {\n          $item.removeClass('disabled');\n        } else {\n          $item.addClass('disabled');\n        }\n      }\n    });\n  }\n};\n\n\n/**\n * Called when a menu item is clicked. Export the features to the selected\n * format.\n * @param {string} format Format.\n * @param {jQuery.Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuItemClick_ = function(format, event) {\n  if (!$(event.target.parentElement).hasClass('disabled')) {\n    const features = this.features.getArray();\n    this.featureHelper_.export(features, format);\n  }\n};\n\n\n/**\n * Cleanup event listeners and remove the menu from DOM, if any.\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  const id = this.id_;\n\n  this.element_.off(['click', id].join('.'));\n\n  if (this.menu_) {\n    this.menu_.remove();\n    this.items_.forEach(($item) => {\n      $item.off(['click', id].join('.'));\n    });\n    this.items_.length = 0;\n    this.menu_ = null;\n  }\n};\n\n\nexports.controller(\n  'ngeoExportfeaturesController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.sortableComponent\n */\nimport 'jquery-ui/ui/widgets/sortable.js';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoSortable', []);\n\n\n/**\n * Provides a directive that allows drag-and-dropping DOM items between them.\n * It also changes the order of elements in the given array.\n *\n * It is typically used together with `ng-repeat`, for example for re-ordering\n * layers in a map.\n *\n * Example:\n *\n *     <ul ngeo-sortable=\"ctrl.layers\"\n *         ngeo-sortable-options=\"{handleClassName: 'ngeo-sortable-handle'}\">\n *       <li ng-repeat=\"layer in ctrl.layers\">\n *         <span class=\"ngeo-sortable-handle\">handle</span>{{layer.get('name')}}\n *       </li>\n *     </ul>\n *\n * The value of the \"ngeo-sortable\" attribute is an expression which evaluates\n * to an array (an array of layers in the above example). This is the array\n * that is re-ordered after a drag-and-drop.\n *\n * The element with the class \"ngeo-sortable-handle\" is the \"drag handle\".\n * It is required.\n *\n * This directives uses `$watchCollection` to watch the \"sortable\" array. So\n * if some outside code adds/removes elements to/from the \"sortable\" array,\n * the \"ngeoSortable\" directive will pick it up.\n *\n * See our live example: [../examples/layerorder.html](../examples/layerorder.html)\n *\n * @htmlAttribute {Array.<ol.layer.Base>} ngeo-sortable The layers to sort.\n * @htmlAttribute {!ngeox.miscSortableOptions} ngeo-sortable-options The options.\n * @htmlAttribute {Function(angular.JQLite, Array)?} ngeo-sortable-callback\n *     Callback function called after the move end. The Function will be called\n *     with the element and the sort array as arguments.\n * @htmlAttribute {Object?} ngeo-sortable-callback-ctx Context to apply at\n *     the call of the callback function.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoSortable\n */\nexports.component_ = function($timeout) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const sortable = /** @type {Array} */\n              (scope.$eval(attrs['ngeoSortable'])) || [];\n      googAsserts.assert(Array.isArray(sortable));\n\n      scope.$watchCollection(() => sortable, () => {\n        sortable.length && $timeout(resetUpDragDrop, 0);\n      });\n\n      const optionsObject = scope.$eval(attrs['ngeoSortableOptions']);\n      const options = getOptions(optionsObject);\n\n      const callbackFn = scope.$eval(attrs['ngeoSortableCallback']);\n      const callbackCtx = scope.$eval(attrs['ngeoSortableCallbackCtx']);\n\n      /**\n       * This function resets drag&drop for the list. It is called each\n       * time the sortable array changes (see $watchCollection above).\n       */\n      function resetUpDragDrop() {\n        // Add an index to the sortable to allow sorting of the\n        // underlying data.\n        const children = element.children();\n        for (let i = 0; i < children.length; ++i) {\n          angular.element(children[i]).data('idx', i);\n        }\n\n        const sortableElement = $(element);\n\n        // the element is already sortable; reset it.\n        if (sortableElement.data('ui-sortable')) {\n          sortableElement.off('sortupdate');\n          sortableElement.sortable('destroy');\n        }\n\n        const sortableOptions = {\n          'axis': 'y',\n          'classes': {\n            'ui-sortable-helper': options['draggerClassName']\n          }\n        };\n\n        // CSS class of the handle\n        if (options['handleClassName']) {\n          sortableOptions['handle'] = `.${options['handleClassName']}`;\n        }\n\n        // Placeholder for the item being dragged in the sortable list\n        if (options['placeholderClassName']) {\n          sortableOptions['placeholder'] = options['placeholderClassName'];\n          sortableOptions['forcePlaceholderSize'] = true;\n        }\n\n        sortableElement.sortable(sortableOptions);\n\n        // This event is triggered when the user stopped sorting and\n        // the DOM position (i.e. order in the sortable list) has changed.\n        sortableElement.on('sortupdate', (event, ui) => {\n          const oldIndex = $(ui.item[0]).data('idx');\n          const newIndex = ui.item.index();\n\n          // Update (data)-index on dom element to its new position\n          $(ui.item[0]).data('idx', newIndex);\n\n          // Move dragged item to new position\n          scope.$apply(() => {\n            sortable.splice(newIndex, 0, sortable.splice(oldIndex, 1)[0]);\n          });\n\n          // Call the callback function if it exists.\n          if (callbackFn instanceof Function) {\n            callbackFn.apply(callbackCtx, [element, sortable]);\n          }\n        });\n      }\n\n      /**\n       * @param {?} options Options after expression evaluation.\n       * @return {!ngeox.miscSortableOptions} Options object.\n       * @private\n       */\n      function getOptions(options) {\n        let ret;\n        const defaultHandleClassName = 'ngeo-sortable-handle';\n        if (options === undefined) {\n          ret = {'handleClassName': defaultHandleClassName};\n        } else {\n          if (options['handleClassName'] === undefined) {\n            options['handleClassName'] = defaultHandleClassName;\n          }\n          ret = /** @type {ngeox.miscSortableOptions} */ (options);\n        }\n        return ret;\n      }\n\n    }\n  };\n};\n\nexports.directive('ngeoSortable', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.popoverComponent\n */\nimport 'bootstrap/js/tooltip.js';\nimport 'bootstrap/js/popover.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoPopover', []);\n\n\n/**\n * Provides a directive used to display a Bootstrap popover.\n *\n *<div ngeo-popover>\n *  <a ngeo-popover-anchor class=\"btn btn-info\">anchor 1</a>\n *  <div ngeo-popover-content>\n *    <ul>\n *      <li>action 1:\n *        <input type=\"range\"/>\n *      </li>\n *    </ul>\n *  </div>\n *</div>\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopover\n * @return {angular.Directive} The Directive Definition Object.\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoPopoverController as popoverCtrl',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.anchorElm.on('hidden.bs.popover', () => {\n        /**\n         * @type {{inState : Object}}\n         */\n        const popover = ngeoPopoverCtrl.anchorElm.data('bs.popover');\n        popover['inState'].click = false;\n      });\n\n      ngeoPopoverCtrl.anchorElm.on('inserted.bs.popover', () => {\n        ngeoPopoverCtrl.bodyElm.show();\n        ngeoPopoverCtrl.shown = true;\n      });\n\n      ngeoPopoverCtrl.anchorElm.popover({\n        container: 'body',\n        html: true,\n        content: ngeoPopoverCtrl.bodyElm,\n        placement: attrs['ngeoPopoverPlacement'] || 'right'\n      });\n\n      if (attrs['ngeoPopoverDismiss']) {\n        $(attrs['ngeoPopoverDismiss']).on('scroll', () => {\n          ngeoPopoverCtrl.dismissPopover();\n        });\n      }\n\n      scope.$on('$destroy', () => {\n        ngeoPopoverCtrl.anchorElm.popover('destroy');\n        ngeoPopoverCtrl.anchorElm.unbind('inserted.bs.popover');\n        ngeoPopoverCtrl.anchorElm.unbind('hidden.bs.popover');\n      });\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopoverAnchor\n * @return {angular.Directive} The Directive Definition Object\n */\nexports.anchorComponent = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoPopover',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.anchorElm = elem;\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopoverContent\n * @return {angular.Directive} The Directive Definition Object\n */\nexports.contentComponent = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoPopover',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.bodyElm = elem;\n      elem.hide();\n    }\n  };\n};\n\n/**\n * The controller for the 'popover' directive.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoPopoverController\n * @param {angular.Scope} $scope Scope.\n */\nexports.PopoverController_ = function($scope) {\n  /**\n   * The state of the popover (displayed or not)\n   * @type {boolean}\n   * @export\n   */\n  this.shown = false;\n\n  /**\n   * @type {angular.JQLite|undefined}\n   * @export\n   */\n  this.anchorElm = undefined;\n\n  /**\n   * @type {angular.JQLite|undefined}\n   * @export\n   */\n  this.bodyElm = undefined;\n\n  function onMouseDown(clickEvent) {\n    if (this.anchorElm[0] !== clickEvent.target &&\n      this.bodyElm.parent()[0] !== clickEvent.target &\n      this.bodyElm.parent().find(clickEvent.target).length === 0 && this.shown) {\n      this.dismissPopover();\n    }\n  }\n\n  angular.element('body').on('mousedown', onMouseDown.bind(this));\n\n  $scope.$on('$destroy', () => {\n    angular.element('body').off('mousedown', onMouseDown);\n  });\n};\n\n\n/**\n * Dissmiss popover function\n * @export\n */\nexports.PopoverController_.prototype.dismissPopover = function() {\n  this.shown = false;\n  this.anchorElm.popover('hide');\n};\n\n\nexports.controller('NgeoPopoverController', exports.PopoverController_);\nexports.directive('ngeoPopover', exports.component_);\nexports.directive('ngeoPopoverAnchor', exports.anchorComponent);\nexports.directive('ngeoPopoverContent', exports.contentComponent);\n\n\nexport default exports;\n","/**\n * @module gmf.search.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfSearchFulltextSearch from 'gmf/search/FulltextSearch.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscAutoProjection from 'ngeo/misc/AutoProjection.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopoverComponent from 'ngeo/message/popoverComponent.js';\n\nimport ngeoSearchModule from 'ngeo/search/module.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olObj from 'ol/obj.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfSearch', [\n  gmfLayertreeTreeManager.module.name,\n  gmfSearchFulltextSearch.module.name,\n  gmfThemeThemes.module.name,\n  ngeoMiscAutoProjection.module.name,\n  ngeoMiscColorpickerComponent.name,\n  ngeoSearchModule.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessagePopoverComponent.name,\n]);\n\n\n/**\n * @param {angular.JQLite} element Element.\n * @param {angular.Attributes} attrs Attributes.\n * @return {string} Template URL.\n */\nexports.gmfSearchTemplateUrl_ = (element, attrs) => {\n  const templateUrl = attrs['gmfSearchTemplateurl'];\n  return templateUrl !== undefined ? templateUrl :\n    'gmf/search';\n};\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/search', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfSearchTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfSearchTemplateUrl($element, $attrs, gmfSearchTemplateUrl) {\n  return gmfSearchTemplateUrl($element, $attrs);\n}\n\n\n/**\n * A component that allows to search and recenter on a selected\n * result's feature.\n * It can search in multiple GeoJSON datasources.\n * It can filter and group results by a feature's property.\n *\n * This component uses the {@link ngeo.map.FeatureOverlayMgr} to create a\n * feature overlay for drawing features on the map. The application\n * is responsible to initialize the {@link ngeo.map.FeatureOverlayMgr}\n * with the map.\n *\n * Example flat results:\n *\n *      <gmf-search gmf-search-map=\"::ctrl.map\"\n *        gmf-search-options=\"::ctrl.searchOptions\"\n *        gmf-search-styles=\"::ctrl.searchStyles\"\n *        gmf-search-datasources=\"::ctrl.searchDatasources\"\n *        gmf-search-coordinatesprojections=\"::ctrl.searchCoordinatesProjections\">\n *      </gmf-search>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('fulltextsearchUrl', '${request.route_url('fulltextsearch', _query={\"limit\": 20}) | n}');\n *          module.value('gmfSearchGroups', []);\n *          module.constant('gmfSearchActions', [\n *                {action: 'add_theme', title: 'Add a theme'},\n *                {action: 'add_group', title: 'Add a sub theme'},\n *                {action: 'add_layer', title: 'Add a layer'}\n *          ]);\n *        })();\n *      </script>\n *\n * Example with categories:\n *\n *      <gmf-search gmf-search-map=\"::ctrl.map\"\n *        gmf-search-options=\"::ctrl.searchOptions\"\n *        gmf-search-styles=\"::ctrl.searchStyles\"\n *        gmf-search-datasources=\"::ctrl.searchDatasources\"\n *        gmf-search-coordinatesprojections=\"::ctrl.searchCoordinatesProjections\">\n *      </gmf-search>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('fulltextsearchUrl', '${request.route_url('fulltextsearch', _query={\"limit\": 30, \"partitionlimit\": 5}) | n}');\n *          module.value('gmfSearchGroups', ${dumps(fulltextsearch_groups) | n});\n *          module.value('gmfSearchActions', []);\n *        })();\n *     </scriptrchUrl' value in the examples above set three \"_query\" parameters: \"limit\",\n *\n * The 'fulltextsearchUrl' value in the examples above set three \"_query\" parameters: \"limit\",\n * \"partitionlimit\" and \"ranksystem\". For this last one \"ts_rank_cd\" is the only effective value. It's used to\n * order your search results with the \"ts_rank_cd\" ranking system from PostgreSQL module pg_trgm. Without\n * this value, the PostgreSQL function \"similarity\" (module pg_trgm) is used for the ranking. Read the\n * full-text search c2cgeoportal documentation to know more.\n * You can also add these parameters to the \"url\" variable of one (or more) of the\n * gmfx.SearchDirectiveDatasource given to this component (here within the \"ctrl.searchDatasources\"). That\n * allows you to have multiples configurations on one search component.\n *\n * @htmlAttribute {string} gmf-search-input-value The input value (read only).\n * @htmlAttribute {ol.Map} gmf-search-map The map.\n * @htmlAttribute {TypeaheadOptions|undefined} gmf-search-options Addition Typeahead options.\n * @htmlAttribute {gmfx.SearchComponentDatasource} gmf-search-datasource\n *      The datasources.\n * @htmlAttribute {Object.<string, ol.style.Style>}\n *      gmf-search-styles A map of styles to apply on searched features. Keys\n *      must be the 'layer_name' property of features except for coordinates\n *      where the key ifor its style is the value of the constant\n *      'gmf.COORDINATES_LAYER_NAME'. The 'default' key is used to apply the\n *      default style.\n * @htmlAttribute {Array.<string>} gmf-search-coordinatesprojections codes\n *      of supported projections for coordinates search (projections must be\n *      defined in ol3). If not provided, only the map's view projection\n *      format will be supported.\n * @htmlAttribute {ngeox.SearchComponentListeners} gmf-search-listeners\n *      The listeners.\n * @htmlAttribute {boolean=} gmf-search-clearbutton Optional clear button in the input search. Default to true.\n * @htmlAttribute {number=} gmf-search-delay Optional bloodhound request delay in ms. Default to 50 ms.\n * @htmlAttribute {boolean=} gmf-search-colorchooser Optional. Whether to let the user\n *      change the style of the feature on the map. Default is false.\n * @htmlAttribute {number=} gmf-search-maxzoom Optional maximum zoom we will zoom on result, default is 16.\n * @htmlAttribute {function=} gmf-search-on-init Optional function called when the component is initialized.\n * @ngdoc component\n * @ngname gmfSearch\n */\nexports.component_ = {\n  bindings: {\n    'inputValue': '=?gmfSearchInputValue',\n    'placeholder': '@?gmfSearchPlaceholder',\n    'map': '<gmfSearchMap',\n    'datasources': '<gmfSearchDatasources',\n    'typeaheadOptions': '<?gmfSearchOptions',\n    'featuresStyles': '<?gmfSearchStyles',\n    'clearButton': '=?gmfSearchClearbutton',\n    'colorChooser': '<?gmfSearchColorchooser',\n    'coordinatesProjections': '<?gmfSearchCoordinatesprojections',\n    'additionalListeners': '<gmfSearchListeners',\n    'maxZoom': '<?gmfSearchMaxzoom',\n    'delay': '<?gmfSearchDelay',\n    'onInitCallback': '<?gmfSearchOnInit'\n  },\n  controller: 'gmfSearchController',\n  templateUrl: gmfSearchTemplateUrl\n};\n\n\nexports.value('gmfSearchTemplateUrl', exports.gmfSearchTemplateUrl_);\n\n\n// Register the controller in the module\nexports.component('gmfSearch', exports.component_);\n\n\n/**\n * @private\n */\nexports.SearchController_ = class {\n\n  /**\n   * @private\n   * @param {jQuery} $element Element.\n   * @param {angular.Scope} $scope The component's scope.\n   * @param {angular.$compile} $compile Angular compile service.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {ngeo.misc.AutoProjection} ngeoAutoProjection The ngeo coordinates service.\n   * @param {ngeo.search.createGeoJSONBloodhound.Function} ngeoSearchCreateGeoJSONBloodhound The ngeo\n   *     create GeoJSON Bloodhound service.\n   * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n   *     overlay manager service.\n   * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n   * @param {gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n   * @param {gmf.search.FulltextSearch} gmfSearchFulltextSearch gmf Full text search service.\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfSearchController\n   */\n  constructor($element, $scope, $compile, $timeout, $injector,\n    gettextCatalog, ngeoAutoProjection, ngeoSearchCreateGeoJSONBloodhound,\n    ngeoFeatureOverlayMgr, gmfThemes, gmfTreeManager, gmfSearchFulltextSearch) {\n\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {angular.$compile}\n     * @private\n     */\n    this.compile_ = $compile;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    /**\n     * @type {gmf.layertree.TreeManager}\n     * @private\n     */\n    this.gmfTreeManager_ = gmfTreeManager;\n\n    /**\n     * @type {gmf.search.FulltextSearch}\n     * @private\n     */\n    this.fullTextSearch_ = gmfSearchFulltextSearch;\n\n    /**\n     * @type {ngeo.search.createGeoJSONBloodhound.Function}\n     * @private\n     */\n    this.ngeoSearchCreateGeoJSONBloodhound_ = ngeoSearchCreateGeoJSONBloodhound;\n\n    /**\n     * @type {ngeo.map.FeatureOverlayMgr}\n     * @private\n     */\n    this.ngeoFeatureOverlayMgr = ngeoFeatureOverlayMgr;\n\n    /**\n     * @type {ngeo.statemanager.Location|undefined}\n     * @private\n     */\n    this.ngeoLocation_;\n\n    if ($injector.has('ngeoLocation')) {\n      this.ngeoLocation_ = $injector.get('ngeoLocation');\n    }\n\n    /**\n     * @type {ngeo.misc.AutoProjection}\n     * @private\n     */\n    this.ngeoAutoProjection_ = ngeoAutoProjection;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {Object}\n     * @private\n     */\n    this.styles_ = {};\n\n    /**\n     * @type {function()}\n     * @export\n     */\n    this.onInitCallback;\n\n    /**\n     * Whether or not to show a button to clear the search text.\n     * Default to true.\n     * @type {boolean}\n     * @export\n     */\n    this.clearButton;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.colorChooser;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.placeholder;\n\n    /**\n     * @type {number}\n     * @export\n     */\n    this.delay;\n\n    /**\n     * The maximum zoom we will zoom on result.\n     * @type {number}\n     * @export\n     */\n    this.maxZoom = 16;\n\n    /**\n     * Supported projections for coordinates search.\n     * @type {Array.<ol.proj.Projection>}\n     * @export\n     */\n    this.coordinatesProjections;\n\n    /**\n     * @type {ngeo.map.FeatureOverlay}\n     * @private\n     */\n    this.featureOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n    /**\n     * @type {Array.<gmfx.SearchComponentDatasource>}\n     * @export\n     */\n    this.datasources = [];\n\n    /**\n     * @type {TypeaheadOptions}\n     * @export\n     */\n    this.typeaheadOptions;\n\n    /**\n     * @type {TypeaheadOptions}\n     * @export\n     */\n    this.options = /** @type {TypeaheadOptions} */ ({\n      highlight: true\n    });\n\n    /**\n     * @type {Object.<string, ol.style.Style>}\n     * @export\n     */\n    this.featuresStyles;\n\n    /**\n     * @type {Array.<TypeaheadDataset>}\n     * @export\n     */\n    this.datasets = [];\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.inputValue = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.color;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.displayColorPicker = false;\n\n    /**\n     * @type {ngeox.SearchDirectiveListeners}\n     * @export\n     */\n    this.listeners;\n\n    /**\n     * @type {ngeox.SearchDirectiveListeners}\n     * @export\n     */\n    this.additionalListeners;\n  }\n\n\n  /**\n   * Called on initialization of the controller.\n   */\n  $onInit() {\n    const gettextCatalog = this.gettextCatalog_;\n    this.clearButton = this.clearButton !== false;\n    this.colorChooser = this.colorChooser === true;\n    if (this.delay === undefined) {\n      this.delay = 50;\n    }\n    this.placeholder = this.placeholder !== undefined ? this.placeholder :\n      gettextCatalog.getString('Search…');\n\n    // Init coordinates projections\n    let coordProj = this.coordinatesProjections;\n    if (coordProj === undefined) {\n      coordProj = [this.map.getView().getProjection()];\n    } else {\n      coordProj = this.ngeoAutoProjection_.getProjectionList(\n        /** @type {Array.<string>} */ (coordProj)\n      );\n    }\n    this.coordinatesProjections = coordProj;\n\n    if (!this.clearButton) {\n      // Empty the search field on focus and blur.\n      this.element_.find('input').on('focus blur', () => {\n        this.clear();\n      });\n    }\n\n    if (this.onInitCallback) {\n      this.onInitCallback();\n    }\n\n    this.initStyles_();\n\n    this.featureOverlay_.setStyle(this.getSearchStyle_.bind(this));\n\n    if (this.typeaheadOptions) {\n      olObj.assign(this.options, this.typeaheadOptions);\n    }\n\n    this.initDatasets_();\n\n    this.scope_.$watch(\n      () => this.color,\n      this.setStyleColor.bind(this)\n    );\n\n    this.listeners = this.mergeListeners_(\n      this.additionalListeners,\n      /** @type {ngeox.SearchDirectiveListeners} */ ({\n        select: this.select_.bind(this),\n        close: this.close_.bind(this),\n        datasetsempty: this.datasetsempty_.bind(this)\n      })\n    );\n\n    if (this.ngeoLocation_) {\n      const searchQuery = this.ngeoLocation_.getParam('search');\n      if (searchQuery) {\n        let resultIndex = 1;\n        if (this.ngeoLocation_.getParam('search-select-index')) {\n          resultIndex = parseInt(this.ngeoLocation_.getParam('search-select-index'), 10);\n        }\n        let mapZoom;\n        if (this.ngeoLocation_.getParam('search-maxzoom')) {\n          mapZoom = parseInt(this.ngeoLocation_.getParam('search-maxzoom'), 10);\n        } else if (this.ngeoLocation_.getParam('map_zoom')) {\n          mapZoom = parseInt(this.ngeoLocation_.getParam('map_zoom'), 10);\n        }\n        this.fulltextsearch_(searchQuery, resultIndex, mapZoom);\n      }\n    }\n  }\n\n\n  /**\n   * Merges the custom listeners received via the component attributes and the\n   * listeners that are needed for this controller to function (close and select).\n   * @param {ngeox.SearchDirectiveListeners} additionalListeners Custom provided\n   *    listeners.\n   * @param {ngeox.SearchDirectiveListeners} listeners Default listeners.\n   * @return {ngeox.SearchDirectiveListeners} Merged listeners.\n   * @private\n   */\n  mergeListeners_(additionalListeners, listeners) {\n    if (additionalListeners === undefined) {\n      return listeners;\n    }\n    return {\n      open: additionalListeners.open,\n      close: additionalListeners.close === undefined ?\n        listeners.close : function() {\n          listeners.close();\n          additionalListeners.close();\n        },\n      cursorchange: additionalListeners.cursorchange,\n      datasetsempty: additionalListeners.datasetsempty,\n      select: additionalListeners.select === undefined ?\n        listeners.select : function(evt, obj, dataset) {\n          listeners.select(evt, obj, dataset);\n          additionalListeners.select(evt, obj, dataset);\n        },\n      autocomplete: additionalListeners.autocomplete\n    };\n  }\n\n\n  /**\n   * Initialize datasets for the search\n   * @private\n   */\n  initDatasets_() {\n    const gettextCatalog = this.gettextCatalog_;\n    for (let i = 0; i < this.datasources.length; i++) {\n      const datasource = this.datasources[i];\n\n      /** @type {Array.<string>} */\n      const groupValues = datasource.groupValues !== undefined ? datasource.groupValues : [];\n      /** @type {Array.<string>} */\n      const groupActions = datasource.groupActions ? datasource.groupActions : [];\n      const filters = [];\n\n      if (groupValues.length === 0) {\n        filters.push({\n          'title': '',\n          'filter': this.filterLayername_()\n        });\n      } else {\n        groupValues.forEach(function(layerName) {\n          filters.push({\n            'title': layerName,\n            'filter': this.filterLayername_(layerName)\n          });\n        }, this);\n      }\n\n      groupActions.forEach(function(action) {\n        filters.push({\n          'title': gettextCatalog.getString(action['title']),\n          'filter': this.filterAction_(action['action'])\n        });\n      }, this);\n\n      filters.forEach(function(filter) {\n        this.datasets.push(this.createDataset_({\n          bloodhoundOptions: datasource.bloodhoundOptions,\n          datasetTitle: filter['title'],\n          groupsKey: 'layer_name',\n          labelKey: datasource.labelKey,\n          projection: datasource.projection,\n          typeaheadDatasetOptions: datasource.typeaheadDatasetOptions,\n          url: datasource.url\n        }, filter['filter']));\n      }, this);\n    }\n\n    // For searching coordinates\n    this.datasets.push({\n      source: this.createSearchCoordinates_(this.map.getView()),\n      name: 'coordinates',\n      display: 'label',\n      templates: {\n        header: () => {\n          const header = gettextCatalog.getString('Recenter to');\n          return `<div class=\"gmf-search-header\" translate>${header}</div>`;\n        },\n        suggestion: (suggestion) => {\n          const coordinates = suggestion['label'];\n\n          let html = `<p class=\"gmf-search-label\">${coordinates}</p>`;\n          html = `<div class=\"gmf-search-datum\">${html}</div>`;\n          return html;\n        }\n      }\n    });\n  }\n\n\n  /**\n   * @param {gmfx.SearchComponentDatasource} config The config of the dataset.\n   * @param {(function(GeoJSONFeature): boolean)=} opt_filter A filter function\n   *     based on a GeoJSONFeaturesCollection's array.\n   * @return {TypeaheadDataset} A typeahead dataset.\n   * @private\n   */\n  createDataset_(config, opt_filter) {\n    const gettextCatalog = this.gettextCatalog_;\n    const componentScope = this.scope_;\n    const compile = this.compile_;\n    const bloodhoundEngine = this.createAndInitBloodhound_(config, opt_filter);\n    const typeaheadDataset = /** @type {TypeaheadDataset} */ ({\n      limit: Infinity,\n      source: bloodhoundEngine.ttAdapter(),\n      display: (suggestion) => {\n        const feature = /** @type {ol.Feature} */ (suggestion);\n        return feature.get(config.labelKey);\n      },\n      templates: /* TypeaheadTemplates */ ({\n        header: () => {\n          if (config.datasetTitle === undefined) {\n            return '';\n          } else {\n            const header = gettextCatalog.getString(config.datasetTitle);\n            return `<div class=\"gmf-search-header\">${header}</div>`;\n          }\n        },\n        suggestion: (suggestion) => {\n          const feature = /** @type {ol.Feature} */ (suggestion);\n\n          const scope = componentScope.$new(true);\n          scope['feature'] = feature;\n\n          let html = `<p class=\"gmf-search-label\" translate>${\n            feature.get(config.labelKey)}</p>`;\n          html += `<p class=\"gmf-search-group\" translate>${feature.get('layer_name') ||\n                  config.datasetTitle}</p>`;\n          html = `<div class=\"gmf-search-datum\">${html}</div>`;\n          return compile(html)(scope);\n        }\n      })\n    });\n    if (config.typeaheadDatasetOptions) {\n      olObj.assign(typeaheadDataset, config.typeaheadDatasetOptions);\n    }\n    return typeaheadDataset;\n  }\n\n\n  /**\n   * @param {string} action The action to keep.\n   * @return {(function(GeoJSONFeature): boolean)} A filter function based on a\n   *     GeoJSONFeaturesCollection's array.\n   * @private\n   */\n  filterAction_(action) {\n    return (\n    /**\n         * @param {GeoJSONFeature} feature\n         * @return {boolean}\n         */\n      function(feature) {\n        const properties = feature['properties'];\n        if (properties['actions']) {\n          // result is an action (add_theme, add_group, ...)\n          // add it to the corresponding group\n          return !properties['layer_name'] && properties['actions'].some(act => act.action === action);\n        } else {\n          return false;\n        }\n      }\n    );\n  }\n\n\n  /**\n   * @param {string=} opt_layerName The layerName to keep. If null, keep all layers\n   *     (In all cases, except actions layers).\n   * @return {(function(GeoJSONFeature): boolean)} A filter function based on a\n   *     GeoJSONFeaturesCollection's array.\n   * @private\n   */\n  filterLayername_(opt_layerName) {\n    return (\n    /**\n         * @param {GeoJSONFeature} feature\n         * @return {boolean}\n         */\n      function(feature) {\n        const featureLayerName = feature['properties']['layer_name'];\n        // Keep only layers with layer_name (don't keep action layers).\n        if (featureLayerName === undefined) {\n          return false;\n        }\n        if (opt_layerName === undefined) {\n          return true;\n        }\n        return featureLayerName === opt_layerName;\n      }\n    );\n  }\n\n\n  /**\n   * @param {gmfx.SearchComponentDatasource} config The config of the dataset.\n   * @param {(function(GeoJSONFeature): boolean)=} opt_filter Afilter function\n   *     based on a GeoJSONFeaturesCollection's array.\n   * @return {Bloodhound} The bloodhound engine.\n   * @private\n   */\n  createAndInitBloodhound_(config, opt_filter) {\n    const mapProjectionCode = this.map.getView().getProjection().getCode();\n    const remoteOptions = this.getBloodhoudRemoteOptions_();\n    const bloodhound = this.ngeoSearchCreateGeoJSONBloodhound_(config.url, opt_filter,\n      olProj.get(mapProjectionCode), olProj.get(config.projection),\n      config.bloodhoundOptions, remoteOptions);\n    bloodhound.initialize();\n    return bloodhound;\n  }\n\n\n  /**\n   * @return {BloodhoundRemoteOptions} Options.\n   * @private\n   */\n  getBloodhoudRemoteOptions_() {\n    const gettextCatalog = this.gettextCatalog_;\n    return {\n      rateLimitWait: this.delay,\n      prepare: (query, settings) => {\n        const url = settings.url;\n        const lang = gettextCatalog.currentLanguage;\n        const interfaceName = 'mobile'; // FIXME dynamic interfaces\n        settings.xhrFields = {\n          withCredentials: true\n        };\n        settings.url = olUri.appendParams(url, {\n          'query': query,\n          'lang': lang,\n          'interface': interfaceName\n        });\n        return settings;\n      }\n    };\n  }\n\n\n  /**\n   * @param {ol.View} view View.\n   * @return {function(string, function(Object))} function defining parameters for the search suggestions.\n   * @private\n   */\n  createSearchCoordinates_(view) {\n    const viewProjection = view.getProjection();\n    const extent = viewProjection.getExtent();\n    return function(query, callback) {\n      const suggestions = [];\n      const coordinates = this.ngeoAutoProjection_.stringToCoordinates(query);\n      if (coordinates === null) {\n        return;\n      }\n      const position = this.ngeoAutoProjection_.tryProjectionsWithInversion(coordinates,\n        extent, viewProjection, this.coordinatesProjections);\n      if (position === null) {\n        return;\n      }\n      suggestions.push({\n        label: coordinates.join(' '),\n        position: position,\n        'tt_source': 'coordinates'\n      });\n      callback(suggestions);\n    }.bind(this);\n  }\n\n\n  /**\n   * Init the style object for the search results. It set defaults for the\n   * coordinates and the polygon styles, and both can be overloaded from component\n   * attributes. The styles from component attributes can specify custom styles\n   * for each search group.\n   * @private\n   */\n  initStyles_() {\n    this.styles_[gmfBase.COORDINATES_LAYER_NAME] = new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({color: [0, 0, 0, 0.7], width: 2}),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    });\n    const fill = new olStyleFill({\n      color: [65, 134, 240, 0.5]\n    });\n    const stroke = new olStyleStroke({\n      color: [65, 134, 240, 1],\n      width: 2\n    });\n    this.styles_['default'] = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke\n    });\n    const customStyles = this.featuresStyles || {};\n    olObj.assign(this.styles_, customStyles);\n  }\n\n  /**\n   * Style for search results.\n   * @param {null|ol.Feature|ol.render.Feature} feature The searched feature.\n   * @param {number} resolution The current resolution of the map.\n   * @return {ol.style.Style} A style for this kind of features.\n   * @private\n   */\n  getSearchStyle_(feature, resolution) {\n    googAsserts.assert(feature);\n    const style = this.styles_[feature.get('layer_name')] || this.styles_['default'];\n    if (this.color) {\n      const color = olColor.asArray(this.color);\n\n      const strokeColor = color.slice();\n      // 100% opacity for the stroke color\n      strokeColor[3] = 1;\n\n      const fillColor = color.slice();\n      // 50% opacity for the fill color\n      fillColor[3] = 0.5;\n\n      const strokeStyle = style.getStroke();\n      if (strokeStyle) {\n        strokeStyle.setColor(strokeColor);\n      }\n      const fillStyle = style.getFill();\n      if (fillStyle) {\n        fillStyle.setColor(fillColor);\n      }\n      const image = style.getImage();\n      if (image) {\n        style.setImage(new olStyleCircle({\n          fill: new olStyleFill({color: fillColor}),\n          radius: 5,\n          stroke: new olStyleStroke({color: strokeColor})\n        }));\n      }\n    }\n    return style;\n  }\n\n  /**\n   * Set a new color for the search feature style.\n   * @param {string} color The color to set.\n   * @export\n   */\n  setStyleColor(color) {\n    if (color) {\n      this.color = color;\n      this.ngeoFeatureOverlayMgr.getLayer().changed();\n    }\n  }\n\n  /**\n   * @private\n   */\n  setTTDropdownVisibility_() {\n    if (this.clearButton) {\n      const ttDropdown = this.element_.find('.twitter-typeahead .tt-menu');\n      (this.inputValue) ? ttDropdown.show() : ttDropdown.hide();\n    }\n  }\n\n\n  /**\n   * @export\n   */\n  onClearButton() {\n    this.featureOverlay_.clear();\n    this.clear();\n  }\n\n\n  /**\n   * @export\n   */\n  clear() {\n    const typeahead = this.element_.find('.twitter-typeahead');\n    const ttmenu = typeahead.children('.tt-menu');\n    const inputs = typeahead.children('input');\n    // clear model value, the 'real' input value and tt's suggestions\n    this.inputValue = '';\n    $(inputs[1]).typeahead('val', '');\n    ttmenu.children('.tt-dataset').empty();\n    this.setTTDropdownVisibility_();\n    this.displayColorPicker = false;\n  }\n\n\n  /**\n   * @export\n   */\n  blur() {\n    const typeahead = this.element_.find('.twitter-typeahead');\n    const inputs = typeahead.children('input');\n    // Blur as soon as possible in digest loops\n    this.timeout_(() => {\n      $(inputs[1]).blur();\n    });\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {Object|ol.Feature} suggestion Suggestion.\n   * @param {TypeaheadDataset} dataset Dataset.\n   * @private\n   */\n  select_(event, suggestion, dataset) {\n    if (suggestion['tt_source'] === 'coordinates') {\n      const geom = new olGeomPoint(suggestion['position']);\n\n      this.featureOverlay_.clear();\n      this.featureOverlay_.addFeature(new olFeature({\n        geometry: geom,\n        'layer_name': gmfBase.COORDINATES_LAYER_NAME\n      }));\n      this.map.getView().setCenter(suggestion['position']);\n      this.leaveSearch_();\n    } else {\n      googAsserts.assertInstanceof(suggestion, olFeature);\n      this.selectFromGMF_(event, suggestion, dataset);\n    }\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {ol.Feature} feature Feature.\n   * @param {TypeaheadDataset} dataset Dataset.\n   * @private\n   */\n  selectFromGMF_(event, feature, dataset) {\n    const actions = feature.get('actions');\n    const featureGeometry = /** @type {ol.geom.SimpleGeometry} */\n        (feature.getGeometry());\n    if (actions) {\n      for (let i = 0, ii = actions.length; i < ii; i++) {\n        const action = actions[i];\n        const actionName = action['action'];\n        const actionData = action['data'];\n        if (actionName == 'add_theme') {\n          this.gmfThemes_.getThemesObject().then((themes) => {\n            const theme = gmfThemeThemes.findThemeByName(themes, actionData);\n            if (theme) {\n              this.gmfTreeManager_.addFirstLevelGroups(theme.children);\n            }\n          });\n        } else if (actionName == 'add_group') {\n          this.gmfTreeManager_.addGroupByName(actionData, true);\n        } else if (actionName == 'add_layer') {\n          const groupActions = /** @type {Array.<string>} */ (\n            this.datasources[0].groupActions);\n          let datasourcesActionsHaveAddLayer;\n          groupActions.forEach((groupAction) => {\n            if (groupAction['action'] === 'add_layer') {\n              return datasourcesActionsHaveAddLayer = true;\n            }\n          });\n          if (datasourcesActionsHaveAddLayer) {\n            const silent = !!featureGeometry;\n            this.gmfTreeManager_.addGroupByLayerName(actionData, true, silent);\n          }\n        }\n      }\n    }\n\n    const size = this.map.getSize();\n    if (featureGeometry && size) {\n      const view = this.map.getView();\n      this.featureOverlay_.clear();\n      this.featureOverlay_.addFeature(feature);\n      this.displayColorPicker = true;\n      const fitArray = featureGeometry.getType() === 'GeometryCollection' ?\n        featureGeometry.getExtent() : featureGeometry;\n      view.fit(fitArray, {\n        size: size,\n        maxZoom: this.maxZoom\n      });\n    }\n    this.leaveSearch_();\n  }\n\n\n  /**\n   * @private\n   */\n  leaveSearch_() {\n    if (!this.clearButton) {\n      this.clear();\n    }\n    this.blur();\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @private\n   */\n  close_(event) {\n    if (!this.clearButton) {\n      this.setTTDropdownVisibility_();\n    }\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {string} query Query.\n   * @param {boolean} empty Empty.\n   * @private\n   */\n  datasetsempty_(event, query, empty) {\n    // workaround to display a 'no result found' in the search result when all of\n    // the datasets are empty.\n    // based on https://github.com/twitter/typeahead.js/issues/780#issuecomment-251554452\n    // FIXME: remove this workaround when https://github.com/corejavascript/typeahead.js/issues/60 is fixed\n\n    const menu = this.element_.find('.twitter-typeahead .tt-menu');\n    const message = menu.children('.gmf-search-no-results');\n    if (message.length == 0) {\n      const div = $('<div class=\"gmf-search-no-results\" translate>No result found</div>');\n      menu.append(div);\n    }\n    if (empty) {\n      message.show();\n      menu.addClass('gmf-search-no-results');\n    } else {\n      menu.removeClass('gmf-search-no-results');\n      message.hide();\n    }\n  }\n\n\n  /**\n   * Performs a full-text search and centers the map on the first search result.\n   * @param {string} query Search query.\n   * @param {number} resultIndex Return nth result instead.\n   * @param {number=} opt_zoom Optional zoom level.\n   * @private\n   */\n  fulltextsearch_(query, resultIndex, opt_zoom) {\n    if (resultIndex < 1) { // can't be lower than one\n      resultIndex = 1;\n    }\n    this.fullTextSearch_.search(query, {'limit': resultIndex})\n      .then((data) => {\n        if (data && data.features[resultIndex - 1]) {\n          const format = new olFormatGeoJSON();\n          const feature = format.readFeature(data.features[resultIndex - 1]);\n          this.featureOverlay_.addFeature(feature);\n          const fitOptions = /** @type {olx.view.FitOptions} */ ({});\n          if (opt_zoom !== undefined) {\n            fitOptions.maxZoom = opt_zoom;\n            fitOptions.size = this.map.getSize();\n          }\n          this.map.getView().fit(feature.getGeometry().getExtent(), fitOptions);\n          this.inputValue = /** @type {string} */ (feature.get('label'));\n        }\n      });\n  }\n};\n\n\n// Register the controller in the module\nexports.controller('gmfSearchController', exports.SearchController_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.recenter\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.syncArrays\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * Provides a function that synchronizes two arrays, arr1 and\n * arr2. arr2 is a subset of arr1, it includes the elements of arr1 that passes\n * the filter. When elements are added to/removed from arr1, arr2 is updated to\n * include the elements of arr1 that pass the filter. When the order of\n * elements in arr2 changes, arr1 is reordered to have the same order as arr2.\n *\n * This can for example be used to synchronize the array of layers in the map\n * with the array of selected layers, where layers may be added to/removed from\n * the map, and the order of selected layers may change.\n *\n *     let dereg = ngeoSyncArrays(map.getLayers().getArray(), selectedLayers,\n *         true, scope, function(layer) {\n *           // exclude the layer at index 0 in the map\n *           return map.getLayers().indexOf(layer) !== 0;\n *         });\n *\n * This will return a function that can be called to cancel synchronization.\n *\n * @param {Array.<T>} arr1 Array 1.\n * @param {Array.<T>} arr2 Array 2.\n * @param {boolean} reverse `true` if arr2 is in reverse order, `false`\n *     otherwise.\n * @param {angular.Scope} scope Angular scope. Used to watch arr1 and arr2\n *     using $watchCollection.\n * @param {function(T):boolean} filter Filter function.\n * @return {function()} Function to call to stop synchronization\n * @template T\n */\nconst exports = function(arr1, arr2, reverse, scope, filter) {\n\n\n  // Update arr2 when elements are added to, or removed from, arr1.\n\n  const dereg1 = scope.$watchCollection(() => arr1, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = arr1.length - 1, j = 0; i >= 0; --i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    }\n    arr2.length = j;\n  });\n\n\n  // Update arr1 when the order of elements changes in arr2.\n\n  const dereg2 = scope.$watchCollection(() => arr2, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = 0, ii = arr1.length, j = arr2.length - 1; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j--];\n        }\n      }\n      googAsserts.assert(j == -1);\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j++];\n        }\n      }\n      googAsserts.assert(j == arr2.length);\n    }\n  });\n\n  return function() {\n    dereg1();\n    dereg2();\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.layertree.component\n */\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\n\nimport 'bootstrap/js/collapse.js'; // needed to collapse a layertree\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoLayertree', [\n  ngeoLayertreeController.module.name\n]);\n\n\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoLayertreeTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/layertree';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/layertree', require('./component.html'));\n});\n\n\n/**\n * Provides the \"ngeoLayertree\" directive, a directive for\n * creating layer trees in application.\n *\n * The directive assumes that tree nodes that are not leaves have a \"children\"\n * property referencing an array of child nodes.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\">\n *      </div>\n *\n * The \"ngeo-layertree\", \"ngeo-layertree-map\" and\n * \"ngeo-layertree-nodelayer\" attributes are mandatory attributes.\n *\n * - \"ngeo-layertree\" specifies an expression providing the tree. The\n *   directive watches that expression, making it possible to retrieve\n *   the tree data through Ajax.\n *\n * - \"ngeo-layertree-map\" specifies an expression providing the OpenLayers\n *   map. The directive doesn't watch that expression.\n *\n * - The \"ngeo-layertree-nodelayer\" specifies an expression providing the\n *   layer for a given node. In most cases that expression will be function\n *   call with \"node\" as the argument to the function call. E.g.\n *   \"ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\".\n *\n * - The \"ngeo-layertree-listeners\" specifies an expression providing a function\n *   to bind scope events to customs functions. You'll must set the listener on\n *   the \"treeScope\" and probably use \"treeCtrl\" as context. E.g.\n *   \"ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\".\n *\n * The directive comes with a default template. That template assumes that\n * tree nodes that are not leaves have a \"children\" property referencing an\n * array of child nodes. It also assumes that nodes have a \"name\" property.\n *\n * By default the directive uses \"layertree.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoLayertreeTemplateUrl\" value (using\n * app.module.value('ngeoLayertreeTemplateUrl', 'path/layertree.html'), or\n * by adding an \"ngeo-layertree-templateurl\" attribute to the element.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-templateurl=\"path/to/layertree.html\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\"\n *      </div>\n *\n * The directive has its own scope, but it is not an isolate scope. That scope\n * has a \"layertreeCtrl\" property which is a reference to the directive's\n * controller: \"layertreeCtrl\". You can refer to that property in a custom\n * template for example.\n *\n * See our live example: [../examples/layertree.html](../examples/layertree.html)\n *\n * @htmlAttribute {Object} ngeo-layertree One theme (JSON).\n * @htmlAttribute {string} ngeo-layertree-templateurl The template URL.\n * @htmlAttribute {ol.Map} ngeo-layertree-map The map.\n * @htmlAttribute {string} ngeo-layertree-nodelayer Expression that will be parsed\n *      to be a {@link Function} that return a {@link ol.layer.Layer}\n *      with the argument:\n *      {\n *          'node': {@link Object}|undefined,\n *          'depth': {@link number}\n *      }\n * @htmlAttribute {string} ngeo-layertree-nodelayerexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-nodelayer}.\n * @htmlAttribute {string} ngeo-layertree-listeners Expression that will be parsed\n *      to be a {@link Function} with the argument:\n *      {\n *          'treeScope': !{@link angular.Scope},\n *          'treeCtrl': {@link ngeo.layertree.Controller}\n *      }\n * @htmlAttribute {string} ngeo-layertree-listenersexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-listeners}.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoLayertreeTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoLayertree\n */\nexports.directive_ = function(ngeoLayertreeTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: ngeoLayertreeTemplateUrl,\n    controller: ngeoLayertreeController\n  };\n};\n\n\nexports.directive('ngeoLayertree', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\n\n/** @suppress {extraRequire} */\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\n\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoLayertreeComponent from 'ngeo/layertree/component.js';\n\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscSyncArrays from 'ngeo/misc/syncArrays.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\nimport 'bootstrap/js/collapse.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeComponent', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfPermalinkPermalink.module.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeComponent.name,\n  ngeoLayertreeController.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\n\n// Overrides the path to the layertree template (used by each node, except\n// the root node that path is defined by the gmfLayertreeTemplate value.\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => 'gmf/layertree');\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree', require('./component.html'));\n});\n\n\nexports.value('gmfLayertreeTemplate',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const subTemplateUrl = 'gmf/layertree';\n    return '<div ngeo-layertree=\"gmfLayertreeCtrl.root\" ' +\n          'ngeo-layertree-map=\"gmfLayertreeCtrl.map\" ' +\n          'ngeo-layertree-nodelayer=\"gmfLayertreeCtrl.getLayer(treeCtrl)\" ' +\n          'ngeo-layertree-listeners=\"gmfLayertreeCtrl.listeners(treeScope, treeCtrl)\" ' +\n          `ngeo-layertree-templateurl=\"${subTemplateUrl}\">` +\n          '</div>';\n  }\n);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfLayertreeTemplate Template function.\n * @return {string} Template.\n * @ngInject\n */\nfunction gmfLayertreeTemplate($element, $attrs, gmfLayertreeTemplate) {\n  return gmfLayertreeTemplate($element, $attrs);\n}\n\n\n/**\n * This component creates a layertree based on the c2cgeoportal JSON themes\n * source and a {@link ngeo.layertreeComponent}. The controller used by this\n * component defines some functions for each node that are created by a default\n * template. This default template can be overridden by setting the value\n * 'gmf.layertreeTemplateUrl' but you will have to adapt the\n * ngeoLayertreeTemplateUrl value too (to define the children's nodes template\n * path).\n *\n * Example:\n *\n *      <gmf-layertree\n *        gmf-layertree-dimensions=\"ctrl.dimensions\"\n *        gmf-layertree-map=\"ctrl.map\">\n *      </gmf-layertree>\n *\n * You can add an attribute 'gmf-layertree-openlinksinnewwindow=\"::true\"' to open\n * metadata URLs in a new window. By default, and in the default template,\n * links will be opened in a popup (The window.gmfx.openIframePopup function must be available !)\n *\n * Used UI metadata:\n *\n *  * isChecked: if 'false' the layer visibility will be set to false.\n *  * iconUrl: layer icon full URL.\n *  * legendRule: WMS rule used to get a layer icon.\n *  * isLegendExpanded: if 'true' the legend is expanded by default.\n *  * metadataUrl: Display a popup with the content of the given URL if\n *    possible also open a new window.\n *\n * @htmlAttribute {ol.Map} gmf-layertree-map The map.\n * @htmlAttribute {Object<string, string>|undefined} gmf-layertree-dimensions Global dimensions object.\n * @htmlAttribute {boolean|undefined} gmf-layertree-openlinksinnewwindow if true, open\n *     metadataURLs in a new window. Otherwise open them in a popup.\n *\n * @ngdoc component\n * @ngname gmfLayertreeComponent\n */\nexports.component_ = {\n  controller: 'GmfLayertreeController as gmfLayertreeCtrl',\n  bindings: {\n    'map': '=gmfLayertreeMap',\n    'dimensions': '=?gmfLayertreeDimensions',\n    'openLinksInNewWindow': '<?gmfLayertreeOpenlinksinnewwindow',\n  },\n  template: gmfLayertreeTemplate\n};\n\nexports.component('gmfLayertree', exports.component_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n *     The Gmf value service that determines the data source currently being\n *     filtered.\n * @param {!gmf.datasource.ExternalDataSourcesManager}\n *     gmfExternalDataSourcesManager The Gmf external data sources manager\n *     service. Used here to fetch the external WMS groups.\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n * @param {!gmf.layertree.SyncLayertreeMap} gmfSyncLayertreeMap gmfSyncLayertreeMap service.\n * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {!gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname gmfLayertreeController\n */\nexports.Controller_ = function($element, $scope, ngeoLayerHelper, gmfDataSourceBeingFiltered,\n  gmfExternalDataSourcesManager, gmfPermalink, gmfTreeManager, gmfSyncLayertreeMap, ngeoWMSTime, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {?Object<string, string>}\n   * @export\n   */\n  this.dimensions;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {gmfx.datasource.DataSourceBeingFiltered}\n   * @export\n   */\n  this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n  /**\n   * @type {!gmf.datasource.ExternalDataSourcesManager}\n   * @export\n   */\n  this.gmfExternalDataSourcesManager = gmfExternalDataSourcesManager;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  const root = gmfTreeManager.root;\n  googAsserts.assert(root);\n\n  /**\n   * @type {!gmfThemes.GmfRootNode}\n   * @export\n   */\n  this.root = root;\n\n  /**\n   * @type {!gmf.layertree.SyncLayertreeMap}\n   * @private\n   */\n  this.gmfSyncLayertreeMap_ = gmfSyncLayertreeMap;\n\n  /**\n   * @type {!ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {!Object.<number, !Array.<string>>}\n   * @private\n   */\n  this.groupNodeStates_ = {};\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.openLinksInNewWindow;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n\n  /**\n   * @type {!Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.layers = [];\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  // enter digest cycle on node collapse\n  $element.on('shown.bs.collapse', () => {\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * Init the controller,\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.openLinksInNewWindow = this.openLinksInNewWindow === true;\n  this.dataLayerGroup_ = this.layerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n\n  ngeoMiscSyncArrays(this.dataLayerGroup_.getLayers().getArray(), this.layers, true, this.scope_, () => true);\n\n  // watch any change on layers array to refresh the map\n  this.scope_.$watchCollection(() => this.layers,\n    () => {\n      this.map.render();\n    });\n\n  // watch any change on dimensions object to refresh the layers\n  this.scope_.$watchCollection(() => {\n    if (this.gmfTreeManager_.rootCtrl) {\n      return this.dimensions;\n    }\n  }, (dimensions) => {\n    if (dimensions) {\n      this.updateDimensions_(this.gmfTreeManager_.rootCtrl);\n    }\n  });\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl Layer tree controller.\n * @private\n */\nexports.Controller_.prototype.updateDimensions_ = function(treeCtrl) {\n  treeCtrl.traverseDepthFirst((ctrl) => {\n    if (ctrl.node.dimensions) {\n      const layer = ctrl.layer;\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      this.updateLayerDimensions_(layer, /** @type gmfThemes.GmfGroup|gmfThemes.GmfLayer */ (ctrl.node));\n    }\n  });\n};\n\n\n/**\n * @param {ol.layer.Layer} layer Layer to update.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layer tree node.\n * @private\n */\nexports.Controller_.prototype.updateLayerDimensions_ = function(layer, node) {\n  if (this.dimensions && node.dimensions) {\n    const dimensions = {};\n    for (const key in node.dimensions) {\n      if (node.dimensions[key] === null) {\n        const value = this.dimensions[key];\n        if (value !== undefined) {\n          dimensions[key] = value;\n        }\n      } else {\n        dimensions[key] = node.dimensions[key];\n      }\n    }\n    if (!olObj.isEmpty(dimensions)) {\n      const source = layer.getSource();\n      if (source instanceof olSourceWMTS) {\n        source.updateDimensions(dimensions);\n      } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n        source.updateParams(dimensions);\n      } else {\n        // the source is not ready yet\n        layer.once('change:source', () => {\n          googAsserts.assertInstanceof(layer, olLayerLayer);\n          this.updateLayerDimensions_(layer, node);\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Use the gmfSyncLayertreeMap_ to create and get layer corresponding to this\n * treeCtrl. The layer will be inserted into the map. The layer can be null\n * if the treeCtrl is based on a node inside a mixed node. It this case, the\n * layer will be in the first parent declared as a mixed node.\n * @param {ngeo.layertree.Controller} treeCtrl tree controller of the node\n * @return {ol.layer.Base|ol.layer.Group|null} The OpenLayers layer or group\n *     for the node.\n * @export\n */\nexports.Controller_.prototype.getLayer = function(treeCtrl) {\n  let opt_position;\n  if (treeCtrl.parent.isRoot) {\n    this.gmfTreeManager_.rootCtrl = treeCtrl.parent;\n    // Precise the index to add first level groups.\n    opt_position = this.gmfTreeManager_.root.children.length -\n        this.gmfTreeManager_.numberOfGroupsToAddInThisDigestLoop || 0;\n  }\n\n  const layer = this.gmfSyncLayertreeMap_.createLayer(treeCtrl, this.map,\n    this.dataLayerGroup_, opt_position);\n\n  if (layer instanceof olLayerLayer) {\n    const node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n    this.updateLayerDimensions_(layer, node);\n  }\n\n  return layer;\n};\n\n\n/**\n * Remove layer from this component's layergroup (and then, from the map) on\n * a ngeo layertree destroy event.\n * @param {angular.Scope} scope treeCtrl scope.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.listeners = function(scope, treeCtrl) {\n  const dataLayerGroup = this.dataLayerGroup_;\n  scope.$on('$destroy', () => {\n    // Remove the layer from the map.\n    dataLayerGroup.getLayers().remove(treeCtrl.layer);\n  });\n};\n\n/**\n * Toggle the state of treeCtrl's node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.toggleActive = function(treeCtrl) {\n  treeCtrl.setState(treeCtrl.getState() === 'on' ? 'off' : 'on');\n};\n\n\n/**\n * Return the current state of the given treeCtrl's node.\n * Return a class name that match with the current node activation state.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string} 'on' or 'off' or 'indeterminate'.\n * @export\n */\nexports.Controller_.prototype.getNodeState = function(treeCtrl) {\n  return treeCtrl.getState();\n};\n\n\n/**\n * Update the `timeRangeValue` property of the data source bound to the\n * given tree controller using the given time. If the tree controller has\n * no data source, it means that it has children and they might have\n * data sources.\n *\n * The setting of the TIME parameter on the layer occurs in the\n * `gmf.datasource.Manager` service\n *\n * LayertreeController.prototype.updateWMSTimeLayerState - description\n * @param {ngeo.layertree.Controller} layertreeCtrl ngeo layertree controller\n * @param {{start : number, end : number}} time The start\n * and optionally the end datetime (for time range selection) selected by user\n * @export\n */\nexports.Controller_.prototype.updateWMSTimeLayerState = function(\n  layertreeCtrl, time) {\n  if (!time) {\n    return;\n  }\n  const dataSource = layertreeCtrl.getDataSource();\n  if (dataSource) {\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    dataSource.timeRangeValue = time;\n  } else if (layertreeCtrl.children) {\n    for (let i = 0, ii = layertreeCtrl.children.length; i < ii; i++) {\n      this.updateWMSTimeLayerState(layertreeCtrl.children[i], time);\n    }\n  }\n};\n\n\n/**\n * Get the icon image URL for the given treeCtrl's layer. It can only return a\n * string for internal WMS layers without multiple childlayers in the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string|undefined} The icon legend URL or undefined.\n * @export\n */\nexports.Controller_.prototype.getLegendIconURL = function(treeCtrl) {\n  const iconUrl = treeCtrl.node.metadata.iconUrl;\n\n  if (iconUrl !== undefined) {\n    return iconUrl;\n  }\n\n  if (treeCtrl.node.children !== undefined) {\n    return undefined;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (gmfLayer.type !== 'WMS') {\n    return undefined;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  const legendRule = gmfLayerWMS.metadata.legendRule;\n\n  if (legendRule === undefined) {\n    return undefined;\n  }\n\n  //In case of multiple layers for a gmfLayerWMS, always take the first layer\n  //name to get the icon\n  const layerName = gmfLayerWMS.layers.split(',')[0];\n  const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n  return this.layerHelper_.getWMSLegendURL(\n    gmfOgcServer.url, layerName, undefined, legendRule, 20, 20\n  );\n};\n\n\n/**\n * Get the legends object (<LayerName: url> for each layer) for the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {Object.<string, string>} A <layerName: url> object that provides a\n *     layer for each layer.\n * @export\n */\nexports.Controller_.prototype.getLegendsObject = function(treeCtrl) {\n  const legendsObject = {};\n  if (/** @type gmfThemes.GmfGroup */ (treeCtrl.node).children !== undefined) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const gmfLayerDefaultName = gmfLayer.name;\n  if (gmfLayer.metadata.legendImage) {\n    legendsObject[gmfLayerDefaultName] = gmfLayer.metadata.legendImage;\n    return legendsObject;\n  }\n\n  const layer = treeCtrl.layer;\n  if (gmfLayer.type === 'WMTS') {\n    googAsserts.assertInstanceof(layer, olLayerTile);\n    const wmtsLegendURL = this.layerHelper_.getWMTSLegendURL(layer);\n    legendsObject[gmfLayerDefaultName] = wmtsLegendURL;\n    return wmtsLegendURL ? legendsObject : null;\n  } else {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n    let layersNames = gmfLayerWMS.layers;\n    const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n    const scale = this.getScale_();\n    // QGIS can handle multiple layers natively. Use Multiple URLs for other map\n    // servers\n    if (gmfOgcServer.type === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      layersNames = [layersNames];\n    } else {\n      layersNames = layersNames.split(',');\n    }\n    layersNames.forEach((layerName) => {\n      legendsObject[layerName] = this.layerHelper_.getWMSLegendURL(gmfOgcServer.url, layerName, scale);\n    });\n    return legendsObject;\n  }\n};\n\n\n/**\n * Get the number of legends object for this layertree controller.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {number} The number of Legends object.\n * @export\n */\nexports.Controller_.prototype.getNumberOfLegendsObject = function(treeCtrl) {\n  const legendsObject = this.getLegendsObject(treeCtrl);\n  return legendsObject ? Object.keys(legendsObject).length : 0;\n};\n\n\n/**\n * Return the current scale of the map.\n * @return {number} Scale.\n * @private\n */\nexports.Controller_.prototype.getScale_ = function() {\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const mpu = view.getProjection().getMetersPerUnit();\n  const dpi = 25.4 / 0.28;\n  return resolution * mpu * 39.37 * dpi;\n};\n\n\n/**\n * Opens a gmfx.openIframePopup with the content of the metadata url of a node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.displayMetadata = function(treeCtrl) {\n  const node = treeCtrl.node;\n  const metadataURL = node.metadata['metadataUrl'];\n  if (metadataURL !== undefined) {\n    // FIXME layertree should not rely on a window function.\n    const gmfx = window.gmfx;\n    if (gmfx.openIframePopup) {\n      gmfx.openIframePopup(metadataURL, node.name, undefined, undefined, false);\n    }\n  }\n};\n\n\n/**\n * Update the layers order in the map and the treeCtrl in the treeManager after\n * a reorder of the first-level groups. Then update the permalink.\n * @export\n */\nexports.Controller_.prototype.afterReorder = function() {\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const currentTreeCtrls = this.gmfTreeManager_.rootCtrl.children;\n  const treeCtrls = [];\n\n  // Get order of first-level groups for treectrl and layers;\n  groupNodes.forEach((node) => {\n    currentTreeCtrls.some((treeCtrl) => {\n      if (treeCtrl.node === node) {\n        treeCtrls.push(treeCtrl);\n        return;\n      }\n    });\n  });\n\n  // Update gmfTreeManager rootctrl children order\n  this.gmfTreeManager_.rootCtrl.children = treeCtrls;\n\n  // Update map 'data' groupe layers order\n  this.layers.length = 0;\n  this.gmfTreeManager_.rootCtrl.children.forEach((child) => {\n    this.layers.push(child.layer);\n  });\n\n  // Update the permalink order\n  this.gmfPermalink_.refreshFirstLevelGroups();\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup} node Layer tree node to remove.\n * @export\n */\nexports.Controller_.prototype.removeNode = function(node) {\n  this.gmfTreeManager_.removeGroup(node);\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.removeAllNodes = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @return {number} first level node count.\n * @export\n */\nexports.Controller_.prototype.nodesCount = function() {\n  return this.gmfTreeManager_.root.children.length;\n};\n\n/**\n * Return 'out-of-resolution' if the current resolution of the map is out of\n * the min/max resolution in the node.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {string|undefined} 'out-of-resolution' or undefined.\n * @export\n */\nexports.Controller_.prototype.getResolutionStyle = function(gmfLayer) {\n  const resolution = this.map.getView().getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    return 'out-of-resolution';\n  }\n  const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n  if (maxResolution !== undefined && resolution > maxResolution) {\n    return 'out-of-resolution';\n  }\n  return undefined;\n};\n\n\n/**\n * Set the resolution of the map with the max or min resolution of the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.zoomToResolution = function(treeCtrl) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    view.setResolution(view.constrainResolution(minResolution, 0, 1));\n  } else {\n    const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n    if (maxResolution !== undefined && resolution > maxResolution) {\n      view.setResolution(view.constrainResolution(maxResolution, 0, -1));\n    }\n  }\n};\n\n\n/**\n * Toggle the legend for a node\n * @param {string} legendNodeId The DOM node legend id to toggle\n * @export\n */\nexports.Controller_.prototype.toggleNodeLegend = function(legendNodeId) {\n  $(legendNodeId).toggle({\n    toggle: true\n  });\n};\n\n\n/**\n * @param {gmf.datasource.OGC} ds Data source to filter.\n * @export\n */\nexports.Controller_.prototype.toggleFiltrableDataSource = function(ds) {\n  this.gmfDataSourceBeingFiltered.dataSource = ds;\n};\n\n\n/**\n * @param {string} legendNodeId The DOM node legend id\n * @return {boolean} Whenever the legend is currently displayed.\n * @export\n */\nexports.Controller_.prototype.isNodeLegendVisible = function(legendNodeId) {\n  return $(legendNodeId).is(':visible');\n};\n\n\n/**\n * Determines whether the layer tree controller supports being customized.\n * For example, having its layer opacity changed, displaying its legend, etc.\n *\n * If any requirement is met, then the treeCtrl is considered supporting\n * \"customization\", regardless of what it actually is.\n *\n * The requirements are:\n *\n * - must not be the root controller, any of the following:\n *   - it supports legend\n *   - it supports having the layer opacity being changed\n *\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports being\n *     \"customized\" or not.\n * @export\n */\nexports.Controller_.prototype.supportsCustomization = function(treeCtrl) {\n  return !treeCtrl.isRoot &&\n    (\n      this.supportsLegend(treeCtrl) ||\n      this.supportsOpacityChange(treeCtrl)\n    );\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having a\n *     legend being shown.\n * @export\n */\nexports.Controller_.prototype.supportsLegend = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  return !!node.metadata &&\n    !!node.metadata.legend &&\n    !!this.getLegendsObject(treeCtrl);\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having its\n *     layer opacity being changed or not.\n * @export\n */\nexports.Controller_.prototype.supportsOpacityChange = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  const parentNode = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  return !!treeCtrl.layer &&\n    (\n      (\n        treeCtrl.depth === 1 && !node.mixed\n      ) ||\n      (\n        treeCtrl.depth > 1 && parentNode.mixed\n      )\n    );\n};\n\nexports.controller('GmfLayertreeController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module app\n */\nconst exports = {};\n\n/**\n * This file provides the \"app\" namespace, which is the\n * application's main namespace. And it defines the application's Angular\n * module.\n */\n\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('app', []);\n\nexports.module.config(['$compileProvider', function($compileProvider) {\n  if (!('debug' in ngeoUtils.decodeQueryString(window.location.search))) {\n    // Disable the debug info\n    $compileProvider.debugInfoEnabled(false);\n  }\n}]);\n\n\nexport default exports;\n","/**\n * @module ngeo.googlestreetview.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olProj from 'ol/proj.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGooglestreetview', [\n  ngeoMapFeatureOverlayMgr.module.name\n]);\n\n\nexports.value('ngeoGooglestreetviewTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoGooglestreetviewTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/googlestreetview';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/googlestreetview', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoGooglestreetviewTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoGooglestreetviewTemplateUrl($attrs, ngeoGooglestreetviewTemplateUrl) {\n  return ngeoGooglestreetviewTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {angular.JQLite} $element Element.\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo FeatureOverlay\n   *     manager.\n   * @private\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoGooglestreetviewController\n   */\n  constructor($element, $scope, ngeoFeatureOverlayMgr) {\n\n    // Binding properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.active;\n\n    $scope.$watch(\n      () => this.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    /**\n     * Style for the feature.\n     * @type {ol.style.Style|Array.<ol.style.Style>|\n     *     ol.FeatureStyleFunction|ol.StyleFunction|undefined}\n     * @export\n     */\n    this.featureStyle;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {number|undefined}\n     * @export\n     */\n    this.radius;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n\n    // Inner properties\n\n    /**\n     * @type {!ol.Feature}\n     * @private\n     */\n    this.feature_ = new olFeature();\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @private\n     */\n    this.featureOverlay_ = googAsserts.assert(\n      ngeoFeatureOverlayMgr.getFeatureOverlay()\n    );\n\n    /**\n     * @type {Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * The current location in the OpenLayers' map view projection.\n     * @type {?ol.Coordinate}\n     * @private\n     */\n    this.location = null;\n\n    /**\n     * Flag that determines whether there's data at a given location or not.\n     * @type {boolean}\n     * @export\n     */\n    this.noDataAtLocation = false;\n\n    /**\n     * @type {!google.maps.StreetViewPanorama}\n     * @private\n     */\n    this.panorama_ = new google.maps.StreetViewPanorama(\n      $element[0],\n      {\n        pov: {\n          heading: 0,\n          pitch: 0\n        },\n        visible: false,\n        zoom: 1\n      }\n    );\n\n    /**\n     * @type {?google.maps.MapsEventListener}\n     * @private\n     */\n    this.panoramaListener_ = null;\n\n    /**\n     * @type {ol.geom.Point}\n     * @private\n     */\n    this.point_ = new olGeomPoint([0, 0]);\n\n    this.feature_.setGeometry(this.point_);\n\n    /**\n     * @type {google.maps.StreetViewService}\n     * @private\n     */\n    this.streetViewService_ = new google.maps.StreetViewService();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.panoramaPositionChanging_ = false;\n  }\n\n  /**\n   * Called on initialization of the controller.\n   */\n  $onInit() {\n\n    // === Watchers ===\n\n    // (1) Watch for any change in the location\n    this.scope_.$watch(\n      () => this.location,\n      this.handleLocationChange_.bind(this)\n    );\n\n    // (2) Watch for both the active and location. When we have both, the\n    //     state is considered 'ready'.\n    this.scope_.$watch(\n      () => {\n        const isActive = this.active;\n        const hasLocation = this.location !== null;\n        return isActive && hasLocation;\n      },\n      this.handleReadyChange_.bind(this)\n    );\n\n    // (3) Watcher to manage the visibility of the panorama.\n    this.scope_.$watch(\n      () => {\n        const isActive = this.active;\n        const hasLocation = this.location !== null;\n        const hasData = this.noDataAtLocation === false;\n        return isActive && hasLocation && hasData;\n      },\n      (show, oldShow) => {\n        if (show === oldShow) {\n          return;\n        }\n\n        this.panorama_.setVisible(show);\n\n        if (show) {\n          this.panoramaListener_ = google.maps.event.addListener(\n            this.panorama_,\n            'position_changed',\n            this.handlePanoramaPositionChange_.bind(this)\n          );\n        } else if (this.panoramaListener_) {\n          google.maps.event.removeListener(this.panoramaListener_);\n          this.panoramaListener_ = null;\n        }\n      }\n    );\n\n\n    // Other initialization\n    if (this.featureStyle) {\n      this.feature_.setStyle(this.featureStyle);\n    }\n\n  }\n\n  /**\n   * Called when the 'active' property of this component changes.\n   * @param {boolean} active Active.\n   * @private\n   */\n  handleActiveChange_(active) {\n\n    const keys = this.listenerKeys_;\n\n    if (active) {\n      keys.push(\n        olEvents.listen(this.map, 'click', this.handleMapClick_, this)\n      );\n    } else {\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n    }\n  }\n\n  /**\n   * Called when the 'location' property of this component changes.\n   * @param {?ol.Coordinate} location Location, in OL map view projection.\n   * @param {?ol.Coordinate} oldLocation The previous location.\n   * @private\n   */\n  handleLocationChange_(location, oldLocation) {\n\n    // (1) No need to do anything if the old value equals the new value\n    if (location === oldLocation || (\n      Array.isArray(location) && Array.isArray(oldLocation) &&\n        olArray.equals(location, oldLocation)\n    )) {\n      return;\n    }\n\n    // (2) Update point coordinates\n    this.point_.setCoordinates(location);\n\n    // (3) Update StreetView location\n    if (location && !this.panoramaPositionChanging_) {\n      const lonLat = this.toLonLat_(location);\n      this.streetViewService_.getPanorama({\n        location: {\n          lat: lonLat[1],\n          lng: lonLat[0]\n        },\n        radius: this.radius\n      }, this.handleStreetViewServiceGetPanorama_.bind(this));\n    }\n  }\n\n  /**\n   * Called when the map is clicked while this component is active. Update the\n   * location accordingly.\n   * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n   * @private\n   */\n  handleMapClick_(evt) {\n    this.location = evt.coordinate;\n    this.scope_.$apply();\n  }\n\n  /**\n   * Called when the component 'virtual ready' state changes.\n   *\n   * When ready:\n   *  - add the feature to the overlay\n   *\n   * When not ready:\n   *  - remove the feature from the overlay\n   *\n   * @param {boolean} ready Whether the component is ready or not.\n   * @param {boolean} oldReady Previous ready value.\n   * @private\n   */\n  handleReadyChange_(ready, oldReady) {\n\n    if (ready === oldReady) {\n      return;\n    }\n\n    if (ready) {\n      this.featureOverlay_.addFeature(this.feature_);\n    } else {\n      this.featureOverlay_.removeFeature(this.feature_);\n    }\n  }\n\n  /**\n   * @param {google.maps.StreetViewPanoramaData} data Data.\n   * @param {google.maps.StreetViewStatus} status Status.\n   * @private\n   */\n  handleStreetViewServiceGetPanorama_(data, status) {\n\n    const panorama = this.panorama_;\n\n    if (status === google.maps.StreetViewStatus.OK) {\n      this.noDataAtLocation = false;\n      panorama.setPosition(data.location.latLng);\n    } else {\n      this.noDataAtLocation = true;\n    }\n\n    this.scope_.$apply();\n  }\n\n  /**\n   * Called when the panorama position changes. Update the location.\n   * @private\n   */\n  handlePanoramaPositionChange_() {\n    this.panoramaPositionChanging_ = true;\n    const position = this.panorama_.getPosition();\n    const lonLat = [position.lng(), position.lat()];\n    const location = this.fromLonLat_(lonLat);\n    this.location = location;\n    this.scope_.$apply();\n    this.panoramaPositionChanging_ = false;\n  }\n\n\n  // Utility methods\n\n  /**\n   * @param {!ol.Coordinate} lonLat LonLat coordinate.\n   * @return {ol.Coordinate} Map view projection coordinate.\n   */\n  fromLonLat_(lonLat) {\n    return olProj.fromLonLat(\n      lonLat,\n      this.map.getView().getProjection()\n    );\n  }\n\n  /**\n   * @param {!ol.Coordinate} coordinate Map view projection coordinate.\n   * @return {ol.Coordinate} LonLat coordinate.\n   */\n  toLonLat_(coordinate) {\n    return olProj.toLonLat(\n      coordinate,\n      this.map.getView().getProjection()\n    );\n  }\n};\n\n\nexports.component('ngeoGooglestreetview', {\n  bindings: {\n    'active': '<',\n    'featureStyle': '<?',\n    'map': '<',\n    'radius': '<?'\n  },\n  controller: exports.Controller_,\n  templateUrl: ngeoGooglestreetviewTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.googlestreetview.module\n */\nimport ngeoGooglestreetviewComponent from 'ngeo/googlestreetview/component.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGooglestreetviewModule', [\n  ngeoGooglestreetviewComponent.name\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.routing.NominatimService\n */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\n/**\n * Service to provide access to Nominatim, which allows to search for\n * OSM data by name and address.\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngInject\n * @export\n * @ngname ngeoNominatimService\n * @see https://wiki.openstreetmap.org/wiki/Nominatim\n */\nconst exports = function($http, $injector, ngeoDebounce) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * URL for Nominatim backend\n   * Defaults openstreetmap instance.\n   * @type {string}\n   * @private\n   */\n  this.nominatimUrl_ = 'https://nominatim.openstreetmap.org/';\n\n  if ($injector.has('ngeoNominatimUrl')) {\n    this.nominatimUrl_ = $injector.get('ngeoNominatimUrl');\n\n    // the url is expected to end with a slash\n    if (this.nominatimUrl_.substr(-1) !== '/') {\n      this.nominatimUrl_ += '/';\n    }\n  }\n\n  /**\n   * @type {Object<string, string>}\n   * @private\n   */\n  this.searchDefaultParams_ = {};\n\n  if ($injector.has('ngeoNominatimSearchDefaultParams')) {\n    this.searchDefaultParams_ = $injector.get('ngeoNominatimSearchDefaultParams');\n  }\n\n  /**\n   * Delay (in milliseconds) to avoid calling the API too often.\n   * Only if there were no calls for that many milliseconds,\n   * the last call will be executed.\n   * @type {number}\n   * @private\n   */\n  this.typeaheadDebounceDelay_ = 500;\n\n  /**\n   * @export\n   * @type {function(string,function(Array.<BloodhoundDatum>),(function(Array.<ol.Feature>)|undefined))}\n   */\n  this.typeaheadSourceDebounced =\n    /** @type{function(string,function(Array.<BloodhoundDatum>),(function(Array.<ol.Feature>)|undefined))} */\n    (this.ngeoDebounce_(/** @type {function(?)} */ (this.typeaheadSource_.bind(this)), this.typeaheadDebounceDelay_, true));\n};\n\n/**\n * Search by name\n * @param {string} query Search query\n * @param {?Object} params Optional parameters\n * @return {!angular.$http.HttpPromise} promise of the Nominatim API request\n * @see https://wiki.openstreetmap.org/wiki/Nominatim#Search\n * @export\n */\nexports.prototype.search = function(query, params) {\n  let url = `${this.nominatimUrl_}search?q=${query}`;\n\n  params = params || {};\n  params = Object.assign({}, this.searchDefaultParams_, params);\n\n  // require JSON response\n  params['format'] = 'json';\n\n  if (params) {\n    url += '&';\n    const options = [];\n    for (const option of Object.keys(params)) {\n      options.push(`${option}=${params[option]}`);\n    }\n    url += options.join('&');\n  }\n\n  return this.$http_.get(url);\n};\n\n/**\n * Reverse Geocoding\n * @param {ol.Coordinate} coordinate Search coordinate in LonLat projection\n * @param {(Object|undefined)} params Optional parameters\n * @return {!angular.$http.HttpPromise} promise of the Nominatim API request\n * @see https://wiki.openstreetmap.org/wiki/Nominatim#Reverse_Geocoding\n * @export\n */\nexports.prototype.reverse = function(coordinate, params) {\n  let url = `${this.nominatimUrl_}reverse`;\n\n  params = Object.assign({}, params);\n\n  // coordinate\n  params['lon'] = coordinate[0];\n  params['lat'] = coordinate[1];\n\n  // require JSON response\n  params['format'] = 'json';\n\n  if (params) {\n    url += '?';\n    const options = [];\n    for (const option of Object.keys(params)) {\n      options.push(`${option}=${params[option]}`);\n    }\n    url += options.join('&');\n  }\n\n  return this.$http_.get(url);\n};\n\n/**\n * @param {string} query Search query\n * @param {function(Array.<BloodhoundDatum>)} syncResults Callback for synchronous execution, unused\n * @param {function(Array.<ngeox.NominatimSearchResult>)} asyncResults Callback for asynchronous execution\n * @private\n */\nexports.prototype.typeaheadSource_ = function(query, syncResults, asyncResults) {\n  const onSuccess_ = function(resp) {\n    /**\n     * Parses result response.\n     * @param {ngeox.NominatimSearchResponseResult} result Result\n     * @return {ngeox.NominatimSearchResult} Parsed result\n     */\n    const parse = function(result) {\n      return /** @type{ngeox.NominatimSearchResult} */({\n        coordinate: [result.lon, result.lat],\n        name: result.display_name\n      });\n    };\n    asyncResults(resp.data.map(parse));\n  };\n\n  const onError_ = function(resp) {\n    asyncResults([]);\n  };\n\n  this.search(query, {}).then(onSuccess_, onError_);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoNominatimService', [\n  ngeoMiscDebounce.name\n]);\n\nexports.module.service('ngeoNominatimService', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.routing.RoutingService\n */\n/**\n * Service to provide access to a [Open Source Routing Machine (OSRM) backend](https://github.com/Project-OSRM/osrm-backend)\n * of version 5.8 and higher and its features.\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngInject\n * @export\n * @ngname ngeoRoutingService\n */\nconst exports = function($http, $injector) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {ngeox.RoutingOptions}\n   * @private\n   */\n  this.routingOptions_ = $injector.has('ngeoRoutingOptions') ? $injector.get('ngeoRoutingOptions') : {};\n\n  /**\n   * URL for OSRM backend API.\n   * Defaults to demo backend.\n   * @type {string}\n   * @private\n   */\n  this.ngeoOsrmBackendUrl_ = this.routingOptions_.backendUrl || 'https://router.project-osrm.org/';\n\n  // the url is expected to end with a slash\n  if (this.ngeoOsrmBackendUrl_.substr(-1) !== '/') {\n    this.ngeoOsrmBackendUrl_ += '/';\n  }\n\n  /**\n   * Version of the protocol implemented by the service.\n   * see: https://github.com/Project-OSRM/osrm-backend/blob/master/docs/http.md\n   * @type {string}\n   * @private\n   */\n  this.protocolVersion_ = 'v1';\n\n};\n\n/**\n * Route request\n * @param {Array.<ol.Coordinate>} coordinates coordinates of the route (at least two!)\n * @param {?Object} config optional configuration\n * @return {!angular.$http.HttpPromise} promise of the OSRM API request\n */\nexports.prototype.getRoute = function(coordinates, config) {\n\n  config = config || {};\n\n  // Service\n  // see: https://github.com/Project-OSRM/osrm-backend/blob/master/docs/http.md#requests\n  if (!config['service']) {\n    config['service'] = 'route'; // default to route\n  }\n\n  // Mode of transportation,\n  // can be: car, bike, foot\n  // see: https://github.com/Project-OSRM/osrm-backend/blob/master/docs/http.md#requests\n  //\n  // As of version 5.8.0, OSRM (server) does not support multiple profiles simultaneously.\n  // This means the value actually does not matter.\n  if (!config['profile']) {\n    config['profile'] = 'car'; // default to car\n  }\n\n  // build request URL\n  let url = this.ngeoOsrmBackendUrl_;\n\n  // Common workaround to provide multiple profiles (since it is not supported yet)\n  // Every profile runs on its own instance.\n  if (config['instance']) {\n    url += `${config['instance']}/`;\n  }\n\n  url += `${config['service']}/${this.protocolVersion_}/${config['profile']}/`;\n\n  // [ [a,b] , [c,d] ] -> 'a,b;c,d'\n  const coordinateString = coordinates.map(c => c.join(',')).join(';');\n\n  url += coordinateString;\n\n  // look for route service options\n  // see: https://github.com/Project-OSRM/osrm-backend/blob/master/docs/http.md#route-service\n  if (config.options) {\n    url += '?';\n    const options = [];\n    for (const option of Object.keys(config.options)) {\n      options.push(`${option}=${config.options[option]}`);\n    }\n    url += options.join('&');\n  }\n\n  return this.$http_.get(url);\n};\n\n/**\n * Snaps a coordinate to the street network and returns the nearest match\n * @param {ol.Coordinate} coordinate coordinate to query\n * @param {?Object} config optional configuration\n * @return {!angular.$http.HttpPromise} promise of the OSRM API request\n * @see https://github.com/Project-OSRM/osrm-backend/blob/master/docs/http.md#nearest-service\n */\nexports.prototype.getNearest = function(coordinate, config) {\n  config = config || {};\n\n  // service is always nearest\n  config['service'] = 'nearest';\n\n  // Mode of transportation\n  // If used in combination with a getRoute request, choose the same profile.\n  if (!config['profile']) {\n    config['profile'] = 'car'; // default to car\n  }\n\n  // build request URL\n  let url = this.ngeoOsrmBackendUrl_;\n\n  // Common workaround to provide multiple profiles (since it is not supported yet)\n  // Every profile runs on its own instance.\n  if (config['instance']) {\n    url += `${config['instance']}/`;\n  }\n\n  url += `${config['service']}/${this.protocolVersion_}/${config['profile']}/`;\n\n  // [a,b] -> 'a,b'\n  const coordinateString = coordinate.join(',');\n  url += coordinateString;\n\n  // look for nearest service options\n  if (config.options) {\n    url += '?';\n    const options = [];\n    for (const option of Object.keys(config.options)) {\n      options.push(`${option}=${config.options[option]}`);\n    }\n    url += options.join('&');\n  }\n\n  return this.$http_.get(url);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRoutingService', [\n]);\n\nexports.module.service('ngeoRoutingService', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.routing.NominatimInputComponent\n */\nconst exports = {};\nimport ngeoSearchSearchDirective from 'ngeo/search/searchDirective.js';\nimport ngeoRoutingNominatimService from 'ngeo/routing/NominatimService.js';\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRoutingNominatimInputComponent', [\n  ngeoSearchSearchDirective.module.name,\n  ngeoRoutingNominatimService.module.name\n]);\n\nexports.module.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/routing/nominatiminput', require('./nominatiminput.html'));\n});\n\n\nexports.module.value('ngeoRoutingNominatimInputComponentTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoRoutingNominatimInputComponentTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/routing/nominatiminput';\n  }\n);\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoRoutingNominatimInputComponentTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoRoutingNominatimInputComponentTemplateUrl($attrs, ngeoRoutingNominatimInputComponentTemplateUrl) {\n  return ngeoRoutingNominatimInputComponentTemplateUrl($attrs);\n}\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Scope.\n * @param {!ngeo.routing.NominatimService} ngeoNominatimService service for Nominatim\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoNominatimInputController\n */\nexports.Controller = function($element, $injector, $scope, ngeoNominatimService) {\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {ngeo.routing.NominatimService}\n   * @export\n   */\n  this.ngeoNominatimService = ngeoNominatimService;\n\n  /**\n   * @type {(function(Object)|undefined)}\n   * @export\n   */\n  this.onSelect;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.inputValue;\n\n  /**\n   * @type {TypeaheadOptions}\n   * @export\n   */\n  this.options = /** @type {TypeaheadOptions} */ ({\n  });\n\n  /**\n   * @type {Array.<TypeaheadDataset>}\n   * @export\n   */\n  this.datasets = [/** @type {TypeaheadDataset} */({\n    name: 'nominatim',\n    display: 'name',\n    source: this.ngeoNominatimService.typeaheadSourceDebounced\n  })];\n\n  /**\n   * @type {ngeox.SearchDirectiveListeners}\n   * @export\n   */\n  this.listeners = /** @type {ngeox.SearchDirectiveListeners} */({\n    select: this.select_.bind(this)\n  });\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.placeholder = '';\n\n};\n\n/**\n * @param {jQuery.Event} event Event.\n * @param {ngeox.NominatimSearchResult} suggestion Suggestion.\n * @param {TypeaheadDataset} dataset Dataset.\n * @this {ngeo.routing.NominatimInputComponent.Controller}\n * @private\n */\nexports.Controller.prototype.select_ = function(event, suggestion, dataset) {\n  if (this.onSelect) {\n    this.onSelect(suggestion);\n  }\n};\n\n/**\n * Input form field which provides Nominatim typeahead lookup using {@link ngeo.routing.NominatimService}.\n *\n * Example:\n *\n *     <ngeo-nominatim-input\n *         ngeo-nominatim-input-value=\"ctrl.label\"\n *         ngeo-nominatim-input-placeholder=\"type to search\"\n *         ngeo-nominatim-input-on-select=\"ctrl.onSelect\">\n *\n * Is used in in the partial of {@link ngeo.routingFeatureComponent}.\n *\n * See the [../examples/routing.html](../examples/routing.html) example to see it in action.\n *\n * @htmlAttribute {function(ngeox.NominatimSearchResult)} ngeo-nominatim-input-on-select\n *  Event fired when user selects a new suggestion.\n * @htmlAttribute {string} ngeo-nominatim-input-value\n *  Value of input field, will be set to the label of the search result.\n * @htmlAttribute {string} ngeo-nominatim-input-placeholder\n *  Placeholder text, when field is empty.\n * @ngdoc directive\n * @ngname ngeoNominatimInput\n */\nconst component = {\n  controller: exports.Controller,\n  bindings: {\n    'onSelect': '=?ngeoNominatimInputOnSelect',\n    'inputValue': '=?ngeoNominatimInputValue',\n    'placeholder': '@?ngeoNominatimInputPlaceholder'\n  },\n  templateUrl: ngeoRoutingNominatimInputComponentTemplateUrl\n};\n\nexports.module.component('ngeoNominatimInput', component);\n\n\nexport default exports;\n","/**\n * @module ngeo.routing.RoutingFeatureComponent\n */\nconst exports = {};\nimport ngeoRoutingNominatimService from 'ngeo/routing/NominatimService.js';\nimport ngeoRoutingNominatimInputComponent from 'ngeo/routing/NominatimInputComponent.js';\nimport * as olProj from 'ol/proj.js';\nimport olFeature from 'ol/Feature.js';\nimport olCollection from 'ol/Collection.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport 'font-awesome/css/font-awesome.css';\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRoutingFeatureComponent', [\n  ngeoRoutingNominatimService.module.name,\n  ngeoRoutingNominatimInputComponent.module.name\n]);\n\nexports.module.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/routing/routingfeature', require('./routingfeature.html'));\n});\n\n\nexports.module.value('ngeoRoutingFeatureTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoRoutingFeatureTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/routing/routingfeature';\n  }\n);\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoRoutingFeatureTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoRoutingFeatureTemplateUrl($attrs, ngeoRoutingFeatureTemplateUrl) {\n  return ngeoRoutingFeatureTemplateUrl($attrs);\n}\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {!angular.$q} $q Angular q service\n * @param {!ngeo.routing.NominatimService} ngeoNominatimService service for Nominatim\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoRoutingFeatureController\n */\nexports.Controller = function($scope, $timeout, $q, ngeoNominatimService) {\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {ngeo.routing.NominatimService}\n   * @private\n   */\n  this.ngeoNominatimService_ = ngeoNominatimService;\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map;\n\n  /**\n   * @type {ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.featureLabel = '';\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.fillColor;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.strokeColor;\n\n  /**\n   * @type {function(ol.Feature)}\n   * @export\n   */\n  this.onChange;\n\n  /**\n   * @type {ol.Collection}\n   * @private\n   */\n  this.vectorFeatures_ = new olCollection();\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.vectorSource_ = new olSourceVector({\n    features: this.vectorFeatures_\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: this.vectorSource_,\n    style: (function(feature, resolution) {\n      return [new olStyleStyle({\n        text: new olStyleText({\n          fill: new olStyleFill({\n            color: this.fillColor || '#000000'\n          }),\n          font: 'normal 30px FontAwesome',\n          offsetY: -15,\n          stroke: new olStyleStroke({\n            width: 3,\n            color: this.strokeColor || '#000000'\n          }),\n          text: '\\uf041'\n        })\n      })];\n    }).bind(this)\n  });\n\n  /**\n   * Interaction for moving start and end.\n   * @type {ol.interaction.Modify}\n   * @private\n   */\n  this.modifyFeature_ = new olInteractionModify({\n    features: this.vectorFeatures_\n  });\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @private\n   */\n  this.draw_ = null;\n\n  /**\n   * @param {ngeox.NominatimSearchResult} selected Selected result.\n   * @export\n   */\n  this.onSelect = this.onSelect_.bind(this);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.errorMessage = '';\n};\n\nexports.Controller.prototype.$onInit = function() {\n  this.map.addLayer(this.vectorLayer_);\n\n  // setup modify interaction\n  this.modifyFeature_.setActive(true);\n  this.map.addInteraction(this.modifyFeature_);\n\n  this.modifyFeature_.on('modifyend', (event) => {\n    const feature = event.features.getArray()[0];\n    this.vectorSource_.clear();\n    this.snapFeature_(feature);\n  });\n\n  this.scope_.$watch(\n    () => this.feature,\n    (newVal, oldVal) => {\n      if (newVal) {\n        this.onFeatureChange_();\n      }\n      if (newVal === null) {\n        this.vectorSource_.clear();\n        this.featureLabel = '';\n      }\n    }\n  );\n};\n\n/**\n * Cleanup, mostly relevant for vias.\n */\nexports.Controller.prototype.$onDestroy = function() {\n  this.map.removeLayer(this.vectorLayer_);\n  this.modifyFeature_.setActive(false);\n  this.map.removeInteraction(this.modifyFeature_);\n};\n\n/**\n * @export\n */\nexports.Controller.prototype.set = function() {\n  if (this.draw_) {\n    this.map.removeInteraction(this.draw_);\n  }\n\n  this.draw_ = new olInteractionDraw({\n    features: this.vectorFeatures_,\n    type: /** @type {ol.geom.GeometryType} */ ('Point')\n  });\n\n  this.draw_.on('drawstart', () => {\n    if (this.feature) {\n      this.vectorSource_.removeFeature(this.feature);\n    }\n  });\n\n  this.draw_.on('drawend', (event) => {\n    if (this.draw_) {\n      this.map.removeInteraction(this.draw_);\n    }\n    this.snapFeature_(event.feature);\n    this.modifyFeature_.setActive(true);\n  });\n\n  this.modifyFeature_.setActive(false);\n  this.map.addInteraction(this.draw_);\n};\n\n/**\n * @param {ol.Coordinate} coordinate LonLat coordinate.\n * @param {string} label Feature name/label.\n * @private\n */\nexports.Controller.prototype.setFeature_ = function(coordinate, label) {\n  const transformedCoordinate = olProj.fromLonLat(coordinate, this.map.getView().getProjection());\n  if (label === '') {\n    label = transformedCoordinate.join('/');\n  }\n  this.feature = new olFeature({\n    geometry: new olGeomPoint(transformedCoordinate),\n    name: label\n  });\n};\n\nexports.Controller.prototype.onFeatureChange_ = function() {\n  // update label\n  this.featureLabel = /** @type{string} */(this.feature.get('name') || '');\n\n  //update vector source\n  this.vectorSource_.clear();\n  this.vectorSource_.addFeature(this.feature);\n\n  // notify others\n  if (this.onChange) {\n    this.timeout_(() => {\n      this.onChange(this.feature);\n    });\n  }\n};\n\n/**\n * @param {ngeox.NominatimSearchResult} selected Selected result.\n * @private\n */\nexports.Controller.prototype.onSelect_ = function(selected) {\n  const coordinate = selected.coordinate.map(parseFloat);\n  const label = selected.label;\n  this.setFeature_(coordinate, label);\n  const newCoordinates = /** @type{ol.geom.Point} */(this.feature.getGeometry()).getCoordinates();\n  this.map.getView().setCenter(newCoordinates);\n};\n\n/**\n * Snaps a feature to the street network using the getNearest\n * function of the routing service. Replaces the feature.\n * @param {ol.Feature} feature Feature to snap\n * @private\n */\nexports.Controller.prototype.snapFeature_ = function(feature) {\n  const coord = this.getLonLatFromPoint_(feature);\n  const config = {};\n\n  const onSuccess = (function(resp) {\n    const lon = parseFloat(resp['data']['lon']);\n    const lat = parseFloat(resp['data']['lat']);\n    const coordinate = [lon, lat];\n    const label = resp['data']['display_name'];\n    this.setFeature_(coordinate, label);\n  }).bind(this);\n\n  const onError = (function(resp) {\n    this.errorMessage = 'Error: nominatim server not responding.';\n    console.log(resp);\n  }).bind(this);\n\n  this.$q_.when(this.ngeoNominatimService_.reverse(coord, config))\n    .then(onSuccess.bind(this), onError.bind(this));\n};\n\n/**\n * Converts feature point into LonLat coordinate.\n * @param {ol.Feature} point Feature point to convert\n * @return {ol.Coordinate} LonLat coordinate\n * @private\n */\nexports.Controller.prototype.getLonLatFromPoint_ = function(point) {\n  const geometry = /** @type {ol.geom.Point} */ (point.getGeometry());\n  const coords = geometry.getCoordinates();\n  const projection = this.map.getView().getProjection();\n  return olProj.toLonLat(coords, projection);\n};\n\n\n/**\n * Provides a text input and draw interaction to allow a user to create and modify a ol.Feature (point geometry).\n *\n * The text input is provided by {@link ngeo.nominatimInputComponent} and includes Nominatim search.\n *\n * Example:\n *\n *     <ngeo-routing-feature\n *         ngeo-routing-feature-map=\"ctrl.map\"\n *         ngeo-routing-feature-feature=\"ctrl.feature\"\n *         ngeo-routing-feature-fill-color=\"#6BE62E\"\n *         ngeo-routing-feature-stroke-color=\"#4CB01E\"\n *         ngeo-routing-feature-on-change=\"ctrl.handleChange\">\n *\n * Is used in in the partial of {@link ngeo.routingComponent}.\n *\n * See the [../examples/routing.html](../examples/routing.html) example for a usage sample.\n *\n * @htmlAttribute {ol.Map} ngeo-routing-feature-map The map.\n * @htmlAttribute {ol.Feature} ngeo-routing-feature-feature The feature.\n * @htmlAttribute {string} ngeo-routing-feature-fill-color The marker fill color.\n * @htmlAttribute {string} ngeo-routing-feature-stroke-color The marker stroke color.\n * @htmlAttribute {function(ol.Feature)} ngeo-routing-feature-on-change Event fired when feature changes.\n * @ngdoc directive\n * @ngname ngeoRoutingFeature\n */\nexports.component_ = {\n  controller: exports.Controller,\n  bindings: {\n    'map': '<ngeoRoutingFeatureMap',\n    'feature': '=ngeoRoutingFeatureFeature',\n    'fillColor': '<?ngeoRoutingFeatureFillColor',\n    'strokeColor': '<?ngeoRoutingFeatureStrokeColor',\n    'onChange': '=?ngeoRoutingFeatureOnChange'\n  },\n  templateUrl: ngeoRoutingFeatureTemplateUrl\n};\n\nexports.module.component('ngeoRoutingFeature', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.routing.RoutingComponent\n */\nconst exports = {};\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoRoutingNominatimService from 'ngeo/routing/NominatimService.js';\nimport ngeoRoutingRoutingService from 'ngeo/routing/RoutingService.js';\nimport ngeoRoutingRoutingFeatureComponent from 'ngeo/routing/RoutingFeatureComponent.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport * as olProj from 'ol/proj.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport 'font-awesome/css/font-awesome.css';\n\nexports.module = angular.module('ngeoRoutingComponent', [\n  ngeoMiscDebounce.name,\n  ngeoMiscFilters.name,\n  ngeoRoutingNominatimService.module.name,\n  ngeoRoutingRoutingService.module.name,\n  ngeoRoutingRoutingFeatureComponent.module.name\n]);\n\n\nexports.module.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/routing/routing', require('./routing.html'));\n});\n\n\nexports.module.value('ngeoRoutingTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoRoutingTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/routing/routing';\n  }\n);\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoRoutingTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoRoutingTemplateUrl($attrs, ngeoRoutingTemplateUrl) {\n  return ngeoRoutingTemplateUrl($attrs);\n}\n\n\n/**\n * The controller for the routing directive.\n * @param {angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Scope.\n * @param {!ngeo.routing.RoutingService} ngeoRoutingService service for OSRM routing\n * @param {!ngeo.routing.NominatimService} ngeoNominatimService service for Nominatim\n * @param {!angular.$q} $q Angular q service\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoRoutingController\n */\nexports.Controller = function($injector, $scope, ngeoRoutingService, ngeoNominatimService, $q, ngeoDebounce) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {ngeo.routing.RoutingService}\n   * @private\n   */\n  this.ngeoRoutingService_ = ngeoRoutingService;\n\n  /**\n   * @type {ngeo.routing.NominatimService}\n   * @private\n   */\n  this.ngeoNominatimService_ = ngeoNominatimService;\n\n  /**\n   * @type {ngeox.RoutingOptions}\n   * @private\n   */\n  this.routingOptions_ = $injector.has('ngeoRoutingOptions') ? $injector.get('ngeoRoutingOptions') : {};\n\n  /**\n   * Available routing profiles.\n   * Example: [\n   *            {\n   *              label: 'Car', // used as label in the UI\n   *              profile: 'routed-car' // used as part of the query\n   *            }\n   *          ]\n   * @type {Array<ngeox.RoutingProfile>}\n   * @export\n   */\n  this.routingProfiles = this.routingOptions_.profiles || [];\n\n  /**\n   * @type {?ngeox.RoutingProfile}\n   * @export\n   */\n  this.selectedRoutingProfile = this.routingProfiles.length > 0 ? this.routingProfiles[0] : null;\n\n  $scope.$watch(\n    () => this.selectedRoutingProfile,\n    this.calculateRoute.bind(this)\n  );\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.errorMessage = '';\n\n  /**\n   * @type {ol.Feature}\n   * @export\n   */\n  this.startFeature_ = null;\n\n  /**\n   * @type {ol.Feature}\n   * @export\n   */\n  this.targetFeature_ = null;\n\n  /**\n   * @type {Array.<ngeox.RoutingVia>}\n   * @export\n   */\n  this.viaArray = [];\n\n  /**\n   * @type {Object<string, string>}\n   * @export\n   */\n  this.colors = {\n    'start.fill': '#6BE62E',\n    'start.stroke': '#4CB01E',\n    'destination.fill': '#FF3E13',\n    'destination.stroke': '#CD3412',\n    'via.fill': '#767676',\n    'via.stroke': '#000000'\n  };\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.routeSource_ = new olSourceVector({\n    features: []\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.routeLayer_ = new olLayerVector({\n    source: this.routeSource_,\n    style: new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(16, 112, 29, 0.6)'\n      }),\n      stroke: new olStyleStroke({\n        color: 'rgba(16, 112, 29, 0.6)',\n        width: 5\n      })\n    })\n  });\n\n  /**\n   * Distance of route in meters\n   * @type {number}\n   * @export\n   */\n  this.routeDistance = 0;\n\n  /**\n   * Duration of route in minutes.\n   * @type {?number}\n   * @export\n   */\n  this.routeDuration = null;\n\n  /**\n   * @type {RegExp}\n   * @private\n   */\n  this.regexIsFormattedCoord = /\\d+\\.\\d+\\/\\d+\\.\\d+/;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @private\n   */\n  this.draw_ = null;\n\n  const debounceDelay = 200; // in milliseconds\n\n  /**\n   * Debounced because in some cases (reverse route) multiple changes are done\n   * at once and spam this function.\n   * @export\n   * @type {function()}\n   */\n  this.handleChange = /** @type {function()} */\n          (ngeoDebounce(\n            /** @type {function(?)} */ (this.calculateRoute.bind(this)),\n            debounceDelay,\n            true));\n};\n\n/**\n * Init the controller\n */\nexports.Controller.prototype.$onInit = function() {\n  this.map.addLayer(this.routeLayer_);\n};\n\n/**\n * Clears start, end and vias. Removes features from map.\n * @export\n */\nexports.Controller.prototype.clearRoute = function() {\n  this.startFeature_ = null;\n  this.targetFeature_ = null;\n  this.viaArray = [];\n  this.routeDistance = 0;\n  this.routeDuration = null;\n  this.routeSource_.clear();\n  this.errorMessage = '';\n};\n\n/**\n * Converts feature point into LonLat coordinate.\n * @param {ol.Feature} point Feature point to convert\n * @return {ol.Coordinate} LonLat coordinate\n * @private\n */\nexports.Controller.prototype.getLonLatFromPoint_ = function(point) {\n  const geometry = /** @type {ol.geom.Point} */ (point.getGeometry());\n  const coords = geometry.getCoordinates();\n  const projection = this.map.getView().getProjection();\n  return olProj.toLonLat(coords, projection);\n};\n\n/**\n * Flip start and target and re-calculate route.\n * @export\n */\nexports.Controller.prototype.reverseRoute = function() {\n  // swap start and target\n  const tmpFeature = this.startFeature_;\n  this.startFeature_ = this.targetFeature_;\n  this.targetFeature_ = tmpFeature;\n\n  // reverse vias\n  this.viaArray = this.viaArray.reverse();\n\n  // recalculation is done by the debounced handleChange\n};\n\n/**\n * @param {Object} route Routes of OSRM response\n * @returns {Array<ol.Feature>} parsed route features\n * @private\n */\nexports.Controller.prototype.parseRoute_ = function(route) {\n  let parsedRoutes = [];\n  const format = new olFormatGeoJSON();\n  const formatConfig = {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.map.getView().getProjection()\n  };\n  // if there are is useful \"legs\" data, parse this\n  if (route.legs) {\n    parsedRoutes = route.legs.map(leg => leg.steps.map(step => new olFeature({geometry: format.readGeometry(step.geometry, formatConfig)})));\n    // flatten\n    parsedRoutes = [].concat(...parsedRoutes);\n  } else if (route.geometry) {\n  // otherwise parse (overview) geometry\n    parsedRoutes.push(new olFeature({geometry: format.readGeometry(route.geometry, formatConfig)}));\n  }\n  return parsedRoutes;\n};\n\n/**\n * @export\n */\nexports.Controller.prototype.calculateRoute = function() {\n  if (this.startFeature_ && this.targetFeature_) {\n    // remove rendered routes\n    this.routeSource_.clear();\n\n    const coordFrom = this.getLonLatFromPoint_(this.startFeature_);\n    const coordTo = this.getLonLatFromPoint_(this.targetFeature_);\n    const vias = this.viaArray.filter(via => via.feature !== null).map(via => this.getLonLatFromPoint_(via.feature));\n    const route =  [coordFrom].concat(vias, [coordTo]);\n\n    const onSuccess_ = (function(resp) {\n      const features = this.parseRoute_(resp.data.routes[0]);\n      if (features.length === 0) {\n        console.log('No route or not supported format.');\n        return;\n      }\n      this.routeSource_.addFeatures(features);\n\n      // recenter map on route\n      this.map.getView().fit(this.routeSource_.getExtent());\n\n      this.routeDistance = parseInt(resp.data.routes[0].distance, 10);\n      this.routeDuration = resp.data.routes[0].duration;\n\n      // get first and last coordinate of route\n      const startRoute = /** @type{ol.geom.LineString} */(features[0].getGeometry()).getCoordinateAt(0);\n      const endRoute = /** @type{ol.geom.LineString} */(features[features.length - 1].getGeometry()).getCoordinateAt(1);\n\n      // build geometries to connect route to start and end point of query\n      const startToRoute = [/** @type {ol.geom.Point} */(this.startFeature_.getGeometry()).getCoordinates(), startRoute];\n      const routeToEnd = [endRoute, /** @type {ol.geom.Point} */(this.targetFeature_.getGeometry()).getCoordinates()];\n      const routeConnections = [\n        new olFeature(new olGeomLineString(startToRoute)),\n        new olFeature(new olGeomLineString(routeToEnd))\n      ];\n\n      // add them to the source\n      this.routeSource_.addFeatures(routeConnections);\n    }).bind(this);\n\n    const onError_ = (function(resp) {\n      this.errorMessage = 'Error: routing server not responding.';\n      console.log(resp);\n    }).bind(this);\n\n    const options = {};\n    options['steps'] = true;\n    options['overview'] = false;\n    options['geometries'] = 'geojson';\n\n    const config = {};\n    config['options'] = options;\n\n    if (this.selectedRoutingProfile) {\n      config['instance'] = this.selectedRoutingProfile['profile'];\n    }\n\n    this.$q_.when(this.ngeoRoutingService_.getRoute(route, config))\n      .then(onSuccess_.bind(this), onError_.bind(this));\n  }\n};\n\n/**\n * @export\n */\nexports.Controller.prototype.addVia = function() {\n  this.viaArray.push(/** @type{ngeox.RoutingVia} */({\n    feature: null,\n    onSelect: null\n  }));\n};\n\n/**\n * @param {number} index Array index.\n * @export\n */\nexports.Controller.prototype.deleteVia = function(index) {\n  if (this.viaArray.length > index) {\n    this.viaArray.splice(index, 1);\n    this.calculateRoute();\n  }\n};\n\n\nexports.module.component('ngeoRouting', {\n  controller: exports.Controller,\n  bindings: {\n    'map': '<ngeoRoutingMap'\n  },\n  templateUrl: ngeoRoutingTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.routing.module\n */\nimport ngeoRoutingRoutingComponent from 'ngeo/routing/RoutingComponent.js';\n\nimport './routing.less';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoRoutingModule', [\n  ngeoRoutingRoutingComponent.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.EPSG2056\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\nimport somerc from 'ngeo/proj/somerc.js';\nimport proj4 from 'proj4';\n\nconst epsg2056def = [\n  `+proj=${somerc}`,\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=2600000',\n  '+y_0=1200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg2056extent = [2420000, 1030000, 2900000, 1350000];\n\nproj4.defs('EPSG:2056', epsg2056def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:2056').setExtent(epsg2056extent);\n\nconst exports = 'EPSG:2056';\n\n\nexport default exports;\n","/**\n * @module app.desktop_alt.Controller\n */\n/**\n * Application entry point.\n *\n * This file includes `goog.require`'s for all the components/directives used\n * by the HTML page and the controller to provide the configuration.\n */\n\nimport gmfControllersAbstractDesktopController from 'gmf/controllers/AbstractDesktopController.js';\nimport './less/main.less';\nimport appBase from '../appmodule.js';\nimport gmfImportModule from 'gmf/import/module.js';\nimport ngeoGooglestreetviewModule from 'ngeo/googlestreetview/module.js';\nimport ngeoRoutingModule from 'ngeo/routing/module.js';\nimport ngeoProjEPSG2056 from 'ngeo/proj/EPSG2056.js';\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\nimport * as olBase from 'ol/index.js';\nimport Raven from 'raven-js/src/raven.js';\nimport RavenPluginsAngular from 'raven-js/plugins/angular.js';\n\nif (!window.requestAnimationFrame) {\n  alert('Your browser is not supported, please update it or use another one. You will be redirected.\\n\\n'\n    + 'Votre navigateur n\\'est pas supporté, veuillez le mettre à jour ou en utiliser un autre. Vous allez être redirigé.\\n\\n'\n    + 'Ihr Browser wird nicht unterstützt, bitte aktualisieren Sie ihn oder verwenden Sie einen anderen. Sie werden weitergeleitet.');\n  window.location = 'http://geomapfish.org/';\n}\n\n/**\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeo.misc.File} ngeoFile The file service.\n * @param {gettext} gettext The gettext service\n * @param {angular.$q} $q Angular $q.\n * @constructor\n * @extends {gmf.controllers.AbstractDesktopController}\n * @ngInject\n * @export\n */\nconst exports = function($scope, $injector, ngeoFile, gettext, $q) {\n  gmfControllersAbstractDesktopController.call(this, {\n    srid: 21781,\n    mapViewConfig: {\n      center: [632464, 185457],\n      zoom: 3,\n      resolutions: [250, 100, 50, 20, 10, 5, 2, 1, 0.5, 0.25, 0.1, 0.05]\n    }\n  }, $scope, $injector);\n\n  /**\n   * @type {Array.<string>}\n   * @export\n   */\n  this.searchCoordinatesProjections = [ngeoProjEPSG21781, ngeoProjEPSG2056, 'EPSG:4326'];\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.searchDelay = 500;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showInfobar = true;\n\n  /**\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scaleSelectorValues = [250000, 100000, 50000, 20000, 10000, 5000, 2000, 1000, 500, 250, 100, 50];\n\n  /**\n   * @type {Array.<string>}\n   * @export\n   */\n  this.elevationLayers = ['srtm'];\n\n  /**\n   * @type {Object.<string, gmfx.ProfileLineConfiguration>}\n   * @export\n   */\n  this.profileLinesconfiguration = {\n    'srtm': {}\n  };\n\n  /**\n   * @type {Array.<gmfx.MousePositionProjection>}\n   * @export\n   */\n  this.mousePositionProjections = [{\n    code: 'EPSG:2056',\n    label: 'CH1903+ / LV95',\n    filter: 'ngeoNumberCoordinates::{x}, {y} m'\n  }, {\n    code: 'EPSG:21781',\n    label: 'CH1903 / LV03',\n    filter: 'ngeoNumberCoordinates::{x}, {y} m'\n  }, {\n    code: 'EPSG:4326',\n    label: 'WGS84',\n    filter: 'ngeoDMSCoordinates:2'\n  }];\n\n  /**\n   * @type {gmfx.GridMergeTabs}\n   * @export\n   */\n  this.gridMergeTabs = {\n    'OSM_time_merged': ['osm_time', 'osm_time2'],\n    'transport (merged)': ['fuel', 'parking'],\n    'Learning [merged]': ['information', 'bus_stop']\n  };\n\n  // Allow angular-gettext-tools to collect the strings to translate\n  /** @type {angularGettext.Catalog} */\n  const gettextCatalog = $injector.get('gettextCatalog');\n  gettextCatalog.getString('OSM_time_merged');\n  gettextCatalog.getString('OSM_time (merged)');\n  gettextCatalog.getString('Learning [merged]');\n  gettextCatalog.getString('Add a theme');\n  gettextCatalog.getString('Add a sub theme');\n  gettextCatalog.getString('Add a layer');\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.bgOpacityOptions = 'Test aus Olten';\n\n  if ($injector.has('sentryUrl')) {\n    const options = $injector.has('sentryOptions') ? $injector.get('sentryOptions') : undefined;\n    const raven = new Raven();\n    raven.config($injector.get('sentryUrl'), options)\n      .addPlugin(RavenPluginsAngular)\n      .install();\n  }\n};\n\nolBase.inherits(exports, gmfControllersAbstractDesktopController);\n\n\n/**\n * @param {jQuery.Event} event keydown event.\n * @export\n */\nexports.prototype.onKeydown = function(event) {\n  if (event.ctrlKey && event.key === 'p') {\n    this.printPanelActive = true;\n    event.preventDefault();\n  }\n};\n\n\nexports.module = angular.module('Appdesktop_alt', [\n  appBase.module.name,\n  gmfControllersAbstractDesktopController.module.name,\n  gmfImportModule.name,\n  ngeoRoutingModule.name,\n  ngeoGooglestreetviewModule.name,\n]);\n\nexports.module.controller('AlternativeDesktopController', exports);\n\nexport default exports;\n","module.exports = \"<div class=ngeo-routing> <div class=\\\"ngeo-routing-start form-group\\\"> <ngeo-routing-feature ngeo-routing-feature-map=$ctrl.map ngeo-routing-feature-feature=$ctrl.startFeature_ ngeo-routing-feature-fill-color=\\\"$ctrl.colors['start.fill']\\\" ngeo-routing-feature-stroke-color=\\\"$ctrl.colors['start.stroke']\\\" ngeo-routing-feature-on-change=$ctrl.handleChange> </ngeo-routing-feature> </div> <div class=\\\"ngeo-routing-vias form-group\\\" ng-repeat=\\\"(index, via) in $ctrl.viaArray\\\"> <div class=form-inline> <div class=form-group> <ngeo-routing-feature ngeo-routing-feature-map=$ctrl.map ngeo-routing-feature-feature=via.feature ngeo-routing-feature-fill-color=\\\"$ctrl.colors['via.fill']\\\" ngeo-routing-feature-stroke-color=\\\"$ctrl.colors['via.stroke']\\\" ngeo-routing-feature-on-change=$ctrl.handleChange> </ngeo-routing-feature> </div> <button type=button class=\\\"btn btn-primary delete-via\\\" ng-click=$ctrl.deleteVia(index)> <span class=\\\"fa fa-trash-o\\\"></span> </button> </div> </div> <div class=\\\"ngeo-routing-destination form-group\\\"> <ngeo-routing-feature ngeo-routing-feature-map=$ctrl.map ngeo-routing-feature-feature=$ctrl.targetFeature_ ngeo-routing-feature-fill-color=\\\"$ctrl.colors['destination.fill']\\\" ngeo-routing-feature-stroke-color=\\\"$ctrl.colors['destination.stroke']\\\" ngeo-routing-feature-on-change=$ctrl.handleChange> </ngeo-routing-feature> </div> <div class=\\\"form-group pull-right\\\"> <button type=button class=\\\"btn btn-primary\\\" ng-click=$ctrl.clearRoute()> <span class=\\\"fa fa-trash-o\\\"></span> <span translate>Clear</span> </button> <button type=button class=\\\"btn btn-primary\\\" ng-click=$ctrl.reverseRoute()> <span class=\\\"fa fa-exchange\\\"></span> <span translate>Reverse</span> </button> <button type=button class=\\\"btn btn-primary\\\" ng-click=$ctrl.addVia()> <span class=\\\"fa fa-plus\\\"></span> <span translate>Add via</span> </button> </div> <div class=clearfix></div> <div class=form-horizontal ng-if=\\\"$ctrl.routingProfiles.length > 1\\\"> <div class=form-group> <label class=\\\"control-label col-md-4\\\" translate>Profile</label> <div class=col-md-8> <select class=form-control ng-model=$ctrl.selectedRoutingProfile> <option ng-repeat=\\\"profile in $ctrl.routingProfiles\\\" ng-value=profile>{{profile.label}}</option> </select> </div> </div> </div> <div class=\\\"ngeo-routing-error form-group clearfix\\\" ng-hide=\\\"$ctrl.errorMessage === ''\\\"> {{$ctrl.errorMessage}} </div> <div class=clearfix></div> <div class=form-horizontal ng-hide=\\\"$ctrl.routeDuration === null && $ctrl.routeDistance <= 0\\\"> <div class=row> <div class=col-md-12> <strong translate>Route statistics</strong> </div> </div> <div class=row ng-hide=\\\"$ctrl.routeDuration === null\\\"> <div class=\\\"col-md-4 text-right\\\" translate> Duration </div> <div class=col-md-8> {{$ctrl.routeDuration | ngeoDuration}} </div> </div> <div class=row ng-hide=\\\"$ctrl.routeDistance <= 0\\\"> <div class=\\\"col-md-4 text-right\\\" translate> Distance </div> <div class=col-md-8> {{$ctrl.routeDistance | ngeoUnitPrefix:'m'}} </div> </div> </div> </div> \";","module.exports = \"<div class=ngeo-routing-feature> <div class=input-group> <ngeo-nominatim-input ngeo-nominatim-input-value=$ctrl.featureLabel ngeo-nominatim-input-placeholder=\\\"{{'Search...' | translate}}\\\" ngeo-nominatim-input-on-select=$ctrl.onSelect> </ngeo-nominatim-input> <div class=\\\"input-group-addon btn\\\" ng-click=$ctrl.set()> <span class=\\\"fa fa-map-marker\\\"></span> </div> </div> </div> \";","module.exports = \"<div class=ngeo-nominatim-input> <input type=text class=form-control placeholder={{$ctrl.placeholder}} ng-model=$ctrl.inputValue ngeo-search=$ctrl.options ngeo-search-datasets=$ctrl.datasets ngeo-search-listeners=$ctrl.listeners> </div> \";","module.exports = \"<div class=ngeo-googlestreetview-instructions ng-if=\\\"$ctrl.location === null\\\" translate> Click on a road on the map to start StreetView. </div> <div class=ngeo-googlestreetview-nodata ng-if=$ctrl.noDataAtLocation translate> Street View data not found for this location. </div> \";","module.exports = \"<div class=form-group> <select class=form-control ng-model=$ctrl.mode ng-options=\\\"mode | translate for mode in $ctrl.modes\\\"> </select> </div> <div> <form name=idsl_form novalidate ng-show=\\\"$ctrl.mode === 'Local'\\\"> <div class=form-group> <div class=\\\"input-group input-group-sm\\\"> <input name=file type=file required/> <input class=form-control placeholder=\\\"{{'No file' | translate}}\\\" readonly=readonly type=text value={{$ctrl.fileNameAndSize}} ng-click=$ctrl.browse() /> <span class=input-group-btn> <button class=\\\"btn btn-default\\\" type=button ng-click=$ctrl.browse() translate>Browse</button> </span> </div> </div> <div class=form-group> <button class=\\\"btn btn-sm btn-default form-control\\\" title=\\\"{{'Load a file from local' | translate}}\\\" type=submit ng-click=\\\"idsl_form.$valid && $ctrl.load()\\\" ng-disabled=\\\"$ctrl.file === undefined\\\"> <span>{{'Load local file' | translate}}</span> </button> </div> </form> <form name=idsc_form novalidate ng-show=\\\"$ctrl.mode === 'Online'\\\"> <div class=\\\"form-group gmf-importdatasource-url-form-group\\\"> <input autocomplete=off class=form-control name=url placeholder=\\\"{{'Choose or enter online resource URL' | translate}}\\\" required type=url ng-disabled=$ctrl.pending ng-model=$ctrl.url /> </div> <div class=form-group> <button class=\\\"btn btn-sm btn-default form-control gmf-importdatasource-connect-btn\\\" title=\\\"{{'Connect to online resource' | translate}}\\\" type=submit ng-click=\\\"idsc_form.$valid && $ctrl.connect()\\\" ng-disabled=\\\"idsc_form.$invalid || $ctrl.pending\\\"> <span ng-if=$ctrl.pending>{{'Connecting, please wait...' | translate}}</span> <span ng-if=\\\"!$ctrl.pending && $ctrl.hasError\\\">{{'Failed to connect' | translate}}</span> <span ng-if=\\\"!$ctrl.pending && !$ctrl.hasError\\\">{{'Connect' | translate}}</span> </button> </div> </form> </div> <div class=gmf-importdatasource-layers ng-if=\\\"$ctrl.wmsCapabilities !== null || $ctrl.wmtsCapabilities !== null\\\"> <hr/> <gmf-wmscapabilitylayertreenode capabilities=::$ctrl.wmsCapabilities layer=::$ctrl.wmsCapabilities.Capability.Layer url=::$ctrl.url ng-if=\\\"$ctrl.wmsCapabilities !== null\\\"> </gmf-wmscapabilitylayertreenode> <gmf-wmtscapabilitylayertree capabilities=::$ctrl.wmtsCapabilities layers=::$ctrl.wmtsCapabilities.Contents.Layer url=::$ctrl.url ng-if=\\\"$ctrl.wmtsCapabilities !== null\\\"> </gmf-wmtscapabilitylayertree> </div> \";","module.exports = \"<ul> <li ng-repeat=\\\"layer in ::$ctrl.layers\\\"> <div class=gmf-wmscapabilitylayertreenode-header> <span class=gmf-wmscapabilitylayertreenode-popover-container ngeo-popover ngeo-popover-dismiss=.content ngeo-popover-placement=left> <span ngeo-popover-anchor class=\\\"fa fa-cog gmf-wmscapabilitylayertreenode-actions\\\"> </span> <div class=gmf-wmscapabilitylayertreenode-popover-content ngeo-popover-content> <ul> <li> <i class=\\\"fa fa-plus fa-fw\\\"></i> <a href=\\\"\\\" ng-click=\\\"$ctrl.createAndAddDataSource(layer); popoverCtrl.dismissPopover()\\\"> <span translate>Add layer</span> </a> </li> <li ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a aria-expanded=false data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-click=popoverCtrl.dismissPopover()> <span translate>Open/Close description</span> </a> </li> </ul> </div> </span> <a class=\\\"fa fa-circle-thin gmf-wmscapabilitylayertreenode-no-icon fa-fw\\\"></a> <span class=gmf-wmscapabilitylayertreenode-title>{{ ::layer.Title }}</span> <div class=\\\"collapse gmf-wmscapabilitylayertreenode-description\\\" id=gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <a aria-expanded=false class=gmf-wmscapabilitylayertreenode-description-toggle data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}}> <span translate>Hide description</span> </a> <span class=gmf-wmscapabilitylayertreenode-description-content>{{ ::layer.Abstract }}</span> </div> </div> </li> </ul> \";","module.exports = \"<ul> <li ng-repeat=\\\"layer in ::$ctrl.layer.Layer\\\"> <div class=gmf-wmscapabilitylayertreenode-header> <span class=gmf-wmscapabilitylayertreenode-popover-container ng-if=\\\"::(layer.Name !== undefined || layer.Abstract !== undefined)\\\" ngeo-popover ngeo-popover-dismiss=.content ngeo-popover-placement=left> <span ngeo-popover-anchor class=\\\"fa fa-cog gmf-wmscapabilitylayertreenode-actions\\\"> </span> <div class=gmf-wmscapabilitylayertreenode-popover-content ngeo-popover-content> <ul> <li ng-if=\\\"::(layer.Name !== undefined)\\\"> <i class=\\\"fa fa-plus fa-fw\\\"></i> <a href=\\\"\\\" ng-click=\\\"$ctrl.createAndAddDataSource(layer); popoverCtrl.dismissPopover()\\\"> <span translate>Add layer</span> </a> </li> <li ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a aria-expanded=false data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-click=popoverCtrl.dismissPopover()> <span translate>Open/Close description</span> </a> </li> </ul> </div> </span> <a aria-expanded=false class=\\\"fa gmf-wmscapabilitylayertreenode-expand-node fa-fw\\\" data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-children-{{::$ctrl.getUid(layer)}} ng-if=\\\"::(layer.Layer !== undefined && layer.Layer.length)\\\"></a> <span ng-if=\\\"::(layer.Layer !== undefined && layer.Layer.length)\\\" class=\\\"fa fa-fw gmf-wmscapabilitylayertreenode-group\\\"> </span> <a class=\\\"fa fa-circle-thin gmf-wmscapabilitylayertreenode-no-icon fa-fw\\\" ng-if=\\\"::(layer.Layer === undefined || layer.Layer.length === 0)\\\"></a> <span class=gmf-wmscapabilitylayertreenode-title>{{ ::layer.Title }}</span> <div class=\\\"collapse gmf-wmscapabilitylayertreenode-description\\\" id=gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <a aria-expanded=false class=gmf-wmscapabilitylayertreenode-description-toggle data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}}> <span translate>Hide description</span> </a> <span class=gmf-wmscapabilitylayertreenode-description-content>{{ ::layer.Abstract }}</span> </div> </div> <gmf-wmscapabilitylayertreenode class=collapse id=gmf-wmscapabilitylayertreenode-children-{{::$ctrl.getUid(layer)}} capabilities=::$ctrl.capabilities layer=::layer ng-if=\\\"::(layer.Layer !== undefined)\\\"> </gmf-wmscapabilitylayertreenode> </li> </ul> \";","module.exports = \"<div class=\\\"text-center btn-group dropup\\\" gmf-elevation gmf-elevation-active=ctrl.active gmf-elevation-elevation=ctrl.elevationValue gmf-elevation-loading=ctrl.elevationLoading gmf-elevation-layer=ctrl.selectedElevationLayer gmf-elevation-map=::ctrl.map> <a type=button class=\\\"btn btn-default\\\" aria-expanded=false ng-class=\\\"::{'dropdown-toggle': ctrl.layers.length > 1}\\\" ng-attr-data-toggle=\\\"{{::(ctrl.layers.length > 1) ? 'dropdown' : ''}}\\\"> <span class=gmf-elevationwidget-value> {{ctrl.elevationValue | number}}<span ng-show=ctrl.elevationValue> m</span> <span ng-show=ctrl.elevationLoading class=\\\"fa fa-spinner\\\"></span> <span ng-show=\\\"!ctrl.elevationValue && !ctrl.elevationLoading\\\" translate>Elevation…</span> </span><span class=caret ng-if=\\\"::ctrl.layers.length > 1\\\"></span> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu ng-if=\\\"::ctrl.layers.length > 1\\\"> <li class=dropdown-header translate>Elevation data sources</li> <li ng-repeat=\\\"elevationItem in ::ctrl.layers\\\"> <a href ng-click=\\\"ctrl.selectedElevationLayer = elevationItem\\\"> <span class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedElevationLayer === elevationItem}\\\"></span> {{::elevationItem | translate}} </a> </li> </ul> </div> \";","module.exports = \"<div class=\\\"gmf-profile-container panel\\\" ng-show=ctrl.active> <div class=ngeo-profile ng-show=!ctrl.isErrored ngeo-profile=ctrl.profileData ngeo-profile-highlight=ctrl.profileHighlight ngeo-profile-options=::ctrl.profileOptions> </div> <ul class=gmf-profile-legend ng-show=!ctrl.isErrored> <li ng-repeat=\\\"name in ::ctrl.getLayersNames()\\\"> <i class=\\\"fa fa-minus\\\" style=color:{};></i> &nbsp;{{name | translate}}&nbsp;{{ctrl.currentPoint.elevations[name]}}&nbsp;{{ctrl.currentPoint.yUnits}} </li> </ul> <div class=\\\"gmf-profile-export btn-group dropup\\\" ng-show=!ctrl.isErrored> <a class=dropdown-toggle href=\\\"\\\" ng-show=\\\"ctrl.profileData.length !== 0\\\" data-toggle=dropdown aria-expanded=false> {{'Export' | translate}}&nbsp;<i class=\\\"fa fa-caret-up\\\"></i> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li> <a href=\\\"\\\" ng-click=::ctrl.downloadCsv()> <i class=\\\"fa fa-table\\\"></i>&nbsp;{{'Download CSV' | translate}}</a> </li> </ul> </div> <div class=gmf-profile-error ng-show=ctrl.isErrored> <p>{{'The profile service does not respond, please try later.' | translate}}</p> </div> <div class=close ng-click=\\\"ctrl.line = null\\\">&times;</div> </div> \";","module.exports = \"<div class=gmf-print> <div ng-show=\\\"$ctrl.isState('CAPABILITIES_NOT_LOADED') !== true && $ctrl.isState('ERROR_ON_GETCAPABILITIES') !== true\\\"> <div class=\\\"gmf-print-layout-selector form-horizontal\\\"><ng-transclude/></div> <div ng-repeat=\\\"attribute in $ctrl.layoutInfo.simpleAttributes\\\" class=\\\"gmf-print-layoutinfo form-group\\\"> <div ng-if=\\\"$ctrl.hiddenAttributeNames === undefined || $ctrl.hiddenAttributeNames.indexOf(attribute.name) < 0\\\"> <input ng-if=\\\"attribute.type === 'number'\\\" ng-model=attribute.value class=form-control type=number ng-attr-placeholder=\\\"{{attribute.name | translate}}\\\"> <input ng-if=\\\"attribute.type === 'text'\\\" ng-model=attribute.value class=form-control type=text ng-attr-placeholder=\\\"{{attribute.name | translate}}\\\"> <textarea ng-if=\\\"attribute.type === 'textarea'\\\" ng-model=attribute.value class=form-control row=3 ng-attr-placeholder=\\\"{{attribute.name | translate}}\\\"></textarea> <div ng-if=\\\"attribute.type === 'checkbox'\\\" class=checkbox> <label> <input ng-model=attribute.value type=checkbox> <span>{{attribute.name | translate}}</span> </label> </div> </div> </div> <div ng-show=\\\"$ctrl.layoutInfo.legend !== undefined\\\" class=\\\"gmf-print-legend checkbox\\\"> <label> <input ng-model=$ctrl.layoutInfo.legend type=checkbox> <span translate>Legend</span> </label> </div> <div class=\\\"gmf-print-layout-selector form-horizontal\\\"> <div ng-show=\\\"$ctrl.layoutInfo.layouts.length !== 1\\\" class=form-group> <label class=\\\"control-label col-md-5\\\" translate>Layout</label> <div class=col-md-7> <div class=\\\"btn-group btn-block\\\"> <button type=button class=\\\"btn btn-default form-control\\\" data-toggle=dropdown> <span>{{$ctrl.layoutInfo.layout | translate}}&nbsp;</span> <i class=\\\"fa fa-caret-down\\\"></i> </button> <ul class=\\\"dropdown-menu dropdown-menu-right btn-block\\\" role=menu> <li ng-repeat=\\\"layout in $ctrl.layoutInfo.layouts\\\"> <a ng-click=$ctrl.setLayout(layout) href=\\\"\\\">{{layout | translate}}</a> </li> </ul> </div> </div> </div> <div ng-show=\\\"$ctrl.layoutInfo.scales.length !== 1\\\" class=\\\"gmf-print-scale-selector form-group\\\"> <label class=\\\"control-label col-md-5\\\" translate>Scale</label> <div class=col-md-7> <div class=\\\"btn-group btn-block\\\"> <button type=button class=\\\"btn btn-default form-control\\\" data-toggle=dropdown aria-expanded=false> <span>{{$ctrl.layoutInfo.scale | ngeoScalify}}&nbsp;</span> <i class=\\\"fa fa-caret-down\\\"></i> </button> <ul class=\\\"dropdown-menu dropdown-menu-right btn-block\\\" role=menu> <li ng-repeat=\\\"scale in $ctrl.layoutInfo.scales\\\"> <a ng-click=$ctrl.getSetScale(scale) href=\\\"\\\">{{scale | ngeoScalify}}</a> </li> <span ng-if=$ctrl.scaleInput> <li class=dropdown-header translate>Manual entry</li> <li> <div class=gmf-print-custom-scale> 1 : <input class=gmf-print-custom-scale-input type=number min=1 ng-model=$ctrl.getSetScale ng-model-options=\\\"{getterSetter: true}\\\"> </div> </li> </span> </ul> </div> </div> </div> <div ng-show=\\\"$ctrl.layoutInfo.dpis.length !== 1\\\" class=\\\"gmf-print-dpi-selector form-group\\\"> <label class=\\\"control-label col-md-3\\\" translate>DPI</label> <div class=col-md-5> <div class=\\\"btn-group btn-block\\\"> <button type=button class=\\\"btn btn-default form-control\\\" data-toggle=dropdown aria-expanded=false> <span>{{$ctrl.layoutInfo.dpi}}&nbsp;</span> <i class=\\\"fa fa-caret-down\\\"></i> </button> <ul class=\\\"dropdown-menu dropdown-menu-right btn-block\\\" role=menu> <li ng-repeat=\\\"dpi in $ctrl.layoutInfo.dpis\\\"> <a href=\\\"\\\" ng-click=$ctrl.setDpi(dpi)>{{dpi}}</a> </li> </ul> </div> </div> </div> <div class=\\\"gmf-print-rotation-selector form-group\\\"> <label class=\\\"control-label col-md-3\\\" translate>Rotation</label> <div class=col-md-5> <input class=\\\"form-control gmf-print-rotation-input\\\" type=range value=0 min=-180 max=180 data-toggle=tooltip title=\\\"{{'You can also use Alt+Shift on the map' | translate}}\\\"> </div> <div class=col-md-4> <input class=\\\"form-control gmf-print-rotation-input\\\" type=number min=-180 max=180 value=0> </div> </div> </div> <div class=\\\"gmf-print-actions form-group pull-right\\\"> <span ng-show=\\\"$ctrl.isState('PRINTING')\\\"> <i class=\\\"fa fa-refresh fa-spin\\\"></i> </span> <a ng-show=\\\"$ctrl.isState('PRINTING')\\\" class=\\\"gmf-print-cancel btn btn-link\\\" href=\\\"\\\" ng-click=$ctrl.cancel() translate>Abort</a> <button ng-show=$ctrl.layoutInfo.formats.png class=\\\"gmf-print-image btn btn-primary\\\" ng-disabled=\\\"$ctrl.isState('PRINTING')\\\" ng-click=\\\"$ctrl.print('png')\\\" translate>Image</button> <button ng-show=$ctrl.layoutInfo.formats.pdf class=\\\"gmf-print-pdf btn btn-primary\\\" ng-disabled=\\\"$ctrl.isState('PRINTING')\\\" ng-click=\\\"$ctrl.print('pdf')\\\" translate>PDF</button> </div> <div ng-show=\\\"$ctrl.isState('ERROR_ON_REPORT')\\\" class=\\\"gmf-print-error-report form-group pull-left text-danger\\\"> <p>{{'Error during the print, please try again.' | translate}}</p> </div> </div> <div ng-show=\\\"$ctrl.isState('CAPABILITIES_NOT_LOADED')\\\" class=\\\"gmf-print-wait form-group pull-left\\\"> <p>{{'Connecting to the print server, please wait.' | translate}}</p> </div> <div ng-show=\\\"$ctrl.isState('ERROR_ON_GETCAPABILITIES')\\\" class=\\\"gmf-print-error-capabilities form-group pull-left text-danger\\\"> <p>{{'The print server is unavailable. Please, try later.' | translate}}</p> </div> </div> \";","module.exports = \"<div ng-switch=efsCtrl.selectedEditableTreeCtrl> <div ng-switch-when=null> <select class=form-control ng-model=efsCtrl.selectedEditableTreeCtrl ng-show=\\\"efsCtrl.editableTreeCtrls.length > 0\\\" ng-options=\\\"treeCtrl.node.name | translate for treeCtrl in efsCtrl.editableTreeCtrls\\\"> <option value=\\\"\\\" translate>-- Choose a layer --</option> </select> <span ng-show=\\\"efsCtrl.editableTreeCtrls.length == 0\\\" translate>No editable layer available!</span> </div> <div ng-switch-default> <div class=row> <div class=col-sm-12> <span translate>Currently editing: </span> <b>{{ efsCtrl.selectedEditableTreeCtrl.node.name | translate }}</b> <span class=\\\"fa fa-pencil\\\"></span> <br> <button ng-click=efsCtrl.stopEditing() class=\\\"btn btn-link btn-xs pull-right\\\"> <span class=\\\"fa fa-times\\\"></span> {{'Stop editing' | translate}} </button> </div> </div> <gmf-editfeature gmf-editfeature-dirty=efsCtrl.dirty gmf-editfeature-editabletreectrl=::efsCtrl.selectedEditableTreeCtrl gmf-editfeature-map=::efsCtrl.map gmf-editfeature-state=efsCtrl.state gmf-editfeature-tolerance=::efsCtrl.tolerance gmf-editfeature-vector=::efsCtrl.vectorLayer> </gmf-editfeature> </div> </div> \";","module.exports = \"<div> <div ng-switch=efCtrl.feature> <a ng-switch-when=null ng-if=efCtrl.geomType href ngeo-btn ngeo-createfeature ngeo-createfeature-active=efCtrl.createActive ngeo-createfeature-features=::efCtrl.features ngeo-createfeature-geom-type=::efCtrl.geomType ngeo-createfeature-map=::efCtrl.map class=\\\"btn btn-default\\\" ng-class=\\\"{active: efCtrl.createActive}\\\" ng-model=efCtrl.createActive> <span ng-switch=::efCtrl.geomType> <span ng-switch-when=Point> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> {{'Draw new point' | translate}} </span> <span ng-switch-when=MultiPoint> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> {{'Draw new point' | translate}} </span> <span ng-switch-when=LineString> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> {{'Draw new linestring' | translate}} </span> <span ng-switch-when=MultiLineString> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> {{'Draw new linestring' | translate}} </span> <span ng-switch-when=Polygon> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> {{'Draw new polygon' | translate}} </span> <span ng-switch-when=MultiPolygon> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> {{'Draw new polygon' | translate}} </span> </span> </a> <div ng-switch-default> <form novalidate name=form class=\\\"form gmf-editfeature-attributes-container\\\" ng-if=efCtrl.attributes> <div class=row> <div class=col-sm-12> <a class=close ng-click=efCtrl.cancel() ng-disabled=efCtrl.pending title=\\\"{{'Cancel modifications' | translate}}\\\" href>&times;</a> </div> </div> <ngeo-attributes ngeo-attributes-attributes=::efCtrl.attributes ngeo-attributes-disabled=efCtrl.pending ngeo-attributes-feature=::efCtrl.feature> </ngeo-attributes> <input type=submit value=\\\"{{'Save' | translate}}\\\" class=\\\"btn btn-sm btn-default gmf-editfeature-btn-save\\\" ng-click=\\\"form.$valid && efCtrl.save()\\\" ng-disabled=\\\"!efCtrl.dirty || efCtrl.pending\\\" title=\\\"{{'Save modifications' | translate}}\\\"> <a class=\\\"btn btn-sm btn-default gmf-editfeature-btn-cancel\\\" ng-click=efCtrl.confirmCancel() ng-disabled=efCtrl.pending title=\\\"{{'Cancel modifications' | translate}}\\\" href>{{'Cancel' | translate}}</a> <button class=\\\"btn btn-sm btn-link gmf-editfeature-btn-delete\\\" ng-click=efCtrl.delete() ng-disabled=efCtrl.pending ng-show=efCtrl.featureId title=\\\"{{'Delete this feature' | translate}}\\\"> <span class=\\\"fa fa-trash\\\"></span> {{'Delete' | translate}} </button> </form> </div> </div> <ngeo-modal ng-model=efCtrl.unsavedModificationsModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Unsaved modifications!' | translate}} </h4> </div> <div class=modal-body> {{'There are unsaved changes.' | translate}} </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal ng-click=efCtrl.continueWithoutSaving()> {{'Continue without saving' | translate}} </button> <button type=button class=\\\"btn btn-primary\\\" data-dismiss=modal> {{'Cancel' | translate}} </button> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal ng-click=efCtrl.submit()> {{'Save' | translate}} </button> </div> </ngeo-modal> <ngeo-modal ng-model=efCtrl.showServerError> <div class=modal-header>{{'Server error.' | translate}}</div> <div class=modal-body>{{$parent.efCtrl.serverErrorType}}<br> {{$parent.efCtrl.serverErrorMessage || ('Unexpected server error.' | translate)}}</div> </ngeo-modal> </div> \";","module.exports = \"<fieldset ng-disabled=attrCtrl.disabled> <div class=form-group ng-repeat=\\\"attribute in ::attrCtrl.attributes\\\"> <div ng-if=\\\"attribute.type !== 'geometry'\\\"> <label ng-if=\\\"::attribute.type !== 'boolean'\\\" class=control-label>{{ ::attribute.name | translate }} <span class=text-muted>{{::attribute.required ? \\\"*\\\" : \\\"\\\"}}</span> </label> <div ng-switch=::attribute.type> <div ng-switch-when=boolean class=checkbox> <label> <input name={{::attribute.name}} ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); type=checkbox>  <span> {{ ::attribute.name | translate }} <span class=text-muted>{{::attribute.required ? \\\"*\\\" : \\\"\\\"}}</span></span> </label> </div> <select name={{::attribute.name}} ng-required=attribute.required ng-switch-when=select ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control type=text> <option ng-repeat=\\\"attribute in ::attribute.choices\\\" value=\\\"{{ ::attribute }}\\\"> {{ ::attribute }} </option> </select> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-when=date ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ngeo-datetimepicker ngeo-datetimepicker-options=\\\"'{&quot;timepicker&quot;: false, &quot;format&quot;: &quot;' + attribute.format + '&quot;, &quot;allowBlank&quot;: true, &quot;todayButton&quot;: false, &quot;mask&quot;: &quot;' + attribute.mask + '&quot;}'\\\" class=form-control type=text>  <input name={{::attribute.name}} id=time ng-required=attribute.required ng-switch-when=time ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ngeo-datetimepicker ngeo-datetimepicker-options=\\\"'{&quot;datepicker&quot;: false, &quot;format&quot;: &quot;' + attribute.format + '&quot;, &quot;todayButton&quot;: false, &quot;mask&quot;: &quot;' + attribute.mask + '&quot;, &quot;defaultTime&quot;: &quot;00:00&quot;}'\\\" class=form-control type=text>  <input name={{::attribute.name}} ng-required=attribute.required ng-switch-when=datetime ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ngeo-datetimepicker ngeo-datetimepicker-options=\\\"'{&quot;scrollTime&quot;: false, &quot;format&quot;: &quot;' + attribute.format + '&quot;, &quot;allowBlank&quot;: true, &quot;todayButton&quot;: false, &quot;mask&quot;: &quot;' + attribute.mask + '&quot;, &quot;defaultTime&quot;: &quot;00:00&quot;}'\\\" class=form-control type=text>  <div ng-switch-when=number ng-switch=::attribute.numType> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-when=integer ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control step=1 type=number>  <input name={{::attribute.name}} ng-required=attribute.required ng-switch-default ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control type=number>  </div> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-default ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ng-maxlength=attribute.maxLength class=form-control type=text>  <div ng-show=\\\"attrCtrl.form.$submitted || attrCtrl.form[attribute.name].$touched\\\"> <p class=text-danger ng-show=attrCtrl.form[attribute.name].$error.required> {{'This field is required' | translate}} </p> </div> </div> </div> </div> </fieldset> \";","module.exports = \"<ngeo-drawfeature ngeo-btn-group class=btn-group ngeo-drawfeature-active=efCtrl.drawActive ngeo-drawfeature-map=efCtrl.map ngeo-drawfeature-showmeasure=efCtrl.showMeasure> <a data-toggle=tooltip title=\\\"{{'Draw a point on the map' | translate}}\\\" href ngeo-btn ngeo-drawpoint class=\\\"btn btn-default ngeo-drawfeature-point\\\" ng-class=\\\"{active: dfCtrl.drawPoint.active}\\\" ng-model=dfCtrl.drawPoint.active> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a line on the map' | translate}}\\\" href ngeo-btn ngeo-measurelength class=\\\"btn btn-default ngeo-drawfeature-linestring\\\" ng-class=\\\"{active: dfCtrl.measureLength.active}\\\" ng-model=dfCtrl.measureLength.active> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a polygon on the map' | translate}}\\\" href ngeo-btn ngeo-measurearea class=\\\"btn btn-default ngeo-drawfeature-polygon\\\" ng-class=\\\"{active: dfCtrl.measureArea.active}\\\" ng-model=dfCtrl.measureArea.active> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a circle on the map' | translate}}\\\" href ngeo-btn ngeo-measureazimut class=\\\"btn btn-default ngeo-drawfeature-circle\\\" ng-class=\\\"{active: dfCtrl.measureAzimut.active}\\\" ng-model=dfCtrl.measureAzimut.active> <span class=\\\"gmf-icon gmf-icon-circle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a rectangle on the map' | translate}}\\\" href ngeo-btn ngeo-drawrectangle class=\\\"btn btn-default ngeo-drawfeature-rectangle\\\" ng-class=\\\"{active: dfCtrl.drawRectangle.active}\\\" ng-model=dfCtrl.drawRectangle.active> <span class=\\\"gmf-icon gmf-icon-rectangle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a text label on the map' | translate}}\\\" href ngeo-btn ngeo-drawtext class=\\\"btn btn-default ngeo-drawfeature-text\\\" ng-class=\\\"{active: dfCtrl.drawText.active}\\\" ng-model=dfCtrl.drawText.active> <span class=\\\"gmf-icon gmf-icon-text\\\"></span> </a> </ngeo-drawfeature> <div ng-switch=efCtrl.selectedFeature> <hr class=gmf-drawfeature-separator ng-show=\\\"efCtrl.getFeaturesArray().length > 0\\\"> <div ng-switch-when=null> <div ng-show=\\\"efCtrl.getFeaturesArray().length > 0\\\"> <div class=ngeo-drawfeature-actionbuttons> <button type=button data-toggle=dropdown aria-haspopup=true aria-expanded=false ngeo-exportfeatures ngeo-exportfeatures-features=efCtrl.features class=\\\"btn btn-link btn-sm\\\"> <span class=\\\"fa fa-mail-forward\\\"></span> {{'Export' | translate}} <span class=caret></span> </button> <button ng-click=efCtrl.clearFeatures() class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-trash\\\"></span> {{'Delete All' | translate}} </button> </div> <div class=gmf-eol></div> <div class=\\\"gmf-drawfeature-featurelist list-group list-group-sm\\\"> <button role=button class=list-group-item ng-repeat=\\\"feature in efCtrl.getFeaturesArray()\\\" ng-click=efCtrl.selectFeatureFromList(feature);> {{ feature.get(efCtrl.nameProperty) }} </button> </div> </div> </div> <div ng-switch-default> <button ng-click=\\\"efCtrl.selectedFeature = null;\\\" class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-arrow-left\\\"></span> {{'List' | translate}} </button> <div class=ngeo-drawfeature-actionbuttons> <button type=button data-toggle=dropdown aria-haspopup=true aria-expanded=false ngeo-exportfeatures ngeo-exportfeatures-features=efCtrl.selectedFeatures class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-mail-forward\\\"></span> {{'Export' | translate}} <span class=caret></span> </button> <button ng-click=efCtrl.removeFeature(efCtrl.selectedFeature); class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-trash\\\"></span> {{'Delete' | translate}} </button> </div> <div class=gmf-eol></div> <gmf-featurestyle gmf-featurestyle-feature=efCtrl.selectedFeature> </gmf-featurestyle> </div> </div> \";","module.exports = \"<div ng-if=\\\"fsCtrl.feature && fsCtrl.type\\\"> <div class=form-group> <input ng-model=fsCtrl.getSetName ng-model-options=\\\"{getterSetter: true}\\\" ng-attr-placeholder=\\\"{{'Name' | translate}}\\\" class=form-control /> </div> <div ng-if=\\\"fsCtrl.type !== 'Text'\\\" class=form-group> <input id=gmf-featurestyle-showlabel type=checkbox ng-model=fsCtrl.getSetShowLabel ng-model-options=\\\"{getterSetter: true}\\\"/> <label ng-switch=fsCtrl.type for=gmf-featurestyle-showlabel class=control-label> {{'Display label' | translate}} </label> </div> <div ng-if=\\\"fsCtrl.type !== 'Text'\\\" class=form-group> <input id=gmf-featurestyle-showmeasure type=checkbox ng-model=fsCtrl.getSetShowMeasure ng-model-options=\\\"{getterSetter: true}\\\"/> <label ng-switch=fsCtrl.type for=gmf-featurestyle-showmeasure class=control-label> <span ng-switch-when=Circle> {{'Display azimuth and radius' | translate}} </span> <span ng-switch-when=Polygon> {{'Display surface' | translate}} </span> <span ng-switch-when=Rectangle> {{'Display surface' | translate}} </span> <span ng-switch-when=LineString> {{'Display length' | translate}} </span> <span ng-switch-when=Point> {{'Display coordinates' | translate}} </span> </label> <em class=text-muted> ({{ fsCtrl.measure }}) </em> </div> </div> <div ng-if=\\\"fsCtrl.feature && fsCtrl.type\\\" class=form-horizontal> <div class=form-group> <div ngeo-colorpicker=\\\"\\\" ngeo-colorpicker-color=fsCtrl.color class=col-md-12> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Point'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Size' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=3 max=20 step=1 ng-model=fsCtrl.getSetSize ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Text'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Size' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=8 max=30 step=1 ng-model=fsCtrl.getSetSize ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Circle' || fsCtrl.type === 'LineString' || fsCtrl.type === 'Polygon' || fsCtrl.type === 'Rectangle'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Stroke' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=0.5 max=5 step=0.5 ng-model=fsCtrl.getSetStroke ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Circle' || fsCtrl.type === 'Polygon' || fsCtrl.type === 'Rectangle'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Opacity' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=0 max=1 step=0.05 ng-model=fsCtrl.getSetOpacity ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Text'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Angle' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=-180 max=180 step=22.5 ng-model=fsCtrl.getSetAngle ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> </div> \";","module.exports = \"<div class=ngeo-displaywindow ng-show=$ctrl.open ng-style=$ctrl.style> <div class=windowcontainer> <button type=button class=\\\"btn fa-close close\\\" ng-click=$ctrl.close()> </button> <div class=animation-container> <div class=slide-animation> <div class=\\\"header ui-draggable-handle\\\" ng-if=\\\"$ctrl.title !== null\\\"> <p class=title>{{ $ctrl.title }}</p> </div> <div class=details ng-if=$ctrl.content ng-bind-html=$ctrl.content> </div> <div class=details ng-if=\\\"$ctrl.url !== null\\\"> <iframe frameborder=0 type=text/html height=100% width=100% ng-src=\\\"{{ $ctrl.urlTrusted }}\\\"></iframe> </div> </div> </div> </div> </div> \";","module.exports = \"<ul class=gmf-theme-selector> <li ng-repeat=\\\"theme in $ctrl.themes\\\" ng-click=$ctrl.setTheme(theme) ng-class=\\\"{'gmf-theme-selector-active': $ctrl.gmfThemeManager.getThemeName() == theme.name}\\\"> <img class=gmf-thumb ng-src={{::theme.icon}} /> <span class=gmf-text>{{theme.name | translate}}</span> </li> </ul> \";","module.exports = \"<div class=gmf-search> <input type=text ng-attr-placeholder={{$ctrl.placeholder|translate}} class=form-control ng-model=$ctrl.inputValue ngeo-search=$ctrl.options ngeo-search-datasets=$ctrl.datasets ngeo-search-listeners=$ctrl.listeners> <span class=\\\"gmf-clear-button ng-hide\\\" ng-hide=\\\"!$ctrl.clearButton || $ctrl.inputValue == ''\\\" ng-click=$ctrl.onClearButton()> </span> </div> <span ng-if=$ctrl.colorChooser> <span ng-show=$ctrl.displayColorPicker ngeo-popover ngeo-popover-placement=bottom> <button class=\\\"gmf-color-button fa fa-tint\\\" ngeo-popover-anchor data-original-title=\\\"{{'Change the color of the search result'|translate}}\\\"></button> <div ngeo-popover-content> <div ngeo-colorpicker ngeo-colorpicker-color=$ctrl.color></div> </div> </span> </span> \";","module.exports = \"<table class=ngeo-colorpicker-palette> <tr ng-repeat=\\\"colors in ::ctrl.colors\\\"> <td ng-repeat=\\\"color in ::colors\\\" ng-click=ctrl.setColor(color) ng-class=\\\"{'ngeo-colorpicker-selected': color == ctrl.color}\\\"> <div ng-style=\\\"::{'background-color': color}\\\"></div> </td> </tr> </table> \";","module.exports = \"<div class=gmf-displayquerywindow ng-class=\\\"{'desktop': ctrl.desktop, 'mobile': !ctrl.desktop}\\\" ng-show=ctrl.open ngeo-swipe-up=\\\"ctrl.collapsed = false\\\" ngeo-swipe-down=\\\"ctrl.collapsed = true\\\" ngeo-swipe-disable-mouse ng-swipe-disable-mouse ng-swipe-left=ctrl.next() ng-swipe-right=ctrl.previous()> <button class=collapse-button type=button ng-show=::!ctrl.desktop ng-click=\\\"ctrl.collapsed = !ctrl.collapsed\\\" ng-class=\\\"[ctrl.collapsed ? 'collapse-button-up' : 'collapse-button-down']\\\"> </button> <div class=windowcontainer> <button type=button class=\\\"btn fa-close close\\\" ng-click=ctrl.close()> </button> <div class=animation-container ng-class=\\\"[ctrl.collapsed ? '' : 'animation-container-detailed', ctrl.isNext ? 'next' : 'previous']\\\"> <div ng-animate-swap=ctrl.animate class=\\\"slide-animation gmf-animatable\\\"> <div class=header> <p class=title>{{ctrl.source.label | translate}}</p> <p class=subtitle>{{ctrl.getFeatureValues()[ctrl.source.identifierAttributeField]}}</p> </div> <div class=details> <table> <tr ng-repeat=\\\"(key, value) in ctrl.getFeatureValues()\\\" ng-if=\\\"value !== undefined\\\"> <td class=details-key ng-bind-html=\\\"key | translate | ngeoTrustHtml\\\"></td> <td class=details-value ng-bind-html=\\\"value | ngeoTrustHtml\\\"></td> </tr> </table> </div> </div> </div> <div class=navigate> <div class=placeholder> <button type=button class=\\\"previous btn\\\" ng-disabled=ctrl.isFirst() ng-show=\\\"ctrl.getResultLength() > 1\\\" ng-click=ctrl.previous()> <span ng-show=::ctrl.desktop>{{'Prev.' | translate}}</span> </button> </div> <div class=results> <span ng-show=::!ctrl.desktop>{{'Result' | translate}}</span> <span>{{ctrl.currentResult + 1}}</span> <span>/</span> <span>{{ctrl.getResultLength()}}</span> <div ng-show=::ctrl.desktop class=dropup> <button type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span class=\\\"fa fa-filter\\\"></span> <span class=\\\"fa fa-caret-up\\\"></span> </button> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li> <a href=# ng-click=ctrl.setSelectedSource(null)> <i class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedSource === null}\\\"> </i> <span>{{'All layers' | translate}} ({{ctrl.ngeoQueryResult.total}})</span> </a> </li> <li role=separator class=divider> </li> <li ng-repeat-start=\\\"source in ctrl.ngeoQueryResult.sources | filter: ctrl.sourcesFilter\\\" ng-repeat-end ng-class=\\\"{'disabled': source.features.length <= 0}\\\"> <a href=# ng-click=ctrl.setSelectedSource(source)> <i class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedSource === source}\\\"> </i> <span>{{source.label | translate}} ({{source.features.length}})</span> </a> </li> </ul> </div> </div> <div class=placeholder> <button type=button class=\\\"next btn\\\" ng-disabled=ctrl.isLast() ng-show=\\\"ctrl.getResultLength() > 1\\\" ng-click=ctrl.next()> <span ng-show=::ctrl.desktop>{{'Next' | translate}}</span> </button> </div> </div> </div> </div> \";","module.exports = \"<div class=\\\"gmf-displayquerygrid panel\\\" ng-show=ctrl.active> <div class=close ng-click=ctrl.clear()> &times; </div> <ul class=\\\"nav nav-pills\\\" role=tablist> <li ng-repeat=\\\"gridSource in ctrl.getGridSources() track by gridSource.source.label\\\" role=presentation ng-class=\\\"{'active' : ctrl.isSelected(gridSource)}\\\" ng-click=ctrl.selectTab(gridSource)> <a href=#{{ctrl.escapeValue(gridSource.source.label)}} data-target=#{{ctrl.escapeValue(gridSource.source.label)}} aria-controls={{ctrl.escapeValue(gridSource.source.label)}} role=tab data-toggle=tab> <span ng-if=\\\"gridSource.source.tooManyResults !== true\\\"> {{gridSource.source.label | translate}} ({{gridSource.source.features.length}}) </span> <span ng-if=\\\"gridSource.source.tooManyResults === true\\\"> {{gridSource.source.label | translate}} ({{gridSource.source.totalFeatureCount}}*) </span> </a> </li> </ul> <div class=tab-content> <div ng-repeat=\\\"gridSource in ctrl.getGridSources() track by gridSource.source.label\\\" role=tabpanel class=tab-pane ng-class=\\\"{'active' : ctrl.isSelected(gridSource)}\\\" id={{ctrl.escapeValue(gridSource.source.label)}}> <ngeo-grid ngeo-grid-configuration=gridSource.configuration ng-if=\\\"gridSource.source.tooManyResults !== true\\\"> </ngeo-grid> <div ng-if=\\\"gridSource.source.tooManyResults === true\\\"> <div class=\\\"gmf-displayquerygrid-message alert alert-warning\\\"> <p><span translate>The results can not be displayed because the maximum number has been reached</span> ({{gridSource.source.limit}}).</p> <p translate>Please refine your query.</p> </div> </div> </div> </div> <div class=navbar ng-show=\\\"!ctrl.pending && ctrl.getActiveGridSource() && ctrl.getActiveGridSource().configuration !== null\\\"> <ul class=\\\"nav navbar-nav navbar-right\\\"> <li class=ng-hide ng-show=ctrl.isOneSelected()> <p class=\\\"navbar-text ng-binding\\\"> {{ctrl.getSelectedRowCount()}} <span translate>selected element(s)</span> </p> </li> <li ng-show=ctrl.isOneSelected() class=ng-hide> <button class=\\\"btn btn-link btn-xs\\\" title=\\\"{{'Zoom to selection' | translate}}\\\" ng-click=ctrl.zoomToSelection()> <i class=\\\"fa fa-search-plus\\\"></i> <span translate>Zoom to</span> </button> </li> <li ng-show=ctrl.isOneSelected() class=ng-hide> <button class=\\\"btn btn-link btn-xs\\\" title=\\\"{{'Export selection as CSV' | translate}}\\\" ng-click=ctrl.downloadCsv()> <i class=\\\"fa fa-download\\\"></i> <span translate>Export as CSV</span> </button> </li> <li class=\\\"dropdown navbar-link dropup\\\"> <button type=button class=\\\"dropup btn btn-default btn-xs\\\" data-toggle=dropdown aria-haspopup=true aria-expanded=false> <span translate>Select</span> <span class=caret></span> </button> <ul class=dropdown-menu aria-labelledby=dLabel> <li> <a href=\\\"\\\" ng-click=ctrl.selectAll() translate>All</a> </li> <li> <a href=\\\"\\\" ng-click=ctrl.unselectAll() translate>None</a> </li> <li> <a href=\\\"\\\" ng-click=ctrl.invertSelection() translate>Reverse selection</a> </li> </ul> </li> </ul> </div> <div ng-show=ctrl.pending class=gmf-displayquerygrid-pending> <span class=\\\"fa fa-spinner fa-spin\\\"></span> </div> </div> \";","module.exports = \"<div class=ngeo-grid-table-container> <table float-thead=ctrl.floatTheadConfig ng-model=ctrl.configuration.data class=\\\"table table-bordered table-striped table-hover\\\"> <thead class=table-header> <tr> <th ng-repeat=\\\"columnDefs in ctrl.configuration.columnDefs\\\" ng-click=ctrl.sort(columnDefs.name) ng-bind-html=\\\"columnDefs.name | ngeoTrustHtml | translate\\\"> <i ng-show=\\\"ctrl.sortedBy !== columnDefs.name\\\" class=\\\"fa fa-fw\\\"></i> <i ng-show=\\\"ctrl.sortedBy === columnDefs.name && ctrl.sortAscending === true\\\" class=\\\"fa fa-caret-up\\\"></i> <i ng-show=\\\"ctrl.sortedBy === columnDefs.name && ctrl.sortAscending === false\\\" class=\\\"fa fa-caret-down\\\"></i> </th> </tr> </thead> <tbody> <tr ng-repeat=\\\"attributes in ctrl.configuration.data\\\" ng-class=\\\"['row-' + ctrl.configuration.getRowUid(attributes), ctrl.configuration.isRowSelected(attributes) ? 'ngeo-grid-active': '']\\\" ng-click=\\\"ctrl.clickRow(attributes, $event)\\\" ng-mousedown=ctrl.preventTextSelection($event)> <td ng-repeat=\\\"columnDefs in ctrl.configuration.columnDefs\\\" ng-bind-html=\\\"attributes[columnDefs.name] | ngeoTrustHtml\\\"></td> </tr> </tbody> </table> </div> \";","module.exports = \"<div class=\\\"btn-group dropup\\\"> <a type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span class=gmf-mouseposition-control-target></span> <span class=caret></span> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li class=dropdown-header translate>Coordinate systems</li> <li ng-repeat=\\\"projitem in ::ctrl.projections\\\"> <a href ng-click=ctrl.setProjection(projitem)> <span class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.projection == projitem}\\\"></span> {{::projitem.label}} </a> </li> </ul> </div> \";","module.exports = \"<div ngeo-map=ctrl.map ngeo-map-manage-resize=ctrl.manageResize ngeo-map-resize-transition=ctrl.resizeTransition> </div> \";","module.exports = \"<div class=\\\"btn-group btn-block\\\" ng-class=\\\"::{'dropup': scaleselectorCtrl.options.dropup}\\\"> <button type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span ng-bind-html=\\\"scaleselectorCtrl.currentScale | ngeoScalify | ngeoTrustHtml\\\"></span>&nbsp;<i class=caret></i> </button> <ul class=\\\"dropdown-menu btn-block\\\" role=menu> <li ng-repeat=\\\"zoomLevel in ::scaleselectorCtrl.zoomLevels\\\"> <a href ng-click=scaleselectorCtrl.changeZoom(zoomLevel) ng-bind-html=\\\"scaleselectorCtrl.getScale(zoomLevel) | ngeoScalify | ngeoTrustHtml\\\"> </a> </li> </ul> </div> \";","module.exports = \"<div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=Close><span aria-hidden=true>&times;</span></button> <h4 class=modal-title translate>Share this map</h4> </div> <div class=modal-body> <form role=form name=gmfShareForm novalidate> <div class=form-group> <label for=gmfShareInputShortLink translate>Permalink</label> <input type=text class=form-control id=gmfShareInputShortLink onclick=this.select() ng-model=$ctrl.shortLink readonly=True> <p class=help-block translate>Copy this link to share it.</p> <p class=text-danger ng-if=$ctrl.showLengthWarning> <span class=\\\"fa fa-exclamation-triangle\\\"></span> {{'You have a lot of drawn elements in this map. The above link may not be correctly supported by some browsers.' | translate}} </p> <p class=text-danger ng-if=$ctrl.errorOnGetShortUrl> <span class=\\\"fa fa-exclamation\\\"></span> {{'Error, cannot get the shortened URL.' | translate}} </p> </div> <hr> <div class=gmf-share-email ng-if=::$ctrl.enableEmail> <div class=form-group> <label for=gmfShareInputEmail translate>Send this link to</label> <input type=email class=form-control name=inputEmail id=gmfShareInputEmail placeholder=E-mail ng-model=$ctrl.email required> <span ng-show=\\\"gmfShareForm.$submitted || gmfShareForm.inputEmail.$touched\\\"> <span class=text-danger ng-show=\\\"gmfShareForm.inputEmail.$error.email || gmfShareForm.inputEmail.$error.required\\\"> <i class=\\\"fa fa-exclamation-triangle\\\" aria-hidden=true></i> {{'Invalid email.' | translate}}</span> </span> </div> <div class=form-group> <textarea class=form-control ng-attr-placeholder=\\\"{{'Message (optional)' | translate }}\\\" ng-model=$ctrl.message></textarea> </div> <span class=text-success ng-if=$ctrl.successfullySent> <i class=\\\"fa fa-check\\\" aria-hidden=true></i> {{ 'Link successfully sent.' | translate }} </span> <span class=text-danger ng-if=$ctrl.errorOnsend> <i class=\\\"fa fa-exclamation\\\" aria-hidden=true></i> {{ 'Error, the link has not been sent.' | translate }} </span> </div> <div class=text-right> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal translate>Close</button> <button ng-if=::$ctrl.enableEmail type=submit class=\\\"btn btn-default btn-primary\\\" ng-click=$ctrl.sendShortUrl() ng-disabled=!gmfShareForm.$valid translate>Send </button> </div> </form> </div> \";","module.exports = \"<div class=gmf-time-slider> <div ui-slider=sliderCtrl.sliderOptions ng-model=sliderCtrl.dates> <span class=\\\"ui-slider-handle ui-state-default ui-corner-all\\\" tabindex=0 data-toggle=tooltip title=\\\"\\\"> </span> </div> <div class=gmf-time-slider-displayed-dates> <div class=gmf-time-slider-start-date ng-if=\\\"::sliderCtrl.time.mode === 'range'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates[0])}}</span> </div> <div class=gmf-time-slider-start-date ng-if=\\\"::sliderCtrl.time.mode === 'value'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates)}}</span> </div> <div class=gmf-time-slider-end-date ng-if=\\\"::sliderCtrl.time.mode === 'range'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates[1])}}</span> </div> </div> </div> \";","module.exports = \"<div class=gmf-layertree-root-tools ng-if=layertreeCtrl.isRoot> <a href ng-if=\\\"gmfLayertreeCtrl.nodesCount() > 0\\\" ng-click=gmfLayertreeCtrl.removeAllNodes()> <span class=\\\"fa fa-trash\\\"></span> {{'Clear all' | translate}} </a> </div> <div ng-if=::!layertreeCtrl.isRoot id=gmf-layertree-node-{{::layertreeCtrl.uid}} ng-class=\\\"[layertreeCtrl.node.children ? 'gmf-layertree-group' : 'gmf-layertree-leaf', 'gmf-layertree-depth-' + layertreeCtrl.depth, gmfLayertreeCtrl.getResolutionStyle(layertreeCtrl.node), gmfLayertreeCtrl.getNodeState(layertreeCtrl)]\\\"> <div class=ngeo-sortable-handle ng-show=\\\"layertreeCtrl.depth === 1 && layertreeCtrl.parent.children.length > 1\\\"> <i class=\\\"gmf-layertree-sortable-handle-icon fa fa-ellipsis-v\\\"></i> </div> <a ng-if=::layertreeCtrl.node.children data-toggle=collapse href=#gmf-layertree-layer-group-{{::layertreeCtrl.uid}} aria-expanded={{::layertreeCtrl.node.metadata.isExpanded}} class=\\\"fa gmf-layertree-expand-node fa-fw\\\"> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) ng-if=::!layertreeCtrl.node.children ng-class=\\\"::{'gmf-layertree-no-layer-icon' : !gmfLayertreeCtrl.getLegendIconURL(layertreeCtrl)}\\\" class=gmf-layertree-layer-icon> <img ng-if=\\\"::(legendIconUrl=gmfLayertreeCtrl.getLegendIconURL(layertreeCtrl))\\\" ng-src={{::legendIconUrl}}>  </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) ng-if=::layertreeCtrl.node.children ng-class=\\\"['fa fa-fw', layertreeCtrl.node.children && !layertreeCtrl.layer.loading ? 'gmf-layertree-state' : 'fa-refresh fa-spin']\\\"> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) class=gmf-layertree-name data-toggle=tooltip data-placement=top title=\\\"{{layertreeCtrl.node.name | translate}}\\\"> {{layertreeCtrl.node.name | translate}} <i class=\\\"gmf-icon gmf-icon-search-go gmf-layertree-zoom\\\" data-toggle=tooltip data-placement=bottom data-title=\\\"{{'Not visible at current scale. Click to zoom.'|translate}}\\\" ng-click=\\\"::gmfLayertreeCtrl.zoomToResolution(layertreeCtrl); $event.preventDefault(); $event.stopPropagation();\\\" ng-if=\\\"gmfLayertreeCtrl.getNodeState(layertreeCtrl) == 'on'\\\"> </i> <span ngeo-popover ngeo-popover-dismiss=.content ng-if=\\\"gmfLayertreeCtrl.getNodeState(layertreeCtrl) !== 'off' && layertreeCtrl.node.time && layertreeCtrl.node.time.mode !== 'disabled'\\\"> <span ngeo-popover-anchor class=\\\"fa fa-clock-o\\\" ng-click=\\\"$event.preventDefault(); $event.stopPropagation()\\\"> </span> <div ngeo-popover-content> <ngeo-date-picker ng-if=\\\"::layertreeCtrl.node.time.widget === 'datepicker'\\\" time=layertreeCtrl.node.time on-date-selected=\\\"gmfLayertreeCtrl.updateWMSTimeLayerState(layertreeCtrl, time)\\\"> </ngeo-date-picker> <gmf-time-slider ng-if=\\\"::layertreeCtrl.node.time.widget === 'slider'\\\" gmf-time-slider-time=layertreeCtrl.node.time gmf-time-slider-on-date-selected=\\\"gmfLayertreeCtrl.updateWMSTimeLayerState(layertreeCtrl, time)\\\"> </gmf-time-slider> </div> </span> <span class=\\\"fa fa-pencil\\\" data-toggle=tooltip data-placement=right title=\\\"{{'Currently editing this layer'|translate}}\\\" ng-if=layertreeCtrl.properties.editing> </span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-if=\\\"::layertreeCtrl.depth == 1\\\" ng-click=gmfLayertreeCtrl.removeNode(layertreeCtrl.node)> <span class=\\\"fa fa-trash\\\"></span> </a> <a class=gmf-layertree-node-menu-btn href=\\\"\\\" ng-if=::gmfLayertreeCtrl.supportsCustomization(layertreeCtrl) ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-menu-' + layertreeCtrl.uid)\\\"> <span class=\\\"fa fa-cog\\\"></span> </a> <span ngeo-popover ng-if=\\\"::(layertreeCtrl.depth === 1 && !layertreeCtrl.node.mixed) || (layertreeCtrl.depth > 1 && layertreeCtrl.parent.node.mixed && !layertreeCtrl.node.children) || (gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend) || layertreeCtrl.getDataSource().filtrable\\\" ngeo-popover-dismiss=.content> <span ngeo-popover-anchor class=\\\"extra-actions fa fa-cog\\\"> </span> <div ngeo-popover-content> <ul> <li ng-if=\\\"::(layertreeCtrl.depth === 1 && !layertreeCtrl.node.mixed) || (layertreeCtrl.depth > 1 && layertreeCtrl.parent.node.mixed)\\\"> <i class=\\\"fa fa-tint fa-fw\\\"></i> <span for=layer-opactity>{{'Opacity'|translate}}</span> <input class=input-action name=layer-opactity type=range min=0 max=1 step=0.01 ng-model=layertreeCtrl.layer.opacity /> </li> <li ng-if=\\\"::gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend'); popoverCtrl.dismissPopover()\\\" data-toggle=collapse href=\\\"\\\"> {{'Show/hide legend'|translate}} </a> </li> <li ng-if=\\\"layertreeCtrl.getDataSource() && layertreeCtrl.getDataSource().filtrable\\\"> <i class=\\\"fa fa-filter fa-fw\\\"></i> <a ng-click=gmfLayertreeCtrl.toggleFiltrableDataSource(layertreeCtrl.getDataSource()) href=\\\"\\\"> {{'Filter'|translate}} </a> </li> </ul> </div> </span> <span class=gmf-layertree-metadata ng-if=::layertreeCtrl.node.metadata.metadataUrl> <span ng-if=\\\"::gmfLayertreeCtrl.openLinksInNewWindow === true\\\"> <a title=\\\"{{'More informations'|translate}}\\\" href={{::layertreeCtrl.node.metadata.metadataUrl}} target=blank_> </a> </span> <span ng-if=\\\"::gmfLayertreeCtrl.openLinksInNewWindow !== true\\\"> <a title=\\\"{{'More informations'|translate}}\\\" href=\\\"\\\" ng-click=gmfLayertreeCtrl.displayMetadata(layertreeCtrl)> </a> </span> </span> </span> </div> <div class=gmf-layertree-node-menu id=gmf-layertree-node-menu-{{::layertreeCtrl.uid}} style=display:none ng-if=::gmfLayertreeCtrl.supportsCustomization(layertreeCtrl)> <div ng-if=::gmfLayertreeCtrl.supportsOpacityChange(layertreeCtrl)> <i class=\\\"fa fa-tint fa-fw\\\"></i> <span for=layer-opactity>{{'Opacity'|translate}}</span> <input class=input-action name=layer-opactity type=range min=0 max=1 step=0.01 ng-model=layertreeCtrl.layer.opacity /> </div> <a class=gmf-layertree-node-menu-togglelegend ng-if=::gmfLayertreeCtrl.supportsLegend(layertreeCtrl) data-toggle=collapse ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\" href=\\\"\\\"> <span class=\\\"fa fa-th-list\\\"> </span> {{'Show/hide legend'|translate}} </a> </div> <div ng-if=\\\"::!layertreeCtrl.isRoot && gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend\\\" id=gmf-layertree-node-{{::layertreeCtrl.uid}}-legend class=\\\"collapse gmf-layertree-legend\\\" ng-class=\\\"::[layertreeCtrl.node.metadata.isLegendExpanded ? 'in' : '']\\\"> <a title=\\\"{{'Hide legend'|translate}}\\\" data-toggle=collapse ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\" href=\\\"\\\"> {{'Hide legend'|translate}} </a> <div ng-if=\\\"gmfLayertreeCtrl.isNodeLegendVisible('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\"> <div ng-repeat=\\\"(title, url) in ::gmfLayertreeCtrl.getLegendsObject(layertreeCtrl)\\\"> <p ng-if=\\\"::gmfLayertreeCtrl.getNumberOfLegendsObject(layertreeCtrl) > 1\\\">{{title|translate}}</p> <img ng-src={{url}}> </div> </div> </div> <ul class=gmf-layertree-root-external-datasources ng-if=\\\"layertreeCtrl.isRoot && (gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmsGroups.length || gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmtsGroups.length || gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup.dataSources.length)\\\"> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-repeat=\\\"wmtsGroup in gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmtsGroups\\\" group=wmtsGroup> </gmf-datasourcegrouptree> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-repeat=\\\"wmsGroup in gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmsGroups\\\" group=wmsGroup> </gmf-datasourcegrouptree> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-if=gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup.dataSources.length group=gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup> </gmf-datasourcegrouptree> </ul> <ul id=gmf-layertree-layer-group-{{::layertreeCtrl.uid}} ng-if=::layertreeCtrl.node.children ng-class=\\\"{collapse: !layertreeCtrl.isRoot, in : layertreeCtrl.node.metadata.isExpanded}\\\" ngeo-sortable=\\\"::layertreeCtrl.isRoot && layertreeCtrl.node.children\\\" ngeo-sortable-options=\\\"{handleClassName: 'ngeo-sortable-handle', draggerClassName: 'gmf-layertree-dragger', placeholderClassName : 'gmf-layertree-curr-drag-item'}\\\" ngeo-sortable-callback=::gmfLayertreeCtrl.afterReorder ngeo-sortable-callback-ctx=::gmfLayertreeCtrl> <li class=gmf-layertree-node ng-repeat=\\\"node in layertreeCtrl.node.children\\\" ng-class=\\\"'gmf-layertree-depth-' + layertreeCtrl.depth\\\" ngeo-layertree=node ngeo-layertree-notroot ngeo-layertree-map=layertreeCtrl.map ngeo-layertree-nodelayerexpr=layertreeCtrl.nodelayerExpr ngeo-layertree-listenersexpr=layertreeCtrl.listenersExpr> </li> </ul> \";","module.exports = \"<span ng-if=::!layertreeCtrl.isRoot>{{::layertreeCtrl.node.name}}</span> <input type=checkbox ng-if=\\\"::layertreeCtrl.node && !layertreeCtrl.node.children\\\" ng-model=layertreeCtrl.getSetActive ng-model-options=\\\"{getterSetter: true}\\\"/> <ul ng-if=::layertreeCtrl.node.children> <li ng-repeat=\\\"node in ::layertreeCtrl.node.children\\\" ngeo-layertree=::node ngeo-layertree-notroot ngeo-layertree-map=layertreeCtrl.map ngeo-layertree-nodelayerexpr=layertreeCtrl.nodelayerExpr ngeo-layertree-listenersexpr=layertreeCtrl.listenersExpr> </li> </ul> \";","module.exports = \"<div class=\\\"gmf-layertree-group gmf-layertree-depth-1 {{$ctrl.group.visibilityState}}\\\"> <a data-toggle=collapse href=#gmf-layertree-layer-group-{{::$ctrl.getGroupUid()}} aria-expanded=true class=\\\"fa gmf-layertree-expand-node fa-fw\\\"> </a> <a class=\\\"fa fa-fw gmf-layertree-state\\\" href ng-click=$ctrl.toggle()> </a> <a class=gmf-layertree-name href ng-click=$ctrl.toggle()> <span>{{$ctrl.group.title | translate}}</span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-click=$ctrl.remove()> <span class=\\\"fa fa-trash\\\"></span> </a> </span> </div> <ul id=gmf-layertree-layer-group-{{::$ctrl.getGroupUid()}} class=\\\"collapse in\\\"> <li class=\\\"gmf-layertree-node gmf-layertree-depth-2\\\" ng-class=\\\"[dataSource.visible ? 'on' : 'off']\\\" ng-repeat=\\\"dataSource in $ctrl.group.dataSources\\\"> <div class=gmf-layertree-leaf> <a href ng-click=$ctrl.toggleDataSource(dataSource) class=\\\"gmf-layertree-layer-icon gmf-layertree-no-layer-icon\\\"> </a> <a class=gmf-layertree-name href ng-click=$ctrl.toggleDataSource(dataSource)> <span>{{dataSource.name | translate}}</span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-click=$ctrl.removeDataSource(dataSource)> <span class=\\\"fa fa-trash\\\"></span> </a> </span> </div> </li> </ul> \";","module.exports = \"<div class=form-group ng-switch=$ctrl.filtrableDataSources.length> <span ng-switch-when=0 translate>No filtrable layer available!</span> <select class=form-control ng-disabled=$ctrl.aRuleIsActive ng-switch-default ng-model=$ctrl.gmfDataSourceBeingFiltered.dataSource ng-options=\\\"dataSource.name | translate for dataSource in $ctrl.filtrableDataSources\\\"> <option value=\\\"\\\" translate>-- Layer to filter --</option> </select> <div ng-if=\\\"$ctrl.customRules && $ctrl.directedRules && $ctrl.readyDataSource\\\"> <hr class=gmf-filterselector-separator /> <div class=\\\"dropdown gmf-filterselector-savedfilters\\\"> <a class=\\\"btn btn-link dropdown-toggle ngeo-filter-condition-button\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive || $ctrl.gmfSavedFilters.currentDataSourceItems.length === 0}\\\" type=button data-toggle=dropdown ng-disabled=\\\"$ctrl.aRuleIsActive || $ctrl.gmfSavedFilters.currentDataSourceItems.length === 0\\\"> <span translate>Saved</span> <span class=caret></span> </a> <ul class=dropdown-menu> <li ng-repeat=\\\"item in $ctrl.gmfSavedFilters.currentDataSourceItems\\\"> <a href ng-click=$ctrl.saveFilterLoadItem(item)> <span>{{::item.name}}</span> </a> </li> <li role=separator class=divider></li> <li> <a href ng-click=$ctrl.saveFilterManage()> <span translate>Manage saved filters</span> </a> </li> </ul> </div> <ngeo-filter a-rule-is-active=$ctrl.aRuleIsActive custom-rules=$ctrl.customRules datasource=$ctrl.readyDataSource directed-rules=$ctrl.directedRules feature-overlay=$ctrl.featureOverlay map=$ctrl.map tool-group=$ctrl.toolGroup> </ngeo-filter> <div> <a class=\\\"btn btn-link gmf-filterselector-savebtn\\\" type=button data-toggle=dropdown ng-click=\\\"!$ctrl.aRuleIsActive && $ctrl.saveFilterShowModal()\\\" ng-disabled=$ctrl.aRuleIsActive> <span class=\\\"fa fa-save\\\"></span> <span translate>Save</span> </a> </div> </div> <ngeo-modal ng-model=$ctrl.saveFilterSaveModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title>{{'Save filter' | translate}}</h4> </div> <div class=modal-body> <p class=gmf-filterselector-savefilter-desc translate> You can save the filter that you created to re-load it later. </p> <input type=text class=form-control name=name ng-model=$ctrl.saveFilterName placeholder=\\\"{{'Filter name' | translate}}\\\"/> </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'Cancel' | translate}}</button> <button type=button ng-click=$ctrl.saveFilterSave() ng-disabled=\\\"$ctrl.saveFilterName === ''\\\" class=\\\"btn btn-primary\\\">{{'Save' | translate}}</button> </div> </ngeo-modal> <ngeo-modal ng-model=$ctrl.saveFilterManageModalShown> <div class=gmf-filterselector-managefilter-modal> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title>{{'Manage filters' | translate}}</h4> </div> <div class=modal-body> <ul> <li ng-repeat=\\\"item in $ctrl.gmfSavedFilters.currentDataSourceItems\\\"> <span>{{::item.name}}</span> <a href ng-click=$ctrl.saveFilterRemoveItem(item)> {{ 'Delete' | translate }} </a> <div class=gmf-eol></div> </li> </ul> </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'Close' | translate}}</button> </div> </div> </ngeo-modal> </div> \";","module.exports = \"<div class=dropdown> <a class=\\\"btn btn-link dropdown-toggle ngeo-filter-condition-button\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive}\\\" type=button data-toggle=dropdown ng-disabled=$ctrl.aRuleIsActive> <span class=\\\"fa fa-cog\\\"></span> <span class=caret></span> </a> <ul class=dropdown-menu> <li class=ngeo-filter-condition-criteria-header translate>Criteria taken into account</li> <li ng-repeat=\\\"condition in ::$ctrl.conditions\\\"> <a href ng-click=$ctrl.setCondition(condition)> <span ng-class=\\\"{'ngeo-filter-condition-criteria-active': condition.value == $ctrl.datasource.filterCondition}\\\" class=\\\"fa fa-check ngeo-filter-condition-criteria\\\"> </span> <span>{{::condition.text | translate}}</span> </a> </li> </ul> </div> <ngeo-rule ng-repeat=\\\"rule in $ctrl.directedRules\\\" feature-overlay=::$ctrl.featureOverlay class=ngeo-filter-rule-directed map=$ctrl.map rule=rule tool-group=$ctrl.toolGroup> </ngeo-rule> <hr class=ngeo-filter-separator-rules /> <div ng-repeat=\\\"rule in $ctrl.customRules\\\"> <a class=\\\"btn btn-xs btn-link ngeo-filter-rule-custom-rm-btn\\\" ng-click=\\\"!$ctrl.aRuleIsActive && $ctrl.removeCustomRule(rule)\\\" ng-disabled=$ctrl.aRuleIsActive href> <span class=\\\"fa fa-remove\\\"></span> </a> <ngeo-rule feature-overlay=::$ctrl.featureOverlay class=ngeo-filter-rule-custom map=$ctrl.map rule=rule tool-group=$ctrl.toolGroup> </ngeo-rule> </div> <div class=dropdown> <a class=\\\"btn btn-link dropdown-toggle\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive}\\\" type=button data-toggle=dropdown ng-disabled=$ctrl.aRuleIsActive> <span translate>+ Add a new criteria</span> <span class=caret></span> </a> <ul class=dropdown-menu> <li ng-repeat=\\\"attribute in ::$ctrl.geometryAttributes\\\"> <a href ng-click=$ctrl.createAndAddCustomRule(attribute)> <span translate>Spatial filter</span> </a> </li> <li role=presentation class=divider></li> <li ng-repeat=\\\"attribute in ::$ctrl.otherAttributes\\\"> <a href ng-click=$ctrl.createAndAddCustomRule(attribute)> <span>{{::attribute.name | translate}}</span> </a> </li> </ul> </div> <hr class=ngeo-filter-separator-criteria /> <a class=\\\"btn btn-link\\\" type=button ng-click=$ctrl.apply() ng-disabled=\\\"$ctrl.hasARule() === false || $ctrl.datasource.visible === false\\\"> <span class=\\\"fa fa-check\\\"></span> <span translate>Apply filter</span> </a> <a class=\\\"btn btn-link\\\" type=button ng-click=$ctrl.getData() ng-disabled=\\\"$ctrl.hasARule() === false || $ctrl.datasource.visible === false\\\"> <span class=\\\"fa fa-chevron-right\\\"></span> <span translate>Get data</span> </a> \";","module.exports = \"<div class=dropdown ng-class=\\\"{open: $ctrl.rule.active}\\\"> <a class=\\\"btn btn-default btn-sm dropdown-toggle\\\" type=button ng-click=$ctrl.toggle()> <span>{{ ::$ctrl.clone.name | translate }}</span> <span class=caret></span> </a> <div class=\\\"dropdown-menu form-group\\\"> <select class=\\\"form-control input-sm ngeo-rule-operators-list\\\" ng-disabled=$ctrl.drawActive ng-if=::$ctrl.clone.operators ng-model=$ctrl.clone.operator ng-options=\\\"$ctrl.operators[operator] | translate for operator in ::$ctrl.clone.operators track by operator\\\"> </select> <div ng-switch=::$ctrl.clone.type> <div class=\\\"ngeo-rule-type-date form-group\\\" ng-if=$ctrl.rule.active ng-switch-when=date|datetime ng-switch-when-separator=|> <div ng-switch=$ctrl.clone.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <ngeo-date-picker time=$ctrl.timeRangeMode on-date-selected=$ctrl.onDateRangeSelected(time)> </ngeo-date-picker> </div> <div ng-switch-default> <ngeo-date-picker time=$ctrl.timeValueMode on-date-selected=$ctrl.onDateSelected(time)> </ngeo-date-picker> </div> </div> </div> <div class=\\\"ngeo-rule-type-geometry form-group\\\" ng-switch-when=geometry> <div ng-switch=$ctrl.geomType> <span class=\\\"gmf-icon gmf-icon-point\\\" ng-switch-when=Point> </span> <span class=\\\"gmf-icon gmf-icon-line\\\" ng-switch-when=LineString> </span> <span class=\\\"gmf-icon gmf-icon-polygon\\\" ng-switch-when=Polygon> </span> <span class=\\\"gmf-icon gmf-icon-circle\\\" ng-switch-when=Circle> </span> <span class=\\\"gmf-icon gmf-icon-rectangle\\\" ng-switch-when=Rectangle> </span> </div> <ngeo-drawfeature ngeo-drawfeature-active=$ctrl.drawActive ngeo-drawfeature-features=$ctrl.drawnFeatures ngeo-drawfeature-map=$ctrl.map> <div ngeo-btn-group class=btn-group> <a data-toggle=tooltip title=\\\"{{'Draw a point on the map' | translate}}\\\" href ngeo-btn ngeo-drawpoint class=\\\"btn btn-sm btn-default ngeo-drawfeature-point\\\" ng-show=\\\"['intersects', 'within'].indexOf($ctrl.clone.operator) !== -1\\\" ng-class=\\\"{active: dfCtrl.drawPoint.active}\\\" ng-model=dfCtrl.drawPoint.active> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a line on the map' | translate}}\\\" href ngeo-btn ngeo-measurelength class=\\\"btn btn-sm btn-default ngeo-drawfeature-linestring\\\" ng-show=\\\"['intersects', 'within'].indexOf($ctrl.clone.operator) !== -1\\\" ng-class=\\\"{active: dfCtrl.measureLength.active}\\\" ng-model=dfCtrl.measureLength.active> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a polygon on the map' | translate}}\\\" href ngeo-btn ngeo-measurearea class=\\\"btn btn-sm btn-default ngeo-drawfeature-polygon\\\" ng-class=\\\"{active: dfCtrl.measureArea.active}\\\" ng-model=dfCtrl.measureArea.active> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a circle on the map' | translate}}\\\" href ngeo-btn ngeo-measureazimut class=\\\"btn btn-sm btn-default ngeo-drawfeature-circle\\\" ng-class=\\\"{active: dfCtrl.measureAzimut.active}\\\" ng-model=dfCtrl.measureAzimut.active> <span class=\\\"gmf-icon gmf-icon-circle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a rectangle on the map' | translate}}\\\" href ngeo-btn ngeo-drawrectangle class=\\\"btn btn-sm btn-default ngeo-drawfeature-rectangle\\\" ng-class=\\\"{active: dfCtrl.drawRectangle.active}\\\" ng-model=dfCtrl.drawRectangle.active> <span class=\\\"gmf-icon gmf-icon-rectangle\\\"></span> </a> </div> <div class=ngeo-rule-type-geometry-instructions ng-if=$ctrl.drawActive> <span ng-if=dfCtrl.drawPoint.active> {{ 'Draw a point on the map.' | translate }} </span> <span ng-if=dfCtrl.measureLength.active> {{ 'Draw a line string on the map.' | translate }} </span> <span ng-if=dfCtrl.measureArea.active> {{ 'Draw a polygon on the map.' | translate }} </span> <span ng-if=dfCtrl.measureAzimut.active> {{ 'Draw a circle on the map.' | translate }} </span> <span ng-if=dfCtrl.drawRectangle.active> {{ 'Draw a rectangle on the map.' | translate }} </span> </div> </ngeo-drawfeature> </div> <div class=\\\"checkbox ngeo-rule-type-select\\\" ng-switch-when=select> <a ng-click=$ctrl.selectAllChoices() href>{{ All | translate}} </a> <label class=\\\"form-group ol-unselectable\\\" ng-repeat=\\\"choice in ::$ctrl.clone.choices\\\"> <input ng-checked=\\\"$ctrl.clone.getExpression() && $ctrl.clone.getExpression().split(',').indexOf(choice) > -1\\\" ng-click=$ctrl.toggleChoiceSelection(choice) type=checkbox value=choice /> <span>{{ choice | translate }}</span> </label> </div> <div class=\\\"form-group ngeo-rule-type-text\\\" ng-switch-default> <div ng-switch=$ctrl.clone.operator> <div ng-switch-when=..> <input type=number class=\\\"form-control input-sm\\\" ng-model=$ctrl.clone.lowerBoundary /> <input type=number class=\\\"form-control input-sm\\\" ng-model=$ctrl.clone.upperBoundary /> </div> <div ng-switch-default> <input type=number class=\\\"form-control input-sm\\\" ng-if=\\\"$ctrl.clone.type === 'number'\\\" ng-model=$ctrl.clone.expression /> <input type=text class=\\\"form-control input-sm\\\" ng-if=\\\"$ctrl.clone.type !== 'number'\\\" ng-model=$ctrl.clone.expression /> </div> </div> </div> <div class=ngeo-rule-btns> <button class=\\\"btn btn-xs btn-default\\\" ng-click=$ctrl.apply() type=button>{{'Apply' | translate}}</button> <button class=\\\"btn btn-xs btn-default\\\" ng-click=$ctrl.cancel() type=button>{{'Cancel' | translate}}</button> </div> </div> </div> </div> <div class=ngeo-rule-value ng-if=\\\"$ctrl.rule.value !== null\\\"> <a class=\\\"btn btn-xs btn-link\\\" ng-click=\\\"!$ctrl.rule.active && $ctrl.reset()\\\" ng-disabled=$ctrl.rule.active href> <span class=\\\"fa fa-remove\\\"></span> </a> <div ng-switch=::$ctrl.rule.type> <div ng-switch-when=date|datetime ng-switch-when-separator=|> <div ng-switch=$ctrl.rule.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <span translate>From </span> <span>{{ $ctrl.timeToDate($ctrl.rule.lowerBoundary) }}</span> <span translate> to </span> <span>{{ $ctrl.timeToDate($ctrl.rule.upperBoundary) }}</span> </div> <div ng-switch-default> <span>{{ $ctrl.operatorsShortFormat[$ctrl.rule.operator] }}</span> <span>{{ $ctrl.timeToDate($ctrl.rule.getExpression()) }}</span> </div> </div> </div> <div ng-switch-when=geometry> <span>{{ $ctrl.operators[$ctrl.rule.operator] }}</span> <span ng-switch=$ctrl.getRuleGeometryType()> <span class=\\\"gmf-icon gmf-icon-point\\\" ng-switch-when=Point> </span> <span class=\\\"gmf-icon gmf-icon-line\\\" ng-switch-when=LineString> </span> <span class=\\\"gmf-icon gmf-icon-polygon\\\" ng-switch-when=Polygon> </span> <span class=\\\"gmf-icon gmf-icon-circle\\\" ng-switch-when=Circle> </span> <span class=\\\"gmf-icon gmf-icon-rectangle\\\" ng-switch-when=Rectangle> </span> </span> </div> <div ng-switch-when=select> <span ng-repeat=\\\"choice in $ctrl.rule.getExpression().split(',')\\\"> {{ choice | translate }}{{ $last ? '' : ', ' }} </span> </div> <div ng-switch-default> <div ng-switch=$ctrl.rule.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <span translate>Between </span> <span>{{ $ctrl.rule.lowerBoundary }}</span> <span translate> and </span> <span>{{ $ctrl.rule.upperBoundary }}</span> </div> <div ng-switch-default> <span>{{ $ctrl.operatorsShortFormat[$ctrl.rule.operator] }}</span> <span>{{ $ctrl.rule.getExpression() }}</span> </div> </div> </div> </div> </div> \";","module.exports = \"<div class=ngeo-datepicker> <form name=dateForm class=ngeo-datepicker-form novalidate> <div ng-if=\\\"::datepickerCtrl.time.widget === 'datepicker'\\\"> <div class=ngeo-datepicker-start-date> <span ng-if=\\\"::datepickerCtrl.time.mode === 'range'\\\" translate>From:</span> <span ng-if=\\\"::datepickerCtrl.time.mode !== 'range'\\\" translate>Date:</span> <input name=sdate ui-date=datepickerCtrl.sdateOptions ng-model=datepickerCtrl.sdate required=\\\"\\\"/> </div> <div class=ngeo-datepicker-end-date ng-if=\\\"::datepickerCtrl.time.mode === 'range'\\\"> <span translate>To:</span> <input name=edate ui-date=datepickerCtrl.edateOptions ng-model=datepickerCtrl.edate required=\\\"\\\"/> </div> </div> </form> </div> \";","module.exports = \"<h4 class=\\\"popover-title ngeo-popup-title\\\"> <span ng-bind-html=title></span> <button type=button class=close ng-click=\\\"open = false\\\"> &times;</button> </h4> <div class=popover-content ng-bind-html=content></div> \";","module.exports = \"<ul class=gmf-backgroundlayerselector> <li ng-repeat=\\\"layer in ctrl.bgLayers\\\" ng-click=ctrl.setLayer(layer) ng-class=\\\"{'gmf-backgroundlayerselector-active': ctrl.bgLayer == layer, 'gmf-backgroundlayerselector-disabled': ctrl.opacityLayer == layer}\\\"> <img class=gmf-thumb ng-src=\\\"{{::layer.get('metadata')['thumbnail']}}\\\"/> <span class=gmf-text>{{layer.get(\\\"label\\\") | translate}}</span> <span ng-class=\\\"{'gmf-backgroundlayerselector-opacity-check': ctrl.opacityLayer == layer}\\\"></span> </li> <input ng-if=ctrl.opacityLayer class=\\\"input-action gmf-backgroundlayerselector-opacity-slider\\\" name=bg-layer-opacity type=range min=0 max=1 step=0.01 ng-model=ctrl.getSetBgLayerOpacity ng-model-options=\\\"{getterSetter: true}\\\"> </ul> \";","module.exports = \"<div ng-if=$ctrl.gmfUser.username> <div class=form-group> <span>{{'Logged in as' | translate}}</span> <strong>{{ ::$ctrl.gmfUser.username }}</strong>. </div> <form name=logoutForm role=form ng-submit=$ctrl.logout() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\" ng-if=!$ctrl.changingPassword> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Logout' | translate}}\\\"/> </div> <div class=form-group> <input ng-show=$ctrl.allowPasswordChange type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Change password' | translate}}\\\" ng-click=\\\"$ctrl.changingPassword = true\\\"/> </div> </form> <form name=changePasswordForm role=form ng-submit=$ctrl.changePassword() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\" ng-if=$ctrl.changingPassword> <div class=form-group> <input type=password class=form-control name=oldpassword ng-model=$ctrl.oldPwdVal ng-attr-placeholder=\\\"{{'Old password' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=newpassword ng-model=$ctrl.newPwdVal ng-attr-placeholder=\\\"{{'New password' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=newpasswordconfirm ng-model=$ctrl.newPwdConfVal ng-attr-placeholder=\\\"{{'Confirm new password' | translate}}\\\"/> </div> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Change password' | translate}}\\\"/> </div> <div class=form-group> <input type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Cancel' | translate}}\\\" ng-if=!$ctrl.userMustChangeItsPassword() ng-click=$ctrl.changePasswordReset() /> <input type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Logout' | translate}}\\\" ng-if=$ctrl.userMustChangeItsPassword() ng-click=$ctrl.logout() /> </div> </form> <div ng-show=$ctrl.error class=\\\"gmf-authentication-error help-block\\\"></div> <ngeo-modal ng-model=$ctrl.changePasswordModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Password Changed' | translate}} </h4> </div> <div class=modal-body> {{'Your password has successfully been changed.' | translate}} </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'OK' | translate}}</button> </div> </ngeo-modal> </div> <div ng-if=!$ctrl.gmfUser.username> <form name=loginForm role=form ng-submit=$ctrl.login() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\"> <div class=form-group> <input type=text class=form-control name=login ng-model=$ctrl.loginVal ng-attr-placeholder=\\\"{{'Username' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=password ng-model=$ctrl.pwdVal ng-attr-placeholder=\\\"{{'Password' | translate}}\\\"/> </div> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Connect' | translate}}\\\"/> </div> <div ng-show=$ctrl.allowPasswordReset class=form-group> <a ng-click=$ctrl.resetPassword() href=\\\"\\\">{{'Password forgotten?' | translate}}</a> </div> </form> <div ng-show=$ctrl.error class=\\\"gmf-authentication-error help-block\\\"></div> <ngeo-modal ng-model=$ctrl.resetPasswordModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Password forgotten?' | translate}} </h4> </div> <div class=modal-body translate> A new password has just been sent to you by e-mail. </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'OK' | translate}}</button> </div> </ngeo-modal> </div> \";"],"sourceRoot":""}