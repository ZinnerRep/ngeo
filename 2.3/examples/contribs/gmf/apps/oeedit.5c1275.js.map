{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/goog.asserts.prod.js","webpack:///./src/GeometryType.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/format/AttributeType.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/datasource/OGC.js","webpack:///./src/rule/Rule.js","webpack:///./contribs/gmf/src/index.js","webpack:///./src/misc/ToolActivate.js","webpack:///./src/misc/FeatureHelper.js","webpack:///./src/utils.js","webpack:///./src/CustomEvent.js","webpack:///./src/message/Message.js","webpack:///./src/map/LayerHelper.js","webpack:///./src/rule/Geometry.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/layertree/Controller.js","webpack:///./src/interaction/Measure.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/misc/decorate.js","webpack:///./src/query/MapQuerent.js","webpack:///./src/misc/WMSTime.js","webpack:///./src/misc/filters.js","webpack:///./contribs/gmf/src/layertree/SyncLayertreeMap.js","webpack:///./src/misc/ToolActivateMgr.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/rule/Date.js","webpack:///./src/rule/Text.js","webpack:///./src/filter/RuleHelper.js","webpack:///./src/datasource/File.js","webpack:///./src/datasource/FileGroup.js","webpack:///./src/datasource/OGCGroup.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./contribs/gmf/src/datasource/ExternalDataSourcesManager.js","webpack:///./src/misc/btnComponent.js","webpack:///./src/datasource/DataSources.js","webpack:///./contribs/gmf/src/editing/editFeatureComponent.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/rule/Select.js","webpack:///./contribs/gmf/src/editing/EditFeature.js","webpack:///./src/misc/debounce.js","webpack:///./src/statemanager/Location.js","webpack:///./src/statemanager/Service.js","webpack:///./src/interaction/common.js","webpack:///./contribs/gmf/src/authentication/Service.js","webpack:///./src/misc/Time.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./src/message/popupComponent.js","webpack:///./src/message/Popup.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/format/XSDAttribute.js","webpack:///./src/datasource/Group.js","webpack:///./src/WFSDescribeFeatureType.js","webpack:///./src/query/Querent.js","webpack:///./src/format/WFSAttribute.js","webpack:///./src/datasource/Helper.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./src/interaction/Translate.js","webpack:///./src/interaction/Rotate.js","webpack:///./src/draw/features.js","webpack:///./src/Menu.js","webpack:///./src/download/service.js","webpack:///./contribs/gmf/src/datasource/DataSourceBeingFiltered.js","webpack:///./src/message/modalComponent.js","webpack:///./src/message/Notification.js","webpack:///./src/misc/php-date-formatter.js","webpack:///./contribs/gmf/src/permalink/ShareService.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/interaction/MeasureLength.js","webpack:///./src/interaction/MeasureArea.js","webpack:///./contribs/gmf/src/authentication/component.js","webpack:///./contribs/gmf/src/authentication/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./contribs/gmf/src/backgroundlayerselector/component.js","webpack:///./contribs/gmf/src/datasource/Helper.js","webpack:///./contribs/gmf/src/datasource/OGC.js","webpack:///./contribs/gmf/src/datasource/WFSAliases.js","webpack:///./contribs/gmf/src/datasource/Manager.js","webpack:///./contribs/gmf/src/datasource/module.js","webpack:///./src/message/Disclaimer.js","webpack:///./contribs/gmf/src/disclaimer/component.js","webpack:///./contribs/gmf/src/filters/SavedFilters.js","webpack:///./src/filter/ruleComponent.js","webpack:///./src/filter/component.js","webpack:///./contribs/gmf/src/filters/filterselectorComponent.js","webpack:///./contribs/gmf/src/filters/module.js","webpack:///./contribs/gmf/src/layertree/timeSliderComponent.js","webpack:///./contribs/gmf/src/layertree/module.js","webpack:///./contribs/gmf/src/permalink/module.js","webpack:///./src/map/component.js","webpack:///./src/map/scaleselector.js","webpack:///./src/map/module.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./contribs/gmf/src/map/mousepositionComponent.js","webpack:///./contribs/gmf/src/map/module.js","webpack:///./src/grid/Config.js","webpack:///./src/grid/component.js","webpack:///./contribs/gmf/src/query/gridComponent.js","webpack:///./src/misc/swipe.js","webpack:///./contribs/gmf/src/query/windowComponent.js","webpack:///./contribs/gmf/src/query/extraModule.js","webpack:///./contribs/gmf/src/search/module.js","webpack:///./contribs/gmf/src/theme/selectorComponent.js","webpack:///./contribs/gmf/src/theme/module.js","webpack:///./src/message/displaywindowComponent.js","webpack:///./src/misc/controlComponent.js","webpack:///./src/misc/filereaderComponent.js","webpack:///./src/misc/getBrowserLanguage.js","webpack:///./src/misc/extraModule.js","webpack:///./src/query/mapQueryComponent.js","webpack:///./src/statemanager/WfsPermalink.js","webpack:///./contribs/gmf/src/controllers/AbstractAppController.js","webpack:///./src/interaction/ModifyCircle.js","webpack:///./src/interaction/ModifyRectangle.js","webpack:///./src/interaction/Modify.js","webpack:///./src/draw/Controller.js","webpack:///./src/draw/point.js","webpack:///./src/draw/rectangle.js","webpack:///./src/draw/text.js","webpack:///./src/measure/area.js","webpack:///./src/measure/azimut.js","webpack:///./src/measure/length.js","webpack:///./src/draw/component.js","webpack:///./src/editing/createfeatureComponent.js","webpack:///./contribs/gmf/src/editing/XSDAttributes.js","webpack:///./contribs/gmf/src/raster/RasterService.js","webpack:///./src/proj/somerc.js","webpack:///./src/misc/colorpickerComponent.js","webpack:///./src/misc/AutoProjection.js","webpack:///./contribs/gmf/src/search/FulltextSearch.js","webpack:///./src/download/Csv.js","webpack:///./src/map/resizemap.js","webpack:///./contribs/gmf/src/permalink/shareComponent.js","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.js","webpack:///./src/statemanager/module.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/misc/datepickerComponent.js","webpack:///./src/format/Attribute.js","webpack:///./contribs/gmf/src/editing/EnumerateAttribute.js","webpack:///./src/misc/File.js","webpack:///./contribs/gmf/src/controllers/AbstractDesktopController.js","webpack:///./contribs/gmf/src/contextualdata/component.js","webpack:///./contribs/gmf/src/contextualdata/module.js","webpack:///./src/print/VectorEncoder.js","webpack:///./src/print/Service.js","webpack:///./contribs/gmf/src/editing/editFeatureSelectorComponent.js","webpack:///./contribs/gmf/src/editing/module.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/format/FeatureHash.js","webpack:///./contribs/gmf/src/drawing/featureStyleComponent.js","webpack:///./contribs/gmf/src/drawing/drawFeatureComponent.js","webpack:///./contribs/gmf/src/drawing/module.js","webpack:///./contribs/gmf/src/import/wmsCapabilityLayertreeComponent.js","webpack:///./contribs/gmf/src/import/wmtsCapabilityLayertreeComponent.js","webpack:///./contribs/gmf/src/import/importdatasourceComponent.js","webpack:///./contribs/gmf/src/import/module.js","webpack:///./src/search/searchDirective.js","webpack:///./src/search/createGeoJSONBloodhound.js","webpack:///./src/search/createLocationSearchBloodhound.js","webpack:///./src/search/module.js","webpack:///./src/profile/d3Elevation.js","webpack:///./src/profile/elevationComponent.js","webpack:///./contribs/gmf/src/profile/component.js","webpack:///./contribs/gmf/src/profile/drawLineComponent.js","webpack:///./contribs/gmf/src/profile/module.js","webpack:///./src/query/bboxQueryComponent.js","webpack:///./contribs/gmf/src/raster/component.js","webpack:///./src/print/Utils.js","webpack:///./contribs/gmf/src/print/component.js","webpack:///./src/misc/datetimepickerComponent.js","webpack:///./src/editing/attributesComponent.js","webpack:///./src/editing/exportfeaturesComponent.js","webpack:///./src/misc/sortableComponent.js","webpack:///./src/message/popoverComponent.js","webpack:///./contribs/gmf/src/search/component.js","webpack:///./src/map/recenter.js","webpack:///./src/misc/syncArrays.js","webpack:///./src/layertree/component.js","webpack:///./src/olcs/constants.js","webpack:///./src/Popover.js","webpack:///./contribs/gmf/src/layertree/component.js","webpack:///./contribs/gmf/apps/appmodule.js","webpack:///./contribs/gmf/src/objectediting/coordinate.js","webpack:///./contribs/gmf/src/objectediting/geom.js","webpack:///./contribs/gmf/src/objectediting/Query.js","webpack:///./contribs/gmf/src/objectediting/getWMSFeatureComponent.js","webpack:///./src/interaction/DrawRegularPolygonFromClick.js","webpack:///./src/editing/createregularpolygonfromclickComponent.js","webpack:///./contribs/gmf/src/objectediting/toolsComponent.js","webpack:///./contribs/gmf/src/objectediting/component.js","webpack:///./contribs/gmf/src/objectediting/Manager.js","webpack:///./contribs/gmf/src/objectediting/module.js","webpack:///./src/proj/EPSG2056.js","webpack:///./contribs/gmf/apps/oeedit/Controller.js","webpack:///./contribs/gmf/apps/oeedit/contextualdata.html","webpack:///./contribs/gmf/src/objectediting/component.html","webpack:///./contribs/gmf/src/objectediting/toolsComponent.html","webpack:///./contribs/gmf/src/import/importdatasourceComponent.html","webpack:///./contribs/gmf/src/import/wmtsCapabilityLayertreeComponent.html","webpack:///./contribs/gmf/src/import/wmsCapabilityLayertreeComponent.html","webpack:///./contribs/gmf/src/raster/widgetComponent.html","webpack:///./contribs/gmf/src/profile/component.html","webpack:///./contribs/gmf/src/print/component.html","webpack:///./contribs/gmf/src/editing/editFeatureSelectorComponent.html","webpack:///./contribs/gmf/src/editing/editFeatureComponent.html","webpack:///./src/editing/attributescomponent.html","webpack:///./contribs/gmf/src/drawing/drawFeatureComponent.html","webpack:///./contribs/gmf/src/drawing/featureStyleComponent.html","webpack:///./src/message/displaywindowComponent.html","webpack:///./contribs/gmf/src/theme/selectorComponent.html","webpack:///./contribs/gmf/src/search/component.html","webpack:///./src/misc/colorpickerComponent.html","webpack:///./contribs/gmf/src/query/windowComponent.html","webpack:///./contribs/gmf/src/query/gridComponent.html","webpack:///./src/grid/component.html","webpack:///./contribs/gmf/src/map/mousepositionComponent.html","webpack:///./contribs/gmf/src/map/component.html","webpack:///./src/map/scaleselector.html","webpack:///./contribs/gmf/src/permalink/shareComponent.html","webpack:///./contribs/gmf/src/layertree/timesliderComponent.html","webpack:///./contribs/gmf/src/layertree/component.html","webpack:///./src/layertree/component.html","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.html","webpack:///./contribs/gmf/src/filters/filterselectorcomponent.html","webpack:///./src/filter/component.html","webpack:///./src/filter/rulecomponent.html","webpack:///./src/misc/datepickerComponent.html","webpack:///./src/message/popupcomponent.html","webpack:///./contribs/gmf/src/backgroundlayerselector/component.html","webpack:///./contribs/gmf/src/authentication/component.html"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","p","jsonpArray","window","oldJsonpFunction","bind","slice","condition","opt_message","var_args","type","__webpack_exports__","CIRCLE","LINE_STRING","MULTI_LINE_STRING","MULTI_POINT","MULTI_POLYGON","POINT","POLYGON","RECTANGLE","TEXT","ANGLE","COLOR","IS_CIRCLE","IS_RECTANGLE","IS_TEXT","NAME","SHOW_LABEL","OPACITY","AZIMUT","SHOW_MEASURE","SIZE","STROKE","BOOLEAN","DATE","DATETIME","TIME","GEOMETRY","NUMBER","SELECT","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_6__","$http","$injector","$q","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","ol_events_EventTarget_js__WEBPACK_IMPORTED_MODULE_5__","this","addBlankBackgroundLayer_","undefined","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","defer","promise_","promise","loaded","bgLayerPromise_","ol_index_js__WEBPACK_IMPORTED_MODULE_2__","findGroupByLayerNodeName","themes","ii","theme","jj","children","group","childNodes","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","ol_array_js__WEBPACK_IMPORTED_MODULE_3__","findThemeByName","themeName","node","nodes","getBgLayers","_this","layerHelper","callback","item","layer","set","metadata","dimensions","ids","getIds","array","forEach","child","layerLayerCreationFn","ogcServers","gmfLayer","gmfLayerWMTS","goog_asserts_js__WEBPACK_IMPORTED_MODULE_0__","assert","url","createWMTSLayerFromCapabilitites","matrixSet","then","response","message","console","error","resolve","gmfLayerWMS","ogcServer","server","imageType","createBasicWMSLayer","layers","credential","fail","promiseSuccessFn","promises","background_layers","map","itemType","x","reverse","all","collection","filter","ol_Collection_js__WEBPACK_IMPORTED_MODULE_4__","createBasicGroup","layerGroupCreationFn","values","getString","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","getOgcServersObject","hasEditableLayers","hasEditableLayers_","_this2","some","hasNodeEditableLayers_","editable","getSnappingConfig","snappingConfig","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","params","role","cache_version","cache","withCredentials","errors","join","hasParam","alert","dispatchEvent","reject","NodeType","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","WMS","angular","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_1__","service","options","_classCallCheck","_possibleConstructorReturn","_ngeoDatasourceDataSo","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","ngeo_filter_Condition_js__WEBPACK_IMPORTED_MODULE_2__","AND","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","geometryName","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","queryable","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref","next","done","ogcLayer","wfsFormat","supportsWFS","format","ol_format_GML3_js__WEBPACK_IMPORTED_MODULE_5__","GML2","ol_format_GML2_js__WEBPACK_IMPORTED_MODULE_4__","ol_format_WFS_js__WEBPACK_IMPORTED_MODULE_6__","featureNS","featureType","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","ol_format_WMSGetFeatureInfo_js__WEBPACK_IMPORTED_MODULE_7__","wmsFormat_","_inherits","getAttributes","attributes","setAttributes","updateGeometryNameFromAttributes_","combinableWithDataSourceForWFS","dataSource","combinableForWFS","haveTheSameActiveDimensions","combinableWithDataSourceForWMS","combinableForWMS","isAnyOGCLayerInRange","res","queryableOnly","arguments","getInRangeOGCLayerNames","layerNames","_iterator2","_isArray2","_i2","_ref2","maxRes","minRes","getOGCLayerNames","_iterator3","_isArray3","_i3","_ref3","getFiltrableOGCLayerName","_iterator4","_isArray4","_i4","_ref4","attribute","ngeo_format_AttributeType_js__WEBPACK_IMPORTED_MODULE_3__","share","myActive","activeDimensions","itsActive","key","_createClass","time","range","lower","upper","end","start","active","config","timeRangeValue","_iterator5","_isArray5","_i5","_ref5","ngeo_datasource_DataSource_js__WEBPACK_IMPORTED_MODULE_1__","guessServiceTypeByUrl","test","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","active_","expression","lowerBoundary_","lowerBoundary","operator_","operator","upperBoundary_","upperBoundary","isCustom_","isCustom","name_","operators_","operators","propertyName_","propertyName","type_","listenerKeys","getExpression","setExpression","reset","destroy","ol_events_js__WEBPACK_IMPORTED_MODULE_1__","OperatorType","BETWEEN","TemporalOperatorType","DURING","EQUAL_TO","GREATER_THAN","GREATER_THAN_OR_EQUAL_TO","LESSER_THAN","LESSER_THAN_OR_EQUAL_TO","LIKE","NOT_EQUAL_TO","SpatialOperatorType","CONTAINS","INTERSECTS","WITHIN","BEGINS","ENDS","EQUALS","BG_LAYER","EXTERNAL_DATASOURCES_NAMES","EXTERNAL_DATASOURCES_URLS","FEATURES","MAP_CROSSHAIR","MAP_TOOLTIP","MAP_X","MAP_Y","MAP_Z","TREE_GROUPS","WFS_LAYER","WFS_NGROUPS","WFS_SHOW_FEATURES","toolContext","activePropertyName","getActive","setActive","newVal","ol_style_Text_js__WEBPACK_IMPORTED_MODULE_24__","$filter","$filter_","decimals_","precision_","numberFormat_","unitPrefixFormat_","ngeoNumberCoordinates_","pointFilterFn_","pointFilterArgs_","filterElements","split","filterName","assertFunction","projection_","download_","setProjection","projection","setStyle","feature","opt_select","styles","getStyle","supportsVertex_","getVertexStyle","unshift","getHaloStyle_","style","getType","ngeo_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__","getLineStringStyle_","getPointStyle_","getPolygonStyle_","getTextStyle_","constructor","strokeWidth","getStrokeProperty","showLabel","getShowLabelProperty","showMeasure","getShowMeasureProperty","color","getRGBAColorProperty","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_23__","stroke","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_22__","width","textLabelValues","getMeasure","getNameProperty","textLabelValue","text","createTextStyle_","size","getSizeProperty","image","ol_style_Circle_js__WEBPACK_IMPORTED_MODULE_19__","radius","fill","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_20__","offsetY","font_size","optNumber","attrib","assertNumber","getNumber","opacity","getOpacityProperty","fillColor","azimut","ngeo_format_FeatureProperties_js__WEBPACK_IMPORTED_MODULE_3__","line","getRadiusLine","ngeo_interaction_Measure_js__WEBPACK_IMPORTED_MODULE_5__","getFormattedLength","geometry","angle","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_14__","getLastCoordinate","offsetX","Math","cos","PI","sin","exceedLength","getAngleProperty","createEditingStyles","white","blue","geom","getGeometry","zIndex","Infinity","opt_incGeomFunc","incGeomFunc","ol_style_RegularShape_js__WEBPACK_IMPORTED_MODULE_21__","points","innerMultiCoordinates","multiCoordinates","coordinates","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_11__","getCoordinates","ol_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_12__","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_15__","ol_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_16__","concat","ol_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_13__","supported","ol_array_js__WEBPACK_IMPORTED_MODULE_7__","haloSize","getFilteredFeatureValues","properties","getProperties","getGeometryName","getColorProperty","assertString","ol_color_js__WEBPACK_IMPORTED_MODULE_8__","assertBoolean","export","features","formatType","FormatType","GPX","exportGPX","KML","exportKML","ol_format_GPX_js__WEBPACK_IMPORTED_MODULE_17__","export_","ol_format_KML_js__WEBPACK_IMPORTED_MODULE_18__","fileName","opt_mimeType","mimeType","clones","clone","ol_Feature_js__WEBPACK_IMPORTED_MODULE_10__","writeOptions","dataProjection","featureProjection","writeFeatures","rotation","font","measure","ngeo_interaction_MeasureAzimut_js__WEBPACK_IMPORTED_MODULE_6__","getFormattedAzimutRadius","getFormattedArea","getFormattedPoint","args","panMapToFeature","opt_panDuration","panDuration","getSize","assertArray","view","getView","extent","calculateExtent","intersectsExtent","mapCenter","getCenter","featureCenter","getCoordinateAt","getInteriorPoint","ol_extent_js__WEBPACK_IMPORTED_MODULE_9__","getExtent","animate","center","duration","y","endPoint","getNonSpatialProperties","nonSpatialProperties","clearNonSpatialProperties","ngeo_download_service_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_misc_filters_js__WEBPACK_IMPORTED_MODULE_1__","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_6__","multiGeom","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_5__","ol_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_2__","appendPoint","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_1__","ol_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_3__","appendLineString","ol_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_4__","appendPolygon","navigator","userAgent","indexOf","hex","rgb","g","b","Error","colorZeroPadding","toString","queryString","queryData","substring","pair","indexOfEquals","decodeURIComponent","queryItem","encodeURIComponent","event","ol_events_condition_js__WEBPACK_IMPORTED_MODULE_0__","ol_events_Event_js__WEBPACK_IMPORTED_MODULE_1__","detail","ol_index_js__WEBPACK_IMPORTED_MODULE_0__","showMessage","show","getMessageObjects","ERROR","info","INFORMATION","success","SUCCESS","warn","WARNING","opt_type","msgObjects","msgObject","defaultType","msg","ol_uri_js__WEBPACK_IMPORTED_MODULE_10__","ngeoTilesPreloadingLimit","tilesPreloadingLimit_","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","LAYERS","olServerType","replace","source","ol_source_ImageWMS_js__WEBPACK_IMPORTED_MODULE_7__","serverType","crossOrigin","updateParams","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_4__","createBasicWMSLayerFromDataSource","setVisible","visible","id","capabilitiesURL","layerName","opt_matrixSet","opt_dimensions","parser","ol_format_WMTSCapabilities_js__WEBPACK_IMPORTED_MODULE_2__","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_5__","preload","read","ol_source_WMTS_js__WEBPACK_IMPORTED_MODULE_9__","ol_obj_js__WEBPACK_IMPORTED_MODULE_6__","updateDimensions","setSource","ol_array_js__WEBPACK_IMPORTED_MODULE_1__","elt","index","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_3__","setLayers","getGroupFromMap","groupName","getLayerGroup","getLayers","getArray","existingGroup","addLayer","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","opt_legendWidth","opt_legendHeight","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","isLayerVisible","getVisible","currentResolution","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","source_","getSource","ol_source_TileWMS_js__WEBPACK_IMPORTED_MODULE_8__","getParams","random","setZIndexToFirstLevelChildren","element","ZIndex","innerLayer","setZIndex","updateWMSLayerState","names","getQuerySourceIds","ngeo_format_AttributeType_js__WEBPACK_IMPORTED_MODULE_1__","_ngeoRuleRule","featureProperties","feature_","ol_Feature_js__WEBPACK_IMPORTED_MODULE_4__","format_","ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_5__","updatingExpression_","updatingGeometry_","geometryChangeListenerKey_","ol_events_js__WEBPACK_IMPORTED_MODULE_3__","handleFeatureGeometryChange_","setGeometryFromExpression_","registerGeometryChange_","writeGeometry","handleGeometryChange_","evt","assertInstanceof","target","ol_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_6__","readGeometry","setGeometry","ngeo_rule_Rule_js__WEBPACK_IMPORTED_MODULE_2__","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_6__","featureUidToGroupIndex_","groups_","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_5__","useSpatialIndex","layer_","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_3__","styleFunction_","updateWhileAnimating","updateWhileInteracting","addFeature","groupIndex","featureUid","removeFeature","clear","ol_obj_js__WEBPACK_IMPORTED_MODULE_4__","getLayer","getFeatureOverlay","styleFunction","ngeo_map_FeatureOverlay_js__WEBPACK_IMPORTED_MODULE_1__","init","setMap","defaultFunction","resolution","ol_layer_Layer_js__WEBPACK_IMPORTED_MODULE_5__","$scope","$rootScope","$attrs","isRoot","nodeExpr","rootScope_","state_","$watch","oldVal","$eval","mapExpr","parent","$parent","$on","uid","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","treeCtrl","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_4__","dataSource_","ngeo_misc_decorate_js__WEBPACK_IMPORTED_MODULE_1__","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","getState","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","getFirstParentTree","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","val","removeLayer","getDataSource","setDataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","traverseDepthFirst","visitor","controller","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_13__","ol_interaction_Interaction_js__WEBPACK_IMPORTED_MODULE_8__","handleEvent","handleEvent_","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","sketchFeature","continueMsg","decimals","precision","displayHelpTooltip_","displayHelpTooltip","startMsg","document","createElement","textContent","changeEventKey_","postcomposeEventKey_","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_11__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_12__","vectorLayer_","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_9__","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_10__","drawInteraction_","createDrawInteraction","sketchStyle","shouldHandleDrawInteractionActiveChange_","ol_events_js__WEBPACK_IMPORTED_MODULE_7__","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","updateState_","polygon","transform","abs","ol_sphere_js__WEBPACK_IMPORTED_MODULE_6__","getFormattedCircleArea","circle","pow","getRadius","lineString","c1","ol_proj_js__WEBPACK_IMPORTED_MODULE_4__","c2","point","opt_template","dragging","helpMsg","ol_dom_js__WEBPACK_IMPORTED_MODULE_3__","appendChild","setPosition","coordinate","getDrawInteraction","prevMap","getMap","removeInteraction","addInteraction","createMeasureTooltip_","handleMeasure","coord","innerHTML","classList","add","setOffset","ngeo_CustomEvent_js__WEBPACK_IMPORTED_MODULE_1__","unlistenerEvent_","createHelpTooltip_","removeHelpTooltip_","ol_Overlay_js__WEBPACK_IMPORTED_MODULE_5__","offset","positioning","addOverlay","removeOverlay","parentNode","removeChild","removeMeasureTooltip_","stopEvent","getTooltipElement","ol_obj_js__WEBPACK_IMPORTED_MODULE_9__","$timeout","ngeoNotification","gmfThemes","ngeoStateManager","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","gmfThemes_","root","rootCtrl","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","ngeoStateManager_","ogcServers_","ol_events_js__WEBPACK_IMPORTED_MODULE_8__","handleThemesChange_","refreshFirstLevelGroups_","setFirstLevelGroups","firstLevelGroups","deleteParam","gmf_index_js__WEBPACK_IMPORTED_MODULE_0__","PermalinkParam","addFirstLevelGroups","opt_add","opt_silent","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","groups","treeGroupsParam","updateState","cleanParams","alreadyAdded","groupID","rootChild","grp","cancel","addGroupByName","_this4","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_1__","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_3__","removeGroup","removeAll","cloneGroupNode_","toggleNodeCheck_","_this6","childNode","isChecked","notify","ngeo_message_Message_js__WEBPACK_IMPORTED_MODULE_4__","correspondingTreeCtrl","getOgcServer","mixed","goog_asserts_js__WEBPACK_IMPORTED_MODULE_2__","firstLevelGroupCtrl","gmfGroup","_this7","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this8","isExpanded","isLegendExpanded","nodeElement","$","hasClass","legendElement","is","_this9","ngeo_message_Notification_js__WEBPACK_IMPORTED_MODULE_5__","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_6__","ol_source_Tile_js__WEBPACK_IMPORTED_MODULE_6__","interaction","ol_interaction_Interaction_js__WEBPACK_IMPORTED_MODULE_1__","ol_layer_Base_js__WEBPACK_IMPORTED_MODULE_2__","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","on","olEvent","ol_layer_Layer_js__WEBPACK_IMPORTED_MODULE_4__","ol_source_Image_js__WEBPACK_IMPORTED_MODULE_5__","$applyAsync","ngeoDataSources","ngeoDataSourcesHelper","ngeoQuerent","ngeoQueryResult","dataSources_","ngeoDataSourcesHelper_","ngeoQuerent_","result_","limit_","limit","queryCountFirst_","queryCountFirst","tolerancePx_","tolerance","dataSourceNames_","$inject","issue","queryableDataSources","dataSources","getQueryableDataSources","tolerancePx","wfsCount","pending","handleResult_","total","sources","queried","tooManyResults","totalFeatureCount","_loop","idStr","Number","querentResultItem","tooManyFeatures","typeSeparatedFeatures","filteredProperties","alias","unset","setProperties","featuresByType","ngeo_datasource_DataSources_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_datasource_Helper_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_query_Querent_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_misc_Time_js__WEBPACK_IMPORTED_MODULE_1__","formatTimeValue","opt_useISOFormat","opt_toUTC","date","Date","utc","yearResolution","monthResolution","dayResolution","toISOString","formatWMSTimeParam","wmsTimeProperty","times","mode","ol_string_js__WEBPACK_IMPORTED_MODULE_1__","Scalify","numberFilter","filterFn","scale","$locale","formats","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","sign","nb_decimal","floor","log","factor","round","decimal","unit","str_number","str_unit","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","divisor","prefix","index_max","postfix","space","NumberCoordinates","opt_fractionDigits","template","fractionDigits","parseInt","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","ol_math_js__WEBPACK_IMPORTED_MODULE_0__","dms","charAt","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","Duration","TimeUnits","freeze","SECONDS","MINUTES","HOURS","DAYS","pluralize","amount","formattedUnit","getPlural","output","remainder","ngeoWMSTime","ngeoWMSTime_","ogcServersObject_","ogcServersObject","sync_","createLayer","dataLayerGroup","opt_position","createGroup_","createLeafInAMixedGroup_","initGmfLayerInANotMixedGroup_","updateLayerState_","goog_asserts_js__WEBPACK_IMPORTED_MODULE_1__","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_5__","groupNode","isFirstLevelGroup","printNativeAngle","createLayerFromGroup_","position","insertAt","isOneParentNotMixed_","timeParam","getTimeParam_","hasActiveChildren","ctrl","updateLayerReferences_","createWMTSLayer_","checked","leafNode","firstLevelGroup","getFirstLevelGroupCtrl_","newLayer","ol_index_js__WEBPACK_IMPORTED_MODULE_4__","querySourceIds","disclaimer","disclaimers","wmsTime","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_2__","timeValues","getOptions","isOneParentNotMix","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_0__","ngeo_misc_WMSTime_js__WEBPACK_IMPORTED_MODULE_3__","scope_","registerTool","tool","opt_defaultActivate","entries","unlisten","deactivateTools_","activateDefault_","defaultTool","ENABLE_ASSERTS","defaultTools","entry","unregisterTool","unregisterGroup","activateTool","deactivateTool","hasActiveTool","ol_events_js__WEBPACK_IMPORTED_MODULE_0__","listenerKeys_","addListenerKey","initListenerKey_","clearListenerKey","NOT","OR","rule_Date","AttributeType","Rule","Text","Text_classCallCheck","Text_possibleConstructorReturn","Text_inherits","RuleHelper_exports","ngeoFeatureHelper","RuleHelper_classCallCheck","ngeoFeatureHelper_","createRulesFromAttributes","opt_isCustom","rules","createRuleFromAttribute","rule","Geometry","Select","choices","goog_asserts_prod","createRules","optionsList","createRule","selectOptions","cloneRule","extendRule","sourceRule","destRule","serializeRules","serializeRule","obj","createFilter","mainFilter","conditions","createFilterFromRule_","srsName","Condition","format_filter","incTime","timeFilter","createTimeFilterFromDataSource_","createFilterString","filterString","filterNode","WFS","XMLSerializer","serializeToString","opt_srsName","rot","rsot","rtot","spatialTypes","numericTypes","beginValue","endValue","moment","subtract","selectedChoices","selectedChoice","numericExpression","stringExpression","String","momentEnd","startValue","FeatureHelper","WMSTime","datasource_File","featuresCollection_","Collection","source_Vector","wrapX","Vector","DataSource","FileGroup","FileGroup_classCallCheck","FileGroup_possibleConstructorReturn","_ngeoDatasourceGroup","injector","unregister_","FileGroup_inherits","addDataSource","registerDataSource_","handleDataSourceVisibleChange_","oldValue","removeDataSource","unregisterDataSource_","Group","OGCGroup","OGCGroup_classCallCheck","OGCGroup_possibleConstructorReturn","url_","OGCGroup_inherits","OGCGroup_createClass","WMSGroup","WMSGroup_classCallCheck","WMSGroup_possibleConstructorReturn","_ngeoDatasourceOGCGro","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","WMSGroup_inherits","OGC","updateLayer_","unregister","WMSGroup_createClass","ExternalDataSourcesManager_exports","ngeoFile","ExternalDataSourcesManager_classCallCheck","injector_","q_","ngeoFile_","extDataSources_","files_","map_","fileGroup_","title","wmsGroupsCollection_","wmtsGroupsCollection_","wmtsCache_","events","handleDataSourcesRemove_","addWMSGroup_","wmsGroup","wmsGroupsCollection","removeWMSGroup_","remove","getWMSGroup","wmsGroups","addWMTSGroup_","wmtsGroup","wmtsGroupsCollection","removeWMTSGroup_","getWMTSGroup","wmtsGroups","isExternalDataSource","addLayer_","layerGroup","removeLayer_","createAndAddDataSourceFromWMSCapability","getId","req","includes","createAndAddDataSourceFromWMTSCapability","layerObj","handleWMTSDataSourceVisibleChange_","createAndAddDataSourceFromFile","file","getFileDataSource_","fileGroup","fit","rejections","content","readOptions","getProjection","isKml","readFeatures","isGpx","removeFileDataSource_","removeOGCDataSource_","ExternalDataSourcesManager_createClass","src","EXTERNALLAYERGROUP_NAME","ol","LayerHelper","File","DataSources","btnGroupComponent_","$parse","restrict","link","scope","attrs","assign","buttons_","buttonModel","newValue","directive","BtnGroupController","activate","expressionFn","addButton","btnComponent_","require","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","$apply","$setViewValue","$viewValue","$render","toggleClass","collection_","ol_Collection_js__WEBPACK_IMPORTED_MODULE_2__","handleDataSourcesAdd_","bindMap_","handleViewResolutionChange_","syncDataSourcesToResolution_","unbindMap_","ol_View_js__WEBPACK_IMPORTED_MODULE_4__","syncDataSourceToResolution_","supportsDynamicInRange","inRange","ol_style_Text_js__WEBPACK_IMPORTED_MODULE_36__","gmf_editing_EditFeature_js__WEBPACK_IMPORTED_MODULE_0__","gmf_editing_Snapping_js__WEBPACK_IMPORTED_MODULE_1__","gmf_editing_XSDAttributes_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_editing_attributesComponent_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_editing_createfeatureComponent_js__WEBPACK_IMPORTED_MODULE_9__","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_15__","ngeo_message_modalComponent_js__WEBPACK_IMPORTED_MODULE_17__","ngeo_misc_btnComponent_js__WEBPACK_IMPORTED_MODULE_18__","ngeo_misc_EventHelper_js__WEBPACK_IMPORTED_MODULE_20__","ngeo_misc_FeatureHelper_js__WEBPACK_IMPORTED_MODULE_21__","ngeo_misc_ToolActivateMgr_js__WEBPACK_IMPORTED_MODULE_23__","run","$templateCache","put","component_","dirty","editableTreeCtrl","vectorLayer","bindToController","templateUrl","Controller_","$element","gmfEditFeature","gmfSnapping","gmfXSDAttributes","ngeoEventHelper","ngeoToolActivateMgr","element_","timeout_","gmfEditFeature_","gmfSnapping_","gmfXSDAttributes_","ngeoEventHelper_","ngeoToolActivateMgr_","editableNode_","editableWMSLayer_","confirmDeferred_","unsavedModificationsModalShown","createActive","createToolActivate","ngeo_misc_ToolActivate_js__WEBPACK_IMPORTED_MODULE_22__","mapSelectActive","mapSelectToolActivate","handleFeatureChange_","featureId","interactions_","ol_Collection_js__WEBPACK_IMPORTED_MODULE_26__","modify_","modifyToolActivate","menu_","ngeo_Menu_js__WEBPACK_IMPORTED_MODULE_16__","actions","cls","translate_","rotate_","rotateToolActivate","translateToolActivate","geomType","showServerError","serverErrorMessage","serverErrorType","$onInit","lang","getCurrentLanguage","datetimepicker","setLocale","setDateFormatter","ngeo_misc_php_date_formatter_js__WEBPACK_IMPORTED_MODULE_5__","getFeaturesCollection","gmf_layertree_SyncLayertreeMap_js__WEBPACK_IMPORTED_MODULE_3__","goog_asserts_js__WEBPACK_IMPORTED_MODULE_4__","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_32__","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_33__","ol_interaction_Modify_js__WEBPACK_IMPORTED_MODULE_31__","deleteCondition","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_10__","ngeo_interaction_Rotate_js__WEBPACK_IMPORTED_MODULE_13__","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_35__","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_34__","ngeo_interaction_Translate_js__WEBPACK_IMPORTED_MODULE_14__","initializeInteractions_","ensureSnapInteractionsOnTop","handleDestroy_","ol_index_js__WEBPACK_IMPORTED_MODULE_24__","ol_events_js__WEBPACK_IMPORTED_MODULE_27__","handleFeatureAdd_","handleMapSelectActiveChange_","State","STOP_EDITING_PENDING","confirmCancel","STOP_EDITING_EXECUTE","DEACTIVATE_PENDING","DEACTIVATE_EXECUTE","IDLE","setAttributes_","toggle_","save","setId","dateFormatter","parseDate","jsonFormat","setMinutes","getMinutes","getTimezoneOffset","formatDate","updateFeature","insertFeatures","handleEditFeature_","close","checkForModifications_","scopeApply","continueWithoutSaving","delete","confirm","deleteFeature","submit","find","click","resp","ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_30__","mask","geomAttr","ngeo_format_XSDAttribute_js__WEBPACK_IMPORTED_MODULE_11__","getGeometryAttribute","ol_Feature_js__WEBPACK_IMPORTED_MODULE_29__","keys","createUid","otherUid","toolMgr","handleMenuActionClick_","handleTranslateEnd_","handleRotateEnd_","mapDiv","getViewport","assertElement","handleMapClick_","handleMapContextMenu_","pixel","forEachFeatureAtPixel","ret","ol_array_js__WEBPACK_IMPORTED_MODULE_25__","hitTolerance","buffer","ol_extent_js__WEBPACK_IMPORTED_MODULE_28__","getFeaturesInExtent","handleGetFeatures_","getEventPixel","getCoordinateFromPixel","ngeo_GeometryType_js__WEBPACK_IMPORTED_MODULE_12__","open","preventDefault","stopPropagation","_this10","ngeo_misc_decorate_js__WEBPACK_IMPORTED_MODULE_19__","registerInteractions_","_this11","unregisterInteractions_","_this12","newFeature","oldFeature","_this13","handleFeaturePropertyChange_","action","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_2__","gmfTreeManagerModeFlush","gmfTreeManager","$rootScope_","modeFlush","gmfTreeManager_","themeName_","addTheme","setThemeName","getThemeName","isLoading","$emit","EventType","THEME_NAME_SET","gmf_layertree_TreeManager_js__WEBPACK_IMPORTED_MODULE_0__","inRange_","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","ngeo_rule_Rule_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_format_AttributeType_js__WEBPACK_IMPORTED_MODULE_0__","choices_","ol_uri_js__WEBPACK_IMPORTED_MODULE_1__","gmfLayersUrl","http_","baseUrl_","layerIds","bbox","getFeaturesWithComparisonFilters","filters","ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_0__","layerId","geoJSON","post","headers","Content-Type","writeFeature","factory_","func","wait","invokeApply","timeout","_len","_key","context","factory","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_1__","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","hash","replaceState","getPath","getUriString","out","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getParam","getFragmentParam","getParamAsInt","valueAsInt","isNaN","getParamAsFloat","valueAsFloat","parseFloat","getFragmentParamAsInt","getParamKeys","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","$window","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","ngeo_statemanager_Location_js__WEBPACK_IMPORTED_MODULE_1__","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","keyRegexp","match","localStorage","err","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","RegExp","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_0__","authenticationBaseUrl","gmfUser","_olEventsEventTarget","user_","noReloadRole_","load_","RouteSuffix","IS_LOGGED_IN","handleLogin_","changePassword","oldPwd","newPwd","confPwd","CHANGE_PASSWORD","param","oldPassword","newPassword","confirmNewPassword","is_password_changed","$digest","login","pwd","LOGIN","password","logout","noReload","LOGOUT","resetUser_","resetPassword","RESET_PASSWORD","successFn","getFunctionalities","functionalities","getRoleId","role_id","checkingLoginStatus","respData","setUser_","ngeo_CustomEvent_js__WEBPACK_IMPORTED_MODULE_0__","user","emitEvent","username","role_name","createDate","defaultValue","getTime","minDate","minValue","maxDate","maxValue","minDefaultDate","minDefValue","maxDefaultDate","maxDefValue","defaultValues","getUTCDate","localDate","getUTCFullYear","getUTCMonth","DrawAzimut_exports","Pointer","handleDownEvent","handleDownEvent_","handleUpEvent","handleUpEvent_","downPx_","started_","sketchFeature_","sketchPoint_","squaredClickTolerance_","sketchLayer_","common","getDefaultDrawStyleFunction","downPx","clickPx","dx","dy","pass","handlePointerMove_","finishDrawing_","startDrawing_","mapBrowserEvent","modifyDrawing_","createOrUpdateSketchPoint_","Feature","Point","updateSketchFeatures_","sketchPointGeom","setCoordinates","sketchFeatures","addFeatures","LineString","Circle","GeometryCollection","CustomEvent","geometries","getGeometriesArray","last","setRadius","getLength","abortDrawing_","shouldStopEvent","functions","DrawAzimut","MeasureAzimut_exports","unitPrefixFormat","numberFormat","Measure","getGeometries","Projection","formatLength","formatAzimut","getFormattedAzimut","getAzimut","coords","rad","acos","sqrt","popupComponent_exports","directive_","ngeoPopupTemplateUrl","addClass","css","popupComponent","Popup_exports","$compile","$new","autoDestroy_","sce_","body","append","getOpen","setOpen","$destroy","setTitle","trustedTitle","setContent","opt_trusted","setUrl","setWidth","setHeight","height","setSize","setAutoDestroy","autoDestroy","Factory","manager","manager_","features_","index_","setFeatures","handleFeatureRemove_","ol_format_XML_js__WEBPACK_IMPORTED_MODULE_4__","ol_index_js__WEBPACK_IMPORTED_MODULE_3__","readFromDocument","doc","nodeType","Node","DOCUMENT_NODE","firstChild","nextSibling","ELEMENT_NODE","readFromNode","localName","elements","getElementsByTagName","readFromElementNode_","getAttribute","nillable","required","ngeo_format_Attribute_js__WEBPACK_IMPORTED_MODULE_1__","setGeometryType","setAttributeByXsdType_","enumerations","ngeo_format_AttributeType_js__WEBPACK_IMPORTED_MODULE_2__","restrictions","restrictionNode","maxLengths","maxLength","numType","NumberType","FLOAT","INTEGER","geomAttribute","dataSourcesCollection_","ol_Collection_js__WEBPACK_IMPORTED_MODULE_1__","title_","getDataSourceState","VisibilityState","ON","OFF","toggleVisibilityState","visibleToSet","visibilityState","INDETERMINATE","WFSDescribeFeatureType_exports","XML","xml","PARSERS_","readElement_","objectStack","len","pop","readComplexType_","COMPLEX_TYPE_PARSERS_","readComplexContent_","COMPLEX_CONTENT_PARSERS_","readExtension_","EXTENSION_PARSERS_","readSequence_","SEQUENCE_PARSERS_","NAMESPACE_URIS_","complexType","complexContent","extension","sequence","WFSDescribeFeatureType","Querent_exports","ngeoRuleHelper","ngeoRuleHelper_","requestCancelers_","wmsGetCapabilitiesPromises_","wmtsGetCapabilitiesPromises_","cancelStillRunningRequests_","combinedWFSDataSources","getCombinableWFSDataSources_","wfs","issueCombinedWFS_","combinedWMSDataSources","getCombinableWMSDataSources_","wms","issueCombinedWMS_","handleCombinedQueryResult_","isDataSourceQueryable_","wfsDescribeFeatureType","supportsAttributes","ogcLayerNames","uri","TYPENAME","wmsFindLayerCapability","layerCapabilities","layerCapability","wmsGetCapabilities","baseUrl","opt_cache","WMSCapabilities","wmtsFindLayerCapability","wmtsGetCapabilities","WMTSCapabilities","combinedHash","dataSourceIdStr","dataSourceId","handleQueryResult_","readAndTypeFeatures_","setUniqueIds_","featureTypes","getSetOlFormatTypes_","opt_types","types","setFeatureType","getFeatureType","combinedDataSources","maxFeatures","getCode","xmlSerializer","getFeatureCommonOptions","_iterator7","_isArray7","_i7","_ref7","featurePrefix","outputFormat","getFeatureDefer","countPromise","getCountOptions","resultType","featureCountXml","writeGetFeature","featureCountRequest","canceler","registerCanceler_","readFeatureCollectionMetadata","numberOfFeatures","getFeatureOptions","featureRequestXml","featureRequest","_iterator6","_isArray6","_i6","_ref6","FEATURE_COUNT","projCode","_iterator8","_isArray8","_i8","_ref8","INFO_FORMAT","activeDimensionsSet","filtrableLayerName","_iterator9","_isArray9","_i9","_ref9","filterParamValue","filterParamValues","wmsSource","ImageWMS","wmsGetFeatureInfoUrl","getGetFeatureInfoUrl","combinableDataSources","notCombinableDataSources","_iterator10","_isArray10","_i10","_ref10","combined","_iterator11","_isArray11","_i11","_ref11","combinableDataSource","_iterator12","_isArray12","_i12","_ref12","_iterator13","_isArray13","_i13","_ref13","ds","_iterator14","_isArray14","_i14","_ref14","CombinedDataSources","RuleHelper","WFSAttribute","complexTypeElements","readFromComplexTypeElement_","Attribute","XSDAttribute","Helper_exports","Helper_classCallCheck","cache_","getDataSourceAttributes","wfsDescribeFeatureTypeDefer","ogcLayerName","Querent","ol_interaction_Snap_js__WEBPACK_IMPORTED_MODULE_8__","mapViewChangePromise_","treeCtrlsUnregister_","unregisterAllTreeCtrl_","ol_events_js__WEBPACK_IMPORTED_MODULE_5__","$watchCollection","registerTreeCtrl_","handleMapMoveEnd_","wfsConfig","getWFSConfig_","stateWatcherUnregister","handleTreeCtrlStateChange_","ol_Collection_js__WEBPACK_IMPORTED_MODULE_6__","requestDeferred","deactivateItem_","childLayers","ogcServerName","wfsSupport","urlWfs","activateItem_","edge","pixelTolerance","vertex","loadItemFeatures_","loadAllItems_","ol_format_WFS_js__WEBPACK_IMPORTED_MODULE_7__","extend","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_11__","featureListenerKeys_","keyPressListenerKey_","myFeatures_","vectorSource_","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_10__","centerFeatures_","ol_interaction_Translate_js__WEBPACK_IMPORTED_MODULE_9__","ol_index_js__WEBPACK_IMPORTED_MODULE_1__","ol_events_js__WEBPACK_IMPORTED_MODULE_4__","handleKeyUp_","setState_","addFeature_","handleFeaturesAdd_","handleFeaturesRemove_","getTargetElement","cursor","removeFeature_","ol_Feature_js__WEBPACK_IMPORTED_MODULE_3__","ol_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_5__","getGeometryCenterPoint_","centerFeature","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_8__","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_6__","ol_extent_js__WEBPACK_IMPORTED_MODULE_2__","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_7__","keyCode","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_13__","modified_","changingFeature_","pixelTolerance_","coordinate_","centerCoordinate_","overlay_","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_12__","ngeo_interaction_common_js__WEBPACK_IMPORTED_MODULE_1__","getDefaultModifyStyleFunction","ol_interaction_Pointer_js__WEBPACK_IMPORTED_MODULE_7__","handleDown_","handleDragEvent","handleDrag_","handleUp_","ol_events_js__WEBPACK_IMPORTED_MODULE_6__","ol_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_8__","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_9__","getCenterCoordinate_","ol_Feature_js__WEBPACK_IMPORTED_MODULE_5__","willModifyFeatures_","ngeo_CustomEvent_js__WEBPACK_IMPORTED_MODULE_2__","f","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_10__","getFlatMidpoint","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_11__","getFlatInteriorPoint","ol_extent_js__WEBPACK_IMPORTED_MODULE_4__","oldX","oldY","centerX","centerY","dx1","dy1","dx0","dy0","a0","atan2","rotate","ol_Collection_js__WEBPACK_IMPORTED_MODULE_0__","ol_OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_5__","menuOptions","opt_overlayOptions","TOP_LEFT","clickOutListenerKey_","contentEl","class","autoClose_","autoClose","headerEl","appendTo","actionsEl","actions_","data-name","prepend","ol_Overlay_js__WEBPACK_IMPORTED_MODULE_4__","handleActionClick_","handleMapPointerMove_","documentElement","handleClickOut_","getElement","closest","originalEvent","Element","contains","file_saver__WEBPACK_IMPORTED_MODULE_1__","opt_fileType","fileType","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_0__","isSafari","blob","Blob","ngModel","transclude","bindings","resizable","closable","component","_class","$element_","$scope_","modal_","attr","dialog","draggable","modal","e","$onDestroy","ngeo_message_Message_js__WEBPACK_IMPORTED_MODULE_2__","container","container_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","el","html","delay","_compare","str1","str2","toLowerCase","_lpad","char","chr","_indexOf","arr","defaultSettings","dateSettings","days","daysShort","months","monthsShort","meridiem","ordinal","suffixes","2","3","separators","validParts","intParts","tzParts","tzClip","DateFormatter","_extend","_typeof","getMonth","vDate","vFormat","year","month","day","hour","min","sec","vSettings","vDateFlag","vTimeFlag","vDatePart","iDatePart","vMonth","vMeriIndex","vMeriOffset","mer","vFormatParts","vDateParts","guessDate","vDateStr","vParts","iPart","iSec","vYear","vDigit","substr","setMonth","setDate","getFullYear","setFullYear","setHours","setSeconds","parseFormat","vChar","fmt","self","backslash","doFormat","t","D","w","getDate","N","getDay","z","a","Y","W","F","M","L","A","G","B","H","getUTCHours","getUTCMinutes","getUTCSeconds","getHours","h","getSeconds","u","getMilliseconds","exec","I","UTC","O","tzo","P","T","Z","U","str","gmfShortenerCreateUrl","gmfShortenerCreateUrl_","getShortUrl","postShortUrl_","short_url","status","sendShortUrl","shortUrl","email","URL_MAX_LEN","URL_PATH_MAX_LEN","proj4__WEBPACK_IMPORTED_MODULE_3__","epsg21781def","ngeo_proj_somerc_js__WEBPACK_IMPORTED_MODULE_2__","defs","ol_proj_proj4_js__WEBPACK_IMPORTED_MODULE_1__","ol_proj_js__WEBPACK_IMPORTED_MODULE_0__","setExtent","ol_interaction_Draw_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_interaction_Measure_js__WEBPACK_IMPORTED_MODULE_1__","br","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_3__","proj","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_3__","component_exports","Service","Notification","modalComponent","gmfAuthenticationTemplateUrl","gmfAuthenticationTemplateUrl_","allowPasswordReset","allowPasswordChange","passwordValidator","forcePasswordChange","AuthenticationController_","gmfAuthenticationService","gmfAuthenticationService_","notification_","changingPassword","changePasswordModalShown","resetPasswordModalShown","loginVal","pwdVal","oldPwdVal","newPwdVal","newPwdConfVal","setError_","isPasswordValid","notValidMessage","changePasswordReset","resetError_","resetPasswordSuccessFn","userMustChangeItsPassword","Message","authentication_module","BackgroundLayerMgr_exports","Observable","mapUids_","BACKGROUNDLAYERGROUP_NAME","mapUid","previous","bgGroup","setAt","removeAt","current","getOpacityBgLayer","setOpacityBgLayer","baseBgLayer","Layer","hasUpdates","updatedDimensions","TileWMS","BackgroundLayerMgr","backgroundlayerselector_component_exports","Themes","gmfBackgroundlayerselectorTemplateUrl","opacityOptions","select","ngeoBackgroundLayerMgr","bgLayer","bgLayers","opacityLayer","backgroundLayerMgr_","indexOpa","findIndex","getSetBgLayerOpacity","setLayer","backgroundlayerselector_component","gmfEnumerateAttribute","gmfEnumerateAttribute_","prepareFiltrableDataSource","prepareFiltrableDataSourceDefer","enumAttributes","enumeratedAttributes","getAttributeValues","choice","Helper","EnumerateAttribute","datasource_Helper","datasource_OGC","OGC_classCallCheck","_ngeoDatasourceOGC","gmfLayer_","OGC_createClass","WFSAliases_exports","WFSAliases_classCallCheck","describe","WFSAliases","Manager_exports","gmfWFSAliases","Manager_classCallCheck","ngeoBackgroundLayerMgr_","ngeoDataSources_","gmfWFSAliases_","dataSourcesCache_","treeCtrlCache_","handleNgeoBackgroundLayerChange_","setDatasourceMap","setDimensions","clearDataSources_","clearTreeCtrlCache_","promiseThemes","createDataSource_","promiseBgLayers","backgroundLayers","backgroundLayer","handleTreeManagerRootChildrenChange_","newTreeCtrls","treeCtrls","newTreeCtrl","getTreeCtrlCacheItem_","addTreeCtrlToCache_","removeTreeCtrlCacheItem_","ol_obj","meta","queryLayers","wmsLayers","childLayer","isSingleTile","identifierAttributeField","timeAttribute","filterRulesWatcherUnregister","hasFilters","isVisible","handleDataSourceFilterRulesChange_","timeLowerValueWatcherUnregister","timeUpperValueWatcherUnregister","wmsLayer","handleDataSourceTimeValueChange_","SyncLayertreeMap","Image","treeDataSource","siblingDataSourceIds","_source$updateParams","Tile","layersList","previousBackgroundLayer","currentBackgroundLayer","TreeManager","Manager","datasource_module","DataSourceBeingFiltered","ExternalDataSourcesManager","Disclaimer_exports","ngeoCreatePopup","createPopup_","messages_","closeMessage_","getMessageUid_","popup","button","Popup","Disclaimer","disclaimer_component_exports","EventHelper","ngeoDisclaimer","external","visibility","msgs_","disclaimer_","eventHelper_","dataLayerGroup_","DATALAYERGROUP_NAME","registerLayer_","handleLayersAdd_","Base","handleLayersRemove_","unregisterLayer_","layerUid","showDisclaimerMessage_","closeDisclaimerMessage_","disclaimer_component","SavedFilters_exports","SavedFilters_classCallCheck","currentDataSourceId_","currentDataSourceItems_","localStorageKey_","items_","items","rePopulateCurrentDataSourceItems_","loadItemsFromLocalStorage_","JSON","parse","indexOfItem","idx","saveItemsInLocalStorage_","stringify","SavedFilters_createClass","Item","customRules","directedRules","SavedFilters","ruleComponent_exports","draw_component","FeatureOverlay","datepickerComponent","ToolActivateMgr","ngeoRuleTemplateUrl","RuleController_","_operators","_operatorsShortFormat","ruleComponent_classCallCheck","featureOverlay","toolGroup","operatorType","spatialOperatorType","temporalOperatorType","operatorsShortFormat","timeRangeMode","widget","createDate_","createWeekAgoDate_","interval","timeValueMode","toolActivate_","unlisteners_","drawActive","drawToolActivate","ToolActivate","drawnFeatures","selectedFeatures","Modify","Rotate","Style","Fill","Translate","handleActiveChange_","supportedTypes","GeometryType","hasExpression","isActive","editToolIsActive","toggle","toggleChoiceSelection","onDateSelected","onDateRangeSelected","opt_timeDelta","setTime","timeToDate","toLocaleDateString","oldActive","ruleFeature","cloneFeature","decorate","drawnFeature","geom_Geometry","getRuleGeometryType","removeMenu_","Menu","ruleComponent","filter_component_exports","MapQuerent","ngeoFilterTemplateUrl","aRuleIsActive","datasource","FilterController_","ngeoMapQuerent","component_classCallCheck","ngeoMapQuerent_","geometryAttributes","otherAttributes","ruleUnlisteners_","handleARuleIsActiveChange_","registerRule_","hasARule","getRulesWithValue_","getData","createAndAddCustomRule","setCondition","removeCustomRule","unregisterRule_","handleRuleActiveChange_","unlistener","filter_component","filterselectorComponent_exports","FeatureOverlayMgr","gmfFilterselectorTemplateUrl","gmfDataSourceBeingFiltered","gmfDataSourcesHelper","gmfSavedFilters","ngeoFeatureOverlayMgr","filterselectorComponent_classCallCheck","handleSelectedDataSourceChange_","gmfDataSourcesHelper_","currentDataSourceItems","saveFilterManageModalShown","gmfUser_","handleGmfUserFunctionalitiesChange_","filtrableDataSources","filtrableLayerNodeNames_","gmfDataSources_","readyDataSource","ruleCache_","saveFilterSaveModalShown","saveFilterName","enableDataSourceRegistration_","handleEnableDataSourceRegistrationChange_","defaultFiltrableDataSourceName_","toggleDataSourceRegistration_","usrFunc","newDataSourceRegistration","register","isDataSourceFiltrable_","opt_notify","gettext","msgs","p1","p2","p3","currentDataSourceId","getRuleCacheItem_","setRuleCacheItem_","directedFilterAttributes","directedAttributes","saveFilterShowModal","saveFilterSave","alreadyExist","saveFilterLoadItem","filterItem","cacheItem","saveFilterManage","saveFilterRemoveItem","RuleCache","RuleCacheItem","filterselectorComponent","filters_module","timeSliderComponent_exports","pre","computeDates_","sliderUi","sDate","eDate","wmstime","getClosestValue_","dates","sliderOptions","isModeRange","timeValueList","getTimeValueList_","initialOptions_","max","endDate","nextDate","timestamp","leftIndex","rightIndex","leftDistance","rightDistance","targetDate","startDate","bestDate","bestDistance","distance","getLocalizedDate","timeSliderComponent","layertree_module","layertree_component","datasourceGroupTreeComponent","permalink_module","Permalink","ShareService","shareComponent","map_component_exports","prop","Map","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","map_component","scaleselector_exports","ngeoScaleselectorTemplateUrl","scaleselector_ScaleselectorController","ScaleselectorController","scalesExpr","scales","zoomLevels","newLength","sort","optionsExpr","getOptions_","resolutionChangeKey_","currentScale","currentZoom","getZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","zoom","changeZoom","setZoom","handleResolutionChange_","scaleselector","map_module","recenter","resizemap","src_map_component_exports","Snapping","manageResize","gmfPermalink","ngeoFeatureOverlayMgr_","gmfPermalink_","src_map_component","mousepositionComponent_exports","misc_filters","gmfMapMousepositionTemplateUrl","projections","control_","initOlControl_","removeControl","MousePosition","className","coordinateFormat","filterAndArgs","undefinedHTML","addControl","code","mousepositionComponent","src_map_module","Config_exports","columnDefs","selectedRows","getRowUid","isRowSelected","getSelectedCount","getSelectedRows","row","selectRow","toggleRow","selectAll","unselectAll","rowId","invertSelection","Config","grid_component_exports","ngeoGridTemplateUrl","configuration","sortedBy","sortAscending","floatTheadConfig","scrollContainer","$table","columnName","asc","attributes1","attributes2","clickRow","shiftKey","isShiftKeyOnly_","platformModifierKey","isPlatformModifierKeyOnly_","clickRow_","selectRange_","isSelected","targetUid","posClickedRow","posSelectedRows","currentRow","posClosestRow","currentPos","currentDistance","rangeEnd","preventTextSelection","altKey","metaKey","ctrlKey","grid_component","gridComponent_exports","Csv","gmfDisplayquerygridTemplateUrl","featuresStyleFn","selectedFeatureStyleFn","getMapFn","removeEmptyColumnsFn","maxResultsFn","maxRecenterZoomFn","mergeTabs","ngeoCsvDownload","queryOptions","ngeoCsvDownload_","maxResults","gridSources","loadedGridSources","selectedTab","removeEmptyColumns_","maxRecenterZoom","featuresForSources_","highlightFeatures_","filename_","newQueryResult","oldQueryResult","updateData_","unregisterSelectWatcher_","featuresOverlay","featuresStyle","highlightFeaturesOverlay","highlightFeatureStyle","Stroke","mapFn","getGridSources","sourceLabel","hasOneWithTooManyResults_","getMergedSources_","makeGrid_","escapeValue","collectData_","firstSourceId","selectTab","isInteger","toEscape","gridSource","allSources","mergedSources","mergedSourceId","getMergedSource_","mergeSourceId","currentMergeSourceId","mergeSource","allProperties","featureGeometriesNames","featuresForSource","featureGeometryName","cleanProperties_","removeEmptyColumnsFn_","keysToKeep","keyToRemove","gridConfig","getGridConfiguration_","ol_uid","column","newSelected","oldSelectedRows","onSelectionChanged_","updateFeatures_","reflowGrid_","activePane","removeClass","getActiveGridSource","isOneSelected","getSelectedRowCount","zoomToSelection","ol_extent","maxZoom","downloadCsv","startDownload","gridComponent","swipe_exports","POINTER_EVENTS","mouse","move","touch","pointer","touches","changedTouches","clientX","clientY","getEvents","pointerTypes","eventType","pointerType","eventName","eventHandlers","totalX","totalY","startCoords","lastPos","makeSwipeDirective_","directiveName","direction","$verticalSwipe","MAX_HORIZONTAL_DISTANCE","MAX_HORIZONTAL_RATIO","MIN_VERTICAL_DISTANCE","swipeHandler","valid","isDefined","deltaY","deltaX","validSwipe","triggerHandler","$event","swipe","windowComponent_exports","gmfDisplayquerywindowTemplateUrl","$animateProvider","classNameFilter","draggableContainment","defaultCollapsedFn","desktop","showUnqueriedLayers","collapsed","showUnqueriedLayers_","sourcesFilter","selectedSource","currentResult","isNext","updateQueryResult_","containment","minHeight","minWidth","setCurrentResult_","collectFeatures_","highlightCurrentFeature_","setHighlight","hasChanged","lastFeature","getResultLength","animate_","queryResult","isFirst","isLast","getFeatureValues","opt_lastFeature","setSelectedSource","windowComponent","extraModule","search_module","search_component","FulltextSearch","selectorComponent_exports","theme_Manager","gmfThemeSelectorTemplateUrl","gmfThemeManager","setThemes_","setTheme","selectorComponent","theme_module","displaywindowComponent_exports","ngeoMessageDisplaywindowTemplateUrl","displaywindowComponent_classCallCheck","clearOnClose","contentTemplate","contentScope","compile_","handle","compiled","clear_","displaywindowComponent_createClass","trustAsResourceUrl","displaywindowComponent","controlComponent_exports","control","Control","controlComponent","filereaderComponent_exports","fileContent","changeEvent","fileReader","FileReader","onload","readAsText","files","filereaderComponent","getBrowserLanguage_exports","availableLanguages","nav","browserLanguages","languages","language","browserLanguage","systemLanguage","userLanguage","getBrowserLanguage","misc_extraModule","AutoProjection","btnComponent","debounce","sortableComponent","Time","mapQueryComponent_exports","elem","clickEventKey_","pointerMoveEventKey_","hit","forEachLayerAtPixel","sourceids","cursorHover","mapQueryComponent","WfsPermalink_WfsPermalinkService","ngeoWfsPermalinkOptions","maxFeatures_","wfsTypes_","wfsTypes","wfsType","defaultFeatureNS_","defaultFeatureNS","defaultFeaturePrefix_","defaultFeaturePrefix","pointRecenterZoom_","pointRecenterZoom","clearResult_","typeName","createFilters_","filterGroups","issueRequest_","showFeatures","getExtent_","padding","resultSource","reduce","or_","filterGroup","filterDef","cond","equalTo","and_","joinFilters_","joinFn","combinedFilters","currentFilter","WfsPermalink","AbstractAppController_exports","permalink_","gmfAuthentication","updateHasEditableLayers_","userChange","roleId","open_panel","filterSelectorActive","previousThemeName","updateCurrentTheme_","searchDatasources","labelKey","groupValues","groupActions","srid","gmfDataSourcesManager","defaultDimensions","dim","leftNavVisible","rightNavVisible","queryFill","queryStroke","queryFeatureStyle","queryActive","queryAutoClear","printPanelActive","printActive","measurePointActive","measureLengthActive","drawFeatureActive","drawProfilePanelActive","stateManager","tmhDynamicLocale","defaultLang","langUrls","initLanguage","mapToolsGroup","queryToolActivate","measurePointActivate","measureLengthActivate","drawFeatureActivate","drawProfilePanelActivate","printPanelActivate","$root","setDefaultBackground_","updateCurrentBackgroundLayer_","skipPermalink","background","getBackgroundLayer","defaultBasemapArray","default_basemap","defaultBasemapLabel","gmfx","openIframePopup","opt_width","opt_height","opt_apply","displaywindowUrl","openPopup_","openTextPopup","displaywindowContent","displaywindowTitle","displaywindowOpen","displaywindowWidth","displaywindowHeight","cgxp","tools","openInfoWindow","displaywindowDraggableContainment","getLayerByLabels","labels","switchLanguage","setCurrentLanguage","loadRemote","urlLanguage","fallbackThemeName","defaultThemeNameFromFunctionalities","getLocationIcon","arrow","arrowWrapper","statemanager_module","tmhDynamicLocaleProvider","angularLocaleScript","localeLocationPattern","ModifyCircle_exports","handleDragEvent_","vertexFeature_","lastPixel_","rBush_","RBush","snappedToVertex_","dragSegments_","FeatureProperties","writeCircleGeometry_","handlePointerAtPixel_","removeFeatureSegmentData_","rBush","nodesToRemove","rings","segment","segmentData","insert","createOrUpdateVertexFeature_","vertexFeature","compareIndexes_","vertexExtent","segmentDataMatches","getInExtent","componentSegments","segmentDataMatch","Polygon","setGeometryCoordinates_","MeasureAzimut","MapBrowserPointerEvent","getInteracting","handlingDownUpSequence","pixelCoordinate","lowerLeft","upperRight","box","closestSegment","vertexPixel","getPixelFromCoordinate","pixel1","pixel2","squaredDist1","squaredDist2","dist","vertexSegments","ModifyCircle","ModifyRectangle_exports","vectorPoints_","params_","featureGeom","pointSource","corners","pointFeatures","cornerPoint","cornerFeature","corner","siblingX","siblingY","boxFeature","previousFeature","nextFeature","initializeParams_","origin","originPoint","originCoordinate","originPixel","siblingXPoint","siblingXCoordinate","siblingXPixel","vectorX","vectorXMagnitude","siblingYPoint","siblingYCoordinate","siblingYPixel","vectorY","vectorYMagnitude","destinationPixel","b2Pixel","calculateNewPixel_","b2Coordinate","c2Pixel","c2Coordinate","destination","vector","aVector","abScalarProduct","deltaVector","ModifyRectangle","Modify_exports","otherFeatures_","utils","circleFeatures_","rectangleFeatures_","Interaction","interactions","currentMap","getFeatureCollection_","isCircle","isRectangle","Controller_exports","ngeoFeatures","featureHelper_","ngeoFeatures_","drawPoint","measureLength","measureArea","measureAzimut","drawRectangle","drawText","registerInteraction","handleActiveChange","handleDrawEnd","sketch","draw_features","Controller","point_exports","drawFeatureCtrl","Draw","rectangle_exports","geometryFunction","maxPoints","rectangle","text_exports","draw_text","area_exports","contMsg","MeasureArea","measure_area","azimut_exports","measure_azimut","length_exports","MeasureLength","measure_length","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_12__","ngeo_misc_EventHelper_js__WEBPACK_IMPORTED_MODULE_5__","filter_","interaction_","ngeo_GeometryType_js__WEBPACK_IMPORTED_MODULE_2__","ol_interaction_Draw_js__WEBPACK_IMPORTED_MODULE_11__","ngeo_interaction_MeasureLength_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_interaction_MeasureArea_js__WEBPACK_IMPORTED_MODULE_3__","ol_index_js__WEBPACK_IMPORTED_MODULE_7__","ol_events_js__WEBPACK_IMPORTED_MODULE_9__","handleDrawEnd_","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_6__","toMulti","ol_Collection_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_format_XSDAttribute_js__WEBPACK_IMPORTED_MODULE_0__","promises_","handleGetAttributes_","gmfRasterUrl","getRaster","Param","X","handleGetRaster_","proj4_projections_somerc_js__WEBPACK_IMPORTED_MODULE_1__","proj4__WEBPACK_IMPORTED_MODULE_0__","Proj","ngeoColorpickerTemplateUrl","colors","DEFAULT_COLORS","setColor","ol_extent_js__WEBPACK_IMPORTED_MODULE_1__","stringToCoordinates","getProjectionList","projectionsCodes","toUpperCase","tryProjections","viewProjection","opt_projections","tryProjectionsWithInversion","defaultParams_","query","queryParams","Promise","catch","ngeo_download_service_js__WEBPACK_IMPORTED_MODULE_0__","encoding_","extension_","includeHeader_","quote_","separator_","generateCsv","translatedColumnHeaders","columnHeader","header","getRow_","dataRows","rowValues","matchAllQuotesRegex","doubleQuote","ol_Map_js__WEBPACK_IMPORTED_MODULE_1__","stateExpr","animationDelayKey","animationDelay","cancelAnimationFrame","gmf_permalink_ShareService_js__WEBPACK_IMPORTED_MODULE_0__","gmfPermalinkShareTemplateUrl","enableEmail","ShareComponentController","gmfShareService","gmfShareService_","shortLink","showLengthWarning","successfullySent","errorOnsend","errorOnGetShortUrl","when","permalink","$valid","ngeo_datasource_DataSources_js__WEBPACK_IMPORTED_MODULE_0__","gmfLayertreeDatasourceGroupTreeTemplateUrl","getGroupUid","toggleDataSource","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_statemanager_Location_js__WEBPACK_IMPORTED_MODULE_0__","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_24__","ngeoDebounce","mapViewPropertyChangeEventKey_","ngeoDebounce_","featureOverlay_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","ngeoAutoProjection_","sourceProjections_","projectionCodes","crosshairFeature_","crosshairStyle_","crosshairStyle","ol_style_RegularShape_js__WEBPACK_IMPORTED_MODULE_22__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_21__","radius2","mapTooltip_","featureHashFormat_","ngeo_format_FeatureHash_js__WEBPACK_IMPORTED_MODULE_8__","encodeStyles","propertiesType","ngeo_format_FeatureProperties_js__WEBPACK_IMPORTED_MODULE_9__","fillOpacity","fontColor","fontSize","isBox","isLabel","pointRadius","strokeColor","ol_events_js__WEBPACK_IMPORTED_MODULE_18__","handleBackgroundLayerManagerChange_","goog_asserts_js__WEBPACK_IMPORTED_MODULE_15__","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","TREE_OPACITY","TREE_GROUP_OPACITY","getFeatures","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","gmf_theme_Manager_js__WEBPACK_IMPORTED_MODULE_1__","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","registerExternalDSGroup_","initLayers_","getMapCenter","targetProjection","reprojectedCenter","getMapZoom","getMapCrosshair","crosshair","setMapCrosshair","opt_center","crosshairCoordinate","ol_Feature_js__WEBPACK_IMPORTED_MODULE_19__","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_20__","getMapTooltip","setMapTooltip","tooltipText","tooltipPosition","div","ngeo_Popover_js__WEBPACK_IMPORTED_MODULE_3__","DIMENSIONS","unregisterMap_","getFeature","registerMap_","oeFeature","ngeo_olcs_constants_js__WEBPACK_IMPORTED_MODULE_7__","Permalink3dParam","ENABLED","setCenter","wfsPermalinkData","getWfsPermalinkData_","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","decodeURI","tn","defaultTheme","default_theme","groupsNames","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_2__","enable","groupLayers","groupLayersArray","ol_array_js__WEBPACK_IMPORTED_MODULE_17__","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_14__","removeNgeoFeature_","ol_index_js__WEBPACK_IMPORTED_MODULE_16__","handleNgeoFeaturesChange_","wfsLayer","numGroups","createFilterGroup_","showFeaturesParam","paramKey","gmfExtDSManager","layerNamesString","urlsString","ExtDSSeparator","LIST","urls","groupLayerNamesString","groupLayerNames","NAMES","serviceType","ngeo_datasource_OGC_js__WEBPACK_IMPORTED_MODULE_6__","getCapabilitiesDefer","responses","ngeo_datasource_Group_js__WEBPACK_IMPORTED_MODULE_5__","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","unregisterExternalDSGroup_","_this8$ngeoStateManag","wmsGroupLayerNames","wmsDataSource","wmtsGroupLayerNames","wmtsDataSource","startsWith","_iterator15","_isArray15","_i15","_ref15","ngeo_draw_features_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_misc_debounce_js__WEBPACK_IMPORTED_MODULE_10__","ngeo_misc_EventHelper_js__WEBPACK_IMPORTED_MODULE_11__","ngeo_statemanager_module_js__WEBPACK_IMPORTED_MODULE_12__","OpenLayersLayerProperties","regexp","key1","key2","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_13__","ngeoDatePickerTemplateUrl","sdateOptions","initialMinDate","initialMaxDate","onClose","selectedDate","datepicker","edateOptions","dp","ngeoTime","ngeoTime_","changeMonth","changeYear","sdate","edate","$watchGroup","newDates","oldDates","isDate","promiseId","handleGetAttributeValues_","isValidFileSize","fileSize","isWmsGetCap","isWmtsGetCap","readyState","LOADING","abort","onerror","reason","onprogress","load","opt_cancelP","ol_style_Text_js__WEBPACK_IMPORTED_MODULE_28__","viewConfig","ol_proj_js__WEBPACK_IMPORTED_MODULE_14__","ol_obj_js__WEBPACK_IMPORTED_MODULE_15__","mapViewConfig","gmf_controllers_AbstractAppController_js__WEBPACK_IMPORTED_MODULE_0__","ol_Map_js__WEBPACK_IMPORTED_MODULE_17__","pixelRatio","mapPixelRatio","ol_View_js__WEBPACK_IMPORTED_MODULE_18__","controls","mapControls","ol_control_ScaleLine_js__WEBPACK_IMPORTED_MODULE_19__","getElementById","ol_control_Zoom_js__WEBPACK_IMPORTED_MODULE_20__","zoomInTipLabel","zoomOutTipLabel","ol_control_Rotate_js__WEBPACK_IMPORTED_MODULE_21__","tipLabel","mapInteractions","ol_interaction_js__WEBPACK_IMPORTED_MODULE_22__","pinchRotate","altShiftDragRotate","loadTilesWhileAnimating","loadTilesWhileInteracting","loginActive","toolsActive","modalShareShown","editFeatureActive","routingfeatureActive","googleStreetViewActive","googleStreetViewStyle","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_27__","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_25__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_26__","importDataSourceActive","tooltip","trigger","selector","off","drawFeatureLayer","editFeatureVectorLayer","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_23__","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_24__","ol_Collection_js__WEBPACK_IMPORTED_MODULE_16__","editFeatureActivate","ngeo_misc_ToolActivate_js__WEBPACK_IMPORTED_MODULE_10__","googleStreetViewActivate","scaleSelectorOptions","profileLine","ol_index_js__WEBPACK_IMPORTED_MODULE_13__","gmf_contextualdata_module_js__WEBPACK_IMPORTED_MODULE_1__","gmf_drawing_module_js__WEBPACK_IMPORTED_MODULE_2__","gmf_editing_module_js__WEBPACK_IMPORTED_MODULE_3__","gmf_permalink_shareComponent_js__WEBPACK_IMPORTED_MODULE_4__","gmf_print_component_js__WEBPACK_IMPORTED_MODULE_5__","gmf_profile_module_js__WEBPACK_IMPORTED_MODULE_6__","gmf_raster_component_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_draw_features_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_map_resizemap_js__WEBPACK_IMPORTED_MODULE_9__","ngeo_query_bboxQueryComponent_js__WEBPACK_IMPORTED_MODULE_11__","gmf_import_module_js__WEBPACK_IMPORTED_MODULE_12__","RasterService","gmfRaster","$compile_","gmfRaster_","hidePopover","preparePopover_","setContent_","showPopover","content_","mapProjection","ol_proj","getRasterSuccess","setAttribute","Overlay","autoPan","autoPanAnimation","contentDirective_","gmfContextualdatacontentTemplateUrl","module_exports","VectorEncoder_exports","geojsonFormat","GeoJSON","PrintStyleTypes_","PrintStyleType","MultiLineString","MultiPoint","MultiPolygon","encodeVectorLayer","geojsonFeatures","mapfishStyleObject","version","originalFeature","styleData","getStyleFunction","origGeojsonFeature","writeFeatureObject","isOriginalFeatureAdded","geojsonFeature","styledFeature","geometryType","featureStyleProp","styleId","encodeVectorStyle","geoJson","styleType","styleObject","symbolizers","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeVectorStylePolygon","encodeVectorStyleLine","encodeVectorStylePoint","encodeTextStyle","encodeVectorStyleFill","symbolizer","getColor","rgbArrayToHex","encodeVectorStyleStroke","Icon","getSrc","externalGraphic","graphicOpacity","graphicWidth","graphicHeight","getRotation","math","RegularShape","getPoints","graphicName","sizeShape","rotationShape","opacityShape","strokeShape","fillShape","strokeColorRgba","strokeOpacity","strokeDashstyle","getLineDash","getWidth","getLineCap","strokeLinecap","xAlign","yAlign","olTextAlign","getTextAlign","olTextBaseline","getTextBaseline","labelAlign","labelRotation","fontStyle","getFont","fontWeight","fontFamily","haloColor","haloOpacity","haloRadius","fillColorRgba","labelXOffset","getOffsetX","labelYOffset","getOffsetY","VectorEncoder","Service_exports","vectorEncoder_","printNativeAngle_","ref","opt_httpConfig","httpConfig","createSpec","dpi","layout","customAttributes","specMap","encodeMap_","currentLanguage","viewCenter","viewResolution","viewRotation","mapLayerGroup","layer_a","layer_b","getZIndex","encodeLayer","encodeImageLayer_","encodeTileLayer_","layer_Vector","encodeImageWmsLayer_","getUrl","encodeWmsLayer_","url_url","URL","customParams","searchParams","baseURL","getAbsoluteUrl_","imageFormat","useNativeAngle","href","encodeURI","encodeTileWmtsLayer_","encodeTileWmsLayer_","tileGrid","getTileGrid","tilegrid_WMTS","matrixIds","getMatrixIds","matrices","tileRange","getFullTileRange","identifier","scaleDenominator","getMetersPerUnit","tileSize","ol_size","getTileSize","topLeftCorner","getOrigin","matrixSize","maxX","minX","maxY","minY","getDimensions","dimensionKeys","getWmtsUrl_","dimensionParams","getFormat","getMatrixSet","requestEncoding","getRequestEncoding","getVersion","getUrls","createReport","printSpec","getStatus","getReportUrl","getCapabilities","createPrintServiceFactory","editFeatureSelectorComponent_exports","editFeatureComponent","treeCtrlsWatcherUnregister_","editables","editableTreeCtrls","selectedEditableTreeCtrl","stopEditing","editFeatureSelectorComponent","EditFeature","XSDAttributes","FeatureHashStyleType","FeatureHash_exports","opt_options","TextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","propertiesFunction_","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","StyleTypes_","readFeature","CHAR64_","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","encodedStyles","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","encodeStyleFill_","opt_propertyName","fillColorHex","strokeColorHex","readLineStringGeometry_","flatCoordinates","decodeCoordinates_","setFlatCoordinates","GeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","readPointGeometry_","readMultiPointGeometry_","multiPoint","readPolygonGeometry_","readMultiPolygonGeometry_","endss","polygons","multipolygon","setStyleInFeature_","getStyleProperties_","setStyleProperties_","castValue_","numProperties","boolProperties","parts","keyVal","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","GEOMETRY_WRITERS_","opt_flatCoordinates","encodedCoordinates","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","attributesAndStylesText","attributesText","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","encoded","writeFeaturesText","geometryWriter","transformedGeometry","format_Feature","featureStyleComponent_exports","colorpickerComponent","handleColorSet_","handleFeatureSet_","propName","newColor","getSetAngle","getSetProperty_","getSetName","getSetShowLabel","getSetOpacity","getSetShowMeasure","getSetSize","getSetStroke","featureStyleComponent","drawFeatureComponent_exports","exportfeaturesComponent","longPressTimeout_","selectedFeature","listSelectionInProgress_","nameProperty","drawUid","selectFeatureFromList","getFeaturesArray","clearFeatures","handleMapTouchStart_","handleMapTouchEnd_","setTimeout","clearTimeout","drawFeatureComponent","wmsCapabilityLayertreeComponent_exports","gmfWmscapabilitylayertreenodeTemplateUrl","gmfExternalDataSourcesManager","createAndAddDataSource","getUid","wmsCapabilityLayertreeComponent","wmtsCapabilityLayertreeComponent_exports","gmfWmtscapabilitylayertreTemplateUrl","wmtsCapabilityLayertreeComponent_classCallCheck","wmtsCapabilityLayertreeComponent","importdatasourceComponent_exports","gmfImportdatasourceTemplateUrl","importdatasourceComponent_classCallCheck","fileInput_","hasError","hasErrorPromise_","Mode","ONLINE","modes","LOCAL","wmsCapabilities","wmtsCapabilities","serversEngine_","servers","serverUrls","Bloodhound","datumTokenizer","datum","originalDatumTokenizers","tokenizers","whitespace","datumTokenizers","originalDatumTokenizer","queryTokenizer","identify","local","$urlInput","$connectBtn","typeahead","hint","highlight","minLength","ttAdapter","ev","suggestion","focus","browse","connect","startWorking_","stopWorking_","opt_hasError","nameAndSize","importdatasourceComponent","searchDirective_exports","typeaheadOptionsExpr","typeaheadOptions","typeaheadDatasetsExpr","typeaheadListenersExpr","typeaheadListeners_","typeaheadListeners","adaptListeners_","dataset","cursorchange","autocomplete","empty","datasetsempty","searchDirective","createGeoJSONBloodhound_exports","opt_filter","opt_featureProjection","opt_dataProjection","opt_remoteOptions","bloodhoundOptions","remote","prepare","settings","parsedResponse","featureCollection","remoteOptions","createGeoJSONBloodhound","createLocationSearchBloodhound_exports","sourceProjection","EPSG21781","origins","results","parseBbox","geom_st_box2d","removeHtmlTags","extractName","bhOptions","createLocationSearchBloodhound","d3","bisector","d3_array","axisBottom","d3_axis","axisLeft","scaleLinear","d3_scale","d3_selection","area","d3_shape","d3Elevation","light","margin","top","right","bottom","left","hoverCallback","outCallback","distanceExtractor","linesConfiguration","numberOfLines","bisectDistance","poiExtractor","styleDefs","poiLabelAngle","i18n","xAxisLabel","xAxis","yAxisLabel","yAxis","formatter","xhover","units","toPrecision","yhover","ele","xtick","ytick","lightXAxis","svg","scaleModifier","xFactor","xUnits","xDomain","profile","selection","each","clientWidth","clientHeight","y0","y1","firstLineName","zExtractor","svgEnter","enter","gEnter","clearPois","xHover","domain","yDomain","elevationsValues","transition","yHover","tickFormat","tickValues","ticks","tickSize","clearHighlight","mouseX","x0","invert","showPois","elevation","elevations","elevationsRef","lineName","xtranslate","pois","pe","profileData","poiEnterG","exit","elevationComponent_d3","elevationComponent_exports","optionsAttr","elevationData","poiData","refreshData","origHoverCallback","origOutCallback","elevationComponent","gmfProfileTemplateUrl","getLinesConfigurationFn","getHoverPointStyleFn","getNbPointsFn","getOptionsFn","gmfProfileJsonUrl","pointHoverOverlay_","gmfProfileJsonUrl_","linesConfiguration_","layersNames_","nbPoints_","currentPoint","yUnits","profileHighlight","measureTooltip_","snappedPoint_","profileLabels_","profileOptions","pointerMoveKey_","isErrored","updateEventsListening_","newLine","oldLine","update_","hoverPointStyle","hoverPointStyleFn","getZFactory_","getDist_","hoverCallback_","outCallback_","optionsFn","assertObject","getJsonProfile_","onPointerMove_","getEventCoordinate","closestPoint","getClosestPoint","pixelDist","getDistanceOnALine_","pointOnLine","distOnLine","fakeExtent","forEachSegment","firstPoint","lastPoint","getTooltipHTML_","elevationName","translatedElevationName","DistDecimal","lineConfiguration","getLayersNames","nbPoints","method","paramSerializer","getProfileDataSuccess_","getProfileDataError_","hasDistance","rows","drawLineComponent_exports","getStyleFn","overlay","styleFn","drawLineComponent","ol_events_condition_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_query_MapQuerent_js__WEBPACK_IMPORTED_MODULE_0__","ol_interaction_DragBox_js__WEBPACK_IMPORTED_MODULE_1__","gmf_raster_RasterService_js__WEBPACK_IMPORTED_MODULE_0__","ngeo_misc_debounce_js__WEBPACK_IMPORTED_MODULE_2__","gmfElevationwidgetTemplateUrl","loading","toggleActive_","inViewport_","pointerStop_","getRasterSuccess_","getRasterError_","widgetComponent_","WidgetController_","selectedElevationLayer","ol_math_js__WEBPACK_IMPORTED_MODULE_1__","extentHalfHorizontalDistance_","extentHalfVerticalDistance_","INCHES_PER_METER_","DOTS_PER_INCH_","createPrintMaskPostcompose","opt_rotation","frameState","viewState","viewportWidth","viewportHeight","ol_has_js__WEBPACK_IMPORTED_MODULE_0__","ppi","ipm","extentHalfWidth","extentHalfHeight","beginPath","moveTo","lineTo","closePath","drawPrintZoneWithRotation_","drawPrintZone_","minx","miny","maxx","maxy","diagonal","gamma","atan","omega","x1","x2","y2","x3","y3","x4","y4","getOptimalScale","mapSize","mapResolution","printMapSize","printMapScales","mapWidth","mapHeight","scaleWidth","scaleHeight","optimal","getOptimalResolution","printMapScale","dotsPerMeter","resolutionX","resolutionY","getBottomLeftCorner","getBottomRightCorner","getUpLeftCorner","getUpRightCorner","gmf_authentication_Service_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_map_FeatureOverlayMgr_js__WEBPACK_IMPORTED_MODULE_5__","ngeo_misc_FeatureHelper_js__WEBPACK_IMPORTED_MODULE_6__","ngeo_print_Service_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_print_Utils_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_query_MapQuerent_js__WEBPACK_IMPORTED_MODULE_9__","gmfPrintTemplateUrl","PrintStateEnum","NOT_IN_USE","PRINTING","ERROR_ON_REPORT","CAPABILITIES_NOT_LOADED","ERROR_ON_GETCAPABILITIES","rotateMask","fieldValues","hiddenAttributeNames","attributesOut","ngeoPrintUtils","ngeoCreatePrint","gmfPrintUrl","gmfPrintState","gmfPrintState_","featureOverlayLayer_","ngeoPrintUtils_","ngeoPrint_","ngeoQueryResult_","scaleInput","requestCanceler_","statusTimeoutPromise_","onDragPreviousMousePosition_","rotationTimeoutPromise_","postComposeListenerKey_","pointerDragListenerKey_","mapViewResolutionChangeKey_","curRef_","formats_","layouts_","layout_","paperSize_","layoutInfo","scaleManuallySelected_","rotationInput_","setRotation","postcomposeListener_","capabilities_","currentThemes_","togglePrintPanel_","print","currentThemes","getRotationFn","getScaleFn","goog_asserts_js__WEBPACK_IMPORTED_MODULE_3__","ol_array_js__WEBPACK_IMPORTED_MODULE_10__","getOptimalScale_","getCapabilities_","parseCapabilities_","ol_events_js__WEBPACK_IMPORTED_MODULE_11__","onPointerDrag_","render","layouts","updateFields_","mapInfo","isAttributeInCurrentLayout_","clientInfo","updateCustomFields_","legend","dpis","rawType","simpleAttributes","previousAttributes","default","ol_math_js__WEBPACK_IMPORTED_MODULE_16__","p0x","p0y","p1x","p1y","centerToP0","centerToP1","boost","increment","getDataSource_","field","getLegend_","ol_Map_js__WEBPACK_IMPORTED_MODULE_15__","setView","ol_layers","new_ol_layers","print_native_angle","server_name","layer_names","printLayers","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_12__","setLayerGroup","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_14__","spec","handleCreateReportSuccess_","handleCreateReportError_","resetPrintStates_","opt_printState","datasourceObj","columns","datasourceArr","table","getStatus_","handleGetStatusSuccess_","mfResp","classes","icons","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_13__","getMetadataLegendImage_","legendImage","setLayout","layoutName","getSetScale","contrainRes","constrainResolution","setResolution","setDpi","isState","stateEnumKey","ngeo_misc_php_date_formatter_js__WEBPACK_IMPORTED_MODULE_0__","fromJson","ngeo_misc_datetimepickerComponent_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_misc_EventHelper_js__WEBPACK_IMPORTED_MODULE_2__","ngeoAttributesTemplateUrl","disabled","form","updating_","handleInputChange","ngeo_misc_FeatureHelper_js__WEBPACK_IMPORTED_MODULE_0__","$menu","aria-labelledby","$item","handleMenuItemClick_","handleElementClick_","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_2__","parentElement","sortable","resetUpDragDrop","handleClassName","callbackFn","callbackCtx","sortableElement","sortableOptions","axis","ui-sortable-helper","ui","oldIndex","newIndex","Function","ngeoPopoverCtrl","anchorElm","bodyElm","shown","popover","placement","dismissPopover","unbind","anchorComponent","contentComponent","hide","PopoverController_","onMouseDown","clickEvent","gmf_layertree_TreeManager_js__WEBPACK_IMPORTED_MODULE_1__","gmf_search_FulltextSearch_js__WEBPACK_IMPORTED_MODULE_2__","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_misc_AutoProjection_js__WEBPACK_IMPORTED_MODULE_6__","ngeo_misc_colorpickerComponent_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_search_module_js__WEBPACK_IMPORTED_MODULE_9__","ngeo_message_popoverComponent_js__WEBPACK_IMPORTED_MODULE_8__","gmfSearchTemplateUrl","gmfSearchTemplateUrl_","inputValue","placeholder","datasources","featuresStyles","clearButton","colorChooser","coordinatesProjections","additionalListeners","onInitCallback","SearchController_","ngeoAutoProjection","ngeoSearchCreateGeoJSONBloodhound","gmfSearchFulltextSearch","fullTextSearch_","ngeoSearchCreateGeoJSONBloodhound_","styles_","datasets","displayColorPicker","listeners","coordProj","initStyles_","getSearchStyle_","ol_obj_js__WEBPACK_IMPORTED_MODULE_13__","initDatasets_","setStyleColor","mergeListeners_","select_","close_","datasetsempty_","searchQuery","resultIndex","mapZoom","fulltextsearch_","filterLayername_","filterAction_","createDataset_","datasetTitle","groupsKey","typeaheadDatasetOptions","createSearchCoordinates_","display","templates","componentScope","compile","typeaheadDataset","createAndInitBloodhound_","act","opt_layerName","featureLayerName","mapProjectionCode","getBloodhoudRemoteOptions_","bloodhound","ol_proj_js__WEBPACK_IMPORTED_MODULE_15__","initialize","rateLimitWait","xhrFields","ol_uri_js__WEBPACK_IMPORTED_MODULE_21__","interface","suggestions","tt_source","COORDINATES_LAYER_NAME","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_20__","ol_style_RegularShape_js__WEBPACK_IMPORTED_MODULE_18__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_19__","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_17__","ol_style_Circle_js__WEBPACK_IMPORTED_MODULE_16__","customStyles","ol_color_js__WEBPACK_IMPORTED_MODULE_11__","setImage","changed","setTTDropdownVisibility_","ttDropdown","onClearButton","ttmenu","inputs","blur","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_12__","layer_name","leaveSearch_","selectFromGMF_","featureGeometry","_loop2","actionName","actionData","datasourcesActionsHaveAddLayer","groupAction","silent","fitArray","menu","opt_zoom","ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_14__","fitOptions","selected","selectedIndex","arr1","arr2","dereg1","dereg2","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_0__","ngeoLayertreeTemplateUrl","ol_Overlay_js__WEBPACK_IMPORTED_MODULE_1__","originalEl","closeEl_","contentEl_","one","gmf_datasource_DataSourceBeingFiltered_js__WEBPACK_IMPORTED_MODULE_1__","gmf_datasource_ExternalDataSourcesManager_js__WEBPACK_IMPORTED_MODULE_2__","gmf_permalink_Permalink_js__WEBPACK_IMPORTED_MODULE_3__","gmf_layertree_datasourceGroupTreeComponent_js__WEBPACK_IMPORTED_MODULE_4__","gmf_layertree_SyncLayertreeMap_js__WEBPACK_IMPORTED_MODULE_5__","gmf_layertree_TreeManager_js__WEBPACK_IMPORTED_MODULE_6__","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_layertree_component_js__WEBPACK_IMPORTED_MODULE_10__","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_11__","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_12__","ngeo_misc_WMSTime_js__WEBPACK_IMPORTED_MODULE_14__","gmfLayertreeTemplate","openLinksInNewWindow","gmfSyncLayertreeMap","goog_asserts_js__WEBPACK_IMPORTED_MODULE_8__","gmfSyncLayertreeMap_","groupNodeStates_","ngeo_misc_syncArrays_js__WEBPACK_IMPORTED_MODULE_13__","updateDimensions_","ol_layer_Layer_js__WEBPACK_IMPORTED_MODULE_16__","updateLayerDimensions_","ol_obj_js__WEBPACK_IMPORTED_MODULE_17__","ol_source_WMTS_js__WEBPACK_IMPORTED_MODULE_20__","ol_source_TileWMS_js__WEBPACK_IMPORTED_MODULE_19__","ol_source_ImageWMS_js__WEBPACK_IMPORTED_MODULE_18__","once","toggleActive","getNodeState","updateWMSTimeLayerState","layertreeCtrl","ngeo_datasource_OGC_js__WEBPACK_IMPORTED_MODULE_9__","getLegendIconURL","iconUrl","legendRule","gmfOgcServer","getLegendsObject","legendsObject","gmfLayerDefaultName","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_15__","wmtsLegendURL","layersNames","getScale_","getNumberOfLegendsObject","displayMetadata","metadataURL","afterReorder","groupNodes","currentTreeCtrls","removeNode","removeAllNodes","nodesCount","getResolutionStyle","zoomToResolution","toggleNodeLegend","legendNodeId","toggleFiltrableDataSource","isNodeLegendVisible","supportsCustomization","supportsLegend","supportsOpacityChange","appmodule_exports","$compileProvider","debugInfoEnabled","appmodule","coordinate_exports","toXY","nesting","objectediting_coordinate","geom_exports","isEmpty","SimpleGeometry","objectediting_geom","Query_exports","getQueryableLayerNodesDefered_","getQueryableLayersInfo","allQueryableLayersInfo","getQueryableLayersInfoFromThemes","queryableLayersInfo","layerNode","k","kk","getFeatureInfo","layerInfo","infoFormat","layersParam","WMSGetFeatureInfo","QUERY_LAYERS","Query","getWMSFeatureComponent_exports","gmfObjectEditingQuery","gmfObjectEditingQuery_","getWMSFeatureComponent","DrawRegularPolygonFromClick_exports","angle_","radius_","sides_","sides","enable_","disable_","fromCircle","makeRegular","DrawRegularPolygonFromClick","createregularpolygonfromclickComponent_exports","interactionListenerKey_","createregularpolygonfromclickComponent","toolsComponent_exports","createfeatureComponent","copyFromActive","deleteFromActive","process","queryableLayerInfo","requiresLayer","geomTypePolygon","toolActiveNames_","registerTool_","ProcessType","ADD","eraseActive","DELETE","drawTriangleActive","triangleAngle","oeToolsOptions","triangleRadius","regularPolygonRadius","toolActiveName","opt_requiresLayer","handleToolActiveChange_","NAMESPACE_","toolActivate","toolsComponent","jsts","io","OL3Parser","gmfObjecteditingTemplateUrl","layerNodeId","selectedQueryableLayerInfo","queryableLayerListShown","featureHasGeom","skipGeometryChange_","jstsOL3Parser_","geometryChanges_","defaultStyles_","defaultStylesWoVertice_","dirtyStyles_","dirtyStylesWoVertice_","modifyToolActivate_","toolsToolActivate_","handleGetQueryableLayersInfo_","UPDATE","INSERT","defaultColor","dirtyColor","initializeStyles_","setFeatureStyle_","resetGeometryChanges_","handleDeleteFeature_","undo","cloneGeometry_","isStateInsert","refreshWMSLayer_","handleModifyInteractionModifyEnd_","handleWindowBeforeUnload_","handleSketchFeaturesAdd_","undoAllChanges_","jstsBuffered","write","opt_incVertice","incVertice","rgbaColor","style_Circle","modifyActive","returnValue","sketchGeom","jstsGeom","jstsSketchGeom","jstsProcessedGeom","union","intersects","difference","processedGeom","layersInfo","getFeatureDefered_","GEOM_TYPE","ID","PROPERTY","THEME","getGeomType","getLayerNodeId","Location","objectediting_module","epsg2056def","somerc","lib","proj4","oeEditActive","AbstractDesktopController","resolutions","oeEditToolActivate","gmfObjectEditingManager","oeGeomType","oeLayerNodeId","searchCoordinatesProjections","scaleSelectorValues","elevationLayers","profileLinesconfiguration","aster","srtm","mousePositionProjections","raven_default","addPlugin","angular_default","install"],"mappings":"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","file":"oeedit.5c1275.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([353,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","const exports = {};\n\nexports.assert = function(condition, opt_message, var_args) {\n  return condition;\n};\n\nexports.assertNumber = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertString = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertFunction = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertObject = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertArray = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertBoolean = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertElement = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertInstanceof = function(value, type, opt_message, var_args) {\n  return value;\n};\n\nexports.assertObjectPrototypeIsIntact = function() {};\n\nexport default exports;\n","/**\n * @module ngeo.GeometryType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  CIRCLE: 'Circle',\n  /**\n   * @type {string}\n   * @export\n   */\n  LINE_STRING: 'LineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_LINE_STRING: 'MultiLineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POINT: 'MultiPoint',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POLYGON: 'MultiPolygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  POINT: 'Point',\n  /**\n   * @type {string}\n   * @export\n   */\n  POLYGON: 'Polygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  RECTANGLE: 'Rectangle',\n  /**\n   * @type {string}\n   * @export\n   */\n  TEXT: 'Text'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function() {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayerWMTS.matrixSet,\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Several OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Rule\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @implements {ngeox.rule.Rule}\n */\nconst exports = class {\n\n  /**\n   * The abstract class for all filter rules.\n   *\n   * Rules are used to define filters that can be applied on data sources.\n   * A rule is usually a combination of 3 things:\n   *\n   * - a property name, for example 'city_name'\n   * - an operator, for example 'is equal to'\n   * - and an expression, for example 'Chicoutimi'.\n   *\n   * A rule is useful to hold those properties and change them on the fly.\n   * For example, changing an operator from 'is equal to' to 'like'.\n   *\n   * Also, a rule is especially useful for its `value` getter, which returns\n   * the combination of properties described above or `null` if there are some\n   * missing.  The `value` getter can be watched and used when the value is\n   * not null.\n   *\n   * When the operator is `between`, the `lowerBoundary` and `upperBoundary`\n   * properties are used instead of `expression`.\n   *\n   * @struct\n   * @param {!ngeox.rule.RuleOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * Whether the rule is active or not. Used by the `ngeo-rule` component.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.active_ = options.active === true;\n\n    /**\n     * The expression of the rule. The expression and boundaries are mutually\n     * exclusives.\n     *\n     * Note: exported (instead of private) due to the problem with the\n     * compiler. See the getter/setter methods below...  As a setter, the\n     * `expression` property would support being bond to an `ng-model`. Without\n     * it, it can't unless we expose the property directly.\n     *\n     * @type {?number|string}\n     * @export\n     */\n    this.expression = options.expression !== undefined ?\n      options.expression : null;\n\n    /**\n     * The lower boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.lowerBoundary_ = options. lowerBoundary !== undefined ?\n      options.lowerBoundary : null;\n\n    /**\n     * The rule operator.\n     * @type {?string}\n     * @private\n     */\n    this.operator_ = options.operator || null;\n\n    /**\n     * The upper boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.upperBoundary_ = options. upperBoundary !== undefined ?\n      options.upperBoundary : null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the rule is a custom one or not.\n     * @type {boolean}\n     * @private\n     */\n    this.isCustom_ = options.isCustom !== false;\n\n    /**\n     * The human-readable name of the rule.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n\n    /**\n     * A list of rule operators.\n     * @type {?Array.<string>}\n     * @private\n     */\n    this.operators_ = options.operators || null;\n\n    /**\n     * The property name (a.k.a. the attribute name).\n     * @type {string}\n     * @private\n     */\n    this.propertyName_ = options.propertyName;\n\n    /**\n     * The type of rule.\n     * @type {string}\n     * @private\n     */\n    this.type_ = googAsserts.assert(options.type);\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Array.<!ol.EventsKey>}\n     * @protected\n     */\n    this.listenerKeys = [];\n\n  }\n\n  // === Dynamic property getters/setters ===\n\n  /**\n   * @return {boolean} Active\n   * @export\n   */\n  get active() {\n    return this.active_;\n  }\n\n  /**\n   * @param {boolean} active Active\n   * @export\n   */\n  set active(active) {\n    this.active_ = active;\n  }\n\n  /**\n   * The `expression` property does not have conventionnal getter/setters\n   * method because of a limitation of the compiler. It doesn't support\n   * yet having such methods being extended in child classes.\n   *\n   * See: https://github.com/google/closure-compiler/issues/1089\n   *\n   * @return {?number|string} Expression\n   * @export\n   */\n  getExpression() {\n    return this.expression;\n  }\n\n  /**\n   * @param {?number|string} expression Expression\n   * @export\n   */\n  setExpression(expression) {\n    this.expression = expression;\n  }\n\n  /**\n   * @return {?number} Lower boundary\n   * @export\n   */\n  get lowerBoundary() {\n    return this.lowerBoundary_;\n  }\n\n  /**\n   * @param {?number} lowerBoundary Lower boundary\n   * @export\n   */\n  set lowerBoundary(lowerBoundary) {\n    this.lowerBoundary_ = lowerBoundary;\n  }\n\n  /**\n   * @return {?string} Operator\n   * @export\n   */\n  get operator() {\n    return this.operator_;\n  }\n\n  /**\n   * @param {?string} operator Operator\n   * @export\n   */\n  set operator(operator) {\n    this.operator_ = operator;\n  }\n\n  /**\n   * @return {?number} Upper boundary\n   * @export\n   */\n  get upperBoundary() {\n    return this.upperBoundary_;\n  }\n\n  /**\n   * @param {?number} upperBoundary Upper boundary\n   * @export\n   */\n  set upperBoundary(upperBoundary) {\n    this.upperBoundary_ = upperBoundary;\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {boolean} Is custom.\n   * @export\n   */\n  get isCustom() {\n    return this.isCustom_;\n  }\n\n  /**\n   * @return {string} name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n  /**\n   * @return {?Array.<string>} Operators\n   * @export\n   */\n  get operators() {\n    return this.operators_;\n  }\n\n  /**\n   * @return {string} Property name\n   * @export\n   */\n  get propertyName() {\n    return this.propertyName_;\n  }\n\n  /**\n   * @return {string} Type\n   * @export\n   */\n  get type() {\n    return this.type_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {?ngeox.rule.RuleSimpleValue|ngeox.rule.RuleRangeValue} Value.\n   * @export\n   */\n  get value() {\n    let value = null;\n\n    const expression = this.getExpression();\n    const lowerBoundary = this.lowerBoundary;\n    const operator = this.operator;\n    const propertyName = this.propertyName;\n    const upperBoundary = this.upperBoundary;\n\n    if (operator) {\n      if (operator === exports.OperatorType.BETWEEN ||\n          operator === exports.TemporalOperatorType.DURING) {\n        if (lowerBoundary !== null && upperBoundary !== null) {\n          value = {\n            operator,\n            lowerBoundary,\n            propertyName,\n            upperBoundary\n          };\n        }\n      } else {\n        if (expression !== null) {\n          value = {\n            expression,\n            operator,\n            propertyName\n          };\n        }\n      }\n    }\n\n    return value;\n  }\n\n  // === Other utility methods ===\n\n  /**\n   * Reset the following properties to `null`: expression, lowerBoundary,\n   * upperBoundary.\n   * @export\n   */\n  reset() {\n    if (this.getExpression() !== null) {\n      this.setExpression(null);\n    }\n    if (this.lowerBoundary !== null) {\n      this.lowerBoundary = null;\n    }\n    if (this.upperBoundary !== null) {\n      this.upperBoundary = null;\n    }\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.listenerKeys.forEach(olEvents.unlistenByKey);\n    this.listenerKeys.length = 0;\n  }\n\n};\n\n\n/**\n * @enum {string}\n */\nexports.OperatorType = {\n  BETWEEN: '..',\n  EQUAL_TO: '=',\n  GREATER_THAN: '>',\n  GREATER_THAN_OR_EQUAL_TO: '>=',\n  LESSER_THAN: '<',\n  LESSER_THAN_OR_EQUAL_TO: '<=',\n  LIKE: '~',\n  NOT_EQUAL_TO: '!='\n};\n\n\n/**\n * @enum {string}\n */\nexports.SpatialOperatorType = {\n  CONTAINS: 'contains',\n  INTERSECTS: 'intersects',\n  WITHIN: 'within'\n};\n\n\n/**\n * @enum {string}\n */\nexports.TemporalOperatorType = {\n  BEGINS: 'time_start',\n  DURING: 'time_during',\n  ENDS: 'time_end',\n  EQUALS: 'time_equal'\n};\n\n\nexport default exports;\n","/**\n * @module gmf\n */\nconst exports = {};\n\n/**\n * The default template base URL for modules, used as-is by the template cache.\n * @type {string}\n */\n\n/**\n * @const\n * @export\n */\nexports.DATALAYERGROUP_NAME = 'data';\n\n/**\n * @const\n * @export\n */\nexports.EXTERNALLAYERGROUP_NAME = 'external';\n\n/**\n * @const\n * @export\n */\nexports.COORDINATES_LAYER_NAME = 'gmfCoordinatesLayerName';\n\n\n/**\n * @enum {string}\n */\nexports.PermalinkParam = {\n  BG_LAYER: 'baselayer_ref',\n  EXTERNAL_DATASOURCES_NAMES: 'eds_n',\n  EXTERNAL_DATASOURCES_URLS: 'eds_u',\n  FEATURES: 'rl_features',\n  MAP_CROSSHAIR: 'map_crosshair',\n  MAP_TOOLTIP: 'map_tooltip',\n  MAP_X: 'map_x',\n  MAP_Y: 'map_y',\n  MAP_Z: 'map_zoom',\n  TREE_GROUPS: 'tree_groups',\n  WFS_LAYER: 'wfs_layer',\n  WFS_NGROUPS: 'wfs_ngroups',\n  WFS_SHOW_FEATURES: 'wfs_showFeatures'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.ToolActivate\n */\n/**\n * A simple object that can be managed by `ngeo.misc.ToolActivateMgr`.\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {Object} toolContext An object which acts as the context for the tool.\n * @param {string} activePropertyName The name of a boolean property on\n *      `toolContext` which represents the active state of the tool.\n * @constructor\n * @struct\n * @ngname ngeoToolActivate\n * @export\n */\nconst exports = function(toolContext, activePropertyName) {\n\n  /**\n   * A getter function to get the active state of the tool.\n   * @return {boolean} Is active.\n   * @export\n   */\n  this.getActive = function() {\n    return toolContext[activePropertyName];\n  };\n\n  /**\n   * A setter function to set the active state of the tool.\n   * @param {boolean} newVal New active state.\n   * @export\n   */\n  this.setActive = function(newVal) {\n    toolContext[activePropertyName] = newVal;\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.FeatureHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olArray from 'ol/array.js';\nimport * as olColor from 'ol/color.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Provides methods for features, such as:\n *  - style setting / getting\n *  - measurement\n *  - export\n *\n * @constructor\n * @struct\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.$filter} $filter Angular filter.\n * @ngdoc service\n * @ngname ngeoFeatureHelper\n * @ngInject\n */\nconst exports = function($injector, $filter) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.decimals_ = undefined;\n  if ($injector.has('ngeoMeasureDecimals')) {\n    this.decimals_ = $injector.get('ngeoMeasureDecimals');\n  }\n\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.precision_ = undefined;\n  if ($injector.has('ngeoMeasurePrecision')) {\n    this.precision_ = $injector.get('ngeoMeasurePrecision');\n  }\n\n  /**\n   * @type {!ngeox.number}\n   */\n  this.numberFormat_ = /** @type {ngeox.number} */ ($filter('number'));\n\n  /**\n   * @type {!ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ ($filter('ngeoUnitPrefix'));\n\n  /**\n   * @type {!ngeox.numberCoordinates}\n   */\n  this.ngeoNumberCoordinates_ = /** @type {ngeox.numberCoordinates} */ ($filter('ngeoNumberCoordinates'));\n\n  /**\n   * Filter function to display point coordinates or null to don't use any filter.\n   * @type {function(*):string|null}\n   * @private\n   */\n  this.pointFilterFn_ = null;\n\n  /**\n   * Arguments to apply to the point filter function.\n   * @type {Array.<*>}\n   * @private\n   */\n  this.pointFilterArgs_ = [];\n\n  if ($injector.has('ngeoPointfilter')) {\n    const filterElements = $injector.get('ngeoPointfilter').split(':');\n    const filterName = filterElements.shift();\n    const filter = this.$filter_(filterName);\n    googAsserts.assertFunction(filter);\n    this.pointFilterFn_ = filter;\n    this.pointFilterArgs_ = filterElements;\n  } else {\n    this.pointFilterFn_ = null;\n  }\n\n  /**\n   * @type {!ol.proj.Projection}\n   * @private\n   */\n  this.projection_;\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n\n};\n\n\n/**\n * @param {!ol.proj.Projection} projection Projection.\n * @export\n */\nexports.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n// === STYLE METHODS ===\n\n\n/**\n * Set the style of a feature using its inner properties and depending on\n * its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @param {boolean=} opt_select Whether the feature should be rendered as\n *     selected, which includes additional vertex and halo styles.\n * @export\n */\nexports.prototype.setStyle = function(feature, opt_select) {\n  const styles = this.getStyle(feature);\n  if (opt_select) {\n    if (this.supportsVertex_(feature)) {\n      styles.push(this.getVertexStyle());\n    }\n    styles.unshift(this.getHaloStyle_(feature));\n  }\n  feature.setStyle(styles);\n};\n\n\n/**\n * Create and return a style object from a given feature using its inner\n * properties and depending on its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @return {!Array.<!ol.style.Style>} The style object.\n * @export\n */\nexports.prototype.getStyle = function(feature) {\n  const type = this.getType(feature);\n  let style;\n\n  switch (type) {\n    case ngeoGeometryType.LINE_STRING:\n      style = this.getLineStringStyle_(feature);\n      break;\n    case ngeoGeometryType.POINT:\n      style = this.getPointStyle_(feature);\n      break;\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      style = this.getPolygonStyle_(feature);\n      break;\n    case ngeoGeometryType.TEXT:\n      style = this.getTextStyle_(feature);\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  let styles;\n  if (style.constructor === Array) {\n    styles = /** @type {!Array.<!ol.style.Style>}*/ (style);\n  } else {\n    styles = [style];\n  }\n\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with linestring geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getLineStringStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n\n  const styles = [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPointStyle_ = function(feature) {\n  const size = this.getSizeProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const styles = [new olStyleStyle({\n    image: new olStyleCircle({\n      radius: size,\n      fill: new olStyleFill({\n        color: color\n      })\n    })\n  })];\n  // Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    const font_size = 10;\n    // https://reeddesign.co.uk/test/points-pixels.html\n    const point_to_px = 1.3;\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue,\n        size: font_size,\n        offsetY: -(size + (font_size / 2) * textLabelValues.length * point_to_px + 4)\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * Get an optional number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number|undefined}, The attribute value\n */\nexports.prototype.optNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (value !== undefined) {\n    if (typeof value == 'string') {\n      return +value;\n    } else {\n      return googAsserts.assertNumber(value);\n    }\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Get a number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number}, The attribute value\n */\nexports.prototype.getNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (typeof value == 'string') {\n    return +value;\n  } else {\n    return googAsserts.assertNumber(value);\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with polygon geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPolygonStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const opacity = this.getOpacityProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n\n  // fill color with opacity\n  const fillColor = color.slice();\n  fillColor[3] = opacity;\n\n  const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n\n  const styles = [new olStyleStyle({\n    fill: new olStyleFill({\n      color: fillColor\n    }),\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  if (showMeasure || showLabel) {\n    if (showMeasure && azimut !== undefined) {\n      // Radius style:\n      const line = this.getRadiusLine(feature, azimut);\n      const length = ngeoInteractionMeasure.getFormattedLength(\n        line, this.projection_, this.precision_, this.unitPrefixFormat_);\n\n      styles.push(new olStyleStyle({\n        geometry: line,\n        fill: new olStyleFill({\n          color: fillColor\n        }),\n        stroke: new olStyleStroke({\n          color: color,\n          width: strokeWidth\n        }),\n        text: this.createTextStyle_({\n          text: length,\n          angle: ((azimut % 180) + 180) % 180 - 90\n        })\n      }));\n\n      // Azimut style\n      styles.push(new olStyleStyle({\n        geometry: new olGeomPoint(line.getLastCoordinate()),\n        text: this.createTextStyle_({\n          text: `${this.numberFormat_(azimut, this.decimals_)}°`,\n          size: 10,\n          offsetX: Math.cos((azimut - 90) * Math.PI / 180) * 20,\n          offsetY: Math.sin((azimut - 90) * Math.PI / 180) * 20\n        })\n      }));\n\n      //Label Style\n      if (showLabel) {\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: this.getNameProperty(feature),\n            offsetY: -8,\n            exceedLength: true\n          })\n        }));\n      }\n    } else {\n      //Label Style\n      const textLabelValues = [];\n      if (showMeasure) {\n        textLabelValues.push(this.getMeasure(feature));\n      }\n      if (showLabel) {\n        textLabelValues.push(this.getNameProperty(feature));\n      }\n      if (showLabel ||  showMeasure) {\n        // display both label using  \\n\n        const textLabelValue = textLabelValues.join('\\n');\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: textLabelValue,\n            exceedLength: true\n          })\n        }));\n      }\n    }\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry, rendered as text.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getTextStyle_ = function(feature) {\n\n  return new olStyleStyle({\n    text: this.createTextStyle_({\n      text: this.getNameProperty(feature),\n      size: this.getSizeProperty(feature),\n      angle: this.getAngleProperty(feature),\n      color: this.getRGBAColorProperty(feature),\n      width: this.getStrokeProperty(feature)\n    })\n  });\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature to create the editing styles with.\n * @return {!Array.<!ol.style.Style>} List of style.\n * @export\n */\nexports.prototype.createEditingStyles = function(feature) {\n  // (1) Style definition depends on geometry type\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  const styles = [];\n\n  const geom = feature.getGeometry();\n  console.assert(geom);\n  const type = geom.getType();\n\n  if (type === 'Point') {\n    styles.push(\n      new olStyleStyle({\n        image: new olStyleCircle({\n          radius: width * 2,\n          fill: new olStyleFill({\n            color: blue\n          }),\n          stroke: new olStyleStroke({\n            color: white,\n            width: width / 2\n          })\n        }),\n        zIndex: Infinity\n      })\n    );\n  } else {\n    if (type === 'LineString') {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: white,\n            width: width + 2\n          })\n        })\n      );\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width\n          })\n        })\n      );\n    } else {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width / 2\n          }),\n          fill: new olStyleFill({\n            color: [255, 255, 255, 0.5]\n          })\n        })\n      );\n    }\n\n    // (2) Anything else than 'Point' requires the vertex style as well\n    styles.push(this.getVertexStyle(true));\n  }\n\n  return styles;\n};\n\n\n/**\n * Create and return a style object to be used for vertex.\n * @param {boolean=} opt_incGeomFunc Whether to include the geometry function\n *     or not. One wants to use the geometry function when you want to draw\n *     the vertex of features that don't have point geometries. One doesn't\n *     want to include the geometry function if you just want to have the\n *     style object itself to be used to draw features that have point\n *     geometries. Defaults to `true`.\n * @return {!ol.style.Style} Style.\n * @export\n */\nexports.prototype.getVertexStyle = function(opt_incGeomFunc) {\n  const incGeomFunc = opt_incGeomFunc !== undefined ? opt_incGeomFunc : true;\n\n  const options = {\n    image: new olStyleRegularShape({\n      radius: 6,\n      points: 4,\n      angle: Math.PI / 4,\n      fill: new olStyleFill({\n        color: [255, 255, 255, 0.5]\n      }),\n      stroke: new olStyleStroke({\n        color: [0, 0, 0, 1]\n      })\n    })\n  };\n\n  if (incGeomFunc) {\n    options.geometry = function(feature) {\n      const geom = feature.getGeometry();\n\n      if (geom.getType() == 'Point') {\n        return;\n      }\n\n      let innerMultiCoordinates;\n      let multiCoordinates = [];\n      let coordinates = [];\n      let i, ii;\n      if (geom instanceof olGeomLineString) {\n        coordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomMultiLineString) {\n        multiCoordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomPolygon) {\n        coordinates = geom.getCoordinates()[0];\n      } else if (geom instanceof olGeomMultiPolygon) {\n        innerMultiCoordinates = geom.getCoordinates();\n      }\n\n      if (innerMultiCoordinates) {\n        for (i = 0, ii = innerMultiCoordinates.length; i < ii; i++) {\n          multiCoordinates = multiCoordinates.concat(innerMultiCoordinates[i]);\n        }\n      }\n      for (i = 0, ii = multiCoordinates.length; i < ii; i++) {\n        coordinates = coordinates.concat(multiCoordinates[i]);\n      }\n\n      if (coordinates.length) {\n        return new olGeomMultiPoint(coordinates);\n      } else {\n        return geom;\n      }\n    };\n  }\n\n  return new olStyleStyle(options);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Whether the feature supports vertex or not.\n * @private\n */\nexports.prototype.supportsVertex_ = function(feature) {\n  const supported = [\n    ngeoGeometryType.LINE_STRING,\n    ngeoGeometryType.POLYGON,\n    ngeoGeometryType.RECTANGLE\n  ];\n  const type = this.getType(feature);\n  return olArray.includes(supported, type);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getHaloStyle_ = function(feature) {\n  const type = this.getType(feature);\n  let style;\n  const haloSize = 3;\n\n  switch (type) {\n    case ngeoGeometryType.POINT:\n      const size = this.getSizeProperty(feature);\n      style = new olStyleStyle({\n        image: new olStyleCircle({\n          radius: size + haloSize,\n          fill: new olStyleFill({\n            color: [255, 255, 255, 1]\n          })\n        })\n      });\n      break;\n    case ngeoGeometryType.LINE_STRING:\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      const strokeWidth = this.getStrokeProperty(feature);\n      style = new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: strokeWidth + haloSize * 2\n        })\n      });\n      break;\n    case ngeoGeometryType.TEXT:\n      style = new olStyleStyle({\n        text: this.createTextStyle_({\n          text: this.getNameProperty(feature),\n          size: this.getSizeProperty(feature),\n          angle: this.getAngleProperty(feature),\n          width: haloSize * 3\n        })\n      });\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  return style;\n};\n\n\n// === PROPERTY GETTERS ===\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * Also delete the 'ngeo_feature_type_' from the ngeo query system.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Filtered properties of the current feature.\n * @export\n */\nexports.getFilteredFeatureValues = function(feature) {\n  const properties = feature.getProperties();\n  delete properties['boundedBy'];\n  delete properties[feature.getGeometryName()];\n  delete properties['ngeo_feature_type_'];\n  return properties;\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {number} Angle.\n * @export\n */\nexports.prototype.getAngleProperty = function(feature) {\n  const angle = +(/** @type {string} */ (\n    feature.get(ngeoFormatFeatureProperties.ANGLE)));\n  googAsserts.assertNumber(angle);\n  return angle;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Color.\n * @export\n */\nexports.prototype.getColorProperty = function(feature) {\n\n  const color = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.COLOR));\n\n  googAsserts.assertString(color);\n\n  return color;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {ol.Color} Color.\n * @export\n */\nexports.prototype.getRGBAColorProperty = function(feature) {\n  return olColor.fromString(this.getColorProperty(feature));\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Name.\n * @export\n */\nexports.prototype.getNameProperty = function(feature) {\n  const name = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.NAME));\n  googAsserts.assertString(name);\n  return name;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Opacity.\n * @export\n */\nexports.prototype.getOpacityProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.OPACITY);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show measure.\n * @export\n */\nexports.prototype.getShowMeasureProperty = function(feature) {\n  let showMeasure = feature.get(ngeoFormatFeatureProperties.SHOW_MEASURE);\n  if (showMeasure === undefined) {\n    showMeasure = false;\n  } else if (typeof showMeasure === 'string') {\n    showMeasure = (showMeasure === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showMeasure);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show feature label.\n * @export\n */\nexports.prototype.getShowLabelProperty = function(feature) {\n  let showLabel = feature.get(ngeoFormatFeatureProperties.SHOW_LABEL);\n  if (showLabel === undefined) {\n    showLabel = false;\n  } else if (typeof showLabel === 'string') {\n    showLabel = (showLabel === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showLabel);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Size.\n * @export\n */\nexports.prototype.getSizeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.SIZE);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Stroke.\n * @export\n */\nexports.prototype.getStrokeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.STROKE);\n};\n\n\n// === EXPORT ===\n\n\n/**\n * Export features in the given format. The projection of the exported features\n * is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {string} formatType Format type to export the features.\n * @export\n */\nexports.prototype.export = function(features, formatType) {\n  switch (formatType) {\n    case exports.FormatType.GPX:\n      this.exportGPX(features);\n      break;\n    case exports.FormatType.KML:\n      this.exportKML(features);\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * Export features in GPX and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportGPX = function(features) {\n  const format = new olFormatGPX();\n  const mimeType = 'application/gpx+xml';\n  const fileName = 'export.gpx';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features in KML and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportKML = function(features) {\n  const format = new olFormatKML();\n  const mimeType = 'application/vnd.google-earth.kml+xml';\n  const fileName = 'export.kml';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features using a given format to a specific filename and download\n * the result to the browser. The projection of the exported features is:\n * `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {!ol.format.Feature} format Format\n * @param {string} fileName Name of the file.\n * @param {string=} opt_mimeType Mime type. Defaults to 'text/plain'.\n * @private\n */\nexports.prototype.export_ = function(features, format, fileName, opt_mimeType) {\n  const mimeType = opt_mimeType !== undefined ? opt_mimeType : 'text/plain';\n\n  // clone the features to apply the original style to the clone\n  // (the original may have select style active)\n  const clones = [];\n  let clone;\n  features.forEach((feature) => {\n    clone = new olFeature(feature.getProperties());\n    this.setStyle(clone, false);\n    clones.push(clone);\n  });\n\n  const writeOptions = this.projection_ ? {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.projection_\n  } : {};\n\n  const data = format.writeFeatures(clones, writeOptions);\n  this.download_(\n    data, fileName, `${mimeType};charset=utf-8`);\n};\n\n\n// === OTHER UTILITY METHODS ===\n\n\n/**\n * @param {!ngeox.style.TextOptions} options Options.\n * @return {!ol.style.Text} Style.\n * @private\n */\nexports.prototype.createTextStyle_ = function(options) {\n  if (options.angle) {\n    const angle = options.angle !== undefined ? options.angle : 0;\n    const rotation = angle * Math.PI / 180;\n    options.rotation = rotation;\n    delete options.angle;\n  }\n\n  options.font = ['normal', `${options.size || 10}pt`, 'Arial'].join(' ');\n\n  if (options.color) {\n    options.fill = new olStyleFill({color: options.color || [0, 0, 0, 1]});\n    delete options.color;\n  }\n\n  options.stroke = new olStyleStroke({\n    color: [255, 255, 255, 1],\n    width: options.width || 3\n  });\n  delete options.width;\n\n  return new olStyleText(options);\n};\n\n\n/**\n * Get the measure of the given feature as a string. For points, you can format\n * the result by setting a filter to apply on the coordinate with the function\n * {@link ngeo.misc.FeatureHelper.prototype.setPointFilterFn}.\n * @param {!ol.Feature} feature Feature.\n * @return {string} Measure.\n * @export\n */\nexports.prototype.getMeasure = function(feature) {\n\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be truthy');\n\n  let measure = '';\n\n  if (geometry instanceof olGeomPolygon) {\n    if (this.getType(feature) === ngeoGeometryType.CIRCLE) {\n      const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n      googAsserts.assertNumber(azimut);\n      const line = this.getRadiusLine(feature, azimut);\n\n      measure = ngeoInteractionMeasureAzimut.getFormattedAzimutRadius(\n        line, this.projection_, this.decimals_, this.precision_, this.unitPrefixFormat_, this.numberFormat_);\n    } else {\n      measure = ngeoInteractionMeasure.getFormattedArea(\n        geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n    }\n  } else if (geometry instanceof olGeomLineString) {\n    measure = ngeoInteractionMeasure.getFormattedLength(\n      geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n  } else if (geometry instanceof olGeomPoint) {\n    if (this.pointFilterFn_ === null) {\n      measure = ngeoInteractionMeasure.getFormattedPoint(\n        geometry, this.decimals_, this.ngeoNumberCoordinates_);\n    } else {\n      const coordinates = geometry.getCoordinates();\n      const args = this.pointFilterArgs_.slice(0);\n      args.unshift(coordinates);\n      measure = this.pointFilterFn_(...args);\n    }\n  }\n\n  return measure;\n};\n\n\n/**\n * Return the type of geometry of a feature using its geometry property and\n * some inner properties.\n * @param {!ol.Feature} feature Feature.\n * @return {string} The type of geometry.\n * @export\n */\nexports.prototype.getType = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n  let type;\n\n  if (geometry instanceof olGeomPoint) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_TEXT)) {\n      type = ngeoGeometryType.TEXT;\n    } else {\n      type = ngeoGeometryType.POINT;\n    }\n  } else if (geometry instanceof olGeomMultiPoint) {\n    type = ngeoGeometryType.MULTI_POINT;\n  } else if (geometry instanceof olGeomPolygon) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n      type = ngeoGeometryType.CIRCLE;\n    } else if (feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE)) {\n      type = ngeoGeometryType.RECTANGLE;\n    } else {\n      type = ngeoGeometryType.POLYGON;\n    }\n  } else if (geometry instanceof olGeomMultiPolygon) {\n    type = ngeoGeometryType.MULTI_POLYGON;\n  } else if (geometry instanceof olGeomLineString) {\n    type = ngeoGeometryType.LINE_STRING;\n  } else if (geometry instanceof olGeomMultiLineString) {\n    type = ngeoGeometryType.MULTI_LINE_STRING;\n  }\n\n  googAsserts.assert(type, 'Type should be thruthy');\n\n  return type;\n};\n\n\n/**\n * This method first checks if a feature's extent intersects with the map view\n * extent. If it doesn't, then the view gets recentered with an animation to\n * the center of the feature.\n * @param {!ol.Feature} feature Feature.\n * @param {!ol.Map} map Map.\n * @param {number=} opt_panDuration Pan animation duration. Defaults to `250`.\n * @export\n */\nexports.prototype.panMapToFeature = function(feature, map,\n  opt_panDuration) {\n\n  const panDuration = opt_panDuration !== undefined ? opt_panDuration : 250;\n  const size = map.getSize();\n  googAsserts.assertArray(size);\n  const view = map.getView();\n  const extent = view.calculateExtent(size);\n  const geometry = feature.getGeometry();\n\n  if (!geometry.intersectsExtent(extent)) {\n    const mapCenter = view.getCenter();\n    googAsserts.assertArray(mapCenter);\n\n    let featureCenter;\n    if (geometry instanceof olGeomLineString) {\n      featureCenter = geometry.getCoordinateAt(0.5);\n    } else if (geometry instanceof olGeomPolygon) {\n      featureCenter = geometry.getInteriorPoint().getCoordinates();\n    } else if (geometry instanceof olGeomPoint) {\n      featureCenter = geometry.getCoordinates();\n    } else {\n      featureCenter = olExtent.getCenter(geometry.getExtent());\n    }\n\n    view.animate({\n      center: mapCenter,\n      duration: panDuration\n    }, {\n      center: featureCenter,\n      duration: panDuration\n    });\n  }\n};\n\n\n/**\n * This method generates a line string geometry that represents the radius for\n * a given azimut. It expects the input geometry to be a circle.\n * @param {!ol.Feature} feature Feature.\n * @param {number} azimut Azimut in degrees.\n * @return {!ol.geom.LineString} The line geometry.\n */\nexports.prototype.getRadiusLine = function(feature, azimut) {\n  const geometry = feature.getGeometry();\n  // Determine the radius for the circle\n  const extent = geometry.getExtent();\n  const radius = (extent[3] - extent[1]) / 2;\n\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const x = Math.cos((azimut - 90) * Math.PI / 180) * radius;\n  const y = -Math.sin((azimut - 90) * Math.PI / 180) * radius;\n  const endPoint = [x + center[0], y + center[1]];\n  return new olGeomLineString([center, endPoint]);\n};\n\n\n/**\n * Return the properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Object.\n * @export\n */\nexports.prototype.getNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const nonSpatialProperties = {};\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      nonSpatialProperties[key] = properties[key];\n    }\n  }\n  return nonSpatialProperties;\n};\n\n\n/**\n * Clear all properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @export\n */\nexports.prototype.clearNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      feature.set(key, undefined);\n    }\n  }\n};\n\n\n// === FORMAT TYPES ===\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.FormatType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GPX: 'GPX',\n  /**\n   * @type {string}\n   * @export\n   */\n  KML: 'KML'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureHelper', [\n  ngeoDownloadService.name,\n  ngeoMiscFilters.name,\n]);\nexports.module.service('ngeoFeatureHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport * as olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.CustomEvent\n */\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS, {optionsFromCapabilities} from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @param {number} ngeoTilesPreloadingLimit Load tiles up to preload levels. By default preload is Infinity,\n *     which means load all tiles on the top of the visible level. See also preload value\n *     in documentation for ol.Layer.Tile.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http, ngeoTilesPreloadingLimit) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * The Tiles Preloading Limit value\n   * @type {number}\n   * @private\n   */\n  this.tilesPreloadingLimit_ = ngeoTilesPreloadingLimit;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {string=} opt_matrixSet Optional WMTS matrix set.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_matrixSet, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: this.tilesPreloadingLimit_\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = optionsFromCapabilities(result, {\n        matrixSet: opt_matrixSet,\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach((l) => {\n      this.getFlatLayers_(l, array);\n    });\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some((layer) => {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  });\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @param {number=} opt_legendWidth the legend width.\n * @param {number=} opt_legendHeight the legend height.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule, opt_legendWidth, opt_legendHeight) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n    if (opt_legendWidth !== undefined) {\n      queryString['WIDTH'] = opt_legendWidth;\n    }\n    if (opt_legendHeight !== undefined) {\n      queryString['HEIGHT'] = opt_legendHeight;\n    }\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Set ZIndex property to first level children elements\n * @param {ol.layer.Group|ol.layer.Base} element The group of layer with first level children layers.\n * @param {number} ZIndex The ZIndex for children element.\n */\nexports.prototype.setZIndexToFirstLevelChildren = function(element, ZIndex) {\n  if (!(element instanceof olLayerGroup)) {\n    return;\n  }\n  const innerGroupLayers = element.getLayers();\n  innerGroupLayers.forEach(innerLayer => innerLayer.setZIndex(ZIndex));\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', [])\n  .service('ngeoLayerHelper', exports)\n  .value('ngeoTilesPreloadingLimit', Infinity);\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Geometry\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A rule bound to the geometry of a `ol.Feature` object. Changes made\n   * to the geometry are applied to the `expression` property of the rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.GeometryOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = ngeoFormatAttributeType.GEOMETRY;\n\n    super(options);\n\n    // === STATIC properties ===\n\n    const properties = options.featureProperties || {};\n\n    /**\n     * @type {!ol.Feature}\n     * @private\n     */\n    this.feature_ = new olFeature(properties);\n\n    /**\n     * @type {!ol.format.GeoJSON}\n     * @private\n     */\n    this.format_ = new olFormatGeoJSON();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingExpression_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingGeometry_ = false;\n\n    /**\n     * @type {?ol.EventsKey}\n     * @private\n     */\n    this.geometryChangeListenerKey_ = null;\n\n    this.listenerKeys.push(\n      olEvents.listen(\n        this.feature_,\n        `change:${this.feature.getGeometryName()}`,\n        this.handleFeatureGeometryChange_,\n        this\n      )\n    );\n\n    this.setGeometryFromExpression_();\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {!ol.Feature} Feature.\n   * @export\n   */\n  get feature() {\n    return this.feature_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setExpression(expression) {\n    this.updatingExpression_ = true;\n    super.setExpression(expression);\n\n    if (!this.updatingGeometry_) {\n      this.setGeometryFromExpression_();\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingExpression_ = false;\n  }\n\n  // === Calculated property getters/setters ===\n\n  /**\n   * @return {?ol.geom.Geometry} Geometry\n   * @export\n   */\n  get geometry() {\n    return this.feature_.getGeometry() || null;\n  }\n\n  /**\n   * @param {?ol.geom.Geometry} geometry Geometry\n   * @export\n   */\n  set geometry(geometry) {\n    this.feature_.setGeometry(geometry);\n  }\n\n  // === Other methods ===\n\n  /**\n   * Called when the geometry property in the feature changes. Update the\n   * expression accordingly.\n   * @private\n   */\n  handleFeatureGeometryChange_() {\n    if (this.updatingExpression_) {\n      return;\n    }\n\n    this.updatingGeometry_ = true;\n\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.expression = this.format_.writeGeometry(geometry);\n    } else {\n      this.expression = null;\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Called when the geometry of the features changes. Update the expression\n   * accordingly.\n   * @param {ol.Object.Event} evt Event\n   * @private\n   */\n  handleGeometryChange_(evt) {\n    const geometry = googAsserts.assertInstanceof(\n      evt.target, olGeomGeometry\n    );\n    this.updatingGeometry_ = true;\n    this.expression = this.format_.writeGeometry(geometry);\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Set geometry property using the expression property.\n   * @private\n   */\n  setGeometryFromExpression_() {\n    let geometry = null;\n    if (this.expression) {\n      // An expression can only have a string value with a geometry rule.\n      const expression = googAsserts.assertString(this.expression);\n      geometry = this.format_.readGeometry(expression);\n    }\n    this.geometry = geometry;\n  }\n\n  /**\n   * Unlisten the feature geometry change event, then listen to it if the\n   * feature has a geometry.\n   * @private\n   */\n  registerGeometryChange_() {\n\n    // (1) Unlisten\n    if (this.geometryChangeListenerKey_ !== null) {\n      olEvents.unlistenByKey(this.geometryChangeListenerKey_);\n      this.geometryChangeListenerKey_ = null;\n    }\n\n    // (2) Listen, if geom\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.geometryChangeListenerKey_ = olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      );\n    }\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle, {toFunction as toStyleFunction, createDefaultStyle as olStyleDefaultFunction} from 'ol/style/Style.js';\n\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleDefaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : toStyleFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach((child) => {\n    child.setStateInternal_(this.state_);\n  });\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Measure\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olDom from 'ol/dom.js';\nimport * as olProj from 'ol/proj.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olSphere from 'ol/sphere.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} options Options\n */\nconst exports = function(options = /** @type {ngeo.interaction.MeasureBaseOptions} */ ({})) {\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ? options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (polygon.clone().transform(projection, 'EPSG:4326'));\n  const area = Math.abs(olSphere.getArea(geom, {'projection': 'EPSG:4326'}));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection, precision, format) {\n  let length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = olProj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = olProj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n    length += olSphere.getDistance(c1, c2);\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  const helpMsg = this.sketchFeature === null ? this.startMsg : this.continueMsg;\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event|ngeox.DrawEvent} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature || evt.detail.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event|ngeox.DrawEvent} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  this.unlistenerEvent_();\n};\n\n/**\n * Handle unlistener events for 'end of drawing' interaction\n * @private\n */\nexports.prototype.unlistenerEvent_ = function() {\n  if (this.changeEventKey_ !== null && this.postcomposeEventKey_ !== null) {\n    olEvents.unlistenByKey(this.changeEventKey_);\n    olEvents.unlistenByKey(this.postcomposeEventKey_);\n    this.changeEventKey_ = null;\n    this.postcomposeEventKey_ = null;\n  }\n};\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n    this.unlistenerEvent_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is available through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach((grp) => {\n      this.root.children.unshift(grp);\n    });\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach((childNode) => {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  });\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object information.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.query.MapQuerent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport * as olObj from 'ol/obj.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Map Querent is the service bound to a map that issues\n   * queries using the Querent service. The result is stored inside this\n   * service.\n   *\n   * @struct\n   * @param {angular.$injector} $injector Main injector.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     sources helper service.\n   * @param {ngeo.query.Querent} ngeoQuerent The ngeo querent service.\n   * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($injector, ngeoDataSources, ngeoDataSourcesHelper, ngeoQuerent,\n    ngeoQueryResult) {\n\n    const options = /** @type {ngeox.QueryOptions} */ (\n      $injector.has('ngeoQueryOptions') ?\n        $injector.get('ngeoQueryOptions') : {});\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n    /**\n     * @type {ngeox.QueryResult}\n     * @private\n     */\n    this.result_ = ngeoQueryResult;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.limit_ = options.limit !== undefined ? options.limit : 50;\n\n    /**\n     * When set, before making WFS GetFeature requests to fetch features,\n     * WFS GetFeature requests with `resultType = 'hits'` are made first. If\n     * the number of records for the request would exceed the limit, then\n     * no features are returned.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.queryCountFirst_ = options.queryCountFirst !== undefined ?\n      options.queryCountFirst : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.tolerancePx_ = options.tolerance !== undefined ?\n      options.tolerance : 3;\n\n    /**\n     * A hash of data source names classified by ids.\n     * @type {Object.<number, string>}\n     * @private\n     */\n    this.dataSourceNames_ = {};\n  }\n\n  /**\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @export\n   */\n  issue(options) {\n    // (1) Clear previous result\n    this.clear();\n\n    // (2) Get queryable data sources, unless they are already set\n    let queryableDataSources;\n    if (options.dataSources === undefined &&\n        options.queryableDataSources === undefined\n    ) {\n      queryableDataSources = this.ngeoQuerent_.getQueryableDataSources(\n        this.dataSources_.getArray(),\n        options.map\n      );\n    }\n\n    // (3) Update query options, update the pending property and issue the\n    //     request.\n    const limit = options.limit !== undefined ? options.limit : this.limit_;\n    olObj.assign(options, {\n      queryableDataSources: queryableDataSources,\n      limit: limit,\n      tolerancePx: this.tolerancePx_,\n      wfsCount: this.queryCountFirst_\n    });\n    this.result_.pending = true;\n    this.ngeoQuerent_.issue(options).then(this.handleResult_.bind(this));\n  }\n\n  /**\n   * Clear result, i.e. clear all 'result source' from their features and other\n   * information.\n   * @export\n   */\n  clear() {\n    this.result_.total = 0;\n    for (const source of this.result_.sources) {\n      source.features.length = 0;\n      source.pending = false;\n      source.queried = false;\n      source.tooManyResults = false;\n      source.totalFeatureCount = undefined;\n    }\n    this.result_.sources.length = 0; // Clear previous result sources\n    this.result_.pending = false;\n  }\n\n  /**\n   * Called after a request to the querent service. Update the result.\n   *\n   * @param {ngeox.QuerentResult} response Response\n   * @private\n   */\n  handleResult_(response) {\n    let total = 0;\n\n    // (1) Update result sources, i.e. add them\n    for (const idStr in response) {\n      const id = Number(idStr);\n      const dataSource = this.ngeoDataSourcesHelper_.getDataSource(id);\n      let label = dataSource.name;\n      googAsserts.assert(dataSource);\n\n      const querentResultItem = response[id];\n      const features = querentResultItem.features;\n      const limit = querentResultItem.limit;\n      const tooManyResults = querentResultItem.tooManyFeatures === true;\n      const totalFeatureCount = querentResultItem.totalFeatureCount;\n\n      const typeSeparatedFeatures = {};\n      features.forEach((feature) => {\n        const type = googAsserts.assertString(feature.get('ngeo_feature_type_'));\n        if (!typeSeparatedFeatures[type]) {\n          typeSeparatedFeatures[type] = [];\n        }\n        // Use properties aliases if any\n        if (dataSource.attributes && dataSource.attributes.length) {\n          const properties = feature.getProperties();\n          const filteredProperties = {};\n          dataSource.attributes.forEach((attribute) => {\n            if (attribute.alias) {\n              filteredProperties[attribute.alias] = properties[attribute.name];\n              feature.unset(attribute.name, /* silent */ true);\n            } else {\n              // No alias is available => use the attribute as is.\n              filteredProperties[attribute.name] = properties[attribute.name];\n            }\n          });\n          feature.setProperties(filteredProperties, /* silent */ true);\n        }\n        typeSeparatedFeatures[type].push(feature);\n      });\n\n      for (const type in typeSeparatedFeatures) {\n        label = type ? type : label;\n        const featuresByType = typeSeparatedFeatures[type];\n        this.result_.sources.push({\n          features: featuresByType,\n          id: id,\n          label: label,\n          limit: limit,\n          pending: false,\n          queried: true,\n          tooManyResults: tooManyResults,\n          totalFeatureCount: totalFeatureCount\n        });\n        total += features.length;\n      }\n    }\n\n    // (2) Update total & pending\n    this.result_.total = total;\n    this.result_.pending = false;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoMapQuerent', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoDatasourceHelper.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoMapQuerent', exports);\n\n\n/**\n * The `ngeoQueryResult` is the value service where the features of the query\n * result are added.\n */\nexports.module.value('ngeoQueryResult', /** @type {ngeox.QueryResult} */ ({\n  sources: [],\n  total: 0,\n  pending: false\n}));\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.WMSTime\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * ngeo - WMS time service\n * @extends {ngeo.misc.Time}\n * @param {angular.$filter} $filter angular filter service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoWMSTime\n */\nconst exports = function($filter, gettextCatalog) {\n\n  /**\n   * @private\n   * @type {angular.$filter}\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  ngeoMiscTime.call(this);\n};\n\nolBase.inherits(exports, ngeoMiscTime);\n\n\n/**\n * Format time regarding a resolution\n * @param  {number} time (in ms format) timestamp to format\n * @param  {(ngeox.TimePropertyResolutionEnum|undefined)} resolution resolution to use\n * @param  {boolean=} opt_useISOFormat True to a ISO-8601 date string that can be used\n *     as a WMS-T Parameter. Otherwise, use a localized date format.\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} Date string regarding the resolution.\n */\nexports.prototype.formatTimeValue = function(time, resolution, opt_useISOFormat, opt_toUTC) {\n  const date = new Date(time);\n  const utc = opt_toUTC ? 'UTC' : undefined;\n\n  // ISO-8601 format to use date as a WMS-T Parameter.\n  let yearResolution = 'yyyy';\n  let monthResolution = 'yyyy-MM';\n  let dayResolution = 'yyyy-MM-dd';\n\n  // Localized format.\n  if (!opt_useISOFormat) {\n    const gettextCatalog = this.gettextCatalog_;\n    yearResolution = gettextCatalog.getString('yyyy');\n    monthResolution = gettextCatalog.getString('M/yyyy');\n    dayResolution = gettextCatalog.getString('M/d/yyyy');\n  }\n\n  switch (resolution) {\n    case 'year':\n      return this.$filter_('date')(date, yearResolution, utc);\n    case 'month':\n      return this.$filter_('date')(date, monthResolution, utc);\n    case 'day':\n      return this.$filter_('date')(date, dayResolution, utc);\n    default:\n      //case \"second\":\n      return date.toISOString().replace(/\\.\\d{3}/, '');\n  }\n};\n\n\n/**\n * Format time to be used as a WMS Time query parameter\n * @param  {ngeox.TimeProperty} wmsTimeProperty a wmstime property from a node\n * @param  {{start : number, end : (number|undefined)}} times start & end time selected (in ms format)\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} ISO-8601 date string ready to be used as a query parameter for a\n * WMS request\n * @export\n */\nexports.prototype.formatWMSTimeParam = function(wmsTimeProperty, times, opt_toUTC) {\n  googAsserts.assert(wmsTimeProperty.resolution !== undefined);\n  if (wmsTimeProperty.mode === 'range') {\n    googAsserts.assert(times.end !== undefined);\n    return (\n      `${this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC)}/${\n        this.formatTimeValue(times.end, wmsTimeProperty.resolution, true, opt_toUTC)}`\n    );\n  } else {\n    return this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC);\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoWMSTime', [\n  ngeoMiscTime.module.name,\n]);\nexports.module.service('ngeoWMSTime', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.filters\n */\nimport * as olMath from 'ol/math.js';\nimport * as olString from 'ol/string.js';\nconst exports = angular.module('ngeoAngularFilters', []);\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nexports.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nexports.filter('ngeoScalify', exports.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nexports.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nexports.filter('ngeoNumber', exports.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nexports.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nexports.filter('ngeoUnitPrefix', exports.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nexports.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nexports.filter('ngeoNumberCoordinates', exports.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nexports.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nexports.filter('ngeoDMSCoordinates', exports.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * If you use it, you don't require the \"ngSanitize\".\n * @return {function(?):string} The filter function.\n * @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nexports.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nexports.filter('ngeoTrustHtml', exports.trustHtmlFilter);\n\n\n/**\n * A filter used to format a time duration in seconds into a more\n * readable form.\n * Only the two largest units will be shown.\n *\n * Examples:\n *      {{42 | ngeoDuration}} => 42 seconds\n *      {{132 | ngeoDuration}} => 2 minutes 12 seconds\n *      {{3910 | ngeoDuration}} => 1 hour 5 minutes\n *        -> Note: the remaining 10 seconds will be dropped\n *\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @return {ngeox.duration} Function used to format a time duration in seconds into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDuration\n */\nexports.Duration = function(gettextCatalog) {\n  // time unit enum\n  const TimeUnits = Object.freeze({\n    SECONDS: Symbol('seconds'),\n    MINUTES: Symbol('minutes'),\n    HOURS: Symbol('hours'),\n    DAYS: Symbol('days')\n  });\n\n  /**\n   * @param {number} amount Amount of time.\n   * @param {symbol} unit Unit of time.\n   * @return {string} formatted and translated string\n   */\n  const pluralize = function(amount, unit) {\n    let formattedUnit = '';\n    switch (unit) {\n      case TimeUnits.SECONDS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'second', 'seconds');\n        break;\n      case TimeUnits.MINUTES:\n        formattedUnit = gettextCatalog.getPlural(amount, 'minute', 'minutes');\n        break;\n      case TimeUnits.HOURS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'hour', 'hours');\n        break;\n      case TimeUnits.DAYS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'day', 'days');\n        break;\n      default:\n        break;\n    }\n    return `${amount} ${formattedUnit}`;\n  };\n\n  /**\n   * @param {number} duration The duration in seconds.\n   * @return {string} The formatted string.\n   */\n  const result = function(duration) {\n    // round to next integer\n    duration = Math.round(duration);\n\n    // just seconds\n    let output;\n    if (duration < 60) {\n      return pluralize(duration, TimeUnits.SECONDS);\n    }\n\n    // minutes (+ seconds)\n    let remainder = duration % 60; // seconds\n    duration = Math.floor(duration / 60); // minutes\n    if (duration < 60) { // less than an hour\n      output = pluralize(duration, TimeUnits.MINUTES);\n      if (remainder > 0) {\n        output += ` ${pluralize(remainder, TimeUnits.SECONDS)}`;\n      }\n      return output;\n    }\n\n    // hours (+ minutes)\n    remainder = duration % 60; // minutes\n    duration = Math.floor(duration / 60); // hours\n    if (duration < 24) { // less than a day\n      output = pluralize(duration, TimeUnits.HOURS);\n      if (remainder > 0) {\n        output += ` ${pluralize(remainder, TimeUnits.MINUTES)}`;\n      }\n      return output;\n    }\n\n    // days (+ hours)\n    remainder = duration % 24; // hours\n    duration = Math.floor(duration / 24); // days\n    output = pluralize(duration, TimeUnits.DAYS);\n    if (remainder > 0) {\n      output += ` ${pluralize(remainder, TimeUnits.HOURS)}`;\n    }\n    return output;\n  };\n\n  return result;\n};\n\nexports.filter('ngeoDuration', exports.Duration);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.SyncLayertreeMap\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * Service to create layer based on a ngeo.layertree.Controller with a\n * GMFThemesGroup or a GMFThemesLeaf as node object.\n * This layer is also used to synchronise a state of ngeo.layertree.Controller\n * and its corresponding layer in the map.\n *\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSyncLayertreeMap\n */\nconst exports = function($rootScope, ngeoLayerHelper, ngeoWMSTime,\n  gmfThemes) {\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {gmfThemes.GmfOgcServers}\n   * @private\n   */\n  this.ogcServersObject_;\n\n  gmfThemes.getOgcServersObject().then((ogcServersObject) => {\n    this.ogcServersObject_ = ogcServersObject;\n  });\n\n  $rootScope.$on('ngeo-layertree-state', (map, treeCtrl, firstParent) => {\n    this.sync_(/** @type ol.Map */ (map), firstParent);\n  });\n};\n\n\n/**\n * Create, insert (or update) and return a layer from the GmfGroup or the\n * GmfLayer of the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Base|ol.layer.Group} a new layer.\n * @public\n */\nexports.prototype.createLayer = function(treeCtrl, map, dataLayerGroup, opt_position) {\n  /**\n   * @type {ol.layer.Base|ol.layer.Group}\n   */\n  let layer = null;\n  if (treeCtrl.node.children !== undefined && treeCtrl.node.mixed) {\n    // Mixed groups\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  } else if (treeCtrl.node.children === undefined && treeCtrl.parent.node.mixed) {\n    // Layers in a mixed group\n    layer = this.createLeafInAMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.node.children === undefined) {\n    // Layers in a non mixed group\n    this.initGmfLayerInANotMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.depth === 1 && !treeCtrl.node.mixed) {\n    // First level group non mix\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  }\n\n  if (layer && treeCtrl.node.metadata.opacity) {\n    layer.setOpacity(treeCtrl.node.metadata.opacity);\n  }\n\n  return layer;\n};\n\n\n/**\n * Synchronise the state of each layers corresponding to the given tree and\n * all its children.\n * @param {ol.Map} map A map that contains the layers.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.sync_ = function(map, treeCtrl) {\n  treeCtrl.traverseDepthFirst((treeCtrl) => {\n    if (treeCtrl.layer && !treeCtrl.node.mixed) {\n      this.updateLayerState_(/** @type ol.layer.Image|ol.layer.Tile */ (treeCtrl.layer), treeCtrl);\n    }\n  });\n};\n\n\n/**\n * Set the active state of a layer based on its treeCtrl state.\n * @param {ol.layer.Tile|ol.layer.Image} layer A layer.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.updateLayerState_ = function(layer, treeCtrl) {\n  const active = treeCtrl.getState() === 'on';\n  if (treeCtrl.node.type === 'WMTS') {\n    layer.setVisible(active);\n  } else if (!treeCtrl.node.mixed && treeCtrl.depth === 1) {\n    // First level non mixed group\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    const names = [];\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.getState() === 'on') {\n        names.push(treeCtrl.node.layers);\n      }\n    });\n    if (names.length === 0) {\n      layer.setVisible(false);\n    }\n    /** @type {ol.source.ImageWMS} */ (layer.getSource()).updateParams({\n      'LAYERS': names.reverse().join(',')\n    });\n    if (names.length !== 0) {\n      layer.setVisible(true);\n    }\n  } else {\n    // WMS mixed layer\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    layer.setVisible(active);\n  }\n};\n\n\n/**\n * Create insert and return a layer group (for not mixed case) or a wmsLayer (for\n * mixed case). Take care about the insertion order in the map in case of first\n * level group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createGroup_ = function(treeCtrl, map,\n  dataLayerGroup, opt_position) {\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  let layer = null;\n  const isFirstLevelGroup = treeCtrl.parent.isRoot;\n\n  let printNativeAngle = true;\n  if (groupNode.metadata.printNativeAngle !== undefined) {\n    printNativeAngle = groupNode.metadata.printNativeAngle;\n  }\n\n  if (isFirstLevelGroup) { // First level group\n    layer = this.createLayerFromGroup_(treeCtrl, !!groupNode.mixed);\n    // Insert the layer at the right place\n    const position = opt_position | 0;\n    dataLayerGroup.getLayers().insertAt(position, layer);\n\n  } else { // Other Groups, create a group layer only in mixed groups\n    const inAMixedGroup = !this.isOneParentNotMixed_(treeCtrl);\n    if (inAMixedGroup) {\n      layer = this.createLayerFromGroup_(treeCtrl, true);\n      const layerGroup = /** @type {ol.layer.Group} */ (\n        exports.getLayer(treeCtrl.parent));\n      layerGroup.getLayers().insertAt(0, layer);\n    }\n  }\n\n  layer.set('printNativeAngle', printNativeAngle);\n  return layer;\n};\n\n\n/**\n * Create, insert and return a layer group (for not mixed case) or a wmsLayer\n * for mixed case).\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {boolean} mixed True for a group layer, false for a WMS layer.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createLayerFromGroup_ = function(treeCtrl,\n  mixed) {\n  let layer;\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  if (mixed) { // Will be one ol.layer per each node.\n    layer = this.layerHelper_.createBasicGroup();\n  } else { // Will be one ol.layer for multiple WMS nodes.\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[groupNode.ogcServer || ''];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      '',\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n    let hasActiveChildren = false;\n    treeCtrl.traverseDepthFirst((ctrl) => {\n      // Update layer information and tree state.\n      this.updateLayerReferences_(/** @type gmfThemes.GmfLayer */ (ctrl.node), layer);\n      if (ctrl.node.metadata.isChecked) {\n        ctrl.setState('on', false);\n        this.updateLayerState_(/** @type {ol.layer.Image} */ (layer), ctrl);\n        hasActiveChildren = true;\n      }\n    });\n    layer.setVisible(hasActiveChildren);\n    layer.set('layerNodeName', groupNode.name); //Really useful ?\n  }\n  return layer;\n};\n\n\n/**\n * Create and insert a layer from a leaf in a mixed group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the layer.\n * @return {ol.layer.Tile|ol.layer.Image} a new layer.\n * @private\n */\nexports.prototype.createLeafInAMixedGroup_ = function(treeCtrl, map) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  let layer;\n  // Make layer.\n  if (gmfLayer.type === 'WMTS') {\n    layer = this.createWMTSLayer_(/** @type gmfThemes.GmfLayerWMTS */ (gmfLayer));\n  } else {\n    const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[/** @type string */ (gmfLayerWMS.ogcServer)];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(gmfLayerWMS.layers);\n    googAsserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      gmfLayerWMS.layers,\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n  }\n  // Update layer information and tree state.\n  layer.set('layerNodeName', gmfLayer.name); // Really useful ?\n  this.updateLayerReferences_(gmfLayer, layer);\n  const checked = gmfLayer.metadata.isChecked === true;\n  if (checked) {\n    treeCtrl.setState('on', false);\n  }\n  layer.setVisible(checked);\n  // Insert layer in the map.\n  const layerGroup = /** @type {ol.layer.Group} */ (\n    exports.getLayer(treeCtrl.parent));\n  layerGroup.getLayers().insertAt(0, layer);\n  return layer;\n};\n\n\n/**\n * Update a WMS layer with the given treeCtrl node information. Assumes that\n * the first parent with ogcServer information is linked to the layer to update\n * and that this treeCtrl node is a leafNode.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the layer to update.\n * @private\n */\nexports.prototype.initGmfLayerInANotMixedGroup_ = function(treeCtrl, map) {\n  const leafNode = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const firstLevelGroup = this.getFirstLevelGroupCtrl_(treeCtrl);\n  googAsserts.assert(firstLevelGroup);\n  const layer = /** @type {ol.layer.Image} */ (firstLevelGroup.layer);\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  // Update layer information and tree state.\n  this.updateLayerReferences_(leafNode, layer);\n  if (leafNode.metadata.isChecked) {\n    treeCtrl.setState('on', false);\n    this.updateLayerState_(layer, firstLevelGroup);\n  } else {\n    treeCtrl.parent.refreshState();\n  }\n};\n\n\n/**\n * Create and return a Tile layer.\n * @param {gmfThemes.GmfLayerWMTS} gmfLayerWMTS A leaf node.\n * @return {ol.layer.Tile} a Tile WMTS layer. (Source and capabilities can come\n *     later).\n * @private\n */\nexports.prototype.createWMTSLayer_ = function(gmfLayerWMTS) {\n  const newLayer = new olLayerTile();\n  googAsserts.assert(gmfLayerWMTS.url);\n  googAsserts.assert(gmfLayerWMTS.layer);\n  this.layerHelper_.createWMTSLayerFromCapabilitites(gmfLayerWMTS.url,\n    gmfLayerWMTS.layer, gmfLayerWMTS.matrixSet, gmfLayerWMTS.dimensions).then((layer) => {\n    newLayer.setSource(layer.getSource());\n    newLayer.set('capabilitiesStyles', layer.get('capabilitiesStyles'));\n  });\n  return newLayer;\n};\n\n\n/**\n * Update properties of a layer with the node of a given leafNode.\n * @param {gmfThemes.GmfLayer} leafNode a leaf node.\n * @param {ol.layer.Base} layer A layer.\n * @private\n */\nexports.prototype.updateLayerReferences_ = function(leafNode, layer) {\n  const id = olBase.getUid(leafNode);\n  const querySourceIds = layer.get('querySourceIds') || [];\n  querySourceIds.push(id);\n  layer.set('querySourceIds', querySourceIds);\n\n  const disclaimer = leafNode.metadata.disclaimer;\n  if (disclaimer) {\n    const disclaimers = layer.get('disclaimers') || [];\n    disclaimers.push(leafNode.metadata.disclaimer);\n    layer.set('disclaimers', disclaimers);\n  }\n};\n\n\n/**\n * Get the time parameter for a WMS Layer. If it's a group and it doesn't have\n * time, get the first time parameter available in any child.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {string|undefined} A wms time param.\n * @private\n */\nexports.prototype.getTimeParam_ = function(treeCtrl) {\n  let wmsTime;\n  let timeParam;\n  const node = treeCtrl.node;\n  if (node.time) {\n    wmsTime = node.time;\n  } else if (node.children) {\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.node.time) {\n        wmsTime = treeCtrl.node.time;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  if (wmsTime) {\n    const timeValues = this.ngeoWMSTime_.getOptions(wmsTime)['values'];\n    timeParam = this.ngeoWMSTime_.formatWMSTimeParam(wmsTime, {\n      start: timeValues[0] || timeValues,\n      end: timeValues[1]\n    });\n  }\n  return timeParam;\n};\n\n\n/**\n * Return true if a parent tree is mixed, based on its node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {boolean} True is any parent is mixed. False Otherwise.\n * @private\n */\nexports.prototype.isOneParentNotMixed_ = function(treeCtrl) {\n  let tree = treeCtrl.parent;\n  let isOneParentNotMix = false;\n  do {\n    isOneParentNotMix = tree.node.mixed === false;\n    tree = tree.parent;\n  }\n  while (tree.parent && !isOneParentNotMix);\n  return isOneParentNotMix;\n};\n\n\n/**\n * Return the first parent, from the root parent, that is not mixed.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} The first not mixed parent.\n * @private\n */\nexports.prototype.getFirstLevelGroupCtrl_ = function(\n  treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * Return the layer used by the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ol.layer.Base} The layer.\n * @public\n */\nexports.getLayer = function(treeCtrl) {\n  let tree = treeCtrl;\n  let layer = null;\n  while (!tree.isRoot && layer === null) {\n    if (tree.layer) {\n      layer = tree.layer;\n    }\n    tree = tree.parent;\n  }\n  return layer;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSyncLayertreeMap', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfSyncLayertreeMap', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.ToolActivateMgr\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * Provides a service to manage the activation of `ngeo.misc.ToolActivate` objects.\n *\n * Example:\n *\n * Each tool must be registered before using it.\n *\n *     let tool = new ngeo.misc.ToolActivate(interaction, 'active');\n *     ngeoToolActivateMgr.registerTool('mapTools', tool);\n *\n * A tool will be registered in a group identified by a group name.\n * Once registered a tool can be activated and deactivated. When activating a\n * tool, all others tools in the same group will be deactivated.\n *\n *     ngeoToolActivateMgr.activateTool(tool);\n *     ngeoToolActivateMgr.deactivateTool(tool);\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoToolActivateMgr\n * @ngInject\n */\nconst exports = function($rootScope) {\n\n  /**\n   * @type {!Object.<string, Array.<ngeox.miscToolActivateMgrEntry>>}\n   * @private\n   */\n  this.groups_ = {};\n\n  /**\n   * The scope.\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $rootScope;\n};\n\n\n/**\n * Register a tool.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to register.\n * @param {boolean=} opt_defaultActivate If true, this tool will be activated\n *     when all other tools in the group are deactivated.\n * @export\n */\nexports.prototype.registerTool = function(groupName, tool,\n  opt_defaultActivate) {\n  let entries = this.groups_[groupName];\n  if (!entries) {\n    entries = this.groups_[groupName] = [];\n  }\n\n  const unlisten = this.scope_.$watch(\n    tool.getActive,\n    (newVal, oldVal) => {\n      if (newVal === oldVal) {\n        return;\n      }\n      if (newVal) {\n        this.deactivateTools_(groupName, tool);\n      } else {\n        this.activateDefault_(groupName);\n      }\n    });\n\n  entries.push({\n    tool: tool,\n    defaultTool: opt_defaultActivate || false,\n    unlisten: unlisten\n  });\n\n  if (googAsserts.ENABLE_ASSERTS) {\n    // check that only one default tool per group exists\n    let defaultTools = 0;\n    entries.forEach((entry) => {\n      if (entry.defaultTool) {\n        defaultTools++;\n      }\n    });\n    googAsserts.assert(\n      defaultTools <= 1, `more than one default tool in group ${groupName}`);\n  }\n};\n\n\n/**\n * Unregister a tool from a group.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to unregister.\n * @export\n */\nexports.prototype.unregisterTool = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      if (entries[i].tool == tool) {\n        entries[i].unlisten();\n        entries.splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * Unregister each tool from a group.\n * @param {string} groupName Name of the group of tools to unregister.\n * @export\n */\nexports.prototype.unregisterGroup = function(groupName) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      entries[i].unlisten();\n    }\n    delete this.groups_[groupName];\n  }\n};\n\n\n/**\n * Activate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @export\n */\nexports.prototype.activateTool = function(tool) {\n  tool.setActive(true);\n};\n\n\n/**\n * Deactivate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to deactivate.\n * @export\n */\nexports.prototype.deactivateTool = function(tool) {\n  tool.setActive(false);\n};\n\n\n/**\n * Deactivate all tools except the given one.\n *\n * @param {string} groupName Name of the group.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @private\n */\nexports.prototype.deactivateTools_ = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  for (let i = 0; i < entries.length; i++) {\n    if (tool != entries[i].tool) {\n      entries[i].tool.setActive(false);\n    }\n  }\n};\n\n\n/**\n * Activate the default tool in the given group if no other tool is active.\n *\n * @param {string} groupName Name of the group.\n * @private\n */\nexports.prototype.activateDefault_ = function(groupName) {\n  const entries = this.groups_[groupName];\n  let defaultTool = null;\n  let hasActiveTool = false;\n\n  for (let i = 0; i < entries.length; i++) {\n    hasActiveTool = hasActiveTool || entries[i].tool.getActive();\n\n    if (entries[i].defaultTool) {\n      defaultTool = entries[i].tool;\n    }\n  }\n\n  if (!hasActiveTool && defaultTool !== null) {\n    defaultTool.setActive(true);\n  }\n};\n\n\nexports.module = angular.module('ngeoToolActivateMgr', []);\nexports.module.service('ngeoToolActivateMgr', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.EventHelper\n */\nimport * as olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Date\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A date rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.DateOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = options.type || ngeoFormatAttributeType.DATE;\n\n    super(options);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Text\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A text rule, which always compares the value with the LIKE operator, by\n   * default.\n   *\n   * @struct\n   * @param {!ngeox.rule.TextOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = options.operator || ngeoRuleRule.OperatorType.LIKE;\n    options.type = ngeoFormatAttributeType.TEXT;\n\n    super(options);\n\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.RuleHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport ngeoRuleDate from 'ngeo/rule/Date.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport ngeoRuleText from 'ngeo/rule/Text.js';\nimport {writeFilter} from 'ol/format/WFS.js';\nimport * as olFormatFilter from 'ol/format/filter.js';\nimport * as olArray from 'ol/array.js';\n\nimport moment from 'moment';\n\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to create `ngeo.rule.Rule`\n   * objects.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoRuleHelper\n   * @ngInject\n   */\n  constructor(gettextCatalog, ngeoFeatureHelper, ngeoWMSTime) {\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.Attribute>} attributes Attributes.\n   * @param {boolean=} opt_isCustom Whether the created rules should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRulesFromAttributes(attributes, opt_isCustom) {\n    const rules = [];\n    for (const attribute of attributes) {\n      rules.push(this.createRuleFromAttribute(attribute, opt_isCustom));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.Attribute} attribute Attribute.\n   * @param {boolean=} opt_isCustom Whether the created rule should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRuleFromAttribute(attribute, opt_isCustom) {\n\n    let rule;\n    const isCustom = opt_isCustom === true;\n\n    /**\n     * @type {string}\n     */\n    const name = this.gettextCatalog_.getString(attribute.name);\n\n    // Todo: support geometry\n\n    switch (attribute.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        if (isCustom) {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.EQUALS,\n            operators: [\n              ngeoRuleRule.TemporalOperatorType.EQUALS,\n              ngeoRuleRule.TemporalOperatorType.BEGINS,\n              ngeoRuleRule.TemporalOperatorType.ENDS\n            ],\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        } else {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.DURING,\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry({\n          name: name,\n          operator: ngeoRuleRule.SpatialOperatorType.WITHIN,\n          operators: [\n            ngeoRuleRule.SpatialOperatorType.CONTAINS,\n            ngeoRuleRule.SpatialOperatorType.INTERSECTS,\n            ngeoRuleRule.SpatialOperatorType.WITHIN\n          ],\n          propertyName: attribute.name,\n          type: attribute.type\n        });\n        break;\n      case ngeoFormatAttributeType.NUMBER:\n        if (isCustom) {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.EQUAL_TO,\n            operators: [\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.GREATER_THAN,\n              ngeoRuleRule.OperatorType.GREATER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.LESSER_THAN,\n              ngeoRuleRule.OperatorType.LESSER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        } else {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.BETWEEN,\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        rule = new ngeoRuleSelect({\n          choices: googAsserts.assert(attribute.choices),\n          name: name,\n          propertyName: attribute.name\n        });\n        break;\n      default:\n        if (isCustom) {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            operators: [\n              ngeoRuleRule.OperatorType.LIKE,\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name\n          });\n        } else {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            propertyName: attribute.name\n          });\n        }\n        break;\n    }\n\n    return rule;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions>} optionsList List of options\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRules(optionsList) {\n    const rules = [];\n    for (const options of optionsList) {\n      rules.push(this.createRule(options));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions} options Options\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRule(options) {\n    let rule;\n    switch (options.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        rule = new ngeoRuleDate(options);\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry(options);\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        const selectOptions = /** @type {!ngeox.rule.SelectOptions} */ (\n          options);\n        googAsserts.assert(selectOptions.choices);\n        rule = new ngeoRuleSelect(selectOptions);\n        break;\n      default:\n        rule = new ngeoRuleText(options);\n        break;\n    }\n    return rule;\n  }\n\n  /**\n   * Create a new `ngeo.rule.Rule` object using an other given rule.\n   *\n   * @param {!ngeo.rule.Rule} rule Original rule to clone.\n   * @return {!ngeo.rule.Rule} A clone rule.\n   * @export\n   */\n  cloneRule(rule) {\n\n    let clone;\n\n    let expression = rule.getExpression();\n    if (expression === null) {\n      expression = undefined;\n    }\n    const isCustom = rule.isCustom;\n    const lowerBoundary = rule.lowerBoundary !== null ? rule.lowerBoundary :\n      undefined;\n    const name = rule.name;\n    const operator = rule.operator !== null ? rule.operator : undefined;\n    const operators = rule.operators ? rule.operators.slice(0) : undefined;\n    const propertyName = rule.propertyName;\n    const type = rule.type !== null ? rule.type : undefined;\n    const upperBoundary = rule.upperBoundary !== null ? rule.upperBoundary :\n      undefined;\n\n    const options = {\n      expression,\n      isCustom,\n      lowerBoundary,\n      name,\n      operator,\n      operators,\n      propertyName,\n      type,\n      upperBoundary\n    };\n\n    if (rule instanceof ngeoRuleDate) {\n      clone = new ngeoRuleDate(options);\n    } else if (rule instanceof ngeoRuleGeometry) {\n      clone = new ngeoRuleGeometry(options);\n      clone.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(rule.feature)\n      );\n    } else if (rule instanceof ngeoRuleSelect) {\n      options.choices = rule.choices.slice(0);\n      clone = new ngeoRuleSelect(options);\n    } else if (rule instanceof ngeoRuleText) {\n      clone = new ngeoRuleText(options);\n    } else {\n      clone = new ngeoRuleRule(options);\n    }\n\n    return clone;\n  }\n\n  /**\n   * Extend the dynamic properties from a source rule to destination rule.\n   * The source rule remains unchanged, while the destination rule changes.\n   *\n   * @param {!ngeo.rule.Rule} sourceRule Source rule to collect the dynamic\n   *     properties from.\n   * @param {!ngeo.rule.Rule} destRule Destination rule where the dynamic\n   *     properties are set.\n   * @export\n   */\n  extendRule(sourceRule, destRule) {\n\n    if (destRule.getExpression() !== sourceRule.getExpression()) {\n      destRule.setExpression(sourceRule.getExpression());\n    }\n\n    if (destRule.lowerBoundary !== sourceRule.lowerBoundary) {\n      destRule.lowerBoundary = sourceRule.lowerBoundary;\n    }\n\n    if (destRule.operator !== sourceRule.operator) {\n      destRule.operator = sourceRule.operator;\n    }\n\n    if (destRule.upperBoundary !== sourceRule.upperBoundary) {\n      destRule.upperBoundary = sourceRule.upperBoundary;\n    }\n\n    if (sourceRule instanceof ngeoRuleGeometry &&\n       destRule instanceof ngeoRuleGeometry\n    ) {\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(destRule.feature);\n      destRule.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(sourceRule.feature)\n      );\n    }\n  }\n\n  /**\n   * @param {!Array.<!ngeo.rule.Rule>} rules Rules\n   * @return {!Array.<!ngeox.rule.AnyOptions>} List of serialized rule options.\n   * @export\n   */\n  serializeRules(rules) {\n    return rules.map((rule) => {\n      const serializedRule = this.serializeRule(rule);\n      return serializedRule;\n    });\n  }\n\n  /**\n   * Selialize a rule into options to re-create it later.\n   * @param {!ngeo.rule.Rule} rule Rule to serialize.\n   * @return {!ngeox.rule.AnyOptions} Serialized rule options.\n   * @export\n   */\n  serializeRule(rule) {\n    const obj = {\n      name: rule.name,\n      propertyName: rule.propertyName,\n      type: rule.type\n    };\n\n    if (rule.expression !== null) {\n      obj.expression = rule.expression;\n    }\n\n    if (rule.lowerBoundary !== null) {\n      obj.lowerBoundary = rule.lowerBoundary;\n    }\n\n    if (rule.operator !== null) {\n      obj.operator = rule.operator;\n    }\n\n    if (rule.operators !== null) {\n      obj.operators = rule.operators.slice(0);\n    }\n\n    if (rule.upperBoundary !== null) {\n      obj.upperBoundary = rule.upperBoundary;\n    }\n\n    if (rule instanceof ngeoRuleGeometry) {\n      obj.featureProperties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        rule.feature);\n    }\n\n    if (rule instanceof ngeoRuleSelect) {\n      obj.choices = rule.choices;\n    }\n\n    return obj;\n  }\n\n  /**\n   * Create a `ol.format.filter.Filter` object for a given data source.\n   * See the `ngeox.CreateFilterOptions` to learn more.\n   *\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?ol.format.filter.Filter} Filter.\n   * @export\n   */\n  createFilter(options) {\n\n    const dataSource = /** @type {ngeo.datasource.OGC} */ (options.dataSource);\n    let mainFilter = null;\n\n    if (options.filter) {\n      mainFilter = options.filter;\n    } else {\n      const rules = options.filterRules || dataSource.filterRules;\n      const conditions = [];\n\n      if (rules && rules.length) {\n        for (const rule of rules) {\n          const filter = this.createFilterFromRule_(\n            rule,\n            dataSource,\n            options.srsName\n          );\n          if (filter) {\n            conditions.push(filter);\n          }\n        }\n      }\n\n      const condition = dataSource.filterCondition;\n      if (conditions.length === 1) {\n        mainFilter = conditions[0];\n      } else if (conditions.length >= 2) {\n        if (condition === ngeoFilterCondition.AND) {\n          mainFilter = olFormatFilter.and.apply(null, conditions);\n        } else if (condition === ngeoFilterCondition.OR ||\n                   condition === ngeoFilterCondition.NOT\n        ) {\n          mainFilter = olFormatFilter.or.apply(null, conditions);\n        }\n      }\n      if (mainFilter && condition === ngeoFilterCondition.NOT) {\n        mainFilter = olFormatFilter.not(mainFilter);\n      }\n    }\n\n    if (options.incTime) {\n      const timeFilter = this.createTimeFilterFromDataSource_(dataSource);\n      if (timeFilter) {\n        if (mainFilter) {\n          mainFilter = olFormatFilter.and.apply(\n            null,\n            [\n              mainFilter,\n              timeFilter\n            ]\n          );\n        } else {\n          mainFilter = timeFilter;\n        }\n      }\n    }\n\n    return mainFilter;\n  }\n\n  /**\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?string} Filter string.\n   * @export\n   */\n  createFilterString(options) {\n    let filterString = null;\n    const filter = this.createFilter(options);\n    if (filter) {\n      const filterNode = writeFilter(filter);\n      const xmlSerializer = new XMLSerializer();\n      filterString = xmlSerializer.serializeToString(filterNode);\n    }\n    return filterString;\n  }\n\n  /**\n   * @param {ngeo.rule.Rule} rule Rule.\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @param {string=} opt_srsName SRS name. No srsName attribute will be\n   *     set on geometries when this is not provided.\n   * @return {?ol.format.filter.Filter} filter Filter;\n   * @private\n   */\n  createFilterFromRule_(rule, dataSource, opt_srsName) {\n\n    let filter = null;\n\n    const value = rule.value;\n    if (!value) {\n      return null;\n    }\n\n    const expression = value.expression;\n    const lowerBoundary = value.lowerBoundary;\n    const operator = value.operator;\n    const propertyName = value.propertyName;\n    const upperBoundary = value.upperBoundary;\n\n    const rot =  ngeoRuleRule.OperatorType;\n    const rsot = ngeoRuleRule.SpatialOperatorType;\n    const rtot = ngeoRuleRule.TemporalOperatorType;\n\n    const spatialTypes = [\n      rsot.CONTAINS,\n      rsot.INTERSECTS,\n      rsot.WITHIN\n    ];\n\n    const numericTypes = [\n      rot.GREATER_THAN,\n      rot.GREATER_THAN_OR_EQUAL_TO,\n      rot.LESSER_THAN,\n      rot.LESSER_THAN_OR_EQUAL_TO\n    ];\n\n    if (rule instanceof ngeoRuleDate) {\n      let beginValue;\n      let endValue;\n\n      if (operator === rtot.DURING) {\n        beginValue = moment(lowerBoundary).format('YYYY-MM-DD');\n        endValue = moment(upperBoundary).format('YYYY-MM-DD');\n      } else if (operator === rtot.EQUALS) {\n        beginValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD HH:mm:ss'\n        );\n        endValue = moment(\n          expression\n        ).add(\n          1, 'days'\n        ).subtract(\n          1, 'seconds'\n        ).format(\n          'YYYY-MM-DD HH:mm:ss'\n        );\n      } else if (operator === rtot.BEGINS) {\n        beginValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD'\n        );\n        // NOTE: end value is CURRENT + 30 years\n        endValue = moment(\n          expression\n        ).add(\n          30, 'years'\n        ).format(\n          'YYYY-MM-DD'\n        );\n      } else if (operator === rtot.ENDS) {\n        // NOTE: begin value is hardcoded to 1970-01-01\n        beginValue = '1970-01-01';\n        endValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD'\n        );\n      }\n      if (beginValue && endValue) {\n        filter = olFormatFilter.during(\n          propertyName,\n          beginValue,\n          endValue\n        );\n      }\n    } else if (rule instanceof ngeoRuleSelect) {\n      const selectedChoices = rule.selectedChoices;\n      if (selectedChoices.length === 1) {\n        filter = olFormatFilter.equalTo(\n          propertyName,\n          selectedChoices[0]\n        );\n      } else if (selectedChoices.length >= 2) {\n        const conditions = [];\n        for (const selectedChoice of selectedChoices) {\n          conditions.push(\n            olFormatFilter.equalTo(\n              propertyName,\n              selectedChoice\n            )\n          );\n        }\n        filter = olFormatFilter.or.apply(null, conditions);\n      }\n    } else if (olArray.includes(spatialTypes, operator)) {\n      const geometryName = dataSource.geometryName;\n      googAsserts.assertInstanceof(rule, ngeoRuleGeometry);\n      const geometry = googAsserts.assert(rule.geometry);\n      if (operator === rsot.CONTAINS) {\n        filter = olFormatFilter.contains(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.INTERSECTS) {\n        filter = olFormatFilter.intersects(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.WITHIN) {\n        filter = olFormatFilter.within(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      }\n    } else if (olArray.includes(numericTypes, operator)) {\n      const numericExpression = googAsserts.assertNumber(expression);\n      if (operator === rot.GREATER_THAN) {\n        filter = olFormatFilter.greaterThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.GREATER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.greaterThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN) {\n        filter = olFormatFilter.lessThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.lessThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      }\n    } else if (operator === rot.BETWEEN) {\n      filter = olFormatFilter.between(\n        propertyName,\n        lowerBoundary,\n        upperBoundary\n      );\n    } else if (operator === rot.EQUAL_TO) {\n      filter = olFormatFilter.equalTo(\n        propertyName,\n        expression\n      );\n    } else if (operator === rot.LIKE) {\n      const stringExpression = String(expression)\n        .replace(/!/g, '!!')\n        .replace(/\\./g, '!.')\n        .replace(/\\*/g, '!*');\n      filter = olFormatFilter.like(\n        propertyName,\n        `*${stringExpression}*`,\n        '*', /* wildCard */\n        '.', /* singleChar */\n        '!', /* escapeChar */\n        false /* matchCase */\n      );\n    } else if (operator === rot.NOT_EQUAL_TO) {\n      filter = olFormatFilter.notEqualTo(\n        propertyName,\n        expression\n      );\n    }\n\n    return filter;\n  }\n\n  /**\n   * Create and return an OpenLayers filter object using the available\n   * time properties within the data source.\n   * @param {ngeo.datasource.OGC} dataSource Data source from which to\n   *     create the filter.\n   * @return {?ol.format.filter.Filter} Filter\n   * @private\n   */\n  createTimeFilterFromDataSource_(dataSource) {\n    let filter = null;\n    const range = dataSource.timeRangeValue;\n    const timeProperty = dataSource.timeProperty;\n    const name = dataSource.timeAttributeName;\n\n    if (range && timeProperty && name) {\n\n      if (range.end !== undefined) {\n        // Case 1: the range has both 'start' and 'end' values.  Use them to\n        //         create a During filter.\n\n        const values = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        ).split('/');\n\n        filter = olFormatFilter.during(name, values[0], values[1]);\n      } else {\n\n        // Case 2: we only have a 'start' value. We need to calculate the 'end'\n        //         using the resolution of the time property.\n\n        const resolution = timeProperty.resolution || 'seconds';\n        const value = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        );\n        let momentEnd;\n\n        switch (resolution) {\n          case 'year':\n            momentEnd = moment(value).add(1, 'years').subtract(1, 'seconds');\n            break;\n          case 'month':\n            momentEnd = moment(value).add(1, 'months').subtract(1, 'seconds');\n            break;\n          case 'day':\n            momentEnd = moment(value).add(1, 'days').subtract(1, 'seconds');\n            break;\n          default:\n            //case \"second\":\n            // This would require a TContains filter, which neither OpenLayers\n            // and MapServer support. Skip...\n        }\n\n        if (momentEnd) {\n          const startValue = moment(value).format('YYYY-MM-DD HH:mm:ss');\n          const endValue = momentEnd.format('YYYY-MM-DD HH:mm:ss');\n          filter = olFormatFilter.during(name, startValue, endValue);\n        }\n      }\n    }\n\n    return filter;\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRuleHelper', [\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoRuleHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.File\n */\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source that contains vector features that were loaded from a file.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @private\n     */\n    this.featuresCollection_ = options.features || new olCollection();\n\n    /**\n     * @type {!ol.source.Vector}\n     * @private\n     */\n    this.source_ = new olSourceVector({\n      features: this.featuresCollection_,\n      wrapX: false\n    });\n\n    /**\n     * @type {!ol.layer.Vector}\n     * @private\n     */\n    this.layer_ = new olLayerVector({\n      source: this.source_\n    });\n  }\n\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ol.Feature>} Features\n   * @export\n   */\n  get features() {\n    return this.featuresCollection_.getArray();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {!ol.Collection.<!ol.Feature>} Features collection\n   * @export\n   */\n  get featuresCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * @return {!ol.layer.Vector} Vector layer.\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {ol.Extent} Extent.\n   * @export\n   */\n  get extent() {\n    return this.source_.getExtent();\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.FileGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A FileGroup data source combines multiple `ngeo.datasource.File` objects.\n   * Its main goal is to synchronize the added data source 'visible' properties\n   * with the visibility of their layer 'visible' property.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.unregister_ = {};\n  }\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    this.unregister_[dataSource.id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this, dataSource)\n    );\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source.\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(dataSource, value, oldValue) {\n    if (value !== undefined) {\n      dataSource.layer.setVisible(value);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    this.unregister_[dataSource.id]();\n    delete this.unregister_[dataSource.id];\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper the ngeo map LayerHelper service.\n   */\n  constructor(options, ngeoLayerHelper) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.ExternalDataSourcesManager\n */\n// TODO - MaxScaleDenominator\n// TODO - MinScaleDenominator\n\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceFileGroup from 'ngeo/datasource/FileGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\n\nconst exports = class {\n\n  /**\n   * External data sources come remote online resources, such as WMS/WMTS\n   * servers, and also files such as KML/GXP. This service is responsible of\n   * creating, storing and managing them.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog service.\n   * @param {!angular.$injector} $injector Main injector.\n   * @param {!angular.$q} $q The Angular $q service.\n   * @param {!angular.Scope} $rootScope The rootScope provider.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {!ngeo.misc.File} ngeoFile Ngeo file.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo layer helper service\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfExternalDataSourcesManager\n   */\n  constructor(gettextCatalog, $injector, $q, $rootScope, ngeoDataSources,\n    ngeoFile, ngeoLayerHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angular.$injector}\n     * @private\n     */\n    this.injector_ = $injector;\n\n    /**\n     * @type {!angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * The collection of DataSources from ngeo. When this service creates\n     * a data source, its gets added to that collection.\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.misc.File}\n     * @private\n     */\n    this.ngeoFile_ = ngeoFile;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * All external data sources that are created are stored here. The key\n     * is the data source id.\n     *\n     * Note: This cache is never cleaned and elements are never removed from it.\n     * If a data source with an id already exists in this cache, it is used\n     * instead of being re-created.\n     *\n     * @type {Object.<number, !ngeo.datasource.OGC|!ngeo.datasource.File>}\n     * @private\n     */\n    this.extDataSources_ = {};\n\n    /**\n     * File external data sources, with the key being the file name.\n     * @type {Object.<string, !ngeo.datasource.File>}\n     * @private\n     */\n    this.files_ = {};\n\n    /**\n     * @type {?ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * Group that contains file data sources.\n     * @type {!ngeo.datasource.FileGroup}\n     * @private\n     */\n    this.fileGroup_ = new ngeoDatasourceFileGroup({\n      dataSources: [],\n      injector: this.injector_,\n      title: gettextCatalog.getString('Local files')\n    });\n\n    /**\n     * Collection of WMS groups.\n     * @type {!ol.Collection.<!ngeo.datasource.WMSGroup>}\n     * @private\n     */\n    this.wmsGroupsCollection_ = new olCollection();\n\n    /**\n     * Collection of groups for WMTS data sources.\n     * @type {!ol.Collection.<!ngeo.datasource.OGCGroup>}\n     * @private\n     */\n    this.wmtsGroupsCollection_ = new olCollection();\n\n    /**\n     * Cache that stores the information of a WMTS data source. The key is the\n     * data source id.\n     * @type {!Object.<number, gmfx.datasource.ExternalDataSourcesManagerWMTSCacheItem>}\n     * @private\n     */\n    this.wmtsCache_ = {};\n\n    olEvents.listen(this.dataSources_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n\n  // === File Group ===\n\n  /**\n   * @return {!ngeo.datasource.FileGroup} File group.\n   * @export\n   */\n  get fileGroup() {\n    return this.fileGroup_;\n  }\n\n\n  // === WMS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  addWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.push(wmsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  removeWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.remove(wmsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.WMSGroup} WMS group.\n   */\n  getWMSGroup(url) {\n    let found = null;\n    for (const wmsGroup of this.wmsGroups) {\n      if (wmsGroup.url === url) {\n        found = wmsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.WMSGroup>} List of WMS groups.\n   * @export\n   */\n  get wmsGroups() {\n    return this.wmsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.WMSGroup>} Collection of WMS\n   *     groups.\n   * @export\n   */\n  get wmsGroupsCollection() {\n    return this.wmsGroupsCollection_;\n  }\n\n\n  // === WMTS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  addWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.push(wmtsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  removeWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.remove(wmtsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.OGCGroup} WMTS group.\n   */\n  getWMTSGroup(url) {\n    let found = null;\n    for (const wmtsGroup of this.wmtsGroups) {\n      if (wmtsGroup.url === url) {\n        found = wmtsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.OGCGroup>} List of groups for WMTS data\n   *     sources.\n   * @export\n   */\n  get wmtsGroups() {\n    return this.wmtsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.OGCGroup>} Collection of groups\n   *     for WMTS data sources.\n   * @export\n   */\n  get wmtsGroupsCollection() {\n    return this.wmtsGroupsCollection_;\n  }\n\n\n  // === Other methods ===\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source\n   * @return {boolean} Whether the given data source is external or not. To\n   *     be considered external, it needs to be in the external data source\n   *     hash (cache).\n   */\n  isExternalDataSource(dataSource) {\n    return !!this.extDataSources_[dataSource.id];\n  }\n\n  /**\n   * @return {ol.layer.Group} Layer group where to push layers created by\n   *     this service.\n   */\n  get layerGroup() {\n    const map = this.map_;\n    googAsserts.assert(map);\n    return this.ngeoLayerHelper_.getGroupFromMap(\n      map,\n      gmfBase.EXTERNALLAYERGROUP_NAME\n    );\n  }\n\n  /**\n   * @param {?ol.Map} map Map\n   */\n  set map(map) {\n    this.map_ = map;\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  addLayer_(layer) {\n    this.layerGroup.getLayers().push(layer);\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  removeLayer_(layer) {\n    this.layerGroup.getLayers().remove(layer);\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object.\n   * @param {!Object} capabilities  WMS Capabilities definition\n   * @param {string} url The WMS service url.\n   * @export\n   */\n  createAndAddDataSourceFromWMSCapability(layer, capabilities, url) {\n\n    const id = exports.getId(layer);\n    const service = capabilities['Service'];\n\n    let dataSource;\n\n    // (1) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n      const req = capabilities['Capability']['Request'];\n\n      // ogcImageType\n      const formats = req['GetMap']['Format'];\n      const imagePngType = 'image/png';\n      const ogcImageType = formats.includes(imagePngType) ?\n        imagePngType : formats[0];\n\n      // wmsInfoFormat\n      const infoFormats = req['GetFeatureInfo']['Format'];\n      const wmsInfoFormat = infoFormats.includes(\n        ngeoDatasourceOGC.WMSInfoFormat.GML\n      ) ? ngeoDatasourceOGC.WMSInfoFormat.GML : undefined;\n\n      // queryable\n      const queryable = layer['queryable'] === true &&\n          wmsInfoFormat !== undefined;\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: layer['Title'],\n        ogcImageType: ogcImageType,\n        ogcLayers: [{\n          name: layer['Name'],\n          queryable: queryable\n        }],\n        ogcType: ngeoDatasourceOGC.Type.WMS,\n        visible: true,\n        wmsInfoFormat: wmsInfoFormat,\n        wmsUrl: url\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n\n    // (2) Add data source in WMS group, unless it's already in there.\n    //     Will also add the data source to the `ngeo.DataSources` collection.\n    //     If the group is created, its inner OL layer is also added to the map.\n    let wmsGroup = this.getWMSGroup(url);\n    if (wmsGroup) {\n      if (!wmsGroup.dataSources.includes(dataSource)) {\n        wmsGroup.addDataSource(dataSource);\n        this.dataSources_.push(dataSource);\n      }\n    } else {\n      wmsGroup = new ngeoDatasourceWMSGroup({\n        dataSources: [dataSource],\n        injector: this.injector_,\n        title: service['Title'],\n        url: url\n      }, this.ngeoLayerHelper_);\n      this.addLayer_(wmsGroup.layer);\n      this.addWMSGroup_(wmsGroup);\n      this.dataSources_.push(dataSource);\n    }\n  }\n\n  /**\n   * @param {!Object} layer WTMS Capability Layer object.\n   * @param {!Object} capabilities  WMTS Capabilities definition\n   * @param {string} wmtsUrl The WMTS capabilities url\n   * @export\n   */\n  createAndAddDataSourceFromWMTSCapability(layer, capabilities, wmtsUrl) {\n    const id = exports.getId(layer);\n\n    // (1) No need to do anything if there's already a WMTS data source (and its\n    // layer in the map)\n    if (this.wmtsCache_[id]) {\n      return;\n    }\n\n    let dataSource;\n\n    // (2) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n\n      const name = googAsserts.assertString(layer['Title']);\n      const wmtsLayer = googAsserts.assertString(layer['Identifier']);\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: name,\n        ogcType: ngeoDatasourceOGC.Type.WMTS,\n        visible: true,\n        wmtsLayer: wmtsLayer,\n        wmtsUrl: wmtsUrl\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n    // (3) Get/Create group, then add data source to group\n    let wmtsGroup = this.getWMTSGroup(wmtsUrl);\n    if (!wmtsGroup) {\n      wmtsGroup = new ngeoDatasourceOGCGroup({\n        dataSources: [],\n        title: capabilities['ServiceIdentification']['Title'],\n        url: wmtsUrl\n      });\n      this.addWMTSGroup_(wmtsGroup);\n    }\n    wmtsGroup.addDataSource(dataSource);\n\n    // (4) Create and add the OL layer\n    const layerObj = this.ngeoLayerHelper_.createWMTSLayerFromCapabilititesObj(\n      capabilities,\n      layer\n    );\n    this.addLayer_(layerObj);\n\n    // (5) Add data source to ngeo collection\n    this.dataSources_.push(dataSource);\n\n    // (6) Create and set WMTS cache item\n    this.wmtsCache_[id] = {\n      layerObj: layerObj,\n      // This watcher synchronizes the data source visible property to\n      // the OL layer object visible property\n      unregister: this.rootScope_.$watch(\n        () => dataSource.visible,\n        this.handleWMTSDataSourceVisibleChange_.bind(this, layerObj)\n      )\n    };\n  }\n\n  /**\n   * @param {!File} file File.\n   * @export\n   */\n  createAndAddDataSourceFromFile(file) {\n    this.getFileDataSource_(file).then(\n      (dataSource) => {\n        const fileGroup = this.fileGroup_;\n\n        // (1) No need to do anything if the file has already been added...\n        if (fileGroup.dataSources.includes(dataSource)) {\n          return;\n        }\n\n        // (2) Okay, we need to add this data source. First, add its layer\n        //     to the map.\n        this.addLayer_(dataSource.layer);\n\n        // (3) Add it to the file group\n        fileGroup.addDataSource(dataSource);\n\n        // (4) Recenter the map view onto its extent\n        this.map_.getView().fit(dataSource.extent);\n\n        // (5) Finally, add it to the ngeo collection\n        this.dataSources_.push(dataSource);\n      },\n      (rejections) => {\n        googAsserts.fail(`Failed to load file: ${file.name}`);\n      }\n    );\n  }\n\n  /**\n   * Get file data source from cache, else create, store and return a new one.\n   * @param {!File} file File.\n   * @return {!angular.$q.Promise} Promise\n   * @private\n   */\n  getFileDataSource_(file) {\n\n    const defer = this.q_.defer();\n\n    if (this.files_[file.name]) {\n      defer.resolve(this.files_[file.name]);\n    } else {\n      const ngeoFile = this.ngeoFile_;\n      ngeoFile.read(file).then((content) => {\n        let features;\n        const readOptions = {\n          featureProjection: this.map_.getView().getProjection()\n        };\n\n        if (ngeoFile.isKml(content)) {\n          features = new olFormatKML().readFeatures(content, readOptions);\n        } else if (ngeoFile.isGpx(content)) {\n          features = new olFormatGPX().readFeatures(content, readOptions);\n        }\n\n        if (features) {\n          const id = exports.getId(file);\n\n          const dataSource = new ngeoDatasourceFile({\n            features: new olCollection(features),\n            id: id,\n            name: file.name,\n            visible: true\n          });\n\n          // Keep a reference if both caches\n          this.files_[file.name] = dataSource;\n          this.extDataSources_[id] = dataSource;\n\n          defer.resolve(dataSource);\n        } else {\n          defer.reject();\n        }\n      });\n    }\n\n    return defer.promise;\n  }\n\n  /**\n   * @param {!ol.layer.Tile} layer WMTS layer\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleWMTSDataSourceVisibleChange_(layer, value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      layer.setVisible(value);\n    }\n  }\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If it's an external data source, remove it from its WMS Group\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (this.extDataSources_[dataSource.id] === dataSource) {\n      if (dataSource instanceof ngeoDatasourceFile) {\n        this.removeFileDataSource_(dataSource);\n      } else if (dataSource instanceof ngeoDatasourceOGC) {\n        this.removeOGCDataSource_(dataSource);\n      }\n    }\n  }\n\n  /**\n   * Remove a data source from its group. Remove its layer from the map as well.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.File} dataSource External File data source.\n   * @private\n   */\n  removeFileDataSource_(dataSource) {\n    this.removeLayer_(dataSource.layer);\n    this.fileGroup_.removeDataSource(dataSource);\n  }\n\n  /**\n   * Remove the data source from its group. If the group no longer has\n   * any data source in it, it is removed then destroyed and its layer is\n   * removed from the map.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.OGC} dataSource External OGC data source.\n   * @private\n   */\n  removeOGCDataSource_(dataSource) {\n    if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMS) {\n      // WMS data source\n      const url = dataSource.wmsUrl;\n      googAsserts.assert(url);\n\n      const wmsGroup = this.getWMSGroup(url);\n      if (wmsGroup && wmsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmsGroup.removeDataSource(dataSource);\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the group, and remove the layer from the map as well.\n        if (!wmsGroup.dataSources.length) {\n          this.removeLayer_(wmsGroup.layer);\n          wmsGroup.destroy();\n          this.removeWMSGroup_(wmsGroup);\n        }\n      }\n    } else if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMTS) {\n      // WMTS data source\n      const url = dataSource.wmtsUrl;\n      googAsserts.assert(url);\n\n      const wmtsGroup = this.getWMTSGroup(url);\n      if (wmtsGroup && wmtsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmtsGroup.removeDataSource(dataSource);\n\n        // Remove the cache item, in addition to removing the layer from the\n        // map and unregister the watcher\n        const id = dataSource.id;\n        this.removeLayer_(this.wmtsCache_[id].layerObj);\n        this.wmtsCache_[id].unregister();\n        delete this.wmtsCache_[id];\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the groug.\n        if (!wmtsGroup.dataSources.length) {\n          wmtsGroup.destroy();\n          this.removeWMTSGroup_(wmtsGroup);\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * Get the data source id from a WMS or WMTS Capability Layer object, or\n * from a File object.\n *\n * Please, note that this is used to generate a unique id for the created\n * external data sources and since a WMS/WMTS Capability Layer objects don't\n * natively contains an id by themselves, then it is programmatically generated\n * using the `ol.getUid` method, plus a million.\n *\n * @param {!Object} layer WMS/WMTS Capability Layer object.\n * @return {number} Data source id.\n * @export\n */\nexports.getId = function(layer) {\n  return olBase.getUid(layer) + 1000000;\n};\n\n\nexports.module = angular.module('gmfExternalDataSourcesManager', [\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscFile.module.name,\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('gmfExternalDataSourcesManager',\n  exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.btnComponent\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Attributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach((expressionFn, i) => {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  });\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Attributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.DataSources\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport olView from 'ol/View.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoDataSources\n   * @ngInject\n   */\n  constructor() {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = new olCollection();\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_ === map) {\n      return;\n    }\n\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.collection_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.service('ngeoDataSources', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.editFeatureComponent\n */\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\n\n/** @suppress {extraRequire} */\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\n\nimport gmfEditingXSDAttributes from 'gmf/editing/XSDAttributes.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport googAsserts from 'goog/asserts.js';\nimport DateFormatter from 'ngeo/misc/php-date-formatter.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.css';\n\n\n/** @suppress {extraRequire} */\nimport ngeoEditingAttributesComponent from 'ngeo/editing/attributesComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingCreatefeatureComponent from 'ngeo/editing/createfeatureComponent.js';\n\nimport ngeoUtils from 'ngeo/utils.js';\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMenu from 'ngeo/Menu.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\n\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfEditingFeatureComponent', [\n  gmfEditingEditFeature.module.name,\n  gmfEditingSnapping.module.name,\n  gmfEditingXSDAttributes.module.name,\n  ngeoEditingAttributesComponent.name,\n  ngeoEditingCreatefeatureComponent.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMessageModalComponent.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/editing/editFeatureComponent', require('./editFeatureComponent.html'));\n});\n\n\n/**\n * Directive used to insert, modify and delete features from a single layer.\n * It allows you to modify the geometry of the feature in addition to its\n * attributes.\n *\n * In order to modify or delete a feature, you must click on the map at the\n * location of the feature to select it first.\n *\n * In order to create a new feature, you use the \"Draw\" button and digitize\n * the feature on the map.\n *\n * Example:\n *\n *     <gmf-editfeature\n *         gmf-editfeature-dirty=\"ctrl.dirty\"\n *         gmf-editfeature-editabletreectrl=\"::ctrl.treeCtrl\"\n *         gmf-editfeature-map=\"::ctrl.map\"\n *         gmf-editfeature-state=\"efsCtrl.state\"\n *         gmf-editfeature-tolerance=\"::ctrl.tolerance\"\n *         gmf-editfeature-vector=\"::ctrl.vectorLayer\">\n *     </gmf-editfeature>\n *\n * @htmlAttribute {boolean} gmf-editfeature-dirty Flag that is toggled as soon\n *     as the feature changes, i.e. if any of its properties change, which\n *     includes the geometry.\n * @htmlAttribute {ngeo.layertree.Controller} gmf-editfeature-editabletreectrl\n *     A reference to the editable Layertree controller, which contains a\n *     a reference to the node and WMS layer.\n * @htmlAttribute {ol.Map} gmf-editfeature-map The map.\n * @htmlAttribute {string} gmf-editfeature-state The state property shared\n *     with the `gmf-editfeatureselector` directive. For more info, see in\n *     that directive.\n * @htmlAttribute {number|undefined} gmf-editfeatureselector-tolerance The\n *     buffer in pixels to use when making queries to get the features.\n * @htmlAttribute {ol.layer.Vector} gmf-editfeature-vector The vector layer in\n *     which to draw the vector features.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfEditfeature\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfEditfeatureController as efCtrl',\n    scope: {\n      'dirty': '=gmfEditfeatureDirty',\n      'editableTreeCtrl': '=gmfEditfeatureEditabletreectrl',\n      'map': '<gmfEditfeatureMap',\n      'state': '=gmfEditfeatureState',\n      'tolerance': '<?gmfEditfeatureTolerance',\n      'vectorLayer': '<gmfEditfeatureVector'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/editing/editFeatureComponent'\n  };\n};\n\n\nexports.directive('gmfEditfeature',\n  exports.component_);\n\n\n/**\n * @param {jQuery} $element Element.\n * @param {angular.$q} $q Angular $q service.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmf.editing.EditFeature} gmfEditFeature Gmf edit feature service.\n * @param {gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @param {gmf.editing.XSDAttributes} gmfXSDAttributes The gmf XSDAttributes service.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo Event Helper.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfEditfeatureController\n */\nexports.Controller_ = function($element, $q, $scope, $timeout,\n  gettextCatalog, gmfEditFeature, gmfSnapping, gmfXSDAttributes,\n  ngeoEventHelper, ngeoFeatureHelper, ngeoLayerHelper, ngeoToolActivateMgr) {\n\n\n  // === Binding properties ===\n\n  /**\n   * Flag that is toggled as soon as the feature changes, i.e. if any of its\n   * properties change, which includes the geometry.\n   * @type {boolean}\n   * @export\n   */\n  this.dirty;\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.editableTreeCtrl;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * The state property shared with the `gmf-editfeatureselector` directive.\n   * For more info, see in that directive.\n   * @type {string}\n   * @export\n   */\n  this.state;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.tolerance;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.vectorLayer;\n\n\n  // === Injected properties ===\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {gmf.editing.EditFeature}\n   * @private\n   */\n  this.gmfEditFeature_ = gmfEditFeature;\n\n  /**\n   * @type {gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n\n  /**\n   * @type {gmf.editing.XSDAttributes}\n   * @private\n   */\n  this.gmfXSDAttributes_ = gmfXSDAttributes;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n\n  // === Private properties ===\n\n  /**\n   * @type {gmfThemes.GmfLayer}\n   * @private\n   */\n  this.editableNode_;\n\n  /**\n   * @type {ol.layer.Image|ol.layer.Tile}\n   * @private\n   */\n  this.editableWMSLayer_;\n\n  /**\n   * A deferred object resolved after the confirm modal \"continue w/o saving\" or\n   * \"save\" buttons are clicked.\n   * @type {angular.$q.Deferred|null}\n   * @private\n   */\n  this.confirmDeferred_ = null;\n\n  /**\n   * Flag that controls the visibility of the modal that manages unsaved\n   * modifications.\n   * @type {boolean}\n   * @export\n   */\n  this.unsavedModificationsModalShown = false;\n\n  /**\n   * Flag that is toggled while a request is pending, either one to get\n   * features when a map is clicked or when saving\n   * @private\n   */\n  this.pending = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = true;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.createActive = false;\n\n  /**\n   * @type {ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.createToolActivate = new ngeoMiscToolActivate(this, 'createActive');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.mapSelectActive = true;\n\n  /**\n   * @type {ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.mapSelectToolActivate = new ngeoMiscToolActivate(this, 'mapSelectActive');\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature = null;\n\n  this.scope_.$watch(\n    () => this.feature,\n    this.handleFeatureChange_.bind(this)\n  );\n\n  /**\n   * @type {number|string|undefined}\n   * @export\n   */\n  this.featureId = undefined;\n\n  /**\n   * @type {ol.Collection}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Collection}\n   * @private\n   */\n  this.interactions_ = new olCollection();\n\n  /**\n   * @type {ol.interaction.Modify}\n   * @private\n   */\n  this.modify_;\n\n  /**\n   * @type {ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.modifyToolActivate;\n\n  /**\n   * @type {ngeo.Menu}\n   * @private\n   */\n  this.menu_ = new ngeoMenu({\n    actions: [{\n      cls: 'fa fa-arrows',\n      label: gettextCatalog.getString('Move'),\n      name: 'move'\n    }, {\n      cls: 'fa fa-rotate-right',\n      label: gettextCatalog.getString('Rotate'),\n      name: 'rotate'\n    }]\n  });\n\n  /**\n   * @type {ngeo.interaction.Translate}\n   * @private\n   */\n  this.translate_;\n\n  /**\n   * @type {ngeo.interaction.Rotate}\n   * @private\n   */\n  this.rotate_;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.rotateToolActivate;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.translateToolActivate;\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?Array.<!ngeox.Attribute>}\n   * @export\n   */\n  this.attributes = null;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showServerError = false;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.serverErrorMessage = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.serverErrorType = null;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const lang = this.gettextCatalog_.getCurrentLanguage();\n  $.datetimepicker.setLocale(lang);\n  $.datetimepicker.setDateFormatter(new DateFormatter());\n\n  // (1) Set default values and other properties\n  this.dirty = this.dirty === true;\n  this.editableNode_ = /** @type {gmfThemes.GmfLayer} */ (\n    this.editableTreeCtrl.node);\n  this.features = this.vectorLayer.getSource().getFeaturesCollection();\n  this.tolerance = this.tolerance !== undefined ? this.tolerance : 10;\n\n  // (1.1) Set editable WMS layer\n  const layer = gmfLayertreeSyncLayertreeMap.getLayer(this.editableTreeCtrl);\n  googAsserts.assert(\n    layer instanceof olLayerImage || layer instanceof olLayerTile);\n  this.editableWMSLayer_ = layer;\n\n  // (1.2) Create, set and initialize interactions\n  this.modify_ = new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.features,\n    style: this.ngeoFeatureHelper_.getVertexStyle(false)\n  });\n  this.interactions_.push(this.modify_);\n\n  this.rotate_ = new ngeoInteractionRotate({\n    features: this.features,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf01e',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.rotate_);\n\n  this.translate_ = new ngeoInteractionTranslate({\n    features: this.features,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf047',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.translate_);\n\n  this.initializeInteractions_();\n\n  this.modifyToolActivate = new ngeoMiscToolActivate(this.modify_, 'active');\n  this.rotateToolActivate = new ngeoMiscToolActivate(this.rotate_, 'active');\n  this.translateToolActivate = new ngeoMiscToolActivate(this.translate_, 'active');\n\n  // (1.3) Add menu to map\n  this.map.addOverlay(this.menu_);\n\n\n  // (2) Watchers and event listeners\n  this.scope_.$watch(\n    () => this.createActive,\n    (newVal, oldVal) => {\n      if (newVal) {\n        this.gmfSnapping_.ensureSnapInteractionsOnTop();\n      }\n    }\n  );\n\n  this.scope_.$on('$destroy', this.handleDestroy_.bind(this));\n\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(\n      this.features,\n      'add',\n      this.handleFeatureAdd_,\n      this\n    )\n  );\n\n  this.scope_.$watch(\n    () => this.mapSelectActive,\n    this.handleMapSelectActiveChange_.bind(this)\n  );\n\n  this.scope_.$watch(\n    () => this.state,\n    (newValue, oldValue) => {\n      const state = exports.State;\n      if (newValue === state.STOP_EDITING_PENDING) {\n        this.confirmCancel().then(() => {\n          this.state = state.STOP_EDITING_EXECUTE;\n        });\n      } else if (newValue === state.DEACTIVATE_PENDING) {\n        this.confirmCancel().then(() => {\n          this.state = state.DEACTIVATE_EXECUTE;\n        });\n      }\n    }\n  );\n\n  this.scope_.$watch(\n    () => this.unsavedModificationsModalShown,\n    (newValue, oldValue) => {\n      // Reset stop request when closing the confirmation modal\n      if (oldValue && !newValue) {\n        this.state = exports.State.IDLE;\n      }\n    }\n  );\n\n\n  // (3) Get attributes\n  this.gmfXSDAttributes_.getAttributes(this.editableNode_.id).then(\n    this.setAttributes_.bind(this));\n\n\n  // (4) Toggle\n  this.toggle_(true);\n\n};\n\n\n/**\n * Save the currently selected feature modifications.\n * @export\n */\nexports.Controller_.prototype.save = function() {\n  googAsserts.assert(this.attributes);\n\n  const feature = this.feature.clone();\n  feature.setId(this.feature.getId());\n  const id = this.featureId;\n\n  this.pending = true;\n\n  const dateFormatter = new DateFormatter();\n  for (const attribute of this.attributes) {\n    if (attribute.format) {\n      if (this.feature.get(attribute.name)) {\n        const name = this.feature.get(attribute.name);\n        googAsserts.assertString(name);\n        const value = dateFormatter.parseDate(name, attribute.format);\n        let jsonFormat = 'Y-m-d\\\\TH:i:s';\n        if (attribute.type === 'date') {\n          jsonFormat = 'Y-m-d';\n        } else if (attribute.type === 'time') {\n          jsonFormat = 'H:i:s';\n        } else if (attribute.type === 'datetime') {\n          // Time zone correction\n          value.setMinutes(value.getMinutes() + value.getTimezoneOffset());\n        }\n        feature.set(attribute.name, dateFormatter.formatDate(value, jsonFormat));\n      } else {\n        // Shouldn't be set to an empty string\n        feature.set(attribute.name, null);\n      }\n    }\n  }\n\n  const promise = id ?\n    this.gmfEditFeature_.updateFeature(\n      this.editableNode_.id,\n      feature\n    ) :\n    this.gmfEditFeature_.insertFeatures(\n      this.editableNode_.id,\n      [feature]\n    );\n  promise.then(\n    (response) => {\n      this.dirty = false;\n      this.pending = false;\n      this.handleEditFeature_(response);\n    },\n    (response) => {\n      this.showServerError = true;\n      this.pending = false;\n      this.serverErrorType =  `error type : ${response.data['error_type']}`;\n      this.serverErrorMessage = `error message : ${response.data['message']}`;\n    }\n  );\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.cancel = function() {\n  this.dirty = false;\n  this.feature = null;\n  this.features.clear();\n  this.menu_.close();\n  this.unsavedModificationsModalShown = false;\n};\n\n\n/**\n * Check if there are unsaved modifications. If there aren't, then cancel.\n * Used by the 'cancel' button in the template.\n * @return {angular.$q.Promise} The promise attached to the confirm deferred\n *     object.\n * @export\n */\nexports.Controller_.prototype.confirmCancel = function() {\n  return this.checkForModifications_().then(() => {\n    this.cancel();\n  });\n};\n\n\n/**\n * Check if there's a feature selected and if it contains modifications\n * (a.k.a. is dirty), then the confirmation modal is shown.\n * @param {boolean=} scopeApply Whether to force scope to refresh or not.\n *     when the confirm modal is not dismissed.\n * @return {angular.$q.Promise} The promise attached to the confirm deferred\n *     object.\n * @private\n */\nexports.Controller_.prototype.checkForModifications_ = function(\n  scopeApply) {\n  this.confirmDeferred_ = this.q_.defer();\n  if (this.feature && this.dirty) {\n    this.unsavedModificationsModalShown = true;\n    if (scopeApply) {\n      this.scope_.$apply();\n    }\n  } else {\n    this.confirmDeferred_.resolve();\n  }\n\n  return this.confirmDeferred_.promise;\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.continueWithoutSaving = function() {\n  this.cancel();\n  this.confirmDeferred_.resolve();\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.delete = function() {\n  const msg = this.gettextCatalog_.getString(\n    'Do you really want to delete the selected feature?');\n  // Confirm deletion first\n  if (confirm(msg)) {\n    this.pending = true;\n\n    // (1) Launch request\n    this.gmfEditFeature_.deleteFeature(\n      this.editableNode_.id,\n      this.feature\n    ).then(\n      (response) => {\n        this.dirty = false;\n        this.pending = false;\n        this.ngeoLayerHelper_.refreshWMSLayer(this.editableWMSLayer_);\n\n        // (2) Reset selected feature\n        this.cancel();\n      },\n      (response) => {\n        this.showServerError = true;\n        this.pending = false;\n        this.serverErrorType =  `error type : ${response.data['error_type']}`;\n        this.serverErrorMessage = `error message : ${response.data['message']}`;\n      }\n    );\n\n  }\n};\n\n\n/**\n * Called when the modal 'save' button is clicked. Do as if the user had\n * clicked on the 'save' input button in the form, which allows the form\n * to be validated.\n * @export\n */\nexports.Controller_.prototype.submit = function() {\n  // Use timeout to prevent the digest already in progress\n  // due to clicking on the modal button to throw an error.\n  this.timeout_(() => {\n    this.element_.find('input[type=\"submit\"]').click();\n  }, 0);\n};\n\n/**\n * Called after an insert, update or delete request.\n * @param {angular.$http.Response} resp Ajax response.\n * @private\n */\nexports.Controller_.prototype.handleEditFeature_ = function(resp) {\n  const features = new olFormatGeoJSON().readFeatures(resp.data);\n  if (features.length) {\n    this.feature.setId(features[0].getId());\n    this.ngeoLayerHelper_.refreshWMSLayer(this.editableWMSLayer_);\n  }\n  if (this.confirmDeferred_) {\n    this.confirmDeferred_.resolve();\n  }\n};\n\n\n/**\n * @param {!Array.<ngeox.Attribute>} attributes Attributes.\n * @private\n */\nexports.Controller_.prototype.setAttributes_ = function(attributes) {\n  // Set attributes\n  this.attributes = attributes;\n  for (const attribute of attributes) {\n    if (attribute.type == 'date') {\n      attribute.format = 'Y-m-d';\n      attribute.mask = '9999-19-39';\n    } else if (attribute.type == 'time') {\n      attribute.format = 'H:i';\n      attribute.mask = '29:59';\n    } else if (attribute.type == 'datetime') {\n      attribute.format = 'Y-m-d H:i';\n      attribute.mask = '9999-19-39 29:59';\n    }\n  }\n\n  // Get geom type from attributes and set\n  const geomAttr = ngeoFormatXSDAttribute.getGeometryAttribute(\n    this.attributes\n  );\n  if (geomAttr && geomAttr.geomType) {\n    this.geomType = geomAttr.geomType;\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeatureAdd_ = function(evt) {\n  this.feature = null;\n  this.timeout_(() => {\n    googAsserts.assert(this.attributes);\n    const feature = evt.element;\n    googAsserts.assertInstanceof(feature, olFeature);\n    const dateFormatter = new DateFormatter();\n    for (const attribute of this.attributes) {\n      if (attribute.format) {\n        if (feature.get(attribute.name)) {\n          let value;\n          if (attribute.type === 'datetime') {\n            value = new Date(feature.get(attribute.name));\n            // Time zone correction\n            value.setMinutes(value.getMinutes() - value.getTimezoneOffset());\n          } else {\n            let jsonFormat = '';\n            if (attribute.type === 'date') {\n              jsonFormat = 'Y-m-d';\n            } else if (attribute.type === 'time') {\n              jsonFormat = 'H:i:s';\n            }\n            const name = feature.get(attribute.name);\n            googAsserts.assertString(name);\n            value = dateFormatter.parseDate(name, jsonFormat);\n          }\n          feature.set(attribute.name, dateFormatter.formatDate(value, attribute.format));\n        } else {\n          // Shouldn't be set to an empty string\n          feature.set(attribute.name, null);\n        }\n      }\n    }\n    this.feature = feature;\n    this.createActive = false;\n    if (!feature.getId()) {\n      this.dirty = true;\n    }\n    this.scope_.$apply();\n  }, 0);\n};\n\n\n/**\n * Activate or deactivate this directive.\n * @param {boolean} active Whether to activate this directive or not.\n * @private\n */\nexports.Controller_.prototype.toggle_ = function(active) {\n\n  const keys = this.listenerKeys_;\n  const createUid = ['create-', olBase.getUid(this)].join('-');\n  const otherUid = ['other-', olBase.getUid(this)].join('-');\n  const toolMgr = this.ngeoToolActivateMgr_;\n\n  if (active) {\n\n    // FIXME\n    //this.registerInteractions_();\n\n    keys.push(olEvents.listen(this.menu_, 'actionclick',\n      this.handleMenuActionClick_, this));\n\n    keys.push(olEvents.listen(this.translate_,\n      'translateend',\n      this.handleTranslateEnd_, this));\n\n    keys.push(olEvents.listen(this.rotate_, 'rotateend', this.handleRotateEnd_, this));\n\n    toolMgr.registerTool(createUid, this.createToolActivate, false);\n    toolMgr.registerTool(createUid, this.mapSelectToolActivate, true);\n\n    toolMgr.registerTool(otherUid, this.createToolActivate, false);\n    toolMgr.registerTool(otherUid, this.modifyToolActivate, true);\n    toolMgr.registerTool(otherUid, this.translateToolActivate, false);\n    toolMgr.registerTool(otherUid, this.rotateToolActivate, false);\n\n  } else {\n\n    // FIXME\n    //this.unregisterInteractions_();\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n\n    toolMgr.unregisterTool(createUid, this.createToolActivate);\n    toolMgr.unregisterTool(createUid, this.mapSelectToolActivate);\n\n    toolMgr.unregisterTool(otherUid, this.createToolActivate);\n    toolMgr.unregisterTool(otherUid, this.modifyToolActivate);\n    toolMgr.unregisterTool(otherUid, this.translateToolActivate);\n    toolMgr.unregisterTool(otherUid, this.rotateToolActivate);\n\n    this.createActive = false;\n    this.cancel();\n  }\n\n  this.modify_.setActive(active);\n  this.mapSelectActive = active;\n  this.editableTreeCtrl.properties['editing'] = active;\n\n};\n\n\n/**\n * Called when the mapSelectActive property changes.\n * @param {boolean} active Whether the map select is active or not.\n * @private\n */\nexports.Controller_.prototype.handleMapSelectActiveChange_ = function(\n  active) {\n\n  const mapDiv = this.map.getViewport();\n  googAsserts.assertElement(mapDiv);\n\n  if (active) {\n    olEvents.listen(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.listen(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n  } else {\n    olEvents.unlisten(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.unlisten(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n  }\n};\n\n\n/**\n * Called when the map is clicked.\n *\n * (1) If a vector feature was clicked, don't do anything (i.e. allow the\n *     interactions to do their bidings without selecting a new feature).\n *\n * (2) Otherwise, if there is a feature being edited and has unsaved\n *     modifications, show the confirmation modal asking the user what to do\n *     about it.\n *\n * (3) If there's no feature selected or we have one without unsaved\n *     modifications or with modifications that were canceled, launch a query\n *     to fetch the features at the clicked location.\n *\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapClick_ = function(evt) {\n  const coordinate = evt.coordinate;\n  const pixel = evt.pixel;\n\n  // (1) Check if we clicked on an existing vector feature, i.e the one\n  //     selected. In that case, no need to do any further action.\n  const feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 5\n    }\n  );\n\n  if (feature) {\n    return;\n  }\n\n  // (2) If a feature is being edited and has unsaved changes, show modal\n  //     to let the user decide what to do\n  this.checkForModifications_(true).then(() => {\n\n    const map = this.map;\n    const view = map.getView();\n    const resolution = view.getResolution();\n    const buffer = resolution * this.tolerance;\n    const extent = olExtent.buffer(\n      [coordinate[0], coordinate[1], coordinate[0], coordinate[1]],\n      buffer\n    );\n\n    // (3) Launch query to fetch features\n    this.gmfEditFeature_.getFeaturesInExtent(\n      [this.editableNode_.id],\n      extent\n    ).then(this.handleGetFeatures_.bind(this));\n\n    // (4) Clear any previously selected feature\n    this.cancel();\n\n    // (5) Pending\n    this.pending = true;\n  });\n};\n\n\n/**\n * @param {Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(evt) {\n  const pixel = this.map.getEventPixel(evt);\n  const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 7\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // show contextual menu when clicking on certain types of features\n  if (feature) {\n    const type = this.ngeoFeatureHelper_.getType(feature);\n    if (type === ngeoGeometryType.POLYGON || type === ngeoGeometryType.MULTI_POLYGON ||\n        type === ngeoGeometryType.LINE_STRING || type === ngeoGeometryType.MULTI_LINE_STRING) {\n      this.menu_.open(coordinate);\n    }\n    evt.preventDefault();\n    evt.stopPropagation();\n  }\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @private\n */\nexports.Controller_.prototype.handleGetFeatures_ = function(features) {\n  this.pending = false;\n\n  this.timeout_(() => {\n    if (features.length) {\n      const feature = features[0];\n      this.feature = feature;\n      this.features.push(feature);\n    }\n  }, 0);\n};\n\n\n/**\n * Initialize interactions by setting them inactive and decorating them\n * @private\n */\nexports.Controller_.prototype.initializeInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    interaction.setActive(false);\n    ngeoMiscDecorate.interaction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by adding them to the map\n * @private\n */\nexports.Controller_.prototype.registerInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.addInteraction(interaction);\n  });\n};\n\n\n/**\n * Unregister interactions, i.e. set them inactive and remove them from the map\n * @private\n */\nexports.Controller_.prototype.unregisterInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.removeInteraction(interaction);\n  });\n};\n\n\n/**\n * @param {?ol.Feature} newFeature The new feature.\n * @param {?ol.Feature} oldFeature The old feature.\n * @private\n */\nexports.Controller_.prototype.handleFeatureChange_ = function(\n  newFeature, oldFeature\n) {\n\n  let geom;\n  if (oldFeature) {\n    olEvents.unlisten(oldFeature, 'propertychange', this.handleFeaturePropertyChange_, this);\n    geom = oldFeature.getGeometry();\n    googAsserts.assert(geom);\n    olEvents.unlisten(\n      geom,\n      'change',\n      this.handleFeatureGeometryChange_,\n      this\n    );\n    this.unregisterInteractions_();\n  }\n\n  if (newFeature) {\n    this.featureId = newFeature.getId();\n    olEvents.listen(newFeature, 'propertychange', this.handleFeaturePropertyChange_, this);\n    geom = newFeature.getGeometry();\n    googAsserts.assert(geom);\n    olEvents.listen(\n      geom,\n      'change',\n      this.handleFeatureGeometryChange_,\n      this\n    );\n    this.registerInteractions_();\n\n    this.gmfSnapping_.ensureSnapInteractionsOnTop();\n\n    // The `ui-date` triggers an unwanted change, i.e. it converts the text\n    // to Date, which makes the directive dirty when it shouldn't... to\n    // bypass this, we reset the dirty state here. We do so only if we're\n    // editing an existing feature\n    if (this.featureId) {\n      this.timeout_(() => {\n        this.dirty = false;\n        this.scope_.$apply();\n      }, 0);\n    }\n  } else {\n    this.featureId = undefined;\n  }\n\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeaturePropertyChange_ = function() {\n  this.dirty = true;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeatureGeometryChange_ = function() {\n  this.dirty = true;\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {ngeox.MenuEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuActionClick_ = function(evt) {\n  const action = evt.detail.action;\n\n  switch (action) {\n    case 'move':\n      this.translate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    case 'rotate':\n      this.rotate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * @param {ol.interaction.Translate.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleTranslateEnd_ = function(evt) {\n  this.translate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.RotateEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleRotateEnd_ = function(evt) {\n  this.rotate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.features.clear();\n  this.handleFeatureChange_(null, this.feature);\n  this.feature = null;\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.toggle_(false);\n  this.handleMapSelectActiveChange_(false);\n  this.unregisterInteractions_();\n};\n\n\nexports.controller('GmfEditfeatureController',\n  exports.Controller_);\n\n\n/**\n * The different possible values of the `state` inner property.\n * @enum {string}\n */\nexports.State = {\n  /**\n   * The default state. While idle, nothing happens.\n   * @type {string}\n   */\n  IDLE: 'idle',\n  /**\n   * The state active after the deactivation of the editing tools and the\n   * unsaved modifications were saved or discarded.\n   * @type {string}\n   */\n  DEACTIVATE_EXECUTE: 'deactivate_execute',\n  /**\n   * The state active when the deactivation of the editing tools is in\n   * progress while there are unsaved modifications.\n   * @type {string}\n   */\n  DEACTIVATE_PENDING: 'deactivate_pending',\n  /**\n   * Final state set after the \"stop editing\" button has been clicked while\n   * no unsaved modifications were made or if the user saved them or confirmed\n   * to continue without saving.\n   * @type {string}\n   */\n  STOP_EDITING_EXECUTE: 'stop_editing_execute',\n  /**\n   * The state that is active while when the \"stop editing\" button has been\n   * clicked but before any confirmation has been made to continue.\n   * @type {string}\n   */\n  STOP_EDITING_PENDING: 'stop_editing_pending'\n};\n\n\nexport default exports;\n","/**\n * @module gmf.theme.Manager\n */\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.DataSource\n */\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Select\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A select rule, which allows the selection of multiple values among a list\n   * of choices.\n   *\n   * The expression property holds the list of selected choices, which is\n   * comma-separated.\n   *\n   * @struct\n   * @param {!ngeox.rule.SelectOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = ngeoRuleRule.OperatorType.EQUAL_TO;\n    options.type = ngeoFormatAttributeType.SELECT;\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.choices_ = options.choices;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {Array.<string>} Choices\n   * @export\n   */\n  get choices() {\n    return this.choices_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {Array.<string>} Selected choices\n   * @export\n   */\n  get selectedChoices() {\n    let selectedChoices;\n    if (this.expression) {\n      const stringExpression = String(this.expression);\n      selectedChoices = stringExpression.split(',');\n    } else {\n      selectedChoices = [];\n    }\n    return selectedChoices;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module gmf.editing.EditFeature\n */\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Service that provides methods to get, insert, update and delete vector\n * features with the use of a GeoMapFish Protocol as back-end.\n *\n * The GeoJSON format is used when obtaining or sending features.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n * @ngInject\n */\nconst exports = function($http, gmfLayersUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * Url to the GeoMapFish layers service. Required in applications that use:\n   * - the editfeature tools\n   * - the objectediting tools\n   *\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = gmfLayersUrl;\n\n};\n\n\n/**\n * Build a query to the MapFish protocol to fetch features from a list\n * of layer ids inside a specified extent.\n *\n * @param {Array.<number>} layerIds List of layer ids to get the features from.\n * @param {ol.Extent} extent The extent where to get the features from.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getFeaturesInExtent = function(layerIds, extent) {\n  const url = olUri.appendParams(\n    `${this.baseUrl_}/${layerIds.join(',')}`,\n    {\n      'bbox': extent.join(',')\n    }\n  );\n  return this.http_.get(url).then(this.handleGetFeatures_.bind(this));\n};\n\n\n/**\n * Build a query to the MapFish protocol to fetch features from a list\n * of layer ids and a list of comparison filters.\n *\n * This method is called in the ObjectEditing service, which is injected in\n * the permalink service, i.e. it's always called. Since we don't have to\n * define the url to the GMF Protocol (layers) a dummy promise returns an\n * empty array of features if the url is not defined.\n *\n * @param {!Array.<number>} layerIds List of layer ids to get the features from.\n * @param {!Array.<!gmfx.ComparisonFilter>} filters List of comparison filters\n * @return {angular.$q.Promise} Promise.\n */\nexports.prototype.getFeaturesWithComparisonFilters = function(\n  layerIds, filters\n) {\n  const properties = [];\n  const params = {};\n\n  for (const filter of filters) {\n    params[`${filter.property}__${filter.operator}`] = filter.value;\n    properties.push(filter.property);\n  }\n\n  params['queryable'] = properties.join(',');\n\n  const url = olUri.appendParams(`${this.baseUrl_}/${layerIds.join(',')}`, params);\n  return this.http_.get(url).then(this.handleGetFeatures_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Array.<ol.Feature>} List of features.\n * @private\n */\nexports.prototype.handleGetFeatures_ = function(resp) {\n  return new olFormatGeoJSON().readFeatures(resp.data);\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {Array.<ol.Feature>} features List of features to insert.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.insertFeatures = function(layerId, features) {\n  const url = `${this.baseUrl_}/${layerId}`;\n  const geoJSON = new olFormatGeoJSON().writeFeatures(features);\n  return this.http_.post(url, geoJSON, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {ol.Feature} feature The feature to update.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.updateFeature = function(layerId, feature) {\n  const url = `${this.baseUrl_}/${layerId.toString()}/${feature.getId()}`;\n  const geoJSON = new olFormatGeoJSON().writeFeature(feature);\n  return this.http_.put(url, geoJSON, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {ol.Feature} feature The feature to delete.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.deleteFeature = function(layerId, feature) {\n  const url = `${this.baseUrl_}/${layerId.toString()}/${feature.getId()}`;\n  return this.http_.delete(url, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfEditFeature', []);\nexports.module.service('gmfEditFeature', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.debounce\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.common\n */\nconst exports = {};\nimport {createEditingStyle} from 'ol/style/Style.js';\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultDrawStyleFunction = function() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultModifyStyleFunction = function() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[/**@type {ol.geom.GeometryType} */ ('Point')];\n  };\n};\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.Service\n */\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\n\n/**\n * An \"authentication\" service for a GeoMapFish application. Upon loading, it\n * launches a request to determine whether a user is currently logged in or\n * not.\n *\n * The possible API requests it supports, which are all self-explanatory, are:\n *\n * - changePassword\n * - login\n * - logout\n * - resetPassword\n *\n * @extends {ol.events.EventTarget}\n */\nconst exports = class extends olEventsEventTarget {\n\n  /**\n   * @param {angular.$http} $http Angular http service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angular.Scope} $rootScope The directive's scope.\n   * @param {string} authenticationBaseUrl URL to \"authentication\" web service.\n   * @param {gmfx.User} gmfUser User.\n   * @ngInject\n   */\n  constructor($http, $injector, $rootScope, authenticationBaseUrl, gmfUser) {\n\n    super();\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.$http_ = $http;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$rootScope_ = $rootScope;\n\n    /**\n     * The authentication url without trailing slash\n     * @type {string}\n     * @private\n     */\n    this.baseUrl_ = authenticationBaseUrl.replace(/\\/$/, '');\n\n    /**\n     * @type {gmfx.User}\n     * @private\n     */\n    this.user_ = gmfUser;\n\n    /**\n      * Don't request a new user object from the back-end after\n      * logging out if the logged-in user's role has this role.\n      * @type {?string}\n      * @private\n      */\n    this.noReloadRole_ =  $injector.has('gmfAuthenticationNoReloadRole')\n      ? $injector.get('gmfAuthenticationNoReloadRole')\n      : null;\n\n    this.load_();\n  }\n\n  /**\n   * Load the authentication service, which sends an asynch request to\n   * determine whether the user is currently connected or not.\n   * @private\n   */\n  load_() {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.IS_LOGGED_IN}`;\n    this.$http_.get(url, {withCredentials: true}).then(\n      this.handleLogin_.bind(this, true)\n    );\n  }\n\n  /**\n   * @param {string} oldPwd Old password.\n   * @param {string} newPwd New password.\n   * @param {string} confPwd New password confirmation.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  changePassword(oldPwd, newPwd, confPwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.CHANGE_PASSWORD}`;\n\n    return this.$http_.post(url, $.param({\n      'oldPassword': oldPwd,\n      'newPassword': newPwd,\n      'confirmNewPassword': confPwd\n    }), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    }).then(((response) => {\n      this.user_.is_password_changed = true;\n      this.$rootScope_.$digest();\n    }).bind(this));\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @param {string} pwd Password.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  login(login, pwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGIN}`;\n\n    return this.$http_.post(url, $.param({'login': login, 'password': pwd}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    }).then(\n      this.handleLogin_.bind(this, false));\n  }\n\n  /**\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  logout() {\n    const noReload = this.user_['role_name'] === this.noReloadRole_;\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGOUT}`;\n    return this.$http_.get(url, {withCredentials: true}).then(() => {\n      this.resetUser_(noReload);\n    });\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  resetPassword(login) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.RESET_PASSWORD}`;\n\n    /**\n     * @param {angular.$http.Response} resp Ajax response.\n     * @return {gmfx.AuthenticationDefaultResponse} Response.\n     */\n    const successFn = function(resp) {\n      const respData = /** @type gmfx.AuthenticationDefaultResponse} */ (\n        resp.data);\n      return respData;\n    }.bind(this);\n\n    return this.$http_.post(url, $.param({'login': login}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n    }).then(successFn);\n  }\n\n  /**\n   * @return {?gmfx.AuthenticationFunctionalities} The role functionalities.\n   */\n  getFunctionalities() {\n    return this.user_.functionalities;\n  }\n\n  /**\n   * @return {number|null} The role ID.\n   */\n  getRoleId() {\n    return this.user_.role_id;\n  }\n\n  /**\n   * @param {boolean} checkingLoginStatus Checking the login status?\n   * @param {angular.$http.Response} resp Ajax response.\n   * @return {angular.$http.Response} Response.\n   * @private\n   */\n  handleLogin_(checkingLoginStatus, resp) {\n    const respData = /** @type {gmfx.AuthenticationLoginResponse} */ (resp.data);\n    this.setUser_(respData, !checkingLoginStatus);\n    if (checkingLoginStatus) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('ready', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n    return resp;\n  }\n\n  /**\n   * @param {gmfx.AuthenticationLoginResponse} respData Response.\n   * @param {boolean} emitEvent Emit a login event?\n   * @private\n   */\n  setUser_(respData, emitEvent) {\n    for (const key in respData) {\n      this.user_[key] = respData[key];\n    }\n    if (emitEvent && respData.username !== undefined) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('login', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @private\n   * @param {boolean} noReload Don't request a new user object from\n   * the back-end after logging out, defaults to false.\n   */\n  resetUser_(noReload) {\n    noReload = noReload || false;\n    for (const key in this.user_) {\n      this.user_[key] = null;\n    }\n    /** @type {gmfx.AuthenticationEvent} */\n    const event = new ngeoCustomEvent('logout', {user: this.user_});\n    this.dispatchEvent(event);\n    if (!noReload) {\n      this.load_();\n    }\n  }\n};\n\n/**\n * @enum {string}\n */\nexports.RouteSuffix = {\n  CHANGE_PASSWORD: 'loginchange',\n  IS_LOGGED_IN: 'loginuser',\n  LOGIN: 'login',\n  LOGOUT: 'logout',\n  RESET_PASSWORD: 'loginresetpassword'\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfAuthenticationService', []);\nexports.module.service('gmfAuthenticationService', exports);\n\nexports.module.value('gmfUser', {\n  'functionalities': null,\n  'is_password_changed': null,\n  'role_id': null,\n  'role_name': null,\n  'username': null\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.Time\n */\n/**\n * ngeo - Time service\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoTime\n */\nconst exports = function() {};\n\n/**\n * @param {number|string|null} value The value\n * @param {Date} defaultValue The default value\n * @return {Date} the date\n */\nexports.prototype.createDate = function(value, defaultValue = null) {\n  return value !== null ? new Date(value) : defaultValue;\n};\n\n/**\n * @param {Date} date The date\n * @param {number|null=} defaultValue The default value\n * @return {number|null} the time\n */\nexports.prototype.getTime = function(date, defaultValue = null) {\n  return date ? date.getTime() : defaultValue;\n};\n\n/**\n * Get options regarding the time property of a node;\n *\n * @param {ngeox.TimeProperty} time the time property of a node\n * @return {{\n *  minDate : number,\n *  maxDate : number,\n *  values : (Array<number>|number)\n * }} - Configuration for the UI components\n * @export\n */\nexports.prototype.getOptions = function(time) {\n\n  const minDate = this.createDate(time.minValue);\n  const maxDate = this.createDate(time.maxValue);\n\n  const minDefaultDate = this.createDate(time.minDefValue, minDate);\n  const maxDefaultDate = this.createDate(time.maxDefValue, maxDate);\n\n  const defaultValues = (time.mode === 'range') ?\n    [this.getTime(minDefaultDate), this.getTime(maxDefaultDate)] :\n    this.getTime(minDefaultDate);\n\n  return {\n    minDate: this.getTime(minDate),\n    maxDate: this.getTime(maxDate),\n    values: defaultValues\n  };\n};\n\n\n/**\n * Time.prototype.getUTCDate - Get UTC date from a local date object\n *\n * @param  {Object} localDate loacl date object in\n * @return {Object} UTC date\n * @export\n */\nexports.prototype.getUTCDate = function(localDate) {\n  return new Date(\n    localDate.getUTCFullYear(),\n    localDate.getUTCMonth(),\n    localDate.getUTCDate());\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoTime', []);\nexports.module.service('ngeoTime', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.DrawAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionPointer, {handleEvent as pointerHandleEvent} from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultDrawStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return pointerHandleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  /** @type {ngeox.DrawEvent} */\n  const evt = new ngeoCustomEvent('drawstart', {feature: this.sketchFeature_});\n  this.dispatchEvent(evt);\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  /** @type {ngeox.DrawEvent} */\n  const event = new ngeoCustomEvent('drawend', {feature: this.sketchFeature_});\n  this.dispatchEvent(event);\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olProjProjection from 'ol/proj/Projection.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ngeox.MeasureEvent\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, options = /** @type {ngeox.interaction.MeasureOptions} */({})) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), olProjProjection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.message.popupComponent\n */\n\nimport 'angular-sanitize';\n\n\nconst exports = angular.module('ngeoPopup', [\n  'ngSanitize',\n]);\n\n\nexports.value('ngeoPopupTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoPopupTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/message/popupcomponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/message/popupcomponent', require('./popupcomponent.html'));\n});\n\n\n/**\n * Provides a directive used to show a popup over the page with\n * a title and content.\n *\n *\n * Things to know about this directive:\n *\n * - This directive is intended to be used along with the popup service.\n *\n * - By default the directive uses \"popup.html\" as its templateUrl. This can be\n *   changed by redefining the \"ngeoPopupTemplateUrl\" value.\n *\n * - The directive doesn't create any scope but relies on its parent scope.\n *   Properties like 'content', 'title' or 'open' come from the parent scope.\n *\n * @private\n * @param {string} ngeoPopupTemplateUrl URL to popup template.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoPopup\n */\nexports.directive_ = function(ngeoPopupTemplateUrl) {\n  return {\n    restrict: 'A',\n    templateUrl: ngeoPopupTemplateUrl,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      element.addClass('popover');\n\n      /**\n       * @param {jQuery.Event} evt Event.\n       */\n      scope.close = function(evt) {\n        if (evt) {\n          evt.stopPropagation();\n          evt.preventDefault();\n        }\n        element.addClass('hidden');\n      };\n\n      // Watch the open property\n      scope.$watch('open', (newVal, oldVal) => {\n        element.css('display', newVal ? 'block' : 'none');\n      });\n    }\n  };\n};\n\nexports.directive('ngeoPopup', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Popup\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * This goog.require is needed because of 'ngeo-popup' used in\n * the template.\n * @suppress {extraRequire}\n */\nimport ngeoMessagePopupComponent from 'ngeo/message/popupComponent.js';\n\n/**\n * Provides a factory to create a popup in the page.\n * The factory returns a ngeo.message.Popup object.\n *\n * Example:\n *\n *     let popup = ngeoCreatePopup();\n *     popup.setTitle(\"A title\");\n *     popup.setContent(\"Some content\");\n *     popup.setOpen(true);\n *\n * @constructor\n * @struct\n * @param {angular.$compile} $compile The compile provider.\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoCreatePopup\n */\nconst exports = function($compile, $rootScope, $sce, $timeout) {\n\n  /**\n   * The scope the compiled element is link to.\n   * @type {angular.Scope}\n   * @export\n   */\n  this.scope = $rootScope.$new(true);\n\n  // manage the auto destruction of the popup\n  this.scope.$watch(\n    () => this.scope['open'],\n    (open) => {\n      if (!open && this.autoDestroy_) {\n        this.timeout_(() => {\n          this.destroy();\n        });\n      }\n    }\n  );\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * The element.\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = angular.element('<div ngeo-popup></div>');\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoDestroy_ = false;\n\n\n  // Compile the element, link it to the scope and add it to the document.\n  $compile(this.element_)(this.scope);\n  angular.element(document.body).append(this.element_);\n};\n\n\n/**\n * Get the current popup state.\n * @return {boolean} `true` if the popup is currently, otherwise `false`.\n * @export\n */\nexports.prototype.getOpen = function() {\n  return this.scope['open'];\n};\n\n\n/**\n * Show/hide the popup.\n * @param {boolean} open `true` to show the popup, `false` to hide it.\n * @export\n */\nexports.prototype.setOpen = function(open) {\n  this.scope['open'] = open;\n};\n\n\n/**\n * Destroy the popup.\n * @export\n */\nexports.prototype.destroy = function() {\n  this.scope.$destroy();\n  this.element_.remove();\n};\n\n\n/**\n * Set the popup's title.\n * @param {string} title The title.\n * @export\n */\nexports.prototype.setTitle = function(title) {\n  const trustedTitle = this.sce_.trustAsHtml(title);\n  this.scope['title'] = trustedTitle;\n};\n\n\n/**\n * Set the popup's content.\n * Note: the type of the `content` param is `*` instead of `string`, this\n * is because the content may be trusted using `$sce.trustAsHtml`.\n * @param {*} content The content.\n * @param {boolean=} opt_trusted Whether the content can be trusted.\n *     Default is false.\n * @export\n */\nexports.prototype.setContent = function(content, opt_trusted) {\n  this.scope['content'] = opt_trusted ? this.sce_.trustAsHtml(/** @type {string} */ (content)) : content;\n};\n\n\n/**\n * Set the popup's content with an iframe using the given url.\n * @param {string} url The url of the page.\n * @export\n */\nexports.prototype.setUrl = function(url) {\n  const content = this.sce_.trustAsHtml(\n    `<iframe src=\"${url}\" width=\"100%\" height=\"100%\"></iframe>`\n  );\n  this.setContent(content);\n};\n\n\n/**\n * Set the popup's width.\n * @param {string} width Width the popup should have.\n * @export\n */\nexports.prototype.setWidth = function(width) {\n  this.element_.width(width);\n};\n\n\n/**\n * Set the popup's height.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setHeight = function(height) {\n  this.element_.height(height);\n};\n\n\n/**\n * Set the popup's width and height.\n * @param {string} width Width the popup should have.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setSize = function(width, height) {\n  this.setWidth(width);\n  this.setHeight(height);\n};\n\n\n/**\n * Set the popup's autoDestroy property.\n * @param {boolean} autoDestroy Whether to automatically destroy the popup when\n *     being closed or not.\n * @export\n */\nexports.prototype.setAutoDestroy = function(autoDestroy) {\n  this.autoDestroy_ = autoDestroy;\n};\n\n\n/**\n * Add an extra CSS class name to the popup.\n * @param {string} cls Class name to add to the popup element.\n * @export\n */\nexports.prototype.addClass = function(cls) {\n  this.element_.addClass(cls);\n};\n\n\n/**\n * Open a popup with the given properties.\n * @param {ngeox.PopupOptions} options Options.\n * @export\n */\nexports.prototype.open = function(options) {\n\n  if (options.url) {\n    this.setUrl(options.url);\n  } else if (options.content) {\n    this.setContent(options.content);\n  } else {\n    googAsserts.fail('ngeo.message.Popup options requirest \"url\" or \"content\".');\n  }\n\n  if (options.autoDestroy !== undefined) {\n    this.setAutoDestroy(options.autoDestroy);\n  }\n\n  if (options.cls !== undefined) {\n    this.addClass(options.cls);\n  }\n\n  if (options.height !== undefined) {\n    this.setHeight(options.height);\n  }\n\n  if (options.title !== undefined) {\n    this.setTitle(options.title);\n  }\n\n  if (options.width !== undefined) {\n    this.setWidth(options.width);\n  }\n\n  this.setOpen(true);\n};\n\n\n/**\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.Scope} $rootScope Angular rootScope service.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.PopupFactory} The function to create a popup.\n * @ngInject\n */\nexports.Factory = function($compile, $rootScope, $sce, $timeout) {\n  return (\n    /**\n     * @return {!ngeo.message.Popup} The popup instance.\n     */\n    function() {\n      return new exports($compile, $rootScope, $sce, $timeout);\n    }\n  );\n};\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoCreatePopup', [\n  ngeoMessagePopupComponent.name,\n]);\nexports.module.factory('ngeoCreatePopup', exports.Factory);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach((feature) => {\n      this.addFeature(feature);\n    });\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.XSDAttribute\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttribute from 'ngeo/format/Attribute.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\n\n/**\n * @classdesc\n * Reads attributes that are defined in XSD format and return them as a list.\n *\n * @constructor\n * @struct\n * @extends {ol.format.XML}\n */\nconst exports = function() {\n  olFormatXML.call(this);\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Array.<ngeox.Attribute>} The parsed result.\n * @override\n */\nexports.prototype.read = function(source) {\n  return (\n    /** @type {Array.<ngeox.Attribute>} */ olFormatXML.prototype.read.call(this, source)\n  );\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromDocument = function(doc) {\n  googAsserts.assert(doc.nodeType == Node.DOCUMENT_NODE,\n    'doc.nodeType should be DOCUMENT');\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromNode = function(node) {\n  googAsserts.assert(node.nodeType == Node.ELEMENT_NODE,\n    'node.nodeType should be ELEMENT');\n  googAsserts.assert(node.localName == 'schema',\n    'localName should be schema');\n\n  let elements = node.getElementsByTagName('element');\n  if (!elements.length) {\n    elements = node.getElementsByTagName('xsd:element');\n  }\n  const attributes = [];\n\n  let attribute;\n  for (let i = 0, ii = elements.length; i < ii; i++) {\n    attribute = this.readFromElementNode_(elements[i]);\n    if (attribute) {\n      attributes.push(attribute);\n    }\n  }\n\n  return attributes;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {?ngeox.Attribute} An attribute object.\n * @private\n */\nexports.prototype.readFromElementNode_ = function(node) {\n\n  const name = node.getAttribute('name');\n  googAsserts.assertString(name, 'name should be defined in element node.');\n\n  const alias = node.getAttribute('alias');\n  const nillable = node.getAttribute('nillable');\n  const required = !(nillable === true || nillable === 'true');\n\n  const attribute = {\n    name,\n    alias,\n    required\n  };\n\n  const type = node.getAttribute('type');\n  if (type) {\n    if (!ngeoFormatAttribute.setGeometryType(attribute, type)) {\n      this.setAttributeByXsdType_(attribute, type);\n    }\n  } else {\n\n    // Attribute has no type defined on 'element' node.  Try:\n\n    // (1) Enumerations\n    let enumerations = node.getElementsByTagName('enumeration');\n    if (!enumerations.length) {\n      enumerations = node.getElementsByTagName('xsd:enumeration');\n    }\n    if (enumerations.length) {\n      attribute.type = ngeoFormatAttributeType.SELECT;\n      const choices = [];\n      for (let i = 0, ii = enumerations.length; i < ii; i++) {\n        choices.push(enumerations[i].getAttribute('value'));\n      }\n      attribute.choices = choices;\n    } else {\n      // (2) Other types with restrictions\n      let restrictions = node.getElementsByTagName('restriction');\n      if (!restrictions.length) {\n        restrictions = node.getElementsByTagName('xsd:restriction');\n      }\n      if (restrictions.length && restrictions[0]) {\n        const restrictionNode = restrictions[0];\n        this.setAttributeByXsdType_(\n          attribute,\n          restrictionNode.getAttribute('base')\n        );\n        // MaxLength\n        let maxLengths = node.getElementsByTagName('maxLength');\n        if (!maxLengths.length) {\n          maxLengths = node.getElementsByTagName('xsd:maxLength');\n        }\n        if (maxLengths.length && maxLengths[0]) {\n          attribute.maxLength = Number(maxLengths[0].getAttribute('value'));\n        }\n      }\n    }\n  }\n\n  if (!attribute.type) {\n    return null;\n  }\n\n  googAsserts.assert(attribute.type);\n\n  return attribute;\n};\n\n\n/**\n * Set the `type` and `numType` properties of an attribute depending on the\n * given xsdType.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type The xsd type.\n * @private\n */\nexports.prototype.setAttributeByXsdType_ = function(\n  attribute, type\n) {\n  if (type === 'xsd:boolean') {\n    attribute.type = ngeoFormatAttributeType.BOOLEAN;\n  } else if (type === 'xsd:date') {\n    attribute.type = ngeoFormatAttributeType.DATE;\n  } else if (type === 'xsd:dateTime') {\n    attribute.type = ngeoFormatAttributeType.DATETIME;\n  } else if (type === 'xsd:time') {\n    attribute.type = ngeoFormatAttributeType.TIME;\n  } else if (type === 'xsd:decimal' || type === 'xsd:double') {\n    attribute.type = ngeoFormatAttributeType.NUMBER;\n    attribute.numType = exports.NumberType.FLOAT;\n  } else if (type === 'xsd:integer') {\n    attribute.type = ngeoFormatAttributeType.NUMBER;\n    attribute.numType = exports.NumberType.INTEGER;\n  } else if (type === 'xsd:string') {\n    attribute.type = ngeoFormatAttributeType.TEXT;\n  }\n};\n\n\n/**\n * Returns the first geometry attribute among a given list of attributes.\n * @param {Array.<ngeox.Attribute>} attributes The list of attributes.\n * @return {?ngeox.Attribute} A geometry attribute object.\n */\nexports.getGeometryAttribute = function(attributes) {\n  let geomAttribute = null;\n  for (let i = 0, ii = attributes.length; i < ii; i++) {\n    if (attributes[i].type === ngeoFormatAttributeType.GEOMETRY) {\n      geomAttribute = attributes[i];\n      break;\n    }\n  }\n  return geomAttribute;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.NumberType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  FLOAT: 'float',\n  /**\n   * @type {string}\n   * @export\n   */\n  INTEGER: 'integer'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.WFSDescribeFeatureType\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\nimport * as olXml from 'ol/xml.js';\n\n/**\n * @classdesc\n * Format for reading WFS DescribeFeatureType data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst exports = function() {\n\n  olFormatXML.call(this);\n\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * Read a WFS DescribeFeatureType document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WFS DescribeFeatureType.\n * @api\n */\nexports.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromNode = function(node) {\n  let result = {};\n  result = olXml.pushParseAndPop(\n    result,\n    exports.PARSERS_,\n    node,\n    []\n  );\n  return result;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Attributes.\n */\nexports.readElement_ = function(node, objectStack) {\n  const attributes = {};\n  for (let i = 0, len = node.attributes.length; i < len; i++) {\n    const attribute = node.attributes.item(i);\n    attributes[attribute.name] = attribute.value;\n  }\n  if (objectStack.length === 1) {\n    // remove namespace from type\n    attributes['type'] = attributes['type'].split(':').pop();\n  }\n  return attributes;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexType_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const object = olXml.pushParseAndPop(\n    {'name': name},\n    exports.COMPLEX_TYPE_PARSERS_,\n    node, objectStack\n  );\n  // flatten\n  object['complexContent'] =\n    object['complexContent']['extension']['sequence']['element'];\n  return object;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexContent_ = function(\n  node, objectStack\n) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.COMPLEX_CONTENT_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readExtension_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.EXTENSION_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readSequence_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.SEQUENCE_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nexports.NAMESPACE_URIS_ = [\n  null,\n  'http://www.w3.org/2001/XMLSchema'\n];\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    ),\n    'complexType': olXml.makeObjectPropertyPusher(\n      exports.readComplexType_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_TYPE_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'complexContent': olXml.makeObjectPropertySetter(\n      exports.readComplexContent_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_CONTENT_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'extension': olXml.makeObjectPropertySetter(\n      exports.readExtension_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.EXTENSION_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'sequence': olXml.makeObjectPropertySetter(\n      exports.readSequence_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.SEQUENCE_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    )\n  }));\n\n\nexport default exports;\n","/**\n * @module ngeo.query.Querent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport ngeoWFSDescribeFeatureType from 'ngeo/WFSDescribeFeatureType.js';\nimport olFormatWMSCapabilities from 'ol/format/WMSCapabilities.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport * as olObj from 'ol/obj.js';\nimport * as olUri from 'ol/uri.js';\nimport * as olExtent from 'ol/extent.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Querent is a service that issues all sorts of queries using\n   * ngeo data sources. It does not store the result. Instead, it returns it\n   * using promises. Any component that inject this service can use it to\n   * make it issue its own queries and do whatever it wants with the result.\n   *\n   * It supports sending OGC requests and parse the response, such as:\n   * - WFS DescribeFeatureType\n   * - WFS GetFeature\n   * - WMS GetCapabilites\n   * - WMS GetFeatureInfo\n   * - WMTS GetCapabilities\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($http, $q, ngeoRuleHelper, ngeoWMSTime) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n\n    // === Other properties ===\n\n    /**\n     * Promises that can be resolved to cancel started requests.\n     * @type {!Array.<angular.$q.Deferred>}\n     * @private\n     */\n    this.requestCancelers_ = [];\n\n    /**\n     * Cache of promises for WMS GetCapabilities requests. They key is the\n     * online resource base url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmsGetCapabilitiesPromises_ = {};\n\n    /**\n     * Cache of promises for WMST GetCapabilities requests. They key is the\n     * url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmtsGetCapabilitiesPromises_ = {};\n  }\n\n\n  // === PUBLIC methods ===\n\n  /**\n   * Issue WMS GetFeatureInfo and/or WFS GetFeature requests using the given\n   * data sources, map and optional filters.\n   *\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  issue(options) {\n\n    const promises = [];\n    const map = options.map;\n\n    // (1) Cancel requests that are still running\n    this.cancelStillRunningRequests_();\n\n    // (2) Get queryable data sources\n    let queryableDataSources;\n    if (options.queryableDataSources) {\n      queryableDataSources = options.queryableDataSources;\n    } else {\n      const dataSources = options.dataSources;\n      googAsserts.assert(dataSources, 'DataSources should be set');\n      queryableDataSources = this.getQueryableDataSources(dataSources, map);\n    }\n\n    // (3) Combine data sources that support WFS and issue WFS queries.\n    //     The 'bbox' ('extent' option) is not required for WFS requests to\n    //     be issued.\n    const combinedWFSDataSources = this.getCombinableWFSDataSources_(\n      queryableDataSources.wfs);\n    promises.push(this.issueCombinedWFS_(combinedWFSDataSources, options));\n\n    // (4) Combine data sources that support WMS and issue WMS queries.\n    //     Only occurs if the `coordinate` option is set, because it's required\n    //     by WMS GetFeatureInfo requests.\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const combinedWMSDataSources = this.getCombinableWMSDataSources_(\n        queryableDataSources.wms);\n      promises.push(this.issueCombinedWMS_(combinedWMSDataSources, options));\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Browse a given list of data sources. Return 2 lists of data sources that\n   * are queryable, the first one being those that support WFS and the other\n   * WMS only. This means that WFS is always favored first, then WMS.\n   *\n   * The map view resolution determines if the inner ogc layers are in range.\n   *\n   * @param {!Array.<!ngeo.datasource.DataSource>} dataSources Data sources\n   * @param {ol.Map} map Map.\n   * @return {!ngeox.QueryableDataSources} Queryable data sources.\n   * @export\n   */\n  getQueryableDataSources(dataSources, map) {\n\n    const queryableDataSources = {\n      wfs: [],\n      wms: []\n    };\n    const resolution = googAsserts.assertNumber(map.getView().getResolution());\n\n    for (const dataSource of dataSources) {\n\n      // (1) Skip data source that can't be queried\n      if (!this.isDataSourceQueryable_(dataSource, resolution)) {\n        continue;\n      }\n\n      if (dataSource instanceof ngeoDatasourceOGC) {\n        // (2) Split data sources\n        if (dataSource.supportsWFS) {\n          queryableDataSources.wfs.push(dataSource);\n        } else {\n          queryableDataSources.wms.push(dataSource);\n        }\n      }\n    }\n\n    return queryableDataSources;\n  }\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  wfsDescribeFeatureType(dataSource) {\n\n    googAsserts.assert(\n      dataSource.supportsAttributes,\n      `The data source must support WFS, have a single OGCLayer that\n      is queryable in order to issue WFS DescribeFeatureType requests`\n    );\n\n    const ogcLayerNames = dataSource.getOGCLayerNames();\n\n    const url = olUri.appendParams(\n      googAsserts.assertString(dataSource.wfsUrl),\n      {\n        'REQUEST': 'DescribeFeatureType',\n        'SERVICE': 'WFS',\n        'VERSION': '2.0.0',\n        'TYPENAME': ogcLayerNames\n      }\n    );\n\n    return this.http_.get(url).then((response) => {\n      const format = new ngeoWFSDescribeFeatureType();\n      return format.read(response.data);\n    });\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMS layer capabilities\n   * @param {string} layerName Name of the WMS layer\n   * @return {?Object} Found WMS layer capability\n   * @export\n   */\n  wmsFindLayerCapability(layerCapabilities, layerName) {\n\n    let found = null;\n\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Name'] === layerName) {\n        found = layerCapability;\n        break;\n      } else if (layerCapability['Layer']) {\n        found = this.wmsFindLayerCapability(\n          layerCapability['Layer'], layerName);\n        if (found) {\n          break;\n        }\n      }\n    }\n\n    return found;\n  }\n\n  /**\n   * @param {string} baseUrl Base url of the WMS server.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmsGetCapabilities(baseUrl, opt_cache) {\n\n    const cache = opt_cache !== false;\n\n    const params = {\n      'REQUEST': 'GetCapabilities',\n      'SERVICE': 'WMS',\n      'VERSION': '1.3.0'\n    };\n\n    const url = olUri.appendParams(baseUrl, params);\n    let promise;\n\n    if (!cache || !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.wmsGetCapabilitiesPromises_[baseUrl];\n    }\n\n    googAsserts.assert(promise);\n\n    if (cache && !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      this.wmsGetCapabilitiesPromises_[baseUrl] = promise;\n    }\n\n    return promise;\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMTS layer capabilities\n   * @param {string} layerName Name of the WMTS layer, a.k.a. the identifier.\n   * @return {?Object} Found WTMS layer capability\n   * @export\n   */\n  wmtsFindLayerCapability(layerCapabilities, layerName) {\n    let found = null;\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Identifier'] === layerName) {\n        found = layerCapability;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @param {string} url Url of the WMTS server. Note that it must contain\n   *     all required arguments.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmtsGetCapabilities(url, opt_cache) {\n\n    const cache = opt_cache !== false;\n    let promise;\n\n    if (!cache || !this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMTSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.wmtsGetCapabilitiesPromises_[url];\n    }\n\n    googAsserts.assert(promise);\n\n    if (cache && !this.wmtsGetCapabilitiesPromises_[url]) {\n      this.wmtsGetCapabilitiesPromises_[url] = promise;\n    }\n\n    return promise;\n  }\n\n\n  // === PRIVATE methods ===\n\n  /**\n   * Handles the response of multiple promises that did either\n   * WMS GetFeatureInfo or WFS GetFeature requests, in which the result is\n   * a hash with key being the data source id and value the array of features.\n   *\n   * The response object itself is an array, one item being one result per\n   * promise. The idea is to return a single hash by combining the result\n   * objects.\n   *\n   * The keys are always unique, i.e. there can be multiple result objects for\n   * the same data source id.\n   *\n   * @param {!Array.<ngeox.QuerentResult>} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleCombinedQueryResult_(response) {\n    const combinedHash = {};\n    for (const hash of response) {\n      for (const dataSourceIdStr in hash) {\n        const dataSourceId = Number(dataSourceIdStr);\n        combinedHash[dataSourceId] = hash[dataSourceId];\n      }\n    }\n    return combinedHash;\n  }\n\n\n  /**\n   * Handles the result of a single WMS GetFeatureInfo or WFS GetFeature\n   * request. Read features from the response and return them.\n   *\n   * @param {!Array.<!ngeo.datasource.OGC>} dataSources List of\n   *     queryable data sources that were used to do the query.\n   * @param {number} limit The maximum number of features to get with the query.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {angular.$http.Response|number} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleQueryResult_(dataSources, limit, wfs, response) {\n    const hash = {};\n\n    for (const dataSource of dataSources) {\n      let features;\n      let tooManyFeatures;\n      let totalFeatureCount;\n\n      if (typeof response === 'number') {\n        features = [];\n        tooManyFeatures = true;\n        totalFeatureCount = response;\n      } else {\n        if (dataSource instanceof ngeoDatasourceOGC) {\n          features = this.readAndTypeFeatures_(dataSource, response.data, wfs);\n        } else {\n          features = [];\n        }\n      }\n      const dataSourceId = dataSource.id;\n      this.setUniqueIds_(features, dataSource.id);\n      hash[dataSourceId] = {\n        features,\n        limit,\n        tooManyFeatures,\n        totalFeatureCount\n      };\n    }\n\n    return hash;\n  }\n\n  /**\n   * Read and assign the type of the feature to each feature in the data.\n   * The type will be stocked in the properties of the features as\n   * \"ngeo_feature_type_\".\n   * @param {ngeo.datasource.OGC} dataSource used to read the features.\n   * @param {Document | Node | Object | string} data the response data.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @return {Array.<ol.Feature>} returned features with a type in each features.\n   * @private\n   */\n  readAndTypeFeatures_(dataSource, data, wfs) {\n    const features = [];\n    let readFeatures;\n    // Copy the types to be able to set it AND iterate on it.\n    const featureTypes = this.getSetOlFormatTypes_(dataSource, wfs).slice();\n    featureTypes.forEach((type) => {\n      // Assign temporarily a single feature type to read features separately.\n      this.getSetOlFormatTypes_(dataSource, wfs, [type]);\n      if (wfs) {\n        readFeatures = dataSource.wfsFormat.readFeatures(data);\n      } else {\n        readFeatures = dataSource.wmsFormat.readFeatures(data);\n      }\n      if (readFeatures.length > 0) {\n        readFeatures.forEach((feature) => {\n          feature.set('ngeo_feature_type_', type);\n          features.push(feature);\n        });\n      }\n    });\n    // Re-set the value to the datasource.xxxFormat to be able to re-use\n    // it later (in another query);\n    this.getSetOlFormatTypes_(dataSource, wfs, featureTypes);\n    return features;\n  }\n\n  /**\n   * Return the types defined in the format of the datasource. Can set the\n   * types if one is given.\n   * @param {ngeo.datasource.OGC} dataSource that contains the format object.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {Array.<string>=} opt_types An array of type if you want to set the\n   *     type of the format object.\n   * @return {Array.<string>} The types defined in the format.\n   * @private\n   */\n  getSetOlFormatTypes_(dataSource, wfs, opt_types) {\n    let types;\n    if (wfs) {\n      if (opt_types) {\n        dataSource.wfsFormat.setFeatureType(opt_types);\n      }\n      types = dataSource.wfsFormat.getFeatureType();\n    } else {\n      if (opt_types) {\n        dataSource.wmsFormat.setLayers(opt_types);\n      }\n      types = dataSource.wmsFormat.getLayers();\n    }\n    if (!types) {\n      return [];\n    }\n    return (Array.isArray(types)) ? types : [types];\n  }\n\n  /**\n   * Issue WFS GetFeature requests using the given combined data sources, map\n   * and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWFS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const maxFeatures = googAsserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = googAsserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const srsName = projection.getCode();\n    const wfsCount = options.wfsCount === true;\n\n    // (1) Extent (bbox), which is optional, i.e. its value can stay undefined\n    let bbox;\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const tolerancePx = options.tolerancePx;\n      googAsserts.assert(tolerancePx);\n      const tolerance = tolerancePx * resolution;\n      bbox = olExtent.buffer(\n        olExtent.createOrUpdateFromCoordinate(coordinate),\n        tolerance\n      );\n    } else {\n      bbox = options.extent;\n    }\n\n    // (2) Launch one request per combinaison of data sources\n    const wfsFormat = new olFormatWFS();\n    const xmlSerializer = new XMLSerializer();\n    for (const dataSources of combinedDataSources) {\n\n      let getFeatureCommonOptions;\n      let featureNS;\n      let featureTypes = [];\n      let url;\n      const params = {};\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!getFeatureCommonOptions) {\n          featureNS = dataSource.wfsFeatureNS;\n          const featurePrefix = dataSource.wfsFeaturePrefix;\n          const geometryName = dataSource.geometryName;\n          const outputFormat = dataSource.wfsOutputFormat;\n\n          getFeatureCommonOptions = {\n            bbox,\n            featureNS,\n            featurePrefix,\n            geometryName,\n            outputFormat,\n            srsName\n          };\n\n          url = dataSource.wfsUrl;\n\n          // All data sources combined share the same active dimensions\n          olObj.assign(params, dataSource.activeDimensions);\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        featureTypes = featureTypes.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Add filter, if any. If the case, then only one data source\n        //     is expected to be used for this request.\n        let filter;\n        if (options.filter) {\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            filter: options.filter,\n            incTime: true\n          });\n        } else if ((dataSource.filterRules && dataSource.filterRules.length) ||\n            dataSource.timeRangeValue) {\n\n          googAsserts.assert(\n            dataSources.length === 1,\n            `A data source having filterRules or timeRangeValue should issue\n            a single query, alone.`\n          );\n\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            incTime: true,\n            srsName: srsName\n          });\n        }\n\n        if (filter) {\n          getFeatureCommonOptions['filter'] = filter;\n        }\n      }\n\n      googAsserts.assert(getFeatureCommonOptions);\n      getFeatureCommonOptions.featureTypes = featureTypes;\n      googAsserts.assert(url);\n\n      // (4) Build query then launch\n      //\n      //     If we require to do a WFS GetFeature request with\n      //     `resultType: 'hits'` first, do so. In that case, if there would\n      //     be too many features returned, no GetFeature is done thereafter\n      //     and the data sources will return empty arrays in the returned\n      //     response.\n      //\n      //     If we do not need to count features first, then proceed with\n      //     an normal WFS GetFeature request.\n      const getFeatureDefer = this.q_.defer();\n      promises.push(\n        getFeatureDefer.promise.then(\n          this.handleQueryResult_.bind(this, dataSources, maxFeatures, true)\n        )\n      );\n\n      // (4.1) Count, if required\n      let countPromise;\n      if (wfsCount) {\n        const getCountOptions = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n          olObj.assign(\n            {\n              resultType: 'hits'\n            },\n            getFeatureCommonOptions\n          )\n        );\n        const featureCountXml = wfsFormat.writeGetFeature(getCountOptions);\n        const featureCountRequest = xmlSerializer.serializeToString(\n          featureCountXml);\n        const canceler = this.registerCanceler_();\n        countPromise = this.http_.post(\n          url,\n          featureCountRequest,\n          {\n            params: params,\n            headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n            timeout: canceler.promise\n          }\n        ).then(((response) => {\n          const meta = dataSources[0].wfsFormat.readFeatureCollectionMetadata(\n            response.data\n          );\n          return meta['numberOfFeatures'];\n        }).bind(this));\n      } else {\n        countPromise = this.q_.resolve();\n      }\n\n      // (4.2) After count, do GetFeature (if required)\n      countPromise.then((numberOfFeatures) => {\n        // `true` is returned if a count request was made AND there would\n        // be too many features.\n        if (numberOfFeatures === undefined || numberOfFeatures < maxFeatures) {\n\n          const getFeatureOptions = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n            olObj.assign(\n              {\n                maxFeatures\n              },\n              getFeatureCommonOptions\n            )\n          );\n          const featureRequestXml = wfsFormat.writeGetFeature(\n            getFeatureOptions);\n          const featureRequest = xmlSerializer.serializeToString(\n            featureRequestXml);\n          googAsserts.assertString(url);\n          const canceler = this.registerCanceler_();\n          this.http_.post(\n            url,\n            featureRequest,\n            {\n              params: params,\n              headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n              timeout: canceler.promise\n            }\n          ).then((response) => {\n            getFeatureDefer.resolve(response);\n          });\n\n        } else {\n          getFeatureDefer.resolve(numberOfFeatures);\n        }\n      });\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Issue WMS GetFeatureInfo requests using the given combined data sources,\n   * map and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWMS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const FEATURE_COUNT = googAsserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = googAsserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const projCode = projection.getCode();\n\n    // (1) Coordinate, which is required to issue WMS GetFeatureInfo requests\n    const coordinate = options.coordinate;\n    googAsserts.assert(coordinate);\n\n    // (2) Launch one request per combinaison of data sources\n    for (const dataSources of combinedDataSources) {\n\n      let url;\n      let LAYERS = [];\n      let INFO_FORMAT;\n      let activeDimensionsSet = false;\n      const params = {};\n      let filterString = null;\n      let filtrableLayerName = null;\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!INFO_FORMAT) {\n          INFO_FORMAT = dataSource.wmsInfoFormat;\n          url = dataSource.wmsUrl;\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        LAYERS = LAYERS.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Manage active dimensions, which are added directly to the\n        //     query parameters. Note that this occurs only ONCE, i.e.\n        //     for the first data source, because all data sources here have\n        //     been combined together, therefore they share the same active\n        //     dimensions.\n        if (!activeDimensionsSet) {\n          olObj.assign(params, dataSource.activeDimensions);\n          activeDimensionsSet = true;\n        }\n\n        // (d) Add filter, if any. If there is a filter on the data source,\n        //     then it is expected that one request will be sent for this\n        //     data source only.\n        if (dataSource.filterRules && dataSource.filterRules.length) {\n          googAsserts.assert(dataSources.length === 1);\n          filtrableLayerName = dataSource.getFiltrableOGCLayerName();\n          filterString = this.ngeoRuleHelper_.createFilterString({\n            dataSource: dataSource,\n            srsName: projCode\n          });\n        }\n\n        // (e) Add TIME parameter if the data source has a time range value.\n        //     If that's the case, then it is expected that one request will be\n        //     sent for this data source only.\n        if (dataSource.timeRangeValue !== null && dataSource.timeProperty) {\n          googAsserts.assert(dataSources.length === 1);\n          params['TIME'] = this.ngeoWMSTime_.formatWMSTimeParam(\n            dataSource.timeProperty,\n            dataSource.timeRangeValue\n          );\n        }\n      }\n\n      params['LAYERS'] = LAYERS;\n      params['QUERY_LAYERS'] = LAYERS;\n\n      // Manage 'FILTER' parameter\n      if (filterString && filtrableLayerName) {\n        let filterParamValue = null;\n        if (LAYERS.length === 1) {\n          // When there's only one layer in the `LAYERS` parameters, then\n          // the filter string is given as-is.\n          filterParamValue = filterString;\n        } else {\n          // When there's more then one layer, then each filter must be wrapped\n          // between parenthesis and the order must also match the `LAYERS`\n          // parameter as well.\n          const filterParamValues = [];\n          for (let i = 0, ii = LAYERS.length; i < ii; i++) {\n            if (LAYERS[i] === filtrableLayerName) {\n              filterParamValues.push(`(${filterString})`);\n            } else {\n              filterParamValues.push('()');\n            }\n          }\n          filterParamValue = filterParamValues.join('');\n        }\n        params['FILTER'] = filterParamValue;\n      }\n\n      googAsserts.assert(url);\n      const wmsSource = new olSourceImageWMS({\n        params,\n        url\n      });\n\n      // (4) Build query url, then launch\n      const wmsGetFeatureInfoUrl = googAsserts.assertString(\n        wmsSource.getGetFeatureInfoUrl(\n          coordinate, resolution, projCode, {\n            // Without extern, quoting is necessary\n            'FEATURE_COUNT': FEATURE_COUNT,\n            'INFO_FORMAT': INFO_FORMAT\n          }\n        )\n      );\n\n      const canceler = this.registerCanceler_();\n      promises.push(\n        this.http_.get(\n          wmsGetFeatureInfoUrl,\n          {\n            timeout: canceler.promise\n          }\n        ).then(\n          this.handleQueryResult_.bind(this, dataSources, FEATURE_COUNT, false)\n        )\n      );\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WFS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWFSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWFS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWFS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WMS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWMSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWMS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWMS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * Checks if a data source can be queried, which requires it to be:\n   * - visible\n   * - in range\n   * - queryable (using the native getter)\n   * - have at least one OGC layer in range of current map view resolution.\n   *\n   * @param {ngeo.datasource.DataSource} ds Data source\n   * @param {number} res Resolution.\n   * @return {boolean} Whether the data source is queryable\n   * @private\n   */\n  isDataSourceQueryable_(ds, res) {\n    let queryable = ds.visible && ds.inRange && ds.queryable;\n    if (queryable && ds instanceof ngeoDatasourceOGC) {\n      const ogcDS = /** @type {!ngeo.datasource.OGC} */ (ds);\n      queryable = ogcDS.isAnyOGCLayerInRange(res, true);\n    }\n    return queryable;\n  }\n\n  /**\n   * Make sure that feature ids are unique, because the same features might\n   * be returned for different layers.\n   * @param {Array.<ol.Feature>} features Features\n   * @param {number} dataSourceId Data source id.\n   * @private\n   */\n  setUniqueIds_(features, dataSourceId) {\n    features.forEach((feature) => {\n      if (feature.getId() !== undefined) {\n        const id = `${dataSourceId}_${feature.getId()}`;\n        feature.setId(id);\n      }\n    });\n  }\n\n  /**\n   * @return {angular.$q.Deferred} A deferred that can be resolved to cancel a\n   *    HTTP request.\n   * @private\n   */\n  registerCanceler_() {\n    const canceler = this.q_.defer();\n    this.requestCancelers_.push(canceler);\n    return canceler;\n  }\n\n  /**\n   * @private\n   */\n  cancelStillRunningRequests_() {\n    for (const canceler of this.requestCancelers_) {\n      canceler.resolve();\n    }\n    this.requestCancelers_.length = 0;\n  }\n};\n\n\n/**\n * @typedef {!Array.<!Array.<!ngeo.datasource.OGC>>}\n */\nexports.CombinedDataSources;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoQuerent', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoQuerent', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.WFSAttribute\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttribute from 'ngeo/format/Attribute.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\n\nconst exports = class {\n\n\n  /**\n   * A format that reads the complexType from a WFS DescribeFeatureType\n   * response for a single set of attributes and return an array of\n   * `ngeox.Attribute`.\n   */\n\n\n  /**\n   * @param {Array.<Object>} complexTypeElements Complex type element\n   * @return {Array.<ngeox.Attribute>} Attributes\n   */\n  read(complexTypeElements) {\n    return complexTypeElements.map(this.readFromComplexTypeElement_);\n  }\n\n\n  /**\n   * @param {Object} object Complex type element\n   * @return {ngeox.Attribute} Attribute\n   * @private\n   */\n  readFromComplexTypeElement_(object) {\n\n    const name = googAsserts.assertString(object['name']);\n    const alias = 'alias' in object ?\n      googAsserts.assertString(object['alias']) : null;\n    const required = object['minOccurs'] != '0';\n\n    const attribute = {\n      name,\n      alias,\n      required\n    };\n\n    const type = googAsserts.assertString(object['type']);\n\n    if (!ngeoFormatAttribute.setGeometryType(attribute, type)) {\n      if (type === 'gml:TimeInstantType' || type === 'dateTime') {\n        attribute.type = ngeoFormatAttributeType.DATETIME;\n      } else if (type === 'date') {\n        attribute.type = ngeoFormatAttributeType.DATE;\n      } else if (type === 'time') {\n        attribute.type = ngeoFormatAttributeType.TIME;\n      } else if (type === 'decimal' || type === 'double') {\n        attribute.type = ngeoFormatAttributeType.NUMBER;\n        attribute.numType = ngeoFormatXSDAttribute.NumberType.FLOAT;\n      } else if (type === 'integer' || type === 'long') {\n        attribute.type = ngeoFormatAttributeType.NUMBER;\n        attribute.numType = ngeoFormatXSDAttribute.NumberType.INTEGER;\n      } else if (type === 'boolean') {\n        attribute.type = ngeoFormatAttributeType.BOOLEAN;\n      } else {\n        attribute.type = ngeoFormatAttributeType.TEXT;\n      }\n    }\n\n    return attribute;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.Helper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoFormatWFSAttribute from 'ngeo/format/WFSAttribute.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport * as olEvents from 'ol/events.js';\n\nconst exports = class {\n  /**\n   * A service that provides utility methods to manipulate or get data sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data source\n   *     service.\n   * @param {ngeo.query.Querent} ngeoQuerent Ngeo querent service.\n   * @ngdoc service\n   * @ngname ngeoDataSourcesHelper\n   * @ngInject\n   */\n  constructor($q, ngeoDataSources, ngeoQuerent) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Object.<number, ngeo.datasource.DataSource>}\n     * @private\n     */\n    this.cache_ = {};\n\n    // Events\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n    olEvents.listen(this.collection_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n  /**\n   * @return {ngeox.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?ngeo.datasource.DataSource} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return this.cache_[id] || null;\n  }\n\n  /**\n   * Get the attributes of a data source. If they are not set, they are obtained\n   * from the querent service using a WFS DescribeFeatureType request, then set\n   * in the data source.\n   *\n   * Please, note that in order to be dynamically set, the data source must\n   * only have 1 ogcLayer set and be queryable.\n   *\n   * @param {ngeo.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  getDataSourceAttributes(dataSource) {\n\n    const wfsDescribeFeatureTypeDefer = this.q_.defer();\n\n    if (dataSource.attributes) {\n      wfsDescribeFeatureTypeDefer.resolve(dataSource.attributes);\n    } else {\n      this.ngeoQuerent_.wfsDescribeFeatureType(\n        dataSource\n      ).then((featureType) => {\n        // We know, at this point, that there's only one definition that\n        // was returned.  Just to be sure, let's do a bunch of assertions.\n        const ogcLayerName = dataSource.getOGCLayerNames()[0];\n        googAsserts.assertString(\n          ogcLayerName, 'The data source should have only one ogcLayer.');\n        const element = featureType.element[0];\n        googAsserts.assert(element.name === ogcLayerName);\n        googAsserts.assert(\n          featureType.complexType[0].name === element.type);\n\n        const complexContent = featureType['complexType'][0]['complexContent'];\n        const attributes = new ngeoFormatWFSAttribute().read(complexContent);\n\n        // Set the attributes in the data source\n        dataSource.setAttributes(attributes);\n\n        wfsDescribeFeatureTypeDefer.resolve(attributes);\n      });\n    }\n\n    return wfsDescribeFeatureTypeDefer.promise;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. Add it\n   * to the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = googAsserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    this.cache_[dataSource.id] = dataSource;\n  }\n\n  /**\n   * Called when a data source is removed from the ngeo collection. Remove it\n   * from the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = googAsserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    delete this.cache_[dataSource.id];\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSourcesHelper', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoDataSourcesHelper', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.Snapping\n */\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Translate\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionTranslate from 'ol/interaction/Translate.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * An extension of the OpenLayers Translate interaction that adds the following\n * features to it:\n *\n * - show a small arrow icon in the middle of the features allowing a visual\n *   aspect that tells the user \"this feature can be moved\"\n * - pressing the ESC key automatically deactivate the interaction.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Translate}\n * @param {ngeox.interaction.TranslateOptions} options Options.\n */\nconst exports = function(options) {\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {!Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = {};\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.myFeatures_ = options.features !== undefined ? options.features : null;\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.vectorSource_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: this.vectorSource_,\n    style: options.style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionTranslate.call(\n    this, /** @type {olx.interaction.TranslateOptions} */ (options));\n};\n\nolBase.inherits(exports, olInteractionTranslate);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionTranslate.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.vectorLayer_.setMap(null);\n  }\n\n  olInteractionTranslate.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.vectorLayer_.setMap(map);\n  }\n\n  this.setState_();\n};\n\n\n/**\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const features = this.myFeatures_;\n  const keys = this.listenerKeys_;\n\n  if (map && active && features) {\n    features.forEach(feature => this.addFeature_(feature));\n    keys.push(\n      olEvents.listen(features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(features, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n\n    if (map) {\n      const elem = map.getTargetElement();\n      elem.style.cursor = 'default';\n    }\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    features.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  this.featureListenerKeys_[uid] = olEvents.listen(\n    geometry,\n    'change',\n    this.handleGeometryChange_.bind(this, feature),\n    this\n  );\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.vectorSource_.addFeature(centerFeature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  if (this.featureListenerKeys_[uid]) {\n    olEvents.unlistenByKey(this.featureListenerKeys_[uid]);\n    delete this.featureListenerKeys_[uid];\n\n    this.vectorSource_.removeFeature(this.centerFeatures_[uid]);\n    delete this.centerFeatures_[uid];\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature being moved.\n * @param {ol.events.Event} evt Event.\n * @private\n */\nexports.prototype.handleGeometryChange_ = function(feature,\n  evt) {\n  const geometry = evt.target;\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const uid = olBase.getUid(feature);\n  this.centerFeatures_[uid].setGeometry(point);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.geom.Point} The center point of the geometry.\n * @private\n */\nexports.prototype.getGeometryCenterPoint_ = function(\n  geometry) {\n\n  let center;\n  let point;\n\n  if (geometry instanceof olGeomPolygon) {\n    point = geometry.getInteriorPoint();\n  } else if (geometry instanceof olGeomLineString) {\n    center = geometry.getCoordinateAt(0.5);\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  if (!point && center) {\n    point = new olGeomPoint(center);\n  }\n\n  googAsserts.assert(point, 'Point should be thruthy');\n\n  return point;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Rotate\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction to rotate features.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.coordinate_ = null;\n\n  /**\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.centerCoordinate_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionPointer.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n    this.features_.forEach(feature => this.addFeature_(feature));\n    this.listenerKeys_.push(\n      olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this)\n    );\n\n  } else {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n    this.features_.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  feature.set('angle', 0);\n\n  // Add the center icon to the overlay\n  const uid = olBase.getUid(feature);\n  const point = new olGeomPoint(this.getCenterCoordinate_(geometry));\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.overlay_.getSource().addFeature(centerFeature);\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.feature_ = null;\n  //this.overlay_.getSource().removeFeature(feature);\n\n  if (feature) {\n    const uid = olBase.getUid(feature);\n\n    if (this.centerFeatures_[uid]) {\n      this.overlay_.getSource().removeFeature(this.centerFeatures_[uid]);\n      delete this.centerFeatures_[uid];\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  let feature = map.forEachFeatureAtPixel(evt.pixel,\n    (feature, layer) => feature, undefined);\n\n  if (feature) {\n    let found = false;\n    this.features_.forEach((f) => {\n      if (olBase.getUid(f) == olBase.getUid(feature)) {\n        found = true;\n      }\n    });\n    if (!found) {\n      feature = null;\n    }\n  }\n\n  if (feature) {\n    this.coordinate_ = evt.coordinate;\n    this.feature_ = feature;\n    const geometry = (this.feature_.getGeometry());\n    if (geometry !== undefined) {\n      this.centerCoordinate_ = this.getCenterCoordinate_(geometry);\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.Coordinate} The center coordinate of the geometry.\n * @private\n */\nexports.prototype.getCenterCoordinate_ = function(\n  geometry) {\n\n  let center;\n\n  if (geometry instanceof olGeomLineString) {\n    center = geometry.getFlatMidpoint();\n  } else if (geometry instanceof olGeomPolygon) {\n    center = geometry.getFlatInteriorPoint();\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  return center;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (this.feature_.getGeometry());\n\n  const oldX = this.coordinate_[0];\n  const oldY = this.coordinate_[1];\n\n  const centerX = this.centerCoordinate_[0];\n  const centerY = this.centerCoordinate_[1];\n\n  const dx1 = oldX - centerX;\n  const dy1 = oldY - centerY;\n  const dx0 = evt.coordinate[0] - centerX;\n  const dy0 = evt.coordinate[1] - centerY;\n\n  this.coordinate_[0] = evt.coordinate[0];\n  this.coordinate_[1] = evt.coordinate[1];\n\n  const a0 = Math.atan2(dy0, dx0);\n  const a1 = Math.atan2(dy1, dx1);\n  const angle = a1 - a0;\n\n  geometry.rotate(-angle, [centerX, centerY]);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.RotateEvent} */\n    const event = new ngeoCustomEvent('rotateend', {feature: this.feature_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n    this.setActive(false);\n  }\n  return false;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.features\n */\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n","/**\n * @module ngeo.Menu\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olOverlay from 'ol/Overlay.js';\nimport olOverlayPositioning from 'ol/OverlayPositioning.js';\n\n/**\n * @classdesc\n * An OpenLayers overlay that shows a contextual menu with configurable actions\n * anchored from its top left to a specific location. An event is fired when\n * any of the action is clicked.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {ngeox.MenuOptions=} menuOptions Menu options.\n * @param {olx.OverlayOptions=} opt_overlayOptions Overlay options.\n */\nconst exports = function(menuOptions, opt_overlayOptions) {\n\n  const options = opt_overlayOptions !== undefined ? opt_overlayOptions : {};\n\n  options.positioning = olOverlayPositioning.TOP_LEFT;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.clickOutListenerKey_ = null;\n\n  const contentEl = $('<div/>', {\n    'class': 'panel panel-default'\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoClose_ = menuOptions.autoClose !== undefined ?\n    menuOptions.autoClose : true;\n\n  // titleEl\n  if (menuOptions.title) {\n    const headerEl = $('<div>', {\n      'class': 'panel-heading'\n    }).appendTo(contentEl);\n\n    $('<span>', {\n      text: menuOptions.title\n    }).appendTo(headerEl);\n  }\n\n  // actionsEl\n  const actionsEl = $('<div>', {\n    'class': 'list-group'\n  }).appendTo(contentEl);\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.actions_ = [];\n\n  menuOptions.actions.forEach((action) => {\n    this.actions_.push(\n      $('<button>', {\n        'class': 'list-group-item',\n        'data-name': action.name,\n        'text': [\n          ' ',\n          (action.label) !== undefined ? action.label : action.name\n        ].join('')\n      })\n        .appendTo(actionsEl)\n        .prepend($('<span>', {\n          'class': action.cls !== undefined ? action.cls : ''\n        }))\n    );\n  });\n\n  options.element = contentEl[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @param {ol.PluggableMap|undefined} map Map.\n * @export\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.actions_.forEach((action) => {\n      const data = action.data();\n      this.listenerKeys_.push(\n        olEvents.listen(\n          action[0],\n          'click',\n          this.handleActionClick_.bind(this, data.name)\n        )\n      );\n    });\n\n    // Autoclose the menu when clicking anywhere else than the menu\n    this.listenerKeys_.push(\n      olEvents.listen(\n        map,\n        'pointermove',\n        this.handleMapPointerMove_,\n        this\n      )\n    );\n  }\n\n};\n\n\n/**\n * Opens the menu at the desited coordinate. Also starts listening for the\n * clickout if autoClose is enabled.\n * @param {ol.Coordinate} coordinate Where to open the menu.\n * @export\n */\nexports.prototype.open = function(coordinate) {\n  this.setPosition(coordinate);\n  if (this.autoClose_) {\n    this.clickOutListenerKey_ = olEvents.listen(\n      document.documentElement,\n      'mousedown',\n      this.handleClickOut_,\n      this\n    );\n  }\n\n};\n\n\n/**\n * @export\n */\nexports.prototype.close = function() {\n  this.setPosition(undefined);\n\n  if (this.clickOutListenerKey_ !== null) {\n    olEvents.unlistenByKey(this.clickOutListenerKey_);\n  }\n};\n\n\n/**\n * @param {string} action The action name that was clicked.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleActionClick_ = function(action, evt) {\n\n  this.dispatchEvent(new ngeoCustomEvent('actionclick', {\n    action: action\n  }));\n\n  if (this.autoClose_) {\n    this.close();\n  }\n\n  evt.stopPropagation();\n};\n\n\n/**\n * Handles clicks out of the menu. If the menu is visible, close it.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleClickOut_ = function(evt) {\n  const element = this.getElement();\n  if (element && $(evt.target).closest(element).length === 0) {\n    this.close();\n  }\n};\n\n\n/**\n * When the mouse is hovering the menu, set the event coordinate and pixel\n * values to Infinity to do as if the mouse had been move out of range of the\n * map. This prevents behaviours such as vertex still appearing while mouse\n * hovering edges of features bound to an active modify control while the\n * cursor is on top of the menu.\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handleMapPointerMove_ = function(evt) {\n  const target = evt.originalEvent.target;\n  googAsserts.assertInstanceof(target, Element);\n\n  const element = this.getElement();\n  googAsserts.assertInstanceof(element, Element);\n\n  if (element.contains(target)) {\n    evt.coordinate = [Infinity, Infinity];\n    evt.pixel = [Infinity, Infinity];\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.download.service\n */\nimport ngeoUtils from 'ngeo/utils.js';\n\nimport {saveAs} from 'file-saver';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDownload', []);\n\n/**\n * A service to start a download for a file.\n *\n * @return {ngeox.Download} The download function.\n * @ngdoc service\n * @ngname ngeoDownload\n */\nexports.factory_ = function() {\n  /**\n   * @param {string} content The file content.\n   * @param {string} fileName The file name.\n   * @param {string=} opt_fileType The file type. If not given,\n   *    `text/plain;charset=utf-8` is used.\n   */\n  function download(content, fileName, opt_fileType) {\n    // Safari does not properly work with FileSaver. Using the the type 'text/plain'\n    // makes it a least possible to show the file content so that users can\n    // do a manual download with \"Save as\".\n    // See also: https://github.com/eligrey/FileSaver.js/issues/12\n    /** @type {string} */\n    const fileType = opt_fileType !== undefined && !ngeoUtils.isSafari() ?\n      opt_fileType : 'text/plain;charset=utf-8';\n\n    const blob = new Blob([content], {type: fileType});\n    saveAs(blob, fileName);\n  }\n\n  return download;\n};\n\nexports.factory('ngeoDownload', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.DataSourceBeingFiltered\n */\nconst exports = {};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourceBeingFiltered', []);\n// type gmfx.datasource.DataSourceBeingFiltered\nexports.module.value('gmfDataSourceBeingFiltered', {\n  dataSource: null\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.message.modalComponent\n */\nimport 'jquery-ui/ui/widgets/draggable.js';\nimport 'bootstrap/js/modal.js';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoModal', []);\n\n/**\n * Provides the \"ngeoModal\" component.\n *\n * This component shows a Bootstrap modal when the `ngModel` expression\n * evaluates to `true`, and it hides it when the `ngModel` expression\n * evaluates to `false`.\n *\n * The components also changes the `ngModel` value when the user manually\n * closes the modal.\n *\n * This component is based on Bootstrap's `modal` classes and associated\n * jQuery plugin.\n *\n *     <ngeo-modal ng-model=\"modalShown\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *         <h4 class=\"modal-title\">The Title</h4>\n *       </div>\n *       <div class=\"modal-body\">Some content</div>\n *     </ngeo-modal>\n *\n * Note: for z-indexing purpose, the modal DOM element is automatically moved\n * to document body element.\n *\n * See our live example: [../examples/modal.html](../examples/modal.html)\n *\n * @htmlAttribute {boolean} ngeo-modal-resizable Whether the modal can be\n *     resized or not. Defaults to `false`.\n * @htmlAttribute {boolean} ngeo-modal-closable Whether the modal can be\n *     closed by clicking outside it or by hiting the `escape` keyboard key. Defaults to `true`.\n * @ngdoc component\n * @ngname ngeoModal\n * @type {!angular.Component}\n */\nexports.component_ = {\n  template: `<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <ng-transclude></ng-transclude>\n      </div>\n    </div>\n  </div>`,\n  require: {\n    'ngModel': 'ngModel'\n  },\n  transclude: true,\n  controller: 'ngeoModalController',\n  bindings: {\n    'resizable': '<ngeoModalResizable',\n    'closable': '<ngeoModalClosable'\n  }\n};\n\nexports.component('ngeoModal', exports.component_);\n\nexports.Controller_ = class {\n  /**\n   * @ngInject\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!jQuery} $element Element.\n   */\n  constructor($scope, $element) {\n    /**\n     * @private\n     * @type {!jQuery}\n     */\n    this.$element_ = $element;\n\n    /**\n     * @private\n     * @type {!angular.Scope}\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @private\n     * @type {jQuery}\n     */\n    this.modal_;\n\n    /**\n     * @export\n     * @type {boolean}\n     */\n    this.closable;\n\n    /**\n     * @export\n     * @type {boolean}\n     */\n    this.resizable;\n\n    /**\n     * @export\n     * @type {angular.NgModelController|null}\n     */\n    this.ngModel;\n  }\n\n  $onInit() {\n    this.closable = this.closable !== false;\n\n    this.modal_ = this.$element_.children();\n\n    if (!this.closable) {\n      this.modal_.attr('data-keyboard', false);\n      this.modal_.attr('data-backdrop', 'static');\n    }\n\n    this.resizable = !!this.resizable;\n\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable();\n    if (this.resizable) {\n      dialog.resizable();\n    }\n\n    this.ngModel.$render = () => {\n      this.modal_.modal(this.ngModel.$viewValue ? 'show' : 'hide');\n    };\n\n    this.modal_.on('shown.bs.modal hidden.bs.modal', (e) => {\n      const type = e.type;\n      googAsserts.assert(type == 'shown' || type == 'hidden');\n      this.ngModel.$setViewValue(type == 'shown');\n    });\n  }\n\n  $onDestroy() {\n    // Force close the modal.\n    this.modal_.modal('hide');\n    this.modal_.modal('removeBackdrop');\n    // Destroy the children's plugins.\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable('destroy');\n    if (this.resizable) {\n      dialog.resizable('destroy');\n    }\n  }\n};\n\nexports.controller('ngeoModalController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Notification\n */\nimport 'bootstrap/js/alert.js';\nimport googAsserts from 'goog/asserts.js';\n\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\n\nexport default exports;\n","/*!\n * @copyright Copyright &copy; Kartik Visweswaran, Krajee.com, 2014 - 2016\n * @version 1.3.4\n *\n * Date formatter utility library that allows formatting date/time variables or Date objects using PHP DateTime format.\n * @see http://php.net/manual/en/function.date.php\n *\n * For more JQuery plugins visit http://plugins.krajee.com\n * For more Yii related demos visit http://demos.krajee.com\n */\n\n/* eslint-disable */\nconst DAY = 1000 * 60 * 60 * 24;\nconst HOUR = 3600;\n\nconst _compare = function(str1, str2) {\n  return typeof (str1) === 'string' && typeof (str2) === 'string' && str1.toLowerCase() === str2.toLowerCase();\n};\nconst _lpad = function(value, length, char) {\n  const chr = char || '0';\n  const val = value.toString();\n  return val.length < length ? _lpad(chr + val, length) : val;\n};\nconst _extend = function(out) {\n  let i, obj;\n  out = out || {};\n  for (i = 1; i < arguments.length; i++) {\n    obj = arguments[i];\n    if (!obj) {\n      continue;\n    }\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        if (typeof obj[key] === 'object') {\n          _extend(out[key], obj[key]);\n        } else {\n          out[key] = obj[key];\n        }\n      }\n    }\n  }\n  return out;\n};\nconst _indexOf = function(val, arr) {\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i].toLowerCase() === val.toLowerCase()) {\n      return i;\n    }\n  }\n  return -1;\n};\nconst defaultSettings = {\n  dateSettings: {\n    days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    daysShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    months: [\n      'January', 'February', 'March', 'April', 'May', 'June', 'July',\n      'August', 'September', 'October', 'November', 'December'\n    ],\n    monthsShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    meridiem: ['AM', 'PM'],\n    ordinal: function(number) {\n      const n = number % 10, suffixes = {1: 'st', 2: 'nd', 3: 'rd'};\n      return Math.floor(number % 100 / 10) === 1 || !suffixes[n] ? 'th' : suffixes[n];\n    }\n  },\n  separators: /[ \\-+\\/\\.T:@]/g,\n  validParts: /[dDjlNSwzWFmMntLoYyaABgGhHisueTIOPZcrU]/g,\n  intParts: /[djwNzmnyYhHgGis]/g,\n  tzParts: /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g,\n  tzClip: /[^-+\\dA-Z]/g\n};\n\nconst DateFormatter = function(options) {\n  const self = this;\n  const config = _extend(defaultSettings, options);\n  self.dateSettings = config.dateSettings;\n  self.separators = config.separators;\n  self.validParts = config.validParts;\n  self.intParts = config.intParts;\n  self.tzParts = config.tzParts;\n  self.tzClip = config.tzClip;\n};\n\nDateFormatter.prototype = {\n  constructor: DateFormatter,\n  getMonth: function(val) {\n    const self = this;\n    let i;\n    i = _indexOf(val, self.dateSettings.monthsShort) + 1;\n    if (i === 0) {\n      i = _indexOf(val, self.dateSettings.months) + 1;\n    }\n    return i;\n  },\n  parseDate: function(vDate, vFormat) {\n    const self = this, out = {date: null, year: null, month: null, day: null, hour: 0, min: 0, sec: 0}, vSettings = self.dateSettings;\n    let i, vDateFlag = false, vTimeFlag = false, vDatePart, iDatePart,\n        vMonth, vMeriIndex, vMeriOffset, len, mer;\n    if (!vDate) {\n      return null;\n    }\n    if (vDate instanceof Date) {\n      return vDate;\n    }\n    if (vFormat === 'U') {\n      i = parseInt(vDate);\n      return i ? new Date(i * 1000) : vDate;\n    }\n    switch (typeof vDate) {\n      case 'number':\n        return new Date(vDate);\n      case 'string':\n        break;\n      default:\n        return null;\n    }\n    const vFormatParts = vFormat.match(self.validParts);\n    if (!vFormatParts || vFormatParts.length === 0) {\n      throw new Error('Invalid date format definition.');\n    }\n    const vDateParts = vDate.replace(self.separators, '\\0').split('\\0');\n    for (i = 0; i < vDateParts.length; i++) {\n      vDatePart = vDateParts[i];\n      iDatePart = parseInt(vDatePart);\n      switch (vFormatParts[i]) {\n        case 'y':\n        case 'Y':\n          if (iDatePart) {\n            len = vDatePart.length;\n            out.year = len === 2 ? parseInt((iDatePart < 70 ? '20' : '19') + vDatePart) : iDatePart;\n          } else {\n            return null;\n          }\n          vDateFlag = true;\n          break;\n        case 'm':\n        case 'n':\n        case 'M':\n        case 'F':\n          if (isNaN(iDatePart)) {\n            vMonth = self.getMonth(vDatePart);\n            if (vMonth > 0) {\n              out.month = vMonth;\n            } else {\n              return null;\n            }\n          } else {\n            if (iDatePart >= 1 && iDatePart <= 12) {\n              out.month = iDatePart;\n            } else {\n              return null;\n            }\n          }\n          vDateFlag = true;\n          break;\n        case 'd':\n        case 'j':\n          if (iDatePart >= 1 && iDatePart <= 31) {\n            out.day = iDatePart;\n          } else {\n            return null;\n          }\n          vDateFlag = true;\n          break;\n        case 'g':\n        case 'h':\n          vMeriIndex = (vFormatParts.indexOf('a') > -1) ? vFormatParts.indexOf('a') :\n            (vFormatParts.indexOf('A') > -1) ? vFormatParts.indexOf('A') : -1;\n          mer = vDateParts[vMeriIndex];\n          if (vMeriIndex > -1) {\n            vMeriOffset = _compare(mer, vSettings.meridiem[0]) ? 0 :\n              (_compare(mer, vSettings.meridiem[1]) ? 12 : -1);\n            if (iDatePart >= 1 && iDatePart <= 12 && vMeriOffset > -1) {\n              out.hour = iDatePart + vMeriOffset - 1;\n            } else if (iDatePart >= 0 && iDatePart <= 23) {\n              out.hour = iDatePart;\n            }\n          } else {\n            if (iDatePart >= 0 && iDatePart <= 23) {\n              out.hour = iDatePart;\n            } else {\n              return null;\n            }\n          }\n          vTimeFlag = true;\n          break;\n        case 'G':\n        case 'H':\n          if (iDatePart >= 0 && iDatePart <= 23) {\n            out.hour = iDatePart;\n          } else {\n            return null;\n          }\n          vTimeFlag = true;\n          break;\n        case 'i':\n          if (iDatePart >= 0 && iDatePart <= 59) {\n            out.min = iDatePart;\n          } else {\n            return null;\n          }\n          vTimeFlag = true;\n          break;\n        case 's':\n          if (iDatePart >= 0 && iDatePart <= 59) {\n            out.sec = iDatePart;\n          } else {\n            return null;\n          }\n          vTimeFlag = true;\n          break;\n      }\n    }\n    if (vDateFlag === true && out.year && out.month && out.day) {\n      out.date = new Date(out.year, out.month - 1, out.day, out.hour, out.min, out.sec, 0);\n    } else {\n      if (vTimeFlag !== true) {\n        return null;\n      }\n      out.date = new Date(0, 0, 0, out.hour, out.min, out.sec, 0);\n    }\n    return out.date;\n  },\n  guessDate: function(vDateStr, vFormat) {\n    if (typeof vDateStr !== 'string') {\n      return vDateStr;\n    }\n    const self = this, vParts = vDateStr.replace(self.separators, '\\0').split('\\0'), vPattern = /^[djmn]/g, vFormatParts = vFormat.match(self.validParts), vDate = new Date(), vDigit = 0;\n    let len, i, n, iPart, iSec, vYear;\n\n    if (!vPattern.test(vFormatParts[0])) {\n      return vDateStr;\n    }\n\n    for (i = 0; i < vParts.length; i++) {\n      let vDigit = 2;\n      iPart = vParts[i];\n      iSec = parseInt(iPart.substr(0, 2));\n      if (isNaN(iSec)) {\n        return null;\n      }\n      switch (i) {\n        case 0:\n          if (vFormatParts[0] === 'm' || vFormatParts[0] === 'n') {\n            vDate.setMonth(iSec - 1);\n          } else {\n            vDate.setDate(iSec);\n          }\n          break;\n        case 1:\n          if (vFormatParts[0] === 'm' || vFormatParts[0] === 'n') {\n            vDate.setDate(iSec);\n          } else {\n            vDate.setMonth(iSec - 1);\n          }\n          break;\n        case 2:\n          vYear = vDate.getFullYear();\n          len = iPart.length;\n          vDigit = len < 4 ? len : 4;\n          vYear = parseInt(len < 4 ? vYear.toString().substr(0, 4 - len) + iPart : iPart.substr(0, 4));\n          if (!vYear) {\n            return null;\n          }\n          vDate.setFullYear(vYear);\n          break;\n        case 3:\n          vDate.setHours(iSec);\n          break;\n        case 4:\n          vDate.setMinutes(iSec);\n          break;\n        case 5:\n          vDate.setSeconds(iSec);\n          break;\n      }\n      n = iPart.substr(vDigit);\n      if (n.length > 0) {\n        vParts.splice(i + 1, 0, n);\n      }\n    }\n    return vDate;\n  },\n  parseFormat: function(vChar, vDate) {\n    let fmt;\n    const self = this, vSettings = self.dateSettings, backslash = /\\\\?(.?)/gi, doFormat = function(t, s) {\n      return fmt[t] ? fmt[t]() : s;\n    };\n    fmt = {\n      /////////\n      // DAY //\n      /////////\n      /**\n       * Day of month with leading 0: `01..31`\n       * @return {string}\n       */\n      d: function() {\n        return _lpad(fmt.j(), 2);\n      },\n      /**\n       * Shorthand day name: `Mon...Sun`\n       * @return {string}\n       */\n      D: function() {\n        return vSettings.daysShort[fmt.w()];\n      },\n      /**\n       * Day of month: `1..31`\n       * @return {number}\n       */\n      j: function() {\n        return vDate.getDate();\n      },\n      /**\n       * Full day name: `Monday...Sunday`\n       * @return {number}\n       */\n      l: function() {\n        return vSettings.days[fmt.w()];\n      },\n      /**\n       * ISO-8601 day of week: `1[Mon]..7[Sun]`\n       * @return {number}\n       */\n      N: function() {\n        return fmt.w() || 7;\n      },\n      /**\n       * Day of week: `0[Sun]..6[Sat]`\n       * @return {number}\n       */\n      w: function() {\n        return vDate.getDay();\n      },\n      /**\n       * Day of year: `0..365`\n       * @return {number}\n       */\n      z: function() {\n        const a = new Date(fmt.Y(), fmt.n() - 1, fmt.j()), b = new Date(fmt.Y(), 0, 1);\n        return Math.round((a - b) / DAY);\n      },\n\n      //////////\n      // WEEK //\n      //////////\n      /**\n       * ISO-8601 week number\n       * @return {number}\n       */\n      W: function() {\n        const a = new Date(fmt.Y(), fmt.n() - 1, fmt.j() - fmt.N() + 3), b = new Date(a.getFullYear(), 0, 4);\n        return _lpad(1 + Math.round((a - b) / DAY / 7), 2);\n      },\n\n      ///////////\n      // MONTH //\n      ///////////\n      /**\n       * Full month name: `January...December`\n       * @return {string}\n       */\n      F: function() {\n        return vSettings.months[vDate.getMonth()];\n      },\n      /**\n       * Month w/leading 0: `01..12`\n       * @return {string}\n       */\n      m: function() {\n        return _lpad(fmt.n(), 2);\n      },\n      /**\n       * Shorthand month name; `Jan...Dec`\n       * @return {string}\n       */\n      M: function() {\n        return vSettings.monthsShort[vDate.getMonth()];\n      },\n      /**\n       * Month: `1...12`\n       * @return {number}\n       */\n      n: function() {\n        return vDate.getMonth() + 1;\n      },\n      /**\n       * Days in month: `28...31`\n       * @return {number}\n       */\n      t: function() {\n        return (new Date(fmt.Y(), fmt.n(), 0)).getDate();\n      },\n\n      //////////\n      // YEAR //\n      //////////\n      /**\n       * Is leap year? `0 or 1`\n       * @return {number}\n       */\n      L: function() {\n        const Y = fmt.Y();\n        return (Y % 4 === 0 && Y % 100 !== 0 || Y % 400 === 0) ? 1 : 0;\n      },\n      /**\n       * ISO-8601 year\n       * @return {number}\n       */\n      o: function() {\n        const n = fmt.n(), W = fmt.W(), Y = fmt.Y();\n        return Y + (n === 12 && W < 9 ? 1 : n === 1 && W > 9 ? -1 : 0);\n      },\n      /**\n       * Full year: `e.g. 1980...2010`\n       * @return {number}\n       */\n      Y: function() {\n        return vDate.getFullYear();\n      },\n      /**\n       * Last two digits of year: `00...99`\n       * @return {string}\n       */\n      y: function() {\n        return fmt.Y().toString().slice(-2);\n      },\n\n      //////////\n      // TIME //\n      //////////\n      /**\n       * Meridian lower: `am or pm`\n       * @return {string}\n       */\n      a: function() {\n        return fmt.A().toLowerCase();\n      },\n      /**\n       * Meridian upper: `AM or PM`\n       * @return {string}\n       */\n      A: function() {\n        const n = fmt.G() < 12 ? 0 : 1;\n        return vSettings.meridiem[n];\n      },\n      /**\n       * Swatch Internet time: `000..999`\n       * @return {string}\n       */\n      B: function() {\n        const H = vDate.getUTCHours() * HOUR, i = vDate.getUTCMinutes() * 60, s = vDate.getUTCSeconds();\n        return _lpad(Math.floor((H + i + s + HOUR) / 86.4) % 1000, 3);\n      },\n      /**\n       * 12-Hours: `1..12`\n       * @return {number}\n       */\n      g: function() {\n        return fmt.G() % 12 || 12;\n      },\n      /**\n       * 24-Hours: `0..23`\n       * @return {number}\n       */\n      G: function() {\n        return vDate.getHours();\n      },\n      /**\n       * 12-Hours with leading 0: `01..12`\n       * @return {string}\n       */\n      h: function() {\n        return _lpad(fmt.g(), 2);\n      },\n      /**\n       * 24-Hours w/leading 0: `00..23`\n       * @return {string}\n       */\n      H: function() {\n        return _lpad(fmt.G(), 2);\n      },\n      /**\n       * Minutes w/leading 0: `00..59`\n       * @return {string}\n       */\n      i: function() {\n        return _lpad(vDate.getMinutes(), 2);\n      },\n      /**\n       * Seconds w/leading 0: `00..59`\n       * @return {string}\n       */\n      s: function() {\n        return _lpad(vDate.getSeconds(), 2);\n      },\n      /**\n       * Microseconds: `000000-999000`\n       * @return {string}\n       */\n      u: function() {\n        return _lpad(vDate.getMilliseconds() * 1000, 6);\n      },\n\n      //////////////\n      // TIMEZONE //\n      //////////////\n      /**\n       * Timezone identifier: `e.g. Atlantic/Azores, ...`\n       * @return {string}\n       */\n      e: function() {\n        const str = /\\((.*)\\)/.exec(String(vDate))[1];\n        return str || 'Coordinated Universal Time';\n      },\n      /**\n       * DST observed? `0 or 1`\n       * @return {number}\n       */\n      I: function() {\n        const a = new Date(fmt.Y(), 0), c = Date.UTC(fmt.Y(), 0),\n            b = new Date(fmt.Y(), 6), d = Date.UTC(fmt.Y(), 6);\n        return ((a - c) !== (b - d)) ? 1 : 0;\n      },\n      /**\n       * Difference to GMT in hour format: `e.g. +0200`\n       * @return {string}\n       */\n      O: function() {\n        const tzo = vDate.getTimezoneOffset(), a = Math.abs(tzo);\n        return (tzo > 0 ? '-' : '+') + _lpad(Math.floor(a / 60) * 100 + a % 60, 4);\n      },\n      /**\n       * Difference to GMT with colon: `e.g. +02:00`\n       * @return {string}\n       */\n      P: function() {\n        const O = fmt.O();\n        return (`${O.substr(0, 3)}:${O.substr(3, 2)}`);\n      },\n      /**\n       * Timezone abbreviation: `e.g. EST, MDT, ...`\n       * @return {string}\n       */\n      T: function() {\n        const str = (String(vDate).match(self.tzParts) || ['']).pop().replace(self.tzClip, '');\n        return str || 'UTC';\n      },\n      /**\n       * Timezone offset in seconds: `-43200...50400`\n       * @return {number}\n       */\n      Z: function() {\n        return -vDate.getTimezoneOffset() * 60;\n      },\n\n      ////////////////////\n      // FULL DATE TIME //\n      ////////////////////\n      /**\n       * ISO-8601 date\n       * @return {string}\n       */\n      c: function() {\n        return 'Y-m-d\\\\TH:i:sP'.replace(backslash, doFormat);\n      },\n      /**\n       * RFC 2822 date\n       * @return {string}\n       */\n      r: function() {\n        return 'D, d M Y H:i:s O'.replace(backslash, doFormat);\n      },\n      /**\n       * Seconds since UNIX epoch\n       * @return {number}\n       */\n      U: function() {\n        return vDate.getTime() / 1000 || 0;\n      }\n    };\n    return doFormat(vChar, vChar);\n  },\n  formatDate: function(vDate, vFormat) {\n    const self = this;\n    let i, n, len, str, vChar, vDateStr = '';\n    const BACKSLASH = '\\\\';\n    if (typeof vDate === 'string') {\n      vDate = self.parseDate(vDate, vFormat);\n      if (!vDate) {\n        return null;\n      }\n    }\n    if (vDate instanceof Date) {\n      len = vFormat.length;\n      for (i = 0; i < len; i++) {\n        vChar = vFormat.charAt(i);\n        if (vChar === 'S' || vChar === BACKSLASH) {\n          continue;\n        }\n        if (i > 0 && vFormat.charAt(i - 1) === BACKSLASH) {\n          vDateStr += vChar;\n          continue;\n        }\n        str = self.parseFormat(vChar, vDate);\n        if (i !== (len - 1) && self.intParts.test(vChar) && vFormat.charAt(i + 1) === 'S') {\n          n = parseInt(str) || 0;\n          str += self.dateSettings.ordinal(n);\n        }\n        vDateStr += str;\n      }\n      return vDateStr;\n    }\n    return '';\n  }\n};\n/* eslint-enable */\n\nexport default DateFormatter;\n","/**\n * @module gmf.permalink.ShareService\n */\n/**\n * Service to handle the sharing of the permalink.\n * @param {angular.$http} $http Angular http service.\n * @param  {string} gmfShortenerCreateUrl URL for the shortener API\n * @constructor\n * @struct\n * @ngInject\n * @export\n * @ngname gmfShareService\n */\nconst exports = function($http, gmfShortenerCreateUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.gmfShortenerCreateUrl_ = gmfShortenerCreateUrl;\n\n};\n\n\n/**\n * Get a short URL of the permalink by calling the url shortener service.\n * - If no shortener API url have been specified, it returns the permalink itself.\n * @param  {string} url the permalink\n * @return {gmfx.ShortenerAPIResponse|angular.$http.HttpPromise} an object containing the permalink not shortened or\n * the promise attached to the shortener API request\n */\nexports.prototype.getShortUrl = function(url) {\n  const params = /** @type {gmfx.ShortenerAPIRequestParams} */ ({\n    url\n  });\n\n  if (!this.gmfShortenerCreateUrl_) {\n    return {\n      data: {\n        short_url: url\n      },\n      status: 200\n    };\n  }\n\n  return this.postShortUrl_(params);\n};\n\n\n/**\n * Send the short permalink to the email provided\n * - If email is provided, the short permalink will be sent to this email\n * @param  {string} shortUrl the short permalink to send\n * @param  {string} email the email to which the short url must be send\n * @param  {string=} opt_message message for the email\n * @return {angular.$http.HttpPromise} the promise attached to the shortener API request\n */\nexports.prototype.sendShortUrl = function(shortUrl, email, opt_message) {\n  const params = /** @type {gmfx.ShortenerAPIRequestParams} */ ({\n    url: shortUrl,\n    email: email\n  });\n\n  if (opt_message) {\n    params['message'] = opt_message;\n  }\n\n  return this.postShortUrl_(params);\n};\n\n\n/**\n * @param  {gmfx.ShortenerAPIRequestParams} params parameters for the request\n * @return {angular.$http.HttpPromise} the promise attached to the shortener API request\n * @private\n */\nexports.prototype.postShortUrl_ = function(params) {\n  // Override default behavior of $http.post method (sending data in json format)\n  return this.$http_.post(this.gmfShortenerCreateUrl_, $.param(params), {\n    headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n  });\n};\n\n\n/**\n * Max length defined for the complete url.\n * Check IE limits, see {@link http://support.microsoft.com/kb/208427}\n * @constant\n * @type {number}\n */\nexports.URL_MAX_LEN = 2083;\n\n/**\n * Max length defined for the url parth section.\n * Check IE limits, see {@link http://support.microsoft.com/kb/208427}\n * @constant\n * @type {number}\n */\nexports.URL_PATH_MAX_LEN = 2048;\n\nexports.module = angular.module('gmfShareService', []);\n\nexports.module.service('gmfShareService', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.EPSG21781\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\nimport somerc from 'ngeo/proj/somerc.js';\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  `+proj=${somerc}`,\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureLength\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, gettextCatalog, options = /** @type {ngeox.interaction.MeasureOptions} */({})) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = gettextCatalog.getString('Click to continue drawing the line.');\n    const br = document.createElement('br');\n    br.textContent = gettextCatalog.getString('Double-click or click last point to finish.');\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomLineString);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedLength(geom, proj, this.precision, this.format);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureArea\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, gettextCatalog, options = {}) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = gettextCatalog.getString('Click to continue drawing the polygon.');\n    const br = document.createElement('br');\n    br.textContent = gettextCatalog.getString('Double-click or click starting point to finish.');\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('Polygon'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomPolygon);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedArea(geom, proj, this.precision, this.format);\n  const verticesCount = geom.getCoordinates()[0].length;\n  let coord = null;\n  if (verticesCount > 3) {\n    coord = geom.getInteriorPoint().getCoordinates();\n  }\n  callback(output, coord);\n};\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.component\n */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfAuthentication', [\n  gmfAuthenticationService.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoMessageModalComponent.name,\n]);\n\n\n/**\n * @param {angular.JQLite} element Element.\n * @param {angular.Attributes} attrs Attributes.\n * @return {string} Template URL.\n */\nexports.gmfAuthenticationTemplateUrl_ = (element, attrs) => {\n  const templateUrl = attrs['gmfAuthenticationTemplateurl'];\n  return templateUrl !== undefined ? templateUrl :\n    'gmf/authentication';\n};\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/authentication', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfAuthenticationTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfAuthenticationTemplateUrl($element, $attrs, gmfAuthenticationTemplateUrl) {\n  return gmfAuthenticationTemplateUrl($element, $attrs);\n}\n\n\n/**\n * An \"authentication\" component for a GeoMapFish application. With the\n * use of the \"authentication\" service, it features a complete interface\n * for the user to be able to login, logout, change or reset his or her\n * password.  The `gmfUser` angular value is also used to keep track of\n * the user information. When empty, that means that the user isn't connected\n * yet.\n *\n * While not logged in, the \"login\" form is shown, which allows the user to\n * either log in or ask for a password reset.\n *\n * Once logged in, the \"logout\" form is shown, which allows the user to either\n * log out or change his or her password.\n *\n * Example:\n *\n *      <gmf-authentication\n *        gmf-authentication-allow-password-change=\"::true\">\n *      </gmf-authentication>\n *\n * @htmlAttribute {boolean} gmf-authentication-allow-password-reset Whether to\n *     show the password forgotten link. Default to true.\n * @htmlAttribute {boolean|function} gmf-authentication-allow-password-change Whether to\n *     show the change password button. Default to true. You can also specify a gmfx.PasswordValidator Object\n *     to add constraint on user's new password.\n * @htmlAttribute {gmfx.PasswordValidator} gmf-authentication-password-validator A gmfx.PasswordValidator\n *     Object to add constraint on user's new password. The gmf-authentication-allow-password-change. To use\n *     it you must also allow the user to change its password.\n * @htmlAttribute {boolean} gmf-authentication-force-password-change Force the\n *     user to change its password. Default to false. If you set it to true, you\n *     should also allow the user to change its password. Don't add this option alone, use\n *     it in a dedicated authentication component, in a ngeo-modal, directly in\n *     your index.html (see example 2.)\n *\n * Example 2:\n *\n *     <ngeo-modal\n *         ngeo-modal-closable=\"false\"\n *         ng-model=\"mainCtrl.userMustChangeItsPassword()\"\n *         ng-model-options=\"{getterSetter: true}\">\n *       <div class=\"modal-header\">\n *         <h4 class=\"modal-title\">\n *           {{'You must change your password' | translate}}\n *         </h4>\n *       </div>\n *       <div class=\"modal-body\">\n *         <gmf-authentication\n *           gmf-authentication-force-password-change=\"::true\">\n *         </gmf-authentication>\n *       </div>\n *     </ngeo-modal>\n *\n * @ngdoc component\n * @ngname gmfAuthentication\n */\nexports.component_ = {\n  bindings: {\n    'allowPasswordReset': '<?gmfAuthenticationAllowPasswordReset',\n    'allowPasswordChange': '<?gmfAuthenticationAllowPasswordChange',\n    'passwordValidator': '<?gmfAuthenticationPasswordValidator',\n    'forcePasswordChange': '<?gmfAuthenticationForcePasswordChange'\n  },\n  controller: 'GmfAuthenticationController',\n  templateUrl: gmfAuthenticationTemplateUrl\n};\n\nexports.value('gmfAuthenticationTemplateUrl',\n  exports.gmfAuthenticationTemplateUrl_);\n\nexports.component('gmfAuthentication', exports.component_);\n\n\n/**\n * @private\n */\nexports.AuthenticationController_ = class {\n  /**\n   * @private\n   * @param {!angular.JQLite} $element Element.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {gmf.authentication.Service} gmfAuthenticationService GMF Authentication service\n   * @param {gmfx.User} gmfUser User.\n   * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfAuthenticationController\n   */\n  constructor($element, gettextCatalog, gmfAuthenticationService, gmfUser, ngeoNotification) {\n\n    /**\n     * @type {!angular.JQLite}\n     * @private\n     */\n    this.$element_ = $element;\n\n    /**\n     * @type {gmfx.User}\n     * @export\n     */\n    this.gmfUser = gmfUser;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog = gettextCatalog;\n\n    /**\n     * @type {gmf.authentication.Service}\n     * @private\n     */\n    this.gmfAuthenticationService_ = gmfAuthenticationService;\n\n    /**\n     * @type {ngeo.message.Notification}\n     * @private\n     */\n    this.notification_ = ngeoNotification;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordReset;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordChange;\n\n    /**\n     * @type {gmfx.PasswordValidator?}\n     * @export\n     */\n    this.passwordValidator = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.forcePasswordChange;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.changingPassword = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.changePasswordModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.resetPasswordModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.error = false;\n\n    // LOGIN form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.loginVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.pwdVal = '';\n\n    // CHANGE PASSWORD form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.oldPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdConfVal = '';\n  }\n\n  /**\n   * Initialise the controller.\n   */\n  $onInit() {\n    this.allowPasswordReset = this.allowPasswordReset !== false;\n    this.allowPasswordChange = this.allowPasswordChange !== false;\n    this.forcePasswordChange = this.forcePasswordChange === true;\n    if (this.forcePasswordChange) {\n      this.changingPassword = true;\n    }\n  }\n\n\n  // METHODS THAT CALL THE AUTHENTICATION SERVICE METHODS\n\n  /**\n   * Calls the authentication service changePassword method.\n   * @export\n   */\n  changePassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const oldPwd = this.oldPwdVal;\n    const newPwd = this.newPwdVal;\n    const confPwd = this.newPwdConfVal;\n\n    const errors = [];\n    // Validation - Passwords are required.\n    if (oldPwd === '') {\n      errors.push(gettextCatalog.getString('The old password is required.'));\n    }\n    if (newPwd === '') {\n      errors.push(gettextCatalog.getString('The new password is required.'));\n    }\n    if (confPwd === '') {\n      errors.push(gettextCatalog.getString('The password confirmation is required.'));\n    }\n\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      // Default validation - Passwords must be new and must also match.\n      if (oldPwd === newPwd) {\n        errors.push(gettextCatalog.getString('The old and new passwords are the same.'));\n      }\n      if (newPwd !== confPwd) {\n        errors.push(gettextCatalog.getString('The passwords don\\'t match.'));\n      }\n      // Custom validation - If a passwordValidator is set, use it to validate the new password.\n      if (this.passwordValidator) {\n        if (!this.passwordValidator.isPasswordValid(oldPwd)) {\n          errors.push(gettextCatalog.getString(this.passwordValidator.notValidMessage));\n        }\n      }\n\n      if (errors.length) {\n        this.setError_(errors);\n      } else {\n        // Send request with current credentials, which may fail if the old password given is incorrect.\n        const error = gettextCatalog.getString('Incorrect old password.');\n        this.gmfAuthenticationService_.changePassword(oldPwd, newPwd, confPwd).then(\n          () => {\n            this.changePasswordModalShown = true;\n            this.changePasswordReset();\n          },\n          this.setError_.bind(this, error));\n      }\n    }\n  }\n\n  /**\n   * Calls the authentication service login method.\n   * @export\n   */\n  login() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const errors = [];\n    if (this.loginVal === '') {\n      errors.push(gettextCatalog.getString('The username is required.'));\n    }\n    if (this.pwdVal === '') {\n      errors.push(gettextCatalog.getString('The password is required.'));\n    }\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      const error = gettextCatalog.getString('Incorrect credentials or disabled account.');\n      this.gmfAuthenticationService_.login(this.loginVal, this.pwdVal).then(\n        this.resetError_.bind(this),\n        this.setError_.bind(this, error));\n    }\n  }\n\n  /**\n   * Calls the authentication service logout method.\n   * @export\n   */\n  logout() {\n    const gettextCatalog = this.gettextCatalog;\n    const error = gettextCatalog.getString('Could not log out.');\n    this.gmfAuthenticationService_.logout().then(\n      this.resetError_.bind(this),\n      this.setError_.bind(this, error));\n  }\n\n  /**\n   * Calls the authentication service resetPassword method.\n   * @export\n   */\n  resetPassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    if (!this.loginVal) {\n      this.setError_(gettextCatalog.getString('Please, input a login...'));\n      return;\n    }\n\n    const error = gettextCatalog.getString('An error occurred while resetting the password.');\n\n    /**\n     * @param {gmfx.AuthenticationDefaultResponse} respData Response.\n     */\n    const resetPasswordSuccessFn = function(respData) {\n      this.resetPasswordModalShown = true;\n      this.resetError_();\n    }.bind(this);\n\n    this.gmfAuthenticationService_.resetPassword(this.loginVal).then(\n      resetPasswordSuccessFn,\n      this.setError_.bind(this, error)\n    );\n  }\n\n\n  // OTHER METHODS\n\n  /**\n   * Reset the changePassword values and error.\n   * @export\n   */\n  changePasswordReset() {\n    this.resetError_();\n    this.changingPassword = false;\n    this.oldPwdVal = '';\n    this.newPwdVal = '';\n    this.newPwdConfVal = '';\n  }\n\n  /**\n   * @return {boolean} True if the user must change is password and if the \"forcePasswordChange\" option of\n   *    this component is set to true.\n   * @export\n   */\n  userMustChangeItsPassword() {\n    return (this.gmfUser.is_password_changed === false && this.forcePasswordChange);\n  }\n\n  /**\n   * @param {string|Array.<string>} errors Errors.\n   * @private\n   */\n  setError_(errors) {\n    if (this.error) {\n      this.resetError_();\n    }\n\n    this.error = true;\n\n    const container = this.$element_.find('.gmf-authentication-error');\n\n    if (!Array.isArray(errors)) {\n      errors = [errors];\n    }\n\n    errors.forEach(function(error) {\n      this.notification_.notify({\n        msg: error,\n        target: container,\n        type: ngeoMessageMessage.Type.ERROR\n      });\n    }, this);\n  }\n\n  /**\n   * @private\n   */\n  resetError_() {\n    this.notification_.clear();\n    this.error = false;\n  }\n};\n\nexports.controller('GmfAuthenticationController',\n  exports.AuthenticationController_);\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.module\n */\nimport gmfAuthenticationComponent from 'gmf/authentication/component.js';\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfAuthenticationModule', [\n  gmfAuthenticationComponent.name,\n  gmfAuthenticationService.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.BackgroundLayerMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport ngeoLayerHelper from 'ngeo/map/LayerHelper.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function(ngeoLayerHelper) {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? this.ngeoLayerHelper_.getGroupFromMap(map,\n    exports.BACKGROUNDLAYERGROUP_NAME).getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const ZIndex = -200;\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (layer !== null) {\n    layer.setZIndex(ZIndex);\n    this.ngeoLayerHelper_.setZIndexToFirstLevelChildren(layer, ZIndex);\n  }\n\n  const bgGroup = this.ngeoLayerHelper_.getGroupFromMap(map, exports.BACKGROUNDLAYERGROUP_NAME);\n\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      bgGroup.getLayers().setAt(0, layer);\n    } else {\n      bgGroup.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    bgGroup.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * Return the current background layer overlay of a given map, used by the opacity slider.\n * `null` is returned if the map does not have an opacity background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.prototype.getOpacityBgLayer = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? this.ngeoLayerHelper_.getGroupFromMap(map,\n    exports.BACKGROUNDLAYERGROUP_NAME).getLayers().item(1) : null;\n};\n\n/**\n * Set an background layer overlay, used by the opacity slider.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.prototype.setOpacityBgLayer = function(map, layer) {\n  const ZIndex = -100;\n  layer.setOpacity(0);\n  layer.setVisible(true);\n  layer.setZIndex(ZIndex);\n  this.ngeoLayerHelper_.setZIndexToFirstLevelChildren(layer, ZIndex);\n  const bgGroup = this.ngeoLayerHelper_.getGroupFromMap(map, exports.BACKGROUNDLAYERGROUP_NAME);\n\n  const index = bgGroup.getLayers().getArray().indexOf(layer);\n  if (index === -1) {\n    bgGroup.getLayers().push(layer);\n  }\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', [\n  ngeoLayerHelper.module.name\n]);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\n\n/**\n * @const\n */\nexports.BACKGROUNDLAYERGROUP_NAME = 'background';\n\n\nexport default exports;\n","/**\n * @module gmf.backgroundlayerselector.component\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfBackgroundlayerselector', [\n  gmfThemeThemes.module.name,\n  ngeoMapBackgroundLayerMgr.module.name,\n]);\n\n\nexports.value('gmfBackgroundlayerselectorTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfBackgroundlayerselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/backgroundlayerselector';\n  }\n);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/backgroundlayerselector', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfBackgroundlayerselectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfBackgroundlayerselectorTemplateUrl($element, $attrs, gmfBackgroundlayerselectorTemplateUrl) {\n  return gmfBackgroundlayerselectorTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a \"background layer selector\" component.\n *\n * Example:\n *\n *      <gmf-backgroundlayerselector\n *        gmf-backgroundlayerselector-map=\"::ctrl.map\"\n *        gmf-backgroundlayer-opacity-options=\"::ctrl.bgOpacityOptions\"\n *        gmf-backgroundlayerselector-select=\"onBackgroundSelected()\">\n *      </gmf-backgroundlayerselector>\n *\n * Used UI metadata:\n *\n *  * thumbnail: The URL used for the icon.\n *\n * @htmlAttribute {ol.Map=} gmf-backgroundlayerselector-map The map.\n * @htmlAttribute {string} gmf-backgroundlayer-opacity-options The opacity slider options.\n * @htmlAttribute {Function} gmf-backgroundlayerselector-select Function called\n *     when a layer was selected by the user.\n *\n * @ngdoc component\n * @ngname gmfBackgroundlayerselector\n */\nexports.component_ = {\n  controller: 'GmfBackgroundlayerselectorController as ctrl',\n  bindings: {\n    'map': '=gmfBackgroundlayerselectorMap',\n    'opacityOptions': '=gmfBackgroundlayerOpacityOptions',\n    'select': '&?gmfBackgroundlayerselectorSelect'\n  },\n  templateUrl: gmfBackgroundlayerselectorTemplateUrl\n};\n\n\nexports.component('gmfBackgroundlayerselector',\n  exports.component_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer manager.\n * @param {!gmf.theme.Themes} gmfThemes Themes service.\n * @ngInject\n * @ngdoc controller\n * @ngname GmfBackgroundlayerselectorController\n */\nexports.Controller_ = function($scope, ngeoBackgroundLayerMgr, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!string|undefined}\n   * @export\n   */\n  this.opacityOptions;\n\n  /**\n   * Function called when a layer was selected by the user.\n   * @type {?Function}\n   * @export\n   */\n  this.select;\n\n  /**\n   * @type {?ol.layer.Base}\n   * @export\n   */\n  this.bgLayer;\n\n  /**\n   * @type {?Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.bgLayers;\n\n  /**\n   * @type {ol.layer.Base}\n   * @export\n   */\n  this.opacityLayer;\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(gmfThemes, 'change', this.handleThemesChange_, this));\n\n  /**\n   * @type {!ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n\n  this.listenerKeys_.push(olEvents.listen(this.backgroundLayerMgr_, 'change',\n    /**\n     * @param {!ngeox.BackgroundEvent} event Event.\n     */\n    (event) => {\n      this.bgLayer = event.detail.current;\n    }));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.handleThemesChange_();\n};\n\n\n/**\n * Called when the themes changes. Set (or reset) the backround layers.\n * @private\n */\nexports.Controller_.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getBgLayers().then((layers) => {\n    this.bgLayers = layers;\n\n    if (this.opacityOptions !== undefined) {\n      const opacityLayer = layers.find(layer => layer.get('label') === this.opacityOptions);\n      if (opacityLayer !== undefined) {\n        this.setOpacityBgLayer(opacityLayer);\n        this.opacityLayer = opacityLayer;\n\n        // Reorder for the UI the bgArray copy with the opacity layer at the end\n        this.bgLayers = this.bgLayers.slice();\n        const indexOpa = this.bgLayers.findIndex(layer => layer === this.opacityLayer);\n        this.bgLayers.splice(indexOpa, 1);\n        this.bgLayers.push(opacityLayer);\n      }\n    }\n  });\n};\n\n/**\n * Getter/setter for background layer overlay, used by opacity slider.\n * @param {?number} val The opacity.\n * @returns {number} The background layer opacity.\n * @export\n */\nexports.Controller_.prototype.getSetBgLayerOpacity = function(val) {\n  if (val) {\n    this.opacityLayer.setOpacity(val);\n  }\n  return this.opacityLayer.getOpacity();\n};\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @param {boolean=} opt_silent Do not notify listeners.\n * @export\n */\nexports.Controller_.prototype.setLayer = function(layer, opt_silent) {\n  this.bgLayer = layer;\n  this.backgroundLayerMgr_.set(this.map, layer);\n  if (!opt_silent && this.select) {\n    this.select();\n  }\n};\n\n/**\n * Set a background layer overlay, used by the opacity slider.\n * @param {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.Controller_.prototype.setOpacityBgLayer = function(layer) {\n  this.backgroundLayerMgr_.setOpacityBgLayer(this.map, layer);\n};\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('GmfBackgroundlayerselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.Helper\n */\nimport gmfEditingEnumerateAttribute from 'gmf/editing/EnumerateAttribute.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to manipulate or get GMF data\n   * sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {gmf.editing.EnumerateAttribute} gmfEnumerateAttribute The Gmf enumerate\n   *     attribute service.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     source helper service.\n   * @ngdoc service\n   * @ngname gmfDataSourcesHelper\n   * @ngInject\n   */\n  constructor($q, gmfEnumerateAttribute, ngeoDataSourcesHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {gmf.editing.EnumerateAttribute}\n     * @private\n     */\n    this.gmfEnumerateAttribute_ = gmfEnumerateAttribute;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {gmfx.datasource.DataSources}\n     * @protected\n     */\n    this.collection_;\n\n    /**\n     * @type {Object.<number, gmf.datasource.OGC>}\n     * @protected\n     */\n    this.cache_;\n  }\n\n  /**\n   * @return {gmfx.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return /** @type {gmfx.datasource.DataSources} */ (\n      this.ngeoDataSourcesHelper_.collection\n    );\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?gmf.datasource.OGC} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return /** @type {?gmf.datasource.OGC} */ (\n      this.ngeoDataSourcesHelper_.getDataSource(id)\n    );\n  }\n\n  /**\n   * @param {gmf.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  prepareFiltrableDataSource(dataSource) {\n\n    const prepareFiltrableDataSourceDefer = this.q_.defer();\n\n    // (1) Get the attributes. The first time, they will be asynchronously\n    //     obtained using a WFS DescribeFeatureType request.\n    this.ngeoDataSourcesHelper_.getDataSourceAttributes(\n      dataSource\n    ).then((attributes) => {\n      // (2) The attribute names that are in the `enumeratedAttributes`\n      //     metadata are the ones that need to have their values fetched.\n      //     Do that once then set the type to SELECT and the choices.\n      const meta = dataSource.gmfLayer.metadata || {};\n      const enumAttributes = meta.enumeratedAttributes;\n      if (enumAttributes && enumAttributes.length) {\n        const promises = [];\n        for (const attribute of attributes) {\n          if (olArray.includes(enumAttributes, attribute.name) &&\n             attribute.type !== ngeoFormatAttributeType.SELECT &&\n             (!attribute.choices || !attribute.choices.length)) {\n            promises.push(\n              this.gmfEnumerateAttribute_.getAttributeValues(\n                dataSource, attribute.name\n              ).then((values) => {\n                const choices = values.map(choice => choice.value);\n                attribute.type = ngeoFormatAttributeType.SELECT;\n                attribute.choices = choices;\n              })\n            );\n          }\n        }\n        return this.q_.all(promises).then(\n          prepareFiltrableDataSourceDefer.resolve(dataSource)\n        );\n      } else {\n        prepareFiltrableDataSourceDefer.resolve(dataSource);\n      }\n    });\n\n    return prepareFiltrableDataSourceDefer.promise;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourcesHelper', [\n  ngeoDatasourceHelper.module.name,\n  gmfEditingEnumerateAttribute.module.name,\n]);\nexports.module.service('gmfDataSourcesHelper', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.OGC\n */\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\nconst exports = class extends ngeoDatasourceOGC {\n\n  /**\n   * A `gmf.datasource.OGC` extends a `ngeo.datasource.OGC` and\n   * adds some properties that are proper to GMF only.\n   *\n   * @struct\n   * @param {gmfx.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {gmfThemes.GmfLayer}\n     * @private\n     */\n    this.gmfLayer_ = options.gmfLayer;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {gmfThemes.GmfLayer} GMF layer\n   * @export\n   */\n  get gmfLayer() {\n    return this.gmfLayer_;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.WFSAliases\n */\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\n\nconst exports = class {\n\n  /**\n   * Service that provides methods to get additional information and actions\n   * when performing WFS requests.\n   *\n   * @struct\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     source helper service.\n   * @ngdoc service\n   * @ngname gmfWFSAliases\n   * @ngInject\n   */\n  constructor(ngeoDataSourcesHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n  }\n\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @export\n   */\n  describe(dataSource) {\n    // Only QGIS Server supports WFS aliases\n    if (dataSource.ogcServerType === 'qgisserver' && !dataSource.attributes) {\n      // Trigger an additional WFS DescribeFeatureType request to get\n      // datasource attributes, including aliases.\n      this.ngeoDataSourcesHelper_.getDataSourceAttributes(dataSource);\n    }\n  }\n};\n\n\nexports.module = angular.module('gmfDatasourceWFSAliases', [\n  ngeoDatasourceHelper.module.name,\n]);\nexports.module.service('gmfWFSAliases', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.Manager\n */\nimport gmfDatasourceOGC from 'gmf/datasource/OGC.js';\nimport gmfDatasourceWFSAliases from 'gmf/datasource/WFSAliases.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\n\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\n\nconst exports = class {\n\n  /**\n   * The GeoMapFish DataSources Manager is responsible of listenening to the\n   * c2cgeoportal's themes to create instances of `ngeo.datasource.DataSource`\n   * objects with the layer definitions found and push them in the\n   * `ngeox.datasource.DataSources` collection. The Manager must be initialized\n   * with the app's map using the setDatasourcseMap() method.\n   *\n   * When changing theme, these data sources are cleared then re-created.\n   *\n   * @struct\n   * @param {angular.$q} $q Angular q service\n   * @param {!angular.Scope} $rootScope Angular rootScope.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n   * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n   * @param {!ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer\n   *     manager.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   *     data sources service.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @param {!gmf.datasource.WFSAliases} gmfWFSAliases Gmf WFS aliases service.\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfDataSourcesManager\n   */\n  constructor($q, $rootScope, $timeout, gmfThemes, gmfTreeManager,\n    ngeoBackgroundLayerMgr, ngeoDataSources, ngeoLayerHelper, ngeoRuleHelper,\n    ngeoWMSTime, gmfWFSAliases\n  ) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    /**\n     * @type {gmf.layertree.TreeManager}\n     * @private\n     */\n    this.gmfTreeManager_ = gmfTreeManager;\n\n    /**\n     * @type {!ngeo.map.BackgroundLayerMgr}\n     * @private\n     */\n    this.ngeoBackgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * The collection of DataSources from ngeo, which gets updated by this\n     * service. When the theme changes, first we remove all data sources, then\n     * the 'active' data source are added here.\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n    /**\n     * @type {!gmf.datasource.WFSAliases}\n     * @private\n     */\n    this.gmfWFSAliases_ = gmfWFSAliases;\n\n\n    // === Inner properties ===\n\n    /**\n     * While loading a new theme, this is where all of the created data sources\n     * are put using the id as key for easier find in the future.\n     * @type {Object.<number, gmf.datasource.OGC>}\n     * @private\n     */\n    this.dataSourcesCache_ = {};\n\n    /**\n     * A reference to the dimensions object.\n     * @type {ngeox.Dimensions|undefined}\n     * @private\n     */\n    this.dimensions_;\n\n    /**\n     * The cache of layertree leaf controller, i.e. those that are added to\n     * the tree manager. When treeCtrl is added in this cache, it's given\n     * a reference to its according data source.\n     * @type {gmfx.datasource.ManagerTreeCtrlCache}\n     * @private\n     */\n    this.treeCtrlCache_ = {};\n\n    /**\n     * The function to call to unregister the `watchCollection` event on\n     * the root layer tree controller children.\n     * @type {?Function}\n     * @private\n     */\n    this.treeCtrlsUnregister_ = null;\n\n    // === Events ===\n\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleNgeoBackgroundLayerChange_,\n      this\n    );\n    olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n  }\n\n\n  /**\n   * Set the map to use with your datasources.\n   * @param {!ol.Map} map The map to use.\n   * @export\n   */\n  setDatasourceMap(map) {\n    this.ngeoDataSources_.map = map;\n  }\n\n  /**\n   * @param {!ngeox.Dimensions} dimensions A reference to the dimensions\n   *     object to keep a reference of in this service.\n   */\n  setDimensions(dimensions) {\n    this.dimensions_ = dimensions;\n  }\n\n  /**\n   * Called when the themes change. Remove any existing data sources first,\n   * then create and add data sources from the loaded themes.\n   * @private\n   */\n  handleThemesChange_() {\n    // (1) Clear\n    this.clearDataSources_();\n    if (this.treeCtrlsUnregister_) {\n      this.treeCtrlsUnregister_();\n    }\n    this.clearTreeCtrlCache_();\n\n    // (2) Re-create data sources and event listeners\n    this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n      const promiseThemes = this.gmfThemes_.getThemesObject().then((themes) => {\n        // Create a DataSources for each theme\n        for (const theme of themes) {\n          for (const child of theme.children) {\n            googAsserts.assert(child);\n            this.createDataSource_(child, child, ogcServers);\n          }\n        }\n      });\n\n      const promiseBgLayers = this.gmfThemes_.getBackgroundLayersObject().then(\n        (backgroundLayers) => {\n          // Create a DataSource for each background layer\n          for (const backgroundLayer of backgroundLayers) {\n            this.createDataSource_(null, backgroundLayer, ogcServers);\n          }\n        }\n      );\n\n      // Then add the data sources that are active in the ngeo collection\n      this.q_.all([promiseThemes, promiseBgLayers]).then(() => {\n        this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(\n          () => {\n            if (this.gmfTreeManager_.rootCtrl) {\n              return this.gmfTreeManager_.rootCtrl.children;\n            }\n          },\n          this.handleTreeManagerRootChildrenChange_.bind(this)\n        );\n      });\n    });\n  }\n\n  /**\n   * Called when the list of tree controllers within the tree manager\n   * root controller changes. In other words, this method is called\n   * after nodes are being added added or removed from the tree,\n   * i.e. from the child nodes collection.\n   *\n   * A timeout is required  because the collection event is fired before\n   * the leaf nodes are created and they are the ones we're looking for here.\n   *\n   * This method handles the registration/unregistration of tree nodes that\n   * are added or removed, pushing it to the cache or removing it from the\n   * cache.\n   *\n   * @param {Array.<ngeo.layertree.Controller>|undefined} value List of tree\n   *     controllers.\n   * @private\n   */\n  handleTreeManagerRootChildrenChange_(value) {\n\n    this.timeout_(() => {\n\n      // (1) No need to do anything if the value is not set\n      if (!value) {\n        return;\n      }\n\n      // (2) Collect 'leaf' treeCtrls\n      const newTreeCtrls = [];\n      const visitor = (treeCtrls, treeCtrl) => {\n        const node = /** @type {!gmfThemes.GmfGroup|!gmfThemes.GmfLayer} */ (\n          treeCtrl.node);\n        const children = node.children;\n        if (!children) {\n          treeCtrls.push(treeCtrl);\n        }\n      };\n      for (let i = 0, ii = value.length; i < ii; i++) {\n        value[i].traverseDepthFirst(visitor.bind(this, newTreeCtrls));\n      }\n\n      // (3) Add new 'treeCtrls'\n      for (let i = 0, ii = newTreeCtrls.length; i < ii; i++) {\n        const newTreeCtrl = newTreeCtrls[i];\n        const cacheItem = this.getTreeCtrlCacheItem_(newTreeCtrl);\n        if (!cacheItem) {\n          this.addTreeCtrlToCache_(newTreeCtrl);\n        }\n      }\n\n      // (4) Remove treeCtrls that are no longer in the newTreeCtrl\n      const cache = this.treeCtrlCache_;\n      for (const id in this.treeCtrlCache_) {\n        const item = cache[id];\n        if (!newTreeCtrls.includes(item.treeCtrl)) {\n          this.removeTreeCtrlCacheItem_(item);\n        }\n      }\n    });\n  }\n\n  /**\n   * Remove the data sources from the ngeo collection that are in the cache,\n   * i.e. those created by this service, then clear the cache.\n   * @private\n   */\n  clearDataSources_() {\n\n    // (1) Remove data sources from ngeo collection\n    const dataSources = this.dataSources_.getArray();\n    for (let i = dataSources.length - 1, ii = 0; i >= ii; i--) {\n      if (this.dataSourcesCache_[dataSources[i].id]) {\n        // Use the `remove` method of the `ol.Collection` object for it\n        // to update its length accordingly and trigger the REMOVE event as\n        // well.\n        this.dataSources_.remove(dataSources[i]);\n      }\n    }\n\n    // (2) Clear the cache\n    olObj.clear(this.dataSourcesCache_);\n  }\n\n  /**\n   * Create a data source using the information on the node, group node\n   * and OGC servers. If the node has children, then we loop in those to get\n   * leaf nodes. Only leaf nodes end up creating a data source. If a data\n   * source with the same id already exists, then the node is skipped.\n   *\n   * Once a data source is created, it is added to the data sources cache.\n   *\n   * @param {gmfThemes.GmfGroup} firstLevelGroup The first level group node.\n   * @param {!gmfThemes.GmfGroup|!gmfThemes.GmfLayer} node The node, which\n   *     may have children or not.\n   * @param {!gmfThemes.GmfOgcServers} ogcServers OGC servers.\n   * @private\n   */\n  createDataSource_(firstLevelGroup, node, ogcServers) {\n\n    const children = node.children;\n\n    // (1) Group node (node that has children). Loop in the children\n    //     individually and create a data source for each one of them. The\n    //     group node itself is **skipped**.\n    if (children) {\n      for (const child of children) {\n        googAsserts.assert(child);\n        this.createDataSource_(firstLevelGroup, child, ogcServers);\n      }\n      return;\n    }\n\n    // From there on, the node is a layer node.\n    const gmfLayer = /** @type gmfThemes.GmfLayer */ (node);\n\n    // (2) Skip layer node if a data source with the same id exists\n    const id = olBase.getUid(gmfLayer);\n    if (this.dataSourcesCache_[id]) {\n      return;\n    }\n\n    // From there on, a data source will be created\n    const meta = gmfLayer.metadata;\n    const ogcType = gmfLayer.type;\n    let maxResolution;\n    let minResolution;\n    let ogcLayers;\n    let ogcServer;\n    let wmtsLayer;\n    let wmtsUrl;\n    let ogcImageType;\n    let timeProperty;\n\n    if (ogcType === gmfThemeThemes.NodeType.WMTS) {\n      // (3) Manage WMTS\n      const gmfLayerWMTS = /** @type {gmfThemes.GmfLayerWMTS} */ (gmfLayer);\n\n      // Common options for WMTS\n      wmtsLayer = gmfLayerWMTS.layer;\n      wmtsUrl = gmfLayerWMTS.url;\n      maxResolution = meta.maxResolution;\n      minResolution = meta.minResolution;\n\n      // OGC Layers\n      const layers = meta.queryLayers || meta.wmsLayers;\n      if (layers) {\n        ogcLayers = layers.split(',').map((layer) => {\n          return {\n            maxResolution: maxResolution,\n            minResolution: minResolution,\n            name: layer,\n            queryable: true\n          };\n        });\n      }\n\n      // OGC Server\n      if (meta.ogcServer && ogcServers[meta.ogcServer]) {\n        ogcServer = ogcServers[meta.ogcServer];\n      }\n      ogcImageType = gmfLayerWMTS.imageType;\n    } else if (ogcType === gmfThemeThemes.NodeType.WMS) {\n      // (4) Manage WMS\n      const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n      // Common options for WMS\n      maxResolution = gmfLayerWMS.maxResolutionHint;\n      minResolution = gmfLayerWMS.minResolutionHint;\n\n      // OGC Layers\n      ogcLayers = gmfLayerWMS.childLayers.map((childLayer) => {\n        return {\n          maxResolution: childLayer.maxResolutionHint,\n          minResolution: childLayer.minResolutionHint,\n          name: childLayer.name,\n          queryable: childLayer.queryable\n        };\n      });\n\n      // OGC Server\n      const ogcServerName = (!firstLevelGroup || firstLevelGroup.mixed) ?\n        gmfLayerWMS.ogcServer : firstLevelGroup.ogcServer;\n      googAsserts.assert(ogcServerName);\n      ogcServer = ogcServers[ogcServerName];\n      ogcImageType = ogcServer.imageType;\n\n      // Time property\n      if (gmfLayerWMS.time) {\n        timeProperty = gmfLayerWMS.time;\n      } else if (firstLevelGroup && firstLevelGroup.time) {\n        timeProperty = firstLevelGroup.time;\n      }\n    }\n\n    // (5) ogcServer\n    const ogcServerType = ogcServer ? ogcServer.type : undefined;\n    const wmsIsSingleTile = ogcServer ? ogcServer.isSingleTile : undefined;\n    const wfsUrl = ogcServer && ogcServer.wfsSupport ?\n      ogcServer.urlWfs : undefined;\n    const wmsUrl = ogcServer ? ogcServer.url : undefined;\n\n    let wfsOutputFormat = ngeoDatasourceOGC.WFSOutputFormat.GML3;\n    // qgis server only supports GML2 output\n    if (ogcServerType === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      wfsOutputFormat = ngeoDatasourceOGC.WFSOutputFormat.GML2;\n    }\n\n    // (6) Snapping\n    const snappable = !!meta.snappingConfig;\n    const snappingTolerance = meta.snappingConfig ?\n      meta.snappingConfig.tolerance : undefined;\n    const snappingToEdges = meta.snappingConfig ?\n      meta.snappingConfig.edge : undefined;\n    const snappingToVertice = meta.snappingConfig ?\n      meta.snappingConfig.vertex : undefined;\n\n    // (7) Dimensions\n    const dimensions = this.dimensions_;\n    const dimensionsConfig = node.dimensions || firstLevelGroup.dimensions;\n\n    // (8) Time values (lower or lower/upper)\n    let timeLowerValue;\n    let timeUpperValue;\n    if (timeProperty) {\n      const timeValues = this.ngeoWMSTime_.getOptions(timeProperty)['values'];\n      if (Array.isArray(timeValues)) {\n        timeLowerValue = timeValues[0];\n        timeUpperValue = timeValues[1];\n      } else {\n        timeLowerValue = timeValues;\n      }\n    }\n\n    // (9) Common options\n    const copyable = meta.copyable;\n    const identifierAttribute = meta.identifierAttributeField;\n    const name = gmfLayer.name;\n    const timeAttributeName = meta.timeAttribute;\n    const visible = meta.isChecked === true;\n\n    // Create the data source and add it to the cache\n    this.dataSourcesCache_[id] = new gmfDatasourceOGC({\n      copyable,\n      dimensions,\n      dimensionsConfig,\n      gmfLayer,\n      id,\n      identifierAttribute,\n      maxResolution,\n      minResolution,\n      name,\n      ogcImageType,\n      ogcLayers,\n      ogcServerType,\n      ogcType,\n      snappable,\n      snappingTolerance,\n      snappingToEdges,\n      snappingToVertice,\n      timeAttributeName,\n      timeLowerValue,\n      timeProperty,\n      timeUpperValue,\n      visible,\n      wfsOutputFormat,\n      wfsUrl,\n      wmsIsSingleTile,\n      wmsUrl,\n      wmtsLayer,\n      wmtsUrl\n    });\n  }\n\n  /**\n   * If the given Layertree controller is a 'leaf', add it to the cache.\n   * Also, set its according data source. Finally, add the data source to\n   * the ngeo collection.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to add\n   * @private\n   */\n  addTreeCtrlToCache_(treeCtrl) {\n\n    const id = olBase.getUid(treeCtrl.node);\n    const dataSource = this.dataSourcesCache_[id];\n    googAsserts.assert(dataSource, 'DataSource should be set');\n    treeCtrl.setDataSource(dataSource);\n\n    const stateWatcherUnregister = this.rootScope_.$watch(\n      () => treeCtrl.getState(),\n      this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n    );\n\n    const filterRulesWatcherUnregister = this.rootScope_.$watch(\n      () => {\n        const hasFilters = dataSource.filterRules !== null;\n        const isVisible = dataSource.visible;\n        return hasFilters && isVisible;\n      },\n      this.handleDataSourceFilterRulesChange_.bind(this, dataSource)\n    );\n\n    // Watch for time values change to update the WMS layer\n    let timeLowerValueWatcherUnregister;\n    let timeUpperValueWatcherUnregister;\n    let wmsLayer;\n    if (dataSource.timeProperty &&\n        dataSource.ogcType === ngeoDatasourceOGC.Type.WMS\n    ) {\n      timeLowerValueWatcherUnregister = this.rootScope_.$watch(\n        () => dataSource.timeLowerValue,\n        this.handleDataSourceTimeValueChange_.bind(this, dataSource)\n      );\n\n      if (dataSource.timeProperty.mode === 'range') {\n        timeUpperValueWatcherUnregister = this.rootScope_.$watch(\n          () => dataSource.timeUpperValue,\n          this.handleDataSourceTimeValueChange_.bind(this, dataSource)\n        );\n      }\n\n      wmsLayer = googAsserts.assertInstanceof(\n        gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl),\n        olLayerImage\n      );\n    }\n\n    this.treeCtrlCache_[id] = {\n      filterRulesWatcherUnregister,\n      stateWatcherUnregister,\n      timeLowerValueWatcherUnregister,\n      timeUpperValueWatcherUnregister,\n      treeCtrl,\n      wmsLayer\n    };\n\n    this.dataSources_.push(dataSource);\n\n    this.gmfWFSAliases_.describe(dataSource);\n  }\n\n  /**\n   * Remove a treeCtrl cache item. Unregister event listeners and remove the\n   * data source from the ngeo collection.\n   *\n   * @param {gmfx.datasource.ManagerTreeCtrlCacheItem} item Layertree\n   *     controller cache item\n   * @private\n   */\n  removeTreeCtrlCacheItem_(item) {\n\n    // (1) Remove data source\n    const dataSource = item.treeCtrl.getDataSource();\n    googAsserts.assert(dataSource, 'DataSource should be set');\n    this.dataSources_.remove(dataSource);\n\n    // (2) Remove item and clear event listeners\n    item.treeCtrl.setDataSource(null);\n    item.filterRulesWatcherUnregister();\n    item.stateWatcherUnregister();\n    if (item.timeLowerValueWatcherUnregister) {\n      item.timeLowerValueWatcherUnregister();\n    }\n    if (item.timeUpperValueWatcherUnregister) {\n      item.timeUpperValueWatcherUnregister();\n    }\n    delete this.treeCtrlCache_[olBase.getUid(item.treeCtrl.node)];\n  }\n\n  /**\n   * Clears the layer tree controller cache. At the same time, each item gets\n   * its data source reference unset and state watcher unregistered.\n   *\n   * The data source gets also removed from the ngeo data sources collection.\n   * @private\n   */\n  clearTreeCtrlCache_() {\n    for (const id in this.treeCtrlCache_) {\n      this.removeTreeCtrlCacheItem_(this.treeCtrlCache_[id]);\n    }\n  }\n\n  /**\n   * Called when the state of a 'leaf' layertree controller changes.\n   * Update the `visible` property of the data source according to the\n   * state of the layertree controller.\n   *\n   * Note: The possible states can only be 'on' or 'off', because the\n   * layertree controller being a 'leaf'.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n   * @param {string|undefined} newVal New state value\n   * @private\n   */\n  handleTreeCtrlStateChange_(treeCtrl, newVal) {\n    const treeDataSource = treeCtrl.getDataSource();\n    googAsserts.assert(treeDataSource, 'DataSource should be set');\n    const visible = newVal === 'on';\n    treeDataSource.visible = visible;\n\n    // In GMF, multiple data sources can be combined into one ol.layer.Layer\n    // object. When changing the state of a data source, we need to make\n    // sure that the FILTER param match order of the current LAYERS param.\n    //\n    // Note: we only need to do this ONCE, as there can be only one\n    // data source being filtered at a time\n    const siblingDataSourceIds = gmfLayertreeSyncLayertreeMap.getLayer(\n      treeCtrl).get('querySourceIds');\n    if (Array.isArray(siblingDataSourceIds)) {\n      const dataSources = this.dataSources_.getArray();\n      for (const dataSource of dataSources) {\n        if (dataSource instanceof gmfDatasourceOGC &&\n            dataSource.filterRules !== null &&\n            dataSource.id !== treeDataSource.id &&\n            siblingDataSourceIds.includes(dataSource.id) &&\n            dataSource.visible\n        ) {\n          this.handleDataSourceFilterRulesChange_(dataSource, true);\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Returns a layertree controller cache item, if it exists.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n   * @return {gmfx.datasource.ManagerTreeCtrlCacheItem} Cache item\n   * @private\n   */\n  getTreeCtrlCacheItem_(treeCtrl) {\n    return this.treeCtrlCache_[olBase.getUid(treeCtrl.node)] || null;\n  }\n\n  /**\n   * Called when both the 'visible' and 'filterRules' properties of a data\n   * source change.\n   *\n   * If the data source is filtrable, then make sure that when it gets rules\n   * set to apply them as OGC filters to the OpenLayers layer, more precisely\n   * as a `FILTER` parameter in the layer's source parameters.\n   *\n   * @param {!gmf.datasource.OGC} dataSource Data source.\n   * @param {boolean} value Value.\n   * @private\n   */\n  handleDataSourceFilterRulesChange_(dataSource, value) {\n\n    // Skip data sources that are not filtrables OR those that do not have\n    // the WMS ogcType, i.e. those that do not have an OpenLayers layer\n    // to update\n    if (dataSource.filtrable !== true ||\n        dataSource.ogcType !== ngeoDatasourceOGC.Type.WMS\n    ) {\n      return;\n    }\n\n    const id = olBase.getUid(dataSource.gmfLayer);\n    const item = this.treeCtrlCache_[id];\n    googAsserts.assert(item);\n    const treeCtrl = item.treeCtrl;\n\n    const layer = gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl);\n    googAsserts.assert(\n      layer instanceof olLayerImage ||\n      layer instanceof olLayerTile\n    );\n\n    const source = layer.getSource();\n    googAsserts.assert(\n      source instanceof olSourceImageWMS ||\n      source instanceof olSourceTileWMS\n    );\n\n    const filtrableLayerName = dataSource.getFiltrableOGCLayerName();\n    const projCode = treeCtrl.map.getView().getProjection().getCode();\n    const filterString = dataSource.visible ?\n      this.ngeoRuleHelper_.createFilterString({\n        dataSource,\n        projCode\n      }) :\n      null;\n\n    const filterParam = 'FILTER';\n    let filterParamValue = null;\n\n    if (filterString) {\n      const params = source.getParams();\n      const layersParam = params['LAYERS'];\n      const layersList = layersParam.split(',');\n      googAsserts.assert(layersList.length >= 1);\n\n      if (layersList.length === 1) {\n        // When there's only one layer in the `LAYERS` parameters, then\n        // the filter string is given as-is.\n        filterParamValue = filterString;\n      } else {\n        // When there's more then one layer, then each filter must be wrapped\n        // between parenthesis and the order must also match the `LAYERS`\n        // parameter as well.\n        const filterParamValues = [];\n        for (let i = 0, ii = layersList.length; i < ii; i++) {\n          if (layersList[i] === filtrableLayerName) {\n            filterParamValues.push(`(${filterString})`);\n          } else {\n            filterParamValues.push('()');\n          }\n        }\n        filterParamValue = filterParamValues.join('');\n      }\n    }\n\n    source.updateParams({\n      [filterParam]: filterParamValue\n    });\n  }\n\n  /**\n   * Called when either the `timeLowerValue` or `timeUpperValue` property of a\n   * data source changes.\n   *\n   * Get the range value from the data source, then update the WMS layer\n   * thereafter.\n   *\n   * @param {!gmf.datasource.OGC} dataSource Data source.\n   * @private\n   */\n  handleDataSourceTimeValueChange_(dataSource) {\n\n    const id = olBase.getUid(dataSource.gmfLayer);\n    const item = this.treeCtrlCache_[id];\n    googAsserts.assert(item);\n    const wmsLayer = googAsserts.assert(item.wmsLayer);\n    const wmsSource = googAsserts.assertInstanceof(\n      wmsLayer.getSource(),\n      olSourceImageWMS\n    );\n\n    const timeProperty = googAsserts.assert(dataSource.timeProperty);\n    let timeParam;\n    const range = dataSource.timeRangeValue;\n    if (range) {\n      timeParam = this.ngeoWMSTime_.formatWMSTimeParam(timeProperty, range);\n    }\n\n    // No need to update the TIME param if already the same value;\n    const params = wmsSource.getParams();\n    const currentTimeParam = params['TIME'];\n    if (currentTimeParam === timeParam) {\n      return;\n    }\n\n    // The `timeParam` can be undefined, which means that the TIME property\n    // gets reset.\n    this.ngeoLayerHelper_.updateWMSLayerState(\n      wmsLayer,\n      wmsSource.getParams()['LAYERS'],\n      timeParam\n    );\n  }\n\n  /**\n   * Called when the background layer changes. Add/Remove the according data\n   * sources to/from the ngeo data sources collection. Update the data source\n   * `visible` property as well.\n   *\n   * The `querySourceIds` property in the layer is used to determine the\n   * data sources that are bound to the layer.\n   *\n   * @param {!ngeox.BackgroundEvent} evt Event.\n   * @private\n   */\n  handleNgeoBackgroundLayerChange_(evt) {\n\n    const previousBackgroundLayer = evt.detail.previous;\n    const currentBackgroundLayer = evt.detail.current;\n    const cache = this.dataSourcesCache_;\n\n    // Remove data sources linked to previous background layer\n    if (previousBackgroundLayer) {\n      const ids = previousBackgroundLayer.get('querySourceIds');\n      if (Array.isArray(ids)) {\n        for (const id of ids) {\n          const dataSource = cache[id];\n          if (dataSource) {\n            dataSource.visible = false;\n            this.dataSources_.remove(dataSource);\n          }\n        }\n      }\n    }\n\n    // Add data sources linked to current background layer\n    if (currentBackgroundLayer) {\n      const ids = currentBackgroundLayer.get('querySourceIds');\n      if (Array.isArray(ids)) {\n        for (const id of ids) {\n          const dataSource = cache[id];\n          if (dataSource) {\n            dataSource.visible = true;\n            this.dataSources_.push(dataSource);\n          }\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourcesManager', [\n  gmfDatasourceWFSAliases.module.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoDatasourceDataSources.module.name,\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfDataSourcesManager', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.module\n */\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfDatasourceHelper from 'gmf/datasource/Helper.js';\nimport gmfDatasourceManager from 'gmf/datasource/Manager.js';\nimport gmfDatasourceWFSAliases from 'gmf/datasource/WFSAliases.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDatasourceModule', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfDatasourceHelper.module.name,\n  gmfDatasourceManager.module.name,\n  gmfDatasourceWFSAliases.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Disclaimer\n */\nimport 'bootstrap/js/alert.js';\nimport googAsserts from 'goog/asserts.js';\n\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * Provides methods to display any sort of messages, disclaimers, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @ngdoc service\n * @ngname ngeoDisclaimer\n * @ngInject\n */\nconst exports = function($sce, gettextCatalog, ngeoCreatePopup) {\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @private\n   * @type {ngeox.PopupFactory}\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  ngeoMessageMessage.call(this);\n\n  const container = angular.element('<div class=\"ngeo-disclaimer\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * Cache of messages.\n   * @type {Object.<string, angular.JQLite|ngeo.message.Popup>}\n   * @private\n   */\n  this.messages_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Show disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.alert = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Close disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.close = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.closeMessage_, this);\n};\n\n\n/**\n * Show the message.\n * @param {ngeox.Message} message Message.\n * @protected\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const gettextCatalog = this.gettextCatalog_;\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  // No need to do anything if message already exist.\n  const uid = this.getMessageUid_(message);\n  if (this.messages_[uid] !== undefined) {\n    return;\n  }\n\n  const showInPopup = message.popup === true;\n\n  if (showInPopup) {\n    // display the message in a popup, i.e. using the ngeo create popup\n    const popup = this.createPopup_();\n    const content = this.sce_.trustAsHtml(message.msg);\n    popup.open({\n      autoDestroy: true,\n      content: content,\n      title: '&nbsp;'\n    });\n\n    // Watch the open property\n    popup.scope.$watch('open', (newVal, oldVal) => {\n      if (!newVal) {\n        this.closeMessage_(message);\n      }\n    });\n\n    this.messages_[uid] =  popup;\n\n  } else {\n    // display the message using a boostrap dismissible alert\n    const classNames = ['alert', 'fade', 'alert-dismissible'];\n    switch (type) {\n      case ngeoMessageMessage.Type.ERROR:\n        classNames.push('alert-danger');\n        break;\n      case ngeoMessageMessage.Type.INFORMATION:\n        classNames.push('alert-info');\n        break;\n      case ngeoMessageMessage.Type.SUCCESS:\n        classNames.push('alert-success');\n        break;\n      case ngeoMessageMessage.Type.WARNING:\n        classNames.push('alert-warning');\n        break;\n      default:\n        break;\n    }\n\n    const el = angular.element(\n      `<div role=\"alert\" class=\"${classNames.join(' ')}\"></div>`);\n    const button = angular.element(\n      `<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"${\n        gettextCatalog.getString('Close')\n      }\"><span aria-hidden=\"true\" class=\"fa fa-times\"></span></button>`);\n    const msg = angular.element('<span />').html(message.msg);\n    el.append(button).append(msg);\n\n    let container;\n\n    if (message.target) {\n      container = angular.element(message.target);\n    } else {\n      container = this.container_;\n    }\n\n    container.append(el);\n    el.addClass('in');\n\n    // Listen when the message gets closed to cleanup the cache of messages\n    el.on('closed.bs.alert', () => {\n      this.closeMessage_(message);\n    });\n\n    this.messages_[uid] =  el;\n  }\n};\n\n\n/**\n * @param {ngeox.Message} message Message.\n * @return {string} The uid.\n * @private\n */\nexports.prototype.getMessageUid_ = function(message) {\n  return `${message.msg}-${message.type}`;\n};\n\n\n/**\n * Close the message.\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.closeMessage_ = function(message) {\n  const uid = this.getMessageUid_(message);\n  const obj = this.messages_[uid];\n\n  // (1) No need to do anything if message doesn't exist\n  if (obj === undefined) {\n    return;\n  }\n\n  // (2) Close message (popup or alert)\n  if (obj instanceof ngeoMessagePopup) {\n    // (2.1) Close popup, if not already closed\n    if (obj.getOpen()) {\n      obj.setOpen(false);\n    }\n  } else {\n    // (2.2) Check if the message hasn't been closed using the UI, i.e. by\n    //       clicking the close button. If not, then close it.\n    if (obj.hasClass('in')) {\n      obj.alert('close');\n    }\n  }\n\n  // (3) Remove message from cache since it's closed now.\n  delete this.messages_[uid];\n};\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoDisclaimer', [\n  ngeoMessagePopup.module.name,\n]);\n\nexports.module.service('ngeoDisclaimer', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.disclaimer.component\n */\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageDisclaimer from 'ngeo/message/Disclaimer.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\n\nimport 'angular-sanitize';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfDisclaimer', [\n  'ngSanitize',\n  ngeoMapLayerHelper.module.name,\n  ngeoMessageDisclaimer.module.name,\n  ngeoMiscEventHelper.module.name,\n]);\n\n\n/**\n * @constructor\n * @private\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$sce} $sce Angular sce service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @param {!ngeo.message.Disclaimer} ngeoDisclaimer Ngeo Disclaimer service.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo Event Helper.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisclaimerController\n */\nexports.Controller_ = function($element, $scope, $sce, $timeout,\n  gettextCatalog, ngeoCreatePopup, ngeoDisclaimer, ngeoEventHelper, ngeoLayerHelper) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.external;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.popup;\n\n  /**\n   * Visibility that is set to true when a new msg is there.\n   * @type {boolean}\n   * @export\n   */\n  this.visibility = false;\n\n  /**\n   * Trusted html messages that can be displayed as html.\n   * @type {string|undefined}\n   * @export\n   */\n  this.msg;\n\n  /**\n   * @type {!Array<string>}\n   * @export\n   */\n  this.msgs_ = [];\n\n  /**\n   * @type {!angular.$sce}\n   * @private\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {!ngeox.PopupFactory}\n   * @private\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  /**\n   * @type {!ngeo.message.Disclaimer}\n   * @private\n   */\n  this.disclaimer_ = ngeoDisclaimer;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.eventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.dataLayerGroup_ = this.ngeoLayerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n  this.registerLayer_(this.dataLayerGroup_);\n};\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersAdd_ = function(evt) {\n  this.timeout_(() => {\n    const layer = evt.element;\n    googAsserts.assertInstanceof(layer, olLayerBase);\n    this.registerLayer_(layer);\n  });\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersRemove_ = function(evt) {\n  const layer = evt.element;\n  googAsserts.assertInstanceof(layer, olLayerBase);\n  this.unregisterLayer_(layer);\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.registerLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Listen to added/removed layers to this group\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'add',\n        this.handleLayersAdd_,\n        this\n      )\n    );\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'remove',\n        this.handleLayersRemove_,\n        this\n      )\n    );\n\n    // (2) Register existing layers in the group\n    layer.getLayers().forEach((layer) => {\n      this.registerLayer_(layer);\n    });\n\n  } else {\n\n    // Show disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach((disclaimer) => {\n        this.showDisclaimerMessage_(disclaimer);\n      });\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.unregisterLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Clear event listeners\n    this.eventHelper_.clearListenerKey(layerUid);\n\n    // (2) Unregister existing layers in the group\n    layer.getLayers().forEach(layer => this.unregisterLayer_(layer));\n\n  } else {\n\n    // Close disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach((disclaimer) => {\n        this.closeDisclaimerMessage_(disclaimer);\n      });\n    }\n  }\n\n};\n\n\nexports.Controller_.prototype.$onDestroy = function() {\n  this.unregisterLayer_(this.dataLayerGroup_);\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.showDisclaimerMessage_ = function(msg) {\n  msg = this.gettextCatalog_.getString(msg);\n  if (this.external) {\n    if (this.msgs_.indexOf(msg) < 0) {\n      this.msgs_.push(msg);\n    }\n    this.msg = `${this.sce_.trustAsHtml(this.msgs_.join('<br />'))}`;\n    this.visibility = true;\n  } else {\n    this.disclaimer_.alert({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.closeDisclaimerMessage_ = function(msg) {\n  msg = this.gettextCatalog_.getString(msg);\n  if (this.external) {\n    this.visibility = false;\n    this.msgs_.length = 0;\n    this.msg = '';\n  } else {\n    this.disclaimer_.close({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * Provide a \"disclaimer\" component for GeoMapFish that is bound to the\n * layers added and removed from a map.\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\">\n *      </gmf-disclaimer>\n *\n * You can also display the disclaimer messages in popups or use them in another\n * context. The example below show you how to display the disclaimer messages\n * in a ngeo-modal window (external case).\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\"\n *        gmf-disclaimer-external=\"::true\"\n *        gmf-disclaimer-external-msg=\"disclaimerMsg\"\n *        gmf-disclaimer-external-visibility=\"disclaimerVisibility\">\n *      </gmf-disclaimer>\n *      <ngeo-modal ng-model=\"disclaimerVisibility\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *       </div>\n *       <div class=\"modal-body\">\n *         <div ng-bind-html=\"disclaimerMsg\"></div>\n *       </div>\n *     </ngeo-modal>\n *\n * @htmlAttribute {boolean} gmf-disclaimer-popup Whether to show the disclaimer\n *     messages in popups or not. Defaults to `false`.\n * @htmlAttribute {boolean?} gmf-disclaimer-external Whether to use disclaimer\n *     messages elsewhere or not. Default to `false`. If true, you should use\n *     the gmf-disclaimer-external-msg and the\n *     gmf-disclaimer-external-visibility too.\n * @htmlAttribute {boolean?} gmf-disclaimer-external-visibility variable that\n *     will be set to true if the disclaimers contain a new message. To uses it,\n *     you must set the gmf-disclaimer-external to true.\n * @htmlAttribute {string?} gmf-disclaimer-external-msg variable that will\n *     contains the disclaimer messages. To uses it, you must set the\n *     gmf-disclaimer-external to true.\n * @htmlAttribute {ol.Map=} gmf-disclaimer-map The map.\n *\n * @ngdoc component\n * @ngname gmfDisclaimer\n */\nexports.component_ = {\n  controller: exports.Controller_,\n  bindings: {\n    'popup': '<?gmfDisclaimerPopup',\n    'map': '=gmfDisclaimerMap',\n    'external': '<?gmfDisclaimerExternal',\n    'visibility': '=?gmfDisclaimerExternalVisibility',\n    'msg': '=?gmfDisclaimerExternalMsg'\n  }\n};\n\n\nexports.component('gmfDisclaimer', exports.component_);\n\n\nexport default exports;\n","/**\n * @module gmf.filters.SavedFilters\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * The GeoMapFish service responsible of storing filters that can be applied\n   * to data sources. A filter consists of:\n   *\n   * - a condition\n   * - a list of directed rules\n   * - a list of custom rules\n   * - a data source\n   * - a name\n   *\n   * The filters are saved in the browser local storage, if available.\n   * Otherwise, they are kept in this service for the duration of the visit.\n   *\n   * @param {!angular.Scope} $rootScope Angular rootScope.\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfSavedFilters\n   */\n  constructor($rootScope) {\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * This service can have a data source id bound to it, which automatically\n     * populates an array of items that are only bound to this data source.\n     * @type {?number}\n     * @private\n     */\n    this.currentDataSourceId_ = null;\n\n    /**\n     * @type {!Array.<!gmf.filters.SavedFilters.Item>}\n     * @private\n     */\n    this.currentDataSourceItems_ = [];\n\n    /**\n     * The used by this service to save in the local storage.\n     * @type {string}\n     * @private\n     */\n    this.localStorageKey_ = 'gmf_savedfilters';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.useLocalStorage_ = true;\n\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n\n    /**\n     * @type {!Array.<!gmf.filters.SavedFilters.Item>}\n     * @private\n     */\n    this.items_ = [];\n\n    this.rootScope_.$watchCollection(\n      () => this.items,\n      () => {\n        this.rePopulateCurrentDataSourceItems_();\n      }\n    );\n\n    if (this.useLocalStorage_) {\n      this.loadItemsFromLocalStorage_();\n    }\n\n  }\n\n  /**\n   * @return {!Array.<!gmf.filters.SavedFilters.Item>} Items\n   * @export\n   */\n  get currentDataSourceItems() {\n    return this.currentDataSourceItems_;\n  }\n\n  /**\n   * @param {?number} id Current data source id.\n   * @export\n   */\n  set currentDataSourceId(id) {\n    this.currentDataSourceId_ = id;\n    this.rePopulateCurrentDataSourceItems_();\n  }\n\n  /**\n   * @return {!Array.<!gmf.filters.SavedFilters.Item>} Items\n   * @export\n   */\n  get items() {\n    return this.items_;\n  }\n\n  /**\n   * Read the filter items that are saved in the local storage and set them\n   * as this service's items.\n   * @private\n   */\n  loadItemsFromLocalStorage_() {\n    if (window.localStorage[this.localStorageKey_]) {\n      const items = JSON.parse(window.localStorage[this.localStorageKey_]);\n      googAsserts.assertArray(items);\n      this.items_ = items;\n    }\n  }\n\n  /**\n   * Search for an item using a given name and data source id. Returns the\n   * index if it exists, otherwise -1 is returned.\n   * @param {string} name Name.\n   * @param {number} id Data source id.\n   * @return {number} The index of the item, if it exists.\n   * @export\n   */\n  indexOfItem(name, id) {\n\n    let item;\n    let idx = -1;\n    for (let i = 0, ii = this.items_.length; i < ii; i++) {\n      item = this.items[i];\n      if (item.dataSourceId === id && item.name === name) {\n        idx = i;\n        break;\n      }\n    }\n\n    return idx;\n  }\n\n  /**\n   * @param {!gmf.filters.SavedFilters.Item} item Item.\n   * @export\n   */\n  save(item) {\n\n    // (1) Add or replace item\n    const idx = this.indexOfItem(item.name, item.dataSourceId);\n    if (idx !== -1) {\n      this.items[idx] = item;\n    } else {\n      this.items.push(item);\n    }\n\n    // (2) Update local storage\n    if (this.useLocalStorage_) {\n      this.saveItemsInLocalStorage_();\n    }\n  }\n\n  /**\n   * @param {!gmf.filters.SavedFilters.Item} item Item.\n   * @export\n   */\n  remove(item) {\n\n    // (1) Remove the item\n    const found = olArray.remove(this.items, item);\n\n    // (2) Update local storage\n    if (found && this.useLocalStorage_) {\n      this.saveItemsInLocalStorage_();\n    }\n  }\n\n  /**\n   * Save all items in the local storage.\n   * @private\n   */\n  saveItemsInLocalStorage_() {\n    window.localStorage[this.localStorageKey_] = JSON.stringify(this.items);\n  }\n\n  /**\n   * @private\n   */\n  rePopulateCurrentDataSourceItems_() {\n    // (1) Clear existing items\n    this.currentDataSourceItems_.length = 0;\n\n    // (2) Populate\n    if (this.currentDataSourceId_ !== null) {\n      for (const item of this.items) {\n        if (item.dataSourceId === this.currentDataSourceId_) {\n          this.currentDataSourceItems_.push(item);\n        }\n      }\n    }\n  }\n\n};\n\n\nexports.module = angular.module('gmfSavedFilters', []);\n\nexports.module.service('gmfSavedFilters', exports);\n\n\n/**\n * The definition of a saved filter item.\n * @constructor\n * @struct\n * @export\n */\nexports.Item = function() {};\n\n\n/**\n * The condition of the saved filter item.\n * @type {string}\n * @export\n */\nexports.Item.prototype.condition;\n\n\n/**\n * The list of custom rules of the saved filter item.\n * @type {!Array.<!ngeox.rule.AnyOptions>}\n * @export\n */\nexports.Item.prototype.customRules;\n\n\n/**\n * The data source id related to the filter.\n * @type {number}\n * @export\n */\nexports.Item.prototype.dataSourceId;\n\n\n/**\n * The list of directed rules of the saved filter item.\n * @type {!Array.<!ngeox.rule.AnyOptions>}\n * @export\n */\nexports.Item.prototype.directedRules;\n\n\n/**\n * A human-readable name given to the saved filter item.\n * @type {string}\n * @export\n */\nexports.Item.prototype.name;\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.ruleComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMenu from 'ngeo/Menu.js';\nimport ngeoDrawComponent from 'ngeo/draw/component.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionModify from 'ngeo/interaction/Modify.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDatepickerComponent from 'ngeo/misc/datepickerComponent.js';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olArray from 'ol/array.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoRule', [\n  ngeoDrawComponent.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoMapFeatureOverlay.module.name,\n  ngeoMiscDatepickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/filter/rulecomponent', require('./rulecomponent.html'));\n});\n\n\nexports.value('ngeoRuleTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoRuleTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/filter/rulecomponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoRuleTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoRuleTemplateUrl($attrs, ngeoRuleTemplateUrl) {\n  return ngeoRuleTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.RuleController_ = class {\n\n  /**\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate\n   *     manager service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoRuleController\n   */\n  constructor(gettextCatalog, $scope, $timeout, ngeoFeatureHelper,\n    ngeoRuleHelper, ngeoToolActivateMgr) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * The original rule.\n     * @type {!ngeo.rule.Rule}\n     * @export\n     */\n    this.rule;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // Injected properties\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.ToolActivateMgr}\n     * @private\n     */\n    this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n\n    // Inner properties\n\n    /**\n     * The cloned rule. Changes in the UI are applied to the clone 'on-the-fly'.\n     * Changes in the clone are applied back in the original rule when the\n     * apply button is clicked.\n     * @type {!ngeo.rule.Rule}\n     * @export\n     */\n    this.clone;\n\n    const operatorType = ngeoRuleRule.OperatorType;\n    const spatialOperatorType = ngeoRuleRule.SpatialOperatorType;\n    const temporalOperatorType = ngeoRuleRule.TemporalOperatorType;\n\n    /**\n     * @type {Object.<string, string>}\n     * @export\n     */\n    this.operators = {\n      [operatorType.EQUAL_TO]: gettextCatalog.getString('Is equal to'),\n      [operatorType.GREATER_THAN]: gettextCatalog.getString('Is greater than'),\n      [operatorType.GREATER_THAN_OR_EQUAL_TO]: gettextCatalog.getString(\n        'Is greater than or equal to'),\n      [operatorType.LESSER_THAN]: gettextCatalog.getString('Is lesser than'),\n      [operatorType.LESSER_THAN_OR_EQUAL_TO]: gettextCatalog.getString(\n        'Is lesser than or equal to'),\n      [operatorType.NOT_EQUAL_TO]: gettextCatalog.getString('Is not equal to'),\n      [operatorType.LIKE]: gettextCatalog.getString('Contains'),\n      [spatialOperatorType.CONTAINS]: gettextCatalog.getString('Contains'),\n      [spatialOperatorType.INTERSECTS]: gettextCatalog.getString('Intersects'),\n      [spatialOperatorType.WITHIN]: gettextCatalog.getString('Is inside of'),\n      [temporalOperatorType.BEGINS]: gettextCatalog.getString('Begins at'),\n      [temporalOperatorType.DURING]: gettextCatalog.getString('During'),\n      [temporalOperatorType.ENDS]: gettextCatalog.getString('Ends at'),\n      [temporalOperatorType.EQUALS]: gettextCatalog.getString('Is equal to')\n    };\n\n    /**\n     * @type {Object.<string, string>}\n     * @export\n     */\n    this.operatorsShortFormat = {\n      [operatorType.EQUAL_TO]: '=',\n      [operatorType.GREATER_THAN]: '>',\n      [operatorType.GREATER_THAN_OR_EQUAL_TO]: '>=',\n      [operatorType.LESSER_THAN]: '<',\n      [operatorType.LESSER_THAN_OR_EQUAL_TO]: '<=',\n      [operatorType.NOT_EQUAL_TO]: '!=',\n      [operatorType.LIKE]: '~',\n      [temporalOperatorType.BEGINS]: '>=',\n      [temporalOperatorType.ENDS]: '<=',\n      [temporalOperatorType.EQUALS]: '='\n    };\n\n    /**\n     * Time property used when the rule is of type 'date|datetime' and uses\n     * a range of date.\n     * @type {!ngeox.TimeProperty}\n     * @export\n     */\n    this.timeRangeMode = {\n      widget: 'datepicker',\n      maxValue: null,\n      minValue: null,\n      maxDefValue: this.createDate_(),\n      minDefValue: this.createWeekAgoDate_(),\n      mode: 'range',\n      interval: [0, 1, 0, 0]\n    };\n\n    /**\n     * Time property used when the rule is of type 'date|datetime' and uses\n     * a single date.\n     * @type {!ngeox.TimeProperty}\n     * @export\n     */\n    this.timeValueMode = {\n      widget: 'datepicker',\n      maxValue: null,\n      minValue: null,\n      maxDefValue: this.createDate_(),\n      minDefValue: this.createDate_(),\n      mode: 'value',\n      interval: [0, 1, 0, 0]\n    };\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @private\n     */\n    this.toolActivate_;// = new ngeo.misc.ToolActivate(this.rule, 'active');\n\n    /**\n     * @type {!Array.<Function>}\n     * @private\n     */\n    this.unlisteners_ = [];\n\n\n    // Inner properties when dealing with a `ngeo.rule.Geometry`\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.drawActive = false;\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.drawToolActivate = new ngeoMiscToolActivate(this, 'drawActive');\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @export\n     */\n    this.drawnFeatures = new olCollection();\n\n    /**\n     * @type {?ngeo.Menu}\n     * @private\n     */\n    this.menu_ = null;\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @export\n     */\n    this.selectedFeatures = new olCollection();\n\n    /**\n     * @type {!ol.Collection.<!ol.interaction.Interaction>}\n     * @private\n     */\n    this.interactions_ = new olCollection();\n\n    /**\n     * @type {!ngeo.interaction.Modify}\n     * @private\n     */\n    this.modify_ = new ngeoInteractionModify({\n      features: this.selectedFeatures,\n      style: ngeoFeatureHelper.getVertexStyle(false)\n    });\n    this.interactions_.push(this.modify_);\n\n    /**\n     * @type {ngeo.interaction.Rotate}\n     * @private\n     */\n    this.rotate_ = new ngeoInteractionRotate({\n      features: this.selectedFeatures,\n      style: new olStyleStyle({\n        text: new olStyleText({\n          text: '\\uf01e',\n          font: 'normal 18px FontAwesome',\n          fill: new olStyleFill({\n            color: '#7a7a7a'\n          })\n        })\n      })\n    });\n    this.interactions_.push(this.rotate_);\n\n    /**\n     * @type {ngeo.interaction.Translate}\n     * @private\n     */\n    this.translate_ = new ngeoInteractionTranslate({\n      features: this.selectedFeatures,\n      style: new olStyleStyle({\n        text: new olStyleText({\n          text: '\\uf047',\n          font: 'normal 18px FontAwesome',\n          fill: new olStyleFill({\n            color: '#7a7a7a'\n          })\n        })\n      })\n    });\n    this.interactions_.push(this.translate_);\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    this.initializeInteractions_();\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.modifyToolActivate = new ngeoMiscToolActivate(\n      this.modify_,\n      'active'\n    );\n\n    /**\n     * @type {ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.rotateToolActivate = new ngeoMiscToolActivate(\n      this.rotate_,\n      'active'\n    );\n\n    /**\n     * @type {ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.translateToolActivate = new ngeoMiscToolActivate(\n      this.translate_,\n      'active'\n    );\n\n    /**\n     * The geometry type used by the clone feature.\n     * @type {?string}\n     * @export\n     */\n    this.geomType = null;\n  }\n\n  /**\n   * Called on initialization of the controller.\n   *\n   * Clone the rule to be able to work with the clone directly.\n   */\n  $onInit() {\n    this.clone = this.ngeoRuleHelper_.cloneRule(this.rule);\n\n    this.toolActivate_ = new ngeoMiscToolActivate(this.rule, 'active');\n\n    this.ngeoToolActivateMgr_.registerTool(\n      this.toolGroup, this.toolActivate_);\n\n    this.scope_.$watch(\n      () => this.rule.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    // If the rule is a DATE or DATETIME, then a datepicker directive is used.\n    // It is not possible to set the current values to the datepicker, but you\n    // can set the initial values. This is why it is created when the rule\n    // becomes active (see the partials/rule.html).\n    //\n    // This chunk of code ensures that the rule properties are synchronized\n    // with the TimeProperty objects required to build the datepickers.\n    if (this.clone.type === ngeoFormatAttributeType.DATE ||\n        this.clone.type === ngeoFormatAttributeType.DATETIME\n    ) {\n      // Watch 'expression'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.getExpression(),\n        (newVal) => {\n          this.timeValueMode.minValue = newVal;\n        }\n      ));\n      // Watch 'lowerBoundary'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.lowerBoundary,\n        (newVal) => {\n          this.timeRangeMode.minValue = newVal;\n        }\n      ));\n      // Watch 'upperBoundary'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.upperBoundary,\n        (newVal) => {\n          this.timeRangeMode.maxValue = newVal;\n        }\n      ));\n    } else if (this.clone.type === ngeoFormatAttributeType.GEOMETRY) {\n\n      // Watch 'operator' of clone. Make sure any existing geometry is\n      // supported by the newly selected operator. If it doesn't, reset\n      // the expression, i.e. geometry.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.operator,\n        (newVal) => {\n          if (newVal &&\n              newVal === ngeoRuleRule.SpatialOperatorType.CONTAINS\n          ) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            const geometry = clone.feature.getGeometry();\n            if (geometry) {\n              const geomType = this.ngeoFeatureHelper_.getType(clone.feature);\n              const supportedTypes = [\n                ngeoGeometryType.CIRCLE,\n                ngeoGeometryType.POLYGON,\n                ngeoGeometryType.RECTANGLE\n              ];\n              if (!olArray.includes(supportedTypes, geomType)) {\n                this.clone.setExpression(null);\n              }\n            }\n          }\n        }\n      ));\n\n      // Watch 'expression' of clone. Set 'geomType' property accordingly.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.expression,\n        (newVal) => {\n          if (newVal) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            this.geomType = this.ngeoFeatureHelper_.getType(clone.feature);\n          } else {\n            this.geomType = null;\n          }\n        }\n      ));\n\n      // Watch both 'expression', 'active' and the modify control to be all\n      // thruthy. When that's the case, the clone feature is added to the\n      // selection collection.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => {\n          const hasExpression = this.clone.getExpression() !== null;\n          const isActive = this.rule.active === true;\n          const editToolIsActive = this.modify_.getActive() ||\n                this.rotate_.getActive() ||\n                this.translate_.getActive();\n          return hasExpression && isActive && editToolIsActive;\n        },\n        (newVal) => {\n          if (newVal) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            this.selectedFeatures.push(clone.feature);\n          } else {\n            this.selectedFeatures.clear();\n          }\n        }\n      ));\n    }\n  }\n\n  /**\n   * Called on destruction of the controller.\n   */\n  $onDestroy() {\n    if (this.rule.active) {\n      this.rule.active = false;\n      // in $onDestroy, setting active to false will not call the handler. Call\n      // it manually to let it do its magic\n      this.handleActiveChange_(false, true);\n    }\n    this.ngeoToolActivateMgr_.unregisterTool(\n      this.toolGroup, this.toolActivate_);\n    for (let i = 0, ii = this.unlisteners_.length; i < ii; i++) {\n      this.unlisteners_[i]();\n    }\n    this.unlisteners_.length = 0;\n    this.clone.destroy();\n  }\n\n  /**\n   * @export\n   */\n  toggle() {\n    if (this.rule.active) {\n      this.cancel();\n    } else {\n      this.rule.active = true;\n    }\n  }\n\n  /**\n   * Apply the changes that were made in the original rule.\n   * @export\n   */\n  apply() {\n    this.ngeoRuleHelper_.extendRule(this.clone, this.rule);\n    this.rule.active = false;\n  }\n\n  /**\n   * Revert the changes that were made in the clone rule.\n   * @export\n   */\n  cancel() {\n    this.ngeoRuleHelper_.extendRule(this.rule, this.clone);\n    this.rule.active = false;\n  }\n\n  /**\n   * Reset both original and clone rules.\n   * @export\n   */\n  reset() {\n    this.clone.reset();\n    this.rule.reset();\n  }\n\n  /**\n   * Called when a choice is clicked, when using a `ngeo.rule.Select` rule type.\n   * Add/remove the choice to/from the `expression` of the rule.\n   * @param {string|number} choice Choice that has been clicked.\n   * @export\n   */\n  toggleChoiceSelection(choice) {\n    const rule = googAsserts.assertInstanceof(this.clone, ngeoRuleSelect);\n    const choices = rule.getExpression() ? rule.getExpression().split(',') : [];\n    const idx = choices.indexOf(choice);\n    if (idx > -1) {\n      choices.splice(idx, 1);\n    } else {\n      choices.push(choice);\n    }\n    rule.setExpression(choices.length ? choices.join(',') : null);\n  }\n\n\n  /**\n   * @param {Object} date Date\n   * @export\n   */\n  onDateSelected(date) {\n    this.clone.setExpression(date['start']);\n  }\n\n  /**\n   * @param {Object} date Date\n   * @export\n   */\n  onDateRangeSelected(date) {\n    this.clone.lowerBoundary = date['start'];\n    this.clone.upperBoundary = date['end'];\n  }\n\n  /**\n   * @param {number=} opt_timeDelta Time delta to go back in the past.\n   * @return {string} ISO string of the date\n   * @private\n   */\n  createDate_(opt_timeDelta) {\n\n    const date = new Date();\n\n    if (opt_timeDelta !== undefined) {\n      const time = date.getTime() - opt_timeDelta;\n      date.setTime(time);\n    }\n\n    return date.toISOString();\n  }\n\n  /**\n   * @return {string} ISO string of the date\n   * @private\n   */\n  createWeekAgoDate_() {\n    return this.createDate_(1000 * 60 * 60 * 24 * 7); // A week ago date\n  }\n\n  /**\n   * @param {number} time Time.\n   * @return {string} Date\n   * @export\n   */\n  timeToDate(time) {\n    const date = new Date(time);\n    return date.toLocaleDateString();\n  }\n\n\n  // === Methods used when bound to a `ngeo.rule.Geometry`\n\n\n  /**\n   * Called when the active property of a rule changes. Only used when this\n   * component is bound to a geometry rule.\n   *\n   * Manage the activation/deactivation of the interactions.\n   *\n   * @param {boolean} active Whether the rule is active or not.\n   * @param {boolean} oldActive Whether the rule was active or not.\n   * @private\n   */\n  handleActiveChange_(active, oldActive) {\n\n    if (!(this.rule instanceof ngeoRuleGeometry) ||\n        !(this.clone instanceof ngeoRuleGeometry) ||\n        active === oldActive\n    ) {\n      return;\n    }\n\n    const keys = this.listenerKeys_;\n    const uid = ['ngeo-rule-', olBase.getUid(this)].join('-');\n    const toolMgr = this.ngeoToolActivateMgr_;\n\n    const ruleFeature = this.rule.feature;\n    const cloneFeature = this.clone.feature;\n\n    const mapDiv = this.map.getViewport();\n    googAsserts.assertElement(mapDiv);\n\n    if (active) {\n      keys.push(\n        olEvents.listen(\n          this.drawnFeatures,\n          'add',\n          this.handleFeaturesAdd_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          mapDiv,\n          'contextmenu',\n          this.handleMapContextMenu_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          this.translate_,\n          'translateend',\n          this.handleTranslateEnd_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          this.rotate_,\n          'rotateend',\n          this.handleRotateEnd_,\n          this\n        )\n      );\n\n      this.featureOverlay.removeFeature(ruleFeature);\n      this.featureOverlay.addFeature(cloneFeature);\n\n      this.registerInteractions_();\n\n      toolMgr.registerTool(uid, this.drawToolActivate, false);\n      toolMgr.registerTool(uid, this.modifyToolActivate, true);\n      toolMgr.registerTool(uid, this.rotateToolActivate, false);\n      toolMgr.registerTool(uid, this.translateToolActivate, false);\n\n      this.modify_.setActive(true);\n\n      if (cloneFeature.getGeometry()) {\n        this.ngeoFeatureHelper_.setStyle(cloneFeature, true);\n      }\n\n    } else {\n      cloneFeature.setStyle(null);\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n\n      this.drawActive = false;\n\n      toolMgr.unregisterTool(uid, this.drawToolActivate);\n      toolMgr.unregisterTool(uid, this.modifyToolActivate);\n      toolMgr.unregisterTool(uid, this.rotateToolActivate);\n      toolMgr.unregisterTool(uid, this.translateToolActivate);\n\n      this.modify_.setActive(false);\n\n      this.unregisterInteractions_();\n\n      if (this.selectedFeatures.getLength()) {\n        this.featureOverlay.removeFeature(cloneFeature);\n      }\n      this.featureOverlay.addFeature(ruleFeature);\n\n      this.selectedFeatures.clear();\n    }\n  }\n\n  /**\n   * Initialize interactions by setting them inactive and decorating them\n   * @private\n   */\n  initializeInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      interaction.setActive(false);\n      ngeoMiscDecorate.interaction(interaction);\n    });\n  }\n\n  /**\n   * Register interactions by adding them to the map\n   * @private\n   */\n  registerInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      this.map.addInteraction(interaction);\n    });\n  }\n\n  /**\n   * Register interactions by removing them to the map\n   * @private\n   */\n  unregisterInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      this.map.removeInteraction(interaction);\n    });\n  }\n\n  /**\n   * @param {ol.Collection.Event} evt Event.\n   * @private\n   */\n  handleFeaturesAdd_(evt) {\n    // timeout to prevent double-click to zoom the map\n    this.timeout_(() => {\n\n      const clone = googAsserts.assertInstanceof(\n        this.clone, ngeoRuleGeometry);\n      const feature = clone.feature;\n\n      // (1) Apply geometry\n      const drawnFeature = googAsserts.assertInstanceof(\n        evt.element,\n        olFeature\n      );\n      const geometry = googAsserts.assertInstanceof(\n        drawnFeature.getGeometry(),\n        olGeomGeometry\n      );\n      clone.geometry = geometry;\n\n      // (2) Deactivate draw tools\n      this.drawActive = false;\n\n      // (3) Set properties, then style\n      const properties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        drawnFeature);\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(feature);\n      feature.setProperties(properties);\n      this.ngeoFeatureHelper_.setStyle(feature, true);\n\n      this.scope_.$apply();\n    });\n  }\n\n  /**\n   * Return the type of geometry used by the rule feature. Used in the template.\n   * @return {string} Geometry type.\n   * @export\n   */\n  getRuleGeometryType() {\n    const rule = googAsserts.assertInstanceof(this.rule, ngeoRuleGeometry);\n    return this.ngeoFeatureHelper_.getType(rule.feature);\n  }\n\n  /**\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleMapContextMenu_(evt) {\n\n    // (1) Remove previous menu, if any\n    this.removeMenu_();\n\n    // (2) Get feature at pixel\n    const pixel = this.map.getEventPixel(evt);\n    const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n    let feature = this.map.forEachFeatureAtPixel(\n      pixel,\n      (feature) => {\n        let ret = false;\n        if (olArray.includes(this.selectedFeatures.getArray(), feature)) {\n          ret = feature;\n        }\n        return ret;\n      }\n    );\n\n    feature = feature ? feature : null;\n\n    // (3) If the clicked feature is the selected one, plus if it has a certain\n    //     type of geometry, then show the menu\n    const actions = [];\n    if (feature) {\n\n      const type = this.ngeoFeatureHelper_.getType(feature);\n      const  gettextCatalog = this.gettextCatalog_;\n\n      if (type == ngeoGeometryType.CIRCLE ||\n          type == ngeoGeometryType.LINE_STRING ||\n          type == ngeoGeometryType.POLYGON ||\n          type == ngeoGeometryType.RECTANGLE) {\n        actions.push({\n          cls: 'fa fa-arrows',\n          label: gettextCatalog.getString('Move'),\n          name: 'move'\n        });\n      }\n      if (type == ngeoGeometryType.LINE_STRING ||\n          type == ngeoGeometryType.POLYGON ||\n          type == ngeoGeometryType.RECTANGLE) {\n        actions.push({\n          cls: 'fa fa-rotate-right',\n          label: gettextCatalog.getString('Rotate'),\n          name: 'rotate'\n        });\n      }\n    }\n\n    if (actions.length) {\n      // (4) Create and show menu\n      this.menu_ = new ngeoMenu({\n        actions\n      });\n\n      olEvents.listen(\n        this.menu_,\n        'actionclick',\n        this.handleMenuActionClick_,\n        this\n      );\n      this.map.addOverlay(this.menu_);\n\n      this.menu_.open(coordinate);\n\n      evt.preventDefault();\n      evt.stopPropagation();\n\n      this.scope_.$apply();\n    }\n  }\n\n  /**\n   * Remove contextual menu, if any.\n   * @private\n   */\n  removeMenu_() {\n    if (this.menu_) {\n      olEvents.unlisten(\n        this.menu_,\n        'actionclick',\n        this.handleMenuActionClick_,\n        this\n      );\n      this.map.removeOverlay(this.menu_);\n      this.menu_ = null;\n    }\n  }\n\n  /**\n   * @param {ngeox.MenuEvent} evt Event.\n   * @private\n   */\n  handleMenuActionClick_(evt) {\n    const action = evt.detail.action;\n\n    switch (action) {\n      case 'move':\n        this.translate_.setActive(true);\n        this.scope_.$apply();\n        break;\n      case 'rotate':\n        this.rotate_.setActive(true);\n        this.scope_.$apply();\n        break;\n      default:\n        console.log(`FIXME - support: ${action}`);\n        break;\n    }\n  }\n\n  /**\n   * @param {ngeox.RotateEvent} evt Event.\n   * @private\n   */\n  handleRotateEnd_(evt) {\n    this.rotate_.setActive(false);\n    this.scope_.$apply();\n  }\n\n  /**\n   * @param {ol.interaction.Translate.Event} evt Event.\n   * @private\n   */\n  handleTranslateEnd_(evt) {\n    this.translate_.setActive(false);\n    this.scope_.$apply();\n  }\n\n};\n\n\n/**\n * The rule component is bound to a `ngeo.rule.Rule` object and shows UI\n * components to be able to edit its properties, such as: operator, expression,\n * etc. The actual properties depend on the type of rule.\n *\n * Also, changes are not made on-the-fly. A button must be clicked for the\n * changes to be applied to the rule.\n */\nexports.component('ngeoRule', {\n  bindings: {\n    'featureOverlay': '<',\n    'map': '<',\n    'rule': '<',\n    'toolGroup': '<'\n  },\n  controller: exports.RuleController_,\n  templateUrl: ngeoRuleTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleComponent from 'ngeo/filter/ruleComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFilter', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoFilterRuleComponent.name,\n  ngeoMapFeatureOverlay.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/filter', require('./component.html'));\n});\n\n\nexports.value('ngeoFilterTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoFilterTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/filter';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoFilterTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoFilterTemplateUrl($attrs, ngeoFilterTemplateUrl) {\n  return ngeoFilterTemplateUrl($attrs);\n}\n\n\nexports.component('ngeoFilter', {\n  bindings: {\n    'aRuleIsActive': '=',\n    'customRules': '<',\n    // It's 'datasource' instead of 'dataSource', because that would require\n    // the attribute to be 'data-source', and Angular strips the 'data-'.\n    'datasource': '<',\n    'directedRules': '<',\n    'featureOverlay': '<',\n    'map': '<',\n    'toolGroup': '<'\n  },\n  controller: 'ngeoFilterController',\n  templateUrl: ngeoFilterTemplateUrl\n});\n\n/**\n * @private\n */\nexports.FilterController_ = class {\n\n  /**\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoFilterController\n   */\n  constructor(gettextCatalog, $scope, $timeout, ngeoMapQuerent,\n    ngeoRuleHelper) {\n\n    // === Binding properties ===\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.aRuleIsActive;\n\n    /**\n     * @type {Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.customRules;\n\n    /**\n     * @type {!ngeo.datasource.OGC}\n     * @export\n     */\n    this.datasource;\n\n    /**\n     * @type {Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.directedRules;\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!ngeo.query.MapQuerent}\n     * @private\n     */\n    this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * @type {Array.<!ngeox.FilterCondition>}\n     * @export\n     */\n    this.conditions = [\n      {\n        text: gettextCatalog.getString('All'),\n        value: ngeoFilterCondition.AND\n      },\n      {\n        text: gettextCatalog.getString('At least one'),\n        value: ngeoFilterCondition.OR\n      },\n      {\n        text: gettextCatalog.getString('None'),\n        value: ngeoFilterCondition.NOT\n      }\n    ];\n\n    /**\n     * List of geometry attributes.\n     * @type {Array.<!ngeox.Attribute>}\n     * @export\n     */\n    this.geometryAttributes = [];\n\n    /**\n     * List of other attribute names.\n     * @type {Array.<!ngeox.Attribute>}\n     * @export\n     */\n    this.otherAttributes = [];\n\n    /**\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.ruleUnlisteners_ = {};\n  }\n\n\n  /**\n   * Called on initialization of the controller.\n   *\n   * Loop through the attributes of the data source and separated them in 2\n   * lists: geometry and the others. Then, apply the filters to the data source.\n   */\n  $onInit() {\n\n    this.scope_.$watch(\n      () => this.aRuleIsActive,\n      this.handleARuleIsActiveChange_.bind(this)\n    );\n\n    // (1) Separate the attributes in 2: geometry and the others.\n    const attributes = googAsserts.assert(this.datasource.attributes);\n    for (const attribute of attributes) {\n      if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n        this.geometryAttributes.push(attribute);\n      } else {\n        this.otherAttributes.push(attribute);\n      }\n    }\n\n    // (2) All rules that have geometry are added in the featureOverlay\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      this.registerRule_(rule);\n    }\n\n    // (3) Apply the filters\n    this.apply();\n  }\n\n\n  /**\n   * Called on destruction of the controller.\n   *\n   * Reset the `filterRules` of the data source back to `null`.\n   * Clear the feature overlay.\n   */\n  $onDestroy() {\n    if (this.datasource.filterRules !== null) {\n      this.datasource.filterRules = null;\n    }\n    this.featureOverlay.clear();\n  }\n\n\n  /**\n   * @return {boolean} True if at least one rule is currently defined.\n   * @export\n   */\n  hasARule() {\n    return [].concat(this.customRules, this.directedRules).length > 0;\n  }\n\n\n  /**\n   * Loop in all directed and custom rules. Apply the rules that have a proper\n   * value inside the data source, in the `filterRules` property.\n   * @export\n   */\n  apply() {\n    // (1) Reset\n    this.datasource.filterRules = null;\n\n    // (2) Then set if there are filter rules with value.\n    this.timeout_(() => {\n      const filterRules = this.getRulesWithValue_();\n      if (filterRules.length) {\n        this.datasource.filterRules = filterRules;\n        // The current query results are cleared when we apply a filter.\n        this.ngeoMapQuerent_.clear();\n      }\n    });\n  }\n\n\n  /**\n   * Loop in all directed and custom rules. Issue a request to obtain the data\n   * and show the result.\n   * @export\n   */\n  getData() {\n    const filterRules = this.getRulesWithValue_();\n\n    // No need to do anything if there's no rules.\n    if (!filterRules.length) {\n      return;\n    }\n\n    const dataSource = this.datasource;\n    const limit = 1000;\n    const map = this.map;\n    const projCode = map.getView().getProjection().getCode();\n    const filter = this.ngeoRuleHelper_.createFilter({\n      dataSource: dataSource,\n      filterRules: filterRules,\n      srsName: projCode\n    });\n    googAsserts.assert(filter);\n\n    this.ngeoMapQuerent_.issue({\n      dataSources: [dataSource],\n      filter: filter,\n      limit: limit,\n      map: map\n    });\n  }\n\n\n  /**\n   * Loop in all directed and custom rules and collect those with a value.\n   * @return {Array.<!ngeo.rule.Rule>} Rules with value.\n   * @private\n   */\n  getRulesWithValue_() {\n    const filterRules = [];\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.value) {\n        filterRules.push(rule);\n      }\n    }\n    return filterRules;\n  }\n\n\n  /**\n   * Create and add a new custom rule using an attribute. The rule is activated\n   * after being created.\n   * @param {!ngeox.Attribute} attribute Attribute to use to create the custom\n   * rule.\n   * @export\n   */\n  createAndAddCustomRule(attribute) {\n    const rule = this.ngeoRuleHelper_.createRuleFromAttribute(attribute, true);\n    this.registerRule_(rule);\n    this.customRules.push(rule);\n\n    // Activate asynchronously allows the toolActivate manager to do its magic,\n    this.timeout_(() => {\n      rule.active = true;\n    }, 1);\n  }\n\n\n  /**\n   * @param {!ngeox.FilterCondition} condition Condition to set.\n   * @export\n   */\n  setCondition(condition) {\n    if (this.datasource.filterCondition !== condition.value) {\n      this.datasource.filterCondition = condition.value;\n    }\n  }\n\n  /**\n   * Remove a custom rule. Deactivate it first, then give time to the\n   * `ngeo-rule` directive to manage the deactivation of the rule.\n   * @param {!ngeo.rule.Rule} rule Custom rule to remove.\n   * @export\n   */\n  removeCustomRule(rule) {\n    rule.active = false;\n    this.timeout_(() => {\n      olArray.remove(this.customRules, rule);\n      this.unregisterRule_(rule);\n      rule.destroy();\n    });\n  }\n\n  /**\n   * @param {!ngeo.rule.Rule} rule Rule.\n   * @export\n   */\n  registerRule_(rule) {\n    const uid = olBase.getUid(rule);\n    this.ruleUnlisteners_[uid] = this.scope_.$watch(\n      () => rule.active,\n      this.handleRuleActiveChange_.bind(this)\n    );\n\n    if (rule instanceof ngeoRuleGeometry) {\n      this.featureOverlay.addFeature(rule.feature);\n    }\n  }\n\n  /**\n   * @param {!ngeo.rule.Rule} rule Rule.\n   * @export\n   */\n  unregisterRule_(rule) {\n    const uid = olBase.getUid(rule);\n    const unlistener = this.ruleUnlisteners_[uid];\n    googAsserts.assert(unlistener);\n    unlistener();\n    delete this.ruleUnlisteners_[uid];\n\n    if (rule instanceof ngeoRuleGeometry) {\n      this.featureOverlay.removeFeature(rule.feature);\n    }\n  }\n\n  /**\n   * Called when the active property of a rule changes. Set the `aRuleIsActive`\n   * property accordingly.\n   * @private\n   */\n  handleRuleActiveChange_() {\n    let aRuleIsActive = false;\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.active) {\n        aRuleIsActive = true;\n        break;\n      }\n    }\n    this.aRuleIsActive = aRuleIsActive;\n  }\n\n  /**\n   * Called when the `aRuleIsActive` property changes. Make sure that\n   * no rule is still active if the property is `false`.\n   * @private\n   */\n  handleARuleIsActiveChange_() {\n    if (this.aRuleIsActive) {\n      return;\n    }\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.active) {\n        rule.active = false;\n        break;\n      }\n    }\n  }\n\n};\n\nexports.controller('ngeoFilterController', exports.FilterController_);\n\n\nexport default exports;\n","/**\n * @module gmf.filters.filterselectorComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceHelper from 'gmf/datasource/Helper.js';\n\nimport gmfDatasourceOGC from 'gmf/datasource/OGC.js';\nimport gmfFiltersSavedFilters from 'gmf/filters/SavedFilters.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFilterComponent from 'ngeo/filter/component.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olArray from 'ol/array.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\nconst exports = angular.module('gmfFilterselector', [\n  gmfAuthenticationService.module.name,\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceHelper.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoMessageModalComponent.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoFilterComponent.name,\n  gmfFiltersSavedFilters.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/filters/filterselectorcomponent', require('./filterselectorcomponent.html'));\n});\n\nexports.value('gmfFilterselectorTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfFilterselectorTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/filters/filterselectorcomponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfFilterselectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfFilterselectorTemplateUrl($attrs, gmfFilterselectorTemplateUrl) {\n  return gmfFilterselectorTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n   *     The Gmf value service that determines the data source currently being\n   *     filtered.\n   * @param {gmf.datasource.Helper} gmfDataSourcesHelper Gmf data\n   *     sources helper service.\n   * @param {gmf.filters.SavedFilters} gmfSavedFilters Gmf saved filters service.\n   * @param {gmfx.User} gmfUser User.\n   * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n   * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo FeatureOverlay\n   *     manager\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfFilterselectorController\n   */\n  constructor($scope, $timeout, gettextCatalog, gmfDataSourceBeingFiltered,\n    gmfDataSourcesHelper, gmfSavedFilters, gmfUser, ngeoNotification,\n    ngeoFeatureOverlayMgr, ngeoRuleHelper\n  ) {\n\n    // Binding properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.active;\n\n    $scope.$watch(\n      () => this.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * The data source that can either be selected from the list or have\n     * its value set from an external source (for example: the layertree)\n     * and that requires to be ready before it can be filtered.\n     * @type {gmfx.datasource.DataSourceBeingFiltered}\n     * @export\n     */\n    this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n    $scope.$watch(\n      () => this.gmfDataSourceBeingFiltered.dataSource,\n      this.handleSelectedDataSourceChange_.bind(this)\n    );\n\n    /**\n     * @type {gmf.datasource.Helper}\n     * @private\n     */\n    this.gmfDataSourcesHelper_ = gmfDataSourcesHelper;\n\n    /**\n     * @type {gmf.filters.SavedFilters}\n     * @export\n     */\n    this.gmfSavedFilters = gmfSavedFilters;\n\n    // Close manage modal if the last item is removed.\n    $scope.$watchCollection(\n      () => this.gmfSavedFilters.currentDataSourceItems,\n      () => {\n        if (this.gmfSavedFilters.currentDataSourceItems.length === 0 &&\n           this.saveFilterManageModalShown) {\n          this.saveFilterManageModalShown = false;\n        }\n      }\n    );\n\n    /**\n     * @type {gmfx.User}\n     * @private\n     */\n    this.gmfUser_ = gmfUser;\n\n    $scope.$watch(\n      () => this.gmfUser_.functionalities,\n      this.handleGmfUserFunctionalitiesChange_.bind(this)\n    );\n\n    /**\n     * @type {ngeo.message.Notification}\n     * @private\n     */\n    this.ngeoNotification_ = ngeoNotification;\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay = googAsserts.assert(\n      ngeoFeatureOverlayMgr.getFeatureOverlay()\n    );\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n\n    // Inner properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.aRuleIsActive = false;\n\n    /**\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.customRules = null;\n\n    /**\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.directedRules = null;\n\n    /**\n     * @type {Array.<gmf.datasource.OGC>}\n     * @export\n     */\n    this.filtrableDataSources = [];\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.filtrableLayerNodeNames_ = null;\n\n    /**\n     * @type {gmfx.datasource.DataSources}\n     * @private\n     */\n    this.gmfDataSources_ = gmfDataSourcesHelper.collection;\n\n    /**\n     * @type {Array.<ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * The data source ready to be filtered, after it has been selected and\n     * prepared.\n     * @type {?gmf.datasource.OGC}\n     * @export\n     */\n    this.readyDataSource = null;\n\n    /**\n     * @type {!gmf.filters.filterselectorComponent.Controller_.RuleCache}\n     * @private\n     */\n    this.ruleCache_ = {};\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.saveFilterSaveModalShown = false;\n\n    // When the modal closes, reset name\n    $scope.$watch(\n      () => this.saveFilterSaveModalShown,\n      () => {\n        this.saveFilterName = '';\n      }\n    );\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.saveFilterName = '';\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.saveFilterManageModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.enableDataSourceRegistration_ = false;\n\n    $scope.$watch(\n      () => this.enableDataSourceRegistration_,\n      this.handleEnableDataSourceRegistrationChange_.bind(this)\n    );\n\n    /**\n     * The name of the data source that should be automatically selected\n     * by this component.\n     * @type {string|undefined}\n     * @private\n     */\n    this.defaultFiltrableDataSourceName_;\n\n    // Initialize the data sources registration\n    this.toggleDataSourceRegistration_();\n  }\n\n\n  /**\n   * @private\n   */\n  handleGmfUserFunctionalitiesChange_() {\n    const usrFunc = this.gmfUser_.functionalities;\n    if (usrFunc && usrFunc['filterable_layers']) {\n      this.filtrableLayerNodeNames_ = usrFunc['filterable_layers'];\n    } else {\n      this.filtrableLayerNodeNames_ = null;\n    }\n    if (usrFunc &&\n        usrFunc['preset_layer_filter'] &&\n        usrFunc['preset_layer_filter'][0]\n    ) {\n      this.defaultFiltrableDataSourceName_ = usrFunc['preset_layer_filter'][0];\n    } else {\n      this.defaultFiltrableDataSourceName_ = undefined;\n    }\n    this.toggleDataSourceRegistration_();\n  }\n\n\n  /**\n   * @private\n   */\n  toggleDataSourceRegistration_() {\n    const newDataSourceRegistration = !!this.filtrableLayerNodeNames_;\n    if (this.enableDataSourceRegistration_ !== newDataSourceRegistration) {\n      this.enableDataSourceRegistration_ = newDataSourceRegistration;\n    }\n  }\n\n\n  /**\n   * Called when the active property changes. Toggle data source registration.\n   * Also, when deactivated, deselect data source.\n   * @param {boolean} active Active.\n   * @private\n   */\n  handleActiveChange_(active) {\n    if (!active) {\n      this.aRuleIsActive = false;\n      this.timeout_(() => {\n        this.gmfDataSourceBeingFiltered.dataSource = null;\n      });\n    }\n  }\n\n\n  /**\n   * @param {boolean} register Whether register the data sources or not.\n   * @private\n   */\n  handleEnableDataSourceRegistrationChange_(register) {\n    const keys = this.listenerKeys_;\n\n    if (register) {\n      // Listen to data sources being added/removed\n      keys.push(\n        olEvents.listen(this.gmfDataSources_, 'add', this.handleDataSourcesAdd_, this),\n        olEvents.listen(this.gmfDataSources_, 'remove', this.handleDataSourcesRemove_, this)\n      );\n\n      // Manage the data sources that are already in the collection\n      this.gmfDataSources_.forEach(this.registerDataSource_, this);\n\n    } else {\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n\n      // Remove data sources that are in the collection\n      this.filtrableDataSources.length = 0;\n    }\n  }\n\n\n  /**\n   * Called when a data source is added to the collection of ngeo data sources.\n   * If the data source is 'valid', add it to the list of filtrable data\n   * sources.\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = evt.element;\n    if (dataSource instanceof gmfDatasourceOGC) {\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If the data source is 'valid', remove it from the list of\n   * filtrable data sources.\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (dataSource instanceof gmfDatasourceOGC) {\n      this.unregisterDataSource_(dataSource);\n    }\n  }\n\n\n  /**\n   * Register a data source if filtrable.  If it's the first time that the\n   * data source is about to be registered, then the `filtrable` property\n   * is set. Otherwise, it's used.\n   *\n   * @param {gmf.datasource.OGC} dataSource Data source\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    if (dataSource.filtrable === null) {\n      dataSource.filtrable = this.isDataSourceFiltrable_(dataSource);\n    }\n\n    if (dataSource.filtrable) {\n      this.filtrableDataSources.push(dataSource);\n\n      if (this.defaultFiltrableDataSourceName_ !== undefined &&\n          dataSource.name === this.defaultFiltrableDataSourceName_\n      ) {\n        this.gmfDataSourceBeingFiltered.dataSource = dataSource;\n      }\n    }\n  }\n\n\n  /**\n   * Unregister a data source if it's filtrable. Also, if it's the one\n   * that was currently selected, deselect it.\n   * @param {gmf.datasource.OGC} dataSource Data source\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    if (dataSource.filtrable) {\n      olArray.remove(this.filtrableDataSources, dataSource);\n\n      if (this.gmfDataSourceBeingFiltered.dataSource === dataSource) {\n        this.gmfDataSourceBeingFiltered.dataSource = null;\n      }\n    }\n  }\n\n\n  /**\n   * Determines whether the data source is valid for addition (or removal) to\n   * the list of filtrable data sources or not.\n   *\n   * To be filtrable, the data source must:\n   *\n   *  1) have its name in the list of filtrable layer node names\n   *  2) support WFS\n   *  3) have only one ogcLayers defined\n   *  4) the ogcLayer must be queryable\n   *\n   * If 1) is true but not any of the others, then the server has not been\n   * configured properly. In this case, a warning notification can be shown.\n   *\n   * @param {gmf.datasource.OGC} dataSource GMF data source object\n   * @param {boolean=} opt_notify Whether to show a warning notification or not\n   *     in case of a data source that has its name is in the list of\n   *     filtrable layer node names but it doesn't match the other requirements.\n   *     Defaults to `true.`\n   * @return {boolean} Whether the data source is valid to add to the list or\n   *     not.\n   * @private\n   */\n  isDataSourceFiltrable_(dataSource, opt_notify) {\n    let filtrable = true;\n    const gettext = this.gettextCatalog_;\n    const notify = opt_notify !== false;\n    const names = googAsserts.assert(this.filtrableLayerNodeNames_);\n    const msgs = [];\n\n    // (1) The name of the DS must be in list of filtrable layer node names\n    if (olArray.includes(names, dataSource.name)) {\n\n      // (2) The DS must support WFS\n      if (!dataSource.supportsWFS) {\n        msgs.push(gettext.getString(\n          'The data source doesn\\'t support WFS, which is required ' +\n          'to fetch the attributes to build the filter rules.'\n        ));\n      }\n\n      // (3) The DS must have only one ogcLayer\n      if (!dataSource.ogcLayers || !dataSource.ogcLayers.length) {\n        msgs.push(gettext.getString(\n          'The data source must have only 1 ogcLayer defined.'\n        ));\n      } else if (!dataSource.ogcLayers[0].queryable) {\n        // (4) The ogcLayer must be queryable\n        msgs.push(gettext.getString(\n          'The ogcLayer within the data source must be queryable.'\n        ));\n      }\n\n      filtrable = !msgs.length;\n\n      // Notify if the name is in list of filtrable layer node names but\n      // there are missing requirements.\n      if (notify && !filtrable) {\n        const p1 = gettext.getString(\n          `The following data source is marked as being filtrable,\n          but is missing some requirements: `\n        );\n        const p2 = `${dataSource.name} (${dataSource.id}).`;\n        const p3 = gettext.getString(\n          `Please, contact your administrator about this.\n          Here are the reasons: `\n        );\n        msgs.unshift(`${p1} ${p2} ${p3}`);\n        console.warn(msgs.join(' '));\n        this.ngeoNotification_.notify({\n          msg: msgs.join(' '),\n          type: ngeoMessageMessage.Type.WARNING\n        });\n      }\n    } else {\n      filtrable = false;\n    }\n\n    return filtrable;\n  }\n\n  /**\n   * @param {?gmf.datasource.OGC} dataSource Newly selected data source\n   *     object.\n   * @private\n   */\n  handleSelectedDataSourceChange_(dataSource) {\n\n    this.aRuleIsActive = false;\n    this.customRules = null;\n    this.directedRules = null;\n    this.readyDataSource = null;\n    this.gmfSavedFilters.currentDataSourceId = null;\n\n    // No need to do anything if no data source is selected\n    if (!dataSource) {\n      return;\n    }\n\n    // A data source has been selected. Make sure the component is active.\n    if (!this.active) {\n      this.active = true;\n    }\n\n    this.gmfDataSourcesHelper_.prepareFiltrableDataSource(\n      dataSource\n    ).then((dataSource) => {\n\n      // Data source is ready. Get any existing rules or create new ones from\n      // the attributes\n      let item = this.getRuleCacheItem_(dataSource);\n      if (!item) {\n        item = {\n          customRules: [],\n          directedRules: []\n        };\n        this.setRuleCacheItem_(dataSource, item);\n        if (dataSource.gmfLayer.metadata &&\n            dataSource.gmfLayer.metadata.directedFilterAttributes &&\n            dataSource.gmfLayer.metadata.directedFilterAttributes.length\n        ) {\n          const directedAttributes =\n              dataSource.gmfLayer.metadata.directedFilterAttributes;\n          const attributes = googAsserts.assert(dataSource.attributes);\n          for (const attribute of attributes) {\n            if (olArray.includes(directedAttributes, attribute.name)) {\n              item.directedRules.push(\n                this.ngeoRuleHelper_.createRuleFromAttribute(attribute)\n              );\n            }\n          }\n        }\n      }\n\n      this.customRules = item.customRules;\n      this.directedRules = item.directedRules;\n      this.readyDataSource = dataSource;\n      this.gmfSavedFilters.currentDataSourceId = dataSource.id;\n\n    });\n  }\n\n  /**\n   * @param {ngeo.datasource.DataSource} dataSource Data source.\n   * @return {?gmf.filters.filterselectorComponent.Controller_.RuleCacheItem} Rule cache item.\n   * @private\n   */\n  getRuleCacheItem_(dataSource) {\n    return this.ruleCache_[dataSource.id] || null;\n  }\n\n  /**\n   * @param {ngeo.datasource.DataSource} dataSource Data source.\n   * @param {gmf.filters.filterselectorComponent.Controller_.RuleCacheItem} item Rule cache item.\n   * @private\n   */\n  setRuleCacheItem_(dataSource, item) {\n    this.ruleCache_[dataSource.id] = item;\n  }\n\n  /**\n   * @export\n   */\n  saveFilterShowModal() {\n    this.saveFilterSaveModalShown = true;\n  }\n\n  /**\n   * @export\n   */\n  saveFilterSave() {\n\n    const name = this.saveFilterName;\n    const dataSource = googAsserts.assert(this.readyDataSource);\n    const dataSourceId = dataSource.id;\n    const alreadyExist = (this.gmfSavedFilters.indexOfItem(\n      name, dataSourceId) !== -1);\n    const condition = dataSource.filterCondition;\n\n    const msg = this.gettextCatalog_.getString(\n      `A filter with the same name already exists.\n      Do you want to overwrite it?`\n    );\n    if (!alreadyExist || confirm(msg)) {\n      // (1) Serialize the existing custom and directed rules\n      const customRules = this.customRules ?\n        this.ngeoRuleHelper_.serializeRules(this.customRules) : [];\n      const directedRules = this.directedRules ?\n        this.ngeoRuleHelper_.serializeRules(this.directedRules) : [];\n\n      // (2) Ask the service to save it\n      const item = /** @type {!gmf.filters.SavedFilters.Item} */ ({\n        condition,\n        customRules,\n        dataSourceId,\n        directedRules,\n        name\n      });\n      this.gmfSavedFilters.save(item);\n\n      // (3) Close popup, which resets the name\n      this.saveFilterSaveModalShown = false;\n    }\n  }\n\n  /**\n   * Load a saved filter item, replacing the current rules.\n   * @param {!gmf.filters.SavedFilters.Item} filterItem Filter item.\n   * @export\n   */\n  saveFilterLoadItem(filterItem) {\n\n    const dataSource = googAsserts.assert(this.readyDataSource);\n\n    // (1) Reset current rules\n    this.customRules = null;\n    this.directedRules = null;\n\n    const customRules = this.ngeoRuleHelper_.createRules(\n      filterItem.customRules);\n    const directedRules = this.ngeoRuleHelper_.createRules(\n      filterItem.directedRules);\n\n    // Timeout, which ensures the destruction of the previous filter component\n    // and the creation of a new one\n    this.timeout_(() => {\n      // (2) Set rules\n      this.customRules = customRules;\n      this.directedRules = directedRules;\n\n      // (3) Set condition\n      dataSource.filterCondition = filterItem.condition;\n\n      // (4) Update cache item\n      const cacheItem = googAsserts.assert(this.getRuleCacheItem_(dataSource));\n      cacheItem.customRules = customRules;\n      cacheItem.directedRules = directedRules;\n    });\n  }\n\n  /**\n   * @export\n   */\n  saveFilterManage() {\n    this.saveFilterManageModalShown = true;\n  }\n\n  /**\n   * Remove a saved filter item.\n   * @param {!gmf.filters.SavedFilters.Item} item Filter item.\n   * @export\n   */\n  saveFilterRemoveItem(item) {\n    this.gmfSavedFilters.remove(item);\n  }\n\n};\n\n\n/**\n * @typedef {Object.<number, !gmf.filters.filterselectorComponent.Controller_.RuleCacheItem>}\n */\nexports.Controller_.RuleCache;\n\n\n/**\n * @typedef {{\n *     customRules: (Array.<ngeo.rule.Rule>),\n *     directedRules: (Array.<ngeo.rule.Rule>)\n * }}\n */\nexports.Controller_.RuleCacheItem;\n\n\nexports.component('gmfFilterselector', {\n  bindings: {\n    active: '=',\n    map: '<',\n    toolGroup: '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfFilterselectorTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.filters.module\n */\nimport gmfFiltersFilterselectorComponent from 'gmf/filters/filterselectorComponent.js';\nimport gmfFiltersSavedFilters from 'gmf/filters/SavedFilters.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfFiltersModule', [\n  gmfFiltersFilterselectorComponent.name,\n  gmfFiltersSavedFilters.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.timeSliderComponent\n */\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\n\nimport 'jquery-ui/ui/widgets/slider.js';\nimport 'angular-ui-slider';\nimport './timeslider.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeTimeSliderComponent', [\n  ngeoMiscWMSTime.module.name,\n  'ui.slider',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree/timesliderComponent', require('./timesliderComponent.html'));\n});\n\n\n/**\n * Provide a directive to select a single date or a range of dates with a slider\n * Example:\n *\n *      <gmf-time-slider\n *          gmf-time-slider-time=\"{\n *            maxValue: '2013-12-31T00:00:00Z',\n *            minValue: '2006-01-01T00:00:00Z',\n *            mode: 'range'}\"\n *          gmf-time-slider-on-date-selected=\"ctrl.onDateSelected(time)\">\n *      </gmf-time-slider>\n *\n * @htmlAttribute {ngeox.TimeProperty} gmf-time-slider-time parameter for initialization.\n * @htmlAttribute {function()} gmf-time-slider-on-date-selected Expression evaluated after\n * date(s) changed\n * @param {angular.$timeout} $timeout angular timeout service\n * @param {angular.$filter} $filter angular filter service\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfTimeSlider\n */\nexports.directive_ = function($timeout, $filter) {\n  return {\n    scope: {\n      onDateSelected: '&gmfTimeSliderOnDateSelected',\n      time: '=gmfTimeSliderTime'\n    },\n    bindToController: true,\n    controller: 'gmfTimeSliderController as sliderCtrl',\n    restrict: 'AE',\n    templateUrl: 'gmf/layertree/timesliderComponent',\n    link: /** @type {!angular.LinkingFunctions} */ ({\n      pre: function preLink(scope, element, attrs, ctrl) {\n        ctrl.init();\n\n        ctrl.sliderOptions['stop'] = onSliderReleased_;\n        ctrl.sliderOptions['slide'] = computeDates_;\n\n        function onSliderReleased_(e, sliderUi) {\n          ctrl.onDateSelected({\n            time: computeDates_(e, sliderUi)\n          });\n          scope.$apply();\n        }\n\n        function computeDates_(e, sliderUi) {\n          let sDate, eDate, wmstime;\n          if (sliderUi.values) {\n            sDate = new Date(ctrl.getClosestValue_(sliderUi.values[0]));\n            eDate = new Date(ctrl.getClosestValue_(sliderUi.values[1]));\n            ctrl.dates = [sDate, eDate];\n            wmstime = {\n              start: sDate.getTime(),\n              end: eDate.getTime()\n            };\n          } else {\n            sDate = new Date(ctrl.getClosestValue_(sliderUi.value));\n            ctrl.dates = sDate;\n            wmstime = {\n              start: sDate.getTime()\n            };\n          }\n          scope.$apply();\n          return wmstime;\n        }\n      }\n    })\n  };\n};\n\n\nexports.directive('gmfTimeSlider', exports.directive_);\n\n\n/**\n * TimeSliderController - directive controller\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime WMSTime service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfTimeSliderController\n */\nexports.Controller_ = function($scope, ngeoWMSTime) {\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * Function called after date(s) changed/selected\n   * @function\n   * @export\n   */\n  this.onDateSelected;\n\n\n  /**\n   * A time object for directive initialization\n   * @type {ngeox.TimeProperty}\n   * @export\n   */\n  this.time;\n\n  /**\n   * If the component is used to select a date range\n   * @type {boolean}\n   * @export\n   */\n  this.isModeRange;\n\n  /**\n   * Minimal value of the slider (time in ms)\n   * @type {number}\n   * @export\n   */\n  this.minValue;\n\n  /**\n   * Maximal value of the slider (time in ms)\n   * @type {number}\n   * @export\n   */\n  this.maxValue;\n\n  /**\n   * Used when WMS time object has a property 'values' instead of an interval\n   * @type (?Array<number>)\n   */\n  this.timeValueList;\n\n  /**\n   * Default Slider options (used by ui-slider directive)\n   * @type {{\n   *  range : boolean,\n   *  min : number,\n   *  max : number\n   * }}\n   * @export\n   */\n  this.sliderOptions;\n\n  /**\n   * Model for the ui-slider directive (date in ms format)\n   * @type {Array.<number>|number}\n   * @export\n   */\n  this.dates;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  this.timeValueList = this.getTimeValueList_();\n\n  // Fetch the initial options for the component\n  const initialOptions_ = this.ngeoWMSTime_.getOptions(this.time);\n  this.isModeRange = this.time.mode === 'range';\n  this.minValue = initialOptions_.minDate;\n  this.maxValue = initialOptions_.maxDate;\n  this.dates = this.isModeRange ? [initialOptions_.values[0], initialOptions_.values[1]] :\n    initialOptions_.values;\n  this.sliderOptions = {\n    range: this.isModeRange,\n    min: this.minValue,\n    max: this.maxValue\n  };\n};\n\n/**\n * TimeSliderController.prototype.getTimeValueList_ - Get a list of time value instead\n * of using the wmstime interval as a list of possibles values\n * @private\n * @return {Array<number>}  - List of timestamp representing possible values\n */\nexports.Controller_.prototype.getTimeValueList_ = function() {\n  const wmsTime = this.time;\n  let timeValueList = null;\n  const minDate = new Date(this.minValue);\n  const maxDate = new Date(this.maxValue);\n\n  if (wmsTime.values) {\n    timeValueList = [];\n    wmsTime.values.forEach((date) => {\n      timeValueList.push(new Date(date).getTime());\n    });\n  } else {\n    const maxNbValues = 1024;\n    const endDate = new Date(minDate.getTime());\n    endDate.setFullYear(minDate.getFullYear() + maxNbValues * wmsTime.interval[0]);\n    endDate.setMonth(minDate.getMonth() + maxNbValues * wmsTime.interval[1],\n      minDate.getDate() + maxNbValues * wmsTime.interval[2]);\n    endDate.setSeconds(minDate.getSeconds() + maxNbValues * wmsTime.interval[3]);\n\n    if (endDate > maxDate) {\n      // Transform interval to a list of values when the number\n      // of values is below a threshold (maxNbValues)\n      timeValueList = [];\n      for (let i = 0; ; i++) {\n        const nextDate = new Date(minDate.getTime());\n        nextDate.setFullYear(minDate.getFullYear() + i * wmsTime.interval[0]);\n        nextDate.setMonth(minDate.getMonth() + i * wmsTime.interval[1],\n          minDate.getDate() + i * wmsTime.interval[2]);\n        nextDate.setSeconds(minDate.getSeconds() + i * wmsTime.interval[3]);\n        if (nextDate <= maxDate) {\n          timeValueList.push(nextDate.getTime());\n        } else {\n          break;\n        }\n      }\n    }\n  }\n  return timeValueList;\n};\n\n\n/**\n * Compute the closest available date from the given timestamp\n * @param  {number} timestamp selected datetime (in ms format)\n * @return {number} the closest available datetime (in ms format) from the timestamp\n * @private\n */\nexports.Controller_.prototype.getClosestValue_ = function(timestamp) {\n  if (timestamp <= this.minValue) {\n    return this.minValue;\n  }\n\n  if (timestamp >= this.maxValue) {\n    return this.maxValue;\n  }\n\n  if (this.timeValueList) {\n    // Time stops are defined as a list of values\n    let index;\n    let leftIndex = 0;\n    let rightIndex = this.timeValueList.length - 1;\n\n    while ((rightIndex - leftIndex) > 1) {\n      index = Math.floor((leftIndex + rightIndex) / 2);\n      if (this.timeValueList[index] >= timestamp) {\n        rightIndex = index;\n      } else {\n        leftIndex = index;\n      }\n    }\n\n    const leftDistance = Math.abs(this.timeValueList[leftIndex] - timestamp);\n    const rightDistance = Math.abs(this.timeValueList[rightIndex] - timestamp);\n\n    return this.timeValueList[leftDistance < rightDistance ? leftIndex : rightIndex];\n  } else {\n    // Time stops are defined by a start date plus an interval\n    const targetDate = new Date(timestamp);\n    const startDate = new Date(this.minValue);\n    let bestDate = new Date(this.minValue);\n    const maxDate = new Date(this.maxValue);\n    let bestDistance = Math.abs(targetDate - bestDate);\n\n    for (let i = 1; ; i++) {\n      // The start date should always be used as a reference\n      // because adding a month twice could differ from adding\n      // two months at once\n      const next = new Date(startDate.getTime());\n      next.setFullYear(startDate.getFullYear() + i * this.time.interval[0]);\n      next.setMonth(startDate.getMonth() + i *  this.time.interval[1],\n        startDate.getDate() + i * this.time.interval[2]);\n      next.setSeconds(startDate.getSeconds() + i * this.time.interval[3]);\n\n      if (next > maxDate) {\n        break;\n      }\n\n      const distance = Math.abs(targetDate - next);\n      if (distance <= bestDistance) {\n        bestDate = next;\n        bestDistance = distance;\n      } else {\n        break;\n      }\n    }\n\n    return bestDate.getTime();\n  }\n};\n\n\n/**\n * Format and localize time regarding a resolution.\n * @param {number} time (in ms format) timestamp to format and localize.\n * @return {string} Localized date string regarding the resolution.\n * @export\n */\nexports.Controller_.prototype.getLocalizedDate = function(time) {\n  return this.ngeoWMSTime_.formatTimeValue(time, this.time.resolution);\n};\n\n\nexports.controller('gmfTimeSliderController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.module\n */\nimport gmfLayertreeComponent from 'gmf/layertree/component.js';\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTimeSliderComponent from 'gmf/layertree/timeSliderComponent.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\n\nimport './common.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeModule', [\n  gmfLayertreeComponent.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTimeSliderComponent.name,\n  gmfLayertreeTreeManager.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.module\n */\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfPermalinkShareService from 'gmf/permalink/ShareService.js';\nimport gmfPermalinkShareComponent from 'gmf/permalink/shareComponent.js';\n\nimport './share.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfPermalinkModule', [\n  gmfPermalinkPermalink.module.name,\n  gmfPermalinkShareService.module.name,\n  gmfPermalinkShareComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optional. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.scaleselector\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport * as olEvents from 'ol/events.js';\nimport 'bootstrap/js/dropdown.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/map/scaleselector';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/map/scaleselector', require('./scaleselector.html'));\n});\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optional. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nconst directive = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', directive);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nconst ScaleselectorController = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  googAsserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = ScaleselectorController.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nScaleselectorController.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nScaleselectorController.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nScaleselectorController.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nScaleselectorController.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nScaleselectorController.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nScaleselectorController.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController', ScaleselectorController);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.module\n */\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.map.component\n */\nimport gmfPermalinkModule from 'gmf/permalink/module.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkModule.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapModule.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/map', require('./component.html'));\n});\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: 'gmf/map'\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.map.mousepositionComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport olControlMousePosition from 'ol/control/MousePosition.js';\nimport * as olProj from 'ol/proj.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapMouseposition', [\n  ngeoMiscFilters.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/map/mousepositionComponent', require('./mousepositionComponent.html'));\n});\n\n\nexports.value('gmfMapMousepositionTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfMapMousepositionTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/map/mousepositionComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfMapMousepositionTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfMapMousepositionTemplateUrl($attrs, gmfMapMousepositionTemplateUrl) {\n  return gmfMapMousepositionTemplateUrl($attrs);\n}\n\n/**\n * Provide a component to display the mouse position coordinates depending\n * on the chosen projection. The component also provides a projection picker\n * to choose how the coordinates are displayed.\n * service.\n *\n * Example:\n *  <gmf-mouseposition gmf-mouseposition-map=\"ctrl.map\"\n *     gmf-mouseposition-projections=\"ctrl.projections\">\n *  </gmf-mouseposition>\n *\n * @htmlAttribute {ol.Map} gmf-mouseposition-map The map.\n * @htmlAttribute {Array.<gmfx.MousePositionProjection>}\n *    gmf-mouseposition-projection The list of the projections.\n *\n * @ngdoc component\n * @ngname gmfMouseposition\n */\nexports.component_ = {\n  controller: 'gmfMousepositionController as ctrl',\n  bindings: {\n    'map': '<gmfMousepositionMap',\n    'projections': '<gmfMousepositionProjections'\n  },\n  templateUrl: gmfMapMousepositionTemplateUrl\n};\n\nexports.component('gmfMouseposition',\n  exports.component_);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfMousepositionController\n */\nexports.Controller_ = function($element, $filter, $scope, gettextCatalog) {\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!Array.<!gmfx.MousePositionProjection>}\n   * @export\n   */\n  this.projections;\n\n  /**\n   * @type {!gmfx.MousePositionProjection}\n   * @export\n   */\n  this.projection;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type  {?ol.control.MousePosition}\n   * @private\n   */\n  this.control_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.$scope_.$on('gettextLanguageChanged', () => {\n    this.initOlControl_();\n  });\n\n  // Init control once, in case of applications that never set the language.\n  this.initOlControl_();\n};\n\n\n/**\n * Init the ol.control.MousePosition\n * @private\n */\nexports.Controller_.prototype.initOlControl_ = function() {\n  if (this.control_ !== null) {\n    this.map.removeControl(this.control_);\n  }\n\n  // function that apply the filter.\n  const formatFn = function(coordinates) {\n    const filterAndArgs = this.projection.filter.split(':');\n    const filter = this.$filter_(filterAndArgs.shift());\n    googAsserts.assertFunction(filter);\n    const args = filterAndArgs;\n    args.unshift(coordinates);\n    return filter.apply(this, args);\n  };\n\n  const gettextCatalog = this.gettextCatalog_;\n  this.control_ = new olControlMousePosition({\n    className: 'gmf-mouseposition-control',\n    coordinateFormat: formatFn.bind(this),\n    target: angular.element('.gmf-mouseposition-control-target', this.$element_)[0],\n    undefinedHTML: gettextCatalog.getString('Coordinates')\n  });\n\n  this.setProjection(this.projections[0]);\n\n  this.map.addControl(this.control_);\n};\n\n\n/**\n * @param {gmfx.MousePositionProjection} projection The new projection to use.\n * @export\n */\nexports.Controller_.prototype.setProjection = function(projection) {\n  this.control_.setProjection(olProj.get(projection.code));\n  this.projection = projection;\n};\n\nexports.controller('gmfMousepositionController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.map.module\n */\nimport gmfMapComponent from 'gmf/map/component.js';\nimport gmfMapMousepositionComponent from 'gmf/map/mousepositionComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapModule', [\n  gmfMapComponent.name,\n  gmfMapMousepositionComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.grid.Config\n */\nimport * as olBase from 'ol/index.js';\n\n/**\n * @param {Array.<Object>|undefined} data Entries/objects to be shown in a grid.\n * @param {Array.<ngeox.GridColumnDef>|undefined} columnDefs Column definition of a grid.\n * @constructor\n * @struct\n * @export\n */\nconst exports = function(data, columnDefs) {\n  /**\n   * @type {Array.<Object>|undefined}\n   * @export\n   */\n  this.data = data;\n\n  /**\n   * @type {Array.<ngeox.GridColumnDef>|undefined}\n   * @export\n   */\n  this.columnDefs = columnDefs;\n\n  /**\n   * @type {!Object.<string, Object>}\n   * @export\n   */\n  this.selectedRows = {};\n};\n\n\n/**\n * Get an ID for a row.\n * @param {Object} attributes An entry/row.\n * @return {string} Unique id for this object.\n * @export\n */\nexports.getRowUid = function(attributes) {\n  return `${olBase.getUid(attributes)}`;\n};\n\n\n/**\n * Is the given row selected?\n * @param {Object} attributes An entry/row.\n * @return {boolean} True if already selected. False otherwise.\n * @export\n */\nexports.prototype.isRowSelected = function(attributes) {\n  return !!this.selectedRows[exports.getRowUid(attributes)];\n};\n\n\n/**\n * Returns the number of selected rows.\n * @return {number} Number of selected rows.\n * @export\n */\nexports.prototype.getSelectedCount = function() {\n  return Object.keys(this.selectedRows).length;\n};\n\n\n/**\n * Returns the selected rows.\n * @return {Array.<Object>} Selected rows in the current ordering.\n * @export\n */\nexports.prototype.getSelectedRows = function() {\n  return this.data.filter(row => this.isRowSelected(row));\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @public\n */\nexports.prototype.selectRow = function(attributes) {\n  const uid = exports.getRowUid(attributes);\n  this.selectedRows[uid] = attributes;\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @public\n */\nexports.prototype.toggleRow = function(attributes) {\n  const uid = exports.getRowUid(attributes);\n  const isSelected = this.isRowSelected(attributes);\n  if (isSelected) {\n    delete this.selectedRows[uid];\n  } else {\n    this.selectedRows[uid] = attributes;\n  }\n};\n\n\n/**\n * Select all rows.\n * @export\n */\nexports.prototype.selectAll = function() {\n  this.data.forEach((attributes) => {\n    this.selectRow(attributes);\n  });\n};\n\n\n/**\n * Deselect all rows.\n * @export\n */\nexports.prototype.unselectAll = function() {\n  for (const rowId in this.selectedRows) {\n    delete this.selectedRows[rowId];\n  }\n};\n\n\n/**\n * Invert selection.\n * @export\n */\nexports.prototype.invertSelection = function() {\n  this.data.forEach((attributes) => {\n    this.toggleRow(attributes);\n  });\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoGridConfig', []);\n\n\nexport default exports;\n","/**\n * @module ngeo.grid.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGridConfig from 'ngeo/grid/Config.js';\nimport * as olHas from 'ol/has.js';\n\nimport 'floatthead';\nimport 'angular-float-thead';\nimport 'font-awesome/css/font-awesome.css';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGrid', [\n  ngeoGridConfig.module.name,\n  ngeoMiscFilters.name,\n  'floatThead',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/grid', require('./component.html'));\n});\n\n\nexports.value('ngeoGridTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoGridTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/grid';\n  }\n);\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoGridTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoGridTemplateUrl($attrs, ngeoGridTemplateUrl) {\n  return ngeoGridTemplateUrl($attrs);\n}\n\n\n/**\n * A grid component for displaying tabular data. The columns of the grid\n * are sortable, rows can be selected with a single click (also in combination\n * with SHIFT and CTRL/Meta).\n *\n * Example:\n *\n *     <ngeo-grid\n *       ngeo-grid-configuration=\"::ctrl.gridConfiguration\"\n *     </ngeo-grid>\n *\n * @htmlAttribute {ngeo.grid.Config} ngeo-grid-configuration The\n * configuration to use.\n *\n * @ngdoc component\n * @ngname ngeoGrid\n */\nexports.component_ = {\n  controller: 'ngeoGridController as ctrl',\n  bindings: {\n    'configuration': '=ngeoGridConfiguration'\n  },\n  templateUrl: ngeoGridTemplateUrl\n};\n\nexports.component('ngeoGrid', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoGridController\n */\nexports.Controller_ = function($scope) {\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.grid.Config}\n   * @export\n   */\n  this.configuration;\n\n  /**\n   * @type {Object.<string, Object>}\n   * @export\n   */\n  this.selectedRows;\n\n  /**\n   * The name of the column used to sort the grid.\n   * @type {string}\n   * @export\n   */\n  this.sortedBy;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.sortAscending = true;\n\n  /**\n   * Configuration object for float-thead.\n   * @type {Object}\n   * @export\n   */\n  this.floatTheadConfig = {\n    'scrollContainer': function($table) {\n      return $table.closest('.ngeo-grid-table-container');\n    }\n  };\n};\n\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.selectedRows = this.configuration.selectedRows;\n};\n\n\n/**\n * Sort function that always puts undefined values to the bottom of the grid.\n * A new call will sort ascending. A next one will sort descending (and so\n * on).\n * @param {string} columnName The name of the column that should be used to\n *    sort the data.\n * @export\n */\nexports.Controller_.prototype.sort = function(columnName) {\n  this.sortAscending = this.sortedBy === columnName ? !this.sortAscending : true;\n  this.sortedBy = columnName;\n\n  const asc = this.sortAscending ? 1 : -1;\n  this.configuration.data.sort((attributes1, attributes2) => {\n    if (!attributes1[columnName]) {\n      return 1;\n    }\n    if (!attributes2[columnName]) {\n      return -1;\n    }\n    return attributes1[columnName] > attributes2[columnName] ? asc : -asc;\n  });\n};\n\n\n/**\n * Handler for clicks on a row.\n * @param {Object} attributes An entry/row.\n * @param {jQuery.Event} event Event.\n * @export\n */\nexports.Controller_.prototype.clickRow = function(attributes, event) {\n  const shiftKey = this.isShiftKeyOnly_(event);\n  const platformModifierKey = this.isPlatformModifierKeyOnly_(event);\n\n  this.clickRow_(attributes, shiftKey, platformModifierKey);\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @param {boolean} shiftKey Shift pressed?\n * @param {boolean} platformModifierKey CTRL/Meta pressed?\n * @private\n */\nexports.Controller_.prototype.clickRow_ = function(\n  attributes, shiftKey, platformModifierKey) {\n\n  if (shiftKey && !platformModifierKey) {\n    this.selectRange_(attributes);\n  } else if (!shiftKey && platformModifierKey) {\n    this.configuration.toggleRow(attributes);\n  } else {\n    const isSelected = this.configuration.isRowSelected(attributes);\n    this.configuration.unselectAll();\n    if (!isSelected) {\n      this.configuration.selectRow(attributes);\n    }\n  }\n};\n\n\n/**\n * Selects all rows between the given row and the closest already selected row.\n * @param {Object} attributes An entry/row.\n * @private\n */\nexports.Controller_.prototype.selectRange_ = function(attributes) {\n  const targetUid = ngeoGridConfig.getRowUid(attributes);\n  const data = this.configuration.data;\n\n  if (this.configuration.isRowSelected(attributes)) {\n    return;\n  }\n\n  // get the position of the clicked and all already selected rows\n  /** @type {number|undefined} */\n  let posClickedRow = undefined;\n  const posSelectedRows = [];\n  for (let i = 0; i < data.length; i++) {\n    const currentRow = data[i];\n    const currentUid = ngeoGridConfig.getRowUid(currentRow);\n\n    if (targetUid === currentUid) {\n      posClickedRow = i;\n    } else if (this.configuration.isRowSelected(currentRow)) {\n      posSelectedRows.push(i);\n    }\n  }\n  googAsserts.assert(posClickedRow !== undefined);\n\n  if (posSelectedRows.length == 0) {\n    // if no other row is selected, select the clicked one and stop\n    this.configuration.selectRow(attributes);\n  }\n\n  // find the selected row which is the closest to the clicked row\n  let distance = Infinity;\n  let posClosestRow = posSelectedRows[0];\n  for (let j = 0; j < posSelectedRows.length; j++) {\n    const currentPos = posSelectedRows[j];\n    const currentDistance = Math.abs(currentPos - posClickedRow);\n    if (distance > currentDistance) {\n      distance = currentDistance;\n      posClosestRow = currentPos;\n    }\n    // note: this could be optimized because `posSelectedRows` is ordered.\n  }\n\n  // then select all rows between the clicked one and the closest\n  const rangeStart = (posClickedRow < posClosestRow) ? posClickedRow : posClosestRow;\n  const rangeEnd = (posClickedRow > posClosestRow) ? posClickedRow : posClosestRow;\n\n  for (let l = rangeStart; l <= rangeEnd; l++) {\n    this.configuration.selectRow(data[l]);\n  }\n};\n\n\n/**\n * Prevent the default browser behaviour of selecting text\n * when selecting multiple rows with SHIFT or CTRL/Meta.\n * @param {jQuery.Event} event Event.\n * @export\n */\nexports.Controller_.prototype.preventTextSelection = function(event) {\n  const shiftKey = this.isShiftKeyOnly_(event);\n  const platformModifierKey = this.isPlatformModifierKeyOnly_(event);\n\n  if (shiftKey || platformModifierKey) {\n    event.preventDefault();\n  }\n};\n\n\n/**\n * Same as `ol.events.condition.platformModifierKeyOnly`.\n * @param {jQuery.Event} event Event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @private\n */\nexports.Controller_.prototype.isPlatformModifierKeyOnly_ = function(event) {\n  return !event.altKey &&\n    (olHas.MAC ? event.metaKey : event.ctrlKey) &&\n    !event.shiftKey;\n};\n\n\n/**\n * Same as `ol.events.condition.shiftKeyOnly`.\n * @param {jQuery.Event} event Event.\n * @return {boolean} True if only the shift key is pressed.\n * @private\n */\nexports.Controller_.prototype.isShiftKeyOnly_ = function(event) {\n  return (\n    !event.altKey &&\n      !(event.metaKey || event.ctrlKey) &&\n      event.shiftKey);\n};\n\n\nexports.controller('ngeoGridController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.query.gridComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadCsv from 'ngeo/download/Csv.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\n/** @suppress {extraRequire} */\nimport ngeoGridComponent from 'ngeo/grid/component.js';\n\nimport ngeoGridConfig from 'ngeo/grid/Config.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/** @suppress {extraRequire} - required for `ngeoQueryResult` */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olCollection from 'ol/Collection.js';\nimport * as olExtent from 'ol/extent.js';\nimport olMap from 'ol/Map.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryGridComponent', [\n  ngeoDownloadCsv.module.name,\n  ngeoDownloadService.name,\n  ngeoGridComponent.name,\n  ngeoGridConfig.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.value('gmfDisplayquerygridTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfDisplayquerygridTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/query/gridComponent';\n  }\n);\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/query/gridComponent', require('./gridComponent.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfDisplayquerygridTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfDisplayquerygridTemplateUrl($element, $attrs, gmfDisplayquerygridTemplateUrl) {\n  return gmfDisplayquerygridTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provides a component to display results of the {@link ngeo.queryResult} in a\n * grid and shows related features on the map using\n * the {@link ngeo.map.FeatureOverlayMgr}.\n *\n * You can override the default component's template by setting the\n * value `gmfDisplayquerygridTemplateUrl`.\n *\n * Features displayed on the map use a default style but you can override these\n * styles by passing ol.style.Style objects as attributes of this component.\n *\n * Note: the following ng-class need to be present in the interface <body> element to display the footer\n * when the grid is active (initially there should be the code for the profile tool):\n *      <body ng-class=\"{'gmf-profile-chart-active': !!profileChartActive, 'gmf-query-grid-active': !!queryGridActive}\">\n *\n * Example:\n *\n *      <gmf-displayquerygrid\n *        gmf-displayquerygrid-map=\"ctrl.map\"\n *        gmf-displayquerygrid-featuresstyle=\"ctrl.styleForAllFeatures\"\n *        gmf-displayquerygrid-selectedfeaturestyle=\"ctrl.styleForTheCurrentFeature\">\n *      </gmf-displayquerygrid>\n *\n * @htmlAttribute {boolean} gmf-displayquerygrid-active The active state of the component.\n * @htmlAttribute {ol.style.Style} gmf-displayquerygrid-featuresstyle A style\n *     object for all features from the result of the query.\n * @htmlAttribute {ol.style.Style} gmf-displayquerygrid-selectedfeaturestyle A style\n *     object for the currently selected features.\n * @htmlAttribute {ol.Map} gmf-displayquerygrid-map The map.\n * @htmlAttribute {boolean?} gmf-displayquerygrid-removeemptycolumns Optional. Should\n *     empty columns be hidden? Default: `false`.\n * @htmlAttribute {number?} gmf-displayquerygrid-maxrecenterzoom Optional. Maximum\n *     zoom-level to use when zooming to selected features.\n * @htmlAttribute {gmfx.GridMergeTabs?} gmf-displayquerygrid-gridmergetabs Optional.\n *     Configuration to merge grids with the same attributes into a single grid.\n *\n * @ngdoc component\n * @ngname gmfDisplayquerygrid\n */\nexports.component_ = {\n  controller: 'GmfDisplayquerygridController as ctrl',\n  bindings: {\n    'active': '=?gmfDisplayquerygridActive',\n    'featuresStyleFn': '&gmfDisplayquerygridFeaturesstyle',\n    'selectedFeatureStyleFn': '&gmfDisplayquerygridSelectedfeaturestyle',\n    'getMapFn': '&gmfDisplayquerygridMap',\n    'removeEmptyColumnsFn': '&?gmfDisplayquerygridRemoveemptycolumns',\n    'maxResultsFn': '&?gmfDisplayquerygridMaxresults',\n    'maxRecenterZoomFn': '&?gmfDisplayquerygridMaxrecenterzoom',\n    'mergeTabs': '<?gmfDisplayquerygridMergetabs'\n  },\n  templateUrl: gmfDisplayquerygridTemplateUrl\n};\n\n\nexports.component('gmfDisplayquerygrid', exports.component_);\n\n\n/**\n * Controller for the query grid.\n *\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.QueryResult} ngeoQueryResult ngeo query result.\n * @param {!ngeo.query.MapQuerent} ngeoMapQuerent ngeo map querent service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.download.Csv} ngeoCsvDownload CSV download service.\n * @param {!angular.JQLite} $element Element.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisplayquerygridController\n */\nexports.Controller_ = function($injector, $scope, ngeoQueryResult, ngeoMapQuerent,\n  ngeoFeatureOverlayMgr, $timeout, ngeoCsvDownload, $element) {\n\n  const queryOptions = /** @type {ngeox.QueryOptions} */ (\n    $injector.has('ngeoQueryOptions') ?\n      $injector.get('ngeoQueryOptions') : {});\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {!ngeox.QueryResult}\n   * @export\n   */\n  this.ngeoQueryResult = ngeoQueryResult;\n\n  /**\n   * @type {!ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n  /**\n   * @type {!ngeo.download.Csv}\n   * @private\n   */\n  this.ngeoCsvDownload_ = ngeoCsvDownload;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.maxResults = queryOptions.limit !== undefined ? queryOptions.limit : 50;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.pending = false;\n\n  /**\n   * @type {!Object.<string, gmfx.GridSource>}\n   * @export\n   */\n  this.gridSources = {};\n\n  /**\n   * IDs of the grid sources in the order they were loaded.\n   * @type {!Array.<string>}\n   * @export\n   */\n  this.loadedGridSources = [];\n\n  /**\n   * The id of the currently shown query source.\n   * @type {string|number|null}\n   * @export\n   */\n  this.selectedTab = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.removeEmptyColumns_ = false;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.maxRecenterZoom;\n\n  /**\n   * @type {!gmfx.GridMergeTabs}\n   * @export\n   */\n  this.mergeTabs = {};\n\n  /**\n   * A mapping between row uid and the corresponding feature for each\n   * source.\n   * @type {!Object.<string, Object.<string, ol.Feature>>}\n   * @private\n   */\n  this.featuresForSources_ = {};\n\n  // Styles for displayed features (features) and selected features\n  // (highlightFeatures_) (user can set both styles).\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.highlightFeatures_ = new olCollection();\n\n  /**\n   * Filename\n   * @type {string}\n   * @private\n   */\n  this.filename_ = $injector.has('gmfCsvFilename') ?\n    $injector.get('gmfCsvFilename') : 'query-results.csv';\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  // Watch the ngeo query result service.\n  this.$scope_.$watchCollection(\n    () => ngeoQueryResult,\n    (newQueryResult, oldQueryResult) => {\n      if (newQueryResult !== oldQueryResult) {\n        this.updateData_();\n      }\n    });\n\n  /**\n   * An unregister function returned from `$scope.$watchCollection` for\n   * \"on-select\" changes (when rows are selected/unselected).\n   * @type {?function()}\n   * @private\n   */\n  this.unregisterSelectWatcher_ = null;\n};\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.removeEmptyColumns_ = this['removeEmptyColumnsFn'] ? this['removeEmptyColumnsFn']() === true : false;\n  this.maxRecenterZoom = this['maxRecenterZoomFn'] ? this['maxRecenterZoomFn']() : undefined;\n\n  const featuresOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  featuresOverlay.setFeatures(this.features_);\n  const featuresStyle = this['featuresStyleFn']();\n  if (featuresStyle !== undefined) {\n    googAsserts.assertInstanceof(featuresStyle, olStyleStyle);\n    featuresOverlay.setStyle(featuresStyle);\n  }\n\n  const highlightFeaturesOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  highlightFeaturesOverlay.setFeatures(this.highlightFeatures_);\n  let highlightFeatureStyle = this['selectedFeatureStyleFn']();\n  if (highlightFeatureStyle !== undefined) {\n    googAsserts.assertInstanceof(highlightFeatureStyle, olStyleStyle);\n  } else {\n    const fill = new olStyleFill({color: [255, 0, 0, 0.6]});\n    const stroke = new olStyleStroke({color: [255, 0, 0, 1], width: 2});\n    highlightFeatureStyle = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke,\n      zIndex: 10\n    });\n  }\n  highlightFeaturesOverlay.setStyle(highlightFeatureStyle);\n\n  const mapFn = this['getMapFn'];\n  if (mapFn) {\n    const map = mapFn();\n    googAsserts.assertInstanceof(map, olMap);\n    this.map_ = map;\n  }\n};\n\n/**\n * Returns a list of grid sources in the order they were loaded.\n * @export\n * @return {Array.<gmfx.GridSource>} Grid sources.\n */\nexports.Controller_.prototype.getGridSources = function() {\n  return this.loadedGridSources.map(sourceLabel => this.gridSources[sourceLabel]);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateData_ = function() {\n  // close if there are no results\n  if (this.ngeoQueryResult.total === 0 && !this.hasOneWithTooManyResults_()) {\n    const oldActive = this.active;\n    this.clear();\n    if (oldActive) {\n      // don't close if there are pending queries\n      this.active = this.ngeoQueryResult.pending;\n      this.pending = this.ngeoQueryResult.pending;\n    }\n    return;\n  }\n\n  this.active = true;\n  this.pending = false;\n  let sources = this.ngeoQueryResult.sources;\n  // merge sources if requested\n  if (Object.keys(this.mergeTabs).length > 0) {\n    sources = this.getMergedSources_(sources);\n  }\n\n  // create grids (only for source with features or with too many results)\n  sources.forEach((source) => {\n    if (source.tooManyResults) {\n      this.makeGrid_(null, source);\n    } else {\n      source.id = this.escapeValue(source.id);\n      const features = source.features;\n      if (features.length > 0) {\n        this.collectData_(source);\n      }\n    }\n  });\n\n  if (this.loadedGridSources.length === 0) {\n    // if no grids were created, do not show\n    this.active = false;\n    return;\n  }\n\n  // keep the first existing navigation tab open\n  if (this.selectedTab === null || !((`${this.selectedTab}`) in this.gridSources)) {\n    // selecting the tab is done in a timeout, because otherwise in rare cases\n    // `ng-class` might set the `active` class on multiple tabs.\n    this.$timeout_(() => {\n      const firstSourceId = this.loadedGridSources[0];\n      this.selectTab(this.gridSources[firstSourceId]);\n    }, 0);\n  }\n};\n\n\n/**\n * @private\n * @return {boolean} If one of the source has too many results.\n */\nexports.Controller_.prototype.hasOneWithTooManyResults_ = function() {\n  return this.ngeoQueryResult.sources.some(source => source.tooManyResults);\n};\n\n/**\n * Returns the value with all symbols and spaces replaced by an underscore.\n * @param {string|number} value A value to escape.\n * @returns {string|number} value An escaped value.\n * @export\n */\nexports.Controller_.prototype.escapeValue = function(value) {\n  // Work-around for Number.isInteger() when not always getting a number ...\n  if (Number.isInteger(/** @type {number} */ (value))) {\n    return value;\n  } else {\n    const toEscape = /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\ |]/g;\n    if (value.match(toEscape) !== null) {\n      return value.replace(toEscape, '_');\n    } else {\n      return value;\n    }\n  }\n};\n\n\n/**\n * Returns if the given grid source is selected?\n * @export\n * @param {gmfx.GridSource} gridSource Grid source.\n * @return {boolean} Is selected?\n */\nexports.Controller_.prototype.isSelected = function(gridSource) {\n  return this.selectedTab === gridSource.source.label;\n};\n\n\n/**\n * Try to merge the mergable sources.\n * @param {Array.<ngeox.QueryResultSource>} sources Sources.\n * @return {Array.<ngeox.QueryResultSource>} The merged sources.\n * @private\n */\nexports.Controller_.prototype.getMergedSources_ = function(sources) {\n  const allSources = [];\n  /** @type {Object.<string, ngeox.QueryResultSource>} */\n  const mergedSources = {};\n\n  sources.forEach((source) => {\n    // check if this source can be merged\n    const mergedSource = this.getMergedSource_(source, mergedSources);\n\n    if (mergedSource === null) {\n      // this source should not be merged, add as is\n      allSources.push(source);\n    }\n  });\n\n  for (const mergedSourceId in mergedSources) {\n    allSources.push(mergedSources[mergedSourceId]);\n  }\n\n  return allSources;\n};\n\n\n/**\n * Check if the given source should be merged. If so, an artificial source\n * that will contain the features of all mergable sources is returned. If not,\n * `null` is returned.\n * @param {ngeox.QueryResultSource} source Source.\n * @param {Object.<string, ngeox.QueryResultSource>} mergedSources Merged sources.\n * @return {?ngeox.QueryResultSource} A merged source of null if the source should\n *    not be merged.\n * @private\n */\nexports.Controller_.prototype.getMergedSource_ = function(source, mergedSources) {\n  let mergeSourceId = null;\n\n  for (const currentMergeSourceId in this.mergeTabs) {\n    const sourceLabels = this.mergeTabs[currentMergeSourceId];\n    const containsSource = sourceLabels.some(sourceLabel => sourceLabel == source.label);\n    if (containsSource) {\n      mergeSourceId = currentMergeSourceId;\n      break;\n    }\n  }\n\n  if (mergeSourceId === null) {\n    // this source should not be merged\n    return null;\n  }\n\n  /** @type {ngeox.QueryResultSource} */\n  let mergeSource;\n  if (mergeSourceId in mergedSources) {\n    mergeSource = mergedSources[mergeSourceId];\n  } else {\n    mergeSource = {\n      features: [],\n      id: mergeSourceId,\n      label: mergeSourceId,\n      limit: this.maxResults,\n      pending: false,\n      queried: true,\n      tooManyResults: false,\n      totalFeatureCount: undefined\n    };\n    mergedSources[mergeSourceId] = mergeSource;\n  }\n\n  // add features of source to merge source\n  source.features.forEach((feature) => {\n    mergeSource.features.push(feature);\n  });\n\n  // if one of the source has too many results, the resulting merged source will\n  // also be marked with `tooManyResults` and will not contain any features.\n  mergeSource.tooManyResults = mergeSource.tooManyResults || source.tooManyResults;\n  if (mergeSource.tooManyResults) {\n    mergeSource.totalFeatureCount = (mergeSource.totalFeatureCount !== undefined) ?\n      mergeSource.totalFeatureCount + mergeSource.features.length : mergeSource.features.length;\n    mergeSource.features = [];\n  }\n  if (source.totalFeatureCount !== undefined) {\n    mergeSource.totalFeatureCount = (mergeSource.totalFeatureCount !== undefined) ?\n      mergeSource.totalFeatureCount + source.totalFeatureCount : source.totalFeatureCount;\n  }\n\n  return mergeSource;\n};\n\n\n/**\n * Collect all features in the queryResult object.\n * @param {ngeox.QueryResultSource} source Result source.\n * @private\n */\nexports.Controller_.prototype.collectData_ = function(source) {\n  const features = source.features;\n  const allProperties = [];\n  const featureGeometriesNames = [];\n  const featuresForSource = {};\n  let properties, featureGeometryName;\n  features.forEach((feature) => {\n    properties = feature.getProperties();\n    if (properties !== undefined) {\n      // Keeps distinct geometry names to remove theme later.\n      featureGeometryName = feature.getGeometryName();\n      if (featureGeometriesNames.indexOf(featureGeometryName) === -1) {\n        featureGeometriesNames.push(featureGeometryName);\n      }\n\n      allProperties.push(properties);\n      featuresForSource[ngeoGridConfig.getRowUid(properties)] = feature;\n    }\n  });\n\n  this.cleanProperties_(allProperties, featureGeometriesNames);\n  if (allProperties.length > 0) {\n    const gridCreated = this.makeGrid_(allProperties, source);\n    if (gridCreated) {\n      this.featuresForSources_[`${source.label}`] = featuresForSource;\n    }\n  }\n};\n\n\n/**\n * Remove all unwanted columns.\n * @param {Array.<Object>} allProperties A row.\n * @param {Array.<string>} featureGeometriesNames Geometry names.\n * @private\n */\nexports.Controller_.prototype.cleanProperties_ = function(\n  allProperties, featureGeometriesNames) {\n  allProperties.forEach((properties) => {\n    featureGeometriesNames.forEach((featureGeometryName) => {\n      delete properties[featureGeometryName];\n    });\n    delete properties['boundedBy'];\n    delete properties['ngeo_feature_type_'];\n  });\n\n  if (this.removeEmptyColumns_ === true) {\n    this.removeEmptyColumnsFn_(allProperties);\n  }\n};\n\n\n/**\n * Remove columns that will be completely empty between each properties.\n * @param {Array.<Object>} allProperties A row.\n * @private\n */\nexports.Controller_.prototype.removeEmptyColumnsFn_ = function(\n  allProperties) {\n  // Keep all keys that correspond to at least one value in a properties object.\n  const keysToKeep = [];\n  let i, key;\n  for (key in allProperties[0]) {\n    for (i = 0; i < allProperties.length; i++) {\n      if (allProperties[i][key] !== undefined) {\n        keysToKeep.push(key);\n        break;\n      }\n    }\n  }\n  // Get all keys that previously always refers always to an empty value.\n  let keyToRemove;\n  allProperties.forEach((properties) => {\n    keyToRemove = [];\n    for (key in properties) {\n      if (keysToKeep.indexOf(key) === -1) {\n        keyToRemove.push(key);\n      }\n    }\n    // Remove these keys.\n    keyToRemove.forEach((key) => {\n      delete properties[key];\n    });\n  });\n};\n\n\n/**\n * @param {?Array.<Object>} data Grid rows.\n * @param {ngeox.QueryResultSource} source Query source.\n * @return {boolean} Returns true if a grid was created.\n * @private\n */\nexports.Controller_.prototype.makeGrid_ = function(data, source) {\n  const sourceLabel = `${source.label}`;\n  let gridConfig = null;\n  if (data !== null) {\n    gridConfig = this.getGridConfiguration_(data);\n    if (gridConfig === null) {\n      return false;\n    }\n  }\n  if (this.loadedGridSources.indexOf(sourceLabel) == -1) {\n    this.loadedGridSources.push(sourceLabel);\n  }\n  this.gridSources[sourceLabel] = {\n    configuration: gridConfig,\n    source: source\n  };\n  return true;\n};\n\n\n/**\n * @param {Array.<!Object>} data Grid rows.\n * @return {?ngeo.grid.Config} Grid config.\n * @private\n */\nexports.Controller_.prototype.getGridConfiguration_ = function(\n  data) {\n  googAsserts.assert(data.length > 0);\n  const clone = {};\n  Object.assign(clone, data[0]);\n  delete clone.ol_uid;\n  const columns = Object.keys(clone);\n\n  /** @type {Array.<ngeox.GridColumnDef>} */\n  const columnDefs = [];\n  columns.forEach((column) => {\n    columnDefs.push(/** @type {ngeox.GridColumnDef} */ ({\n      name: column\n    }));\n  });\n\n  if (columnDefs.length > 0) {\n    return new ngeoGridConfig(data, columnDefs);\n  } else {\n    // no columns, do not show grid\n    return null;\n  }\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.active = false;\n  this.pending = false;\n  this.gridSources = {};\n  this.loadedGridSources = [];\n  this.selectedTab = null;\n  this.tooManyResults = false;\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n  this.ngeoMapQuerent_.clear();\n  this.featuresForSources_ = {};\n  if (this.unregisterSelectWatcher_) {\n    this.unregisterSelectWatcher_();\n  }\n};\n\n\n/**\n * Select the tab for the given grid source.\n * @param {gmfx.GridSource} gridSource Grid source.\n * @export\n */\nexports.Controller_.prototype.selectTab = function(gridSource) {\n  const source = gridSource.source;\n  this.selectedTab = source.label;\n\n  if (this.unregisterSelectWatcher_) {\n    this.unregisterSelectWatcher_();\n    this.unregisterSelectWatcher_ = null;\n  }\n\n  if (gridSource.configuration !== null) {\n    this.unregisterSelectWatcher_ = this.$scope_.$watchCollection(\n      () => gridSource.configuration.selectedRows,\n      (newSelected, oldSelectedRows) => {\n        if (Object.keys(newSelected) !== Object.keys(oldSelectedRows)) {\n          this.onSelectionChanged_();\n        }\n      });\n  }\n  this.updateFeatures_(gridSource);\n\n  this.reflowGrid_();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.reflowGrid_ = function() {\n  // This is a \"work-around\" to make sure that the grid is rendered correctly.\n  // When a pane is activated by setting `this.selectedTab`, the class `active`\n  // is not yet set on the pane. That's why the class is set manually, and\n  // after the pane is shown (in the next digest loop), the grid table can\n  // be refreshed.\n  const id = this.escapeValue(this.selectedTab || '');\n  const activePane = this.$element_.find(`div.tab-pane#${id}`);\n  activePane.removeClass('active').addClass('active');\n  this.$timeout_(() => {\n    activePane.find('div.ngeo-grid-table-container table')['trigger']('reflow');\n  });\n};\n\n\n/**\n * Called when the row selection has changed.\n * @private\n */\nexports.Controller_.prototype.onSelectionChanged_ = function() {\n  if (this.selectedTab === null) {\n    return;\n  }\n\n  const gridSource = this.gridSources[`${this.selectedTab}`];\n  this.updateFeatures_(gridSource);\n};\n\n\n/**\n * @param {gmfx.GridSource} gridSource Grid source\n * @private\n */\nexports.Controller_.prototype.updateFeatures_ = function(gridSource) {\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n\n  if (gridSource.configuration === null) {\n    return;\n  }\n\n  const sourceLabel = `${gridSource.source.label}`;\n  const featuresForSource = this.featuresForSources_[sourceLabel];\n  const selectedRows = gridSource.configuration.selectedRows;\n\n  for (const rowId in featuresForSource) {\n    const feature = featuresForSource[rowId];\n    if (rowId in selectedRows) {\n      this.highlightFeatures_.push(feature);\n    } else {\n      this.features_.push(feature);\n    }\n  }\n};\n\n\n/**\n * Get the currently shown grid source.\n * @export\n * @return {gmfx.GridSource|null} Grid source.\n */\nexports.Controller_.prototype.getActiveGridSource = function() {\n  if (this.selectedTab === null) {\n    return null;\n  } else {\n    return this.gridSources[`${this.selectedTab}`];\n  }\n};\n\n\n/**\n * Returns if a row of the currently active grid is selected?\n * @export\n * @return {boolean} Is one selected?\n */\nexports.Controller_.prototype.isOneSelected = function() {\n  const source = this.getActiveGridSource();\n  if (source === null || source.configuration === null) {\n    return false;\n  } else {\n    return source.configuration.getSelectedCount() > 0;\n  }\n};\n\n\n/**\n * Returns the number of selected rows of the currently active grid.\n * @export\n * @return {number} The number of selected rows.\n */\nexports.Controller_.prototype.getSelectedRowCount = function() {\n  const source = this.getActiveGridSource();\n  if (source === null || source.configuration === null) {\n    return 0;\n  } else {\n    return source.configuration.getSelectedCount();\n  }\n};\n\n\n/**\n * Select all rows of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.selectAll = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.selectAll();\n  }\n};\n\n\n/**\n * Deselect all rows of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.unselectAll = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.unselectAll();\n  }\n};\n\n\n/**\n * Invert the selection of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.invertSelection = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.invertSelection();\n  }\n};\n\n\n/**\n * Zoom to the selected features.\n * @export\n */\nexports.Controller_.prototype.zoomToSelection = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    const extent = olExtent.createEmpty();\n    this.highlightFeatures_.forEach((feature) => {\n      olExtent.extend(extent, feature.getGeometry().getExtent());\n    });\n    const size = this.map_.getSize();\n    googAsserts.assert(size !== undefined);\n    const maxZoom = this.maxRecenterZoom;\n    this.map_.getView().fit(extent, {size, maxZoom});\n  }\n};\n\n\n/**\n * Start a CSV download for the selected features.\n * @export\n */\nexports.Controller_.prototype.downloadCsv = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    const columnDefs = source.configuration.columnDefs;\n    googAsserts.assert(columnDefs !== undefined);\n    const selectedRows = source.configuration.getSelectedRows();\n\n    this.ngeoCsvDownload_.startDownload(\n      selectedRows, columnDefs, this.filename_);\n  }\n};\n\n\nexports.controller('GmfDisplayquerygridController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.swipe\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMiscSwipe', []);\n\n\n/**\n * ===========================================\n * NOTE: It is an inversed copy of ngSwipe.\n * Angular ngSwipe assumes that vertical\n * swipe is a scroll.\n * For more details:\n * https://docs.angularjs.org/api/ngTouch/service/$swipe\n * ===========================================\n */\n\n/**\n * @ngdoc service\n * @name $verticalSwipe\n *\n * @description\n * The `$verticalSwipe` service is a service that abstracts the messier details of hold-and-drag swipe\n * behavior, to make implementing swipe-related directives more convenient.\n *\n * Requires the {@link ngTouch `ngTouch`} module to be installed.\n *\n * `$verticalSwipe` is used by the `ngeoSwipeUp` and `ngeoSwipeDown` directives.\n *\n * # Usage\n * The `$verticalSwipe` service is an object with a single method: `bind`. `bind` takes an element\n * which is to be watched for swipes, and an object with four handler functions. See the\n * documentation for `bind` below.\n */\n\nexports.factory('$verticalSwipe', [function() {\n  // The total distance in any direction before we make the call on swipe vs. scroll.\n  const MOVE_BUFFER_RADIUS = 10;\n\n  const POINTER_EVENTS = {\n    'mouse': {\n      start: 'mousedown',\n      move: 'mousemove',\n      end: 'mouseup'\n    },\n    'touch': {\n      start: 'touchstart',\n      move: 'touchmove',\n      end: 'touchend',\n      cancel: 'touchcancel'\n    },\n    'pointer': {\n      start: 'pointerdown',\n      move: 'pointermove',\n      end: 'pointerup',\n      cancel: 'pointercancel'\n    }\n  };\n\n  function getCoordinates(event) {\n    const originalEvent = event.originalEvent || event;\n    const touches = originalEvent.touches && originalEvent.touches.length ? originalEvent.touches : [originalEvent];\n    const e = (originalEvent.changedTouches && originalEvent.changedTouches[0]) || touches[0];\n\n    return {\n      x: e.clientX,\n      y: e.clientY\n    };\n  }\n\n  function getEvents(pointerTypes, eventType) {\n    const res = [];\n    angular.forEach(pointerTypes, (pointerType) => {\n      const eventName = POINTER_EVENTS[pointerType][eventType];\n      if (eventName) {\n        res.push(eventName);\n      }\n    });\n    return res.join(' ');\n  }\n\n  return {\n    /**\n     * @ngdoc method\n     * @name $verticalSwipe#bind\n     * @param {!angular.JQLite} element Element.\n     * @param {Object} eventHandlers - Event handlers object with `start`, `cancel` and `end` callbacks\n     * @param {Array<string>} pointerTypes - Types of pointer\n     *\n     * @description\n     * The main method of `$verticalSwipe`. It takes an element to be watched for swipe motions, and an\n     * object containing event handlers.\n     * The pointer types that should be used can be specified via the optional\n     * third argument, which is an array of strings `'mouse'`, `'touch'` and `'pointer'`. By default,\n     * `$verticalSwipe` will listen for `mouse`, `touch` and `pointer` events.\n     *\n     * The four events are `start`, `move`, `end`, and `cancel`. `start`, `move`, and `end`\n     * receive as a parameter a coordinates object of the form `{ x: 150, y: 310 }` and the raw\n     * `event`. `cancel` receives the raw `event` as its single parameter.\n     *\n     * `start` is called on either `mousedown`, `touchstart` or `pointerdown`. After this event, `$verticalSwipe` is\n     * watching for `touchmove`, `mousemove` or `pointermove` events. These events are ignored until the total\n     * distance moved in either dimension exceeds a small threshold.\n     *\n     * Once this threshold is exceeded, either the vertical or vertical delta is greater.\n     * - If the vertical distance is greater, this is a swipe and `move` and `end` events follow.\n     * - If the horizontal distance is greater, this is a scroll, and we let the browser take over.\n     *   A `cancel` event is sent.\n     *\n     * `move` is called on `mousemove`, `touchmove` and `pointermove` after the above logic has determined that\n     * a swipe is in progress.\n     *\n     * `end` is called when a swipe is successfully completed with a `touchend`, `mouseup` or `pointerup`.\n     *\n     * `cancel` is called either on a `touchcancel` or `pointercancel`  from the browser, or when we begin scrolling\n     * as described above.\n     *\n     */\n    bind(element, eventHandlers, pointerTypes) {\n      // Absolute total movement, used to control swipe vs. scroll.\n      let totalX, totalY;\n      // Coordinates of the start position.\n      let startCoords;\n      // Last event's position.\n      let lastPos;\n      // Whether a swipe is active.\n      let active = false;\n\n      pointerTypes = pointerTypes || ['mouse', 'touch', 'pointer'];\n      element.on(getEvents(pointerTypes, 'start'), (event) => {\n        startCoords = getCoordinates(event);\n        active = true;\n        totalX = 0;\n        totalY = 0;\n        lastPos = startCoords;\n        if (eventHandlers['start']) {\n          eventHandlers['start'](startCoords, event);\n        }\n      });\n      const events = getEvents(pointerTypes, 'cancel');\n      if (events) {\n        element.on(events, (event) => {\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n        });\n      }\n\n      element.on(getEvents(pointerTypes, 'move'), (event) => {\n        if (!active) {\n          return;\n        }\n\n        // Android will send a touchcancel if it thinks we're starting to scroll.\n        // So when the total distance (+ or - or both) exceeds 10px in either direction,\n        // we either:\n        // - On totalX > totalY, we send preventDefault() and treat this as a swipe.\n        // - On totalY > totalX, we let the browser handle it as a scroll.\n\n        if (!startCoords) {\n          return;\n        }\n        const coords = getCoordinates(event);\n\n        totalX += Math.abs(coords.x - lastPos.x);\n        totalY += Math.abs(coords.y - lastPos.y);\n\n        lastPos = coords;\n\n        if (totalX < MOVE_BUFFER_RADIUS && totalY < MOVE_BUFFER_RADIUS) {\n          return;\n        }\n\n        // One of totalX or totalY has exceeded the buffer, so decide on swipe vs. scroll.\n        if (totalX > totalY) {\n          // Allow native scrolling to take over.\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n          return;\n        } else {\n          // Prevent the browser from scrolling.\n          event.preventDefault();\n          if (eventHandlers['move']) {\n            eventHandlers['move'](coords, event);\n          }\n        }\n      });\n\n      element.on(getEvents(pointerTypes, 'end'), (event) => {\n        if (!active) {\n          return;\n        }\n        active = false;\n        if (eventHandlers['end']) {\n          eventHandlers['end'](getCoordinates(event), event);\n        }\n      });\n    }\n  };\n}]);\n\nexports.makeSwipeDirective_ = function(directiveName, direction, eventName) {\n  exports.directive(directiveName, ['$parse', '$verticalSwipe', function($parse, $verticalSwipe) {\n    // The maximum horizontal delta for a swipe should be less than 75px.\n    const MAX_HORIZONTAL_DISTANCE = 75;\n    // Horizontal distance should not be more than a fraction of the vertical distance.\n    const MAX_HORIZONTAL_RATIO = 0.3;\n    // At least a 30px lateral motion is necessary for a swipe.\n    const MIN_VERTICAL_DISTANCE = 30;\n\n    return function(scope, element, attr) {\n      const swipeHandler = $parse(attr[directiveName]);\n\n      let startCoords, valid;\n\n      function validSwipe(coords) {\n        // Check that it's within the coordinates.\n        // Absolute vertical distance must be within tolerances.\n        // Horizontal distance, we take the current X - the starting X.\n        // This is negative for downward swipes and positive for upward swipes.\n        // After multiplying by the direction (-1 for down, +1 for up), legal swipes\n        // (ie. same direction as the directive wants) will have a positive delta and\n        // illegal ones a negative delta.\n        // Therefore this delta must be positive, and larger than the minimum.\n        if (!startCoords) {\n          return false;\n        }\n        const deltaY = (coords.y - startCoords.y) * direction;\n        const deltaX = Math.abs(coords.x - startCoords.x);\n        return valid && // Short circuit for already-invalidated swipes.\n            deltaX < MAX_HORIZONTAL_DISTANCE &&\n            deltaY > 0 &&\n            deltaY > MIN_VERTICAL_DISTANCE &&\n            deltaX / deltaY < MAX_HORIZONTAL_RATIO;\n      }\n\n      const pointerTypes = ['touch'];\n      if (!angular.isDefined(attr['ngeoSwipeDisableMouse'])) {\n        pointerTypes.push('mouse');\n      }\n      $verticalSwipe.bind(element, {\n        'start': function(coords, event) {\n          startCoords = coords;\n          valid = true;\n        },\n        'cancel': function(event) {\n          valid = false;\n        },\n        'end': function(coords, event) {\n          if (validSwipe(coords)) {\n            scope.$apply(() => {\n              element.triggerHandler(eventName);\n              swipeHandler(scope, {$event: event});\n            });\n          }\n        }\n      }, pointerTypes);\n    };\n  }]);\n};\n\n// Down is negative Y-coordinate, up is positive.\nexports.makeSwipeDirective_('ngeoSwipeDown', 1, 'swipedown');\nexports.makeSwipeDirective_('ngeoSwipeUp', -1, 'swipeup');\n\n\nexport default exports;\n","/**\n * @module gmf.query.windowComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscSwipe from 'ngeo/misc/swipe.js';\n\n/** @suppress {extraRequire} - required for `ngeoQueryResult` */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olCollection from 'ol/Collection.js';\nimport * as olObj from 'ol/obj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport 'jquery-ui/ui/widgets/resizable.js';\nimport 'angular-animate';\nimport 'angular-touch';\nimport 'bootstrap/js/collapse.js';\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryWindowComponent', [\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscSwipe.name,\n  ngeoQueryMapQuerent.module.name,\n  'ngAnimate',\n  'ngTouch',\n]);\n\n\nexports.config(['$animateProvider',\n  /**\n   * For performance reason, only perform animation on elements that have the\n   * `gmf-animatable` css class.\n   * @param {angular.$animateProvider} $animateProvider animate provider.\n   */\n  function($animateProvider) {\n    $animateProvider.classNameFilter(/gmf-animatable/);\n  }\n]);\n\n\nexports.value('gmfDisplayquerywindowTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfDisplayquerywindowTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/query/windowComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/query/windowComponent', require('./windowComponent.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfDisplayquerywindowTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfDisplayquerywindowTemplateUrl($element, $attrs, gmfDisplayquerywindowTemplateUrl) {\n  return gmfDisplayquerywindowTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component to display results of the {@link ngeo.queryResult}\n * and shows related features on the map using the {@link ngeo.map.FeatureOverlayMgr}.\n *\n * You can override the default component's template by setting the\n * value `gmfDisplayquerywindowTemplateUrl`.\n *\n * Features displayed on the map use a default style but you can override these\n * styles by passing ol.style.Style objects as attributes of this component.\n *\n * Example:\n *\n *      <gmf-displayquerywindow\n *        gmf-displayquerywindow-featuresstyle=\"ctrl.styleForAllFeatures\"\n *        gmf-displayquerywindow-selectedfeaturestyle=\"ctrl.styleForTheCurrentFeature\">\n *      </gmf-displayquerywindow>\n *\n * @htmlAttribute {ol.style.Style} gmf-displayquerywindow-featuresstyle A style\n *     object for all features from the result of the query.\n * @htmlAttribute {ol.style.Style} selectedfeaturestyle A style\n *     object for the current displayed feature.\n * @htmlAttribute {boolean=} defaultcollapsed If the query result window is\n *     collapsed.\n * @htmlAttribute {boolean} desktop If the component is used in the desktop\n *     application.\n * @htmlAttribute {boolean} showunqueriedlayers If also layers, that have not\n *     been queried for the last query, should be shown in the filter.\n *\n * @ngdoc component\n * @ngname gmfDisplayquerywindow\n */\nexports.component_ = {\n  controller: 'GmfDisplayquerywindowController as ctrl',\n  bindings: {\n    'draggableContainment': '<?gmfDisplayquerywindowDraggableContainment',\n    'featuresStyleFn': '&gmfDisplayquerywindowFeaturesstyle',\n    'selectedFeatureStyleFn': '&gmfDisplayquerywindowSelectedfeaturestyle',\n    'defaultCollapsedFn': '&?gmfDisplayquerywindowDefaultcollapsed',\n    'desktop': '=gmfDisplayquerywindowDesktop',\n    'showUnqueriedLayers': '=gmfDisplayquerywindowShowunqueriedlayers'\n  },\n  templateUrl: gmfDisplayquerywindowTemplateUrl\n};\n\n\nexports.component('gmfDisplayquerywindow', exports.component_);\n\n\n/**\n * @param {!jQuery} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.QueryResult} ngeoQueryResult ngeo query result.\n * @param {!ngeo.query.MapQuerent} ngeoMapQuerent ngeo map querent service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisplayquerywindowController\n */\nexports.Controller_ = function($element, $scope, ngeoQueryResult, ngeoMapQuerent,\n  ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {Element|string}\n   * @export\n   */\n  this.draggableContainment;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.desktop = false;\n\n  /**\n   * Is the window currently collapsed?\n   * When used for Desktop, it is shown non-collapsed.\n   * @type {boolean}\n   * @export\n   */\n  this.collapsed = !this.desktop;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.showUnqueriedLayers_ = false;\n\n  /**\n   * Object that is used to filter the source list in the template.\n   * @type {Object}\n   * @export\n   */\n  this.sourcesFilter = {'queried': true};\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @export\n   */\n  this.ngeoQueryResult = {\n    sources: [],\n    total: 0,\n    pending: false\n  };\n\n  /**\n   * @type {!ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.selectedSource = null;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.highlightFeatures_ = new olCollection();\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.source = null;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature = null;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.currentResult = -1;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isNext = true;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.animate = 0;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.open = false;\n\n  /**\n   * @const {!jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  $scope.$watchCollection(\n    () => ngeoQueryResult,\n    (newQueryResult, oldQueryResult) => {\n      this.updateQueryResult_(newQueryResult);\n      if (newQueryResult.total > 0) {\n        this.show();\n      } else if (oldQueryResult !== newQueryResult) {\n        this.close();\n      }\n    });\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.draggableContainment = this.draggableContainment || 'document';\n  this.desktop = this.desktop;\n  this.collapsed = this['defaultCollapsedFn'] ?\n    this['defaultCollapsedFn']() === true : !this.desktop;\n\n  this.showUnqueriedLayers_ = this['showUnqueriedLayers'] ?\n    this['showUnqueriedLayers'] === true : false;\n\n  this.sourcesFilter = this.showUnqueriedLayers_ ? {} : {'queried': true};\n\n  const featuresOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  featuresOverlay.setFeatures(this.features_);\n  const featuresStyle = this['featuresStyleFn']();\n  if (featuresStyle !== undefined) {\n    googAsserts.assertInstanceof(featuresStyle, olStyleStyle);\n    featuresOverlay.setStyle(featuresStyle);\n  }\n\n  const highlightFeaturesOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  highlightFeaturesOverlay.setFeatures(this.highlightFeatures_);\n  let highlightFeatureStyle = this['selectedFeatureStyleFn']();\n  if (highlightFeatureStyle !== undefined) {\n    googAsserts.assertInstanceof(highlightFeatureStyle, olStyleStyle);\n  } else {\n    const fill = new olStyleFill({color: [255, 0, 0, 0.6]});\n    const stroke = new olStyleStroke({color: [255, 0, 0, 1], width: 2});\n    highlightFeatureStyle = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke\n    });\n  }\n  highlightFeaturesOverlay.setStyle(highlightFeatureStyle);\n\n  if (this.desktop) {\n    this.element_.find('.gmf-displayquerywindow .windowcontainer').draggable({\n      'cancel': 'input,textarea,button,select,option,tr',\n      'containment': this.draggableContainment\n    });\n    this.element_.find('.gmf-displayquerywindow .windowcontainer').resizable({\n      'minHeight': 240,\n      'minWidth': 240\n    });\n  }\n};\n\n\n/**\n * Remove current displayed results then get new results from the\n * ngeoQueryResult service. Display all results on the map and display,\n * highlight the first feature.\n * @export\n */\nexports.Controller_.prototype.show = function() {\n  this.clear();\n  this.updateFeatures_();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateFeatures_ = function() {\n  this.setCurrentResult_(0, false);\n  if (this.source !== null) {\n    this.collectFeatures_();\n    this.highlightCurrentFeature_();\n    this.open = true;\n  }\n};\n\n/**\n * Select a source and a feature depending of the given position.\n * @param {number} position The index of the feature. If the position is bigger\n * than the length of the first source, get it in the next source. Etc.\n * @param {boolean} setHighlight True to set the highlight automatically.\n * @return {boolean} True if result has changed. False else.\n * @private\n */\nexports.Controller_.prototype.setCurrentResult_ = function(\n  position, setHighlight) {\n  let hasChanged = false;\n  if (position !== this.currentResult) {\n    let i, source, features;\n    const lastFeature = this.feature;\n    const sources = this.ngeoQueryResult.sources;\n    this.currentResult = position;\n    for (i = 0; i < sources.length; i++) {\n      source = sources[i];\n      if (this.selectedSource !== null && this.selectedSource !== source) {\n        // when filtering on a source, only consider features of the selected source\n        continue;\n      }\n      features = source.features;\n      if (position >= features.length) {\n        position -= features.length;\n      } else {\n        this.source = source;\n        this.feature = source.features[position];\n        hasChanged = true;\n        break;\n      }\n    }\n    if (setHighlight) {\n      this.highlightCurrentFeature_(lastFeature);\n    }\n  }\n  return hasChanged;\n};\n\n\n/**\n * Select the logical previous source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.previous = function() {\n  let position = this.currentResult - 1;\n  if (position < 0) {\n    position = this.getResultLength() - 1;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(false);\n  }\n};\n\n\n/**\n * Select the logical next source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.next = function() {\n  let position = this.currentResult + 1;\n  const positionMax = this.getResultLength() - 1;\n  if (position > positionMax) {\n    position = 0;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(true);\n  }\n};\n\n\n/**\n * Remove features without properties from the query result.\n * @param {ngeox.QueryResult} queryResult ngeo query result.\n * @private\n */\nexports.Controller_.prototype.updateQueryResult_ = function(queryResult) {\n  this.ngeoQueryResult.total = 0;\n  this.ngeoQueryResult.sources.length = 0;\n  for (let i = 0; i < queryResult.sources.length; i++) {\n    const source = queryResult.sources[i];\n    source.features = source.features.filter((feature) => {\n      googAsserts.assert(feature);\n      return !olObj.isEmpty(ngeoMiscFeatureHelper.getFilteredFeatureValues(feature));\n    });\n    this.ngeoQueryResult.sources.push(source);\n    this.ngeoQueryResult.total += source.features.length;\n  }\n};\n\n/**\n * Get the total count of features in the result of the query. If a source\n * has been select, only the number of features of that source are returned.\n * @return {number} Total number of features.\n * @export\n */\nexports.Controller_.prototype.getResultLength = function() {\n  if (this.selectedSource === null) {\n    return this.ngeoQueryResult.total;\n  } else {\n    return this.selectedSource.features.length;\n  }\n};\n\n\n/**\n * @return {boolean} If the first result is active.\n * @export\n */\nexports.Controller_.prototype.isFirst = function() {\n  return this.currentResult == 0;\n};\n\n\n/**\n * @return {boolean} If the last result is active.\n * @export\n */\nexports.Controller_.prototype.isLast = function() {\n  return this.currentResult == this.getResultLength() - 1;\n};\n\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * @return {Object?} Filtered properties of the current feature or null.\n * @export\n */\nexports.Controller_.prototype.getFeatureValues = function() {\n  if (!this.feature) {\n    return null;\n  }\n  return ngeoMiscFeatureHelper.getFilteredFeatureValues(this.feature);\n};\n\n\n/**\n * Special function that's used to set the \"animation\" value after to set the\n * \"isNext\" value. The aim is to wait on Angular to add a class (corresponding\n * to \"isNext\") on the DOM before to set the \"animation\" value and do the\n * animation.\n * @param {boolean} isNext used to indicate if the user wants to see the next\n * or the previous result.\n * @private\n */\nexports.Controller_.prototype.animate_ = function(isNext) {\n  this.isNext = isNext;\n  this.animate++;\n};\n\n\n/**\n * Collect all features in the queryResult object.\n * @private\n */\nexports.Controller_.prototype.collectFeatures_ = function() {\n  const sources = this.ngeoQueryResult.sources;\n  this.features_.clear();\n  for (let i = 0; i < sources.length; i++) {\n    const source = sources[i];\n    if (this.selectedSource !== null && this.selectedSource !== source) {\n      // when filtering on a source, only add features of the selected source\n      continue;\n    }\n    const features = source.features;\n    for (let ii = 0; ii < features.length; ii++) {\n      this.features_.push(features[ii]);\n    }\n  }\n};\n\n\n/**\n * Highlight the current displayed feature.\n * @param {ol.Feature=} opt_lastFeature last highlighted feature. Require if\n * it exists because it must be added to the 'non-selected' features collection.\n * @private\n */\nexports.Controller_.prototype.highlightCurrentFeature_ =\nfunction(opt_lastFeature) {\n  this.highlightFeatures_.clear();\n  this.features_.remove(this.feature);\n  this.highlightFeatures_.push(this.feature);\n  if (opt_lastFeature !== undefined) {\n    this.features_.push(opt_lastFeature);\n  }\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.close = function() {\n  this.open = false;\n  this.clear();\n  this.ngeoMapQuerent_.clear();\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.feature = null;\n  this.source = null;\n  this.currentResult = -1;\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n  this.selectedSource = null;\n};\n\n\n/**\n * @param {ngeox.QueryResultSource} source The source to select.\n * @export\n */\nexports.Controller_.prototype.setSelectedSource = function(source) {\n  if (source !== null && source.features.length <= 0) {\n    // sources with no results can not be selected\n    return;\n  }\n  this.clear();\n  this.selectedSource = source;\n  this.updateFeatures_();\n};\n\n\nexports.controller('GmfDisplayquerywindowController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.query.extraModule\n */\nimport gmfQueryGridComponent from 'gmf/query/gridComponent.js';\nimport gmfQueryWindowComponent from 'gmf/query/windowComponent.js';\n\nimport './grid.less';\nimport './window.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryExtraModule', [\n  gmfQueryGridComponent.name,\n  gmfQueryWindowComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.search.module\n */\nimport gmfSearchComponent from 'gmf/search/component.js';\nimport gmfSearchFulltextSearch from 'gmf/search/FulltextSearch.js';\n\nimport './search.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfSearchModule', [\n  gmfSearchComponent.name,\n  gmfSearchFulltextSearch.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.selectorComponent\n */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport * as olEvents from 'ol/events.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeSelectorComponent', [\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/theme/selectorComponent', require('./selectorComponent.html'));\n});\n\n\nexports.value('gmfThemeSelectorTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfThemeSelectorTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/theme/selectorComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfThemeSelectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfThemeSelectorTemplateUrl($attrs, gmfThemeSelectorTemplateUrl) {\n  return gmfThemeSelectorTemplateUrl($attrs);\n}\n\n\n/**\n * Note that this component works with the {@link gmf.layertree.TreeManager}.\n * Setting the theme will update the \"tree\" object of\n * this {@link gmf.layertree.TreeManager}.\n *\n * Example:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span ng-if=\"mainCtrl.gmfThemeManager.modeFlush\">\n *            <span translate>Theme:</span>\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.getThemeName()\" translate>Loading...</b>\n *            <b ng-if=\"mainCtrl.gmfThemeManager.getThemeName()\">{{mainCtrl.gmfThemeManager.getThemeName()|translate}}</b>\n *          </span>\n *          <span ng-if=\"!mainCtrl.gmfThemeManager.modeFlush\">\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.themeName\" translate>Themes</b>\n *          </span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *\n * The theme selector can operate in a 'flush' (as above) or 'add' mode. For more information\n * about these modes, refer to the documentation of {@link gmf.layertree.TreeManager}.\n *\n * Example in 'add' mode:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span translate>Themes</span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('gmfTreeManagerModeFlush', false);\n *        })();\n *      </script>\n *\n * @htmlAttribute {Function} gmf-themeselector-filter The themes filter.\n *\n * @type {!angular.Component}\n */\nexports.component_ = {\n  bindings: {\n    'filter': '<gmfThemeselectorFilter'\n  },\n  controller: 'gmfThemeselectorController',\n  templateUrl: gmfThemeSelectorTemplateUrl\n};\n\nexports.component('gmfThemeselector', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {gmf.theme.Manager} gmfThemeManager Tree manager service.\n * @param {gmf.theme.Themes} gmfThemes Themes service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfThemeselectorController\n */\nexports.Controller_ = function($scope, gmfThemeManager, gmfThemes) {\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = gmfThemeManager;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {Array.<Object>}\n   * @export\n   */\n  this.themes;\n\n  /**\n   * @type {Function|undefined}\n   * @export\n   */\n  this.filter;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(this.gmfThemes_, 'change', this.setThemes_, this));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n\n};\n\n/**\n * Store the loaded themes locally applying a filter (if any), then set the\n * current theme.\n * @private\n */\nexports.Controller_.prototype.setThemes_ = function() {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    // Keep only the themes dedicated to the theme switcher\n    this.themes = this.filter ? themes.filter(this.filter) : themes;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfTheme} theme Theme.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.Controller_.prototype.setTheme = function(theme, opt_silent) {\n  if (theme) {\n    this.gmfThemeManager.addTheme(theme, opt_silent);\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('gmfThemeselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.module\n */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeSelectorComponent from 'gmf/theme/selectorComponent.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeModule', [\n  gmfThemeSelectorComponent.name,\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.displaywindowComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\nimport 'font-awesome/css/font-awesome.css';\nimport 'jquery-ui/ui/widgets/resizable.js';\nimport 'jquery-ui/ui/widgets/draggable.js';\nimport 'angular-sanitize';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMessageDisplaywindowComponent', [\n  'ngSanitize',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/message/displaywindowComponent', require('./displaywindowComponent.html'));\n});\n\n\nexports.value('ngeoMessageDisplaywindowTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoMessageDisplaywindowTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/message/displaywindowComponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoMessageDisplaywindowTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoMessageDisplaywindowTemplateUrl($attrs, ngeoMessageDisplaywindowTemplateUrl) {\n  return ngeoMessageDisplaywindowTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!jQuery} $element Element.\n   * @param {!angular.$sce} $sce Angular sce service.\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!angular.$compile} $compile The compile provider.\n   * @private\n   * @ngInject\n   * @ngdoc controller\n   * @ngname ngeoDisplaywindowComponentController\n   */\n  constructor($element, $sce, $scope, $compile) {\n\n    // === Binding Properties ===\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.clearOnClose;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.content = null;\n\n    /**\n     * @type {?string}\n     */\n    this.contentTemplate = null;\n\n    /**\n     * @type {?angular.Scope}\n     */\n    this.contentScope = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.draggable;\n\n    /**\n     * @type {Element|string}\n     * @export\n     */\n    this.draggableContainment;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.desktop;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.height = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.open;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.resizable;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.title = null;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.url = null;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.width = null;\n\n\n    // === Injected Properties ===\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {!angular.$sce}\n     * @private\n     */\n    this.sce_ = $sce;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {angular.$compile}\n     * @private\n     */\n    this.compile_ = $compile;\n  }\n\n  /**\n   * Called on initialization of the component.\n   */\n  $onInit() {\n\n    // Initialize binding properties\n    this.clearOnClose = this.clearOnClose !== false;\n    this.content = this.content || null;\n    this.contentTemplate = this.contentTemplate || null;\n    this.contentScope = this.contentScope || null;\n    this.desktop = this.desktop !== false;\n    this.draggableContainment = this.draggableContainment || 'document';\n    this.open = this.open === true;\n\n    this.draggable = this.draggable !== undefined ?\n      this.draggable : this.desktop;\n    this.resizable = this.resizable !== undefined ?\n      this.resizable : this.desktop;\n\n    // Draggable\n    if (this.draggable) {\n      this.element_.find('.ngeo-displaywindow .windowcontainer').draggable({\n        'containment': this.draggableContainment,\n        'handle': 'div.header'\n      });\n    }\n\n    // Resizable\n    if (this.resizable) {\n      this.element_.find('.ngeo-displaywindow .windowcontainer').resizable({\n        'minHeight': 240,\n        'minWidth': 240\n      });\n    }\n\n    if (this.contentTemplate) {\n      const scope = googAsserts.assert(this.contentScope || this.scope_);\n      const compiled = this.compile_(this.contentTemplate)(scope);\n      const displayWindow = this.element_.find('.ngeo-displaywindow .windowcontainer .animation-container');\n      displayWindow.append(/** @type {?} */ (compiled));\n    }\n  }\n\n  /**\n   * @export\n   */\n  close() {\n    this.open = false;\n    if (this.clearOnClose) {\n      this.clear_();\n    }\n  }\n\n  /**\n   * @return {!Object.<string, string>} CSS style when using width/height\n   * @export\n   */\n  get style() {\n    return {\n      'height': this.height || '240px',\n      'width': this.width || '240px'\n    };\n  }\n\n  /**\n   * @return {string|undefined} Trusted url.\n   * @export\n   */\n  get urlTrusted() {\n    if (this.url) {\n      return /** @type {string} */ (this.sce_.trustAsResourceUrl(this.url));\n    }\n  }\n\n  /**\n   * @export\n   */\n  clear_() {\n    this.content = null;\n    this.height = null;\n    this.title = null;\n    this.url = null;\n    this.width = null;\n  }\n};\n\n\n/**\n * The `ngeo-displaywindow` component is an alternative to the `ngeo.message.Popup`.\n * What they have in common:\n *\n * - support title\n * - support url to be shown in an iframe\n * - support plain HTML content\n * - support sizing, i.e. height and width.\n * - support being opened/closed\n *\n * The differences with the `ngeo.message.Popup` are:\n *\n * - it supports being dragged\n * - it supports being resized\n * - support angularjs template content\n *\n * Example:\n *      <ngeo-displaywindow\n *        class=\"window1\"\n *        url=\"::ctrl.window1Content\"\n *        desktop=\"::false\"\n *        open=\"::true\"\n *        title=\"'Window 1 - The simplest window (close kills it)'\">\n *      </ngeo-displaywindow>\n *\n * @htmlAttribute {boolean=} ngeo-displaywindow-clear-on-close Whether to clear the content on close or not.\n * @htmlAttribute {string=} ngeo-displaywindow-content The html content. If not provided, you must provide\n *     an url.\n * @htmlAttribute {string=} ngeo-displaywindow-content-template AngularJS template. It gets compiled during runtime\n * with the supplied scope (ngeo-displaywindow-content-scope).\n * @htmlAttribute {angular.Scope=} ngeo-displaywindow-content-scope Scope used for ngeo-displaywindow-content-template.\n * @htmlAttribute {boolean=} ngeo-displaywindow-desktop If true, the window is draggable and resizable. If\n *     not set, you must set manually both parameter.\n * @htmlAttribute {boolean=} ngeo-displaywindow-draggable Whether the window is draggable or not.\n * @htmlAttribute {string=} ngeo-displaywindow-draggable-containment The zone (CSS selector) where the window\n *     is authorized to be dragged.\n * @htmlAttribute {string=} ngeo-displaywindow-height The default height of the window.\n * @htmlAttribute {boolean=} ngeo-displaywindow-open Whether the window is open or not.\n * @htmlAttribute {string=} ngeo-displaywindow-title The html title of the window.\n * @htmlAttribute {string=} ngeo-displaywindow-url The URL to open in an iframe, in the window. The content\n *     attribute must not be provided.\n * @htmlAttribute {string=} ngeo-displaywindow-width The default width of the window.\n * @ngdoc component\n * @ngname ngeoDisplaywindow\n */\nexports.component('ngeoDisplaywindow', {\n  bindings: {\n    'clearOnClose': '<?',\n    'content': '=?',\n    'contentTemplate': '<?',\n    'contentScope': '<?',\n    'desktop': '<?',\n    'draggable': '<?',\n    'draggableContainment': '<?',\n    'height': '=?',\n    'open': '=?',\n    'resizable': '<?',\n    'title': '=?',\n    'url': '=?',\n    'width': '=?'\n  },\n  controller: exports.Controller_,\n  templateUrl: ngeoMessageDisplaywindowTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.controlComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport olMap from 'ol/Map.js';\nimport olControlControl from 'ol/control/Control.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoControl', []);\n\n\n/**\n * Provides a directive that can be used to add a control to the map\n * using a DOM element.\n *\n * Example:\n *\n *     <div ngeo-control=\"ctrl.control\" ngeo-control-map=\"ctrl.map\"></div>\n *\n * The expression passed to \"ngeo-control\" should evaluate to a control\n * instance, and the expression passed to \"ngeo-control-map\" should\n * evaluate to a map instance.\n *\n * See our live example: [../examples/control.html](../examples/control.html)\n *\n * @htmlAttribute {ol.Map} ngeo-control-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoControl\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const control = /** @type {ol.control.Control} */\n              (scope.$eval(attrs['ngeoControl']));\n      googAsserts.assertInstanceof(control, olControlControl);\n\n      const map = /** @type {ol.Map} */\n              (scope.$eval(attrs['ngeoControlMap']));\n      googAsserts.assertInstanceof(map, olMap);\n\n      control.setTarget(element[0]);\n      map.addControl(control);\n    }\n  };\n};\n\n\nexports.directive('ngeoControl', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.filereaderComponent\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFilereader', []);\n\n/**\n * This directive is to used on an input file element. When a file is selected\n * the directive uses the browser `FileReader` API to read the file. The file\n * content is provided to the directive user through the assignable expression.\n * Only works for text files (`readAsText` used for reading the file). And does\n * not work in Internet Explorer 9.\n *\n * Example:\n *\n *      <input type=\"file\" ngeo-filereader=\"ctrl.fileContent\"\n *        ngeo-filereader-supported=\"ctrl.supported\"/>\n *\n * See our live example: [../examples/importfeatures.html](../examples/importfeatures.html)\n *\n * @htmlAttribute {string} ngeo-filereader The content of the file read.\n * @htmlAttribute {boolean=} ngeo-filereader-supported Whether the FileReader API is supported.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoFilereader\n */\nexports.component_ = function($window) {\n  return {\n    restrict: 'A',\n    scope: {\n      'fileContent': '=ngeoFilereader',\n      'supported': '=?ngeoFilereaderSupported'\n    },\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      const supported = 'FileReader' in $window;\n      scope['supported'] = supported;\n      if (!supported) {\n        return;\n      }\n      element.on('change', (changeEvent) => {\n        /** @type {!FileReader} */\n        const fileReader = new $window.FileReader();\n        fileReader.onload = (\n          /**\n                 * @param {!ProgressEvent} evt Event.\n                 */\n          function(evt) {\n            scope.$apply(() => {\n              scope['fileContent'] = evt.target.result;\n            });\n          });\n        fileReader.readAsText(changeEvent.target.files[0]);\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoFilereader',\n  exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.getBrowserLanguage\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGetBrowserLanguage', []);\n\n\n/**\n * Provides a function that returns the most appropriate 2-letter\n * language code depending on the list of available languages and the browser\n * languages settings.\n *\n * @param {angular.$window} $window Angular $window service.\n * @return {ngeox.miscGetBrowserLanguage} The \"GetBrowserLanguage\" function.\n *\n * @ngdoc service\n * @ngname ngeoGetBrowserLanguage\n * @ngInject\n */\nexports.factory_ = function($window) {\n  return (\n    /**\n     * @param {Array.<string>} availableLanguages Available languages.\n     * @return {string} The \"best\" language code.\n     */\n    function(availableLanguages) {\n      const nav = $window.navigator;\n      let browserLanguages = nav.languages || nav.language ||\n            nav.browserLanguage || nav.systemLanguage || nav.userLanguage;\n      if (!Array.isArray(browserLanguages)) {\n        browserLanguages = [browserLanguages];\n      }\n      browserLanguages = browserLanguages.map(item => item.substring(0, 2));\n      // remove duplicated language codes\n      browserLanguages = browserLanguages.filter((item, index, arr) => arr.indexOf(item) == index);\n      const supportedLanguages = browserLanguages.filter(item => availableLanguages.indexOf(item) != -1);\n      return supportedLanguages[0];\n    });\n};\n\nexports.factory('ngeoGetBrowserLanguage', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.extraModule\n */\nimport ngeoMiscAutoProjection from 'ngeo/misc/AutoProjection.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\nimport ngeoMiscControlComponent from 'ngeo/misc/controlComponent.js';\nimport ngeoMiscDatepickerComponent from 'ngeo/misc/datepickerComponent.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoMiscFilereaderComponent from 'ngeo/misc/filereaderComponent.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoMiscGetBrowserLanguage from 'ngeo/misc/getBrowserLanguage.js';\nimport ngeoMiscSortableComponent from 'ngeo/misc/sortableComponent.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMiscExtraModule', [\n  ngeoMiscAutoProjection.module.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscControlComponent.name,\n  ngeoMiscDatepickerComponent.name,\n  ngeoMiscDebounce.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscFile.module.name,\n  ngeoMiscFilereaderComponent.name,\n  ngeoMiscFilters.name,\n  ngeoMiscGetBrowserLanguage.name,\n  ngeoMiscSortableComponent.name,\n  ngeoMiscTime.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.query.mapQueryComponent\n */\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport * as olEvents from 'ol/events.js';\n\nconst exports = angular.module('ngeoMapQuery', [\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\n/**\n * Provides a \"map query\" directive.\n *\n * This directive is responsible of binding a map and the ngeo query service\n * together. While active, clicks made on the map are listened by the directive\n * and a request gets issued to the query service.\n *\n * This directive doesn't require to be rendered in a visible DOM element, but\n * it could be used with a ngeo-btn to manage the activation of the directive.\n * See below an example without any use of UI:\n *\n * Example:\n *\n *      <span\n *        ngeo-map-query=\"\"\n *        ngeo-map-query-map=\"::ctrl.map\"\n *        ngeo-map-query-active=\"ctrl.queryActive\"\n *        ngeo-map-query-autoclear=\"ctrl.queryAutoClear\">\n *      </span>\n *\n * See our live example: [../examples/mapquery.html](../examples/mapquery.html)\n *\n * @param {ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n * @param {angular.$injector} $injector Main injector.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoMapQuery\n */\nexports.directive_ = function(ngeoMapQuerent, $injector) {\n  return {\n    restrict: 'A',\n    scope: false,\n    link: (scope, elem, attrs) => {\n      const map = scope.$eval(attrs['ngeoMapQueryMap']);\n      let clickEventKey_ = null;\n      let pointerMoveEventKey_ = null;\n\n      /**\n       * Called when the map is clicked while this controller is active. Issue\n       * a request to the query service using the coordinate that was clicked.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handleMapClick_ = function(evt) {\n        const coordinate = evt.coordinate;\n        ngeoMapQuerent.issue({\n          coordinate,\n          map\n        });\n      };\n\n      /**\n       * Called when the pointer is moved while this controller is active.\n       * Change the mouse pointer when hovering a non-transparent pixel on the\n       * map.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handlePointerMove_ = function(evt) {\n        if (!evt.dragging) {\n          const pixel = map.getEventPixel(evt.originalEvent);\n          const queryable = function(layer) {\n            const visible = layer.get('visible');\n            const sourceids = layer.get('querySourceIds');\n            return visible && !!sourceids;\n          };\n          const hit = map.forEachLayerAtPixel(pixel, () => true, undefined, queryable);\n          map.getTargetElement().style.cursor = hit ? 'pointer' : '';\n        }\n      };\n\n      /**\n       * Listen to the map events.\n       */\n      const activate_ = function() {\n        clickEventKey_ = olEvents.listen(map, 'singleclick', handleMapClick_);\n        const queryOptions = /** @type {ngeox.QueryOptions} */ (\n          $injector.has('ngeoQueryOptions') ? $injector.get('ngeoQueryOptions') : {}\n        );\n        if (queryOptions.cursorHover) {\n          pointerMoveEventKey_ = olEvents.listen(map, 'pointermove', handlePointerMove_);\n        }\n      };\n\n      /**\n       * Unlisten the map events.\n       */\n      const deactivate_ = function() {\n        if (clickEventKey_ !== null) {\n          olEvents.unlistenByKey(clickEventKey_);\n          clickEventKey_ = null;\n        }\n        if (pointerMoveEventKey_ !== null) {\n          olEvents.unlistenByKey(pointerMoveEventKey_);\n          pointerMoveEventKey_ = null;\n        }\n        if (scope.$eval(attrs['ngeoMapQueryAutoclear']) !== false) {\n          ngeoMapQuerent.clear();\n        }\n      };\n\n      // watch 'active' property -> activate/deactivate accordingly\n      scope.$watch(attrs['ngeoMapQueryActive'],\n        (newVal, oldVal) => {\n          if (newVal) {\n            activate_();\n          } else {\n            deactivate_();\n          }\n        }\n      );\n    }\n  };\n};\n\nexports.directive('ngeoMapQuery', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.WfsPermalink\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olExtent from 'ol/extent.js';\nimport * as olFormatFilter from 'ol/format/filter.js';\nimport olFormatWFS from 'ol/format/WFS.js';\n\n/**\n * WFS permalink service that can be used to load features with a WFS\n * GetFeature request given query parameters.\n *\n * Resulting features are then highlighted and\n * the map is zoomed to the nearest map extent.\n *\n * Parameters:\n *\n * - ``wfs_layer`` tells what layer will be queried\n * - ``wfs_showFeatures`` (boolean) tells if the features should be\n *   highlighted and listed (when true) or if the map should only be\n *   recentered on the features (when false). Default is true.\n * - other parameters will be considered as WFS attribute/values filters and\n *   must be of the form:\n *   ``wfs_<layer attribute name>=<a comma-separated list of values>``\n *\n * Example:\n * http://example.com?wfs_layer=parcels&wfs_city=Oslo&wfs_number=12,34,56\n * will load parcels #12, 34 and 56 of the city of Oslo.\n *\n * It is possible to define several groups of filtering parameters by:\n *\n * - adding a ``wfs_ngroups`` parameter telling how many groups are defined\n * - prefixing all filtering parameters by the number of each group,\n *   starting at 0. For instance ``wfs_0_<layer attribute name>``\n *\n * Example:\n * http://example.com?wfs_layer=parcels&wfs_ngroups=2\n * &wfs_0_city=Oslo&wfs_0_number=12,34,56&wfs_1_city=Paris&wfs_1_number=78,90\n * will load parcels #12, 34 and 56 of the city of Oslo as well as\n * parcels #78 and 90 of the city of Paris.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular $http service.\n * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n * @param {ngeox.WfsPermalinkOptions} ngeoWfsPermalinkOptions The options to\n *     configure the ngeo wfs permalink service with.\n * @ngdoc service\n * @ngname ngeoWfsPermalink\n * @ngInject\n */\nconst WfsPermalinkService = function($http, ngeoQueryResult, ngeoWfsPermalinkOptions) {\n\n  const options = ngeoWfsPermalinkOptions;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = options.url;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxFeatures_ = options.maxFeatures !== undefined ? options.maxFeatures : 50;\n\n  /**\n   * @type {Object<string, ngeox.WfsType>}\n   * @private\n   */\n  this.wfsTypes_ = {};\n\n  googAsserts.assertArray(options.wfsTypes, 'wfsTypes is not correctly set');\n  options.wfsTypes.forEach((wfsType) => {\n    this.wfsTypes_[wfsType.featureType] = wfsType;\n  });\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.defaultFeatureNS_ = options.defaultFeatureNS;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.defaultFeaturePrefix_ = options.defaultFeaturePrefix;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.pointRecenterZoom_ = options.pointRecenterZoom;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @private\n   */\n  this.result_ = ngeoQueryResult;\n};\n\n\n/**\n * Clear the results.\n * @export\n */\nWfsPermalinkService.prototype.clear = function() {\n  this.clearResult_();\n};\n\n\n/**\n * Build a WFS GetFeature request for the given query parameter data, send the\n * request and add the received features to {@link ngeox.QueryResult}.\n *\n * @param {ngeox.WfsPermalinkData} queryData Query data for the WFS request.\n * @param {ol.Map} map The ol3 map object to get the current projection from.\n * @export\n */\nWfsPermalinkService.prototype.issue = function(queryData, map) {\n  googAsserts.assert(this.url_,\n    'url is not set. to use the wfs permalink service, ' +\n      'set the value `ngeoWfsPermalinkOptions`');\n  this.clearResult_();\n\n  const typeName = queryData.wfsType;\n  if (!this.wfsTypes_.hasOwnProperty(typeName)) {\n    return;\n  }\n  const wfsType = this.wfsTypes_[typeName];\n\n  const filters = this.createFilters_(queryData.filterGroups);\n  if (filters === null) {\n    return;\n  }\n\n  this.issueRequest_(wfsType, filters, map, queryData.showFeatures);\n};\n\n\n/**\n * @param {ngeox.WfsType} wfsType Type.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {ol.Map} map The ol3 map object to get the current projection from.\n * @param {boolean} showFeatures Show features or only zoom to feature extent?\n * @private\n */\nWfsPermalinkService.prototype.issueRequest_ = function(wfsType, filter, map, showFeatures) {\n  const wfsFormat = new olFormatWFS();\n  const featureRequestXml = wfsFormat.writeGetFeature({\n    srsName: map.getView().getProjection().getCode(),\n    featureNS: (wfsType.featureNS !== undefined) ?\n      wfsType.featureNS : this.defaultFeatureNS_,\n    featurePrefix: (wfsType.featurePrefix !== undefined) ?\n      wfsType.featurePrefix : this.defaultFeaturePrefix_,\n    featureTypes: [wfsType.featureType],\n    outputFormat: 'GML3',\n    filter: filter,\n    maxFeatures: this.maxFeatures_\n  });\n\n  const featureRequest = new XMLSerializer().serializeToString(featureRequestXml);\n  const config = {\n    headers: {'Content-Type': 'text/xml; charset=UTF-8'}\n  };\n  this.$http_.post(this.url_, featureRequest, config).then((response) => {\n    const features = wfsFormat.readFeatures(response.data);\n    if (features.length == 0) {\n      return;\n    }\n\n    // zoom to features\n    const size = map.getSize();\n    if (size !== undefined) {\n      const maxZoom = this.pointRecenterZoom_;\n      const padding = [10, 10, 10, 10];\n      map.getView().fit(this.getExtent_(features), {size, maxZoom, padding});\n    }\n\n    // then show if requested\n    if (showFeatures) {\n      const resultSource = /** @type {ngeox.QueryResultSource} */ ({\n        'features': features,\n        'id': wfsType.featureType,\n        'identifierAttributeField': wfsType.label,\n        'label': wfsType.featureType,\n        'pending': false\n      });\n\n      this.result_.sources.push(resultSource);\n      this.result_.total = features.length;\n    }\n  });\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @return {ol.Extent} The extent of all features.\n * @private\n */\nWfsPermalinkService.prototype.getExtent_ = function(features) {\n  return features.reduce((extent, feature) => olExtent.extend(extent, feature.getGeometry().getExtent()), olExtent.createEmpty());\n};\n\n/**\n * Create OGC filters for the filter groups extracted from the query params.\n *\n * @param {Array.<ngeox.WfsPermalinkFilterGroup>} filterGroups Filter groups.\n * @return {ol.format.filter.Filter} OGC filters.\n * @private\n */\nWfsPermalinkService.prototype.createFilters_ = function(filterGroups) {\n  if (filterGroups.length == 0) {\n    return null;\n  }\n  const f = olFormatFilter;\n  const createFiltersForGroup = function(filterGroup) {\n    const filters = filterGroup.filters.map((filterDef) => {\n      const condition = filterDef.condition;\n      if (Array.isArray(condition)) {\n        return WfsPermalinkService.or_(condition.map(cond => f.equalTo(filterDef.property, cond)));\n      } else {\n        return f.equalTo(filterDef.property, filterDef.condition);\n      }\n    });\n    return WfsPermalinkService.and_(filters);\n  };\n  return WfsPermalinkService.or_(filterGroups.map(createFiltersForGroup));\n};\n\n\n/**\n * Join a list of filters with `and(...)`.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.and_ = function(filters) {\n  return WfsPermalinkService.joinFilters_(filters, olFormatFilter.and);\n};\n\n\n/**\n * Join a list of filters with `or(...)`.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.or_ = function(filters) {\n  return WfsPermalinkService.joinFilters_(filters, olFormatFilter.or);\n};\n\n\n/**\n * Join a list of filters with a given join function.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @param {function(!ol.format.filter.Filter, !ol.format.filter.Filter):\n *    ol.format.filter.Filter} joinFn The function to join two filters.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.joinFilters_ = function(filters, joinFn) {\n  return filters.reduce((combinedFilters, currentFilter) => {\n    if (combinedFilters === null) {\n      return currentFilter;\n    } else {\n      googAsserts.assert(currentFilter !== null);\n      return joinFn(combinedFilters, currentFilter);\n    }\n  }, null);\n};\n\n\n/**\n * Clear every features for all result sources and reset the total counter\n * as well.\n * @private\n */\nWfsPermalinkService.prototype.clearResult_ = function() {\n  this.result_.total = 0;\n  this.result_.sources.forEach((source) => {\n    source.features.length = 0;\n  });\n};\n\n\n/**\n * @type {!angular.Module}\n */\nWfsPermalinkService.module = angular.module('ngeoWfsPermalink', [\n  // FIXME add dependencies\n]);\n\n\n/**\n * Value that is supposed to be set in applications to enable the WFS\n * permalink functionality.\n */\nWfsPermalinkService.module.value('ngeoWfsPermalinkOptions',\n  /** @type {ngeox.WfsPermalinkOptions} */ ({\n    url: '',\n    wfsTypes: [],\n    defaultFeatureNS: '',\n    defaultFeaturePrefix: ''\n  })\n);\n\n\nWfsPermalinkService.module.service('ngeoWfsPermalink', WfsPermalinkService);\n\n\nexport default WfsPermalinkService;\n","/**\n * @module gmf.controllers.AbstractAppController\n */\nimport 'jquery';\nimport 'angular';\nimport 'angular-gettext';\nimport 'angular-dynamic-locale';\nimport gmfAuthenticationModule from 'gmf/authentication/module.js';\n\nimport gmfBackgroundlayerselectorComponent from 'gmf/backgroundlayerselector/component.js';\nimport gmfDatasourceModule from 'gmf/datasource/module.js';\nimport gmfDisclaimerComponent from 'gmf/disclaimer/component.js';\nimport gmfFiltersModule from 'gmf/filters/module.js';\nimport gmfLayertreeModule from 'gmf/layertree/module.js';\nimport gmfMapModule from 'gmf/map/module.js';\nimport gmfQueryExtraModule from 'gmf/query/extraModule.js';\nimport gmfSearchModule from 'gmf/search/module.js';\nimport gmfThemeModule from 'gmf/theme/module.js';\nimport ngeoMessageDisplaywindowComponent from 'ngeo/message/displaywindowComponent.js';\nimport ngeoMiscExtraModule from 'ngeo/misc/extraModule.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport ngeoQueryMapQueryComponent from 'ngeo/query/mapQueryComponent.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerWfsPermalink from 'ngeo/statemanager/WfsPermalink.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * Application abstract controller.\n *\n * This file includes `goog.require` for base components/directives used\n * by the HTML page and the controller to provide the configuration.\n *\n * @param {gmfx.Config} config A part of the application config.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @ngdoc controller\n * @ngInject\n * @export\n */\nconst exports = function(config, $scope, $injector) {\n\n  /**\n   * Location service\n   * @type {ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = $injector.get('ngeoLocation');\n  if (this.ngeoLocation.hasParam('debug')) {\n    // make the injector globally available\n    window.injector = $injector;\n  }\n\n  googAsserts.assertInstanceof(this.map, olMap);\n\n  /**\n   * Ngeo FeatureHelper service\n   * @type {ngeo.misc.FeatureHelper}\n   */\n  const ngeoFeatureHelper = $injector.get('ngeoFeatureHelper');\n  ngeoFeatureHelper.setProjection(googAsserts.assert(this.map.getView().getProjection()));\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = $injector.get('gmfThemeManager');\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.get('gmfTreeManager');\n\n  /**\n   * Themes service\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.get('gmfThemes');\n\n  /**\n   * Permalink service\n   * @type {gmf.permalink.Permalink}\n   * @private\n   */\n  this.permalink_ = $injector.get('gmfPermalink');\n\n  /**\n   * Authentication service\n   * @type {gmf.authentication.Service}\n   */\n  const gmfAuthentication = $injector.get('gmfAuthenticationService');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.hasEditableLayers = false;\n\n  /**\n   * @private\n   */\n  this.updateHasEditableLayers_ = function() {\n    this.gmfThemes_.hasEditableLayers().then((hasEditableLayers) => {\n      this.hasEditableLayers = hasEditableLayers;\n    });\n  };\n\n  /**\n   * @param {gmfx.AuthenticationEvent} evt Event.\n   */\n  const userChange = (evt) => {\n    const user = evt.detail.user;\n    const roleId = (user.username !== null) ? user.role_id : undefined;\n\n    // Open filter panel if 'open_panel' is set in functionalities and\n    // has 'layer_filter' as first value\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      const functionalities = this.gmfUser.functionalities;\n      if (functionalities &&\n          functionalities.open_panel &&\n          functionalities.open_panel[0] === 'layer_filter') {\n        this.filterSelectorActive = true;\n      }\n    });\n\n    // Reload theme and background layer when login status changes.\n    const previousThemeName = this.gmfThemeManager.getThemeName();\n    this.gmfThemeManager.setThemeName('', true);\n    if (evt.type !== 'ready') {\n      this.updateCurrentTheme_(previousThemeName);\n    }\n    // Reload themes when login status changes.\n    this.gmfThemes_.loadThemes(roleId);\n    this.updateHasEditableLayers_();\n  };\n\n  olEvents.listen(gmfAuthentication, 'ready', userChange);\n  olEvents.listen(gmfAuthentication, 'login', userChange);\n  olEvents.listen(gmfAuthentication, 'logout', userChange);\n\n  /**\n   * @type {Array.<gmfx.SearchComponentDatasource>}\n   * @export\n   */\n  this.searchDatasources = [{\n    labelKey: 'label',\n    groupValues: /** @type {Array.<string>} **/ ($injector.get('gmfSearchGroups')),\n    groupActions: /** @type {Array.<string>} **/ ($injector.get('gmfSearchActions')),\n    projection: `EPSG:${config.srid || 21781}`,\n    url: /** @type {string} **/ ($injector.get('fulltextsearchUrl'))\n  }];\n\n  /**\n   * @type {!Object.<string, string>}\n   * @export\n   */\n  this.dimensions = {};\n\n  // watch any change on dimensions object to refresh the url\n  this.permalink_.setDimensions(this.dimensions);\n\n  // Injecting the gmfDataSourcesManager service creates the data sources\n  const gmfDataSourcesManager = $injector.get('gmfDataSourcesManager');\n  // Init the datasources with our map.\n  gmfDataSourcesManager.setDatasourceMap(this.map);\n  // Give the dimensions to the gmfDataSourcesManager\n  gmfDataSourcesManager.setDimensions(this.dimensions);\n\n  if ($injector.has('gmfDefaultDimensions')) {\n    // Set defaults\n    const defaultDimensions = $injector.get('gmfDefaultDimensions');\n    for (const dim in defaultDimensions) {\n      if (this.dimensions[dim] === undefined) {\n        this.dimensions[dim] = defaultDimensions[dim];\n      }\n    }\n  }\n\n  /**\n   * @type {ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = $injector.get('ngeoBackgroundLayerMgr');\n\n  // watch any change on dimensions object to refresh the background layer\n  $scope.$watchCollection(() => this.dimensions, () => {\n    this.backgroundLayerMgr_.updateDimensions(this.map, this.dimensions);\n  });\n\n  this.backgroundLayerMgr_.on('change', () => {\n    this.backgroundLayerMgr_.updateDimensions(this.map, this.dimensions);\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.leftNavVisible = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.rightNavVisible = false;\n\n  const queryFill = new olStyleFill({color: [255, 170, 0, 0.6]});\n  const queryStroke = new olStyleStroke({color: [255, 170, 0, 1], width: 2});\n\n  /**\n   * FeatureStyle used by the gmf.query.windowComponent\n   * @type {ol.style.Style}\n   * @export\n   */\n  this.queryFeatureStyle = new olStyleStyle({\n    fill: queryFill,\n    image: new olStyleCircle({\n      fill: queryFill,\n      radius: 5,\n      stroke: queryStroke\n    }),\n    stroke: queryStroke\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.filterSelectorActive = false;\n\n  /**\n   * The active state of the ngeo query directive.\n   * @type {boolean}\n   * @export\n   */\n  this.queryActive = true;\n\n  /**\n   * Set the clearing of the ngeoQuery after the deactivation of the query\n   * @type {boolean}\n   * @export\n   */\n  this.queryAutoClear = true;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.printPanelActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.printActive = false;\n\n  /**\n   * @type {ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = $injector.get('ngeoMapQuerent');\n\n  // Don't deactivate ngeoQuery on print activation\n  $scope.$watch(() => this.printPanelActive, (newVal) => {\n    // Clear queries if another panel is open but not if user go back to the\n    // map form the print.\n    if (!newVal && !this.queryActive) {\n      this.ngeoMapQuerent_.clear();\n    }\n    this.queryAutoClear = !newVal;\n    this.printActive = newVal;\n  });\n\n  /**\n   * The active state of the directive responsible of point measurements.\n   * @type {boolean}\n   * @export\n   */\n  this.measurePointActive = false;\n\n  /**\n   * The active state of the directive responsible of length measurements.\n   * @type {boolean}\n   * @export\n   */\n  this.measureLengthActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawFeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawProfilePanelActive = false;\n\n  /**\n   * @type {gmfx.User}\n   * @export\n   */\n  this.gmfUser = $injector.get('gmfUser');\n\n  /**\n   * @type {ngeox.miscGetBrowserLanguage}\n   */\n  this.getBrowserLanguage = $injector.get('ngeoGetBrowserLanguage');\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   */\n  this.stateManager = $injector.get('ngeoStateManager');\n\n  /**\n   * @type {tmhDynamicLocale}\n   */\n  this.tmhDynamicLocale = $injector.get('tmhDynamicLocale');\n\n  /**\n   * @type {angular.Scope}\n   */\n  this.$scope = $scope;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.lang;\n\n  /**\n   * Default language\n   * @type {string}\n   */\n  this.defaultLang = $injector.get('defaultLang');\n\n  /**\n   * Languages URL\n   * @type {!Object.<string, string>}\n   */\n  this.langUrls = $injector.get('langUrls');\n\n  /**\n   * The gettext catalog\n   * @type {angularGettext.Catalog}\n   */\n  this.gettextCatalog = $injector.get('gettextCatalog');\n\n  this.initLanguage();\n\n  const mapTools = 'mapTools';\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.mapToolsGroup = mapTools;\n\n  /**\n   * The ngeo feature overlay manager service\n   * @type {ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.get('ngeoFeatureOverlayMgr');\n  ngeoFeatureOverlayMgr.init(this.map);\n\n  /**\n   * The ngeo ToolActivate manager service.\n   * @type {ngeo.misc.ToolActivateMgr}\n   */\n  const ngeoToolActivateMgr = $injector.get('ngeoToolActivateMgr');\n\n  const queryToolActivate = new ngeoMiscToolActivate(this, 'queryActive');\n  ngeoToolActivateMgr.registerTool(mapTools, queryToolActivate, true);\n\n  const measurePointActivate = new ngeoMiscToolActivate(this, 'measurePointActive');\n  ngeoToolActivateMgr.registerTool(mapTools, measurePointActivate, false);\n\n  const measureLengthActivate = new ngeoMiscToolActivate(this, 'measureLengthActive');\n  ngeoToolActivateMgr.registerTool(mapTools, measureLengthActivate, false);\n\n  const drawFeatureActivate = new ngeoMiscToolActivate(this, 'drawFeatureActive');\n  ngeoToolActivateMgr.registerTool(mapTools, drawFeatureActivate, false);\n\n  const drawProfilePanelActivate = new ngeoMiscToolActivate(this, 'drawProfilePanelActive');\n  ngeoToolActivateMgr.registerTool(mapTools, drawProfilePanelActivate, false);\n\n  const printPanelActivate = new ngeoMiscToolActivate(this, 'printPanelActive');\n  ngeoToolActivateMgr.registerTool(mapTools, printPanelActivate, false);\n\n  $scope.$root.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n    this.gmfThemes_.getThemeObject(name).then((theme) => {\n      this.setDefaultBackground_(theme);\n    });\n  });\n\n  /**\n   * @param {boolean} skipPermalink If True, don't use permalink\n   * background layer.\n   * @private\n   */\n  this.updateCurrentBackgroundLayer_ = function(skipPermalink) {\n    this.gmfThemes_.getBgLayers().then((layers) => {\n      let background;\n      if (!skipPermalink) {\n        // get the background from the permalink\n        background = this.permalink_.getBackgroundLayer(layers);\n      }\n      if (!background) {\n        // get the background from the user settings\n        const functionalities = this.gmfUser.functionalities;\n        if (functionalities) {\n          const defaultBasemapArray = functionalities.default_basemap;\n          if (defaultBasemapArray.length > 0) {\n            const defaultBasemapLabel = defaultBasemapArray[0];\n            background = olArray.find(layers, layer => layer.get('label') === defaultBasemapLabel);\n          }\n        }\n      }\n      if (!background && layers[1]) {\n        // fallback to the layers list, use the second one because the first\n        // is the blank layer\n        background = layers[1];\n      }\n\n      if (background) {\n        this.backgroundLayerMgr_.set(this.map, background);\n      }\n    });\n  }.bind(this);\n\n  this.updateCurrentBackgroundLayer_(false);\n\n  // Static \"not used\" functions should be in the window because otherwise\n  // closure remove them. \"export\" tag doesn't work on static function below,\n  // we \"export\" them as externs in the gmfx options file.\n  const gmfx = window.gmfx || {};\n  /**\n   * @export\n   */\n  window.gmfx = gmfx;\n\n  /**\n   * Static function to create a popup with an iframe.\n   * @param {string} url an url.\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width.\n   * @param {number=} opt_height CSS height.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  gmfx.openIframePopup = (\n    url, title, opt_width, opt_height, opt_apply\n  ) => {\n    this.displaywindowUrl = url;\n    gmfx.openPopup_(title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * Static function to create a popup with html content.\n   * @param {string} content (text or html).\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  gmfx.openTextPopup = (\n    content, title, opt_width, opt_height, opt_apply\n  ) => {\n    this.displaywindowContent = content;\n    gmfx.openPopup_(title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   */\n  gmfx.openPopup_ = (title, opt_width, opt_height, opt_apply) => {\n\n    this.displaywindowTitle = title;\n    this.displaywindowOpen = true;\n\n    if (opt_width) {\n      this.displaywindowWidth = `${opt_width}px`;\n    }\n    if (opt_height) {\n      this.displaywindowHeight = `${opt_height}px`;\n    }\n    if (opt_apply !== false) {\n      this.$scope.$apply();\n    }\n  };\n\n  /**\n   * Whether to update the size of the map on browser window resize.\n   * @type {boolean}\n   * @export\n   */\n  this.manageResize = false;\n\n  /**\n   * The duration (milliseconds) of the animation that may occur on the div\n   * containing the map. Used to smoothly resize the map while the animation\n   * is in progress.\n   * @type {number|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n  const cgxp = window.cgxp || {};\n  /**\n   * @export\n   */\n  window.cgxp = cgxp;\n  /**\n   * @export\n   */\n  cgxp.tools = window.cgxp.tools || {};\n  /**\n   * Static function to create a popup with an iframe.\n   * @param {string} url an url.\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  cgxp.tools.openInfoWindow = function(url, title, opt_width, opt_height, opt_apply) {\n    gmfx.openIframePopup(url, title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowContent = null;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.displaywindowDraggableContainment = '.gmf-map';\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowHeight = null;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.displaywindowOpen = false;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowTitle = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowUrl = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowWidth = null;\n};\n\n\n/**\n * @return {boolean} Return true if a user exists and its 'is_password_changed' value is explicitly set\n *     to false.\n * @export\n */\nexports.prototype.userMustChangeItsPassword = function() {\n  return this.gmfUser.is_password_changed === false;\n};\n\n\n/**\n * @param {Array.<ol.layer.Base>} layers Layers list.\n * @param {Array.<string>} labels default_basemap list.\n * @return {ol.layer.Base} layer or null\n */\nexports.getLayerByLabels = function(layers, labels) {\n  if (labels && labels.length > 0) {\n    return olArray.find(layers, layer => layer.get('label') === labels[0]);\n  }\n  return null;\n};\n\n\n/**\n * @param {string} lang Language code.\n * @export\n */\nexports.prototype.switchLanguage = function(lang) {\n  googAsserts.assert(lang in this.langUrls);\n  this.gettextCatalog.setCurrentLanguage(lang);\n  this.gettextCatalog.loadRemote(this.langUrls[lang]);\n  this.tmhDynamicLocale.set(lang);\n  this.lang = lang;\n};\n\n\n/**\n */\nexports.prototype.initLanguage = function() {\n  this.$scope.$watch(() => this.lang, (newValue) => {\n    this.stateManager.updateState({\n      'lang': newValue\n    });\n  });\n\n  const browserLanguage = /** @type {string|undefined} */\n      (this.getBrowserLanguage(Object.keys(this.langUrls)));\n  const urlLanguage = /** @type {string|undefined} */\n      (this.stateManager.getInitialValue('lang'));\n\n  if (urlLanguage !== undefined && urlLanguage in this.langUrls) {\n    this.switchLanguage(urlLanguage);\n    return;\n  } else if (browserLanguage !== undefined && browserLanguage in this.langUrls) {\n    this.switchLanguage(browserLanguage);\n    return;\n  } else {\n    // if there is no information about language preference,\n    // fallback to default language\n\n    this.switchLanguage(this.defaultLang);\n    return;\n  }\n};\n\n\n/**\n * @param {gmfThemes.GmfTheme} theme Theme.\n * @private\n */\nexports.prototype.setDefaultBackground_ = function(theme) {\n  this.gmfThemes_.getBgLayers().then((layers) => {\n    let layer;\n\n    // get the background from the permalink\n    layer = this.permalink_.getBackgroundLayer(layers);\n\n    if (!layer && this.gmfUser.functionalities) {\n      // get the background from the user settings\n      layer = exports.getLayerByLabels(layers, this.gmfUser.functionalities.default_basemap);\n    }\n\n    if (!layer && theme) {\n      // get the background from the theme\n      layer = exports.getLayerByLabels(layers, theme.functionalities.default_basemap);\n    }\n\n    if (!layer) {\n      // fallback to the layers list, use the second one because the first is the blank layer.\n      layer = layers[layers.length > 1 ? 1 : 0];\n    }\n\n    googAsserts.assert(layer);\n    this.backgroundLayerMgr_.set(this.map, layer);\n  });\n};\n\n/**\n * @param {string} fallbackThemeName fallback theme name.\n * @private\n */\nexports.prototype.updateCurrentTheme_ = function(fallbackThemeName) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.permalink_.defaultThemeNameFromFunctionalities();\n    if (themeName) {\n      const theme = gmfThemeThemes.findThemeByName(themes, /** @type {string} */ (themeName));\n      if (theme) {\n        this.gmfThemeManager.addTheme(theme, true);\n      }\n    } else {\n      this.gmfThemeManager.setThemeName(fallbackThemeName);\n    }\n  });\n};\n\n/**\n * @protected\n * @return {Element} Span element with font-awesome inside of it\n */\nexports.prototype.getLocationIcon = function() {\n  const arrow = document.createElement('span');\n  arrow.className = 'fa fa-location-arrow';\n  arrow.style.transform = 'rotate(-0.82rad)';\n  const arrowWrapper = document.createElement('span');\n  arrowWrapper.appendChild(arrow);\n  return arrowWrapper;\n};\n\n\nexports.module = angular.module('GmfAbstractAppControllerModule', [\n  'gettext',\n  'tmh.dynamicLocale',\n  gmfAuthenticationModule.name,\n  gmfBackgroundlayerselectorComponent.name,\n  gmfDatasourceModule.name,\n  gmfDisclaimerComponent.name,\n  gmfFiltersModule.name,\n  gmfLayertreeModule.name,\n  gmfMapModule.name,\n  gmfQueryExtraModule.name,\n  gmfSearchModule.name,\n  gmfThemeModule.name,\n  ngeoMessageDisplaywindowComponent.name,\n  ngeoMiscExtraModule.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoQueryMapQuerent.module.name,\n  ngeoQueryMapQueryComponent.name,\n  ngeoStatemanagerModule.name,\n  ngeoStatemanagerWfsPermalink.module.name,\n]);\n\n\nexports.module.controller('AbstractController', exports);\n\n\nexports.module.value('ngeoExportFeatureFormats', [\n  ngeoMiscFeatureHelper.FormatType.KML,\n  ngeoMiscFeatureHelper.FormatType.GPX\n]);\n\nexports.module.config(['tmhDynamicLocaleProvider', 'angularLocaleScript',\n  /**\n   * @param {tmhDynamicLocaleProvider} tmhDynamicLocaleProvider angular-dynamic-locale provider.\n   * @param {string} angularLocaleScript the script.\n   */\n  function(tmhDynamicLocaleProvider, angularLocaleScript) {\n    // configure the script URL\n    tmhDynamicLocaleProvider.localeLocationPattern(angularLocaleScript);\n  }\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.ModifyCircle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport * as olCoordinate from 'ol/coordinate.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olExtent from 'ol/extent.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport {fromCircle} from 'ol/geom/Polygon.js';\nimport olInteractionPointer, {handleEvent as pointerHandleEvent} from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStructsRBush from 'ol/structs/RBush.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleDragEvent: exports.handleDragEvent_,\n    handleEvent: exports.handleEvent,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * Editing vertex.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {ol.structs.RBush.<ol.ModifySegmentDataType>}\n   * @private\n   */\n  this.rBush_ = new olStructsRBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  this.features_.forEach(feature => this.addFeature_(feature));\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  if (feature.getGeometry().getType() === 'Polygon' &&\n      !!feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n    const geometry = /** @type {ol.geom.Polygon}*/ (feature.getGeometry());\n    this.writeCircleGeometry_(feature, geometry);\n\n    const map = this.getMap();\n    if (map) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<ol.ModifySegmentDataType>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n       * @param {ol.ModifySegmentDataType} node RTree node.\n       */\n    (node) => {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nexports.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = rings.length; j < jj; ++j) {\n    coordinates = rings[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(olExtent.boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates Coordinates.\n * @return {ol.Feature} Vertex feature.\n * @private\n */\nexports.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new olFeature(new olGeomPoint(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} a The first segment data.\n * @param {ol.ModifySegmentDataType} b The second segment data.\n * @return {number} The difference in indexes.\n * @private\n */\nexports.compareIndexes_ = function(a, b) {\n  return a.index - b.index;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDownEvent_ = function(evt) {\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  this.dragSegments_ = [];\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = olExtent.boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(exports.compareIndexes_);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = olBase.getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += `-${depth.join('-')}`; // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (olCoordinate.equals(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (olCoordinate.equals(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      }\n    }\n  }\n  return !!this.vertexFeature_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDragEvent_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const vertex = evt.coordinate;\n  const geometry = /** @type {ol.geom.Polygon}*/ (this.dragSegments_[0][0].geometry);\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const line = new olGeomLineString([center, vertex]);\n\n\n  /**\n   * @type {ol.geom.Circle}\n   */\n  const circle = new olGeomCircle(center, line.getLength());\n  const coordinates = fromCircle(circle, 64).getCoordinates();\n  this.setGeometryCoordinates_(geometry, coordinates);\n\n\n  const azimut = ngeoInteractionMeasureAzimut.getAzimut(line);\n  this.features_.getArray()[0].set(ngeoFormatFeatureProperties.AZIMUT, azimut);\n\n  this.createOrUpdateVertexFeature_(vertex);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleUpEvent_ = function(evt) {\n  this.rBush_.clear();\n  this.writeCircleGeometry_(this.dragSegments_[0][0].feature,\n    this.dragSegments_[0][0].geometry);\n\n  if (this.modified_) {\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifyend', {features: this.features_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.ModifyCircle}\n * @api\n */\nexports.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof olMapBrowserPointerEvent)) {\n    return true;\n  }\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == 'pointermove' && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n\n  return pointerHandleEvent.call(this, mapBrowserEvent) &&\n      !handled;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.PluggableMap} map Map.\n * @private\n */\nexports.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return olCoordinate.squaredDistanceToSegment(pixelCoordinate, a.segment) -\n        olCoordinate.squaredDistanceToSegment(pixelCoordinate, b.segment);\n  };\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = olExtent.boundingExtent([lowerLeft, upperRight]);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = (olCoordinate.closestOnSegment(pixelCoordinate,\n      closestSegment));\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    if (Math.sqrt(olCoordinate.squaredDistance(pixel, vertexPixel)) <=\n        this.pixelTolerance_) {\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = olCoordinate.squaredDistance(vertexPixel, pixel1);\n      const squaredDist2 = olCoordinate.squaredDistance(vertexPixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      this.snappedToVertex_ = dist <= this.pixelTolerance_;\n      if (this.snappedToVertex_) {\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        this.createOrUpdateVertexFeature_(vertex);\n        const vertexSegments = {};\n        vertexSegments[olBase.getUid(closestSegment)] = true;\n        let segment;\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          segment = nodes[i].segment;\n          if ((olCoordinate.equals(closestSegment[0], segment[0]) &&\n              olCoordinate.equals(closestSegment[1], segment[1]) ||\n              (olCoordinate.equals(closestSegment[0], segment[1]) &&\n              olCoordinate.equals(closestSegment[1], segment[0])))) {\n            vertexSegments[olBase.getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n        return;\n      }\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nexports.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.ModifyRectangle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorPoints_ = new olLayerVector({\n    source: new olSourceVector({\n      wrapX: !!options.wrapX\n    }),\n    visible: this.getActive(),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {Object.<number, ngeo.interaction.ModifyRectangle.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {?ngeo.interaction.ModifyRectangle.ModifyParams}\n   * @private\n   */\n  this.params_ = null;\n\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n  this.features_.forEach((feature) => {\n    this.addFeature_(feature);\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionPointer.prototype.setActive.call(this, active);\n  if (this.vectorPoints_) {\n    this.vectorPoints_.setVisible(active);\n  }\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const featureGeom = feature.getGeometry();\n  if (featureGeom instanceof olGeomPolygon) {\n\n    // If the feature's corners are already set, no need to set them again\n    const uid = olBase.getUid(feature);\n    let item = this.cache_[uid];\n    if (item) {\n      return;\n    }\n\n    const pointSource = this.vectorPoints_.getSource();\n\n    // from each corners, create a point feature and add it to the point layer.\n    // each point is then associated with 2 siblings in order to update the\n    // siblings geometry at the same time when a point gets dragged around.\n    // mark each one as 'corner'\n    const corners = featureGeom.getCoordinates()[0];\n    while (corners.length > 4) {\n      if (corners[0][0] < corners[1][0] && corners[0][1] <= corners[1][1]) {\n        corners.pop();\n      } else {\n        corners.shift();\n      }\n    }\n    const pointFeatures = [];\n    let cornerPoint;\n    let cornerFeature;\n    corners.forEach((corner) => {\n      cornerPoint = new olGeomPoint(corner);\n      cornerFeature = new olFeature({\n        'corner': true,\n        'geometry': cornerPoint,\n        'siblingX': null,\n        'siblingY': null,\n        'boxFeature': feature\n      });\n\n      pointFeatures.push(cornerFeature);\n    }, this);\n    item = /** @type {ngeo.interaction.ModifyRectangle.CacheItem} */ ({\n      corners: pointFeatures\n    });\n    this.cache_[uid] = item;\n\n    let previousFeature;\n    let nextFeature;\n    pointFeatures.forEach((cornerFeature, index) => {\n      previousFeature = pointFeatures[index - 1];\n      if (!previousFeature) {\n        previousFeature = pointFeatures[pointFeatures.length - 1];\n      }\n\n      nextFeature = pointFeatures[index + 1];\n      if (!nextFeature) {\n        nextFeature = pointFeatures[0];\n      }\n\n      if (index % 2 === 0) {\n        cornerFeature.set('siblingX', nextFeature);\n        cornerFeature.set('siblingY', previousFeature);\n      } else {\n        cornerFeature.set('siblingX', previousFeature);\n        cornerFeature.set('siblingY', nextFeature);\n      }\n\n    }, this);\n    pointSource.addFeatures(pointFeatures);\n  }\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n    this.params_ = this.initializeParams_();\n  }\n};\n\n\n/**\n * @return {ngeo.interaction.ModifyRectangle.ModifyParams} The initialised params\n * @private\n */\nexports.prototype.initializeParams_ = function() {\n  const feature = this.feature_;\n\n  // 1. Find the origin (opposite) point for the modify operation\n  // siblingY relative to the origin is siblingX relative to the opposite\n  const siblingY = feature.get('siblingX');\n  googAsserts.assertInstanceof(siblingY, olFeature);\n\n  const origin = siblingY.get('siblingY');\n  googAsserts.assertInstanceof(origin, olFeature);\n  const originPoint = origin.getGeometry();\n  googAsserts.assertInstanceof(originPoint, olGeomPoint);\n  const originCoordinate = originPoint.getCoordinates();\n  const originPixel = this.getMap().getPixelFromCoordinate(originCoordinate);\n\n  // 2. Find the origin's X sibling and the normal vector from the origin to it\n  const siblingX = origin.get('siblingX');\n  googAsserts.assertInstanceof(siblingX, olFeature);\n  const siblingXPoint = siblingX.getGeometry();\n  googAsserts.assertInstanceof(siblingXPoint, olGeomPoint);\n  const siblingXCoordinate = siblingXPoint.getCoordinates();\n  const siblingXPixel = this.getMap().getPixelFromCoordinate(siblingXCoordinate);\n  let vectorX = [\n    siblingXPixel[0] - originPixel[0],\n    siblingXPixel[1] - originPixel[1]\n  ];\n  const vectorXMagnitude = Math.sqrt(vectorX[0] * vectorX[0] + vectorX[1] * vectorX[1]);\n  vectorX[0] /= vectorXMagnitude;\n  vectorX[1] /= vectorXMagnitude;\n\n  // 3. Find the origin's Y sibling and the normal vector from the origin to it\n  const siblingYPoint = siblingY.getGeometry();\n  googAsserts.assertInstanceof(siblingYPoint, olGeomPoint);\n  const siblingYCoordinate = siblingYPoint.getCoordinates();\n  const siblingYPixel = this.getMap().getPixelFromCoordinate(siblingYCoordinate);\n  let vectorY = [\n    siblingYPixel[0] - originPixel[0],\n    siblingYPixel[1] - originPixel[1]\n  ];\n  const vectorYMagnitude = Math.sqrt(vectorY[0] * vectorY[0] + vectorY[1] * vectorY[1]);\n  vectorY[0] /= vectorYMagnitude;\n  vectorY[1] /= vectorYMagnitude;\n\n  // 4. Validate the vectors.\n  if (isNaN(vectorX[0]) && isNaN(vectorY[0])) {\n    // Both vector are invalid. Rotation information has already been lost\n    vectorX = [0, 1];\n    vectorY = [1, 0];\n  } else if (isNaN(vectorX[0])) {\n    vectorX = [vectorY[1], -vectorY[0]];\n  } else if (isNaN(vectorY[0])) {\n    vectorY = [vectorX[1], -vectorX[0]];\n  }\n\n  return {\n    originCoordinate,\n    originPixel,\n    siblingXPoint,\n    siblingYPoint,\n    vectorX,\n    vectorY\n  };\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const item = this.cache_[uid];\n  const corners = item.corners;\n  for (let i = 0; i < corners.length; i++) {\n    this.vectorPoints_.getSource().removeFeature(corners[i]);\n  }\n  this.feature_ = null;\n  corners.length = 0;\n  delete this.cache_[uid];\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.vectorPoints_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  const feature = map.forEachFeatureAtPixel(evt.pixel, feature =>\n    (feature.get('siblingX') && feature.get('siblingY') ? feature : undefined)\n  );\n\n  if (feature) {\n    this.feature_ = feature;\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const feature = this.feature_;\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (feature.getGeometry());\n\n  if (geometry instanceof olGeomPoint) {\n    geometry.setCoordinates(evt.coordinate);\n\n    const destinationPixel = evt.pixel;\n\n    const originPixel = this.params_.originPixel;\n    const siblingXPoint = this.params_.siblingXPoint;\n    const siblingYPoint = this.params_.siblingYPoint;\n    const vectorX = this.params_.vectorX;\n    const vectorY = this.params_.vectorY;\n    const originCoordinate = this.params_.originCoordinate;\n\n    // Calculate new positions of siblings\n    const b2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorX);\n    const b2Coordinate = this.getMap().getCoordinateFromPixel(b2Pixel);\n    siblingXPoint.setCoordinates(b2Coordinate);\n\n    const c2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorY);\n    const c2Coordinate = this.getMap().getCoordinateFromPixel(c2Pixel);\n    siblingYPoint.setCoordinates(c2Coordinate);\n\n\n    // Resize the box\n    const boxFeature = feature.get('boxFeature');\n    const geom = boxFeature.getGeometry();\n    googAsserts.assertInstanceof(geom, olGeomPolygon);\n    geom.setCoordinates([[evt.coordinate, b2Coordinate, originCoordinate, c2Coordinate, evt.coordinate]]);\n  }\n};\n\n\n/**\n * Calculate the new position of a point as projected on a vector from origin to\n * destination.\n * @param {ol.Pixel} origin Pixel of origin (opposite of the drag handle)\n * @param {ol.Pixel} destination Pixel of destination (the handle we dragged)\n * @param {ol.Pixel} vector The normalized vector to the point\n * @return {ol.Pixel} The new pixel of the point\n * @private\n */\nexports.prototype.calculateNewPixel_ = function(\n  origin, destination, vector) {\n\n  const aVector = [destination[0] - origin[0], destination[1] - origin[1]];\n\n  const abScalarProduct = aVector[0] * vector[0] + aVector[1] * vector[1];\n\n  const deltaVector = [\n    (vector[0] * abScalarProduct),\n    (vector[1] * abScalarProduct)\n  ];\n\n  return [deltaVector[0] + origin[0], deltaVector[1] + origin[1]];\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifyend', {features: this.features_});\n    this.dispatchEvent(event);\n    this.params_ = null;\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * @typedef {{\n *     corners: Array.<ol.Feature>\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     originCoordinate: ol.Coordinate,\n *     originPixel: ol.Pixel,\n *     siblingXPoint: ol.geom.Point,\n *     siblingYPoint: ol.geom.Point,\n *     vectorX: Array.<number>,\n *     vectorY: Array.<number>\n * }}\n */\nexports.ModifyParams;\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Modify\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModifyCircle from 'ngeo/interaction/ModifyCircle.js';\nimport ngeoInteractionModifyRectangle from 'ngeo/interaction/ModifyRectangle.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olCollection from 'ol/Collection.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * This interaction combines multiple kind of feature modification interactions\n * in order to be able to modify vector features depending on their geometry\n * type. The different kind of interactions supported are:\n *\n * - `ol.interaction.Modify`\n * - `ngeo.interaction.ModifyCircle`\n * - `ngeo.interaction.ModifyRectangle`\n *\n * This interaction receives a collection of features. Its job is to listen\n * to added/removed features to and from it and add them in the proper\n * collection that is uniquely used for each inner interaction. Those inner\n * interactions follow the `active` property of this interaction, i.e. when\n * this interaction is activated, so do the inner interactions. Since they will\n * never share the same feature, they don't collide with one an other.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Interaction}\n * @param {olx.interaction.ModifyOptions} options Options.\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.otherFeatures_ = new olCollection();\n\n  this.interactions_.push(new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.otherFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.circleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyCircle({\n    features: this.circleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.rectangleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyRectangle({\n    features: this.rectangleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionInteraction.prototype.setActive.call(this, active);\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const interactions = this.interactions_;\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    interactions.forEach((interaction) => {\n      currentMap.removeInteraction(interaction);\n    });\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    interactions.forEach((interaction) => {\n      map.addInteraction(interaction);\n    });\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Toggle interactions.\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const interactions = this.interactions_;\n  const keys = this.listenerKeys_;\n\n  interactions.forEach((interaction) => {\n    interaction.setActive(active && !!map);\n  });\n\n  if (active && map) {\n    this.features_.forEach(feature => this.addFeature_(feature));\n    keys.push(\n      olEvents.listen(this.features_, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.features_.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.push(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.remove(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {ol.Collection.<ol.Feature>} Collection of features for this feature.\n * @private\n */\nexports.prototype.getFeatureCollection_ = function(feature) {\n  let features;\n  const isCircle = feature.get(ngeoFormatFeatureProperties.IS_CIRCLE);\n  const isRectangle = feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE);\n  if (isCircle === true || isCircle === 'true') {\n    features = this.circleFeatures_;\n  } else if (isRectangle === true || isRectangle === 'true') {\n    features = this.rectangleFeatures_;\n  } else {\n    features = this.otherFeatures_;\n  }\n  return features;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.Controller\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {ol.Collection.<ol.Feature>} ngeoFeatures Collection of features.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDrawfeatureController\n */\nconst exports = function($scope, $sce, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * Alternate collection of features in which to push the drawn features.\n   * If not defined, then `ngeoFeatures` is used instead.\n   * @type {!ol.Collection.<!ol.Feature>|undefined}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showMeasure;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n  // Fill the string collection\n  gettextCatalog.getString('Point');\n  gettextCatalog.getString('LineString');\n  gettextCatalog.getString('Polygon');\n  gettextCatalog.getString('Circle');\n  gettextCatalog.getString('Rectangle');\n  gettextCatalog.getString('Text');\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = ngeoFeatures;\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawPoint;\n\n  /**\n   * @type {ngeo.interaction.MeasureLength}\n   * @export\n   */\n  this.measureLength;\n\n  /**\n   * @type {ngeo.interaction.MeasureArea}\n   * @export\n   */\n  this.measureArea;\n\n  /**\n   * @type {ngeo.interaction.MeasureAzimut}\n   * @export\n   */\n  this.measureAzimut;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawRectangle;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawText;\n\n\n  // Watch the \"active\" property, and disable the draw interactions\n  // when \"active\" gets set to false.\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      if (newVal === false) {\n        this.interactions_.forEach((interaction) => {\n          interaction.setActive(false);\n        });\n      }\n    }\n  );\n\n};\n\n\n/**\n * Register a draw|measure interaction by setting it inactive, decorating it\n * and adding it to the map\n * @param {ol.interaction.Interaction} interaction Interaction to register.\n * @export\n */\nexports.prototype.registerInteraction = function(\n  interaction) {\n  this.interactions_.push(interaction);\n  interaction.setActive(false);\n  ngeoMiscDecorate.interaction(interaction);\n  this.map.addInteraction(interaction);\n};\n\n\n/**\n * Called when any of the draw or measure interaction active property changes.\n * Set the active property of this directive accordingly, i.e. if at least\n * one of the draw or measure is active then the active property is set to true.\n * @param {ol.Object.Event} event Event.\n * @export\n */\nexports.prototype.handleActiveChange = function(event) {\n  this.active = this.interactions_.some(interaction => interaction.getActive(), this);\n};\n\n\n/**\n * Called when a feature is finished being drawn. Set the default properties\n * for its style, then set its style and add it to the features collection.\n * @param {string} type Type of geometry being drawn.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.prototype.handleDrawEnd = function(type, event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  googAsserts.assert(sketch);\n\n  const azimut = sketch.get('azimut');\n\n  const features = this.features || this.ngeoFeatures_;\n\n  const feature = new olFeature(sketch.getGeometry());\n\n  const prop = ngeoFormatFeatureProperties;\n\n  switch (type) {\n    case ngeoGeometryType.CIRCLE:\n      feature.set(prop.IS_CIRCLE, true);\n      if (azimut !== undefined) {\n        feature.set(prop.AZIMUT, azimut);\n      }\n      break;\n    case ngeoGeometryType.TEXT:\n      feature.set(prop.IS_TEXT, true);\n      break;\n    case ngeoGeometryType.RECTANGLE:\n      feature.set(prop.IS_RECTANGLE, true);\n      break;\n    default:\n      break;\n  }\n\n  /**\n   * @type {string}\n   */\n  const name = this.gettextCatalog_.getString(type);\n  feature.set(prop.NAME, `${name} ${features.getLength() + 1}`);\n\n  /**\n   * @type {string}\n   */\n  const color = type !== ngeoGeometryType.TEXT ? '#DB4436' : '#000000';\n  feature.set(prop.COLOR, color);\n\n  feature.set(prop.ANGLE, 0);\n  feature.set(prop.OPACITY, 0.2);\n  feature.set(prop.SHOW_MEASURE, this.showMeasure ? true : false);\n  feature.set(prop.SHOW_LABEL, false);\n  feature.set(prop.SIZE, 10);\n  feature.set(prop.STROKE, 2);\n\n  // set style\n  this.featureHelper_.setStyle(feature);\n\n  // push in collection\n  features.push(feature);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDrawfeatureController', [\n  ngeoDrawFeatures.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\nexports.module.controller('ngeoDrawfeatureController', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.point\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawpoint', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawPoint = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawPoint);\n      drawFeatureCtrl.drawPoint = drawPoint;\n\n      olEvents.listen(\n        drawPoint,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POINT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawPoint,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawpoint', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.rectangle\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawrectangle', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawrectangle\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawRectangle = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n        geometryFunction: (coordinates, geometry) => {\n          if (!geometry) {\n            geometry = new olGeomPolygon(null);\n          }\n          const start = coordinates[0];\n          const end = coordinates[1];\n          geometry.setCoordinates([\n            [start, [start[0], end[1]], end, [end[0], start[1]], start]\n          ]);\n          return geometry;\n        },\n        maxPoints: 2\n      });\n\n      drawFeatureCtrl.registerInteraction(drawRectangle);\n      drawFeatureCtrl.drawRectangle = drawRectangle;\n\n      olEvents.listen(\n        drawRectangle,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.RECTANGLE),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawRectangle,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawrectangle', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.text\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawtext', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawtext\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawText = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawText);\n      drawFeatureCtrl.drawText = drawText;\n\n      olEvents.listen(\n        drawText,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.TEXT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawText,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawtext', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.area\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurearea', [\n  ngeoDrawController.module.name\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing polygon');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br>' +\n          'Double-click or click starting point to finish');\n\n      const measureArea = new ngeoInteractionMeasureArea($filter('ngeoUnitPrefix'), gettextCatalog, {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureArea);\n      drawFeatureCtrl.measureArea = measureArea;\n\n      olEvents.listen(\n        measureArea,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POLYGON),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureArea,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurearea', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.azimut\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport {fromCircle} from 'ol/geom/Polygon.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasureazimut', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing circle');\n      const contMsg = gettextCatalog.getString('Click to finish');\n\n      const measureAzimut = new ngeoInteractionMeasureAzimut(\n        $filter('ngeoUnitPrefix'), $filter('number'), {\n          style: new olStyleStyle(),\n          startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n          continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n          precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined,\n          decimals: $injector.has('ngeoMeasureDecimals') ? $injector.get('ngeoMeasureDecimals') : undefined\n        });\n\n      drawFeatureCtrl.registerInteraction(measureAzimut);\n      drawFeatureCtrl.measureAzimut = measureAzimut;\n\n      olEvents.listen(\n        measureAzimut,\n        'measureend',\n        /**\n         * @param {ngeox.MeasureEvent} event Event.\n         */\n        (event) => {\n          // In the case of azimut measure interaction, the feature's\n          // geometry is actually a collection (line + circle)\n          // For our purpose here, we only need the circle, which gets\n          // transformed into a polygon with 64 sides.\n          const geometry = /** @type {ol.geom.GeometryCollection} */\n                (event.detail.feature.getGeometry());\n          const circle = /** @type {ol.geom.Circle} */ (\n            geometry.getGeometries()[1]);\n          const polygon = fromCircle(circle, 64);\n          event.detail.feature = new olFeature(polygon);\n          const azimut = ngeoInteractionMeasureAzimut.getAzimut(\n            /** @type {ol.geom.LineString} */ (geometry.getGeometries()[0])\n          );\n          event.detail.feature.set('azimut', azimut);\n\n          drawFeatureCtrl.handleDrawEnd(ngeoGeometryType.CIRCLE, event);\n        },\n        drawFeatureCtrl\n      );\n\n      olEvents.listen(\n        measureAzimut,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasureazimut', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.length\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurelength', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing line');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br>' +\n          'Double-click or click last point to finish');\n\n      const measureLength = new ngeoInteractionMeasureLength($filter('ngeoUnitPrefix'), gettextCatalog, {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureLength);\n      drawFeatureCtrl.measureLength = measureLength;\n\n      olEvents.listen(\n        measureLength,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.LINE_STRING),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureLength,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurelength', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.component\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawPoint from 'ngeo/draw/point.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawRectangle from 'ngeo/draw/rectangle.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawText from 'ngeo/draw/text.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureArea from 'ngeo/measure/area.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureAzimut from 'ngeo/measure/azimut.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureLength from 'ngeo/measure/length.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawfeature', [\n  ngeoDrawController.module.name,\n  ngeoDrawPoint.name,\n  ngeoDrawRectangle.name,\n  ngeoDrawText.name,\n  ngeoMeasureArea.name,\n  ngeoMeasureAzimut.name,\n  ngeoMeasureLength.name,\n]);\n\n\n/**\n * Directive used to draw vector features on a map.\n * Example:\n *\n *     <ngeo-drawfeature\n *         ngeo-btn-group\n *         class=\"btn-group\"\n *         ngeo-drawfeature-active=\"ctrl.drawActive\"\n *         ngeo-drawfeature-map=\"::ctrl.map\">\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawpoint\n *         class=\"btn btn-default ngeo-drawfeature-point\"\n *         ng-class=\"{active: dfCtrl.drawPoint.active}\"\n *         ng-model=\"dfCtrl.drawPoint.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurelength\n *         class=\"btn btn-default ngeo-drawfeature-linestring\"\n *         ng-class=\"{active: dfCtrl.measureLength.active}\"\n *         ng-model=\"dfCtrl.measureLength.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurearea\n *         class=\"btn btn-default ngeo-drawfeature-polygon\"\n *         ng-class=\"{active: dfCtrl.measureArea.active}\"\n *         ng-model=\"dfCtrl.measureArea.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measureazimut\n *         class=\"btn btn-default ngeo-drawfeature-circle\"\n *         ng-class=\"{active: dfCtrl.measureAzimut.active}\"\n *         ng-model=\"dfCtrl.measureAzimut.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawrectangle\n *         class=\"btn btn-default ngeo-drawfeature-rectangle\"\n *         ng-class=\"{active: dfCtrl.drawRectangle.active}\"\n *         ng-model=\"dfCtrl.drawRectangle.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawtext\n *         class=\"btn btn-default ngeo-drawfeature-text\"\n *         ng-class=\"{active: dfCtrl.drawText.active}\"\n *         ng-model=\"dfCtrl.drawText.active\"></a>\n *     </ngeo-drawfeature>\n *\n * @htmlAttribute {boolean} ngeo-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {!ol.Collection=} ngeo-drawfeature-features The features\n *     collection in which to push the drawn features. If none is provided,\n *     then the `ngeoFeatures` collection is used.\n * @htmlAttribute {ol.Map} ngeo-drawfeature-map The map.\n * @htmlAttribute {boolean} ngeo-drawfeature-showmeasure. Checks the\n *      checkbox in order to display the feature measurements as a label.\n *      Default to false.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawfeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoDrawfeatureController as dfCtrl',\n    scope: true,\n    bindToController: {\n      'active': '=ngeoDrawfeatureActive',\n      'features': '=?ngeoDrawfeatureFeatures',\n      'map': '=ngeoDrawfeatureMap',\n      'showMeasure': '=?ngeoDrawfeatureShowmeasure'\n    }\n  };\n};\n\nexports.directive('ngeoDrawfeature', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.createfeatureComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nconst exports = angular.module('ngeoCreatefeature', [\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * A directive used to draw vector features of a single geometry type using\n * either a 'draw' or 'measure' interaction. Once a feature is finished being\n * drawn, it is added to a collection of features.\n *\n * The geometry types supported are:\n *  - Point\n *  - LineString\n *  - Polygon\n *\n * Example:\n *\n *     <a\n *       href\n *       translate\n *       ngeo-btn\n *       ngeo-createfeature\n *       ngeo-createfeature-active=\"ctrl.createPointActive\"\n *       ngeo-createfeature-features=\"ctrl.features\"\n *       ngeo-createfeature-geom-type=\"ctrl.pointGeomType\"\n *       ngeo-createfeature-map=\"::ctrl.map\"\n *       class=\"btn btn-default ngeo-createfeature-point\"\n *       ng-class=\"{active: ctrl.createPointActive}\"\n *       ng-model=\"ctrl.createPointActive\">\n *     </a>\n *\n * @htmlAttribute {boolean} ngeo-createfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {ol.Collection} ngeo-createfeature-features The collection of\n *     features where to add those created by this directive.\n * @htmlAttribute {string} ngeo-createfeature-geom-type Determines the type\n *     of geometry this directive should draw.\n * @htmlAttribute {ol.Map} ngeo-createfeature-map The map.\n *\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname ngeoCreatefeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoCreatefeatureController',\n    bindToController: true,\n    scope: {\n      'active': '=ngeoCreatefeatureActive',\n      'features': '=ngeoCreatefeatureFeatures',\n      'geomType': '=ngeoCreatefeatureGeomType',\n      'map': '=ngeoCreatefeatureMap'\n    }\n  };\n};\n\nexports.directive('ngeoCreatefeature', exports.directive_);\n\n\n/**\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.Scope} $scope Scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoCreatefeatureController\n */\nexports.Controller_ = function(gettextCatalog, $compile, $filter, $scope,\n  $timeout, ngeoEventHelper) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {ol.Collection.<!ol.Feature>|!ol.source.Vector}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {!angular.$compile}\n   * @private\n   */\n  this.compile_ = $compile;\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.filter_ = $filter;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * The draw or measure interaction responsible of drawing the vector feature.\n   * The actual type depends on the geometry type.\n   * @type {ol.interaction.Interaction}\n   * @private\n   */\n  this.interaction_;\n\n\n  // == Event listeners ==\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      this.interaction_.setActive(newVal);\n    }\n  );\n};\n\n\n/**\n * Initialize the directive.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.active = this.active === true;\n  const gettextCatalog = this.gettextCatalog_;\n\n  // Create the draw or measure interaction depending on the geometry type\n  let interaction;\n  if (this.geomType === ngeoGeometryType.POINT ||\n      this.geomType === ngeoGeometryType.MULTI_POINT\n  ) {\n    interaction = new olInteractionDraw({\n      type: /** @type {ol.geom.GeometryType} */ ('Point')\n    });\n  } else if (this.geomType === ngeoGeometryType.LINE_STRING ||\n      this.geomType === ngeoGeometryType.MULTI_LINE_STRING\n  ) {\n    const helpMsg = gettextCatalog.getString('Click to start drawing length');\n    const contMsg = gettextCatalog.getString(\n      'Click to continue drawing<br/>' +\n      'Double-click or click last point to finish'\n    );\n\n    interaction = new ngeoInteractionMeasureLength(\n      this.filter_('ngeoUnitPrefix'),\n      gettextCatalog,\n      {\n        style: new olStyleStyle(),\n        startMsg: this.compile_(`<div translate>${helpMsg}</div>`)(this.scope_)[0],\n        continueMsg: this.compile_(`<div translate>${contMsg}</div>`)(this.scope_)[0]\n      }\n    );\n  } else if (this.geomType === ngeoGeometryType.POLYGON ||\n      this.geomType === ngeoGeometryType.MULTI_POLYGON\n  ) {\n    const helpMsg = gettextCatalog.getString('Click to start drawing area');\n    const contMsg = gettextCatalog.getString(\n      'Click to continue drawing<br/>' +\n      'Double-click or click starting point to finish'\n    );\n\n    interaction = new ngeoInteractionMeasureArea(\n      this.filter_('ngeoUnitPrefix'),\n      gettextCatalog,\n      {\n        style: new olStyleStyle(),\n        startMsg: this.compile_(`<div translate>${helpMsg}</div>`)(this.scope_)[0],\n        continueMsg: this.compile_(`<div translate>${contMsg}</div>`)(this.scope_)[0]\n      }\n    );\n  }\n\n  googAsserts.assert(interaction);\n\n  interaction.setActive(this.active);\n  this.interaction_ = interaction;\n  this.map.addInteraction(interaction);\n\n  const uid = olBase.getUid(this);\n  if (interaction instanceof olInteractionDraw) {\n    this.ngeoEventHelper_.addListenerKey(\n      uid,\n      olEvents.listen(\n        interaction,\n        'drawend',\n        this.handleDrawEnd_,\n        this\n      )\n    );\n  } else if (interaction instanceof ngeoInteractionMeasureLength ||\n     interaction instanceof ngeoInteractionMeasureArea) {\n    this.ngeoEventHelper_.addListenerKey(\n      uid,\n      olEvents.listen(\n        interaction,\n        'measureend',\n        this.handleDrawEnd_,\n        this\n      )\n    );\n  }\n};\n\n\n/**\n * Called when a feature is finished being drawn. Add the feature to the\n * collection.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.Controller_.prototype.handleDrawEnd_ = function(event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  googAsserts.assert(sketch);\n\n  // convert to multi if geomType is multi and feature is not\n  let geometry = sketch.getGeometry();\n  const type = geometry.getType();\n  if (this.geomType.indexOf('Multi') != type.indexOf('Multi')) {\n    geometry = ngeoUtils.toMulti(geometry);\n  }\n  const feature = new olFeature(geometry);\n  if (this.features instanceof olCollection) {\n    this.features.push(feature);\n  } else {\n    this.features.addFeature(feature);\n  }\n};\n\n\n/**\n * Cleanup event listeners and remove the interaction from the map.\n */\nexports.Controller_.prototype.$onDestroy = function() {\n  this.timeout_(() => {\n    const uid = olBase.getUid(this);\n    this.ngeoEventHelper_.clearListenerKey(uid);\n    this.interaction_.setActive(false);\n    this.map.removeInteraction(this.interaction_);\n  }, 0);\n};\n\nexports.controller('ngeoCreatefeatureController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.XSDAttributes\n */\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\n\n/**\n * An service used to fetch the XSD attribute definition of layers using their\n * id from a GeoMapFish server.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n * @ngInject\n */\nconst exports = function($http, gmfLayersUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = gmfLayersUrl;\n\n  /**\n   * @type {Object.<number, !angular.$q.Promise>}\n   * @private\n   */\n  this.promises_ = {};\n\n};\n\n\n/**\n * @param {number} id Layer id.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getAttributes = function(id) {\n  if (!this.promises_[id]) {\n    const url = `${this.baseUrl_}/${id}/md.xsd`;\n    this.promises_[id] = this.http_.get(url).then(\n      this.handleGetAttributes_.bind(this));\n  }\n  return this.promises_[id];\n};\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @export\n */\nexports.prototype.handleGetAttributes_ = function(resp) {\n  return new ngeoFormatXSDAttribute().read(resp.data);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfXSDAttributes', []);\nexports.module.service('gmfXSDAttributes', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.raster.RasterService\n */\n/**\n * The Raster service.\n * Uses the c2cgeoportal's raster to obtain different kinds of\n * information at a specific coordinate.\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfRasterUrl URL to a the c2cgeoportal raster service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfRaster\n */\nconst exports = function($http, gmfRasterUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = gmfRasterUrl;\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Object=} opt_params Optional parameters for the request.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getRaster = function(coordinate, opt_params) {\n\n  const params = opt_params || {};\n  params[exports.Param.X] = coordinate[0];\n  params[exports.Param.Y] = coordinate[1];\n\n  return this.$http_.get(this.url_, {\n    params\n  }).then(this.handleGetRaster_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Object.<string, number>} The response object.\n * @private\n */\nexports.prototype.handleGetRaster_ = function(resp) {\n  return resp.data;\n};\n\n\n/**\n * @enum {string}\n */\nexports.Param = {\n  X: 'lon',\n  Y: 'lat'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfRaster', []);\nexports.module.service('gmfRaster', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.somerc\n */\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\n\nproj4.Proj.projections.add(somerc);\nconst exports = 'somerc';\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.colorpickerComponent\n */\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoColorpicker', []);\n\n\nexports.value('ngeoColorpickerTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoColorpickerTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/misc/colorpickerComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/misc/colorpickerComponent', require('./colorpickerComponent.html'));\n});\n\n\n/**\n * Provides the \"ngeoColorpicker\" directive, a widget for\n * selecting a color among predefined ones.\n *\n * Example:\n *\n *     <div ngeo-colorpicker=\"ctrl.colors\">\n *     </div>\n *\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoColorpickerTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoColorpicker\n */\nexports.component_ = function(ngeoColorpickerTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: {\n      colors: '<?ngeoColorpicker',\n      color: '=?ngeoColorpickerColor'\n    },\n    controller: 'NgeoColorpickerController as ctrl',\n    bindToController: true,\n    templateUrl: ngeoColorpickerTemplateUrl\n  };\n};\n\nexports.directive('ngeoColorpicker',\n  exports.component_);\n\n/**\n * Fefault colors for the colorpicker\n * @type {Array.<Array.<string>>}\n * @const\n * @export\n */\nexports.DEFAULT_COLORS = [\n  ['#F4EB37', '#CDDC39', '#62AF44', '#009D57', '#0BA9CC', '#4186F0', '#3F5BA9', '#7C3592', '#A61B4A', '#DB4436', '#F8971B', '#F4B400', '#795046'],\n  ['#F9F7A6', '#E6EEA3', '#B7DBAB', '#7CCFA9', '#93D7E8', '#9FC3FF', '#A7B5D7', '#C6A4CF', '#D698AD', '#EE9C96', '#FAD199', '#FFDD5E', '#B29189'],\n  ['#ffffff', '#CCCCCC', '#777', '#000000']\n];\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.Controller_ = function($scope, $element, $attrs) {\n\n  /**\n   * The set of color\n   * @type {Array.<Array.<string>>}\n   * @export\n   */\n  this.colors = this.colors || exports.DEFAULT_COLORS;\n\n  /**\n   * The selected color\n   * @type {undefined|string}\n   * @export\n   */\n  this.color;\n};\n\n/**\n * @param {string} color The color to select.\n * @export\n */\nexports.Controller_.prototype.setColor = function(color) {\n  this.color = color;\n};\n\nexports.controller('NgeoColorpickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.AutoProjection\n */\nimport * as olProj from 'ol/proj.js';\nimport * as olExtent from 'ol/extent.js';\n\n/**\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoAutoProjection\n */\nconst exports = function() {};\n\n\n/**\n * Parse a string and return a coordinate if the result is valid. Given string\n * must be a two numbers separated by a space.\n * @param {string} str the string to parse.\n * @return {?ol.Coordinate} A coordinate or null if the format is not valid.\n * @export\n */\nexports.prototype.stringToCoordinates = function(str) {\n  const coords = str.match(/([\\d\\.']+)[\\s,]+([\\d\\.']+)/);\n  if (coords) {\n    const x = parseFloat(coords[1].replace('\\'', ''));\n    const y = parseFloat(coords[2].replace('\\'', ''));\n    if (!isNaN(x) && !isNaN(y)) {\n      return [x, y];\n    }\n  }\n  return null;\n};\n\n\n/**\n * Get an array of projections corresponding to their EPSG codes. Log an error\n *     for each code that are not defined in ol projections.\n * @param {Array.<string>} projectionsCodes EPSG codes (e.g. 'EPSG:3857',\n *     'epsg:3857' or '3857').\n * @return {Array.<ol.proj.Projection>} An array of projections.\n * @export\n */\nexports.prototype.getProjectionList = function(projectionsCodes) {\n  let code, proj;\n  const projections = [];\n  projectionsCodes.forEach((projection) => {\n    code = projection.toUpperCase();\n    if (code.substr(0, 5) != 'EPSG:') {\n      code = `EPSG:${code}`;\n    }\n    proj = olProj.get(code);\n    if (proj !== null) {\n      projections.push(proj);\n    } else {\n      console.error(`The projection ${code} is not defined in ol.proj.`);\n    }\n  });\n  return projections;\n};\n\n\n/**\n * It projects the point using the projection array and finds the first one for\n * which it falls inside of the viewProjection extent.\n * @param {ol.Coordinate} coordinates The point to test.\n * @param {ol.Extent} extent Limits in which coordinates can be valid.\n * @param {ol.proj.Projection} viewProjection Target projection the point.\n * @param {Array.<ol.proj.Projection>=} opt_projections optional array of\n *     projections. The point is tested in each projection, in the order of\n *     the array.\n * @return {?ol.Coordinate} A coordinates in the view's projection if it matches\n *     in one of the given projections, or null else.\n * @export\n */\nexports.prototype.tryProjections = function(coordinates,\n  extent, viewProjection, opt_projections) {\n  let position;\n  if (opt_projections === undefined) {\n    opt_projections = [viewProjection];\n  }\n  opt_projections.some((projection) => {\n    try {\n      position = olProj.transform(coordinates, projection, viewProjection);\n      if (olExtent.containsCoordinate(extent, position)) {\n        return true;\n      }\n    } catch (e) {\n      // Wrong coordinate leads to a transform error and ol throw an exception that we won't log.\n    }\n    position = null;\n  });\n  return position;\n};\n\n\n/**\n * Same as AutoProjection.tryProjections but if tryProjections return null,\n * re-call it with coordinates in reverse order.\n * @param {ol.Coordinate} coordinates The point to test.\n * @param {ol.Extent} extent Limits in which coordinates can be valid.\n * @param {ol.proj.Projection} viewProjection Target projection the point.\n * @param {Array.<ol.proj.Projection>=} opt_projections optional array of\n *     projections. The point is tested in each projection, in the order of\n *     the array.\n * @return {?ol.Coordinate} A coordinates in the view's projection if it matches\n *     in one of the given projections, or null else.\n * @export\n */\nexports.prototype.tryProjectionsWithInversion = function(\n  coordinates, extent, viewProjection, opt_projections) {\n  let position = this.tryProjections(coordinates, extent, viewProjection,\n    opt_projections);\n  if (position === null) {\n    position = this.tryProjections(coordinates.reverse(), extent,\n      viewProjection, opt_projections);\n  }\n  return position;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoAutoProjection', []);\nexports.module.service('ngeoAutoProjection', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.search.FulltextSearch\n */\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides the c2c-geoportal full-text search.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngInject\n * @export\n * @ngname gmfFulltextSearch\n */\nconst exports = function($injector, $http) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = /** @type {string} **/ ($injector.get('fulltextsearchUrl'));\n\n  const url = this.url_.split('?');\n  /**\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = url[0];\n\n  const queryString = (url.length == 2) ? `?${url[1]}` : '';\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  this.defaultParams_ = ngeoUtils.decodeQueryString(queryString);\n};\n\n/**\n * Perform a search query on the c2c-geoportal full-text search.\n * @param {string} query Search query.\n * @param {Object.<string, string>} params Additional parameters.\n * @returns {Promise} Request promise with data array.\n */\nexports.prototype.search = function(query, params) {\n  const queryParams = Object.assign({}, this.defaultParams_, params);\n\n  queryParams['query'] = query;\n\n  const url = `${this.baseUrl_}?${ngeoUtils.encodeQueryString(queryParams)}`;\n\n  return new Promise((resolve, reject) => {\n    this.$http_.get(url)\n      .then(resp => resolve(resp['data']))\n      .catch(reject);\n  });\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSearchFulltextSearch', []);\nexports.module.service('gmfSearchFulltextSearch', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.download.Csv\n */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\n/**\n * Service to generate and download a CSV file from tabular data.\n * Column headers are translated using {@link angularGettext.Catalog}.\n *\n * @param {angular.$injector} $injector Main injector.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoCsvDownload\n * @ngInject\n */\nconst exports = function($injector, gettextCatalog) {\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * File extension of the CSV file.\n   * @type {string}\n   * @private\n   */\n  this.encoding_ = $injector.has('ngeoCsvEncoding') ?\n    $injector.get('ngeoCsvEncoding') : 'utf-8';\n\n  /**\n   * File extension of the CSV file.\n   * @type {string}\n   * @private\n   */\n  this.extension_ = $injector.has('ngeoCsvExtension') ?\n    $injector.get('ngeoCsvExtension') : '.csv';\n\n  /**\n   * Whether to include the header in the exported file or not.\n   * @type {boolean}\n   * @private\n   */\n  this.includeHeader_ = $injector.has('ngeoCsvIncludeHeader') ?\n    $injector.get('ngeoCsvIncludeHeader') : true;\n\n  /**\n   * Quote character.\n   * @type {string}\n   * @private\n   */\n  this.quote_ = $injector.has('ngeoCsvQuote') ?\n    $injector.get('ngeoCsvQuote') : '\"';\n\n  /**\n   * Separator character.\n   * @type {string}\n   * @private\n   */\n  this.separator_ = $injector.has('ngeoCsvSeparator') ?\n    $injector.get('ngeoCsvSeparator') : ',';\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n};\n\n\n/**\n * Generate a CSV.\n *\n * @param {Array.<Object>} data Entries/objects to include in the CSV.\n * @param {Array.<ngeox.GridColumnDef>} columnDefs Column definitions.\n * @return {string} The CSV file as string.\n * @export\n */\nexports.prototype.generateCsv = function(data, columnDefs) {\n  if (data.length == 0 || columnDefs.length == 0) {\n    return '';\n  }\n\n  const translatedColumnHeaders = columnDefs.map(columnHeader => this.gettextCatalog_.getString(columnHeader.name));\n\n  const header = this.getRow_(translatedColumnHeaders);\n  const dataRows = data.map((values) => {\n    const rowValues = columnDefs.map(columnHeader => values[columnHeader.name]);\n    return this.getRow_(rowValues);\n  });\n\n  return this.includeHeader_ ? header + dataRows.join('') : dataRows.join('');\n};\n\n\n/**\n * @param {Array.<?>} values Values.\n * @return {string} CSV row.\n * @private\n */\nexports.prototype.getRow_ = function(values) {\n  const matchAllQuotesRegex = new RegExp(this.quote_, 'g');\n  const doubleQuote = this.quote_ + this.quote_;\n\n  const rowValues = values.map((value) => {\n    if (value !== undefined && value !== null) {\n      value = `${value}`;\n      // wrap each value into quotes and escape quotes with double quotes\n      return this.quote_ + value.replace(matchAllQuotesRegex, doubleQuote) + this.quote_;\n    } else {\n      return '';\n    }\n  });\n\n  return `${rowValues.join(this.separator_)}\\n`;\n};\n\n\n/**\n * Generate a CSV and start a download with the generated file.\n *\n * @param {Array.<Object>} data Entries/objects to include in the CSV.\n * @param {Array.<ngeox.GridColumnDef>} columnDefs Column definitions.\n * @param {string} fileName The CSV file name, without the extension.\n * @export\n */\nexports.prototype.startDownload = function(data, columnDefs, fileName) {\n  const fileContent = this.generateCsv(data, columnDefs);\n  this.download_(\n    fileContent, fileName, `text/csv;charset=${this.encoding_}`);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoCsvDownload', [\n  ngeoDownloadService.name\n]);\nexports.module.service('ngeoCsvDownload', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.resizemap\n */\nimport googAsserts from 'goog/asserts.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.shareComponent\n */\nimport gmfPermalinkShareService from 'gmf/permalink/ShareService.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\nconst exports = angular.module('gmfPermalinkShareComponent', [\n  gmfPermalinkShareService.module.name,\n  ngeoStatemanagerLocation.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/permalink/shareComponent', require('./shareComponent.html'));\n});\n\n\nexports.value('gmfPermalinkShareTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfPermalinkShareTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/permalink/shareComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfPermalinkShareTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfPermalinkShareTemplateUrl($attrs, gmfPermalinkShareTemplateUrl) {\n  return gmfPermalinkShareTemplateUrl($attrs);\n}\n\n\n/**\n * Component to display a shortened permalink and share it by email\n * Example:\n *\n *      <gmf-share\n *        gmf-share-email=\"true\">\n *      </gmf-share>\n *\n * @htmlAttribute {boolean} gmf-share-email Enable emailing capability.\n * @type {!angular.Component}\n */\nexports.component_ = {\n  bindings: {\n    'enableEmail': '<gmfShareEmail'\n  },\n  controller: 'GmfShareController',\n  templateUrl: gmfPermalinkShareTemplateUrl\n};\nexports.component('gmfShare', exports.component_);\n\n\nclass ShareComponentController {\n  /**\n   * The controller for the share component\n   * @param {angular.Scope} $scope Scope.\n   * @param {ngeo.statemanager.Location} ngeoLocation ngeo Location service.\n   * @param {gmf.permalink.ShareService} gmfShareService service for sharing map.\n   * @param {angular.$q} $q Angular q service\n   * @param {angular.Attributes} $attrs Attributes.\n   * @constructor\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfShareController\n   */\n  constructor($scope, ngeoLocation, gmfShareService, $q, $attrs) {\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @type {gmf.permalink.ShareService}\n     * @private\n     */\n    this.gmfShareService_ = gmfShareService;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.$q_ = $q;\n\n    /**\n     * @type {ngeo.statemanager.Location}\n     * @private\n     */\n    this.ngeoLocation_ = ngeoLocation;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.enableEmail;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.shortLink;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.email;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.message;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.permalink_ = this.ngeoLocation_.getUriString();\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.showLengthWarning = this.permalink_.length > gmfPermalinkShareService.URL_MAX_LEN ||\n    ngeoLocation.getPath() > gmfPermalinkShareService.URL_PATH_MAX_LEN;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.successfullySent = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.errorOnsend = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.errorOnGetShortUrl = false;\n\n    this.getShortUrl();\n  }\n\n  /**\n   * Get the short version of the permalink if the email is not provided\n   * @export\n   */\n  getShortUrl() {\n    this.$q_.when(this.gmfShareService_.getShortUrl(this.permalink_))\n      .then((resp) => {\n        this.shortLink = resp.data.short_url;\n        this.errorOnGetShortUrl = false;\n      }, (resp) => {\n        this.shortLink = this.permalink;\n        this.errorOnGetShortUrl = true;\n      });\n  }\n\n  /**\n   * Send the short version of the permalink if the email is provided\n   * @export\n   */\n  sendShortUrl() {\n    if (this.$scope_['gmfShareForm'].$valid) {\n      this.$q_.when(this.gmfShareService_.sendShortUrl(this.permalink_, this.email, this.message))\n        .then((resp) => {\n          this.successfullySent = true;\n        }, (resp) => {\n          this.errorOnsend = true;\n        });\n    }\n  }\n}\n\nexports.controller('GmfShareController', ShareComponentController);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.datasourceGroupTreeComponent\n */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeDatasourceGroupTreeComponent', [\n  ngeoDatasourceDataSources.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree/datasourceGroupTreeComponent', require('./datasourceGroupTreeComponent.html'));\n});\n\n\nexports.value('gmfLayertreeDatasourceGroupTreeTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfLayertreeDatasourceGroupTreeTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/layertree/datasourceGroupTreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfLayertreeDatasourceGroupTreeTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfLayertreeDatasourceGroupTreeTemplateUrl($attrs, gmfLayertreeDatasourceGroupTreeTemplateUrl) {\n  return gmfLayertreeDatasourceGroupTreeTemplateUrl($attrs);\n}\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources\n   *     service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfDatasourcegrouptreeController\n   */\n  constructor($scope, ngeoDataSources) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.datasource.Group}\n     * @export\n     */\n    this.group;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n  }\n\n  /**\n   * @return {string} Group uid.\n   * @export\n   */\n  getGroupUid() {\n    return `datasourcegrouptree-${olBase.getUid(this.group)}`;\n  }\n\n  /**\n   * Toggle visibility of the group itself, i.e. its visibility state.\n   * @export\n   */\n  toggle() {\n    this.group.toggleVisibilityState();\n  }\n\n  /**\n   * Toggle visible property of a data source.\n   * @param {ngeo.datasource.DataSource} dataSource Data source to toggle the\n   * visibility\n   * @export\n   */\n  toggleDataSource(dataSource) {\n    dataSource.visible = !dataSource.visible;\n  }\n\n  /**\n   * Remove all data sources from the `ngeo.datasource.DataSources` collection, which\n   * will automatically remove them from the Group. The group itself\n   * is going to be removed as well, destroying this component in the process.\n   * @export\n   */\n  remove() {\n    for (let i = this.group.dataSources.length - 1, ii = 0; i >= ii; i--) {\n      this.dataSources_.remove(this.group.dataSources[i]);\n    }\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove from\n   *     the `ngeo.DataSources` collection.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSources_.remove(dataSource);\n  }\n};\n\n\nexports.component('gmfDatasourcegrouptree', {\n  bindings: {\n    'group': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfLayertreeDatasourceGroupTreeTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach((feature) => {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    });\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach((feature) => {\n        this.featureHelper_.setStyle(feature);\n      });\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return decodeURI(pathElements[pathElements.length - 1]);\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoDrawFeatures.name,\n  ngeoLayertreeController.module.name,\n  ngeoMiscDebounce.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoStatemanagerModule.name,\n]);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoStatemanagerService.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.datepickerComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\n\nimport 'angular-ui-date';\nimport 'jquery-ui/themes/base/all.css';\n\n// FIXME: import the locales in the applications\nimport 'jquery-ui/ui/i18n/datepicker-fr.js';\nimport 'jquery-ui/ui/i18n/datepicker-en-GB.js';\nimport 'jquery-ui/ui/i18n/datepicker-de.js';\nimport 'jquery-ui/ui/i18n/datepicker-it.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDatePicker', [\n  ngeoMiscTime.module.name,\n  'ui.date',\n]);\n\n\nexports.value('ngeoDatePickerTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoDatePickerTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/misc/datepickerComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/misc/datepickerComponent', require('./datepickerComponent.html'));\n});\n\n\n/**\n * Provide a directive to select a single date or a range of dates. Requires\n * jQuery UI for the 'datepicker' widget.\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n * ngeoDatePickerTemplateUrl Template for the directive.\n * @param  {angular.$timeout} $timeout angular timeout service\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDatePicker\n */\nexports.component_ = function(ngeoDatePickerTemplateUrl,  $timeout) {\n  return {\n    scope: {\n      onDateSelected: '&',\n      time: '='\n    },\n    bindToController: true,\n    controller: 'ngeoDatePickerController as datepickerCtrl',\n    restrict: 'AE',\n    templateUrl: ngeoDatePickerTemplateUrl,\n    link: (scope, element, attrs, ctrl) => {\n      ctrl.init();\n\n      const lang =  ctrl.gettextCatalog_.getCurrentLanguage();\n      $['datepicker']['setDefaults']($['datepicker']['regional'][lang]);\n\n      ctrl.sdateOptions = angular.extend({}, ctrl.sdateOptions, {\n        'minDate': ctrl.initialMinDate,\n        'maxDate': ctrl.initialMaxDate,\n        'onClose': (selectedDate) => {\n          if (selectedDate) {\n            $(element[0]).find('input[name=\"edate\"]').datepicker('option', 'minDate', selectedDate);\n          }\n        }\n      });\n\n      ctrl.edateOptions = angular.extend({}, ctrl.edateOptions, {\n        'minDate': ctrl.initialMinDate,\n        'maxDate': ctrl.initialMaxDate,\n        'onClose': (selectedDate) => {\n          if (selectedDate) {\n            $(element[0]).find('input[name=\"sdate\"]').datepicker('option', 'maxDate', selectedDate);\n          }\n        }\n      });\n\n      angular.element('body').on('hidden.bs.popover', () => {\n        const dp = angular.element('#ui-datepicker-div');\n        if (dp && dp.css('display') === 'block') {\n          $(element[0]).find('input[name$=\"date\"]').datepicker('hide');\n        }\n      });\n\n      $timeout(() => {\n        angular.element('#ui-datepicker-div').on('mousedown', (e) => {\n          e.stopPropagation();\n        });\n      });\n    }\n  };\n};\n\nexports.directive('ngeoDatePicker', exports.component_);\n\n\n/**\n * DatePickerController - directive conttroller\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$injector} $injector injector.\n * @param {!ngeo.misc.Time} ngeoTime time service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDatePickerController\n */\nexports.Controller_ = function($scope, $injector,\n  ngeoTime, gettextCatalog) {\n\n  /**\n   * @type {!ngeo.misc.Time}\n   * @private\n   */\n  this.ngeoTime_ = ngeoTime;\n\n  /**\n   * @type {!ngeox.TimeProperty}\n   * @export\n   */\n  this.time;\n\n  /**\n   * The gettext catalog\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n\n  /**\n   * If the component is used to select a date range\n   * @type {boolean}\n   * @export\n   */\n  this.isModeRange;\n\n\n  /**\n   * Function called after date(s) changed/selected\n   * @type {function({time: {start: number, end: number}})}\n   * @export\n   */\n  this.onDateSelected;\n\n\n  /**\n   * Initial min date for the datepicker\n   * @type {!Date}\n   */\n  this.initialMinDate;\n\n  /**\n   * Initial max date for the datepickeronDateSelected\n   * @type {!Date}\n   */\n  this.initialMaxDate;\n\n  /**\n   * Datepicker options for the second datepicker (only for range mode)\n   * @type {Object}\n   * @export\n   */\n  this.edateOptions = {\n    'changeMonth': true,\n    'changeYear': true\n  };\n\n  /**\n   * Datepicker options for the first datepicker\n   * @type {Object}\n   * @export\n   */\n  this.sdateOptions = {\n    'changeMonth': true,\n    'changeYear': true\n  };\n\n  /**\n   * Start date model for the first date picker\n   * @type {Date}\n   * @export\n   */\n  this.sdate;\n\n  /**\n   * End date model for the second datepicker (only for range mode)\n   * @type {Date}\n   * @export\n   */\n  this.edate;\n\n  $scope.$watchGroup(['datepickerCtrl.sdate', 'datepickerCtrl.edate'], (newDates, oldDates) => {\n    const sDate = newDates[0];\n    const eDate = newDates[1];\n\n    if (angular.isDate(sDate) && (!this.isModeRange || angular.isDate(eDate))) {\n      this.onDateSelected({\n        time: {\n          start: this.ngeoTime_.getTime(sDate),\n          end: this.ngeoTime_.getTime(eDate)\n        }\n      });\n    }\n  });\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  //fetch the initial options for the component\n  const initialOptions_ = this.ngeoTime_.getOptions(this.time);\n  this.initialMinDate = this.ngeoTime_.createDate(initialOptions_.minDate);\n  this.initialMaxDate = this.ngeoTime_.createDate(initialOptions_.maxDate);\n  this.isModeRange = this.time.mode === 'range';\n\n  if (this.isModeRange) {\n    googAsserts.assertArray(initialOptions_.values);\n    this.sdate = this.ngeoTime_.createDate(initialOptions_.values[0]);\n    this.edate = this.ngeoTime_.createDate(initialOptions_.values[1]);\n  } else {\n    googAsserts.assertNumber(initialOptions_.values);\n    this.sdate = this.ngeoTime_.createDate(initialOptions_.values);\n  }\n};\n\nexports.controller('ngeoDatePickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.Attribute\n */\nconst exports = {};\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\n\n\n/**\n * Set the `type` and `geomType` properties of an attribute if the given\n * type is a geometry one.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type Type.\n * @return {boolean} Whether both attribute type and geomType were set.\n */\nexports.setGeometryType = function(attribute, type) {\n  const geomRegex =\n    /gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/;\n  if (geomRegex.exec(type)) {\n    attribute.type = ngeoFormatAttributeType.GEOMETRY;\n    if (/^gml:Point/.exec(type)) {\n      attribute.geomType = 'Point';\n    } else if (/^gml:LineString|^gml:Curve/.exec(type)) {\n      attribute.geomType = 'LineString';\n    } else if (/^gml:Polygon|^gml:Surface/.exec(type)) {\n      attribute.geomType = 'Polygon';\n    } else if (/^gml:MultiPoint/.exec(type)) {\n      attribute.geomType = 'MultiPoint';\n    } else if (/^gml:MultiLineString|^gml:MultiCurve/.exec(type)) {\n      attribute.geomType = 'MultiLineString';\n    } else if (/^gml:MultiPolygon|^gml:MultiSurface/.exec(type)) {\n      attribute.geomType = 'MultiPolygon';\n    }\n  }\n  return !!attribute.type && !!attribute.geomType;\n};\n\n\nexport default exports;\n","/**\n * @module gmf.editing.EnumerateAttribute\n */\nconst exports = class {\n\n  /**\n   * The EnumerateAttribute is responsible of fetching all possible of a given\n   * attribute of a given data source (gmf layer).\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfEnumerateAttribute\n   */\n  constructor($http, gmfLayersUrl) {\n\n    // === Injected services ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.baseUrl_ = gmfLayersUrl;\n\n    /**\n     * @type {Object.<string, !angular.$q.Promise>}\n     * @private\n     */\n    this.promises_ = {};\n  }\n\n  /**\n   * @param {gmf.datasource.OGC} dataSource Data source.\n   * @param {string} attribute Attribute name.\n   * @return {angular.$q.Promise} Promise.\n   */\n  getAttributeValues(dataSource, attribute) {\n    const promiseId = `${dataSource.id}_${attribute}`;\n    const name = dataSource.name;\n    if (!this.promises_[promiseId]) {\n      const url = `${this.baseUrl_}/${name}/values/${attribute}`;\n      this.promises_[promiseId] = this.http_.get(url).then(\n        this.handleGetAttributeValues_.bind(this));\n    }\n    return this.promises_[promiseId];\n  }\n\n  /**\n   * @param {angular.$http.Response} resp Ajax response.\n   * @return {Array.<gmfThemes.GmfLayerAttributeValue>} List of the attribute\n   *     values.\n   * @export\n   */\n  handleGetAttributeValues_(resp) {\n    const data = /** @type {gmfThemes.GmfLayerAttributeValuesResponse} */ (\n      resp.data);\n    return data.items;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfEnumerateAttribute', []);\nexports.module.service('gmfEnumerateAttribute', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.File\n */\n/**\n * @constructor\n * @param {angular.$q} $q .\n * @param {angular.$http} $http .\n * @param {gettext} gettext .\n * @ngInject\n */\nconst exports = function($q, $http, gettext) {\n  let fileReader, canceler;\n\n  // Test the validity of the file size\n  this.isValidFileSize = function(fileSize) {\n    return !(fileSize > 20000000); // 20 Mo\n  };\n\n  this.isWmsGetCap = function(fileContent) {\n    return /<(WMT_MS_Capabilities|WMS_Capabilities)/.test(fileContent);\n  };\n\n  this.isWmtsGetCap = function(fileContent) {\n    return /<Capabilities/.test(fileContent);\n  };\n\n  this.isKml = function(fileContent) {\n    return /<kml/.test(fileContent) && /<\\/kml>/.test(fileContent);\n  };\n\n  this.isGpx = function(fileContent) {\n    return /<gpx/.test(fileContent) && /<\\/gpx>/.test(fileContent);\n  };\n\n  /**\n   * @param {!Blob} file .\n   * @return {angular.$q.Promise<string>} .\n   */\n  this.read = function(file) {\n    const defer = $q.defer();\n    if (fileReader && fileReader.readyState === FileReader.LOADING) {\n      fileReader.abort();\n    }\n    fileReader = new FileReader();\n    fileReader.onload = function(evt) {\n      defer.resolve(evt.target.result);\n    };\n    fileReader.onerror = function(evt) {\n      const err = evt.target.error;\n      console.error('Reading file failed: ', err);\n      defer.reject({\n        'message': err.code == 20 ? gettext('Operation canceled') : gettext('Read failed'),\n        'reason': err.message\n      });\n    };\n    fileReader.onprogress = function(evt) {\n      defer.notify(evt);\n    };\n    // Read the file\n    fileReader.readAsText(file);\n    return defer.promise;\n  };\n\n  /**\n   * @param {string} url .\n   * @param {angular.$q.Deferred=} opt_cancelP .\n   * @return {angular.$q.Promise<Blob>} .\n   */\n  this.load = function(url, opt_cancelP) {\n\n    if (canceler) {\n      canceler.resolve();\n    }\n    canceler = opt_cancelP || $q.defer();\n\n    // Angularjs doesn't handle onprogress event\n    const defer = $q.defer();\n    $http.get(url, {\n      timeout: canceler.promise\n    }).then((response) => {\n      defer.resolve(response.data);\n    }, (reason) => {\n      console.error('Uploading file failed: ', reason);\n      defer.reject({\n        'message': gettext('Upload failed'),\n        'reason': reason\n      });\n    });\n    return defer.promise;\n  };\n};\n\nexports.module = angular.module('ngeoFile', []);\n\nexports.module.service('ngeoFile', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.controllers.AbstractDesktopController\n */\nimport gmfControllersAbstractAppController from 'gmf/controllers/AbstractAppController.js';\nimport gmfContextualdataModule from 'gmf/contextualdata/module.js';\nimport gmfDrawingModule from 'gmf/drawing/module.js';\nimport gmfEditingModule from 'gmf/editing/module.js';\nimport gmfPermalinkShareComponent from 'gmf/permalink/shareComponent.js';\nimport gmfPrintComponent from 'gmf/print/component.js';\nimport gmfProfileModule from 'gmf/profile/module.js';\nimport gmfRasterComponent from 'gmf/raster/component.js';\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoQueryBboxQueryComponent from 'ngeo/query/bboxQueryComponent.js';\nimport gmfImportModule from 'gmf/import/module.js';\nimport * as olBase from 'ol/index.js';\nimport * as olProj from 'ol/proj.js';\nimport * as olObj from 'ol/obj.js';\nimport olCollection from 'ol/Collection.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olControlScaleLine from 'ol/control/ScaleLine.js';\nimport olControlZoom from 'ol/control/Zoom.js';\nimport olControlRotate from 'ol/control/Rotate.js';\nimport * as olInteraction from 'ol/interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Desktop application abstract controller.\n *\n * This file includes `goog.require`'s for desktop components/directives used\n * by the HTML page and the controller to provide the configuration.\n *\n * @param {gmfx.Config} config A part of the application config.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @extends {gmf.controllers.AbstractAppController}\n * @ngdoc controller\n * @ngInject\n * @export\n */\nconst exports = function(config, $scope, $injector) {\n\n  const viewConfig = {\n    projection: olProj.get(`EPSG:${config.srid || 21781}`)\n  };\n  olObj.assign(viewConfig, config.mapViewConfig || {});\n\n  const arrow = gmfControllersAbstractAppController.prototype.getLocationIcon();\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    pixelRatio: config.mapPixelRatio,\n    layers: [],\n    view: new olView(viewConfig),\n    controls: config.mapControls || [\n      new olControlScaleLine({\n        target: document.getElementById('scaleline')\n      }),\n      new olControlZoom({\n        zoomInTipLabel: '',\n        zoomOutTipLabel: ''\n      }),\n      new olControlRotate({\n        label: arrow,\n        tipLabel: ''\n      })\n    ],\n    interactions: config.mapInteractions || olInteraction.defaults({\n      pinchRotate: true,\n      altShiftDragRotate: true\n    }),\n    loadTilesWhileAnimating: true,\n    loadTilesWhileInteracting: true\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.loginActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.toolsActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modalShareShown = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.editFeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.routingfeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.googleStreetViewActive = false;\n\n  /**\n   * @type {!ol.style.Style}\n   * @export\n   */\n  this.googleStreetViewStyle = new olStyleStyle({\n    text: new olStyleText({\n      fill: new olStyleFill({color: '#279B61'}),\n      font: 'normal 30px FontAwesome',\n      offsetY: -15,\n      stroke: new olStyleStroke({color: '#ffffff', width: 3}),\n      text: '\\uf041'\n    })\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.importDataSourceActive = false;\n\n  const body = $('body');\n\n  // initialize tooltips\n  body.tooltip({\n    container: 'body',\n    trigger: 'hover',\n    selector: '[data-toggle=\"tooltip\"]'\n  });\n\n  // deactivate tooltips on touch device\n  body.on('touchstart.detectTouch', () => {\n    body.tooltip('destroy');\n    body.off('touchstart.detectTouch');\n  });\n\n  /**\n   * Collection of features for the draw interaction\n   * @type {ol.Collection.<ol.Feature>}\n   */\n  const ngeoFeatures = $injector.get('ngeoFeatures');\n\n  /**\n   * @type {ngeo.map.FeatureOverlay}\n   * @export\n   */\n  this.drawFeatureLayer = $injector.get('ngeoFeatureOverlayMgr')\n    .getFeatureOverlay();\n  this.drawFeatureLayer.setFeatures(ngeoFeatures);\n\n  const ngeoFeatureHelper = $injector.get('ngeoFeatureHelper');\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.editFeatureVectorLayer = new olLayerVector({\n    source: new olSourceVector({\n      wrapX: false,\n      features: new olCollection()\n    }),\n    style: (feature, resolution) => ngeoFeatureHelper.createEditingStyles(feature)\n    // style: ngeoFeatureHelper.createEditingStyles.bind(ngeoFeatureHelper)\n  });\n  this.editFeatureVectorLayer.setMap(this.map);\n\n  /**\n   * The ngeo ToolActivate manager service.\n   * @type {ngeo.misc.ToolActivateMgr}\n   */\n  const ngeoToolActivateMgr = $injector.get('ngeoToolActivateMgr');\n\n  const editFeatureActivate = new ngeoMiscToolActivate(this, 'editFeatureActive');\n  ngeoToolActivateMgr.registerTool('mapTools', editFeatureActivate, false);\n\n  const googleStreetViewActivate = new ngeoMiscToolActivate(\n    this,\n    'googleStreetViewActive'\n  );\n  ngeoToolActivateMgr.registerTool('mapTools', googleStreetViewActivate, false);\n\n  /**\n   * @type {ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.scaleSelectorOptions = {\n    dropup: true\n  };\n\n  /**\n   * @type {ol.geom.LineString}\n   * @export\n   */\n  this.profileLine = null;\n\n  gmfControllersAbstractAppController.call(this, config, $scope, $injector);\n\n  // Close the login panel on successful login.\n  $scope.$watch(() => this.gmfUser.username, (newVal) => {\n    if (newVal !== null && this.loginActive) {\n      this.loginActive = false;\n    }\n  });\n};\n\nolBase.inherits(exports, gmfControllersAbstractAppController);\n\nexports.module = angular.module('GmfAbstractDesktopControllerModule', [\n  gmfControllersAbstractAppController.module.name,\n  gmfContextualdataModule.name,\n  gmfDrawingModule.name,\n  gmfEditingModule.name,\n  gmfPermalinkShareComponent.name,\n  gmfPrintComponent.name,\n  gmfProfileModule.name,\n  gmfRasterComponent.name,\n  ngeoDrawFeatures.name,\n  ngeoMapResizemap.name,\n  ngeoQueryBboxQueryComponent.name,\n  gmfImportModule.name,\n]);\n\nexports.module.controller(\n  'AbstractDesktopController',\n  exports);\n\nexports.module.value('isDesktop', true);\n\nexports.module.value('ngeoQueryOptions', {\n  'limit': 20\n});\n\nexports.module.value('ngeoMeasurePrecision', 3);\nexports.module.value('ngeoMeasureDecimals', 0);\n\n\nexport default exports;\n","/**\n * @module gmf.contextualdata.component\n */\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\nimport googAsserts from 'goog/asserts.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olProj from 'ol/proj.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfContextualdata', [\n  gmfRasterRasterService.module.name,\n]);\n\n\n/**\n * Provide a directive responsible of displaying contextual data after a right\n * click on the map.\n *\n * This directive doesn't require being rendered in a visible DOM element.\n * It's usually added to the element where the map directive is also added.\n *\n * Example:\n *\n *     <gmf-map gmf-map-map=\"mainCtrl.map\"\n *         gmf-contextualdata\n *         gmf-contextualdata-map=\"::mainCtrl.map\"\n *         gmf-contextualdata-projections=\"::[21781,4326]\">\n *\n * The content of the popover is managed in a partial that must be defined\n * using the `gmfContextualdatacontentTemplateUrl` value. See\n * {@link gmf.contextualdatacontentDirective} for more details.\n *\n * One can also provide a `gmf-contextualdata-callback` attribute in order to\n * do some additional computing on the coordinate or the values received for\n * the raster service. The callback function is called with the coordinate of\n * the clicked point and the response data from the server. It is intended to\n * return an object of additional properties to add to the scope.\n *\n * See the [../examples/contribs/gmf/contextualdata.html](../examples/contribs/gmf/contextualdata.html) example for a usage sample.\n *\n * @htmlAttribute {ol.Map} map The map.\n * @htmlAttribute {Array<number>} projections The list of projections.\n * @htmlAttribute {Function} callback A function called after server\n *    (raster) data is received in case some additional computing is required.\n *    Optional.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfContextualdata\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    scope: false,\n    controller: 'GmfContextualdataController as cdCtrl',\n    bindToController: {\n      'map': '<gmfContextualdataMap',\n      'projections': '<gmfContextualdataProjections',\n      'callback': '<gmfContextualdataCallback'\n    },\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {gmf.contextualdata.component.Controller_} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      controller.init();\n    }\n  };\n};\n\nexports.directive('gmfContextualdata',\n  exports.directive_);\n\n\n/**\n *\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {!angular.Scope} $scope Scope.\n * @param {gmf.raster.RasterService} gmfRaster Gmf Raster service\n *\n * @constructor\n * @private\n * @ngdoc controller\n * @ngInject\n */\nexports.Controller_ = function($compile, $timeout, $scope, gmfRaster) {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {Array<number>}\n   * @export\n   */\n  this.projections;\n\n  /**\n   * @type {function(ol.Coordinate, Object):Object}\n   * @export\n   */\n  this.callback;\n\n  /**\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.overlay_;\n\n  /**\n   * @type {angular.$compile}\n   * @private\n   */\n  this.$compile_ = $compile;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  angular.element('body').on('mousedown', this.hidePopover.bind(this));\n};\n\n/**\n *\n */\nexports.Controller_.prototype.init = function() {\n  this.preparePopover_();\n\n  const mapDiv = this.map.getTargetElement();\n  googAsserts.assertElement(mapDiv);\n\n  olEvents.listen(mapDiv, 'contextmenu',\n    this.handleMapContextMenu_, this);\n};\n\n/**\n * @param {!Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(event) {\n  this.$scope_.$apply(() => {\n    const pixel = this.map.getEventPixel(event);\n    const coordinate = this.map.getCoordinateFromPixel(pixel);\n    this.setContent_(coordinate);\n    event.preventDefault();\n    this.hidePopover();\n    this.showPopover();\n\n    // Use timeout to let the popover content to be rendered before displaying it.\n    this.timeout_(() => {\n      this.overlay_.setPosition(coordinate);\n    });\n  });\n};\n\nexports.Controller_.prototype.setContent_ = function(coordinate) {\n  const scope = this.$scope_.$new(true);\n  this.$compile_(this.content_)(scope);\n\n  const mapProjection = this.map.getView().getProjection().getCode();\n  this.projections.forEach((proj) => {\n    const coord = olProj.transform(coordinate, mapProjection, `EPSG:${proj}`);\n    scope[`coord_${proj}`] = coord;\n    scope[`coord_${proj}_eastern`] = coord[0];\n    scope[`coord_${proj}_northern`] = coord[1];\n  });\n\n  const getRasterSuccess = function(resp) {\n    olObj.assign(scope, resp);\n    if (this.callback) {\n      olObj.assign(scope, this.callback.call(this, coordinate, resp));\n    }\n  }.bind(this);\n  const getRasterError = function(resp) {\n    console.error('Error on getting the raster.');\n  };\n  this.gmfRaster_.getRaster(coordinate).then(\n    getRasterSuccess,\n    getRasterError\n  );\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.preparePopover_ = function() {\n\n  const container = document.createElement('DIV');\n  container.classList.add('popover');\n  container.classList.add('bottom');\n  container.classList.add('gmf-contextualdata');\n  angular.element(container).css('position', 'relative');\n  const arrow = document.createElement('DIV');\n  arrow.classList.add('arrow');\n  container.appendChild(arrow);\n  this.content_ = document.createElement('DIV');\n  this.content_.setAttribute('gmf-contextualdatacontent', '');\n  this.content_.classList.add('popover-content');\n  container.appendChild(this.content_);\n\n  this.overlay_ = new olOverlay({\n    element: container,\n    stopEvent: true,\n    autoPan: true,\n    autoPanAnimation: /** @type {olx.animation.PanOptions} */ ({\n      duration: 250\n    }),\n    positioning: 'top-center'\n  });\n  this.map.addOverlay(this.overlay_);\n};\n\nexports.Controller_.prototype.showPopover = function() {\n  const element = /** @type {Object} */ (this.overlay_.getElement());\n  angular.element(element).css('display', 'block');\n};\n\nexports.Controller_.prototype.hidePopover = function() {\n  const element = /** @type {Object} */ (this.overlay_.getElement());\n  angular.element(element).css('display', 'none');\n};\n\nexports.controller('GmfContextualdataController', exports.Controller_);\n\n\n/**\n * Provide a directive responsible of formatting the content of the popover for\n * the contextual data directive.\n *\n * Its main purpose is to configure the template to be used.\n * Integrators should ensure that the template values match the configuration\n * of the contextual data directive.\n *\n * For each projection the following expressions can be used (replace xxxx by\n * the relevant projection code:\n *  - {{coord_xxxx}},\n *  - {{coord_xxxx_eastern}},\n *  - {{coord_xxxx_northern}}\n *\n * Tip: one should use the `ngeoNumberCoordinates` and `ngeoDMSCoordinates`.\n *\n * The raster service is requested to query additional information. The\n * integrators can also use `{{xxxx}}` where `xxxx` will be replaced by\n * the name of the raster layers (for example 'srtm').\n *\n * See the [../examples/contribs/gmf/contextualdata.html](../examples/contribs/gmf/contextualdata.html) example for a usage sample.\n *\n * @param {string} gmfContextualdatacontentTemplateUrl Url to template.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfContextualdatacontent\n */\nexports.contentDirective_ = function(\n  gmfContextualdatacontentTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: gmfContextualdatacontentTemplateUrl\n  };\n};\n\nexports.directive('gmfContextualdatacontent', exports.contentDirective_);\n\n\nexport default exports;\n","/**\n * @module gmf.contextualdata.module\n */\nimport gmfContextualdataComponent from 'gmf/contextualdata/component.js';\n\nimport './contextualdata.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfContextualdataModule', [\n  gmfContextualdataComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.print.VectorEncoder\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport * as olMath from 'ol/math.js';\nimport olStyleIcon from 'ol/style/Icon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport * as olColor from 'ol/color.js';\n\n/**\n * @constructor\n */\nconst exports = function() {\n  /**\n   * @type {ol.format.GeoJSON}\n   */\n  this.geojsonFormat = new olFormatGeoJSON();\n};\n\n\n/**\n * @enum {string}\n */\nexports.PrintStyleType = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.print.VectorEncoder.PrintStyleType>}\n * @private\n */\nexports.PrintStyleTypes_ = {\n  'LineString': exports.PrintStyleType.LINE_STRING,\n  'Point': exports.PrintStyleType.POINT,\n  'Polygon': exports.PrintStyleType.POLYGON,\n  'MultiLineString': exports.PrintStyleType.LINE_STRING,\n  'MultiPoint': exports.PrintStyleType.POINT,\n  'MultiPolygon': exports.PrintStyleType.POLYGON\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Vector} layer Layer.\n * @param {number} resolution Resolution.\n */\nexports.prototype.encodeVectorLayer = function(arr, layer, resolution) {\n  const source = layer.getSource();\n  googAsserts.assertInstanceof(source, olSourceVector);\n\n  const features = source.getFeatures();\n\n  const /** @type {Array.<GeoJSONFeature>} */ geojsonFeatures = [];\n  const mapfishStyleObject = /** @type {MapFishPrintVectorStyle} */ ({\n    version: 2\n  });\n\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    const originalFeature = features[i];\n\n    let styleData = null;\n    let styleFunction = originalFeature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      styleData = styleFunction.call(originalFeature, resolution);\n    } else {\n      styleFunction = layer.getStyleFunction();\n      if (styleFunction !== undefined) {\n        styleData = styleFunction.call(layer, originalFeature, resolution);\n      }\n    }\n    const origGeojsonFeature = this.geojsonFormat.writeFeatureObject(originalFeature);\n    /**\n     * @type {Array<ol.style.Style>}\n     */\n    const styles = (styleData !== null && !Array.isArray(styleData)) ? [styleData] : styleData;\n    googAsserts.assert(Array.isArray(styles));\n\n    if (styles !== null && styles.length > 0) {\n      let isOriginalFeatureAdded = false;\n      for (let j = 0, jj = styles.length; j < jj; ++j) {\n        const style = styles[j];\n        let geometry = style.getGeometry();\n        let geojsonFeature;\n        if (!geometry) {\n          geojsonFeature = origGeojsonFeature;\n          geometry = originalFeature.getGeometry();\n          // no need to encode features with no geometry\n          if (!geometry) {\n            continue;\n          }\n          if (!isOriginalFeatureAdded) {\n            geojsonFeatures.push(geojsonFeature);\n            isOriginalFeatureAdded = true;\n          }\n        } else {\n          let styledFeature = originalFeature.clone();\n          styledFeature.setGeometry(geometry);\n          geojsonFeature = this.geojsonFormat.writeFeatureObject(styledFeature);\n          geometry = styledFeature.getGeometry();\n          styledFeature = null;\n          geojsonFeatures.push(geojsonFeature);\n        }\n\n        const geometryType = geometry.getType();\n        if (geojsonFeature.properties === null) {\n          geojsonFeature.properties = {};\n        }\n\n        const featureStyleProp = `_ngeo_style_${j}`;\n        const styleId = `${olBase.getUid(style).toString()}-${geometryType}`;\n        this.encodeVectorStyle(mapfishStyleObject, geometryType, style, styleId, featureStyleProp);\n        geojsonFeature.properties[featureStyleProp] = styleId;\n      }\n    }\n  }\n\n  // MapFish Print fails if there are no style rules, even if there are no\n  // features either. To work around this we just ignore the layer if the\n  // array of GeoJSON features is empty.\n  // See https://github.com/mapfish/mapfish-print/issues/279\n\n  if (geojsonFeatures.length > 0) {\n    const geojsonFeatureCollection = /** @type {GeoJSONFeatureCollection} */ ({\n      type: 'FeatureCollection',\n      features: geojsonFeatures\n    });\n    const object = /** @type {MapFishPrintVectorLayer} */ ({\n      geoJson: geojsonFeatureCollection,\n      opacity: layer.getOpacity(),\n      style: mapfishStyleObject,\n      type: 'geojson'\n    });\n    arr.push(object);\n  }\n};\n\n\n/**\n * @param {MapFishPrintVectorStyle} object MapFish style object.\n * @param {ol.geom.GeometryType} geometryType Type of the GeoJSON geometry\n * @param {ol.style.Style} style Style.\n * @param {string} styleId Style id.\n * @param {string} featureStyleProp Feature style property name.\n */\nexports.prototype.encodeVectorStyle = function(object, geometryType, style, styleId, featureStyleProp) {\n  if (!(geometryType in exports.PrintStyleTypes_)) {\n    // unsupported geometry type\n    return;\n  }\n  const styleType = exports.PrintStyleTypes_[geometryType];\n  const key = `[${featureStyleProp} = '${styleId}']`;\n  if (key in object) {\n    // do nothing if we already have a style object for this CQL rule\n    return;\n  }\n  const styleObject = /** @type {MapFishPrintSymbolizers} */ ({\n    symbolizers: []\n  });\n  object[key] = styleObject;\n  const fillStyle = style.getFill();\n  const imageStyle = style.getImage();\n  const strokeStyle = style.getStroke();\n  const textStyle = style.getText();\n  if (styleType === exports.PrintStyleType.POLYGON) {\n    if (fillStyle !== null) {\n      this.encodeVectorStylePolygon(\n        styleObject.symbolizers, fillStyle, strokeStyle);\n    }\n  } else if (styleType === exports.PrintStyleType.LINE_STRING) {\n    if (strokeStyle !== null) {\n      this.encodeVectorStyleLine(styleObject.symbolizers, strokeStyle);\n    }\n  } else if (styleType === exports.PrintStyleType.POINT) {\n    if (imageStyle !== null) {\n      this.encodeVectorStylePoint(styleObject.symbolizers, imageStyle);\n    }\n  }\n  if (textStyle !== null) {\n    this.encodeTextStyle(styleObject.symbolizers, textStyle);\n  }\n};\n\n\n/**\n * @param {MapFishPrintSymbolizerPoint|MapFishPrintSymbolizerPolygon} symbolizer MapFish Print symbolizer.\n * @param {!ol.style.Fill} fillStyle Fill style.\n * @protected\n */\nexports.prototype.encodeVectorStyleFill = function(symbolizer, fillStyle) {\n  let fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(typeof fillColor === 'string' || Array.isArray(fillColor));\n    fillColor = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    symbolizer.fillColor = ngeoUtils.rgbArrayToHex(fillColor);\n    symbolizer.fillOpacity = fillColor[3];\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStyleLine = function(symbolizers, strokeStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerLine} */ ({\n    type: 'line'\n  });\n  this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n  symbolizers.push(symbolizer);\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Image} imageStyle Image style.\n * @protected\n */\nexports.prototype.encodeVectorStylePoint = function(symbolizers, imageStyle) {\n  let symbolizer;\n  if (imageStyle instanceof olStyleCircle) {\n    symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n      type: 'point'\n    });\n    symbolizer.pointRadius = imageStyle.getRadius();\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      this.encodeVectorStyleFill(symbolizer, fillStyle);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n    }\n  } else if (imageStyle instanceof olStyleIcon) {\n    const src = imageStyle.getSrc();\n    if (src !== undefined) {\n      symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n        type: 'point',\n        externalGraphic: src\n      });\n      const opacity = imageStyle.getOpacity();\n      if (opacity !== null) {\n        symbolizer.graphicOpacity = opacity;\n      }\n      const size = imageStyle.getSize();\n      if (size !== null) {\n        let scale = imageStyle.getScale();\n        if (isNaN(scale)) {\n          scale = 1;\n        }\n        symbolizer.graphicWidth = size[0] * scale;\n        symbolizer.graphicHeight = size[1] * scale;\n      }\n      let rotation = imageStyle.getRotation();\n      if (isNaN(rotation)) {\n        rotation = 0;\n      }\n      symbolizer.rotation = olMath.toDegrees(rotation);\n    }\n  } else if (imageStyle instanceof olStyleRegularShape) {\n    /**\n     * Mapfish Print does not support image defined with ol.style.RegularShape.\n     * As a workaround, I try to map the image on a well-known image name.\n     */\n    const points = /** @type {ol.style.RegularShape} */ (imageStyle).getPoints();\n    if (points !== null) {\n      symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n        type: 'point'\n      });\n      if (points === 4) {\n        symbolizer.graphicName = 'square';\n      } else if (points === 3) {\n        symbolizer.graphicName = 'triangle';\n      } else if (points === 5) {\n        symbolizer.graphicName = 'star';\n      } else if (points === 8) {\n        symbolizer.graphicName = 'cross';\n      }\n      const sizeShape = imageStyle.getSize();\n      if (sizeShape !== null) {\n        symbolizer.graphicWidth = sizeShape[0];\n        symbolizer.graphicHeight = sizeShape[1];\n      }\n      const rotationShape = imageStyle.getRotation();\n      if (!isNaN(rotationShape) && rotationShape !== 0) {\n        symbolizer.rotation = olMath.toDegrees(rotationShape);\n      }\n      const opacityShape = imageStyle.getOpacity();\n      if (opacityShape !== null) {\n        symbolizer.graphicOpacity = opacityShape;\n      }\n      const strokeShape = imageStyle.getStroke();\n      if (strokeShape !== null) {\n        this.encodeVectorStyleStroke(symbolizer, strokeShape);\n      }\n      const fillShape = imageStyle.getFill();\n      if (fillShape !== null) {\n        this.encodeVectorStyleFill(symbolizer, fillShape);\n      }\n    }\n  }\n  if (symbolizer !== undefined) {\n    symbolizers.push(symbolizer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStylePolygon = function(symbolizers, fillStyle, strokeStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerPolygon} */ ({\n    type: 'polygon'\n  });\n  this.encodeVectorStyleFill(symbolizer, fillStyle);\n  if (strokeStyle !== null) {\n    this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n  }\n  symbolizers.push(symbolizer);\n};\n\n\n/**\n * @param {MapFishPrintSymbolizerPoint|MapFishPrintSymbolizerLine|MapFishPrintSymbolizerPolygon}\n *      symbolizer MapFish Print symbolizer.\n * @param {!ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStyleStroke = function(symbolizer, strokeStyle) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(typeof strokeColor === 'string' || Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    symbolizer.strokeColor = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    symbolizer.strokeOpacity = strokeColorRgba[3];\n  }\n  const strokeDashstyle = strokeStyle.getLineDash();\n  if (strokeDashstyle !== null) {\n    symbolizer.strokeDashstyle = strokeDashstyle.join(' ');\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    symbolizer.strokeWidth = strokeWidth;\n  }\n  const strokeLineCap = strokeStyle.getLineCap();\n  if (strokeLineCap) {\n    symbolizer.strokeLinecap = strokeStyle.getLineCap();\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizerText>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Text} textStyle Text style.\n * @protected\n */\nexports.prototype.encodeTextStyle = function(symbolizers, textStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerText} */ ({\n    type: 'Text'\n  });\n  const label = textStyle.getText();\n  if (label !== undefined) {\n    symbolizer.label = label;\n    let xAlign = 'c';\n    let yAlign = 'm';\n\n    const olTextAlign = textStyle.getTextAlign();\n    // 'left', 'right', 'center', 'end' or 'start'.\n    if (olTextAlign === 'left' || olTextAlign === 'start') {\n      xAlign = 'l';\n    } else if (olTextAlign === 'right' || olTextAlign === 'end') {\n      xAlign = 'r';\n    }\n\n    const olTextBaseline = textStyle.getTextBaseline();\n    // 'bottom', 'top', 'middle', 'alphabetic', 'hanging' or 'ideographic'\n    if (olTextBaseline === 'bottom') {\n      yAlign = 'l';\n    } else if (olTextBaseline === 'top') {\n      yAlign = 't';\n    }\n    symbolizer.labelAlign = `${xAlign}${yAlign}`;\n\n    const labelRotation = textStyle.getRotation();\n    if (labelRotation !== undefined) {\n      // Mapfish Print expects a string, not a number to rotate text\n      symbolizer.labelRotation = (labelRotation * 180 / Math.PI).toString();\n      // rotate around the vertical/horizontal center\n      symbolizer.labelAlign = 'cm';\n    }\n\n    const fontStyle = textStyle.getFont();\n    if (fontStyle !== undefined) {\n      const font = fontStyle.split(' ');\n      if (font.length >= 3) {\n        symbolizer.fontWeight = font[0];\n        symbolizer.fontSize = font[1];\n        symbolizer.fontFamily = font.splice(2).join(' ');\n      }\n    }\n\n    const strokeStyle = textStyle.getStroke();\n    if (strokeStyle !== null) {\n      const strokeColor = strokeStyle.getColor();\n      googAsserts.assert(typeof strokeColor === 'string' || Array.isArray(strokeColor));\n      const strokeColorRgba = olColor.asArray(strokeColor);\n      googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n      symbolizer.haloColor = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n      symbolizer.haloOpacity = strokeColorRgba[3];\n      const width = strokeStyle.getWidth();\n      if (width !== undefined) {\n        // Width is a stroke, radius a radius, so divide by 2\n        symbolizer.haloRadius = width / 2;\n      }\n    }\n\n    const fillStyle = textStyle.getFill();\n    if (fillStyle !== null) {\n      const fillColor = fillStyle.getColor();\n      googAsserts.assert(typeof fillColor === 'string' || Array.isArray(fillColor));\n      const fillColorRgba = olColor.asArray(fillColor);\n      googAsserts.assert(Array.isArray(fillColorRgba), 'only supporting fill colors');\n      symbolizer.fontColor = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    }\n\n    // Mapfish Print allows offset only if labelAlign is defined.\n    if (symbolizer.labelAlign !== undefined) {\n      symbolizer.labelXOffset = textStyle.getOffsetX();\n      // Mapfish uses the opposite direction of OpenLayers for y axis, so the\n      // minus sign is required for the y offset to be identical.\n      symbolizer.labelYOffset = -textStyle.getOffsetY();\n    }\n\n    symbolizers.push(symbolizer);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.print.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoPrintVectorEncoder from 'ngeo/print/VectorEncoder.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olArray from 'ol/array.js';\nimport * as olObj from 'ol/obj.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olMath from 'ol/math.js';\nimport * as olSize from 'ol/size.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport olTilegridWMTS from 'ol/tilegrid/WMTS.js';\n\n/**\n * Provides a function to create ngeo.print.Service objects used to\n * interact with MapFish Print v3 services.\n *\n * ngeo.print.Service objects expose the following methods:\n *\n * - createSpec: create a report specification object\n * - createReport: send a create report request\n * - getStatus: get the status of a report\n * - getReportUrl: get the URL of a report\n * - getCapabilities: get the capabilities of the server\n *\n *\n *     let printBaseUrl = 'http://example.com/print';\n *     let print = new ngeo.print.Service(printBaseUrl);\n *\n *     let scale = 5000;\n *     let dpi = 72;\n *     let layout = 'A4 portrait';\n *     let format = 'pdf';\n *     let reportSpec = print.createSpec(map, scale, dpi, layout, format, {\n *       'title': 'A title for my report',\n *       'rotation': 45 // degree\n *     });\n *\n * See our live example: [../examples/mapfishprint.html](../examples/mapfishprint.html)\n *\n * TODO and limitations:\n *\n * - createSpec should also accept a bbox instead of a center and a scale.\n * - Add support for ol.style.RegularShape. MapFish Print supports symbols\n *   like crosses, stars and squares, so printing regular shapes should be\n *   possible.\n * - ol.style.Icon may use a sprite image, and offsets to define to rectangle\n *   to use within the sprite. This type of icons won't be printed correctly\n *   as MapFish Print does not support sprite icons.\n *\n * @constructor\n * @struct\n * @param {string} url URL to MapFish print web service.\n * @param {angular.$http} $http Angular $http service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper service.\n */\nconst exports = function(url, $http, gettextCatalog, ngeoLayerHelper) {\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = url;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.print.VectorEncoder}\n   * @private\n   */\n  this.vectorEncoder_ = new ngeoPrintVectorEncoder();\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.printNativeAngle_ = true;\n};\n\n\n/**\n * Cancel a report.\n * @param {string} ref Print report reference.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.cancel = function(ref, opt_httpConfig) {\n  const httpConfig = opt_httpConfig !== undefined ? opt_httpConfig :\n    /** @type {angular.$http.Config} */ ({});\n  const url = `${this.url_}/cancel/${ref}`;\n  // \"delete\" is a reserved word, so use ['delete']\n  return this.$http_['delete'](url, httpConfig);\n};\n\n\n/**\n * Create a report specification.\n * @param {ol.Map} map Map.\n * @param {number} scale Scale.\n * @param {number} dpi DPI.\n * @param {string} layout Layout.\n * @param {string} format Formats.\n * @param {Object.<string, *>} customAttributes Custom attributes.\n * @return {MapFishPrintSpec} The print spec.\n * @export\n */\nexports.prototype.createSpec = function(\n  map, scale, dpi, layout, format, customAttributes) {\n\n  const specMap = /** @type {MapFishPrintMap} */ ({\n    dpi: dpi,\n    rotation: /** number */ (customAttributes['rotation'])\n  });\n\n  this.encodeMap_(map, scale, specMap);\n\n  const attributes = /** @type {!MapFishPrintAttributes} */ ({\n    map: specMap\n  });\n  olObj.assign(attributes, customAttributes);\n\n  const lang = this.gettextCatalog_.currentLanguage;\n\n  const spec = /** @type {MapFishPrintSpec} */ ({\n    attributes,\n    format,\n    lang,\n    layout\n  });\n\n  return spec;\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @param {number} scale Scale.\n * @param {MapFishPrintMap} object Object.\n * @private\n */\nexports.prototype.encodeMap_ = function(map, scale, object) {\n  const view = map.getView();\n  const viewCenter = view.getCenter();\n  const viewProjection = view.getProjection();\n  const viewResolution = view.getResolution();\n  const viewRotation = object.rotation || olMath.toDegrees(view.getRotation());\n\n  googAsserts.assert(viewCenter !== undefined);\n  googAsserts.assert(viewProjection !== undefined);\n\n  object.center = viewCenter;\n  object.projection = viewProjection.getCode();\n  object.rotation = viewRotation;\n  object.scale = scale;\n  object.layers = [];\n\n  const mapLayerGroup = map.getLayerGroup();\n  googAsserts.assert(mapLayerGroup);\n  this.printNativeAngle_ = !(mapLayerGroup.get('printNativeAngle') === false);\n  let layers = this.ngeoLayerHelper_.getFlatLayers(mapLayerGroup);\n\n  // Sort the layer by ZIndex\n  olArray.stableSort(layers, (layer_a, layer_b) => layer_a.getZIndex() - layer_b.getZIndex());\n  layers = layers.slice().reverse();\n\n  layers.forEach((layer) => {\n    if (layer.getVisible()) {\n      googAsserts.assert(viewResolution !== undefined);\n      this.encodeLayer(object.layers, layer, viewResolution);\n    }\n  });\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Base} layer Layer.\n * @param {number} resolution Resolution.\n */\nexports.prototype.encodeLayer = function(arr, layer, resolution) {\n  if (layer instanceof olLayerImage) {\n    this.encodeImageLayer_(arr, layer);\n  } else if (layer instanceof olLayerTile) {\n    this.encodeTileLayer_(arr, layer);\n  } else if (layer instanceof olLayerVector) {\n    this.vectorEncoder_.encodeVectorLayer(arr, layer, resolution);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Image} layer Layer.\n * @private\n */\nexports.prototype.encodeImageLayer_ = function(arr, layer) {\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  const source = layer.getSource();\n  if (source instanceof olSourceImageWMS) {\n    this.encodeImageWmsLayer_(arr, layer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Image} layer Layer.\n * @private\n */\nexports.prototype.encodeImageWmsLayer_ = function(arr, layer) {\n  const source = layer.getSource();\n\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  googAsserts.assertInstanceof(source, olSourceImageWMS);\n\n  const url = source.getUrl();\n  if (url !== undefined) {\n    this.encodeWmsLayer_(\n      arr, layer.getOpacity(), url, source.getParams());\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {number} opacity Opacity of the layer.\n * @param {string} url Url of the WMS server.\n * @param {Object} params Url parameters\n * @private\n */\nexports.prototype.encodeWmsLayer_ = function(arr, opacity, url, params) {\n  if (url.startsWith('//')) {\n    url = window.location.protocol  + url;\n  }\n  const url_url = new URL(url);\n  const customParams = {'TRANSPARENT': true};\n  if (url_url.searchParams) {\n    for (const element of url_url.searchParams) {\n      customParams[element[0]] = element[1];\n    }\n  }\n  for (const key in params) {\n    const value = params[key];\n    // remove empty params\n    if (value !== null && value !== undefined) {\n      customParams[key] = value;\n    }\n  }\n  delete customParams['LAYERS'];\n  delete customParams['FORMAT'];\n  delete customParams['SERVERTYPE'];\n  delete customParams['VERSION'];\n\n  const object = /** @type {MapFishPrintWmsLayer} */ ({\n    baseURL: exports.getAbsoluteUrl_(url_url.origin + url_url.pathname),\n    imageFormat: 'FORMAT' in params ? params['FORMAT'] : 'image/png',\n    layers: params['LAYERS'].split(','),\n    customParams: customParams,\n    serverType: params['SERVERTYPE'],\n    type: 'wms',\n    opacity: opacity,\n    version: params['VERSION'],\n    useNativeAngle: this.printNativeAngle_,\n  });\n  arr.push(object);\n};\n\n\n/**\n * @param {string} url URL.\n * @return {string} Absolute URL.\n * @private\n */\nexports.getAbsoluteUrl_ = function(url) {\n  const a = document.createElement('a');\n  a.href = encodeURI(url);\n  return decodeURI(a.href);\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileLayer_ = function(arr, layer) {\n  googAsserts.assertInstanceof(layer, olLayerTile);\n  const source = layer.getSource();\n  if (source instanceof olSourceWMTS) {\n    this.encodeTileWmtsLayer_(arr, layer);\n  } else if (source instanceof olSourceTileWMS) {\n    this.encodeTileWmsLayer_(arr, layer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileWmtsLayer_ = function(arr, layer) {\n  googAsserts.assertInstanceof(layer, olLayerTile);\n  const source = layer.getSource();\n  googAsserts.assertInstanceof(source, olSourceWMTS);\n\n  const projection = source.getProjection();\n  const tileGrid = source.getTileGrid();\n  googAsserts.assertInstanceof(tileGrid, olTilegridWMTS);\n  const matrixIds = tileGrid.getMatrixIds();\n\n  /** @type {Array.<MapFishPrintWmtsMatrix>} */\n  const matrices = [];\n\n  for (let i = 0, ii = matrixIds.length; i < ii; ++i) {\n    const tileRange = tileGrid.getFullTileRange(i);\n    matrices.push(/** @type {MapFishPrintWmtsMatrix} */ ({\n      identifier: matrixIds[i],\n      scaleDenominator: tileGrid.getResolution(i) *\n          projection.getMetersPerUnit() / 0.28E-3,\n      tileSize: olSize.toSize(tileGrid.getTileSize(i)),\n      topLeftCorner: tileGrid.getOrigin(i),\n      matrixSize: [\n        tileRange.maxX - tileRange.minX,\n        tileRange.maxY - tileRange.minY\n      ]\n    }));\n  }\n\n  const dimensions = source.getDimensions();\n  const dimensionKeys = Object.keys(dimensions);\n\n  const object = /** @type {MapFishPrintWmtsLayer} */ ({\n    baseURL: this.getWmtsUrl_(source),\n    dimensions: dimensionKeys,\n    dimensionParams: dimensions,\n    imageFormat: source.getFormat(),\n    layer: source.getLayer(),\n    matrices: matrices,\n    matrixSet: source.getMatrixSet(),\n    opacity: layer.getOpacity(),\n    requestEncoding: source.getRequestEncoding(),\n    style: source.getStyle(),\n    type: 'WMTS',\n    version: source.getVersion()\n  });\n\n  arr.push(object);\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileWmsLayer_ = function(arr, layer) {\n  const source = layer.getSource();\n\n  googAsserts.assertInstanceof(layer, olLayerTile);\n  googAsserts.assertInstanceof(source, olSourceTileWMS);\n\n  this.encodeWmsLayer_(\n    arr, layer.getOpacity(), source.getUrls()[0], source.getParams());\n};\n\n\n/**\n * Return the WMTS URL to use in the print spec.\n * @param {ol.source.WMTS} source The WMTS source.\n * @return {string} URL.\n * @private\n */\nexports.prototype.getWmtsUrl_ = function(source) {\n  const urls = source.getUrls();\n  googAsserts.assert(urls.length > 0);\n  return exports.getAbsoluteUrl_(urls[0]);\n};\n\n\n/**\n * Send a create report request to the MapFish Print service.\n * @param {MapFishPrintSpec} printSpec Print specification.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.createReport = function(printSpec, opt_httpConfig) {\n  const format = printSpec.format || 'pdf';\n  const url = `${this.url_}/report.${format}`;\n  const httpConfig = /** @type {!angular.$http.Config} */ ({\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8'\n    }\n  });\n  olObj.assign(httpConfig,\n    opt_httpConfig !== undefined ? opt_httpConfig : {});\n  return this.$http_.post(url, printSpec, httpConfig);\n};\n\n\n/**\n * Get the status of a report.\n * @param {string} ref Print report reference.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.getStatus = function(ref, opt_httpConfig) {\n  const httpConfig = opt_httpConfig !== undefined ? opt_httpConfig :\n    /** @type {angular.$http.Config} */ ({});\n  const url = `${this.url_}/status/${ref}.json`;\n  return this.$http_.get(url, httpConfig);\n};\n\n\n/**\n * Get the URL of a report.\n * @param {string} ref Print report reference.\n * @return {string} The report URL for this ref.\n * @export\n */\nexports.prototype.getReportUrl = function(ref) {\n  return `${this.url_}/report/${ref}`;\n};\n\n\n/**\n * Get the print capabilities from MapFish Print.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n */\nexports.prototype.getCapabilities = function(opt_httpConfig) {\n  const httpConfig =\n    opt_httpConfig !== undefined ? opt_httpConfig : /** @type {angular.$http.Config} */ ({\n      withCredentials: true\n    });\n  const url = `${this.url_}/capabilities.json`;\n  return this.$http_.get(url, httpConfig);\n};\n\n\n/**\n * @param {angular.$http} $http Angular $http service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @return {ngeox.CreatePrint} The function to create a print service.\n * @ngInject\n * @ngdoc service\n * @ngname ngeoCreatePrint\n */\nexports.createPrintServiceFactory = function($http, gettextCatalog, ngeoLayerHelper) {\n  return (\n    /**\n     * @param {string} url URL to MapFish print service.\n     */\n    function(url) {\n      return new exports(url, $http, gettextCatalog, ngeoLayerHelper);\n    }\n  );\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoPrint', [\n  ngeoMapLayerHelper.module.name\n]);\nexports.module.service('ngeoPrintService', exports);\nexports.module.factory('ngeoCreatePrint', exports.createPrintServiceFactory);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.editFeatureSelectorComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport gmfEditingEditFeatureComponent from 'gmf/editing/editFeatureComponent.js';\n\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfEditingFeatureSelectorComponent', [\n  gmfEditingEditFeatureComponent.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/editing/editFeatureSelectorComponent', require('./editFeatureSelectorComponent.html'));\n});\n\n\n/**\n * Directive that uses the GMF Theme service to collect the editable layers\n * and create a drop-down list out of them. When the user selects one of the\n * layer from the list, a `gmf-editfeature` directive is created and shown,\n * which allows the user to edit that layer.\n *\n * Example:\n *\n *     <gmf-editfeatureselector\n *         gmf-editfeatureselector-active=\"ctrl.editFeatureSelectorActive\"\n *         gmf-editfeatureselector-map=\"::ctrl.map\"\n *         gmf-editfeatureselector-tolerance=\"::ctrl.tolerance\"\n *         gmf-editfeatureselector-vector=\"::ctrl.vectorLayer\">\n *     </gmf-editfeatureselector>\n *\n * @htmlAttribute {boolean} gmf-editfeatureselector-active Whether the\n *     directive is active or not.\n * @htmlAttribute {ol.Map} gmf-editfeatureselector-map The map.\n * @htmlAttribute {number|undefined} gmf-editfeatureselector-tolerance The\n *     buffer in pixels to use when making queries to get the features.\n * @htmlAttribute {ol.layer.Vector} gmf-editfeatureselector-vector The vector\n *     layer where the selected or created features are drawn.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfEditfeatureselector\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfEditfeatureselectorController as efsCtrl',\n    scope: {\n      'active': '=gmfEditfeatureselectorActive',\n      'map': '<gmfEditfeatureselectorMap',\n      'tolerance': '<?gmfEditfeatureselectorTolerance',\n      'vectorLayer': '<gmfEditfeatureselectorVector'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/editing/editFeatureSelectorComponent'\n  };\n};\n\n\nexports.directive('gmfEditfeatureselector', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfEditfeatureselectorController\n */\nexports.Controller_ = function($scope, $timeout, gmfThemes, gmfTreeManager) {\n\n  // === Directive options ===\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = this.active === true;\n\n  $scope.$watch(\n    () => this.active,\n    this.handleActiveChange_.bind(this)\n  );\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.tolerance;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.vectorLayer;\n\n\n  // === Injected services ===\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @param {Array.<ngeo.layertree.Controller>} value First level controllers.\n   */\n  const updateEditableTreeCtrls = function(value) {\n    // Timeout required, because the collection event is fired before the\n    // leaf nodes are created and they are the ones we're looking for here.\n    this.$timeout_(() => {\n      if (value) {\n        const editables = this.editableTreeCtrls;\n\n        editables.length = 0;\n        this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.editable) {\n            googAsserts.assert(treeCtrl.children.length === 0);\n            editables.push(treeCtrl);\n          }\n        });\n      }\n    }, 0);\n  };\n\n  /**\n   * @type {function()}\n   * @private\n   */\n  this.treeCtrlsWatcherUnregister_ = $scope.$watchCollection(() => {\n    if (gmfTreeManager.rootCtrl) {\n      return gmfTreeManager.rootCtrl.children;\n    }\n  }, updateEditableTreeCtrls.bind(this));\n\n\n  // === Other inner properties ===\n\n  /**\n   * Flag shared with the `gmf-editfeature` directive used to determine if it\n   * has unsaved changes or not.\n   * @type {boolean}\n   * @export\n   */\n  this.dirty = false;\n\n  /**\n   * List of editable Layertree controllers.\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.editableTreeCtrls = [];\n\n  /**\n   * The currently selected Layertree controller.\n   * @type {?ngeo.layertree.Controller}\n   * @export\n   */\n  this.selectedEditableTreeCtrl = null;\n\n  $scope.$watch(\n    () => this.selectedEditableTreeCtrl,\n    (newValue, oldValue) => {\n      this.dirty = false;\n      this.state = gmfEditingEditFeatureComponent.State.IDLE;\n    }\n  );\n\n  /**\n   * The state of this directive shared with the `gmf-editfeature` directive.\n   * This property allows the proper management of the \"stop editing\" button.\n   * When clicked, the according state is set and the `gmf-editfeature`\n   * directive checks if it has unsaved changes and allow this directive to\n   * continue the action that was made or not.\n   * @type {string}\n   * @export\n   */\n  this.state = gmfEditingEditFeatureComponent.State.IDLE;\n\n  $scope.$watch(\n    () => this.state,\n    (newValue, oldValue) => {\n      if (newValue === gmfEditingEditFeatureComponent.State.STOP_EDITING_EXECUTE ||\n          newValue === gmfEditingEditFeatureComponent.State.DEACTIVATE_EXECUTE) {\n        this.selectedEditableTreeCtrl = null;\n      }\n      if (newValue === gmfEditingEditFeatureComponent.State.DEACTIVATE_EXECUTE) {\n        this.active = false;\n      }\n    }\n  );\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n\n};\n\n\n/**\n * Called when the 'stop editing' button is clicked. Set the 'state'\n * variable to 'pending' allow the editfeature directive to check if it can\n * stop or if it requires confirmation due to unsaved modifications.\n * @export\n */\nexports.Controller_.prototype.stopEditing = function() {\n  this.state = gmfEditingEditFeatureComponent.State.STOP_EDITING_PENDING;\n};\n\n\n/**\n * Called when the active property of the this directive changes. Manage\n * the activation/deactivation accordingly.\n * @param {boolean} active Whether the directive is active or not.\n * @private\n */\nexports.Controller_.prototype.handleActiveChange_ = function(active) {\n  if (!active) {\n    if (!this.dirty) {\n      this.stopEditing();\n    } else {\n      // There are unsaved modifications. Prevent the deactivation and\n      // set the state accordingly for the `gmf-editfeature` directive\n      // to manage the unsaved modifications.\n      // The changes are made inside a $timeout to be taken into account\n      // in the next digest cycle.\n      this.$timeout_(() => {\n        this.active = true;\n        this.stopEditing();\n      });\n    }\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.treeCtrlsWatcherUnregister_();\n};\n\n\nexports.controller('GmfEditfeatureselectorController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.module\n */\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\nimport gmfEditingEditFeatureComponent from 'gmf/editing/editFeatureComponent.js';\nimport gmfEditingEditFeatureSelectorComponent from 'gmf/editing/editFeatureSelectorComponent.js';\nimport gmfEditingEnumerateAttribute from 'gmf/editing/EnumerateAttribute.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport gmfEditingXSDAttributes from 'gmf/editing/XSDAttributes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfEditingModule', [\n  gmfEditingEditFeature.module.name,\n  gmfEditingEditFeatureComponent.name,\n  gmfEditingEditFeatureSelectorComponent.name,\n  gmfEditingEnumerateAttribute.module.name,\n  gmfEditingSnapping.module.name,\n  gmfEditingXSDAttributes.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport * as olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complete then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n","/**\n * @module gmf.drawing.featureStyleComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingFeatureStyle', [\n  ngeoMiscColorpickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/drawing/featureStyleComponent', require('./featureStyleComponent.html'));\n});\n\n\n/**\n * Directive used to set the style of a vector feature. The options depend\n * on the type of geometry.\n * Example:\n *\n *     <gmf-featurestyle\n *         gmf-featurestyle-feature=\"ctrl.selectedFeature\">\n *     </gmf-featurestyle>\n *\n * @htmlAttribute {ol.Feature} gmf-featurestyle-feature The feature.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfFeaturestyle\n */\nexports.directive_ = function() {\n  return {\n    controller: 'GmfFeaturestyleController as fsCtrl',\n    scope: {\n      'feature': '=gmfFeaturestyleFeature'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/drawing/featureStyleComponent'\n  };\n};\n\n\nexports.directive('gmfFeaturestyle',\n  exports.directive_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Gmf feature helper service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfFeaturestyleController\n */\nexports.Controller_ = function($scope, ngeoFeatureHelper) {\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.color = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.label = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.measure = undefined;\n\n  $scope.$watch(\n    () => this.color,\n    this.handleColorSet_.bind(this)\n  );\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = [];\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.type;\n\n  $scope.$watch(\n    () => this.feature,\n    this.handleFeatureSet_.bind(this)\n  );\n\n};\n\n\n/**\n * Called when a new feature is set, which can also be null.\n * @param {?ol.Feature} newFeature New feature or null value.\n * @param {?ol.Feature} previousFeature Previous feature or null value.\n * @private\n */\nexports.Controller_.prototype.handleFeatureSet_ = function(\n  newFeature, previousFeature) {\n\n  const keys = this.featureListenerKeys_;\n\n  if (previousFeature) {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.type = undefined;\n    this.color = undefined;\n    this.measure = undefined;\n    this.label = undefined;\n  }\n\n  if (newFeature) {\n    [\n      ngeoFormatFeatureProperties.ANGLE,\n      ngeoFormatFeatureProperties.COLOR,\n      ngeoFormatFeatureProperties.NAME,\n      ngeoFormatFeatureProperties.SHOW_LABEL,\n      ngeoFormatFeatureProperties.OPACITY,\n      ngeoFormatFeatureProperties.SHOW_MEASURE,\n      ngeoFormatFeatureProperties.SIZE,\n      ngeoFormatFeatureProperties.STROKE\n    ].forEach(function(propName) {\n      keys.push(\n        olEvents.listen(\n          newFeature,\n          `change:${propName}`,\n          this.handleFeatureChange_,\n          this\n        )\n      );\n    }, this);\n\n    const geometry = newFeature.getGeometry();\n    googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n    keys.push(\n      olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      )\n    );\n\n    this.type = this.featureHelper_.getType(newFeature);\n    this.color = this.featureHelper_.getColorProperty(newFeature);\n    this.measure = this.featureHelper_.getMeasure(newFeature);\n  }\n};\n\n\n/**\n * @param {string|undefined} newColor Color.\n * @private\n */\nexports.Controller_.prototype.handleColorSet_ = function(\n  newColor) {\n  if (this.feature && newColor) {\n    const currentColor = this.feature.get(ngeoFormatFeatureProperties.COLOR);\n    if (currentColor !== newColor) {\n      this.feature.set(ngeoFormatFeatureProperties.COLOR, newColor);\n    }\n  }\n};\n\n\n/**\n * @param {number|undefined} value A name value to set or undefined to get.\n * @return {number} The angle of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetAngle = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.ANGLE, value));\n};\n\n\n/**\n * @param {string|undefined} value A name value to set or undefined to get.\n * @return {string} The name of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetName = function(value) {\n  return googAsserts.assertString(this.getSetProperty_(ngeoFormatFeatureProperties.NAME, value));\n};\n\n/**\n * @param {boolean|undefined} value A value to set or undefined for the\n *     purpose of showing the attribute labels or not.\n * @return {boolean} Whether to show the labels or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowLabel = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_LABEL, value));\n};\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetOpacity = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.OPACITY, value));\n};\n\n\n/**\n * @param {boolean|undefined} value A value to set or undefined to get for the\n *     purpose of showing the geometry measurements or not.\n * @return {boolean} Whether to show the measurements or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowMeasure = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_MEASURE, value));\n};\n\n\n/**\n * @param {number|undefined} value A size value to set or undefined to get.\n * @return {number} The size of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetSize = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.SIZE, value));\n};\n\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetStroke = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.STROKE, value));\n};\n\n\n/**\n * @param {string} key The property name.\n * @param {boolean|number|string|undefined} value A value to set or undefined\n *     to get.\n * @return {boolean|number|string} The property value of the feature.\n * @private\n */\nexports.Controller_.prototype.getSetProperty_ = function(key, value) {\n  if (value !== undefined) {\n    this.feature.set(key, value);\n  }\n  return /** @type {boolean|number|string} */ (this.feature.get(key));\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeatureChange_ = function() {\n  const feature = this.feature;\n\n  if (!feature) {\n    return;\n  }\n\n  this.featureHelper_.setStyle(feature, true);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleGeometryChange_ = function() {\n  googAsserts.assert(this.feature);\n  this.measure = this.featureHelper_.getMeasure(this.feature);\n\n  const showMeasure = this.featureHelper_.getShowMeasureProperty(this.feature);\n  if (showMeasure) {\n    this.handleFeatureChange_();\n  }\n\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfFeaturestyleController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.drawing.drawFeatureComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\nimport googAsserts from 'goog/asserts.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoMenu from 'ngeo/Menu.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingExportfeaturesComponent from 'ngeo/editing/exportfeaturesComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawComponent from 'ngeo/draw/component.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModify from 'ngeo/interaction/Modify.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfDrawFeatureComponent', [\n  gmfDrawingFeatureStyleComponent.name,\n  ngeoEditingExportfeaturesComponent.name,\n  ngeoMiscBtnComponent.name,\n  ngeoDrawComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/drawing/drawFeatureComponent', require('./drawFeatureComponent.html'));\n});\n\n\n/**\n * Directive used to create, modify and delete vector features on a map with\n * the addition of changing their style.\n * Example:\n *\n *     <gmf-drawfeature\n *         gmf-drawfeature-active=\"ctrl.drawFeatureActive\"\n *         gmf-drawfeature-map=\"::ctrl.map\">\n *     </gmf-drawfeature>\n *\n * @htmlAttribute {boolean} gmf-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {ol.Map} gmf-drawfeature-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfDrawfeature\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfDrawfeatureController as efCtrl',\n    scope: {\n      'active': '=gmfDrawfeatureActive',\n      'map': '<gmfDrawfeatureMap',\n      'showMeasure': '=?gmfDrawfeatureShowmeasure'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/drawing/drawFeatureComponent'\n  };\n};\n\n\nexports.directive('gmfDrawfeature',\n  exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {!ol.Collection.<!ol.Feature>} ngeoFeatures Collection of features.\n * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDrawfeatureController\n */\nexports.Controller_ = function($scope, $timeout, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures, ngeoToolActivateMgr) {\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawActive = false;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.drawToolActivate = new ngeoMiscToolActivate(this, 'drawActive');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.mapSelectActive = true;\n\n  /**\n   * @type {number?}\n   * @private\n   */\n  this.longPressTimeout_ = null;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.mapSelectToolActivate = new ngeoMiscToolActivate(this, 'mapSelectActive');\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {!ol.Collection.<!ol.Feature>}\n   * @export\n   */\n  this.features = ngeoFeatures;\n\n  /**\n   * @type {!ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.selectedFeature = null;\n\n  /**\n   * @type {!ol.Collection.<!ol.Feature>}\n   * @export\n   */\n  this.selectedFeatures = new olCollection();\n\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.interactions_ = new olCollection();\n\n  /**\n   * @type {!ngeo.interaction.Modify}\n   * @private\n   */\n  this.modify_ = new ngeoInteractionModify({\n    features: this.selectedFeatures,\n    style: ngeoFeatureHelper.getVertexStyle(false)\n  });\n  this.interactions_.push(this.modify_);\n\n  /**\n   * @type {?ngeo.Menu}\n   * @private\n   */\n  this.menu_ = null;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.modifyToolActivate = new ngeoMiscToolActivate(this.modify_, 'active');\n\n  /**\n   * @type {!ngeo.interaction.Translate}\n   * @private\n   */\n  this.translate_ = new ngeoInteractionTranslate({\n    features: this.selectedFeatures,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf047',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.translate_);\n\n  /**\n   * @type {!ngeo.interaction.Rotate}\n   * @private\n   */\n  this.rotate_ = new ngeoInteractionRotate({\n    features: this.selectedFeatures,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf01e',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.rotate_);\n\n  this.initializeInteractions_();\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.rotateToolActivate = new ngeoMiscToolActivate(this.rotate_, 'active');\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.translateToolActivate = new ngeoMiscToolActivate(this.translate_, 'active');\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * Flag used to determine whether the selection of a feature was made\n   * from the selection of an item from the list or not (the map, contextual\n   * menu, etc.)\n   * @type {boolean}\n   * @private\n   */\n  this.listSelectionInProgress_ = false;\n\n  $scope.$watch(\n    () => this.active,\n    this.handleActiveChange_.bind(this)\n  );\n\n  $scope.$watch(\n    () => this.drawActive,\n    (active) => {\n      if (active) {\n        this.selectedFeature = null;\n      }\n    }\n  );\n\n  $scope.$watch(\n    () => this.selectedFeature,\n    (newFeature, previousFeature) => {\n      this.selectedFeatures.clear();\n      if (previousFeature) {\n        this.featureHelper_.setStyle(previousFeature);\n        this.unregisterInteractions_();\n      }\n      if (newFeature) {\n        this.featureHelper_.setStyle(newFeature, true);\n        this.selectedFeatures.push(newFeature);\n        this.registerInteractions_();\n        if (this.listSelectionInProgress_) {\n          this.featureHelper_.panMapToFeature(newFeature, this.map);\n          this.listSelectionInProgress_ = false;\n        }\n      } else if (this.menu_) {\n        this.map.removeOverlay(this.menu_);\n        this.menu_ = null;\n      }\n    }\n  );\n\n  $scope.$watch(\n    () => this.mapSelectActive,\n    this.handleMapSelectActiveChange_.bind(this)\n  );\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nameProperty = ngeoFormatFeatureProperties.NAME;\n\n  /**\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n};\n\n\n/**\n * Initialize interactions by setting them inactive and decorating them\n * @private\n */\nexports.Controller_.prototype.initializeInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    interaction.setActive(false);\n    ngeoMiscDecorate.interaction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by adding them to the map\n * @private\n */\nexports.Controller_.prototype.registerInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.addInteraction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by removing them to the map\n * @private\n */\nexports.Controller_.prototype.unregisterInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.removeInteraction(interaction);\n  });\n};\n\n\n/**\n * Called when the active property of the this directive changes. Manage\n * the activation/deactivation accordingly (event management, etc.)\n * @param {boolean} active Whether the directive is active or not.\n * @private\n */\nexports.Controller_.prototype.handleActiveChange_ = function(active) {\n\n  const keys = this.listenerKeys_;\n  const drawUid = ['draw-', olBase.getUid(this)].join('-');\n  const otherUid = ['other-', olBase.getUid(this)].join('-');\n  const toolMgr = this.ngeoToolActivateMgr_;\n\n  if (active) {\n    // when activated\n\n    keys.push(\n      olEvents.listen(this.features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features, 'remove', this.handleFeaturesRemove_, this)\n    );\n\n    keys.push(olEvents.listen(this.translate_,\n      'translateend',\n      this.handleTranslateEnd_, this));\n\n    keys.push(olEvents.listen(this.rotate_, 'rotateend', this.handleRotateEnd_, this));\n\n    toolMgr.registerTool(drawUid, this.drawToolActivate, false);\n    toolMgr.registerTool(drawUid, this.mapSelectToolActivate, true);\n\n    toolMgr.registerTool(otherUid, this.drawToolActivate, false);\n    toolMgr.registerTool(otherUid, this.modifyToolActivate, true);\n    toolMgr.registerTool(otherUid, this.translateToolActivate, false);\n    toolMgr.registerTool(otherUid, this.rotateToolActivate, false);\n\n    this.mapSelectActive = true;\n    this.modify_.setActive(true);\n  } else {\n    // when deactivated\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n\n    toolMgr.unregisterTool(drawUid, this.drawToolActivate);\n    toolMgr.unregisterTool(drawUid, this.mapSelectToolActivate);\n\n    toolMgr.unregisterTool(otherUid, this.drawToolActivate);\n    toolMgr.unregisterTool(otherUid, this.modifyToolActivate);\n    toolMgr.unregisterTool(otherUid, this.translateToolActivate);\n    toolMgr.unregisterTool(otherUid, this.rotateToolActivate);\n\n    this.drawActive = false;\n    this.modify_.setActive(false);\n    this.mapSelectActive = false;\n    this.selectedFeature = null;\n\n    if (this.menu_) {\n      this.map.removeOverlay(this.menu_);\n      this.menu_ = null;\n    }\n  }\n\n};\n\n\n/**\n * Method called when a selection occurs from the list, i.e. when an item in\n * the list of features is clicked. Called from the template, so no need to\n * update Angular's scope.\n * @param {!ol.Feature} feature Feature to select.\n * @export\n */\nexports.Controller_.prototype.selectFeatureFromList = function(feature) {\n  this.listSelectionInProgress_ = true;\n  this.selectedFeature = feature;\n  this.drawActive = false;\n};\n\n\n/**\n * @return {!Array.<!ol.Feature>} Array.\n * @export\n */\nexports.Controller_.prototype.getFeaturesArray = function() {\n  return this.features.getArray();\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.clearFeatures = function() {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete all the features?');\n  if (confirm(msg)) {\n    this.features.clear();\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature The feature to remove from the selection.\n * @export\n */\nexports.Controller_.prototype.removeFeature = function(feature) {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete the selected feature?');\n  if (confirm(msg)) {\n    this.features.remove(feature);\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturesAdd_ = function(evt) {\n  // timeout to prevent double-click to zoom the map\n  this.timeout_(() => {\n    this.selectedFeature = /** @type {ol.Feature} */ (evt.element);\n    this.drawActive = false;\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturesRemove_ = function(evt) {\n  this.selectedFeature = null;\n};\n\n\n/**\n * Called when the mapSelectActive property changes.\n * @param {boolean} active Whether the map select is active or not.\n * @private\n */\nexports.Controller_.prototype.handleMapSelectActiveChange_ = function(\n  active) {\n\n  const mapDiv = this.map.getViewport();\n  googAsserts.assertElement(mapDiv);\n\n  if (active) {\n    olEvents.listen(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.listen(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n    olEvents.listen(mapDiv, 'touchstart',\n      this.handleMapTouchStart_, this);\n\n    olEvents.listen(mapDiv, 'touchmove',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.listen(mapDiv, 'touchend',\n      this.handleMapTouchEnd_, this);\n\n  } else {\n    olEvents.unlisten(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.unlisten(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n    olEvents.unlisten(mapDiv, 'touchstart',\n      this.handleMapTouchStart_, this);\n\n    olEvents.unlisten(mapDiv, 'touchmove',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.unlisten(mapDiv, 'touchend',\n      this.handleMapTouchEnd_, this);\n  }\n};\n\n\n/**\n * @param {!ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapClick_ = function(evt) {\n\n  const pixel = evt.pixel;\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 5\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // do not do any further action if feature is null or already selected\n  if (feature === this.selectedFeature) {\n    return;\n  }\n\n  this.selectedFeature = feature;\n\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapTouchStart_ = function(evt) {\n  this.longPressTimeout_ = setTimeout(() => {\n    this.handleMapContextMenu_(evt);\n  }, 500);\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapTouchEnd_ = function(evt) {\n  clearTimeout(this.longPressTimeout_);\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(evt) {\n  const gettextCatalog = this.gettextCatalog_;\n  const pixel = this.map.getEventPixel(evt);\n  const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 7\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // show contextual menu when clicking on certain types of features\n  if (feature) {\n    let actions = [];\n\n    const type = this.featureHelper_.getType(feature);\n    if (type == ngeoGeometryType.CIRCLE ||\n        type == ngeoGeometryType.LINE_STRING ||\n        type == ngeoGeometryType.POLYGON ||\n        type == ngeoGeometryType.RECTANGLE) {\n      actions = actions.concat([{\n        cls: 'fa fa-arrows',\n        label: gettextCatalog.getString('Move'),\n        name: 'move'\n      }, {\n        cls: 'fa fa-rotate-right',\n        label: gettextCatalog.getString('Rotate'),\n        name: 'rotate'\n      }]);\n    }\n\n    actions = actions.concat([{\n      cls: 'fa fa-trash-o',\n      label: gettextCatalog.getString('Delete'),\n      name: 'delete'\n    }]);\n\n    this.menu_ = new ngeoMenu({\n      actions\n    });\n\n    olEvents.listen(this.menu_, 'actionclick',\n      this.handleMenuActionClick_, this);\n    this.map.addOverlay(this.menu_);\n\n    this.menu_.open(coordinate);\n\n    evt.preventDefault();\n    evt.stopPropagation();\n  }\n\n  // do not do any further action if feature is null or already selected\n  if (feature === this.selectedFeature) {\n    return;\n  }\n\n  this.modify_.setActive(true);\n\n  this.selectedFeature = feature;\n\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.MenuEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuActionClick_ = function(evt) {\n  const action = evt.detail.action;\n\n  switch (action) {\n    case 'delete':\n      googAsserts.assert(\n        this.selectedFeature, 'Selected feature should be truthy');\n      this.removeFeature(this.selectedFeature);\n      this.scope_.$apply();\n      break;\n    case 'move':\n      this.translate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    case 'rotate':\n      this.rotate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    default:\n      // FIXME\n      console.log(`FIXME - support: ${action}`);\n      break;\n  }\n};\n\n\n/**\n * @param {!ol.interaction.Translate.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleTranslateEnd_ = function(evt) {\n  this.translate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.RotateEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleRotateEnd_ = function(evt) {\n  this.rotate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfDrawfeatureController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.drawing.module\n */\nimport gmfDrawingDrawFeatureComponent from 'gmf/drawing/drawFeatureComponent.js';\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingModule', [\n  gmfDrawingDrawFeatureComponent.name,\n  gmfDrawingFeatureStyleComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.import.wmsCapabilityLayertreeComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\n\nimport * as olBase from 'ol/index.js';\n\nimport 'bootstrap/js/collapse.js';\n\n\nconst exports = angular.module('gmfWmscapabilitylayertreenode', [\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  ngeoMessagePopup.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/import/wmsCapabilityLayertreeComponent', require('./wmsCapabilityLayertreeComponent.html'));\n});\n\n\nexports.value('gmfWmscapabilitylayertreenodeTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfWmscapabilitylayertreenodeTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/import/wmsCapabilityLayertreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfWmscapabilitylayertreenodeTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfWmscapabilitylayertreenodeTemplateUrl($attrs, gmfWmscapabilitylayertreenodeTemplateUrl) {\n  return gmfWmscapabilitylayertreenodeTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!gmf.datasource.ExternalDataSourcesManager}\n   *     gmfExternalDataSourcesManager GMF service responsible of managing\n   *     external data sources.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfWmscapabilitylayertreenodeController\n   */\n  constructor(gmfExternalDataSourcesManager) {\n\n    // Binding properties\n\n    /**\n     * WMS Capabilities definition\n     * @type {!Object}\n     * @export\n     */\n    this.capabilities;\n\n    /**\n     * WMS Capability Layer object.\n     * @type {!Object}\n     * @export\n     */\n    this.layer;\n\n    /**\n     * The original server url that was used to build the WMS GetCapabilities\n     * request.\n     * @type {string}\n     * @export\n     */\n    this.url;\n\n\n    // Injected properties\n\n    /**\n     * @type {!gmf.datasource.ExternalDataSourcesManager}\n     * @private\n     */\n    this.gmfExternalDataSourcesManager_ = gmfExternalDataSourcesManager;\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object\n   * @export\n   */\n  createAndAddDataSource(layer) {\n    this.gmfExternalDataSourcesManager_.createAndAddDataSourceFromWMSCapability(\n      layer,\n      this.capabilities,\n      this.url\n    );\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object\n   * @return {number} Unique id for the Capability Layer.\n   * @export\n   */\n  getUid(layer) {\n    return olBase.getUid(layer);\n  }\n};\n\n\nexports.component('gmfWmscapabilitylayertreenode', {\n  bindings: {\n    'capabilities': '<',\n    'layer': '<',\n    'url': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfWmscapabilitylayertreenodeTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.import.wmtsCapabilityLayertreeComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\n\nimport * as olBase from 'ol/index.js';\n\nconst exports = angular.module('gmfWmtscapabilitylayertree', [\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  ngeoMessagePopup.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/import/wmtsCapabilityLayertreeComponent', require('./wmtsCapabilityLayertreeComponent.html'));\n});\n\n\nexports.value('gmfWmtscapabilitylayertreTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfWmtscapabilitylayertreTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/import/wmtsCapabilityLayertreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfWmtscapabilitylayertreTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfWmtscapabilitylayertreTemplateUrl($attrs, gmfWmtscapabilitylayertreTemplateUrl) {\n  return gmfWmtscapabilitylayertreTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!gmf.datasource.ExternalDataSourcesManager}\n   *     gmfExternalDataSourcesManager GMF service responsible of managing\n   *     external data sources.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfWmtscapabilitylayertreeController\n   */\n  constructor(gmfExternalDataSourcesManager) {\n\n    // Binding properties\n\n    /**\n     * WMS Capabilities definition\n     * @type {!Object}\n     * @export\n     */\n    this.capabilities;\n\n    /**\n     * List of WMTS Capability Layer objects.\n     * @type {!Array.<!Object>}\n     * @export\n     */\n    this.layers;\n\n    /**\n     * The original WMTS GetCapabilities url that was used to fetch the\n     * capability layers.\n     * @type {string}\n     * @export\n     */\n    this.url;\n\n\n    // Injected properties\n\n    /**\n     * @type {!gmf.datasource.ExternalDataSourcesManager}\n     * @private\n     */\n    this.gmfExternalDataSourcesManager_ = gmfExternalDataSourcesManager;\n  }\n\n  /**\n   * @param {!Object} layer WMTS Capability Layer object\n   * @export\n   */\n  createAndAddDataSource(layer) {\n    const manager = this.gmfExternalDataSourcesManager_;\n    manager.createAndAddDataSourceFromWMTSCapability(\n      layer,\n      this.capabilities,\n      this.url\n    );\n  }\n\n  /**\n   * @param {!Object} layer WMTS Capability Layer object\n   * @return {number} Unique id for the Capability Layer.\n   * @export\n   */\n  getUid(layer) {\n    return olBase.getUid(layer);\n  }\n};\n\n\nexports.component('gmfWmtscapabilitylayertree', {\n  bindings: {\n    'capabilities': '<',\n    'layers': '<',\n    'url': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfWmtscapabilitylayertreTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.import.importdatasourceComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\n\n/** @suppress {extraRequire} */\nimport gmfImportWmsCapabilityLayertreeComponent from 'gmf/import/wmsCapabilityLayertreeComponent.js';\n\n/** @suppress {extraRequire} */\nimport gmfImportWmtsCapabilityLayertreeComponent from 'gmf/import/wmtsCapabilityLayertreeComponent.js';\n\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\nconst exports = angular.module('gmfImportdatasource', [\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfImportWmsCapabilityLayertreeComponent.name,\n  gmfImportWmtsCapabilityLayertreeComponent.name,\n  ngeoQueryQuerent.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/import/importdatasourceComponent', require('./importdatasourceComponent.html'));\n});\n\n\nexports.value('gmfImportdatasourceTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfImportdatasourceTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/import/importdatasourceComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfImportdatasourceTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfImportdatasourceTemplateUrl($attrs, gmfImportdatasourceTemplateUrl) {\n  return gmfImportdatasourceTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!jQuery} $element Element.\n   * @param {!angular.$filter} $filter Angular filter.\n   * @param {!angular.$injector} $injector Main injector.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!gmf.datasource.ExternalDataSourcesManager}\n   *     gmfExternalDataSourcesManager GMF service responsible of managing\n   *     external data sources.\n   * @param {!ngeo.query.Querent} ngeoQuerent Ngeo querent service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfImportdatasourceController\n   */\n  constructor($element, $filter, $injector, $scope, $timeout,\n    gmfExternalDataSourcesManager, ngeoQuerent) {\n\n    // Binding properties\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n\n    // Injected properties\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!gmf.datasource.ExternalDataSourcesManager}\n     * @private\n     */\n    this.gmfExternalDataSourcesManager_ = gmfExternalDataSourcesManager;\n\n    /**\n     * @type {!ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n\n    // Model properties\n\n    /**\n     * @type {File|undefined}\n     * @export\n     */\n    this.file;\n\n    /**\n     * @type {string|undefined}\n     * @export\n     */\n    this.url;\n\n\n    // Inner properties\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.fileInput_ = $element.find('input[type=file]');\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.hasError = false;\n\n    /**\n     * @type {?angular.$q.Promise}\n     * @private\n     */\n    this.hasErrorPromise_ = null;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.mode = exports.Controller_.Mode.ONLINE;\n\n    /**\n     * @type {!Array.<string>}\n     * @export\n     */\n    this.modes = [\n      exports.Controller_.Mode.LOCAL,\n      exports.Controller_.Mode.ONLINE\n    ];\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.pending = false;\n\n    /**\n     * @type {!ngeox.unitPrefix}\n     * @private\n     */\n    this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ (\n      $filter('ngeoUnitPrefix'));\n\n    /**\n     * Current WMS Capabilities that were connected.\n     * @type {?Object}\n     * @export\n     */\n    this.wmsCapabilities = null;\n\n    /**\n     * Current WTMS Capabilities that were connected.\n     * @type {?Object}\n     * @export\n     */\n    this.wmtsCapabilities = null;\n\n    /**\n     * @type {Bloodhound|undefined}\n     * @private\n     */\n    this.serversEngine_;\n\n    const servers = $injector.has('gmfExternalOGCServers') ?\n      /** @type {Array.<!gmfx.ExternalOGCServer>|undefined} */ (\n        $injector.get('gmfExternalOGCServers')\n      ) : undefined;\n\n    if (servers) {\n      const serverUrls = servers.map(server => server['url']);\n      this.serversEngine_ = new Bloodhound({\n        /**\n         * Allows search queries to match from string from anywhere within\n         * the url, and not only from the beginning of the string (which is\n         * the default, non-configurable behaviour of bloodhound).\n         *\n         * Borrowed from:\n         * https://stackoverflow.com/questions/22059933/twitter-typeahead-js-how-to-return-all-matched-elements-within-a-string\n         *\n         * @param {BloodhoundDatum} datum Datum.\n         * @return {Array.<string>} List of datum tokenizers.\n         */\n        datumTokenizer: (datum) => {\n          googAsserts.assertString(datum);\n          const originalDatumTokenizers = Bloodhound.tokenizers.whitespace(\n            datum);\n          googAsserts.assert(originalDatumTokenizers);\n          const datumTokenizers = [];\n          for (const originalDatumTokenizer of originalDatumTokenizers) {\n            let i = 0;\n            while ((i + 1) < originalDatumTokenizer.length) {\n              datumTokenizers.push(\n                originalDatumTokenizer.substr(\n                  i,\n                  originalDatumTokenizer.length\n                )\n              );\n              i++;\n            }\n          }\n          return datumTokenizers;\n        },\n        queryTokenizer: Bloodhound.tokenizers.whitespace,\n        identify: false,\n        local: serverUrls\n      });\n    }\n\n    // Register input[type=file] onchange event, use HTML5 File api\n    this.fileInput_.on('change', () => {\n      this.file = this.fileInput_[0].files && this.fileInput_[0].files[0] ?\n        this.fileInput_[0].files[0] : undefined;\n      this.scope_.$apply();\n    });\n  }\n\n  /**\n   * Called on initialization of the component.\n   */\n  $onInit() {\n    this.gmfExternalDataSourcesManager_.map = this.map;\n\n\n    if (this.serversEngine_) {\n      // Timeout to let Angular render the placeholder of the input properly,\n      // otherwise typeahead would copy the string with {{}} in it...\n      this.timeout_(() => {\n        googAsserts.assert(this.serversEngine_);\n        const $urlInput = this.element_.find('input[name=url]');\n        const $connectBtn = this.element_.find('button.gmf-importdatasource-connect-btn');\n        $urlInput.typeahead({\n          hint: true,\n          highlight: true,\n          minLength: 1\n        }, {\n          name: 'url',\n          source: this.serversEngine_.ttAdapter()\n        }).bind('typeahead:select', (ev, suggestion) => {\n          this.timeout_(() => {\n            this.url = suggestion;\n            this.scope_.$apply();\n            $connectBtn.focus();\n          });\n        });\n      });\n    }\n  }\n\n  /**\n   * Triggers a 'click' on the \"Browse\" button.\n   * @export\n   */\n  browse() {\n    this.element_.find('input[type=file][name=file]').click();\n  }\n\n  /**\n   * Connect to given online resource URL.\n   * @export\n   */\n  connect() {\n    const url = googAsserts.assertString(this.url);\n    const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n    this.startWorking_();\n    if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n      this.ngeoQuerent_.wmsGetCapabilities(url).then(\n        (wmsCapabilities) => {\n          this.wmsCapabilities = wmsCapabilities;\n          this.stopWorking_();\n        },\n        () => {\n          // Something went wrong...\n          this.stopWorking_(true);\n        }\n      );\n    } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n      this.ngeoQuerent_.wmtsGetCapabilities(url).then(\n        (wmtsCapabilities) => {\n          this.wmtsCapabilities = wmtsCapabilities;\n          this.stopWorking_();\n        },\n        () => {\n          // Something went wrong...\n          this.stopWorking_(true);\n        }\n      );\n    } else {\n      // Could not determine the type of url\n      this.timeout_(() => {\n        this.stopWorking_(true);\n      });\n    }\n  }\n\n  /**\n   * Create data source from file.\n   * @export\n   */\n  load() {\n    const file = googAsserts.assert(this.file);\n    this.gmfExternalDataSourcesManager_.createAndAddDataSourceFromFile(file);\n  }\n\n  /**\n   * @return {string} The name of the file and human-readable size.\n   * @export\n   */\n  get fileNameAndSize() {\n    let nameAndSize = '';\n\n    const file = this.file;\n    if (file !== undefined) {\n      const fileSize = this.unitPrefixFormat_(file.size, 'o');\n      nameAndSize = `${file.name}, ${fileSize}`;\n    }\n\n    return nameAndSize;\n  }\n\n\n  // === Private methods ===\n\n  /**\n   * @private\n   */\n  startWorking_() {\n    this.pending = true;\n    this.hasError = false;\n\n    // Clear any previous objects\n    this.wmsCapabilities = null;\n    this.wmtsCapabilities = null;\n  }\n\n  /**\n   * @param {boolean=} opt_hasError Whether we stopped working because of after\n   *     an error.\n   * @private\n   */\n  stopWorking_(opt_hasError = false) {\n    this.pending = false;\n    if (opt_hasError) {\n      this.hasError = true;\n      if (this.hasErrorPromise_) {\n        this.timeout_.cancel(this.hasErrorPromise_);\n      }\n      this.hasErrorPromise_ = this.timeout_(() => {\n        this.hasError = false;\n        this.hasErrorPromise_ = null;\n      }, 3000);\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.Controller_.Mode = {\n  LOCAL: 'Local',\n  ONLINE: 'Online'\n};\n\n\nexports.component('gmfImportdatasource', {\n  bindings: {\n    'map': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfImportdatasourceTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.import.module\n */\nimport gmfImportImportdatasourceComponent from 'gmf/import/importdatasourceComponent.js';\nimport gmfImportWmsCapabilityLayertreeComponent from 'gmf/import/wmsCapabilityLayertreeComponent.js';\nimport gmfImportWmtsCapabilityLayertreeComponent from 'gmf/import/wmtsCapabilityLayertreeComponent.js';\n\nimport './import.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfImportModule', [\n  gmfImportImportdatasourceComponent.name,\n  gmfImportWmsCapabilityLayertreeComponent.name,\n  gmfImportWmtsCapabilityLayertreeComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.search.searchDirective\n */\n\n/**\n * Provides the \"ngeoSearch\" directive, which uses Twitter's\n * typeahead component to change an input text into a search field.\n *\n * Example:\n *\n *      <input type=\"text\"\n *        ngeo-search=\"ctrl.typeaheadOptions\"\n *        ngeo-search-datasets=\"ctrl.typeaheadDatasets\"\n *        ngeo-search-listeners=\"crtl.typeaheadListeners\">\n *\n * See our live example: [../examples/search.html](../examples/search.html)\n *\n * @htmlAttribute {TypeaheadOptions} ngeo-search The options.\n * @htmlAttribute {Array.<TypeaheadDataset>} ngeo-search-datasets The sources datasets.\n * @htmlAttribute {ngeox.SearchDirectiveListeners} ngeo-search-listeners The listeners.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoSearch\n */\nconst exports = function() {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const typeaheadOptionsExpr = attrs['ngeoSearch'];\n      const typeaheadOptions = /** @type {TypeaheadOptions} */\n              (scope.$eval(typeaheadOptionsExpr));\n\n      const typeaheadDatasetsExpr = attrs['ngeoSearchDatasets'];\n      const typeaheadDatasets = /** @type {Array.<TypeaheadDataset>} */\n              (scope.$eval(typeaheadDatasetsExpr));\n\n      const args = typeaheadDatasets.slice();\n      args.unshift(typeaheadOptions);\n\n      element.typeahead(...args);\n\n      const typeaheadListenersExpr = attrs['ngeoSearchListeners'];\n      const typeaheadListeners_ =\n              /** @type {ngeox.SearchDirectiveListeners} */\n              (scope.$eval(typeaheadListenersExpr));\n\n      /**\n       * @type {ngeox.SearchDirectiveListeners}\n       */\n      const typeaheadListeners = exports.adaptListeners_(\n        typeaheadListeners_);\n\n      element.on('typeahead:open', () => {\n        scope.$apply(() => {\n          typeaheadListeners.open();\n        });\n      });\n\n      element.on('typeahead:close', () => {\n        scope.$apply(() => {\n          typeaheadListeners.close();\n        });\n      });\n\n      element.on('typeahead:cursorchange',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.cursorchange(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:select',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.select(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:autocomplete',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.autocomplete(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:asyncreceive',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {TypeaheadDataset} dataset Dataset.\n         * @param {string} query Query.\n         */\n        (event, dataset, query) => {\n          scope.$apply(() => {\n            const empty = element.data('tt-typeahead')['menu']['_allDatasetsEmpty']();\n            typeaheadListeners.datasetsempty(event, query, empty);\n          });\n        });\n\n    }\n  };\n};\n\n\n/**\n * Create a real ngeox.SearchDirectiveListeners object out of the object\n * returned by $eval.\n * @param {ngeox.SearchDirectiveListeners} object Object.\n * @return {ngeox.SearchDirectiveListeners} The listeners object.\n * @private\n */\nexports.adaptListeners_ = function(object) {\n  /** @type {ngeox.SearchDirectiveListeners} */\n  let typeaheadListeners;\n  if (object === undefined) {\n    typeaheadListeners = {\n      open() {},\n      close() {},\n      cursorchange() {},\n      datasetsempty() {},\n      select() {},\n      autocomplete() {}\n    };\n  } else {\n    typeaheadListeners = {\n      open: object.open !== undefined ?\n        object.open : () => {},\n      close: object.close !== undefined ?\n        object.close : () => {},\n      cursorchange: object.cursorchange !== undefined ?\n        object.cursorchange : () => {},\n      datasetsempty: object.datasetsempty !== undefined ?\n        object.datasetsempty : () => {},\n      select: object.select !== undefined ?\n        object.select : () => {},\n      autocomplete: object.autocomplete !== undefined ?\n        object.autocomplete : () => {}\n    };\n  }\n  return typeaheadListeners;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSearchDirective', []);\n\n\n// Register the directive in the module\nexports.module.directive('ngeoSearch', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.search.createGeoJSONBloodhound\n */\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olObj from 'ol/obj.js';\n\nimport 'corejs-typeahead';\n\n\n/**\n * @param {string} url an URL to a search service.\n * @param {(function(GeoJSONFeature): boolean)=} opt_filter function to filter\n *     results.\n * @param {ol.proj.Projection=} opt_featureProjection Feature projection.\n * @param {ol.proj.Projection=} opt_dataProjection Data projection.\n * @param {BloodhoundOptions=} opt_options optional Bloodhound options. If\n *     undefined, the default Bloodhound config will be used.\n * @param {BloodhoundRemoteOptions=} opt_remoteOptions optional Bloodhound\n * remote options. Effective only if `remote` is not defined in `opt_options`.\n * @return {Bloodhound} The Bloodhound object.\n */\nconst exports = function(url, opt_filter, opt_featureProjection,\n  opt_dataProjection, opt_options, opt_remoteOptions) {\n  const geojsonFormat = new olFormatGeoJSON();\n  const bloodhoundOptions = /** @type {BloodhoundOptions} */ ({\n    remote: {\n      url,\n      prepare(query, settings) {\n        settings.url = settings.url.replace('%QUERY', query);\n        return settings;\n      },\n      transform(parsedResponse) {\n        /** @type {GeoJSONFeatureCollection} */\n        let featureCollection = /** @type {GeoJSONFeatureCollection} */\n            (parsedResponse);\n        if (opt_filter !== undefined) {\n          featureCollection = /** @type {GeoJSONFeatureCollection} */ ({\n            type: 'FeatureCollection',\n            features: featureCollection.features.filter(opt_filter)\n          });\n        }\n\n        return geojsonFormat.readFeatures(featureCollection, {\n          featureProjection: opt_featureProjection,\n          dataProjection: opt_dataProjection\n        });\n      }\n    },\n    // datumTokenizer is required by the Bloodhound constructor but it\n    // is not used when only a remote is passsed to Bloodhound.\n    datumTokenizer: () => {},\n    queryTokenizer: Bloodhound.tokenizers.whitespace\n  });\n\n  // the options objects are cloned to avoid updating the passed object\n  const options = olObj.assign({}, opt_options || {});\n  const remoteOptions = olObj.assign({}, opt_remoteOptions || {});\n\n  if (options.remote) {\n    // move the remote options to opt_remoteOptions\n    olObj.assign(remoteOptions, options.remote);\n    delete options.remote;\n  }\n\n  olObj.assign(bloodhoundOptions, options);\n  olObj.assign(bloodhoundOptions.remote, remoteOptions);\n\n  return new Bloodhound(bloodhoundOptions);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSearchCreategeojsonbloodhound', []);\n\nexports.module.value(\n  'ngeoSearchCreateGeoJSONBloodhound',\n  exports);\n\n\n/**\n * Provides a function that creates a Bloodhound engine\n * expecting GeoJSON responses from the search web service, which creates\n * `ol.Feature` objects as suggestions.\n *\n * Example:\n *\n *     let bloodhound = createGeoJSONBloodhound(\n *       'http://example.com/fulltextsearch?query=%QUERY',\n *       aFilterFunction,\n *       ol.proj.get('EPSG:3857'));\n *     bloodhound.initialize();\n *\n *     let bloodhound = createGeoJSONBloodhound(\n *       '',\n *       undefined,\n *       ol.proj.get('EPSG:3857'),\n *       ol.proj.get('EPSG:21781'),\n *       {\n *         remote: {\n *           url: mySearchEngineUrl,\n *           replace: function(url, query) {\n *             return url +\n *                 '?qtext=' + encodeURIComponent(query) +\n *                 '&lang=' + gettextCatalog.currentLanguage;\n *           }\n *         }\n *       }\n *     );\n *     bloodhound.initialize();\n *\n * @typedef {function(string, (function(GeoJSONFeature): boolean)=,\n * ol.proj.Projection=, ol.proj.Projection=, BloodhoundOptions=,\n * BloodhoundRemoteOptions=):Bloodhound}\n * @ngdoc service\n * @ngname search.createGeoJSONBloodhound\n */\nexports.Function;\n\n\nexport default exports;\n","/**\n * @module ngeo.search.createLocationSearchBloodhound\n */\nimport * as olObj from 'ol/obj.js';\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olFeature from 'ol/Feature.js';\n\nimport 'corejs-typeahead';\n\n\n/**\n * @param {ngeox.search.LocationSearchOptions=} opt_options Options.\n * @return {Bloodhound} The Bloodhound object.\n */\nconst exports = function(opt_options) {\n  const options = opt_options || {};\n\n  const sourceProjection = olProj.get(ngeoProjEPSG21781);\n  const targetProjection = options.targetProjection;\n\n  /**\n   * @param {string} bbox Bbox string.\n   * @return {?ol.Extent} Parsed extent.\n   */\n  const parseBbox = (bbox) => {\n    const regex = /BOX\\((.*?) (.*?),(.*?) (.*?)\\)/g;\n    const match = regex.exec(bbox);\n    if (match !== null) {\n      return [\n        parseFloat(match[1]),\n        parseFloat(match[2]),\n        parseFloat(match[3]),\n        parseFloat(match[4])\n      ];\n    } else {\n      return null;\n    }\n  };\n\n  const removeHtmlTags = label => label.replace(/<\\/?[ib]>/g, '');\n\n  const extractName = (label) => {\n    const regex = /<b>(.*?)<\\/b>/g;\n    const match = regex.exec(label);\n    if (match !== null) {\n      return match[1];\n    } else {\n      return label;\n    }\n  };\n\n  const bloodhoundOptions = /** @type {BloodhoundOptions} */ ({\n    remote: {\n      url: 'https://api3.geo.admin.ch/rest/services/api/SearchServer?type=locations&searchText=%QUERY',\n      prepare: (query, settings) => {\n        settings.url = settings.url.replace('%QUERY', query);\n        if (options.limit !== undefined) {\n          settings.url += `&limit=${options.limit}`;\n        }\n        if (options.origins !== undefined) {\n          settings.url += `&origins=${options.origins}`;\n        }\n\n        return (options.prepare !== undefined) ?\n          options.prepare(query, settings) : settings;\n      },\n      transform: (/** @type {geoAdminx.SearchLocationResponse} */ parsedResponse) => {\n        const features = parsedResponse.results.map((/** @type {geoAdminx.SearchLocationResult} */ result) => {\n          const attrs = result.attrs;\n\n          // note that x and y are switched!\n          const point = new olGeomPoint([attrs.y, attrs.x]);\n          let bbox = parseBbox(attrs.geom_st_box2d);\n          if (targetProjection !== undefined) {\n            point.transform(sourceProjection, targetProjection);\n            if (bbox !== null) {\n              bbox = olProj.transformExtent(bbox, sourceProjection, targetProjection);\n            }\n          }\n\n          attrs['geometry'] = point;\n          attrs['bbox'] = bbox;\n\n          // create a label without HTML tags\n          const label = attrs.label;\n          attrs['label_no_html'] = removeHtmlTags(label);\n          attrs['label_simple'] = extractName(label);\n\n          const feature = new olFeature(attrs);\n          feature.setId(attrs.featureId);\n\n          return feature;\n        });\n\n        return features;\n      }\n    },\n    // datumTokenizer is required by the Bloodhound constructor but it\n    // is not used when only a remote is passsed to Bloodhound.\n    datumTokenizer: () => {},\n    queryTokenizer: Bloodhound.tokenizers.whitespace\n  });\n\n  // the options objects are cloned to avoid updating the passed object\n  const bhOptions = olObj.assign({}, options.options || {});\n  const remoteOptions = olObj.assign({}, options.remoteOptions || {});\n\n  if (bhOptions.remote) {\n    // move the remote options to opt_remoteOptions\n    olObj.assign(remoteOptions, bhOptions.remote);\n    delete bhOptions.remote;\n  }\n\n  olObj.assign(bloodhoundOptions, bhOptions);\n  olObj.assign(bloodhoundOptions.remote, remoteOptions);\n\n  return new Bloodhound(bloodhoundOptions);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoCreateLocationSearchBloodhound', []);\n\nexports.module.value(\n  'ngeoCreateLocationSearchBloodhound',\n  exports);\n\n\n/**\n * Provides a function that creates a Bloodhound engine\n * for the GeoAdmin Location Search API, which creates `ol.Feature` objects\n * as suggestions.\n *\n * See: http://api3.geo.admin.ch/services/sdiservices.html#search\n *\n * Example:\n *\n *     let bloodhound = ngeoCreateLocationSearchBloodhound({\n *       targetProjection: ol.proj.get('EPSG:3857'),\n *       limit: 10\n *     });\n *     bloodhound.initialize();\n *\n * @typedef {function(ngeox.search.LocationSearchOptions=):Bloodhound}\n * @ngdoc service\n * @ngname search.createLocationSearchBloodhound\n */\nexports.Function;\n\n\nexport default exports;\n","/**\n * @module ngeo.search.module\n */\nimport ngeoSearchSearchDirective from 'ngeo/search/searchDirective.js';\nimport ngeoSearchCreateGeoJSONBloodhound from 'ngeo/search/createGeoJSONBloodhound.js';\nimport ngeoSearchCreateLocationSearchBloodhound from 'ngeo/search/createLocationSearchBloodhound.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoSearchModule', [\n  ngeoSearchSearchDirective.module.name,\n  ngeoSearchCreateGeoJSONBloodhound.module.name,\n  ngeoSearchCreateLocationSearchBloodhound.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.profile.d3Elevation\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olObj from 'ol/obj.js';\n\nimport 'd3-transition';\nimport {bisector, extent} from 'd3-array';\nimport {axisBottom, axisLeft} from 'd3-axis';\nimport {scaleLinear} from 'd3-scale';\nimport {mouse, select, selectAll} from 'd3-selection';\nimport {area, line} from 'd3-shape';\nconst d3 = {\n  bisector,\n  extent,\n  axisBottom,\n  axisLeft,\n  scaleLinear,\n  mouse,\n  select,\n  selectAll,\n  area,\n  line,\n};\n\n\n/**\n * Provides a D3js component to be used to draw an elevation\n * profile chart.\n *\n *     let selection = d3.select('#element_id');\n *     let profile = ngeo.profile.d3Elevation({\n *       distanceExtractor: function (item) {return item['dist'];},\n *       linesConfiguration: {\n *         'lineZ1': {\n *           zExtractor: function (item) {return item['values']['z1'];}\n *         },\n *         'lineZ2': {\n *           color: '#00F',\n *           zExtractor: function (item) {return item['values']['z2'];}\n *         }\n *       },\n *       hoverCallback: function(point, dist, xUnits, elevations, yUnits) {\n *         console.log(point.x, point.y);\n *       },\n *       outCallback: function() {\n *         console.log(\"out\");\n *       }\n *     });\n *     selection.datum(data).call(profile);\n *\n * The selection data must be an array.\n * The layout for the items of this array is unconstrained: the distance values\n * is extracted using the distanceExtractor config option and multiples z values\n * can be displayed by providing multiple linesConfiguration with its specific\n * zExtractor.\n * Optionally you can provide a color in your linesConfiguration. A line without\n * color will be red. Each linesConfiguration name is used as class for its\n * respective line. So you can pass a styleDefs config option (inline css) to\n * customize the line or all the chart.\n * Optionally, POIs can be displayed and depend on a poiExtractor\n * config option.\n *\n * The data below will work for the above example:\n *\n *     [\n *         {\n *             \"y\": 199340,\n *             \"values\": {\"z1\": 788.7, \"z2\": 774.2},\n *             \"dist\": 0.0,\n *             \"x\": 541620\n *         }, ...\n *     ]\n *\n * @return {Object} D3js component.\n * @param {ngeox.profile.ProfileOptions} options Profile options.\n * @export\n */\nconst exports = function(options) {\n  /**\n   * Whether the simplified profile should be shown.\n   * @type {boolean}\n   */\n  const light = options.light !== undefined ? options.light : false;\n\n\n  /**\n   * The values for margins around the chart defined in pixels.\n   */\n  const margin = light ? {top: 0, right: 0, bottom: 0, left: 0} :\n    {top: 10, right: 20, bottom: 30, left: 40};\n\n  /**\n   * Hover callback function.\n   * @type {function(Object, number, string, Object.<string, number>, string)}\n   */\n  const hoverCallback = options.hoverCallback !== undefined ?\n    options.hoverCallback : () => {};\n\n  /**\n   * Out callback function.\n   * @type {function()}\n   */\n  const outCallback = options.outCallback !== undefined ?\n    options.outCallback : () => {};\n\n  /**\n   * Distance data extractor used to get the dist values.\n   */\n  const distanceExtractor = options.distanceExtractor;\n\n  /**\n   * Line configuration object.\n   */\n  const linesConfiguration = options.linesConfiguration;\n\n  /**\n   * Number of different configurations for the line.\n   */\n  const numberOfLines = Object.keys(linesConfiguration).length;\n\n  /**\n   * Method to get the coordinate in pixels from a distance.\n   */\n  const bisectDistance = d3.bisector(d => distanceExtractor(d)).left;\n\n  /**\n   * POI data extractor.\n   */\n  const poiExtractor = options.poiExtractor;\n\n  /**\n   * Optional SVG inline style.\n   */\n  const styleDefs = options.styleDefs;\n\n  /**\n   * @type {number}\n   */\n  const poiLabelAngle = options.poiLabelAngle !== undefined ?\n    options.poiLabelAngle : -60;\n\n  /**\n   * @type {Object.<string, string>}\n   */\n  const i18n = options.i18n || {};\n\n  /**\n   * @type {string}\n   */\n  const xAxisLabel = (i18n.xAxis || 'Distance');\n\n  /**\n   * @type {string}\n   */\n  const yAxisLabel = (i18n.yAxis || 'Elevation');\n\n  /**\n   * @type {ngeox.profile.ProfileFormatter}\n   */\n  const formatter = {\n    /**\n     * @param {number} dist Distance.\n     * @param {string} units Units.\n     * @return {string} Distance.\n     */\n    xhover(dist, units) {\n      return `${parseFloat(dist.toPrecision(3))} ${units}`;\n    },\n    /**\n     * @param {number} ele Elevation.\n     * @param {string} units Units.\n     * @return {string} Elevation.\n     */\n    yhover(ele, units) {\n      return `${Math.round(ele)} m`;\n    },\n    /**\n     * @param {number} dist Distance.\n     * @param {string} units Units.\n     * @return {string|number} Distance.\n     */\n    xtick(dist, units) {\n      return dist;\n    },\n    /**\n     * @param {number} ele Elevation.\n     * @param {string} units Units.\n     * @return {string|number} Elevation.\n     */\n    ytick(ele, units) {\n      return ele;\n    }\n  };\n\n  if (options.formatter !== undefined) {\n    olObj.assign(formatter, options.formatter);\n  }\n\n  /**\n   * @type {boolean}\n   */\n  const lightXAxis = options.lightXAxis !== undefined ? options.lightXAxis : false;\n\n  // Objects shared with the showPois function\n  /**\n   * @type {Object}\n   */\n  let svg;\n\n  /**\n   * D3 x scale.\n   */\n  let x;\n\n  /**\n   * D3 y scale.\n   */\n  let y;\n\n  /**\n   * Scale modifier to allow customizing the x and y scales.\n   */\n  const scaleModifier = options.scaleModifier;\n\n  let g;\n\n  /**\n   * Height of the chart in pixels\n   */\n  let height;\n\n  /**\n   * Width of the chart in pixels\n   */\n  let width;\n\n  /**\n  * Factor to determine whether to use 'm' or 'km'.\n  */\n  let xFactor;\n\n  /**\n  * Distance units. Either 'm' or 'km'.\n  */\n  let xUnits;\n\n  /**\n   * D3 extent of the distance.\n   */\n  let xDomain;\n\n\n  const profile = function(selection) {\n    selection.each(function(data) {\n      d3.select(this).selectAll('svg').remove();\n      if (data === undefined) {\n        return;\n      }\n\n      width = Math.max(this.clientWidth - margin.right - margin.left, 0);\n      x = d3.scaleLinear().range([0, width]);\n\n      height = Math.max(this.clientHeight - margin.top - margin.bottom, 0);\n      y = d3.scaleLinear().range([height, 0]);\n\n      const xAxis = d3.axisBottom(x);\n      const yAxis = d3.axisLeft(y);\n\n      let area;\n      if (numberOfLines === 1) {\n        area = d3.area()\n          .x(d => x(distanceExtractor(d)))\n          .y0(height)\n          .y1((d) => {\n            const firstLineName =  Object.keys(linesConfiguration)[0];\n            return y(linesConfiguration[firstLineName].zExtractor(d));\n          });\n      }\n\n      // Select the svg element, if it exists.\n      svg = d3.select(this).selectAll('svg').data([data]);\n      // Otherwise, create the skeletal chart.\n      const svgEnter = svg.enter().append('svg');\n      // Then select it again to get the complete object.\n      svg = d3.select(this).selectAll('svg').data([data]);\n\n      if (styleDefs !== undefined) {\n        svgEnter.append('defs').append('style')\n          .attr('type', 'text/css')\n          .text(styleDefs);\n      }\n      const gEnter = svgEnter.append('g');\n\n      clearPois();\n\n      gEnter.style('font', '11px Arial');\n\n      if (numberOfLines === 1) {\n        gEnter.append('path').attr('class', 'area')\n          .style('fill', 'rgba(222, 222, 222, 0.5)');\n      }\n\n      gEnter.insert('g', ':first-child')\n        .attr('class', 'grid-y');\n\n      if (!light) {\n        gEnter.append('g')\n          .attr('class', 'x axis')\n          .attr('transform', `translate(0,${height})`);\n\n        gEnter.append('text')\n          .attr('class', 'x label')\n          .attr('text-anchor', 'end')\n          .attr('x', width - 4)\n          .attr('y', height - 4);\n\n        gEnter.append('g')\n          .attr('class', 'y axis');\n\n        gEnter.append('text')\n          .attr('class', 'y label')\n          .attr('text-anchor', 'end')\n          .attr('y', 6)\n          .attr('dy', '.75em')\n          .attr('transform', 'rotate(-90)')\n          .style('fill', 'grey')\n          .text(`${yAxisLabel} [m]`);\n\n        gEnter.append('g')\n          .attr('class', 'metas')\n          .attr('transform', `translate(${width + 3}, 0)`);\n      }\n\n      gEnter.append('g').attr('class', 'pois');\n\n      const xHover = gEnter.append('g').attr('class', 'x grid-hover');\n      xHover.append('svg:line').attr('stroke-dasharray', '5,5');\n      xHover.append('text');\n\n      gEnter.append('rect')\n        .attr('class', 'overlay')\n        .attr('width', width)\n        .attr('height', height)\n        .style('fill', 'none')\n        .style('pointer-events', 'all');\n\n      // Update the outer dimensions.\n      svg.attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom);\n\n      // Update the inner dimensions.\n      g = svg.select('g')\n        .attr('transform', `translate(${margin.left},${\n          margin.top})`);\n\n      xDomain = d3.extent(data, d => distanceExtractor(d));\n      x.domain(xDomain);\n\n      // Return an array with the min and max value of the min/max values of\n      // each lines.\n      const yDomain = function() {\n        let elevationsValues = [];\n        let extent, name;\n        // Get min/max values (extent) of each lines.\n        for (name in linesConfiguration) {\n          extent = d3.extent(data, d => linesConfiguration[name].zExtractor(d));\n          elevationsValues = elevationsValues.concat(extent);\n        }\n        return [\n          Math.min.apply(null, elevationsValues),\n          Math.max.apply(null, elevationsValues)\n        ];\n      }();\n\n      y.domain(yDomain);\n\n      // set the ratio according to the horizontal distance\n      if (scaleModifier !== undefined) {\n        scaleModifier(x, y, width, height);\n      } else {\n        // By default, add a small padding so that it looks nicer\n        const padding = (yDomain[1] - yDomain[0]) * 0.1;\n        y.domain([yDomain[0] - padding, yDomain[1] + padding]);\n      }\n\n      // Update the area path.\n      if (numberOfLines === 1) {\n        g.select('.area')\n          .transition()\n          .attr('d', area);\n      }\n\n      // Set style and update the lines paths and y hover guides for each lines.\n      let line, name, yHover;\n      for (name in linesConfiguration) {\n        // Set style of each line and add a class with its respective name.\n        gEnter.append('path').attr('class', `line ${name}`)\n          .style('stroke', linesConfiguration[name].color || '#F00')\n          .style('fill', 'none');\n\n        // Set y hover guides\n        yHover = gEnter.append('g').attr('class', `y grid-hover ${name}`);\n        yHover.append('svg:line').attr('stroke-dasharray', '5,5');\n        yHover.append('text');\n\n        // Configure the d3 line.\n        line = d3.line()\n          .x(d => x(distanceExtractor(d)))\n          .y(d => y(linesConfiguration[name].zExtractor(d)));\n\n        // Update path for the line.\n        g.select(`.line.${name}`)\n          .transition()\n          .attr('d', line);\n      }\n\n      if (xDomain[1] > 2000) {\n        xFactor = 1000;\n        xUnits = 'km';\n      } else {\n        xFactor = 1;\n        xUnits = 'm';\n      }\n\n      if (!light) {\n        xAxis.tickFormat(d => formatter.xtick(d / xFactor, xUnits));\n        if (lightXAxis) {\n          xAxis.tickValues([0, x.domain()[1]]);\n        }\n\n        yAxis.tickFormat(d => formatter.ytick(d, 'm'));\n\n        g.select('.x.axis')\n          .transition()\n          .call(xAxis);\n\n        g.select('.x.label')\n          .text(`${xAxisLabel} [${xUnits}]`)\n          .style('fill', 'grey')\n          .style('shape-rendering', 'crispEdges');\n\n        // Avoid too much lines with overlapping labels in small profiles\n        if (height / 15 < 10) {\n          yAxis.ticks(height / 15);\n        }\n\n        g.select('.y.axis')\n          .transition()\n          .call(yAxis);\n      }\n\n      g.select('.grid-y')\n        .transition()\n        .call(yAxis.tickSize(-width, 0).tickFormat(''))\n        .selectAll('.tick line')\n        .style('stroke', '#ccc')\n        .style('opacity', 0.7);\n\n      g.selectAll('.axis').selectAll('path, line')\n        .style('fill', 'none')\n        .style('stroke', '#000')\n        .style('shape-rendering', 'crispEdges');\n\n      g.select('.grid-y').select('path')\n        .style('stroke', 'none');\n\n      g.selectAll('.grid-hover line')\n        .style('stroke', '#222')\n        .style('opacity', 0.8);\n\n      g.select('.overlay')\n        .on('mouseout', mouseout)\n        .on('mousemove', mousemove);\n\n      function mousemove() {\n        const mouseX = d3.mouse(this)[0];\n        const x0 = x.invert(mouseX);\n\n        profile.highlight(x0);\n      }\n\n      function mouseout() {\n        profile.clearHighlight();\n      }\n    });\n  };\n\n  /**\n   * Remove any highlight.\n   * Fire the outCallback callback.\n   */\n  profile.clearHighlight = function() {\n    g.selectAll('.grid-hover')\n      .style('display', 'none');\n    outCallback.call(null);\n  };\n\n  /**\n   * Highlight the given distance and corresponding elevation on chart.\n   * Fire the hoverCallback callback with corresponding point.\n   * @param {number} distance Distance.\n   */\n  profile.highlight = function(distance) {\n    const data = svg.datum();\n    const i = bisectDistance(data, distance);\n    if (i >= data.length) {\n      return;\n    }\n\n    const point = data[i];\n    const dist = distanceExtractor(point);\n    let elevation;\n    const elevations = [];\n    const elevationsRef = {};\n    let lineName;\n\n    for (lineName in linesConfiguration) {\n      elevation = linesConfiguration[lineName].zExtractor(point);\n      elevations.push(elevation);\n      elevationsRef[lineName] = elevation;\n      g.select(`.y.grid-hover.${lineName}`)\n        .style('display', 'inline')\n        .select('line')\n        .attr('x1', x(0))\n        .attr('y1', y(elevation))\n        .attr('x2', width)\n        .attr('y2', y(elevation));\n    }\n\n    g.select('.x.grid-hover')\n      .style('display', 'inline')\n      .select('line')\n      .attr('x1', x(dist))\n      .attr('y1', height)\n      .attr('x2', x(dist))\n      .attr('y2', y(Math.max.apply(null, elevations)));\n\n    const right = dist > xDomain[1] / 2;\n    let xtranslate = x(dist);\n    xtranslate += right ? -10 : 10;\n\n    g.select('.x.grid-hover text')\n      .text(formatter.xhover(dist / xFactor, xUnits))\n      .style('text-anchor', right ? 'end' : 'start')\n      .attr('transform', `translate(${xtranslate},${\n        height - 10})`);\n\n    const yUnits = 'm';\n    // Display altitude on guides only if there is one line.\n    if (numberOfLines === 1) {\n      g.select('.y.grid-hover text')\n        .text(formatter.yhover(elevations[0], 'm'))\n        .style('text-anchor', right ? 'end' : 'start')\n        .attr('transform', `translate(${xtranslate},${\n          y(elevations[0]) - 10})`);\n    }\n    hoverCallback.call(null, point, dist / xFactor, xUnits, elevationsRef,\n      yUnits);\n  };\n\n\n  profile.showPois = function(pois) {\n    pois = pois !== undefined ? pois : [];\n    googAsserts.assert(pois.length === 0 || poiExtractor !== undefined);\n\n    const pe = poiExtractor;\n    const g = svg.select('g');\n    const profileData = svg.datum();\n    const ps = g.select('.pois');\n\n    const p = ps.selectAll('.poi').data(pois, (d) => {\n      const i = bisectDistance(profileData, Math.round(pe.dist(d) * 10) / 10, 1);\n      const point = profileData[i];\n      if (point) {\n        let lineName;\n        const elevations = [];\n        for (lineName in linesConfiguration) {\n          elevations.push(linesConfiguration[lineName].zExtractor(point));\n        }\n        const z = Math.max.apply(null, elevations);\n        pe.z(d, z);\n      }\n      return pe.id(d);\n    });\n\n    const poiEnterG = p.enter()\n      .append('g')\n      .attr('class', 'poi');\n\n    poiEnterG.append('text')\n      .attr('x', light ? 0 : 9)\n      .attr('dy', '.35em')\n      .attr('text-anchor', light ? 'middle' : 'start');\n\n    poiEnterG.append('line')\n      .style('shape-rendering', 'crispEdges');\n\n    poiEnterG.style('opacity', 0)\n      .transition()\n      .duration(1000)\n      .delay(100)\n      .style('opacity', 1);\n\n    poiEnterG.selectAll('text')\n      .attr('transform', (d) => {\n        if (light) {\n          return ['translate(',\n            x(pe.dist(d)), ',',\n            y(pe.z(d)) - 10, ')'\n          ].join('');\n        } else {\n          return ['translate(',\n            x(pe.dist(d)), ',',\n            y(pe.z(d)) - 20, ') rotate(', poiLabelAngle, ')'\n          ].join('');\n        }\n      })\n      .text(d => pe.sort(d) + (light ? '' : (` - ${pe.title(d)}`)));\n\n    poiEnterG.selectAll('line')\n      .style('stroke', 'grey')\n      .attr('x1', d => x(pe.dist(d)))\n      .attr('y1', d => y(y.domain()[0]))\n      .attr('x2', d => x(pe.dist(d)))\n      .attr('y2', d => y(pe.z(d)));\n\n    // remove unused pois\n    poiEnterG.exit().remove();\n  };\n\n  function clearPois() {\n    profile.showPois([]);\n  }\n\n\n  return profile;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.profile.elevationComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoProfileD3Elevation from 'ngeo/profile/d3Elevation.js';\n\nimport {select} from 'd3-selection';\nconst d3 = {\n  select,\n};\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoProfile', [\n  ngeoMiscDebounce.name\n]);\n\n\n/**\n * Provides a directive used to insert an elevation profile chart\n * in the DOM.\n *\n * Example:\n *\n *      <div ngeo-profile=\"ctrl.profileData\"\n *        ngeo-profile-options=\"ctrl.profileOptions\"\n *        ngeo-profile-pois=\"ctrl.profilePois\">\n *      </div>\n *\n * Where \"ctrl.profileOptions\" is of type {@link ngeox.profile.ProfileOptions};\n * \"ctrl.profileData\" and \"ctrl.profilePois\" are arrays which will be\n * processed by {@link ngeox.profile.ElevationExtractor} and\n * {@link ngeox.profile.PoiExtractor}.\n *\n * See our live example: [../examples/profile.html](../examples/profile.html)\n *\n * @htmlAttribute {?Object} ngeo-profile The profile data.\n * @htmlAttribute {ngeox.profile.ProfileOptions} ngeo-profile-options The options.\n * @htmlAttribute {?Array} ngeo-profile-pois The data for POIs.\n * @htmlAttribute {*} ngeo-profile-highlight Any property on the scope which\n * evaluated value may correspond to distance from origin.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoProfile\n */\nexports.directive_ = function(ngeoDebounce) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const optionsAttr = attrs['ngeoProfileOptions'];\n      googAsserts.assert(optionsAttr !== undefined);\n\n      const selection = d3.select(element[0]);\n      let profile, elevationData, poiData;\n\n      scope.$watchCollection(optionsAttr, (newVal) => {\n\n        const options = /** @type {ngeox.profile.ProfileOptions} */\n                (olObj.assign({}, newVal));\n\n        if (options !== undefined) {\n\n          // proxy the hoverCallback and outCallbackin order to be able to\n          // call $applyAsync\n          //\n          // We're using $applyAsync here because the callback may be\n          // called inside the Angular context. For example, it's the case\n          // when the user hover's the line geometry on the map and the\n          // profileHighlight property is changed.\n          //\n          // For that reason we use $applyAsync instead of $apply here.\n          if (options.hoverCallback !== undefined) {\n            const origHoverCallback = options.hoverCallback;\n            options.hoverCallback = function(...args) {\n              origHoverCallback(...args);\n              scope.$applyAsync();\n            };\n          }\n\n          if (options.outCallback !== undefined) {\n            const origOutCallback = options.outCallback;\n            options.outCallback = function() {\n              origOutCallback();\n              scope.$applyAsync();\n            };\n          }\n\n          profile = ngeoProfileD3Elevation(options);\n          refreshData();\n        }\n      });\n\n      scope.$watch(attrs['ngeoProfile'], (newVal, oldVal) => {\n        elevationData = newVal;\n        refreshData();\n      });\n\n      scope.$watch(attrs['ngeoProfilePois'], (newVal, oldVal) => {\n        poiData = newVal;\n        refreshData();\n      });\n\n      scope.$watch(attrs['ngeoProfileHighlight'],\n        (newVal, oldVal) => {\n          if (newVal === undefined) {\n            return;\n          }\n          if (newVal > 0) {\n            profile.highlight(newVal);\n          } else {\n            profile.clearHighlight();\n          }\n        });\n\n      olEvents.listen(window, 'resize', ngeoDebounce(refreshData, 50, true));\n\n      function refreshData() {\n        if (profile !== undefined) {\n          selection.datum(elevationData).call(profile);\n          if (elevationData !== undefined) {\n            profile.showPois(poiData);\n          }\n        }\n      }\n    }\n  };\n};\n\nexports.directive('ngeoProfile', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.profile.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olOverlay from 'ol/Overlay.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olObj from 'ol/obj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadCsv from 'ngeo/download/Csv.js';\n\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProfileElevationComponent from 'ngeo/profile/elevationComponent.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfProfile', [\n  ngeoDownloadCsv.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoProfileElevationComponent.name,\n]);\n\n\nexports.value('gmfProfileTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfProfileTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/profile';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/profile', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfProfileTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfProfileTemplateUrl($element, $attrs, gmfProfileTemplateUrl) {\n  return gmfProfileTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component that display a profile panel. This profile use the given\n * LineString geometry to request the c2cgeoportal profile.json service. The\n * raster used in the request are the keys of the 'linesconfiguration' object.\n * The 'map' attribute is optional and are only used to display on the map the\n * information that concern the hovered point (in the profile and on the map)\n * of the line.\n * This profile relies on the ngeo.profile (d3) and ngeo.ProfileComponent.\n *\n * Example:\n *\n *      <gmf-profile\n *        gmf-profile-active=\"ctrl.profileActive\"\n *        gmf-profile-line=\"ctrl.profileLine\"\n *        gmf-profile-map=\"::ctrl.map\"\n *        gmf-profile-linesconfiguration=\"::ctrl.profileLinesconfiguration\">\n *      </gmf-profile>\n *\n *\n * @htmlAttribute {boolean} gmf-profile-active Active the component.\n * @htmlAttribute {ol.geom.LineString} gmf-profile-line The linestring geometry\n *     to use to draw the profile.\n * @htmlAttribute {ol.Map?} gmf-profile-map An optional map.\n * @htmlAttribute {Object.<string, gmfx.ProfileLineConfiguration>}\n *     gmf-profile-linesconfiguration The configuration of the lines. Each keys\n *     will be used to request elevation layers.\n * @htmlAttribute {ol.style.Style?} gmf-profile-hoverpointstyle Optional style\n *     for the 'on Hover' point on the line.\n * @htmlAttribute {number?} gmf-profile-numberofpoints Optional maximum limit of\n *     points to request. Default to 100.\n * @htmlAttribute {Object.<string, *>?} gmf-profile-options Optional options\n *     object like {@link ngeox.profile.ProfileOptions} but without any\n *     mandatory value. Will be passed to the ngeo profile component. Providing\n *     'linesConfiguration', 'distanceExtractor', hoverCallback, outCallback\n *     or i18n will override native gmf profile values.\n *\n * @ngdoc component\n * @ngname gmfProfile\n */\nexports.component_ = {\n  controller: 'GmfProfileController as ctrl',\n  bindings: {\n    'active': '=gmfProfileActive',\n    'line': '=gmfProfileLine',\n    'getMapFn': '&?gmfProfileMap',\n    'getLinesConfigurationFn': '&gmfProfileLinesconfiguration',\n    'getHoverPointStyleFn': '&?gmfProfileHoverpointstyle',\n    'getNbPointsFn': '&?gmfProfileNumberofpoints',\n    'getOptionsFn': '&?gmfProfileOptions'\n  },\n  templateUrl: gmfProfileTemplateUrl\n};\n\nexports.component('gmfProfile', exports.component_);\n\n\n/**\n * @param {angular.Scope} $scope Angular scope.\n * @param {angular.$http} $http Angular http service.\n * @param {angular.JQLite} $element Element.\n * @param {angular.$filter} $filter Angular filter\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Feature overlay\n *     manager.\n * @param {string} gmfProfileJsonUrl URL of GMF service JSON profile.\n * @param {ngeo.download.Csv} ngeoCsvDownload CSV Download service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfProfileController\n */\nexports.Controller_ = function($scope, $http, $element, $filter,\n  gettextCatalog, ngeoFeatureOverlayMgr, gmfProfileJsonUrl,\n  ngeoCsvDownload) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {angular.$filter}\n   * @export\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.pointHoverOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.gmfProfileJsonUrl_ = gmfProfileJsonUrl;\n\n  /**\n   * @type {ngeo.download.Csv}\n   * @private\n   */\n  this.ngeoCsvDownload_ = ngeoCsvDownload;\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?Object<string, !gmfx.ProfileLineConfiguration>}\n   * @private\n   */\n  this.linesConfiguration_ = null;\n\n  /**\n   * @type {!Array.<string>}\n   * @private\n   */\n  this.layersNames_ = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.nbPoints_ = 100;\n\n  /**\n   * @type {ol.geom.LineString}\n   * @export\n   */\n  this.line;\n\n  /**\n   * @type {Array.<Object>}\n   * @export\n   */\n  this.profileData = [];\n\n  /**\n   * @type {gmfx.ProfileHoverPointInformations}\n   * @export\n   */\n  this.currentPoint = {\n    coordinate: undefined,\n    distance: undefined,\n    elevations: {},\n    xUnits: undefined,\n    yUnits: undefined\n  };\n\n  /**\n   * Distance to highlight on the profile. (Property used in ngeo.Profile.)\n   * @type {number}\n   * @export\n   */\n  this.profileHighlight = -1;\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltip_ = null;\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n  /**\n   * @type {ol.Feature}\n   * @private\n   */\n  this.snappedPoint_ = new olFeature();\n  this.pointHoverOverlay_.addFeature(this.snappedPoint_);\n\n  /**\n   * @type {ngeox.profile.I18n}\n   * @private\n   */\n  this.profileLabels_ = {\n    xAxis: gettextCatalog.getString('Distance'),\n    yAxis: gettextCatalog.getString('Elevation')\n  };\n\n\n  /**\n   * @type {?ngeox.profile.ProfileOptions}\n   * @export\n   */\n  this.profileOptions = null;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = false;\n\n  /**\n   * @type {ol.EventsKey}\n   * @private\n   */\n  this.pointerMoveKey_;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isErrored = false;\n\n\n  // Watch the active value to activate/deactive events listening.\n  $scope.$watch(\n    () => this.active,\n    (newValue, oldValue) => {\n      if (oldValue !== newValue) {\n        this.updateEventsListening_();\n      }\n    });\n\n  // Watch the line to update the profileData (data for the chart).\n  $scope.$watch(\n    () => this.line,\n    (newLine, oldLine) => {\n      if (oldLine !== newLine) {\n        this.update_();\n      }\n    });\n\n  this.updateEventsListening_();\n};\n\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.map_ = this['getMapFn'] ? this['getMapFn']() : null;\n  this.nbPoints_ = this['getNbPointsFn'] ? this['getNbPointsFn']() : 100;\n\n  let hoverPointStyle;\n  const hoverPointStyleFn = this['getHoverPointStyleFn'];\n  if (hoverPointStyleFn) {\n    hoverPointStyle = hoverPointStyleFn();\n    googAsserts.assertInstanceof(hoverPointStyle, olStyleStyle);\n  } else {\n    hoverPointStyle = new olStyleStyle({\n      image: new olStyleCircle({\n        fill: new olStyleFill({color: '#ffffff'}),\n        radius: 3\n      })\n    });\n  }\n  this.pointHoverOverlay_.setStyle(hoverPointStyle);\n\n  const linesConfiguration = this['getLinesConfigurationFn']();\n  googAsserts.assertInstanceof(linesConfiguration, Object);\n\n  this.linesConfiguration_ = linesConfiguration;\n\n  for (const name in this.linesConfiguration_) {\n    // Keep an array of all layer names.\n    this.layersNames_.push(name);\n    // Add generic zExtractor to lineConfiguration object that doesn't have one.\n    const lineConfig = this.linesConfiguration_[name];\n    if (!lineConfig.zExtractor) {\n      this.linesConfiguration_[name].zExtractor = this.getZFactory_(name);\n    }\n  }\n\n  this.profileOptions = /** @type {ngeox.profile.ProfileOptions} */ ({\n    linesConfiguration: this.linesConfiguration_,\n    distanceExtractor: this.getDist_,\n    hoverCallback: this.hoverCallback_.bind(this),\n    outCallback: this.outCallback_.bind(this),\n    i18n: this.profileLabels_\n  });\n\n  const optionsFn = this['getOptionsFn'];\n  if (optionsFn) {\n    const options = optionsFn();\n    googAsserts.assertObject(options);\n    olObj.assign(this.profileOptions, options);\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.update_ = function() {\n  this.isErrored = false;\n  if (this.line) {\n    this.getJsonProfile_();\n  } else {\n    this.profileData = [];\n  }\n  this.active = !!this.line;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateEventsListening_ = function() {\n  if (this.active && this.map_ !== null) {\n    this.pointerMoveKey_ = olEvents.listen(this.map_, 'pointermove',\n      this.onPointerMove_.bind(this));\n  } else {\n    olEvents.unlistenByKey(this.pointerMoveKey_);\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n * @private\n */\nexports.Controller_.prototype.onPointerMove_ = function(e) {\n  if (e.dragging || !this.line) {\n    return;\n  }\n  const coordinate = this.map_.getEventCoordinate(e.originalEvent);\n  const closestPoint = this.line.getClosestPoint(coordinate);\n  // compute distance to line in pixels\n  const eventToLine = new olGeomLineString([closestPoint, coordinate]);\n  const pixelDist = eventToLine.getLength() / this.map_.getView().getResolution();\n\n  if (pixelDist < 16) {\n    this.profileHighlight = this.getDistanceOnALine_(closestPoint, this.line);\n  } else {\n    this.profileHighlight = -1;\n  }\n  this.$scope_.$apply();\n};\n\n\n/**\n * Return the distance between the beginning of the line and the given point.\n * The point must be on the line. If not, this function will return the total\n * length of the line.\n * @param {ol.Coordinate} pointOnLine A point on the given line.\n * @param {ol.geom.LineString} line A line.\n * @return {number} A distance.\n * @private\n */\nexports.Controller_.prototype.getDistanceOnALine_ = function(pointOnLine,\n  line) {\n  let segment;\n  let distOnLine = 0;\n  const fakeExtent = [\n    pointOnLine[0] - 0.5,\n    pointOnLine[1] - 0.5,\n    pointOnLine[0] + 0.5,\n    pointOnLine[1] + 0.5\n  ];\n  this.line.forEachSegment((firstPoint, lastPoint) => {\n    segment = new olGeomLineString([firstPoint, lastPoint]);\n    // Is the pointOnLine on this swegement ?\n    if (segment.intersectsExtent(fakeExtent)) {\n      // If the closestPoint is on the line, add the distance between the first\n      // point of this segment and the pointOnLine.\n      segment.setCoordinates([firstPoint, pointOnLine]);\n      return distOnLine += segment.getLength(); // Assign value and break;\n    } else {\n      // Do the sum of the length of each eventual previous segment.\n      distOnLine += segment.getLength();\n    }\n  });\n  return distOnLine;\n};\n\n\n/**\n * @param {Object} point Point.\n * @param {number} dist distance on the line.\n * @param {string} xUnits X units label.\n * @param {Object.<string, number>} elevationsRef Elevations references.\n *  @param {string} yUnits Y units label.\n * @private\n */\nexports.Controller_.prototype.hoverCallback_ = function(point, dist, xUnits,\n  elevationsRef, yUnits) {\n  // Update information point.\n  let ref;\n  const coordinate = [point.x, point.y];\n  for (ref in elevationsRef) {\n    this.currentPoint.elevations[ref] = elevationsRef[ref];\n  }\n  this.currentPoint.distance = dist;\n  this.currentPoint.xUnits = xUnits;\n  this.currentPoint.yUnits = yUnits;\n  this.currentPoint.coordinate = coordinate;\n\n  // Update hover.\n  const geom = new olGeomPoint(coordinate);\n  this.createMeasureTooltip_();\n  this.measureTooltipElement_.innerHTML = this.getTooltipHTML_();\n  this.measureTooltip_.setPosition(coordinate);\n  this.snappedPoint_.setGeometry(geom);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.outCallback_ = function() {\n  // Reset information point.\n  this.currentPoint.coordinate = undefined;\n  this.currentPoint.distance = undefined;\n  this.currentPoint.elevations = {};\n  this.currentPoint.xUnits = undefined;\n  this.currentPoint.yUnits = undefined;\n\n  // Reset hover.\n  this.removeMeasureTooltip_();\n  this.snappedPoint_.setGeometry(null);\n};\n\n\n/**\n * @return {string} A texte formatted to a tooltip.\n * @private\n */\nexports.Controller_.prototype.getTooltipHTML_ = function() {\n  const separator = ' : ';\n  let elevationName, translatedElevationName;\n  const innerHTML = [];\n  const number = this.$filter_('number');\n  const DistDecimal = this.currentPoint.xUnits === 'm' ? 0 : 2;\n  innerHTML.push(\n    `${this.profileLabels_.xAxis +\n      separator +\n      number(this.currentPoint.distance, DistDecimal)\n    } ${\n      this.currentPoint.xUnits}`\n  );\n  for (elevationName in this.currentPoint.elevations) {\n    translatedElevationName = this.gettextCatalog_.getString(elevationName);\n    innerHTML.push(\n      `${translatedElevationName +\n        separator +\n        number(this.currentPoint.elevations[elevationName], 0)\n      } ${this.currentPoint.yUnits}`\n    );\n  }\n  return innerHTML.join('</br>');\n};\n\n\n/**\n * Creates a new 'hover' tooltip\n * @private\n */\nexports.Controller_.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.className += 'tooltip ngeo-tooltip-measure';\n  this.measureTooltip_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center'\n  });\n  this.map_.addOverlay(this.measureTooltip_);\n};\n\n\n/**\n * Destroy the 'hover' tooltip\n * @private\n */\nexports.Controller_.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(\n      this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.map_.removeOverlay(this.measureTooltip_);\n  }\n};\n\n\n/**\n * Return the color value of a gmfx.ProfileLineConfiguration.\n * @param {string} layerName name of the elevation layer.\n * @return {string|undefined} A HEX color or undefined is nothing is found.\n * @export\n */\nexports.Controller_.prototype.getColor = function(layerName) {\n  const lineConfiguration = this.linesConfiguration_[layerName];\n  if (!lineConfiguration) {\n    return undefined;\n  }\n  return lineConfiguration.color;\n};\n\n\n/**\n * Return a copy of the existing layer names.\n * @return {Array.<string>} The names of layers.\n * @export\n */\nexports.Controller_.prototype.getLayersNames = function() {\n  return this.layersNames_.slice(0);\n};\n\n\n/**\n * @param {string} layerName name of the elevation layer.\n * @return {function(Object):number} Z extractor function.\n * @private\n */\nexports.Controller_.prototype.getZFactory_ = function(layerName) {\n  /**\n   * Generic GMF extractor for the 'given' value in 'values' in profileData.\n   * @param {Object} item The item.\n   * @return {number} The elevation.\n   * @private\n   */\n  const getZFn = function(item) {\n    if ('values' in item && layerName in item['values']) {\n      return parseFloat(item['values'][layerName]);\n    }\n    return 0;\n  };\n  return getZFn;\n};\n\n\n/**\n * Extractor for the 'dist' value in profileData.\n * @param {Object} item The item.\n * @return {number} The distance.\n * @private\n */\nexports.Controller_.prototype.getDist_ = function(item) {\n  if ('dist' in item) {\n    return item['dist'];\n  }\n  return 0;\n};\n\n\n/**\n * Request the profile.\n * @private\n */\nexports.Controller_.prototype.getJsonProfile_ = function() {\n  const geom = {\n    'type': 'LineString',\n    'coordinates': this.line.getCoordinates()\n  };\n\n  const params = {\n    'layers': this.layersNames_.join(','),\n    'geom': JSON.stringify(geom),\n    'nbPoints': this.nbPoints_\n  };\n\n  /** @type {Function} */ (this.$http_)({\n    url: this.gmfProfileJsonUrl_,\n    method: 'POST',\n    params: params,\n    paramSerializer: '$httpParamSerializerJQLike',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n  }).then(\n    this.getProfileDataSuccess_.bind(this),\n    this.getProfileDataError_.bind(this)\n  );\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\nexports.Controller_.prototype.getProfileDataSuccess_ = function(resp) {\n  const profileData = resp.data['profile'];\n  if (profileData instanceof Array) {\n    this.profileData = profileData;\n  }\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\nexports.Controller_.prototype.getProfileDataError_ = function(resp) {\n  this.isErrored = true;\n  console.error('Can not get JSON profile.');\n};\n\n\n/**\n * Request the csv profile with the current profile data.\n * @export\n */\nexports.Controller_.prototype.downloadCsv = function() {\n  if (this.profileData.length === 0) {\n    return;\n  }\n\n  /** @type {Array.<ngeox.GridColumnDef>} */\n  const headers = [];\n  let hasDistance = false;\n  const firstPoint = this.profileData[0];\n  if ('dist' in firstPoint) {\n    headers.push({name: 'distance'});\n    hasDistance = true;\n  }\n  const layers = [];\n  for (const layer in firstPoint['values']) {\n    headers.push({'name': layer});\n    layers.push(layer);\n  }\n  headers.push({name: 'x'});\n  headers.push({name: 'y'});\n\n  const rows = this.profileData.map((point) => {\n    const row = {};\n    if (hasDistance) {\n      row['distance'] = point['dist'];\n    }\n\n    layers.forEach((layer) => {\n      row[layer] = point['values'][layer];\n    });\n\n    row['x'] = point['x'];\n    row['y'] = point['y'];\n\n    return row;\n  });\n\n  this.ngeoCsvDownload_.startDownload(rows, headers, 'profile.csv');\n};\n\n\nexports.controller('GmfProfileController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.profile.drawLineComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport olCollection from 'ol/Collection.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olMap from 'ol/Map.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawProfileLine', [\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\n\n/**\n * Simple directive that can be put on any element. The directive listen on\n * clicks events to allow/disallow to draw one line (and only one) on the\n * map. Typically used to draw the line that will serve the gmf.Profile.\n *\n * Example:\n *\n *      <gmf-drawprofileline\n *        gmf-drawprofileline-active=\"mainCtrl.drawProfileActive\"\n *        gmf-drawprofileline-map=\"mainCtrl.map\"\n *        gmf-drawprofileline-line=\"mainCtrl.line\"\n *      </gmf-drawprofileline>\n *\n *\n * @htmlAttribute {ol.Map} gmf-drawprofileline-map The map.\n * @htmlAttribute {ol.geom.LineString} gmf-drawprofileline-line The variable to\n *     connect with the drawed line.\n * @htmlAttribute {boolean=} gmf-drawprofileline-active Active the component.\n * @htmlAttribute {ol.style.Style=} gmf-drawprofileline-style Optional style\n *     for the drawed line.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname gmfDrawprofileline\n */\nexports.directive_ = function() {\n  return {\n    scope: true,\n    controller: 'GmfDrawprofilelineController as ctrl',\n    restrict: 'A',\n    bindToController: {\n      'getMapFn': '&gmfDrawprofilelineMap',\n      'line': '=gmfDrawprofilelineLine',\n      'active': '=gmfDrawprofilelineActive',\n      'getStyleFn': '&?gmfDrawprofilelineStyle'\n    }\n  };\n};\n\n\nexports.directive('gmfDrawprofileline',\n  exports.directive_);\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Feature overlay\n *     manager.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfDrawprofilelineController\n */\nexports.Controller_ = function($scope, $element, $timeout,\n  ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {?ol.geom.LineString}\n   * @export\n   */\n  this.line;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  const overlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n  overlay.setFeatures(this.features_);\n\n  let style;\n  const styleFn = this['getStyleFn'];\n  if (styleFn) {\n    style = styleFn();\n    googAsserts.assertInstanceof(style, olStyleStyle);\n  } else {\n    style = new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 2\n      })\n    });\n  }\n  overlay.setStyle(style);\n\n  /**\n   * @type {!ol.interaction.Draw}\n   * @export\n   */\n  this.interaction = new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    features: this.features_\n  });\n\n  ngeoMiscDecorate.interaction(this.interaction);\n\n  // Clear the line as soon as the interaction is activated.\n  this.interaction.on('change:active', () => {\n    if (this.interaction.getActive()) {\n      this.clear_();\n    }\n  });\n\n  // Update the profile with the new geometry.\n  this.interaction.on('drawend', (event) => {\n    this.line = event.feature.getGeometry();\n    // using timeout to prevent double click to zoom the map\n    $timeout(() => {\n      this.interaction.setActive(false);\n    }, 0);\n  });\n\n  // Line may be removed from an other component\n  // for example closing the chart panel\n  $scope.$watch(\n    () => this.line,\n    (newLine, oldLine) => {\n      if (newLine === null) {\n        this.clear_();\n      }\n    });\n\n  $scope.$watch(\n    () => this.active,\n    (newValue) => {\n      if (newValue === false) {\n        this.clear_();\n      }\n      // Will activate the interaction automatically the first time\n      this.interaction.setActive(this.active);\n    }\n  );\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const map = this['getMapFn']();\n  googAsserts.assertInstanceof(map, olMap);\n  this.map_ = map;\n  this.map_.addInteraction(this.interaction);\n};\n\n\n/**\n * Clear the overlay and profile line.\n * @private\n */\nexports.Controller_.prototype.clear_ = function() {\n  this.features_.clear();\n  this.line = null;\n};\n\n\nexports.controller('GmfDrawprofilelineController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.profile.module\n */\nimport gmfProfileComponent from 'gmf/profile/component.js';\nimport gmfProfileDrawLineComponent from 'gmf/profile/drawLineComponent.js';\n\nimport './profile.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfProfileModule', [\n  gmfProfileComponent.name,\n  gmfProfileDrawLineComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.query.bboxQueryComponent\n */\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olInteractionDragBox from 'ol/interaction/DragBox.js';\nimport * as olEventsCondition from 'ol/events/condition.js';\n\nconst exports = angular.module('ngeoBboxQuery', [\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\n/**\n * Provides a \"bbox query\" directive.\n *\n * This directive is responsible of binding a map and the ngeo query service\n * together. While active, drawing a bbox while CTRL or the 'meta' key is pressed\n * issues a request to the query service.\n *\n * This directive doesn't require to be rendered in a visible DOM element, but\n * it could be used with a ngeo-btn to manage the activation of the directive.\n * See below an example without any use of UI:\n *\n * Example:\n *\n *      <span\n *        ngeo-bbox-query=\"\"\n *        ngeo-bbox-query-map=\"::ctrl.map\"\n *        ngeo-bbox-query-limit=\"50\"\n *        ngeo-bbox-query-active=\"ctrl.queryActive\">\n *        ngeo-bbox-query-autoclear=\"ctrl.queryAutoClear\">\n *      </span>\n *\n * See the live example: [../examples/bboxquery.html](../examples/bboxquery.html)\n *\n * @param {ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBboxQuery\n */\nexports.directive_ = function(ngeoMapQuerent) {\n  return {\n    restrict: 'A',\n    scope: false,\n    link: (scope, elem, attrs) => {\n      /**\n       * @type {ol.Map}\n       */\n      const map = scope.$eval(attrs['ngeoBboxQueryMap']);\n\n      const interaction = new olInteractionDragBox({\n        condition: olEventsCondition.platformModifierKeyOnly\n      });\n\n      /**\n       * Called when a bbox is drawn while this controller is active. Issue\n       * a request to the query service using the extent that was drawn.\n       * @param {ol.interaction.DragBox.Event} evt Event.\n       */\n      const handleBoxEnd = function(evt) {\n        const extent = interaction.getGeometry().getExtent();\n        ngeoMapQuerent.issue({\n          limit: scope.$eval(attrs['ngeoBboxQueryLimit']),\n          extent: extent,\n          map: map\n        });\n      };\n      interaction.on('boxend', handleBoxEnd);\n\n      // watch 'active' property -> activate/deactivate accordingly\n      scope.$watch(attrs['ngeoBboxQueryActive'],\n        (newVal, oldVal) => {\n          if (newVal) {\n            // activate\n            map.addInteraction(interaction);\n          } else {\n            // deactivate\n            map.removeInteraction(interaction);\n            if (scope.$eval(attrs['ngeoBboxQueryAutoclear']) !== false) {\n              ngeoMapQuerent.clear();\n            }\n          }\n        }\n      );\n    }\n  };\n};\n\nexports.directive('ngeoBboxQuery', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.raster.component\n */\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport * as olEvents from 'ol/events.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfRasterComponent', [\n  gmfRasterRasterService.module.name,\n  ngeoMiscDebounce.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/raster/widgetComponent', require('./widgetComponent.html'));\n});\n\n\nexports.value('gmfElevationwidgetTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfElevationwidgetTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/raster/widgetComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfElevationwidgetTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfElevationwidgetTemplateUrl($attrs, gmfElevationwidgetTemplateUrl) {\n  return gmfElevationwidgetTemplateUrl($attrs);\n}\n\n\n/**\n * Provide a directive that set a value each 500ms with the elevation under the\n * mouse cursor position on the map. The value must come from the elevation\n * service of a c2cgeoportal server. The server's URL must be defined as\n * config value of the application.\n *\n * Example:\n *\n *      <span gmf-elevation\n *            gmf-elevation-active=\"elevationActive\"\n *            gmf-elevation-elevation=\"elevationValue\"\n *            gmf-elevation-layer=\"mainCtrl.elevationLayer\"\n *            gmf-elevation-map=\"::mainCtrl.map\">\n *            {{elevationValue | number:2}}m\n *      </span>\n *\n *\n * @htmlAttribute {boolean} gmf-elevation-active A boolean to set active or\n *     deactive the component.\n * @htmlAttribute {number} gmf-elevation-elevation The value to set with the\n *     elevation value.\n * @htmlAttribute {string} gmf-elevation-layer Elevation layer to use.\n * @htmlAttribute {ol.Map} gmf-elevation-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname gmfElevation\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    controller: 'GmfElevationController as ctrl',\n    bindToController: true,\n    scope: {\n      'active': '<gmfElevationActive',\n      'elevation': '=gmfElevationElevation',\n      'loading': '=?gmfElevationLoading',\n      'layer': '<gmfElevationLayer',\n      'map': '=gmfElevationMap'\n    },\n    link: (scope, element, attr) => {\n      const ctrl = scope['ctrl'];\n\n      // Watch active or not.\n      scope.$watch(() => ctrl.active, function(active) {\n        this.toggleActive_(active);\n      }.bind(ctrl));\n\n      // Watch current layer.\n      scope.$watch(() => ctrl.layer, function(layer) {\n        this.layer = layer;\n        this.elevation = null;\n      }.bind(ctrl));\n    }\n  };\n};\n\n\nexports.directive('gmfElevation', exports.component_);\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {ngeox.miscDebounce} ngeoDebounce Ngeo debounce factory\n * @param {gmf.raster.RasterService} gmfRaster Gmf Raster service\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfElevationController\n */\nexports.Controller_ = function($scope, ngeoDebounce, gmfRaster) {\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  /**\n   * @type {boolean}\n   */\n  this.active;\n\n  /**\n   * @type {!number|undefined}\n   * @export\n   */\n  this.elevation;\n\n  /**\n   * @type {string}\n   */\n  this.layer;\n\n  /**\n   * @type {ol.Map}\n   */\n  this.map;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.inViewport_ = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.loading = false;\n};\n\n/**\n * Active or deactive the request of the raster each 500 ms on pointermove.\n * @param {boolean} active true to make requests.\n * @private\n */\nexports.Controller_.prototype.toggleActive_ = function(active) {\n  this.elevation = undefined;\n  if (active) {\n    googAsserts.assert(this.listenerKeys_.length === 0);\n\n    // Moving the mouse clears previously displayed elevation\n    this.listenerKeys_.push(olEvents.listen(this.map, 'pointermove',\n      function(e) {\n        this.scope_.$apply(() => {\n          this.inViewport_ = true;\n          this.elevation = undefined;\n          this.loading = false;\n        });\n      }, this));\n\n    // Launch the elevation service request when the user stops moving the\n    // mouse for less short delay\n    this.listenerKeys_.push(olEvents.listen(this.map, 'pointermove',\n      this.ngeoDebounce_(this.pointerStop_.bind(this), 500, true)\n    ));\n\n    this.listenerKeys_.push(olEvents.listen(this.map.getViewport(), 'mouseout', () => {\n      this.scope_.$apply(() => {\n        this.elevation = undefined;\n        this.inViewport_ = false;\n        this.loading = false;\n      });\n    }));\n  } else {\n    this.elevation = undefined;\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n};\n\n\n/**\n * Request data from a raster from a MapBrowserPointerEvent's coordinates.\n * Called when the user stopped moving the mouse for 500ms.\n * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n * @private\n */\nexports.Controller_.prototype.pointerStop_ = function(e) {\n  if (this.inViewport_) {\n    this.loading = true;\n    const params = {\n      'layers': this.layer\n    };\n    this.gmfRaster_.getRaster(e.coordinate, params).then(\n      this.getRasterSuccess_.bind(this),\n      this.getRasterError_.bind(this)\n    );\n  }\n};\n\n\n/**\n * @param {Object.<string, number>} resp Response of the get Raster service.\n * @private\n */\nexports.Controller_.prototype.getRasterSuccess_ = function(resp) {\n  googAsserts.assert(this.layer, 'A layer should be selected');\n  this.elevation = resp[this.layer];\n  this.loading = false;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.getRasterError_ = function() {\n  console.error('Error on getting the raster.');\n  this.elevation = undefined;\n  this.loading = false;\n};\n\n\nexports.controller('GmfElevationController', exports.Controller_);\n\n\n/**\n * Provides a component which encapsulates the elevation component (see above)\n * in a button with dropdown menu to be included in a application directly.\n *\n * Example:\n *  <gmf-elevationwidget\n *      gmf-elevationwidget-map=\"::mainCtrl.map\"\n *      gmf-elevationwidget-layers=\"::mainCtrl.elevationLayers\"\n *      gmf-elevationwidget-active=\"mainCtrl.showInfobar\">\n *  </gmf-elevationwidget>\n *\n * @htmlAttribute {ol.Map} gmf-elevationwidget-map The map.\n * @htmlAttribute {Array.<string>} gmf-elevationwidget-layers The list of\n *     layers.\n * @htmlAttribute {boolean} gmf-elevationwidget-active Whether to activate the\n *     elevation component.\n *\n * @ngdoc component\n * @ngname gmfElevationwidget\n */\nexports.widgetComponent_ = {\n  controller: 'gmfElevationwidgetController as ctrl',\n  bindings: {\n    'map': '<gmfElevationwidgetMap',\n    'layers': '<gmfElevationwidgetLayers',\n    'active': '<gmfElevationwidgetActive'\n  },\n  templateUrl: gmfElevationwidgetTemplateUrl\n};\nexports.component('gmfElevationwidget', exports.widgetComponent_);\n\n\n/**\n * @constructor\n * @private\n * @ngdoc controller\n */\nexports.WidgetController_ = function() {\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!Array.<string>}\n   * @export\n   */\n  this.layers;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.selectedElevationLayer;\n};\n\n\nexports.WidgetController_.prototype.$onInit = function() {\n  this.selectedElevationLayer = this.layers[0];\n};\n\n\nexports.controller('gmfElevationwidgetController',\n  exports.WidgetController_);\n\n\nexport default exports;\n","/**\n * @module ngeo.print.Utils\n */\nimport * as olHas from 'ol/has.js';\nimport * as olMath from 'ol/math.js';\n\n/**\n * Provides a service with print utility functions.\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoPrintUtils\n */\nconst exports = function() {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.extentHalfHorizontalDistance_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.extentHalfVerticalDistance_;\n\n};\n\n\n/**\n * @const\n * @private\n */\nexports.INCHES_PER_METER_ = 39.37;\n\n\n/**\n * @const\n * @private\n */\nexports.DOTS_PER_INCH_ = 72;\n\n\n/**\n * Return a function to use as map postcompose listener for drawing a print\n * mask on the map.\n * @param {function():ol.Size} getSize User-defined function returning the\n *     size in dots of the map to print.\n * @param {function(olx.FrameState):number} getScale User-defined function\n *     returning the scale of the map to print.\n * @param {function():number=} opt_rotation User defined function returning the\n *     inclination of the canvas in degree (-180 to 180).\n * returning the scale of the map to print.\n * @return {function(ol.render.Event)} Function to use as a map postcompose\n * listener.\n * @export\n */\nexports.prototype.createPrintMaskPostcompose = function(getSize, getScale, opt_rotation) {\n  const self = this;\n\n  return (\n  /**\n        * @param {ol.render.Event} evt Postcompose event.\n        */\n    function(evt) {\n      const context = evt.context;\n      const frameState = evt.frameState;\n\n      const resolution = frameState.viewState.resolution;\n\n      const viewportWidth = frameState.size[0] * frameState.pixelRatio;\n      const viewportHeight = frameState.size[1] * frameState.pixelRatio;\n\n      const center = [viewportWidth / 2, viewportHeight / 2];\n\n      const size = getSize();\n      const height = size[1] * olHas.DEVICE_PIXEL_RATIO;\n      const width = size[0] * olHas.DEVICE_PIXEL_RATIO;\n      const scale = getScale(frameState);\n\n      const ppi = exports.DOTS_PER_INCH_;\n      const ipm = exports.INCHES_PER_METER_;\n\n      const extentHalfWidth =\n           (((width / ppi) / ipm) * scale / resolution) / 2;\n      self.extentHalfHorizontalDistance_ =\n           (((size[0] / ppi) / ipm) * scale) / 2;\n\n      const extentHalfHeight =\n           (((height / ppi) / ipm) * scale / resolution) / 2;\n      self.extentHalfVerticalDistance_ =\n           (((size[1] / ppi) / ipm) * scale) / 2;\n\n      // Draw a mask on the whole map.\n      context.beginPath();\n      context.moveTo(0, 0);\n      context.lineTo(viewportWidth, 0);\n      context.lineTo(viewportWidth, viewportHeight);\n      context.lineTo(0, viewportHeight);\n      context.lineTo(0, 0);\n      context.closePath();\n\n      // Draw the print zone\n      if (!opt_rotation) {\n        self.drawPrintZone_(context, center, extentHalfWidth,\n          extentHalfHeight);\n      } else {\n        const rotation = olMath.toRadians(opt_rotation());\n        self.drawPrintZoneWithRotation_(context, center, extentHalfWidth,\n          extentHalfHeight, rotation);\n      }\n\n      // Fill the mask\n      context.fillStyle = 'rgba(0, 5, 25, 0.5)';\n      context.fill();\n    }\n  );\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context of the Postcompose event.\n * @param {Array.<number>} center Center of the viewport (x; y).\n * @param {number} extentHalfWidth Extent half width.\n * @param {number} extentHalfHeight Extent half height.\n * @private\n */\nexports.prototype.drawPrintZone_ = function(context, center,\n  extentHalfWidth, extentHalfHeight) {\n  const minx = center[0] - extentHalfWidth;\n  const miny = center[1] - extentHalfHeight;\n  const maxx = center[0] + extentHalfWidth;\n  const maxy = center[1] + extentHalfHeight;\n\n  context.moveTo(minx, miny);\n  context.lineTo(minx, maxy);\n  context.lineTo(maxx, maxy);\n  context.lineTo(maxx, miny);\n  context.lineTo(minx, miny);\n  context.closePath();\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context of the Postcompose event.\n * @param {Array.<number>} center Center of the viewport (x; y).\n * @param {number} extentHalfWidth Extent half width.\n * @param {number} extentHalfHeight Extent half height.\n * @param {number} rotation Rotation value in radians.\n * @private\n */\nexports.prototype.drawPrintZoneWithRotation_ = function(context, center,\n  extentHalfWidth, extentHalfHeight, rotation) {\n  // diagonal = distance p1 to center.\n  const diagonal = Math.sqrt(Math.pow(extentHalfWidth, 2) +\n      Math.pow(extentHalfHeight, 2));\n  // gamma = angle between horizontal and diagonal (with rotation).\n  const gamma = Math.atan(extentHalfHeight / extentHalfWidth) - rotation;\n  // omega = angle between diagonal and vertical (with rotation).\n  const omega = Math.atan(extentHalfWidth / extentHalfHeight) - rotation;\n  // Calculation of each corner.\n  const x1 = center[0] - Math.cos(gamma) * diagonal;\n  const y1 = center[1] + Math.sin(gamma) * diagonal;\n  const x2 = center[0] + Math.sin(omega) * diagonal;\n  const y2 = center[1] + Math.cos(omega) * diagonal;\n  const x3 = center[0] + Math.cos(gamma) * diagonal;\n  const y3 = center[1] - Math.sin(gamma) * diagonal;\n  const x4 = center[0] - Math.sin(omega) * diagonal;\n  const y4 = center[1] - Math.cos(omega) * diagonal;\n\n  context.moveTo(x1, y1);\n  context.lineTo(x2, y2);\n  context.lineTo(x3, y3);\n  context.lineTo(x4, y4);\n  context.lineTo(x1, y1);\n  context.closePath();\n};\n\n\n/**\n * Get the optimal print scale for a map, the map being defined by its\n * size (in pixels) and resolution (in map units per pixel).\n * @param {ol.Size} mapSize Size of the map on the screen (px).\n * @param {number} mapResolution Resolution of the map on the screen.\n * @param {ol.Size} printMapSize Size of the map on the paper (dots).\n * @param {Array.<number>} printMapScales Supported map scales on the paper.\n * The scales are provided as scale denominators, sorted in ascending order.\n * E.g. `[500, 1000, 2000, 4000]`.\n * @return {number} The best scale. `-1` is returned if there is no optimal\n * scale, that is the optimal scale is lower than or equal to the first value\n * in `printMapScales`.\n * @export\n */\nexports.prototype.getOptimalScale = function(\n  mapSize, mapResolution, printMapSize, printMapScales) {\n\n  const mapWidth = mapSize[0] * mapResolution;\n  const mapHeight = mapSize[1] * mapResolution;\n\n  const scaleWidth = mapWidth * exports.INCHES_PER_METER_ *\n      exports.DOTS_PER_INCH_ / printMapSize[0];\n  const scaleHeight = mapHeight * exports.INCHES_PER_METER_ *\n      exports.DOTS_PER_INCH_ / printMapSize[1];\n\n  const scale = Math.min(scaleWidth, scaleHeight);\n\n  let optimal = -1;\n  for (let i = 0, ii = printMapScales.length; i < ii; ++i) {\n    if (scale > printMapScales[i]) {\n      optimal = printMapScales[i];\n    }\n  }\n\n  return optimal;\n};\n\n\n/**\n * Get the optimal map resolution for a print scale and a map size.\n * @param {ol.Size} mapSize Size of the map on the screen (px).\n * @param {ol.Size} printMapSize Size of the map on the paper (dots).\n * @param {number} printMapScale Map scale on the paper.\n * @return {number} The optimal map resolution.\n * @export\n */\nexports.prototype.getOptimalResolution = function(\n  mapSize, printMapSize, printMapScale) {\n\n  const dotsPerMeter =\n      exports.DOTS_PER_INCH_ * exports.INCHES_PER_METER_;\n\n  const resolutionX = (printMapSize[0] * printMapScale) /\n      (dotsPerMeter * mapSize[0]);\n  const resolutionY = (printMapSize[1] * printMapScale) /\n      (dotsPerMeter * mapSize[1]);\n\n  const optimalResolution = Math.max(resolutionX, resolutionY);\n\n  return optimalResolution;\n};\n\n\n/**\n * Get the coordinates of the bottom left corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the bottom left corner.\n */\nexports.prototype.getBottomLeftCorner = function(mapCenter) {\n  return [mapCenter[0] - this.extentHalfHorizontalDistance_,\n    mapCenter[1] - this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the bottom right corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.ç\n * @return {ol.Coordinate} The coordinates of the bottom right corner.\n */\nexports.prototype.getBottomRightCorner = function(mapCenter) {\n  return [mapCenter[0] + this.extentHalfHorizontalDistance_,\n    mapCenter[1] - this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the up left corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the up left corner.\n */\nexports.prototype.getUpLeftCorner = function(mapCenter) {\n  return [mapCenter[0] - this.extentHalfHorizontalDistance_,\n    mapCenter[1] + this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the up right corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the up right corner.\n */\nexports.prototype.getUpRightCorner = function(mapCenter) {\n  return [mapCenter[0] + this.extentHalfHorizontalDistance_,\n    mapCenter[1] + this.extentHalfVerticalDistance_];\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoPrintUtils', []);\nexports.module.service('ngeoPrintUtils', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.print.component\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoPrintService from 'ngeo/print/Service.js';\nimport ngeoPrintUtils from 'ngeo/print/Utils.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olMap from 'ol/Map.js';\nimport * as olMath from 'ol/math.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfPrintComponent', [\n  gmfAuthenticationService.module.name,\n  gmfThemeThemes.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoPrintService.module.name,\n  ngeoPrintUtils.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.value('gmfPrintTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['gmfPrintTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/print';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/print', require('./component.html'));\n});\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.PrintStateEnum = {\n\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT_IN_USE: 'notInUse',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  PRINTING: 'printing',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR_ON_REPORT: 'errorOnReport',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  CAPABILITIES_NOT_LOADED: 'capabilitiesNotLoaded',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR_ON_GETCAPABILITIES: 'errorOnGetCapabilities'\n};\n\n\nexports.value('gmfPrintState', {\n  'state': exports.PrintStateEnum.CAPABILITIES_NOT_LOADED\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfPrintTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfPrintTemplateUrl($element, $attrs, gmfPrintTemplateUrl) {\n  return gmfPrintTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component that display a print panel. This panel is populated with\n * a form corresponding to the capabilities delivered by a GMF print v3 server.\n * If you want to use another template for your print panel, you can see the\n * available layout information in the 'gmfx.PrintLayoutInfo' classes.\n *\n * Simple example:\n *\n *      <gmf-print\n *        gmf-print-map=\"::mainCtrl.map\"\n *        gmf-print-active=\"printActive\"\n *        gmf-print-rotatemask=\"::true\">\n *      </gmf-print>\n *\n * Example with user defined attribute:\n *\n *      <gmf-print\n *        gmf-print-map=\"::mainCtrl.map\"\n *        gmf-print-active=\"printActive\"\n *        gmf-print-rotatemask=\"::true\"\n *        gmf-print-hiddenattributes=\"::['name']\"\n *        gmf-print-attributes-out=\"::attributes\">\n *        <div ng-repeat=\"attribute in ::attributes\">\n *          <div ng-if=\"attribute.name == 'name'\">\n *            <input ng-model=\"attribute.value\" placeholder=\"name\" />\n *          </div>\n *        </div>\n *      </gmf-print>\n *\n * Note: The 'print' and 'cancel' functions can also be called via globals\n * events 'gmfStartPrint' and 'gmfCancelPrint'.\n *\n * @htmlAttribute {ol.Map} gmf-print-map The map.\n * @htmlAttribute {boolean} gmf-print-active A boolean that informs if the\n *     panel is open or not.\n * @htmlAttribute {boolean} gmf-print-rotatemask Optional. True to apply\n *     rotation on the mask instead of the map. By default, the map rotates.\n * @htmlAttribute {Object.<string, string|number|boolean>}\n *     gmf-print-fieldvalues optional. Key, value object to define default\n *     value in each of your print panel field. The key refers to the\n *     property's name of the field.\n *     Example: {'comments': 'demo', 'legend': false}. Doesn't work for the dpi\n *     and the scale. Server's values are used in priority.\n * @htmlAttribute {Array.<string>} gmf-print-hiddenattributes The list of attributes that should be hidden.\n * @ngdoc component\n * @ngname gmfPrint\n */\nexports.component_ = {\n  bindings: {\n    'map': '<gmfPrintMap',\n    'active': '=gmfPrintActive',\n    'rotateMask': '<?gmfPrintRotatemask',\n    'fieldValues': '<?gmfPrintFieldvalues',\n    'hiddenAttributeNames': '<?gmfPrintHiddenattributes',\n    'attributesOut': '=?gmfPrintAttributesOut'\n  },\n  controller: 'GmfPrintController',\n  templateUrl: gmfPrintTemplateUrl,\n  transclude: true\n};\n\n\nexports.component('gmfPrint', exports.component_);\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {angular.JQLite} $element Element.\n   * @param {angular.Scope} $rootScope Angular root scope.\n   * @param {angular.Scope} $scope Angular scope.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {ngeo.map.LayerHelper} ngeoLayerHelper The ngeo Layer Helper service.\n   * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo Feature Overlay\n   *     Manager service.\n   * @param {ngeo.print.Utils} ngeoPrintUtils The ngeo PrintUtils service.\n   * @param {ngeox.CreatePrint} ngeoCreatePrint The ngeo Create Print function.\n   * @param {string} gmfPrintUrl A MapFishPrint url.\n   * @param {gmf.authentication.Service} gmfAuthenticationService The authentication service.\n   * @param {ngeox.QueryResult} ngeoQueryResult ngeo query result.\n   * @param {angular.$filter} $filter Angular $filter service.\n   * @param {gmf.print.component.PrintStateEnum} gmfPrintState GMF print state.\n   * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n   * @private\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfPrintController\n   */\n  constructor($element, $rootScope, $scope, $timeout, $q, $injector,\n    gettextCatalog, ngeoLayerHelper, ngeoFeatureOverlayMgr,  ngeoPrintUtils,\n    ngeoCreatePrint, gmfPrintUrl, gmfAuthenticationService, ngeoQueryResult,\n    $filter, gmfPrintState, gmfThemes) {\n\n    /**\n     * @type {gmf.print.component.PrintStateEnum}\n     * @private\n     */\n    this.gmfPrintState_ = gmfPrintState;\n\n    /**\n     * @type {function(string): string}\n     * @private\n     */\n    this.translate_ = $filter('translate');\n\n    /**\n     * @type {ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.active;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.rotateMask = false;\n\n    /**\n     * @type {Object.<string, string|number|boolean>!}\n     * @export\n     */\n    this.fieldValues = {};\n\n    /**\n     * @type {Array.<string>}\n     * @export\n     */\n    this.attributesOut;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$rootScope_ = $rootScope;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.$timeout_ = $timeout;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.$q_ = $q;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {ol.layer.Vector}\n     * @private\n     */\n    this.featureOverlayLayer_ = ngeoFeatureOverlayMgr.getLayer();\n\n    /**\n     * @type {ngeo.print.Utils}\n     * @private\n     */\n    this.ngeoPrintUtils_ = ngeoPrintUtils;\n\n    /**\n     * @type {ngeo.print.Service}\n     * @private\n     */\n    this.ngeoPrint_ = ngeoCreatePrint(gmfPrintUrl);\n\n    /**\n     * @type {ngeox.QueryResult}\n     * @private\n     */\n    this.ngeoQueryResult_ = ngeoQueryResult;\n\n    /**\n     * @type {gmf.authentication.Service}\n     * @private\n     */\n    this.gmfAuthenticationService_ = gmfAuthenticationService;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    this.cacheVersion_ = '0';\n    if ($injector.has('cacheVersion')) {\n      this.cacheVersion_ = $injector.get('cacheVersion');\n    }\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.scaleInput = false;\n\n    if ($injector.has('gmfPrintOptions')) {\n      this.scaleInput = $injector.get('gmfPrintOptions')['scaleInput'];\n    }\n\n    /**\n     * @type {?angular.$q.Deferred}\n     * @private\n     */\n    this.requestCanceler_ = null;\n\n    /**\n     * @type {?angular.$q.Promise}\n     * @private\n     */\n    this.statusTimeoutPromise_ = null;\n\n    /**\n     * @type {Array.<number>|null}\n     * @private\n     */\n    this.onDragPreviousMousePosition_ = null;\n\n    /**\n     * @type {?angular.$q.Promise|null}\n     * @private\n     */\n    this.rotationTimeoutPromise_ = null;\n\n    /**\n     * @type {ol.EventsKey}\n     * @private\n     */\n    this.postComposeListenerKey_;\n\n    /**\n     * @type {ol.EventsKey}\n     * @private\n     */\n    this.pointerDragListenerKey_;\n\n    /**\n     * @type {ol.EventsKey}\n     * @private\n     */\n    this.mapViewResolutionChangeKey_;\n\n    /**\n     * Current report reference id.\n     * @type {string}\n     * @private\n     */\n    this.curRef_ = '';\n\n    /**\n     * Formats availables in capabilities.\n     * @type {Array.<string>}\n     * @private\n     */\n    this.formats_ = [];\n\n    /**\n     * An array of attributes objects from capabilities.\n     * @type {Array.<Object>}\n     * @private\n     */\n    this.layouts_ = [];\n\n    /**\n     * An attributes object from capabilities.\n     * @type {Object}\n     * @private\n     */\n    this.layout_ = {};\n\n    /**\n     * @type {Array.<number>}\n     * @private\n     */\n    this.paperSize_ = [];\n\n    /**\n     * @type {gmfx.PrintLayoutInfo}\n     * @export\n     */\n    this.layoutInfo = {};\n\n    /**\n     * @type {number}\n     * @export\n     */\n    this.rotation = 0;\n\n    /**\n     * @type {Array.<string>}\n     * @export\n     */\n    this.hiddenAttributeNames;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.scaleManuallySelected_ = false;\n\n    /**\n     * @type {angular.JQLite}\n     * @export\n     */\n    this.rotationInput_ = $element.find('.gmf-print-rotation-input');\n\n    this.rotationInput_.on('input', (event) => {\n      const rotation = $(event.target).val();\n      if (rotation !== '') {\n        this.setRotation(/** @type {number} */ (rotation));\n      }\n    });\n\n    /**\n     * @type {function(ol.render.Event)}\n     */\n    this.postcomposeListener_;\n\n    /**\n     * @type {angular.$http.HttpPromise}\n     * @private\n     */\n    this.capabilities_;\n\n    /**\n     * @type {gmfThemes.GmfOgcServers}\n     * @private\n     */\n    this.ogcServers_;\n\n    /**\n     * @type {Array.<gmfThemes.GmfTheme>}\n     * @private\n     */\n    this.currentThemes_;\n  }\n\n\n  /**\n   * Init the controller\n   */\n  $onInit() {\n    // Clear the capabilities if the roleId changes\n    this.$scope_.$watch(() => this.gmfAuthenticationService_.getRoleId(), () => {\n      this.gmfPrintState_.state = exports.PrintStateEnum.CAPABILITIES_NOT_LOADED;\n      this.capabilities_ = null;\n    });\n\n    this.$scope_.$watch(() => this.active, (active) => {\n      this.togglePrintPanel_(active);\n    });\n\n    // Print on event.\n    this.$rootScope_.$on('gmfStartPrint', (event, format) => {\n      this.print(`${format}`);\n    });\n\n    // Cancel print task on event.\n    this.$rootScope_.$on('gmfCancelPrint', () => {\n      this.cancel();\n    });\n\n    this.gmfThemes_.getOgcServersObject().then((ogcServersObject) => {\n      this.ogcServers_ = ogcServersObject;\n    });\n\n    this.gmfThemes_.getThemesObject().then((currentThemes) => {\n      this.currentThemes_ = currentThemes;\n    });\n\n    /**\n     * @return {ol.Size} Size in dots of the map to print.\n     */\n    const getSizeFn = () => this.paperSize_;\n\n    let getRotationFn;\n    if (this.rotateMask) {\n      /**\n       * @return {number} rotation to apply.\n       */\n      getRotationFn = () => this.rotation;\n    }\n\n    this.postcomposeListener_ = this.ngeoPrintUtils_.createPrintMaskPostcompose(\n      getSizeFn, this.getScaleFn.bind(this), getRotationFn);\n  }\n\n\n  /**\n   * @param {olx.FrameState} frameState Frame state.\n   * @return {number} Scale of the map to print.\n   */\n  getScaleFn(frameState) {\n    // Don't compute an optimal scale if the user manually choose a value not in\n    // the pre-defined scales. (`scaleInput` in `gmfPrintOptions`).\n    googAsserts.assert(this.layoutInfo.scales);\n    googAsserts.assert(this.layoutInfo.scale !== undefined);\n    if (!this.scaleManuallySelected_ &&\n        (this.layoutInfo.scale === -1 || olArray.includes(this.layoutInfo.scales, this.layoutInfo.scale))) {\n      const mapSize = frameState.size;\n      const viewResolution = frameState.viewState.resolution;\n      this.layoutInfo.scale = this.getOptimalScale_(mapSize, viewResolution);\n    }\n    return this.layoutInfo.scale;\n  }\n\n\n  /**\n   * @param {boolean} active True to listen events related to the print and get\n   *     capabilities. False to stop listen them and set rotation to 0.\n   * @private\n   */\n  togglePrintPanel_(active) {\n    if (active) {\n      if (!this.capabilities_) {\n        this.getCapabilities_();\n      }\n      this.capabilities_.then((resp) => {\n        // make sure the panel is still open\n        if (!this.active) {\n          return;\n        }\n        this.gmfPrintState_.state = exports.PrintStateEnum.NOT_IN_USE;\n        // Get capabilities - On success\n        this.parseCapabilities_(resp);\n        this.postComposeListenerKey_ = olEvents.listen(this.map, 'postcompose', this.postcomposeListener_);\n        this.pointerDragListenerKey_ = olEvents.listen(this.map, 'pointerdrag', this.onPointerDrag_, this);\n        this.mapViewResolutionChangeKey_ = olEvents.listen(this.map.getView(), 'change:resolution', () => {\n          this.scaleManuallySelected_ = false;\n        });\n        this.map.render();\n      }, (resp) => {\n        // Get capabilities - On error\n        this.gmfPrintState_.state = exports.PrintStateEnum.ERROR_ON_GETCAPABILITIES;\n        this.capabilities_ = null;\n      });\n    } else {\n      olEvents.unlistenByKey(this.postComposeListenerKey_);\n      olEvents.unlistenByKey(this.pointerDragListenerKey_);\n      olEvents.unlistenByKey(this.mapViewResolutionChangeKey_);\n      this.setRotation(0);\n      this.map.render(); // Redraw (remove) post compose mask;\n    }\n  }\n\n\n  /**\n   * Gets the print capabilities.\n   * @param {number|null=} opt_roleId The role id.\n   * @private\n   */\n  getCapabilities_(opt_roleId) {\n    this.capabilities_ = this.ngeoPrint_.getCapabilities(\n      /** @type {angular.$http.Config} */ ({\n        withCredentials: true,\n        params: opt_roleId ? {\n          'role': opt_roleId,\n          'cache_version': this.cacheVersion_\n        } : {\n          'cache_version': this.cacheVersion_\n        }\n      }));\n  }\n\n\n  /**\n   * Create the list of layouts, get the formats, get the first layout in\n   * gmf print v3 capabilities and then update the print panel layout information.\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  parseCapabilities_(resp) {\n    const data = resp['data'];\n    this.formats_ = data['formats'] || [];\n    this.layouts_ = data['layouts'];\n    this.layout_ = data['layouts'][0];\n\n    this.layoutInfo.layouts = [];\n    this.layouts_.forEach((layout) => {\n      this.layoutInfo.layouts.push(layout.name);\n    });\n\n    this.updateFields_();\n  }\n\n\n  /**\n   * Update layout information with the user values if there are always available in the\n   * current layout otherwise use the defaults values of the layout.\n   * If a field doesn't exist in the current layout, set it to undefined so the\n   * view can hide it. Update also the paper size.\n   * custom print templates).\n   * @private\n   */\n  updateFields_() {\n    this.layoutInfo.layout = this.layout_.name;\n\n    const mapInfo = this.isAttributeInCurrentLayout_('map');\n    googAsserts.assertObject(mapInfo);\n    const clientInfo = mapInfo['clientInfo'];\n    googAsserts.assertObject(clientInfo);\n    this.paperSize_ = [clientInfo['width'], clientInfo['height']];\n\n    this.updateCustomFields_();\n\n    const legend = this.isAttributeInCurrentLayout_('legend');\n    if (this.layoutInfo.legend === undefined) {\n      this.layoutInfo.legend = !!(legend !== undefined ?\n        legend : this.fieldValues['legend']);\n    }\n\n    this.layoutInfo.scales = clientInfo['scales'] || [];\n    this.layoutInfo.dpis = clientInfo['dpiSuggestions'] || [];\n\n    const mapSize = this.map.getSize();\n    const viewResolution = this.map.getView().getResolution();\n    this.layoutInfo.scale = this.getOptimalScale_(mapSize, viewResolution);\n\n    this.layoutInfo.dpi =\n        (this.layoutInfo.dpi && this.layoutInfo.dpis.indexOf(this.layoutInfo.dpi) > 0) ?\n          this.layoutInfo.dpi : this.layoutInfo.dpis[0];\n\n    this.layoutInfo.formats = {};\n    this.formats_.forEach((format) => {\n      this.layoutInfo.formats[format] = true;\n    });\n\n    this.attributesOut = this.layoutInfo['simpleAttributes'];\n\n    // Force the update of the mask\n    this.map.render();\n  }\n\n\n  /**\n   * Update simple attributes information with gmfx.Customfield to be able to generate a form\n   * from a custom GMF print v3 configuration.\n   * @private\n   */\n  updateCustomFields_() {\n    let name, rawType, value, type;\n    if (!this.layoutInfo.simpleAttributes) {\n      this.layoutInfo.simpleAttributes = [];\n    }\n    const simpleAttributes = this.layoutInfo.simpleAttributes;\n    const previousAttributes = simpleAttributes.splice(0, simpleAttributes.length);\n\n    // The attributes without 'clientParams' are the custom layout information (defined by end user).\n    this.layout_.attributes.forEach((attribute) => {\n      if (!attribute['clientParams']) {\n        name = `${attribute.name}`;\n        const defaultValue = attribute.default;\n        value = (defaultValue !== undefined && defaultValue !== '') ?\n          defaultValue : this.fieldValues[name];\n\n        // Try to use existing form field type\n        rawType = `${attribute.type}`;\n        switch (rawType) {\n          case 'String':\n            type = (name === 'comments') ? 'textarea' : 'text';\n            break;\n          case 'Boolean':\n            type = 'checkbox';\n            break;\n          case 'Number':\n            type = 'number';\n            value = parseFloat(value);\n            value = isNaN(value) ? 0 : value;\n            break;\n          default:\n            type = rawType;\n        }\n\n        // If it exists use the value of previous same field.\n        previousAttributes.forEach((c) => {\n          if (c.name === name && c.type === type) {\n            return value = c.value;\n          }\n        });\n\n        this.layoutInfo.simpleAttributes.push(/** gmfx.PrintSimpleAttributes */ ({\n          name,\n          type,\n          value\n        }));\n      }\n    });\n  }\n\n\n  /**\n   * Return a capabilities 'attribute' object corresponding to the given name.\n   * @param {string} name Name of the attribute to get.\n   * @return {Object|null} corresponding attribute or null.\n   * @private\n   */\n  isAttributeInCurrentLayout_(name) {\n    let attr = null;\n    this.layout_.attributes.forEach((attribute) => {\n      if (attribute.name === name) {\n        return attr = attribute;\n      }\n    });\n    return attr;\n  }\n\n\n  /**\n   * Set the current rotation value.\n   * Updating the rotation will redraw the mask or rotate the map (depending on the configuration).\n   * @param {number} rotation The optional new rotation value in degrees.\n   */\n  setRotation(rotation) {\n    this.rotation = olMath.clamp(rotation, -180, 180);\n\n    // sync all the inputs\n    this.rotationInput_.val(this.rotation.toString());\n\n    // Render the map to update the postcompose mask or rotate the map.\n    if (this.rotateMask) {\n      this.map.render();\n    } else {\n      this.map.getView().setRotation(olMath.toRadians(this.rotation));\n    }\n  }\n\n\n  /**\n   * Calculate the angle and the sense of rotation between two lines. One from the\n   * center of the map and the point of the last call to this function and one\n   * from the same center and the point of the current call.\n   * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n   * @private\n   */\n  onPointerDrag_(e) {\n    const originalEvent = e.originalEvent;\n    const mapCenter = this.map.getView().getCenter();\n    if (this.active && originalEvent.altKey && originalEvent.shiftKey && mapCenter) {\n      const center = this.map.getPixelFromCoordinate(mapCenter);\n      const pixel = e.pixel;\n      // Reset previous position between two different sessions of drags events.\n      if (this.rotationTimeoutPromise_ === null) {\n        this.onDragPreviousMousePosition_ = null;\n      } else {\n        // Cancel the timeout to keep this session of drags event\n        this.$timeout_.cancel(this.rotationTimeoutPromise_);\n        // Calculate angle and sense of rotation.\n        const p0x = this.onDragPreviousMousePosition_[0] - center[0];\n        const p0y = this.onDragPreviousMousePosition_[1] - center[1];\n        const p1x = pixel[0] - center[0];\n        const p1y = pixel[1] - center[1];\n        const centerToP0 = Math.sqrt(Math.pow(p0x, 2) + Math.pow(p0y, 2));\n        const centerToP1 = Math.sqrt(Math.pow(p1x, 2) + Math.pow(p1y, 2));\n        const sense = (p0x * p1y - p0y * p1x) > 0 ? 1 : -1;\n        let angle = (p0x * p1x + p0y * p1y) / (centerToP0 * centerToP1);\n        angle = angle <= 1 ? sense * Math.acos(angle) : 0;\n        const boost = centerToP1 / 200;\n        const increment = Math.round(olMath.toDegrees(angle) * boost);\n\n        // Set rotation then update the view.\n        this.setRotation(this.rotation + increment);\n        this.$scope_.$digest();\n      }\n      // Prepare the removal of this session of drags events\n      this.rotationTimeoutPromise_ = this.$timeout_(() => {\n        this.rotationTimeoutPromise_ = null;\n      }, 500);\n      // Keep the current position for the next calculation.\n      this.onDragPreviousMousePosition_ = pixel;\n    }\n  }\n\n\n  /**\n   * Create a print report based on the values of the 'layoutInfo' values.\n   * @param {string} format An output format corresponding to one format in the\n   *     capabilities document ('pdf', 'png', etc).\n   * @export\n   */\n  print(format) {\n    // Do not print if a print task is already processing.\n    if (this.gmfPrintState_.state === exports.PrintStateEnum.PRINTING) {\n      return;\n    }\n    this.requestCanceler_ = this.$q_.defer();\n    this.gmfPrintState_.state = exports.PrintStateEnum.PRINTING;\n\n    const mapSize = this.map.getSize();\n    const viewResolution = this.map.getView().getResolution() || 0;\n    const scale = this.layoutInfo.scale || this.getOptimalScale_(mapSize, viewResolution);\n    const datasource = this.getDataSource_();\n\n    const customAttributes = {\n      'datasource': datasource\n    };\n\n    if (this.layoutInfo.simpleAttributes) {\n      this.layoutInfo.simpleAttributes.forEach((field) => {\n        customAttributes[field.name] = field.value;\n      });\n    }\n\n    if (this.layoutInfo.legend) {\n      const legend = this.getLegend_(scale);\n      if (legend !== null) {\n        customAttributes['legend'] = this.getLegend_(scale);\n      }\n    }\n\n    googAsserts.assertNumber(this.layoutInfo.dpi);\n    googAsserts.assertString(this.layoutInfo.layout);\n\n    // convert the WMTS layers to WMS\n    const map = new olMap({});\n    map.setView(this.map.getView());\n    const ol_layers = this.ngeoLayerHelper_.getFlatLayers(this.map.getLayerGroup());\n    const new_ol_layers = [];\n    let print_native_angle = true;\n    for (let i = 0, ii = ol_layers.length; i < ii; i++) {\n      let layer = ol_layers[i];\n      const metadata = layer.get('metadata');\n      if (metadata) {\n        const server_name = metadata.ogcServer;\n        const layer_names = metadata.printLayers || metadata.layers;\n        if (server_name && layer_names) {\n          const server = this.ogcServers_[server_name];\n          if (server) {\n            layer = this.ngeoLayerHelper_.createBasicWMSLayer(\n              server.url,\n              layer_names,\n              server.imageType,\n              server.type\n            );\n          } else {\n            console.error('Missing ogcServer:', server_name);\n          }\n        }\n      }\n\n      // Get the print native angle parameter for WMS layers when set to not use default value\n      // Is applied only once when the value is overridden with a metadata from administration\n      if (layer instanceof olLayerImage && layer.get('printNativeAngle') === false) {\n        print_native_angle = false;\n      }\n\n      new_ol_layers.push(layer);\n    }\n    map.setLayerGroup(new olLayerGroup({\n      layers: new_ol_layers,\n      'printNativeAngle': print_native_angle\n    }));\n\n    const spec = this.ngeoPrint_.createSpec(map, scale, this.layoutInfo.dpi,\n      this.layoutInfo.layout, format, customAttributes);\n\n    // Add feature overlay layer to print spec.\n    const layers = [];\n    this.ngeoPrint_.encodeLayer(layers, this.featureOverlayLayer_,\n      viewResolution);\n    if (layers.length > 0) {\n      spec.attributes.map.layers.unshift(layers[0]);\n    }\n\n    this.ngeoPrint_.createReport(spec, /** @type {angular.$http.Config} */ ({\n      timeout: this.requestCanceler_.promise\n    })).then(\n      this.handleCreateReportSuccess_.bind(this),\n      this.handleCreateReportError_.bind(this)\n    );\n\n    // remove temporary map\n    map.setTarget(null);\n  }\n\n\n  /**\n   * Cancel the current print and reset its state.\n   * @export\n   */\n  cancel() {\n    // Cancel the latest request, if it's not finished yet.\n    if (this.requestCanceler_ !== null) {\n      this.requestCanceler_.resolve();\n    }\n\n    // Cancel the status timeout if there's one set, to make sure no other\n    // status request is sent.\n    if (this.statusTimeoutPromise_ !== null) {\n      this.$timeout_.cancel(this.statusTimeoutPromise_);\n    }\n\n    if (this.curRef_.length > 0) {\n      this.ngeoPrint_.cancel(this.curRef_);\n    }\n\n    this.resetPrintStates_();\n  }\n\n\n  /**\n   * @param {gmf.print.component.PrintStateEnum=} opt_printState the print state.\n   * @private\n   */\n  resetPrintStates_(opt_printState) {\n    this.gmfPrintState_.state = opt_printState || exports.PrintStateEnum.NOT_IN_USE;\n    this.curRef_ = '';\n  }\n\n\n  /**\n   * Get datasource object for print report\n   * @private\n   * @return {Array.<gmfx.datasource.DataSourcePrintReportObject>} the data\n   *     source objet for the print report\n   */\n  getDataSource_() {\n    let datasourceObj, data, columns;\n    const datasourceArr = [];\n    const sources = this.ngeoQueryResult_.sources;\n    sources.forEach(function(source) {\n      data = [];\n      columns = [];\n      source.features.forEach(function(feature, i) {\n        googAsserts.assert(feature);\n        const properties = ngeoMiscFeatureHelper.getFilteredFeatureValues(feature);\n        if (i === 0) {\n          columns = Object.keys(properties).map(function tanslateColumns(prop) {\n            return this.translate_(prop);\n          }, this);\n        }\n        data.push(Object.keys(properties).map(key => properties[key]));\n      }, this);\n      if (columns.length) {\n        datasourceObj =\n          /** @type {gmfx.datasource.DataSourcePrintReportObject} */({\n            title: this.translate_(source.label),\n            table: {\n              columns,\n              data\n            }\n          });\n        datasourceArr.push(datasourceObj);\n      }\n    }, this);\n    return datasourceArr;\n  }\n\n\n  /**\n   * Get the optimal scale to display the print mask. Return the first scale if\n   * no scale matches.\n   * @param {ol.Size|undefined} mapSize Size of the map on the screen (px).\n   * @param {number|undefined} viewResolution Resolution of the map on the screen.\n   * @return {number} The best scale. -1 is returned if there is no optimal\n   *     scale, that is the optimal scale is lower than or equal to the first\n   *     value in printMapScales.\n   * @private\n   */\n  getOptimalScale_(mapSize, viewResolution) {\n    const scales = this.layoutInfo.scales.slice();\n    if (mapSize !== undefined && viewResolution !== undefined) {\n      return this.ngeoPrintUtils_.getOptimalScale(mapSize, viewResolution,\n        this.paperSize_, scales.reverse());\n    }\n    return this.layoutInfo.scales[0];\n  }\n\n\n  /**\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  handleCreateReportSuccess_(resp) {\n    const mfResp = /** @type {MapFishPrintReportResponse} */ (resp.data);\n    const ref = mfResp.ref;\n    googAsserts.assert(ref.length > 0);\n    this.curRef_ = ref;\n    this.getStatus_(ref);\n  }\n\n\n  /**\n   * @param {string} ref Ref.\n   * @private\n   */\n  getStatus_(ref) {\n    this.requestCanceler_ = this.$q_.defer();\n    this.ngeoPrint_.getStatus(ref, /** @type {angular.$http.Config} */ ({\n      timeout: this.requestCanceler_.promise\n    })).then(\n      this.handleGetStatusSuccess_.bind(this, ref),\n      this.handleCreateReportError_.bind(this)\n    );\n  }\n\n\n  /**\n   * @param {string} ref Ref.\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  handleGetStatusSuccess_(ref, resp) {\n    const mfResp = /** @type {MapFishPrintStatusResponse} */ (resp.data);\n    const done = mfResp.done;\n    if (done) {\n      if (mfResp.status != 'error') {\n        // The report is ready. Open it by changing the window location.\n        window.location.href = this.ngeoPrint_.getReportUrl(ref);\n        this.resetPrintStates_();\n      } else {\n        console.error(mfResp.error);\n        this.handleCreateReportError_();\n      }\n    } else {\n      // The report is not ready yet. Check again in 1s.\n      this.statusTimeoutPromise_ = this.$timeout_(() => {\n        this.getStatus_(ref);\n      }, 1000, false);\n    }\n  }\n\n\n  /**\n   * @private\n   */\n  handleCreateReportError_() {\n    this.resetPrintStates_(exports.PrintStateEnum.ERROR_ON_REPORT);\n  }\n\n\n  /**\n   * @param {number} scale The scale to get the legend (for wms layers only).\n   * @return {Object?} Legend object for print report or null.\n   * @private\n   */\n  getLegend_(scale) {\n    const legend = {'classes': []};\n    let classes, layerNames, layerName, icons;\n    const gettextCatalog = this.gettextCatalog_;\n\n    // Get layers from layertree only.\n    const dataLayerGroup = this.ngeoLayerHelper_.getGroupFromMap(this.map,\n      gmfBase.DATALAYERGROUP_NAME);\n    const layers = this.ngeoLayerHelper_.getFlatLayers(dataLayerGroup);\n\n    // For each visible layer in reverse order, get the legend url.\n    layers.reverse().forEach((layer) => {\n      classes = [];\n      if (layer.getVisible() && layer.getSource()) {\n        // For WMTS layers.\n        if (layer instanceof olLayerTile) {\n          layerName = `${layer.get('layerNodeName')}`;\n          icons = this.getMetadataLegendImage_(layerName);\n          if (!icons) {\n            icons = this.ngeoLayerHelper_.getWMTSLegendURL(layer);\n          }\n          // Don't add classes without legend url.\n          if (icons) {\n            classes.push({\n              'name': gettextCatalog.getString(layerName),\n              'icons': [icons]\n            });\n          }\n        } else {\n          const source = /** @type ol.source.ImageWMS */ (layer.getSource());\n          // For each name in a WMS layer.\n          layerNames = source.getParams()['LAYERS'].split(',');\n          layerNames.forEach((name) => {\n            icons = this.getMetadataLegendImage_(name);\n            if (!icons) {\n              icons = this.ngeoLayerHelper_.getWMSLegendURL(source.getUrl(), name,\n                scale);\n            }\n            // Don't add classes without legend url or from layers without any\n            // active name.\n            if (icons && name.length !== 0) {\n              classes.push({\n                'name': gettextCatalog.getString(name),\n                'icons': [icons]\n              });\n            }\n          });\n        }\n      }\n\n      // Add classes object only if it contains something.\n      if (classes.length > 0) {\n        legend['classes'].push({'classes': classes});\n      }\n\n    });\n\n    return legend['classes'].length > 0 ?  legend : null;\n  }\n\n\n  /**\n   * Return the metadata legendImage of a layer from the found corresponding node\n   * or undefined.\n   * @param {string} layerName a layer name.\n   * @return {string|undefined} The legendImage or undefined.\n   * @private\n   */\n  getMetadataLegendImage_(layerName) {\n    const groupNode = gmfThemeThemes.findGroupByLayerNodeName(this.currentThemes_, layerName);\n    let node;\n    if (groupNode && groupNode.children) {\n      node = gmfThemeThemes.findObjectByName(groupNode.children, layerName);\n    }\n    let legendImage;\n    if (node && node.metadata) {\n      legendImage = node.metadata.legendImage;\n    }\n    return legendImage;\n  }\n\n\n  /**\n   * Set the current layout and update all layout information with this new layout parameters.\n   * @param {string!} layoutName A layout name as existing in the list of\n   *     existing layouts.\n   * @export\n   */\n  setLayout(layoutName) {\n    let layout;\n    this.layouts_.forEach((l) => {\n      if (l.name === layoutName) {\n        layout = l;\n        return true; // break;\n      }\n    });\n    this.layout_ = layout;\n    this.updateFields_();\n  }\n\n\n  /**\n   * Get or set the print scale value and adapt the zoom to match with this new scale.\n   * @param {number=} opt_scale A scale value as existing in the scales list field.\n   * @return {number|undefined} New scale.\n   * @export\n   */\n  getSetScale(opt_scale) {\n    if (opt_scale !== undefined) {\n      const mapSize = this.map.getSize() || [0, 0];\n      this.layoutInfo.scale = opt_scale;\n      const res = this.ngeoPrintUtils_.getOptimalResolution(mapSize, this.paperSize_, opt_scale);\n      const contrainRes = this.map.getView().constrainResolution(res, 0, 1);\n      this.map.getView().setResolution(contrainRes);\n      // Render the map to update the postcompose mask manually\n      this.map.render();\n      this.scaleManuallySelected_ = true;\n    }\n    return this.layoutInfo.scale;\n  }\n\n\n  /**\n   * Set the print dpi value.\n   * @param {number} dpi A dpi value as existing in the dpis list field.\n   * @export\n   */\n  setDpi(dpi) {\n    this.layoutInfo.dpi = dpi;\n  }\n\n\n  /**\n   * Check the current state of the print.\n   * @param {string} stateEnumKey An enum key from gmf.print.component.PrintStateEnum.\n   * @return {boolean} True if the given state matches with the current print\n   *     state. False otherwise.\n   * @export\n   */\n  isState(stateEnumKey) {\n    return this.gmfPrintState_.state === exports.PrintStateEnum[stateEnumKey];\n  }\n};\n\nexports.controller('GmfPrintController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.datetimepickerComponent\n */\nimport DateFormatter from 'ngeo/misc/php-date-formatter.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.css';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDateTimePicker', ['gettext']);\n\n/**\n * A directive used to display a date or time picker\n *\n * Example:\n *\n *      <input ngeo-datetimepicker\n *          ngeo-datetimepicker-options=\"{timepicker: false}\"\n *\n * @htmlAttribute {Object} ngeo-datetimepicker-options The options.\n *\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname ngeoDatetimepicker\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    controller: exports.Controller_,\n    bindToController: true,\n    scope: {\n      'options': '<ngeoDatetimepickerOptions'\n    }\n  };\n};\n\nexports.directive('ngeoDatetimepicker', exports.component_);\n\n\n/**\n * @param {!jQuery} $element Element.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDatetimepickerController\n */\nexports.Controller_ = function($element, gettextCatalog) {\n  /**\n   * @const {!jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * The gettext catalog\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * The options\n   * @type {Object|String}\n   * @private\n   */\n  this.options;\n};\n\n\n/**\n * Initialize the directive.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const lang = this.gettextCatalog_.getCurrentLanguage();\n  $.datetimepicker.setLocale(lang);\n  $.datetimepicker.setDateFormatter(new DateFormatter());\n  if (typeof this.options === 'string') {\n    this.options = angular.fromJson(this.options);\n  }\n  this.element_.datetimepicker(this.options);\n};\n\nexports.controller('ngeoDateTimePickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.attributesComponent\n */\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscDatetimepickerComponent from 'ngeo/misc/datetimepickerComponent.js';\n\nconst exports = angular.module('ngeoAttributes', [\n  ngeoMiscDatetimepickerComponent.name,\n  ngeoMiscEventHelper.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/editing/attributescomponent', require('./attributescomponent.html'));\n});\n\n\nexports.value('ngeoAttributesTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoAttributesTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/editing/attributescomponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoAttributesTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoAttributesTemplateUrl($attrs, ngeoAttributesTemplateUrl) {\n  return ngeoAttributesTemplateUrl($attrs);\n}\n\n\n/**\n * Component used to render the attributes of a feature into a form.\n * Example:\n *\n *     <ngeo-attributes\n *       ngeo-attributes-attributes=\"::ctrl.attributes\"\n *       ngeo-attributes-disabled=\"ctrl.attributesDisabled\"\n *       ngeo-attributes-feature=\"::ctrl.feature\">\n *     </ngeo-attributes>\n *\n * @htmlAttribute {Array.<ngeox.Attribute>} ngeo-attributes-attributes The\n *     list of attributes to use.\n * @htmlAttribute {boolean} ngeo-attributes-disabled Whether the fieldset should\n *     be disabled or not.\n * @htmlAttribute {ol.Feature} ngeo-attributes-feature The feature.\n *\n * @ngdoc component\n * @ngname ngeoAttributes\n */\nexports.component_ = {\n  controller: 'ngeoAttributesController as attrCtrl',\n  bindings: {\n    'attributes': '=ngeoAttributesAttributes',\n    'disabled': '<ngeoAttributesDisabled',\n    'feature': '=ngeoAttributesFeature'\n  },\n  require: {\n    'form': '^'\n  },\n  templateUrl: ngeoAttributesTemplateUrl\n};\n\nexports.component('ngeoAttributes', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoAttributesController\n */\nexports.Controller_ = function($scope, ngeoEventHelper) {\n\n  /**\n   * The list of attributes to create the form with.\n   * @type {Array.<ngeox.Attribute>}\n   * @export\n   */\n  this.attributes;\n\n  /**\n   * Whether the fieldset should be disabled or not.\n   * @type {boolean}\n   * @export\n   */\n  this.disabled = false;\n\n  /**\n   * The feature containing the values.\n   * @type {ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * The properties bound to the form, initialized with the inner properties\n   * of the feature.\n   * @type {?Object.<string, *>}\n   * @export\n   */\n  this.properties;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * While changes happen from the form (from the template), they are applied\n   * to the feature inner properties. The 'propertychange' event registered\n   * above does the opposite, i.e. it listens to the feature inner properties\n   * changes and apply them to the form. To prevent circular issues, while\n   * applying changes coming from the form, this flag is set. While set, changes\n   * from the feature inner properties are ignored.\n   * @type {boolean}\n   * @private\n   */\n  this.updating_ = false;\n};\n\n\n/**\n * Initialise the component.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.properties = this.feature.getProperties();\n\n  // Listen to the feature inner properties change and apply them to the form\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(this.feature, 'propertychange', this.handleFeaturePropertyChange_, this)\n  );\n};\n\n\n/**\n * Called when an input node value changes\n * @param {string} name Attribute name\n * @export\n */\nexports.Controller_.prototype.handleInputChange = function(name) {\n  this.updating_ = true;\n  const value = this.properties[name];\n  this.feature.set(name, value);\n  this.updating_ = false;\n};\n\n\n/**\n * Cleanup event listeners.\n */\nexports.Controller_.prototype.$onDestroy = function() {\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n};\n\n\n/**\n * @param {ol.Object.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturePropertyChange_ = function(evt) {\n  if (this.updating_) {\n    return;\n  }\n  this.properties[evt.key] = evt.target.get(evt.key);\n  this.scope_.$apply();\n};\n\n\nexports.controller('ngeoAttributesController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.exportfeaturesComponent\n */\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\n\nconst exports = angular.module('ngeoExportfeatures', [\n  ngeoMiscFeatureHelper.module.name\n]);\n\n/**\n * Directive used to export vector features in different types of format.\n * To configure which formats to use, define the `ngeoExportFeatureFormats`\n * value, as such:\n *\n *     app.module.value('ngeoExportFeatureFormats', [\n *         ngeo.misc.FeatureHelper.FormatType.KML,\n *         ngeo.misc.FeatureHelper.FormatType.GPX\n *     ]);\n *\n * Example:\n *\n *     <button\n *       ngeo-exportfeatures\n *       ngeo-exportfeatures-features=\"ctrl.features\"\n *       class=\"btn btn-link\">Export</button>\n *\n * @htmlAttribute {ol.Collection.<ol.Feature>} ngeo-exportfeatures-features The\n *     features to export\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoExportfeatures\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoExportfeaturesController as efCtrl',\n    scope: true,\n    bindToController: {\n      'features': '=ngeoExportfeaturesFeatures'\n    }\n  };\n};\n\n\nexports.directive('ngeoExportfeatures', exports.directive_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoExportfeaturesController\n */\nexports.Controller_ = function($element, $injector, $scope,\n  ngeoFeatureHelper) {\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  const uid = olBase.getUid(this);\n  const id = ['ngeo-exportfeature', uid].join('-');\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.id_ = id;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  let formats;\n  if ($injector.has('ngeoExportFeatureFormats')) {\n    formats = $injector.get('ngeoExportFeatureFormats');\n  } else {\n    formats = [ngeoMiscFeatureHelper.FormatType.KML];\n  }\n\n  /**\n   * @type {?jQuery}\n   * @private\n   */\n  this.menu_ = null;\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.items_ = [];\n\n  // build the drop-down menu and items if there's more than one format\n  if (formats.length > 1) {\n    $element.attr('id', id);\n    const $menu = $('<ul />', {\n      'class': 'dropdown-menu',\n      'aria-labelledby': id\n    }).appendTo($element.parent()[0]);\n\n    this.menu_ = $menu;\n    let $item;\n\n    formats.forEach((format) => {\n      $item = $('<li />')\n        .appendTo($menu)\n        .append($('<a />', {\n          'href': '#',\n          'text': format\n        })\n          .on(\n            ['click', id].join('.'),\n            this.handleMenuItemClick_.bind(this, format)\n          )\n        );\n      this.items_.push($item);\n    });\n  }\n\n  /**\n   * @type {Array.<string>}\n   * @private\n   */\n  this.formats_ = formats;\n\n  $element.on(['click', id].join('.'), this.handleElementClick_.bind(this));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Called when the element bound to this directive is clicked. Use the feature\n * helper to export the feature(s) depending on the format(s) available(s).\n * If there's only one, the call to the export method is direct, otherwise\n * a drop-down menu is show to let the user choose the format of the export.\n * Finally, if there's only one feature in the collection to export and there's\n * more than one format set, some formats may not support the type of geometry.\n * If that's the case, then disable each format item in the drop-down menu\n * that doesn't support the type of geometry.\n * @private\n */\nexports.Controller_.prototype.handleElementClick_ = function() {\n\n  const features = this.features.getArray();\n\n  if (this.formats_.length === 1) {\n    this.featureHelper_.export(features, this.formats_[0]);\n  } else if (features.length === 1) {\n    const feature = features[0];\n    const geom = feature.getGeometry();\n    let $item;\n    this.formats_.forEach((format, i) => {\n      $item = this.items_[i];\n      if (format === ngeoMiscFeatureHelper.FormatType.GPX) {\n        if (geom instanceof olGeomPoint ||\n            geom instanceof olGeomLineString) {\n          $item.removeClass('disabled');\n        } else {\n          $item.addClass('disabled');\n        }\n      }\n    });\n  }\n};\n\n\n/**\n * Called when a menu item is clicked. Export the features to the selected\n * format.\n * @param {string} format Format.\n * @param {jQuery.Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuItemClick_ = function(format, event) {\n  if (!$(event.target.parentElement).hasClass('disabled')) {\n    const features = this.features.getArray();\n    this.featureHelper_.export(features, format);\n  }\n};\n\n\n/**\n * Cleanup event listeners and remove the menu from DOM, if any.\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  const id = this.id_;\n\n  this.element_.off(['click', id].join('.'));\n\n  if (this.menu_) {\n    this.menu_.remove();\n    this.items_.forEach(($item) => {\n      $item.off(['click', id].join('.'));\n    });\n    this.items_.length = 0;\n    this.menu_ = null;\n  }\n};\n\n\nexports.controller(\n  'ngeoExportfeaturesController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.sortableComponent\n */\nimport 'jquery-ui/ui/widgets/sortable.js';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoSortable', []);\n\n\n/**\n * Provides a directive that allows drag-and-dropping DOM items between them.\n * It also changes the order of elements in the given array.\n *\n * It is typically used together with `ng-repeat`, for example for re-ordering\n * layers in a map.\n *\n * Example:\n *\n *     <ul ngeo-sortable=\"ctrl.layers\"\n *         ngeo-sortable-options=\"{handleClassName: 'ngeo-sortable-handle'}\">\n *       <li ng-repeat=\"layer in ctrl.layers\">\n *         <span class=\"ngeo-sortable-handle\">handle</span>{{layer.get('name')}}\n *       </li>\n *     </ul>\n *\n * The value of the \"ngeo-sortable\" attribute is an expression which evaluates\n * to an array (an array of layers in the above example). This is the array\n * that is re-ordered after a drag-and-drop.\n *\n * The element with the class \"ngeo-sortable-handle\" is the \"drag handle\".\n * It is required.\n *\n * This directives uses `$watchCollection` to watch the \"sortable\" array. So\n * if some outside code adds/removes elements to/from the \"sortable\" array,\n * the \"ngeoSortable\" directive will pick it up.\n *\n * See our live example: [../examples/layerorder.html](../examples/layerorder.html)\n *\n * @htmlAttribute {Array.<ol.layer.Base>} ngeo-sortable The layers to sort.\n * @htmlAttribute {!ngeox.miscSortableOptions} ngeo-sortable-options The options.\n * @htmlAttribute {Function(angular.JQLite, Array)?} ngeo-sortable-callback\n *     Callback function called after the move end. The Function will be called\n *     with the element and the sort array as arguments.\n * @htmlAttribute {Object?} ngeo-sortable-callback-ctx Context to apply at\n *     the call of the callback function.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoSortable\n */\nexports.component_ = function($timeout) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const sortable = /** @type {Array} */\n              (scope.$eval(attrs['ngeoSortable'])) || [];\n      googAsserts.assert(Array.isArray(sortable));\n\n      scope.$watchCollection(() => sortable, () => {\n        sortable.length && $timeout(resetUpDragDrop, 0);\n      });\n\n      const optionsObject = scope.$eval(attrs['ngeoSortableOptions']);\n      const options = getOptions(optionsObject);\n\n      const callbackFn = scope.$eval(attrs['ngeoSortableCallback']);\n      const callbackCtx = scope.$eval(attrs['ngeoSortableCallbackCtx']);\n\n      /**\n       * This function resets drag&drop for the list. It is called each\n       * time the sortable array changes (see $watchCollection above).\n       */\n      function resetUpDragDrop() {\n        // Add an index to the sortable to allow sorting of the\n        // underlying data.\n        const children = element.children();\n        for (let i = 0; i < children.length; ++i) {\n          angular.element(children[i]).data('idx', i);\n        }\n\n        const sortableElement = $(element);\n\n        // the element is already sortable; reset it.\n        if (sortableElement.data('ui-sortable')) {\n          sortableElement.off('sortupdate');\n          sortableElement.sortable('destroy');\n        }\n\n        const sortableOptions = {\n          'axis': 'y',\n          'classes': {\n            'ui-sortable-helper': options['draggerClassName']\n          }\n        };\n\n        // CSS class of the handle\n        if (options['handleClassName']) {\n          sortableOptions['handle'] = `.${options['handleClassName']}`;\n        }\n\n        // Placeholder for the item being dragged in the sortable list\n        if (options['placeholderClassName']) {\n          sortableOptions['placeholder'] = options['placeholderClassName'];\n          sortableOptions['forcePlaceholderSize'] = true;\n        }\n\n        sortableElement.sortable(sortableOptions);\n\n        // This event is triggered when the user stopped sorting and\n        // the DOM position (i.e. order in the sortable list) has changed.\n        sortableElement.on('sortupdate', (event, ui) => {\n          const oldIndex = $(ui.item[0]).data('idx');\n          const newIndex = ui.item.index();\n\n          // Update (data)-index on dom element to its new position\n          $(ui.item[0]).data('idx', newIndex);\n\n          // Move dragged item to new position\n          scope.$apply(() => {\n            sortable.splice(newIndex, 0, sortable.splice(oldIndex, 1)[0]);\n          });\n\n          // Call the callback function if it exists.\n          if (callbackFn instanceof Function) {\n            callbackFn.apply(callbackCtx, [element, sortable]);\n          }\n        });\n      }\n\n      /**\n       * @param {?} options Options after expression evaluation.\n       * @return {!ngeox.miscSortableOptions} Options object.\n       * @private\n       */\n      function getOptions(options) {\n        let ret;\n        const defaultHandleClassName = 'ngeo-sortable-handle';\n        if (options === undefined) {\n          ret = {'handleClassName': defaultHandleClassName};\n        } else {\n          if (options['handleClassName'] === undefined) {\n            options['handleClassName'] = defaultHandleClassName;\n          }\n          ret = /** @type {ngeox.miscSortableOptions} */ (options);\n        }\n        return ret;\n      }\n\n    }\n  };\n};\n\nexports.directive('ngeoSortable', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.popoverComponent\n */\nimport 'bootstrap/js/tooltip.js';\nimport 'bootstrap/js/popover.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoPopover', []);\n\n\n/**\n * Provides a directive used to display a Bootstrap popover.\n *\n *<div ngeo-popover>\n *  <a ngeo-popover-anchor class=\"btn btn-info\">anchor 1</a>\n *  <div ngeo-popover-content>\n *    <ul>\n *      <li>action 1:\n *        <input type=\"range\"/>\n *      </li>\n *    </ul>\n *  </div>\n *</div>\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopover\n * @return {angular.Directive} The Directive Definition Object.\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoPopoverController as popoverCtrl',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.anchorElm.on('hidden.bs.popover', () => {\n        /**\n         * @type {{inState : Object}}\n         */\n        const popover = ngeoPopoverCtrl.anchorElm.data('bs.popover');\n        popover['inState'].click = false;\n      });\n\n      ngeoPopoverCtrl.anchorElm.on('inserted.bs.popover', () => {\n        ngeoPopoverCtrl.bodyElm.show();\n        ngeoPopoverCtrl.shown = true;\n      });\n\n      ngeoPopoverCtrl.anchorElm.popover({\n        container: 'body',\n        html: true,\n        content: ngeoPopoverCtrl.bodyElm,\n        placement: attrs['ngeoPopoverPlacement'] || 'right'\n      });\n\n      if (attrs['ngeoPopoverDismiss']) {\n        $(attrs['ngeoPopoverDismiss']).on('scroll', () => {\n          ngeoPopoverCtrl.dismissPopover();\n        });\n      }\n\n      scope.$on('$destroy', () => {\n        ngeoPopoverCtrl.anchorElm.popover('destroy');\n        ngeoPopoverCtrl.anchorElm.unbind('inserted.bs.popover');\n        ngeoPopoverCtrl.anchorElm.unbind('hidden.bs.popover');\n      });\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopoverAnchor\n * @return {angular.Directive} The Directive Definition Object\n */\nexports.anchorComponent = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoPopover',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.anchorElm = elem;\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopoverContent\n * @return {angular.Directive} The Directive Definition Object\n */\nexports.contentComponent = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoPopover',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.bodyElm = elem;\n      elem.hide();\n    }\n  };\n};\n\n/**\n * The controller for the 'popover' directive.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoPopoverController\n * @param {angular.Scope} $scope Scope.\n */\nexports.PopoverController_ = function($scope) {\n  /**\n   * The state of the popover (displayed or not)\n   * @type {boolean}\n   * @export\n   */\n  this.shown = false;\n\n  /**\n   * @type {angular.JQLite|undefined}\n   * @export\n   */\n  this.anchorElm = undefined;\n\n  /**\n   * @type {angular.JQLite|undefined}\n   * @export\n   */\n  this.bodyElm = undefined;\n\n  function onMouseDown(clickEvent) {\n    if (this.anchorElm[0] !== clickEvent.target &&\n      this.bodyElm.parent()[0] !== clickEvent.target &\n      this.bodyElm.parent().find(clickEvent.target).length === 0 && this.shown) {\n      this.dismissPopover();\n    }\n  }\n\n  angular.element('body').on('mousedown', onMouseDown.bind(this));\n\n  $scope.$on('$destroy', () => {\n    angular.element('body').off('mousedown', onMouseDown);\n  });\n};\n\n\n/**\n * Dissmiss popover function\n * @export\n */\nexports.PopoverController_.prototype.dismissPopover = function() {\n  this.shown = false;\n  this.anchorElm.popover('hide');\n};\n\n\nexports.controller('NgeoPopoverController', exports.PopoverController_);\nexports.directive('ngeoPopover', exports.component_);\nexports.directive('ngeoPopoverAnchor', exports.anchorComponent);\nexports.directive('ngeoPopoverContent', exports.contentComponent);\n\n\nexport default exports;\n","/**\n * @module gmf.search.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfSearchFulltextSearch from 'gmf/search/FulltextSearch.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscAutoProjection from 'ngeo/misc/AutoProjection.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopoverComponent from 'ngeo/message/popoverComponent.js';\n\nimport ngeoSearchModule from 'ngeo/search/module.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olObj from 'ol/obj.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfSearch', [\n  gmfLayertreeTreeManager.module.name,\n  gmfSearchFulltextSearch.module.name,\n  gmfThemeThemes.module.name,\n  ngeoMiscAutoProjection.module.name,\n  ngeoMiscColorpickerComponent.name,\n  ngeoSearchModule.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessagePopoverComponent.name,\n]);\n\n\n/**\n * @param {angular.JQLite} element Element.\n * @param {angular.Attributes} attrs Attributes.\n * @return {string} Template URL.\n */\nexports.gmfSearchTemplateUrl_ = (element, attrs) => {\n  const templateUrl = attrs['gmfSearchTemplateurl'];\n  return templateUrl !== undefined ? templateUrl :\n    'gmf/search';\n};\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/search', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfSearchTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfSearchTemplateUrl($element, $attrs, gmfSearchTemplateUrl) {\n  return gmfSearchTemplateUrl($element, $attrs);\n}\n\n\n/**\n * A component that allows to search and recenter on a selected\n * result's feature.\n * It can search in multiple GeoJSON datasources.\n * It can filter and group results by a feature's property.\n *\n * This component uses the {@link ngeo.map.FeatureOverlayMgr} to create a\n * feature overlay for drawing features on the map. The application\n * is responsible to initialize the {@link ngeo.map.FeatureOverlayMgr}\n * with the map.\n *\n * Example flat results:\n *\n *      <gmf-search gmf-search-map=\"::ctrl.map\"\n *        gmf-search-options=\"::ctrl.searchOptions\"\n *        gmf-search-styles=\"::ctrl.searchStyles\"\n *        gmf-search-datasources=\"::ctrl.searchDatasources\"\n *        gmf-search-coordinatesprojections=\"::ctrl.searchCoordinatesProjections\">\n *      </gmf-search>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('fulltextsearchUrl', '${request.route_url('fulltextsearch', _query={\"limit\": 20}) | n}');\n *          module.value('gmfSearchGroups', []);\n *          module.constant('gmfSearchActions', [\n *                {action: 'add_theme', title: 'Add a theme'},\n *                {action: 'add_group', title: 'Add a sub theme'},\n *                {action: 'add_layer', title: 'Add a layer'}\n *          ]);\n *        })();\n *      </script>\n *\n * Example with categories:\n *\n *      <gmf-search gmf-search-map=\"::ctrl.map\"\n *        gmf-search-options=\"::ctrl.searchOptions\"\n *        gmf-search-styles=\"::ctrl.searchStyles\"\n *        gmf-search-datasources=\"::ctrl.searchDatasources\"\n *        gmf-search-coordinatesprojections=\"::ctrl.searchCoordinatesProjections\">\n *      </gmf-search>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('fulltextsearchUrl', '${request.route_url('fulltextsearch', _query={\"limit\": 30, \"partitionlimit\": 5}) | n}');\n *          module.value('gmfSearchGroups', ${dumps(fulltextsearch_groups) | n});\n *          module.value('gmfSearchActions', []);\n *        })();\n *     </scriptrchUrl' value in the examples above set three \"_query\" parameters: \"limit\",\n *\n * The 'fulltextsearchUrl' value in the examples above set three \"_query\" parameters: \"limit\",\n * \"partitionlimit\" and \"ranksystem\". For this last one \"ts_rank_cd\" is the only effective value. It's used to\n * order your search results with the \"ts_rank_cd\" ranking system from PostgreSQL module pg_trgm. Without\n * this value, the PostgreSQL function \"similarity\" (module pg_trgm) is used for the ranking. Read the\n * full-text search c2cgeoportal documentation to know more.\n * You can also add these parameters to the \"url\" variable of one (or more) of the\n * gmfx.SearchDirectiveDatasource given to this component (here within the \"ctrl.searchDatasources\"). That\n * allows you to have multiples configurations on one search component.\n *\n * @htmlAttribute {string} gmf-search-input-value The input value (read only).\n * @htmlAttribute {ol.Map} gmf-search-map The map.\n * @htmlAttribute {TypeaheadOptions|undefined} gmf-search-options Addition Typeahead options.\n * @htmlAttribute {gmfx.SearchComponentDatasource} gmf-search-datasource\n *      The datasources.\n * @htmlAttribute {Object.<string, ol.style.Style>}\n *      gmf-search-styles A map of styles to apply on searched features. Keys\n *      must be the 'layer_name' property of features except for coordinates\n *      where the key ifor its style is the value of the constant\n *      'gmf.COORDINATES_LAYER_NAME'. The 'default' key is used to apply the\n *      default style.\n * @htmlAttribute {Array.<string>} gmf-search-coordinatesprojections codes\n *      of supported projections for coordinates search (projections must be\n *      defined in ol3). If not provided, only the map's view projection\n *      format will be supported.\n * @htmlAttribute {ngeox.SearchComponentListeners} gmf-search-listeners\n *      The listeners.\n * @htmlAttribute {boolean=} gmf-search-clearbutton Optional clear button in the input search. Default to true.\n * @htmlAttribute {number=} gmf-search-delay Optional bloodhound request delay in ms. Default to 50 ms.\n * @htmlAttribute {boolean=} gmf-search-colorchooser Optional. Whether to let the user\n *      change the style of the feature on the map. Default is false.\n * @htmlAttribute {number=} gmf-search-maxzoom Optional maximum zoom we will zoom on result, default is 16.\n * @htmlAttribute {function=} gmf-search-on-init Optional function called when the component is initialized.\n * @ngdoc component\n * @ngname gmfSearch\n */\nexports.component_ = {\n  bindings: {\n    'inputValue': '=?gmfSearchInputValue',\n    'placeholder': '@?gmfSearchPlaceholder',\n    'map': '<gmfSearchMap',\n    'datasources': '<gmfSearchDatasources',\n    'typeaheadOptions': '<?gmfSearchOptions',\n    'featuresStyles': '<?gmfSearchStyles',\n    'clearButton': '=?gmfSearchClearbutton',\n    'colorChooser': '<?gmfSearchColorchooser',\n    'coordinatesProjections': '<?gmfSearchCoordinatesprojections',\n    'additionalListeners': '<gmfSearchListeners',\n    'maxZoom': '<?gmfSearchMaxzoom',\n    'delay': '<?gmfSearchDelay',\n    'onInitCallback': '<?gmfSearchOnInit'\n  },\n  controller: 'gmfSearchController',\n  templateUrl: gmfSearchTemplateUrl\n};\n\n\nexports.value('gmfSearchTemplateUrl', exports.gmfSearchTemplateUrl_);\n\n\n// Register the controller in the module\nexports.component('gmfSearch', exports.component_);\n\n\n/**\n * @private\n */\nexports.SearchController_ = class {\n\n  /**\n   * @private\n   * @param {jQuery} $element Element.\n   * @param {angular.Scope} $scope The component's scope.\n   * @param {angular.$compile} $compile Angular compile service.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {ngeo.misc.AutoProjection} ngeoAutoProjection The ngeo coordinates service.\n   * @param {ngeo.search.createGeoJSONBloodhound.Function} ngeoSearchCreateGeoJSONBloodhound The ngeo\n   *     create GeoJSON Bloodhound service.\n   * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n   *     overlay manager service.\n   * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n   * @param {gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n   * @param {gmf.search.FulltextSearch} gmfSearchFulltextSearch gmf Full text search service.\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfSearchController\n   */\n  constructor($element, $scope, $compile, $timeout, $injector,\n    gettextCatalog, ngeoAutoProjection, ngeoSearchCreateGeoJSONBloodhound,\n    ngeoFeatureOverlayMgr, gmfThemes, gmfTreeManager, gmfSearchFulltextSearch) {\n\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {angular.$compile}\n     * @private\n     */\n    this.compile_ = $compile;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    /**\n     * @type {gmf.layertree.TreeManager}\n     * @private\n     */\n    this.gmfTreeManager_ = gmfTreeManager;\n\n    /**\n     * @type {gmf.search.FulltextSearch}\n     * @private\n     */\n    this.fullTextSearch_ = gmfSearchFulltextSearch;\n\n    /**\n     * @type {ngeo.search.createGeoJSONBloodhound.Function}\n     * @private\n     */\n    this.ngeoSearchCreateGeoJSONBloodhound_ = ngeoSearchCreateGeoJSONBloodhound;\n\n    /**\n     * @type {ngeo.map.FeatureOverlayMgr}\n     * @private\n     */\n    this.ngeoFeatureOverlayMgr = ngeoFeatureOverlayMgr;\n\n    /**\n     * @type {ngeo.statemanager.Location|undefined}\n     * @private\n     */\n    this.ngeoLocation_;\n\n    if ($injector.has('ngeoLocation')) {\n      this.ngeoLocation_ = $injector.get('ngeoLocation');\n    }\n\n    /**\n     * @type {ngeo.misc.AutoProjection}\n     * @private\n     */\n    this.ngeoAutoProjection_ = ngeoAutoProjection;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {Object}\n     * @private\n     */\n    this.styles_ = {};\n\n    /**\n     * @type {function()}\n     * @export\n     */\n    this.onInitCallback;\n\n    /**\n     * Whether or not to show a button to clear the search text.\n     * Default to true.\n     * @type {boolean}\n     * @export\n     */\n    this.clearButton;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.colorChooser;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.placeholder;\n\n    /**\n     * @type {number}\n     * @export\n     */\n    this.delay;\n\n    /**\n     * The maximum zoom we will zoom on result.\n     * @type {number}\n     * @export\n     */\n    this.maxZoom = 16;\n\n    /**\n     * Supported projections for coordinates search.\n     * @type {Array.<ol.proj.Projection>}\n     * @export\n     */\n    this.coordinatesProjections;\n\n    /**\n     * @type {ngeo.map.FeatureOverlay}\n     * @private\n     */\n    this.featureOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n    /**\n     * @type {Array.<gmfx.SearchComponentDatasource>}\n     * @export\n     */\n    this.datasources = [];\n\n    /**\n     * @type {TypeaheadOptions}\n     * @export\n     */\n    this.typeaheadOptions;\n\n    /**\n     * @type {TypeaheadOptions}\n     * @export\n     */\n    this.options = /** @type {TypeaheadOptions} */ ({\n      highlight: true\n    });\n\n    /**\n     * @type {Object.<string, ol.style.Style>}\n     * @export\n     */\n    this.featuresStyles;\n\n    /**\n     * @type {Array.<TypeaheadDataset>}\n     * @export\n     */\n    this.datasets = [];\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.inputValue = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.color;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.displayColorPicker = false;\n\n    /**\n     * @type {ngeox.SearchDirectiveListeners}\n     * @export\n     */\n    this.listeners;\n\n    /**\n     * @type {ngeox.SearchDirectiveListeners}\n     * @export\n     */\n    this.additionalListeners;\n  }\n\n\n  /**\n   * Called on initialization of the controller.\n   */\n  $onInit() {\n    const gettextCatalog = this.gettextCatalog_;\n    this.clearButton = this.clearButton !== false;\n    this.colorChooser = this.colorChooser === true;\n    if (this.delay === undefined) {\n      this.delay = 50;\n    }\n    this.placeholder = this.placeholder !== undefined ? this.placeholder :\n      gettextCatalog.getString('Search…');\n\n    // Init coordinates projections\n    let coordProj = this.coordinatesProjections;\n    if (coordProj === undefined) {\n      coordProj = [this.map.getView().getProjection()];\n    } else {\n      coordProj = this.ngeoAutoProjection_.getProjectionList(\n        /** @type {Array.<string>} */ (coordProj)\n      );\n    }\n    this.coordinatesProjections = coordProj;\n\n    if (!this.clearButton) {\n      // Empty the search field on focus and blur.\n      this.element_.find('input').on('focus blur', () => {\n        this.clear();\n      });\n    }\n\n    if (this.onInitCallback) {\n      this.onInitCallback();\n    }\n\n    this.initStyles_();\n\n    this.featureOverlay_.setStyle(this.getSearchStyle_.bind(this));\n\n    if (this.typeaheadOptions) {\n      olObj.assign(this.options, this.typeaheadOptions);\n    }\n\n    this.initDatasets_();\n\n    this.scope_.$watch(\n      () => this.color,\n      this.setStyleColor.bind(this)\n    );\n\n    this.listeners = this.mergeListeners_(\n      this.additionalListeners,\n      /** @type {ngeox.SearchDirectiveListeners} */ ({\n        select: this.select_.bind(this),\n        close: this.close_.bind(this),\n        datasetsempty: this.datasetsempty_.bind(this)\n      })\n    );\n\n    if (this.ngeoLocation_) {\n      const searchQuery = this.ngeoLocation_.getParam('search');\n      if (searchQuery) {\n        let resultIndex = 1;\n        if (this.ngeoLocation_.getParam('search-select-index')) {\n          resultIndex = parseInt(this.ngeoLocation_.getParam('search-select-index'), 10);\n        }\n        let mapZoom;\n        if (this.ngeoLocation_.getParam('search-maxzoom')) {\n          mapZoom = parseInt(this.ngeoLocation_.getParam('search-maxzoom'), 10);\n        } else if (this.ngeoLocation_.getParam('map_zoom')) {\n          mapZoom = parseInt(this.ngeoLocation_.getParam('map_zoom'), 10);\n        }\n        this.fulltextsearch_(searchQuery, resultIndex, mapZoom);\n      }\n    }\n  }\n\n\n  /**\n   * Merges the custom listeners received via the component attributes and the\n   * listeners that are needed for this controller to function (close and select).\n   * @param {ngeox.SearchDirectiveListeners} additionalListeners Custom provided\n   *    listeners.\n   * @param {ngeox.SearchDirectiveListeners} listeners Default listeners.\n   * @return {ngeox.SearchDirectiveListeners} Merged listeners.\n   * @private\n   */\n  mergeListeners_(additionalListeners, listeners) {\n    if (additionalListeners === undefined) {\n      return listeners;\n    }\n    return {\n      open: additionalListeners.open,\n      close: additionalListeners.close === undefined ?\n        listeners.close : function() {\n          listeners.close();\n          additionalListeners.close();\n        },\n      cursorchange: additionalListeners.cursorchange,\n      datasetsempty: additionalListeners.datasetsempty,\n      select: additionalListeners.select === undefined ?\n        listeners.select : function(evt, obj, dataset) {\n          listeners.select(evt, obj, dataset);\n          additionalListeners.select(evt, obj, dataset);\n        },\n      autocomplete: additionalListeners.autocomplete\n    };\n  }\n\n\n  /**\n   * Initialize datasets for the search\n   * @private\n   */\n  initDatasets_() {\n    const gettextCatalog = this.gettextCatalog_;\n    for (let i = 0; i < this.datasources.length; i++) {\n      const datasource = this.datasources[i];\n\n      /** @type {Array.<string>} */\n      const groupValues = datasource.groupValues !== undefined ? datasource.groupValues : [];\n      /** @type {Array.<string>} */\n      const groupActions = datasource.groupActions ? datasource.groupActions : [];\n      const filters = [];\n\n      if (groupValues.length === 0) {\n        filters.push({\n          'title': '',\n          'filter': this.filterLayername_()\n        });\n      } else {\n        groupValues.forEach(function(layerName) {\n          filters.push({\n            'title': layerName,\n            'filter': this.filterLayername_(layerName)\n          });\n        }, this);\n      }\n\n      groupActions.forEach(function(action) {\n        filters.push({\n          'title': gettextCatalog.getString(action['title']),\n          'filter': this.filterAction_(action['action'])\n        });\n      }, this);\n\n      filters.forEach(function(filter) {\n        this.datasets.push(this.createDataset_({\n          bloodhoundOptions: datasource.bloodhoundOptions,\n          datasetTitle: filter['title'],\n          groupsKey: 'layer_name',\n          labelKey: datasource.labelKey,\n          projection: datasource.projection,\n          typeaheadDatasetOptions: datasource.typeaheadDatasetOptions,\n          url: datasource.url\n        }, filter['filter']));\n      }, this);\n    }\n\n    // For searching coordinates\n    this.datasets.push({\n      source: this.createSearchCoordinates_(this.map.getView()),\n      name: 'coordinates',\n      display: 'label',\n      templates: {\n        header: () => {\n          const header = gettextCatalog.getString('Recenter to');\n          return `<div class=\"gmf-search-header\" translate>${header}</div>`;\n        },\n        suggestion: (suggestion) => {\n          const coordinates = suggestion['label'];\n\n          let html = `<p class=\"gmf-search-label\">${coordinates}</p>`;\n          html = `<div class=\"gmf-search-datum\">${html}</div>`;\n          return html;\n        }\n      }\n    });\n  }\n\n\n  /**\n   * @param {gmfx.SearchComponentDatasource} config The config of the dataset.\n   * @param {(function(GeoJSONFeature): boolean)=} opt_filter A filter function\n   *     based on a GeoJSONFeaturesCollection's array.\n   * @return {TypeaheadDataset} A typeahead dataset.\n   * @private\n   */\n  createDataset_(config, opt_filter) {\n    const gettextCatalog = this.gettextCatalog_;\n    const componentScope = this.scope_;\n    const compile = this.compile_;\n    const bloodhoundEngine = this.createAndInitBloodhound_(config, opt_filter);\n    const typeaheadDataset = /** @type {TypeaheadDataset} */ ({\n      limit: Infinity,\n      source: bloodhoundEngine.ttAdapter(),\n      display: (suggestion) => {\n        const feature = /** @type {ol.Feature} */ (suggestion);\n        return feature.get(config.labelKey);\n      },\n      templates: /* TypeaheadTemplates */ ({\n        header: () => {\n          if (config.datasetTitle === undefined) {\n            return '';\n          } else {\n            const header = gettextCatalog.getString(config.datasetTitle);\n            return `<div class=\"gmf-search-header\">${header}</div>`;\n          }\n        },\n        suggestion: (suggestion) => {\n          const feature = /** @type {ol.Feature} */ (suggestion);\n\n          const scope = componentScope.$new(true);\n          scope['feature'] = feature;\n\n          let html = `<p class=\"gmf-search-label\" translate>${\n            feature.get(config.labelKey)}</p>`;\n          html += `<p class=\"gmf-search-group\" translate>${feature.get('layer_name') ||\n                  config.datasetTitle}</p>`;\n          html = `<div class=\"gmf-search-datum\">${html}</div>`;\n          return compile(html)(scope);\n        }\n      })\n    });\n    if (config.typeaheadDatasetOptions) {\n      olObj.assign(typeaheadDataset, config.typeaheadDatasetOptions);\n    }\n    return typeaheadDataset;\n  }\n\n\n  /**\n   * @param {string} action The action to keep.\n   * @return {(function(GeoJSONFeature): boolean)} A filter function based on a\n   *     GeoJSONFeaturesCollection's array.\n   * @private\n   */\n  filterAction_(action) {\n    return (\n    /**\n         * @param {GeoJSONFeature} feature\n         * @return {boolean}\n         */\n      function(feature) {\n        const properties = feature['properties'];\n        if (properties['actions']) {\n          // result is an action (add_theme, add_group, ...)\n          // add it to the corresponding group\n          return !properties['layer_name'] && properties['actions'].some(act => act.action === action);\n        } else {\n          return false;\n        }\n      }\n    );\n  }\n\n\n  /**\n   * @param {string=} opt_layerName The layerName to keep. If null, keep all layers\n   *     (In all cases, except actions layers).\n   * @return {(function(GeoJSONFeature): boolean)} A filter function based on a\n   *     GeoJSONFeaturesCollection's array.\n   * @private\n   */\n  filterLayername_(opt_layerName) {\n    return (\n    /**\n         * @param {GeoJSONFeature} feature\n         * @return {boolean}\n         */\n      function(feature) {\n        const featureLayerName = feature['properties']['layer_name'];\n        // Keep only layers with layer_name (don't keep action layers).\n        if (featureLayerName === undefined) {\n          return false;\n        }\n        if (opt_layerName === undefined) {\n          return true;\n        }\n        return featureLayerName === opt_layerName;\n      }\n    );\n  }\n\n\n  /**\n   * @param {gmfx.SearchComponentDatasource} config The config of the dataset.\n   * @param {(function(GeoJSONFeature): boolean)=} opt_filter Afilter function\n   *     based on a GeoJSONFeaturesCollection's array.\n   * @return {Bloodhound} The bloodhound engine.\n   * @private\n   */\n  createAndInitBloodhound_(config, opt_filter) {\n    const mapProjectionCode = this.map.getView().getProjection().getCode();\n    const remoteOptions = this.getBloodhoudRemoteOptions_();\n    const bloodhound = this.ngeoSearchCreateGeoJSONBloodhound_(config.url, opt_filter,\n      olProj.get(mapProjectionCode), olProj.get(config.projection),\n      config.bloodhoundOptions, remoteOptions);\n    bloodhound.initialize();\n    return bloodhound;\n  }\n\n\n  /**\n   * @return {BloodhoundRemoteOptions} Options.\n   * @private\n   */\n  getBloodhoudRemoteOptions_() {\n    const gettextCatalog = this.gettextCatalog_;\n    return {\n      rateLimitWait: this.delay,\n      prepare: (query, settings) => {\n        const url = settings.url;\n        const lang = gettextCatalog.currentLanguage;\n        const interfaceName = 'mobile'; // FIXME dynamic interfaces\n        settings.xhrFields = {\n          withCredentials: true\n        };\n        settings.url = olUri.appendParams(url, {\n          'query': query,\n          'lang': lang,\n          'interface': interfaceName\n        });\n        return settings;\n      }\n    };\n  }\n\n\n  /**\n   * @param {ol.View} view View.\n   * @return {function(string, function(Object))} function defining parameters for the search suggestions.\n   * @private\n   */\n  createSearchCoordinates_(view) {\n    const viewProjection = view.getProjection();\n    const extent = viewProjection.getExtent();\n    return function(query, callback) {\n      const suggestions = [];\n      const coordinates = this.ngeoAutoProjection_.stringToCoordinates(query);\n      if (coordinates === null) {\n        return;\n      }\n      const position = this.ngeoAutoProjection_.tryProjectionsWithInversion(coordinates,\n        extent, viewProjection, this.coordinatesProjections);\n      if (position === null) {\n        return;\n      }\n      suggestions.push({\n        label: coordinates.join(' '),\n        position: position,\n        'tt_source': 'coordinates'\n      });\n      callback(suggestions);\n    }.bind(this);\n  }\n\n\n  /**\n   * Init the style object for the search results. It set defaults for the\n   * coordinates and the polygon styles, and both can be overloaded from component\n   * attributes. The styles from component attributes can specify custom styles\n   * for each search group.\n   * @private\n   */\n  initStyles_() {\n    this.styles_[gmfBase.COORDINATES_LAYER_NAME] = new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({color: [0, 0, 0, 0.7], width: 2}),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    });\n    const fill = new olStyleFill({\n      color: [65, 134, 240, 0.5]\n    });\n    const stroke = new olStyleStroke({\n      color: [65, 134, 240, 1],\n      width: 2\n    });\n    this.styles_['default'] = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke\n    });\n    const customStyles = this.featuresStyles || {};\n    olObj.assign(this.styles_, customStyles);\n  }\n\n  /**\n   * Style for search results.\n   * @param {null|ol.Feature|ol.render.Feature} feature The searched feature.\n   * @param {number} resolution The current resolution of the map.\n   * @return {ol.style.Style} A style for this kind of features.\n   * @private\n   */\n  getSearchStyle_(feature, resolution) {\n    googAsserts.assert(feature);\n    const style = this.styles_[feature.get('layer_name')] || this.styles_['default'];\n    if (this.color) {\n      const color = olColor.asArray(this.color);\n\n      const strokeColor = color.slice();\n      // 100% opacity for the stroke color\n      strokeColor[3] = 1;\n\n      const fillColor = color.slice();\n      // 50% opacity for the fill color\n      fillColor[3] = 0.5;\n\n      const strokeStyle = style.getStroke();\n      if (strokeStyle) {\n        strokeStyle.setColor(strokeColor);\n      }\n      const fillStyle = style.getFill();\n      if (fillStyle) {\n        fillStyle.setColor(fillColor);\n      }\n      const image = style.getImage();\n      if (image) {\n        style.setImage(new olStyleCircle({\n          fill: new olStyleFill({color: fillColor}),\n          radius: 5,\n          stroke: new olStyleStroke({color: strokeColor})\n        }));\n      }\n    }\n    return style;\n  }\n\n  /**\n   * Set a new color for the search feature style.\n   * @param {string} color The color to set.\n   * @export\n   */\n  setStyleColor(color) {\n    if (color) {\n      this.color = color;\n      this.ngeoFeatureOverlayMgr.getLayer().changed();\n    }\n  }\n\n  /**\n   * @private\n   */\n  setTTDropdownVisibility_() {\n    if (this.clearButton) {\n      const ttDropdown = this.element_.find('.twitter-typeahead .tt-menu');\n      (this.inputValue) ? ttDropdown.show() : ttDropdown.hide();\n    }\n  }\n\n\n  /**\n   * @export\n   */\n  onClearButton() {\n    this.featureOverlay_.clear();\n    this.clear();\n  }\n\n\n  /**\n   * @export\n   */\n  clear() {\n    const typeahead = this.element_.find('.twitter-typeahead');\n    const ttmenu = typeahead.children('.tt-menu');\n    const inputs = typeahead.children('input');\n    // clear model value, the 'real' input value and tt's suggestions\n    this.inputValue = '';\n    $(inputs[1]).typeahead('val', '');\n    ttmenu.children('.tt-dataset').empty();\n    this.setTTDropdownVisibility_();\n    this.displayColorPicker = false;\n  }\n\n\n  /**\n   * @export\n   */\n  blur() {\n    const typeahead = this.element_.find('.twitter-typeahead');\n    const inputs = typeahead.children('input');\n    // Blur as soon as possible in digest loops\n    this.timeout_(() => {\n      $(inputs[1]).blur();\n    });\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {Object|ol.Feature} suggestion Suggestion.\n   * @param {TypeaheadDataset} dataset Dataset.\n   * @private\n   */\n  select_(event, suggestion, dataset) {\n    if (suggestion['tt_source'] === 'coordinates') {\n      const geom = new olGeomPoint(suggestion['position']);\n\n      this.featureOverlay_.clear();\n      this.featureOverlay_.addFeature(new olFeature({\n        geometry: geom,\n        'layer_name': gmfBase.COORDINATES_LAYER_NAME\n      }));\n      this.map.getView().setCenter(suggestion['position']);\n      this.leaveSearch_();\n    } else {\n      googAsserts.assertInstanceof(suggestion, olFeature);\n      this.selectFromGMF_(event, suggestion, dataset);\n    }\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {ol.Feature} feature Feature.\n   * @param {TypeaheadDataset} dataset Dataset.\n   * @private\n   */\n  selectFromGMF_(event, feature, dataset) {\n    const actions = feature.get('actions');\n    const featureGeometry = /** @type {ol.geom.SimpleGeometry} */\n        (feature.getGeometry());\n    if (actions) {\n      for (let i = 0, ii = actions.length; i < ii; i++) {\n        const action = actions[i];\n        const actionName = action['action'];\n        const actionData = action['data'];\n        if (actionName == 'add_theme') {\n          this.gmfThemes_.getThemesObject().then((themes) => {\n            const theme = gmfThemeThemes.findThemeByName(themes, actionData);\n            if (theme) {\n              this.gmfTreeManager_.addFirstLevelGroups(theme.children);\n            }\n          });\n        } else if (actionName == 'add_group') {\n          this.gmfTreeManager_.addGroupByName(actionData, true);\n        } else if (actionName == 'add_layer') {\n          const groupActions = /** @type {Array.<string>} */ (\n            this.datasources[0].groupActions);\n          let datasourcesActionsHaveAddLayer;\n          groupActions.forEach((groupAction) => {\n            if (groupAction['action'] === 'add_layer') {\n              return datasourcesActionsHaveAddLayer = true;\n            }\n          });\n          if (datasourcesActionsHaveAddLayer) {\n            const silent = !!featureGeometry;\n            this.gmfTreeManager_.addGroupByLayerName(actionData, true, silent);\n          }\n        }\n      }\n    }\n\n    const size = this.map.getSize();\n    if (featureGeometry && size) {\n      const view = this.map.getView();\n      this.featureOverlay_.clear();\n      this.featureOverlay_.addFeature(feature);\n      this.displayColorPicker = true;\n      const fitArray = featureGeometry.getType() === 'GeometryCollection' ?\n        featureGeometry.getExtent() : featureGeometry;\n      view.fit(fitArray, {\n        size: size,\n        maxZoom: this.maxZoom\n      });\n    }\n    this.leaveSearch_();\n  }\n\n\n  /**\n   * @private\n   */\n  leaveSearch_() {\n    if (!this.clearButton) {\n      this.clear();\n    }\n    this.blur();\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @private\n   */\n  close_(event) {\n    if (!this.clearButton) {\n      this.setTTDropdownVisibility_();\n    }\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {string} query Query.\n   * @param {boolean} empty Empty.\n   * @private\n   */\n  datasetsempty_(event, query, empty) {\n    // workaround to display a 'no result found' in the search result when all of\n    // the datasets are empty.\n    // based on https://github.com/twitter/typeahead.js/issues/780#issuecomment-251554452\n    // FIXME: remove this workaround when https://github.com/corejavascript/typeahead.js/issues/60 is fixed\n\n    const menu = this.element_.find('.twitter-typeahead .tt-menu');\n    const message = menu.children('.gmf-search-no-results');\n    if (message.length == 0) {\n      const div = $('<div class=\"gmf-search-no-results\" translate>No result found</div>');\n      menu.append(div);\n    }\n    if (empty) {\n      message.show();\n      menu.addClass('gmf-search-no-results');\n    } else {\n      menu.removeClass('gmf-search-no-results');\n      message.hide();\n    }\n  }\n\n\n  /**\n   * Performs a full-text search and centers the map on the first search result.\n   * @param {string} query Search query.\n   * @param {number} resultIndex Return nth result instead.\n   * @param {number=} opt_zoom Optional zoom level.\n   * @private\n   */\n  fulltextsearch_(query, resultIndex, opt_zoom) {\n    if (resultIndex < 1) { // can't be lower than one\n      resultIndex = 1;\n    }\n    this.fullTextSearch_.search(query, {'limit': resultIndex})\n      .then((data) => {\n        if (data && data.features[resultIndex - 1]) {\n          const format = new olFormatGeoJSON();\n          const feature = format.readFeature(data.features[resultIndex - 1]);\n          this.featureOverlay_.addFeature(feature);\n          const fitOptions = /** @type {olx.view.FitOptions} */ ({});\n          if (opt_zoom !== undefined) {\n            fitOptions.maxZoom = opt_zoom;\n            fitOptions.size = this.map.getSize();\n          }\n          this.map.getView().fit(feature.getGeometry().getExtent(), fitOptions);\n          this.inputValue = /** @type {string} */ (feature.get('label'));\n        }\n      });\n  }\n};\n\n\n// Register the controller in the module\nexports.controller('gmfSearchController', exports.SearchController_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.recenter\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.syncArrays\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * Provides a function that synchronizes two arrays, arr1 and\n * arr2. arr2 is a subset of arr1, it includes the elements of arr1 that passes\n * the filter. When elements are added to/removed from arr1, arr2 is updated to\n * include the elements of arr1 that pass the filter. When the order of\n * elements in arr2 changes, arr1 is reordered to have the same order as arr2.\n *\n * This can for example be used to synchronize the array of layers in the map\n * with the array of selected layers, where layers may be added to/removed from\n * the map, and the order of selected layers may change.\n *\n *     let dereg = ngeoSyncArrays(map.getLayers().getArray(), selectedLayers,\n *         true, scope, function(layer) {\n *           // exclude the layer at index 0 in the map\n *           return map.getLayers().indexOf(layer) !== 0;\n *         });\n *\n * This will return a function that can be called to cancel synchronization.\n *\n * @param {Array.<T>} arr1 Array 1.\n * @param {Array.<T>} arr2 Array 2.\n * @param {boolean} reverse `true` if arr2 is in reverse order, `false`\n *     otherwise.\n * @param {angular.Scope} scope Angular scope. Used to watch arr1 and arr2\n *     using $watchCollection.\n * @param {function(T):boolean} filter Filter function.\n * @return {function()} Function to call to stop synchronization\n * @template T\n */\nconst exports = function(arr1, arr2, reverse, scope, filter) {\n\n\n  // Update arr2 when elements are added to, or removed from, arr1.\n\n  const dereg1 = scope.$watchCollection(() => arr1, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = arr1.length - 1, j = 0; i >= 0; --i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    }\n    arr2.length = j;\n  });\n\n\n  // Update arr1 when the order of elements changes in arr2.\n\n  const dereg2 = scope.$watchCollection(() => arr2, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = 0, ii = arr1.length, j = arr2.length - 1; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j--];\n        }\n      }\n      googAsserts.assert(j == -1);\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j++];\n        }\n      }\n      googAsserts.assert(j == arr2.length);\n    }\n  });\n\n  return function() {\n    dereg1();\n    dereg2();\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.layertree.component\n */\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\n\nimport 'bootstrap/js/collapse.js'; // needed to collapse a layertree\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoLayertree', [\n  ngeoLayertreeController.module.name\n]);\n\n\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoLayertreeTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/layertree';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/layertree', require('./component.html'));\n});\n\n\n/**\n * Provides the \"ngeoLayertree\" directive, a directive for\n * creating layer trees in application.\n *\n * The directive assumes that tree nodes that are not leaves have a \"children\"\n * property referencing an array of child nodes.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\">\n *      </div>\n *\n * The \"ngeo-layertree\", \"ngeo-layertree-map\" and\n * \"ngeo-layertree-nodelayer\" attributes are mandatory attributes.\n *\n * - \"ngeo-layertree\" specifies an expression providing the tree. The\n *   directive watches that expression, making it possible to retrieve\n *   the tree data through Ajax.\n *\n * - \"ngeo-layertree-map\" specifies an expression providing the OpenLayers\n *   map. The directive doesn't watch that expression.\n *\n * - The \"ngeo-layertree-nodelayer\" specifies an expression providing the\n *   layer for a given node. In most cases that expression will be function\n *   call with \"node\" as the argument to the function call. E.g.\n *   \"ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\".\n *\n * - The \"ngeo-layertree-listeners\" specifies an expression providing a function\n *   to bind scope events to customs functions. You'll must set the listener on\n *   the \"treeScope\" and probably use \"treeCtrl\" as context. E.g.\n *   \"ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\".\n *\n * The directive comes with a default template. That template assumes that\n * tree nodes that are not leaves have a \"children\" property referencing an\n * array of child nodes. It also assumes that nodes have a \"name\" property.\n *\n * By default the directive uses \"layertree.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoLayertreeTemplateUrl\" value (using\n * app.module.value('ngeoLayertreeTemplateUrl', 'path/layertree.html'), or\n * by adding an \"ngeo-layertree-templateurl\" attribute to the element.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-templateurl=\"path/to/layertree.html\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\"\n *      </div>\n *\n * The directive has its own scope, but it is not an isolate scope. That scope\n * has a \"layertreeCtrl\" property which is a reference to the directive's\n * controller: \"layertreeCtrl\". You can refer to that property in a custom\n * template for example.\n *\n * See our live example: [../examples/layertree.html](../examples/layertree.html)\n *\n * @htmlAttribute {Object} ngeo-layertree One theme (JSON).\n * @htmlAttribute {string} ngeo-layertree-templateurl The template URL.\n * @htmlAttribute {ol.Map} ngeo-layertree-map The map.\n * @htmlAttribute {string} ngeo-layertree-nodelayer Expression that will be parsed\n *      to be a {@link Function} that return a {@link ol.layer.Layer}\n *      with the argument:\n *      {\n *          'node': {@link Object}|undefined,\n *          'depth': {@link number}\n *      }\n * @htmlAttribute {string} ngeo-layertree-nodelayerexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-nodelayer}.\n * @htmlAttribute {string} ngeo-layertree-listeners Expression that will be parsed\n *      to be a {@link Function} with the argument:\n *      {\n *          'treeScope': !{@link angular.Scope},\n *          'treeCtrl': {@link ngeo.layertree.Controller}\n *      }\n * @htmlAttribute {string} ngeo-layertree-listenersexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-listeners}.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoLayertreeTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoLayertree\n */\nexports.directive_ = function(ngeoLayertreeTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: ngeoLayertreeTemplateUrl,\n    controller: ngeoLayertreeController\n  };\n};\n\n\nexports.directive('ngeoLayertree', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\n\n/** @suppress {extraRequire} */\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\n\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoLayertreeComponent from 'ngeo/layertree/component.js';\n\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscSyncArrays from 'ngeo/misc/syncArrays.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\nimport 'bootstrap/js/collapse.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeComponent', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfPermalinkPermalink.module.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeComponent.name,\n  ngeoLayertreeController.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\n\n// Overrides the path to the layertree template (used by each node, except\n// the root node that path is defined by the gmfLayertreeTemplate value.\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => 'gmf/layertree');\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree', require('./component.html'));\n});\n\n\nexports.value('gmfLayertreeTemplate',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const subTemplateUrl = 'gmf/layertree';\n    return '<div ngeo-layertree=\"gmfLayertreeCtrl.root\" ' +\n          'ngeo-layertree-map=\"gmfLayertreeCtrl.map\" ' +\n          'ngeo-layertree-nodelayer=\"gmfLayertreeCtrl.getLayer(treeCtrl)\" ' +\n          'ngeo-layertree-listeners=\"gmfLayertreeCtrl.listeners(treeScope, treeCtrl)\" ' +\n          `ngeo-layertree-templateurl=\"${subTemplateUrl}\">` +\n          '</div>';\n  }\n);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfLayertreeTemplate Template function.\n * @return {string} Template.\n * @ngInject\n */\nfunction gmfLayertreeTemplate($element, $attrs, gmfLayertreeTemplate) {\n  return gmfLayertreeTemplate($element, $attrs);\n}\n\n\n/**\n * This component creates a layertree based on the c2cgeoportal JSON themes\n * source and a {@link ngeo.layertreeComponent}. The controller used by this\n * component defines some functions for each node that are created by a default\n * template. This default template can be overridden by setting the value\n * 'gmf.layertreeTemplateUrl' but you will have to adapt the\n * ngeoLayertreeTemplateUrl value too (to define the children's nodes template\n * path).\n *\n * Example:\n *\n *      <gmf-layertree\n *        gmf-layertree-dimensions=\"ctrl.dimensions\"\n *        gmf-layertree-map=\"ctrl.map\">\n *      </gmf-layertree>\n *\n * You can add an attribute 'gmf-layertree-openlinksinnewwindow=\"::true\"' to open\n * metadata URLs in a new window. By default, and in the default template,\n * links will be opened in a popup (The window.gmfx.openIframePopup function must be available !)\n *\n * Used UI metadata:\n *\n *  * isChecked: if 'false' the layer visibility will be set to false.\n *  * iconUrl: layer icon full URL.\n *  * legendRule: WMS rule used to get a layer icon.\n *  * isLegendExpanded: if 'true' the legend is expanded by default.\n *  * metadataUrl: Display a popup with the content of the given URL if\n *    possible also open a new window.\n *\n * @htmlAttribute {ol.Map} gmf-layertree-map The map.\n * @htmlAttribute {Object<string, string>|undefined} gmf-layertree-dimensions Global dimensions object.\n * @htmlAttribute {boolean|undefined} gmf-layertree-openlinksinnewwindow if true, open\n *     metadataURLs in a new window. Otherwise open them in a popup.\n *\n * @ngdoc component\n * @ngname gmfLayertreeComponent\n */\nexports.component_ = {\n  controller: 'GmfLayertreeController as gmfLayertreeCtrl',\n  bindings: {\n    'map': '=gmfLayertreeMap',\n    'dimensions': '=?gmfLayertreeDimensions',\n    'openLinksInNewWindow': '<?gmfLayertreeOpenlinksinnewwindow',\n  },\n  template: gmfLayertreeTemplate\n};\n\nexports.component('gmfLayertree', exports.component_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n *     The Gmf value service that determines the data source currently being\n *     filtered.\n * @param {!gmf.datasource.ExternalDataSourcesManager}\n *     gmfExternalDataSourcesManager The Gmf external data sources manager\n *     service. Used here to fetch the external WMS groups.\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n * @param {!gmf.layertree.SyncLayertreeMap} gmfSyncLayertreeMap gmfSyncLayertreeMap service.\n * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {!gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname gmfLayertreeController\n */\nexports.Controller_ = function($element, $scope, ngeoLayerHelper, gmfDataSourceBeingFiltered,\n  gmfExternalDataSourcesManager, gmfPermalink, gmfTreeManager, gmfSyncLayertreeMap, ngeoWMSTime, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {?Object<string, string>}\n   * @export\n   */\n  this.dimensions;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {gmfx.datasource.DataSourceBeingFiltered}\n   * @export\n   */\n  this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n  /**\n   * @type {!gmf.datasource.ExternalDataSourcesManager}\n   * @export\n   */\n  this.gmfExternalDataSourcesManager = gmfExternalDataSourcesManager;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  const root = gmfTreeManager.root;\n  googAsserts.assert(root);\n\n  /**\n   * @type {!gmfThemes.GmfRootNode}\n   * @export\n   */\n  this.root = root;\n\n  /**\n   * @type {!gmf.layertree.SyncLayertreeMap}\n   * @private\n   */\n  this.gmfSyncLayertreeMap_ = gmfSyncLayertreeMap;\n\n  /**\n   * @type {!ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {!Object.<number, !Array.<string>>}\n   * @private\n   */\n  this.groupNodeStates_ = {};\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.openLinksInNewWindow;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n\n  /**\n   * @type {!Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.layers = [];\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  // enter digest cycle on node collapse\n  $element.on('shown.bs.collapse', () => {\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * Init the controller,\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.openLinksInNewWindow = this.openLinksInNewWindow === true;\n  this.dataLayerGroup_ = this.layerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n\n  ngeoMiscSyncArrays(this.dataLayerGroup_.getLayers().getArray(), this.layers, true, this.scope_, () => true);\n\n  // watch any change on layers array to refresh the map\n  this.scope_.$watchCollection(() => this.layers,\n    () => {\n      this.map.render();\n    });\n\n  // watch any change on dimensions object to refresh the layers\n  this.scope_.$watchCollection(() => {\n    if (this.gmfTreeManager_.rootCtrl) {\n      return this.dimensions;\n    }\n  }, (dimensions) => {\n    if (dimensions) {\n      this.updateDimensions_(this.gmfTreeManager_.rootCtrl);\n    }\n  });\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl Layer tree controller.\n * @private\n */\nexports.Controller_.prototype.updateDimensions_ = function(treeCtrl) {\n  treeCtrl.traverseDepthFirst((ctrl) => {\n    if (ctrl.node.dimensions) {\n      const layer = ctrl.layer;\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      this.updateLayerDimensions_(layer, /** @type gmfThemes.GmfGroup|gmfThemes.GmfLayer */ (ctrl.node));\n    }\n  });\n};\n\n\n/**\n * @param {ol.layer.Layer} layer Layer to update.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layer tree node.\n * @private\n */\nexports.Controller_.prototype.updateLayerDimensions_ = function(layer, node) {\n  if (this.dimensions && node.dimensions) {\n    const dimensions = {};\n    for (const key in node.dimensions) {\n      if (node.dimensions[key] === null) {\n        const value = this.dimensions[key];\n        if (value !== undefined) {\n          dimensions[key] = value;\n        }\n      } else {\n        dimensions[key] = node.dimensions[key];\n      }\n    }\n    if (!olObj.isEmpty(dimensions)) {\n      const source = layer.getSource();\n      if (source instanceof olSourceWMTS) {\n        source.updateDimensions(dimensions);\n      } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n        source.updateParams(dimensions);\n      } else {\n        // the source is not ready yet\n        layer.once('change:source', () => {\n          googAsserts.assertInstanceof(layer, olLayerLayer);\n          this.updateLayerDimensions_(layer, node);\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Use the gmfSyncLayertreeMap_ to create and get layer corresponding to this\n * treeCtrl. The layer will be inserted into the map. The layer can be null\n * if the treeCtrl is based on a node inside a mixed node. It this case, the\n * layer will be in the first parent declared as a mixed node.\n * @param {ngeo.layertree.Controller} treeCtrl tree controller of the node\n * @return {ol.layer.Base|ol.layer.Group|null} The OpenLayers layer or group\n *     for the node.\n * @export\n */\nexports.Controller_.prototype.getLayer = function(treeCtrl) {\n  let opt_position;\n  if (treeCtrl.parent.isRoot) {\n    this.gmfTreeManager_.rootCtrl = treeCtrl.parent;\n    // Precise the index to add first level groups.\n    opt_position = this.gmfTreeManager_.root.children.length -\n        this.gmfTreeManager_.numberOfGroupsToAddInThisDigestLoop || 0;\n  }\n\n  const layer = this.gmfSyncLayertreeMap_.createLayer(treeCtrl, this.map,\n    this.dataLayerGroup_, opt_position);\n\n  if (layer instanceof olLayerLayer) {\n    const node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n    this.updateLayerDimensions_(layer, node);\n  }\n\n  return layer;\n};\n\n\n/**\n * Remove layer from this component's layergroup (and then, from the map) on\n * a ngeo layertree destroy event.\n * @param {angular.Scope} scope treeCtrl scope.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.listeners = function(scope, treeCtrl) {\n  const dataLayerGroup = this.dataLayerGroup_;\n  scope.$on('$destroy', () => {\n    // Remove the layer from the map.\n    dataLayerGroup.getLayers().remove(treeCtrl.layer);\n  });\n};\n\n/**\n * Toggle the state of treeCtrl's node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.toggleActive = function(treeCtrl) {\n  treeCtrl.setState(treeCtrl.getState() === 'on' ? 'off' : 'on');\n};\n\n\n/**\n * Return the current state of the given treeCtrl's node.\n * Return a class name that match with the current node activation state.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string} 'on' or 'off' or 'indeterminate'.\n * @export\n */\nexports.Controller_.prototype.getNodeState = function(treeCtrl) {\n  return treeCtrl.getState();\n};\n\n\n/**\n * Update the `timeRangeValue` property of the data source bound to the\n * given tree controller using the given time. If the tree controller has\n * no data source, it means that it has children and they might have\n * data sources.\n *\n * The setting of the TIME parameter on the layer occurs in the\n * `gmf.datasource.Manager` service\n *\n * LayertreeController.prototype.updateWMSTimeLayerState - description\n * @param {ngeo.layertree.Controller} layertreeCtrl ngeo layertree controller\n * @param {{start : number, end : number}} time The start\n * and optionally the end datetime (for time range selection) selected by user\n * @export\n */\nexports.Controller_.prototype.updateWMSTimeLayerState = function(\n  layertreeCtrl, time) {\n  if (!time) {\n    return;\n  }\n  const dataSource = layertreeCtrl.getDataSource();\n  if (dataSource) {\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    dataSource.timeRangeValue = time;\n  } else if (layertreeCtrl.children) {\n    for (let i = 0, ii = layertreeCtrl.children.length; i < ii; i++) {\n      this.updateWMSTimeLayerState(layertreeCtrl.children[i], time);\n    }\n  }\n};\n\n\n/**\n * Get the icon image URL for the given treeCtrl's layer. It can only return a\n * string for internal WMS layers without multiple childlayers in the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string|undefined} The icon legend URL or undefined.\n * @export\n */\nexports.Controller_.prototype.getLegendIconURL = function(treeCtrl) {\n  const iconUrl = treeCtrl.node.metadata.iconUrl;\n\n  if (iconUrl !== undefined) {\n    return iconUrl;\n  }\n\n  if (treeCtrl.node.children !== undefined) {\n    return undefined;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (gmfLayer.type !== 'WMS') {\n    return undefined;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  const legendRule = gmfLayerWMS.metadata.legendRule;\n\n  if (legendRule === undefined) {\n    return undefined;\n  }\n\n  //In case of multiple layers for a gmfLayerWMS, always take the first layer\n  //name to get the icon\n  const layerName = gmfLayerWMS.layers.split(',')[0];\n  const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n  return this.layerHelper_.getWMSLegendURL(\n    gmfOgcServer.url, layerName, undefined, legendRule, 20, 20\n  );\n};\n\n\n/**\n * Get the legends object (<LayerName: url> for each layer) for the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {Object.<string, string>} A <layerName: url> object that provides a\n *     layer for each layer.\n * @export\n */\nexports.Controller_.prototype.getLegendsObject = function(treeCtrl) {\n  const legendsObject = {};\n  if (/** @type gmfThemes.GmfGroup */ (treeCtrl.node).children !== undefined) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const gmfLayerDefaultName = gmfLayer.name;\n  if (gmfLayer.metadata.legendImage) {\n    legendsObject[gmfLayerDefaultName] = gmfLayer.metadata.legendImage;\n    return legendsObject;\n  }\n\n  const layer = treeCtrl.layer;\n  if (gmfLayer.type === 'WMTS') {\n    googAsserts.assertInstanceof(layer, olLayerTile);\n    const wmtsLegendURL = this.layerHelper_.getWMTSLegendURL(layer);\n    legendsObject[gmfLayerDefaultName] = wmtsLegendURL;\n    return wmtsLegendURL ? legendsObject : null;\n  } else {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n    let layersNames = gmfLayerWMS.layers;\n    const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n    const scale = this.getScale_();\n    // QGIS can handle multiple layers natively. Use Multiple URLs for other map\n    // servers\n    if (gmfOgcServer.type === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      layersNames = [layersNames];\n    } else {\n      layersNames = layersNames.split(',');\n    }\n    layersNames.forEach((layerName) => {\n      legendsObject[layerName] = this.layerHelper_.getWMSLegendURL(gmfOgcServer.url, layerName, scale);\n    });\n    return legendsObject;\n  }\n};\n\n\n/**\n * Get the number of legends object for this layertree controller.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {number} The number of Legends object.\n * @export\n */\nexports.Controller_.prototype.getNumberOfLegendsObject = function(treeCtrl) {\n  const legendsObject = this.getLegendsObject(treeCtrl);\n  return legendsObject ? Object.keys(legendsObject).length : 0;\n};\n\n\n/**\n * Return the current scale of the map.\n * @return {number} Scale.\n * @private\n */\nexports.Controller_.prototype.getScale_ = function() {\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const mpu = view.getProjection().getMetersPerUnit();\n  const dpi = 25.4 / 0.28;\n  return resolution * mpu * 39.37 * dpi;\n};\n\n\n/**\n * Opens a gmfx.openIframePopup with the content of the metadata url of a node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.displayMetadata = function(treeCtrl) {\n  const node = treeCtrl.node;\n  const metadataURL = node.metadata['metadataUrl'];\n  if (metadataURL !== undefined) {\n    // FIXME layertree should not rely on a window function.\n    const gmfx = window.gmfx;\n    if (gmfx.openIframePopup) {\n      gmfx.openIframePopup(metadataURL, node.name, undefined, undefined, false);\n    }\n  }\n};\n\n\n/**\n * Update the layers order in the map and the treeCtrl in the treeManager after\n * a reorder of the first-level groups. Then update the permalink.\n * @export\n */\nexports.Controller_.prototype.afterReorder = function() {\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const currentTreeCtrls = this.gmfTreeManager_.rootCtrl.children;\n  const treeCtrls = [];\n\n  // Get order of first-level groups for treectrl and layers;\n  groupNodes.forEach((node) => {\n    currentTreeCtrls.some((treeCtrl) => {\n      if (treeCtrl.node === node) {\n        treeCtrls.push(treeCtrl);\n        return;\n      }\n    });\n  });\n\n  // Update gmfTreeManager rootctrl children order\n  this.gmfTreeManager_.rootCtrl.children = treeCtrls;\n\n  // Update map 'data' groupe layers order\n  this.layers.length = 0;\n  this.gmfTreeManager_.rootCtrl.children.forEach((child) => {\n    this.layers.push(child.layer);\n  });\n\n  // Update the permalink order\n  this.gmfPermalink_.refreshFirstLevelGroups();\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup} node Layer tree node to remove.\n * @export\n */\nexports.Controller_.prototype.removeNode = function(node) {\n  this.gmfTreeManager_.removeGroup(node);\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.removeAllNodes = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @return {number} first level node count.\n * @export\n */\nexports.Controller_.prototype.nodesCount = function() {\n  return this.gmfTreeManager_.root.children.length;\n};\n\n/**\n * Return 'out-of-resolution' if the current resolution of the map is out of\n * the min/max resolution in the node.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {string|undefined} 'out-of-resolution' or undefined.\n * @export\n */\nexports.Controller_.prototype.getResolutionStyle = function(gmfLayer) {\n  const resolution = this.map.getView().getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    return 'out-of-resolution';\n  }\n  const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n  if (maxResolution !== undefined && resolution > maxResolution) {\n    return 'out-of-resolution';\n  }\n  return undefined;\n};\n\n\n/**\n * Set the resolution of the map with the max or min resolution of the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.zoomToResolution = function(treeCtrl) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    view.setResolution(view.constrainResolution(minResolution, 0, 1));\n  } else {\n    const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n    if (maxResolution !== undefined && resolution > maxResolution) {\n      view.setResolution(view.constrainResolution(maxResolution, 0, -1));\n    }\n  }\n};\n\n\n/**\n * Toggle the legend for a node\n * @param {string} legendNodeId The DOM node legend id to toggle\n * @export\n */\nexports.Controller_.prototype.toggleNodeLegend = function(legendNodeId) {\n  $(legendNodeId).toggle({\n    toggle: true\n  });\n};\n\n\n/**\n * @param {gmf.datasource.OGC} ds Data source to filter.\n * @export\n */\nexports.Controller_.prototype.toggleFiltrableDataSource = function(ds) {\n  this.gmfDataSourceBeingFiltered.dataSource = ds;\n};\n\n\n/**\n * @param {string} legendNodeId The DOM node legend id\n * @return {boolean} Whenever the legend is currently displayed.\n * @export\n */\nexports.Controller_.prototype.isNodeLegendVisible = function(legendNodeId) {\n  return $(legendNodeId).is(':visible');\n};\n\n\n/**\n * Determines whether the layer tree controller supports being customized.\n * For example, having its layer opacity changed, displaying its legend, etc.\n *\n * If any requirement is met, then the treeCtrl is considered supporting\n * \"customization\", regardless of what it actually is.\n *\n * The requirements are:\n *\n * - must not be the root controller, any of the following:\n *   - it supports legend\n *   - it supports having the layer opacity being changed\n *\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports being\n *     \"customized\" or not.\n * @export\n */\nexports.Controller_.prototype.supportsCustomization = function(treeCtrl) {\n  return !treeCtrl.isRoot &&\n    (\n      this.supportsLegend(treeCtrl) ||\n      this.supportsOpacityChange(treeCtrl)\n    );\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having a\n *     legend being shown.\n * @export\n */\nexports.Controller_.prototype.supportsLegend = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  return !!node.metadata &&\n    !!node.metadata.legend &&\n    !!this.getLegendsObject(treeCtrl);\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having its\n *     layer opacity being changed or not.\n * @export\n */\nexports.Controller_.prototype.supportsOpacityChange = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  const parentNode = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  return !!treeCtrl.layer &&\n    (\n      (\n        treeCtrl.depth === 1 && !node.mixed\n      ) ||\n      (\n        treeCtrl.depth > 1 && parentNode.mixed\n      )\n    );\n};\n\nexports.controller('GmfLayertreeController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module app\n */\nconst exports = {};\n\n/**\n * This file provides the \"app\" namespace, which is the\n * application's main namespace. And it defines the application's Angular\n * module.\n */\n\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('app', []);\n\nexports.module.config(['$compileProvider', function($compileProvider) {\n  if (!('debug' in ngeoUtils.decodeQueryString(window.location.search))) {\n    // Disable the debug info\n    $compileProvider.debugInfoEnabled(false);\n  }\n}]);\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.coordinate\n */\nconst exports = {};\n\n\n/**\n * Convert a given coordinate or list of coordinates of any 'nesting' level\n * to XY, i.e. remove any extra dimensions to the coordinates and keep only 2.\n *\n * @param {Array.<ol.Coordinate>|ol.Coordinate} coordinates Coordinates\n * @param {number} nesting Nesting level.\n * @return {Array.<ol.Coordinate>|ol.Coordinate} Converted coordinates.\n */\nexports.toXY = function(coordinates, nesting) {\n  if (nesting === 0) {\n    if (coordinates.length > 2) {\n      coordinates = [coordinates[0], coordinates[1]];\n    }\n  } else {\n    for (let i = 0, ii = coordinates.length; i < ii; i++) {\n      coordinates[i] = exports.toXY(coordinates[i], nesting - 1);\n    }\n  }\n  return coordinates;\n};\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.geom\n */\nconst exports = {};\nimport gmfObjecteditingCoordinate from 'gmf/objectediting/coordinate.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomSimpleGeometry from 'ol/geom/SimpleGeometry.js';\n\n\n/**\n * Determines whether a given geometry is empty or not. A null or undefined\n * value can be given for convenience, i.e. when using methods than can\n * return a geometry or not, for example:\n * `gmf.objectediting.geom.isEmpty(feature.getGeometry())`.\n *\n * @param {?ol.geom.Geometry|undefined} geom Geometry.\n * @return {boolean} Whether the given geometry is empty or not. A null or\n *     undefined geometry is considered empty.\n */\nexports.isEmpty = function(geom) {\n  let isEmpty = true;\n  if (geom && geom instanceof olGeomSimpleGeometry) {\n    isEmpty = geom.getFlatCoordinates().length === 0;\n  }\n  return isEmpty;\n};\n\n\n/**\n * Convert all coordinates within a geometry object to XY, i.e. remove any\n * extra dimension other than X and Y to the coordinates of a geometry.\n *\n * @param {ol.geom.Geometry} geom Geometry\n */\nexports.toXY = function(geom) {\n  if (geom instanceof olGeomPoint) {\n    geom.setCoordinates(\n      gmfObjecteditingCoordinate.toXY(geom.getCoordinates(), 0)\n    );\n  } else if (geom instanceof olGeomMultiPoint ||\n             geom instanceof olGeomLineString\n  ) {\n    geom.setCoordinates(\n      gmfObjecteditingCoordinate.toXY(geom.getCoordinates(), 1)\n    );\n  } else if (geom instanceof olGeomMultiLineString ||\n             geom instanceof olGeomPolygon\n  ) {\n    geom.setCoordinates(\n      gmfObjecteditingCoordinate.toXY(geom.getCoordinates(), 2)\n    );\n  } else if (geom instanceof olGeomMultiPolygon) {\n    geom.setCoordinates(\n      gmfObjecteditingCoordinate.toXY(geom.getCoordinates(), 3)\n    );\n  } else {\n    throw 'gmf.objectediting.geom.toXY - unsupported geometry type';\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.Query\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\n\n/**\n * A service that collects all queryable layer nodes from all themes, stores\n * them and use them to make WMS GetFeatureInfo queries. Queries can be made\n * regardless of the associated layer visibility. The layer nodes are also\n * loaded only once.\n *\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q Angular $q service.\n * @param {gmf.theme.Themes} gmfThemes The gmf themes service.\n * @constructor\n * @struct\n * @ngInject\n */\nconst exports = function($http, $q, gmfThemes) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {?angular.$q.Deferred}\n   * @private\n   */\n  this.getQueryableLayerNodesDefered_ = null;\n\n};\n\n\n/**\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getQueryableLayersInfo = function() {\n\n  if (!this.getQueryableLayerNodesDefered_) {\n    this.getQueryableLayerNodesDefered_ = this.q_.defer();\n    this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n      this.gmfThemes_.getThemesObject().then((themes) => {\n        if (!themes) {\n          return;\n        }\n\n        // Get all queryable nodes\n        const allQueryableLayersInfo =\n            exports.getQueryableLayersInfoFromThemes(\n              themes,\n              ogcServers\n            );\n\n        // Narrow down to only those that have the 'copyable' metadata set\n        const queryableLayersInfo = [];\n        for (let i = 0, ii = allQueryableLayersInfo.length; i < ii; i++) {\n          if (allQueryableLayersInfo[i].layerNode.metadata.copyable) {\n            queryableLayersInfo.push(allQueryableLayersInfo[i]);\n          }\n        }\n\n        this.getQueryableLayerNodesDefered_.resolve(queryableLayersInfo);\n      });\n    });\n  }\n\n  return this.getQueryableLayerNodesDefered_.promise;\n\n};\n\n\n/**\n * From a list of theme nodes, collect all WMS layer nodes that are queryable.\n * A list of OGC servers is given in order to bind each queryable layer node\n * to its associated server and be able to build requests.\n *\n * @param {Array.<gmfThemes.GmfTheme>} themes List of theme nodes.\n * @param {gmfThemes.GmfOgcServers} ogcServers List of ogc servers\n * @return {Array.<gmfx.ObjectEditingQueryableLayerInfo>} List of\n *     queryable layers information.\n * @export\n */\nexports.getQueryableLayersInfoFromThemes = function(\n  themes, ogcServers\n) {\n  const queryableLayersInfo = [];\n  let theme;\n  let group;\n  let nodes;\n  let node;\n\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    theme = /** @type {gmfThemes.GmfTheme} */ (themes[i]);\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      group = /** @type {gmfThemes.GmfGroup} */ (theme.children[j]);\n\n      // Skip groups that don't have an ogcServer set\n      if (!group.ogcServer) {\n        continue;\n      }\n\n      nodes = [];\n      gmfThemeThemes.getFlatNodes(group, nodes);\n\n      for (let k = 0, kk = nodes.length; k < kk; k++) {\n        node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayerWMS} */ (\n          nodes[k]);\n\n        // Skip groups within groups\n        if (node.children && node.children.length) {\n          continue;\n        }\n\n        if (node.childLayers &&\n          node.childLayers[0] &&\n          node.childLayers[0].queryable\n        ) {\n          queryableLayersInfo.push({\n            layerNode: node,\n            ogcServer: ogcServers[group.ogcServer]\n          });\n        }\n      }\n    }\n  }\n\n  return queryableLayersInfo;\n};\n\n\n/**\n * From a queryable layer (WMS layer node), use its associated OGC server\n * to issue a single WMS GetFeatureInfo request at a specific location on a\n * specific map to fetch a single feature. If no feature is found, a `null`\n * value is returned.\n *\n * @param {gmfx.ObjectEditingQueryableLayerInfo} layerInfo Queryable layer\n *     information.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {ol.Map} map Map.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getFeatureInfo = function(layerInfo, coordinate, map) {\n  const view = map.getView();\n  const projCode = view.getProjection().getCode();\n  const resolution = /** @type {number} */(view.getResolution());\n  const infoFormat = ngeoDatasourceOGC.WMSInfoFormat.GML;\n  const layerNode = layerInfo.layerNode;\n  const layersParam = layerNode.layers.split(',');\n  const ogcServer = layerInfo.ogcServer;\n\n  const format = new olFormatWMSGetFeatureInfo({\n    layers: layersParam\n  });\n\n  const wmsSource = new olSourceImageWMS({\n    url: ogcServer.url,\n    params: {\n      layers: layersParam\n    }\n  });\n\n  const url = /** @type {string} */ (\n    wmsSource.getGetFeatureInfoUrl(coordinate, resolution, projCode, {\n      'INFO_FORMAT': infoFormat,\n      'FEATURE_COUNT': 1,\n      'QUERY_LAYERS': layersParam\n    })\n  );\n\n  return this.http_.get(url).then(\n    (response) => {\n      const features = format.readFeatures(response.data);\n      return (features && features[0]) ? features[0] : null;\n    }\n  );\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfObjectEditingQuery', [\n  gmfThemeThemes.module.name,\n]);\nexports.module.service('gmfObjectEditingQuery', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.getWMSFeatureComponent\n */\nimport gmfObjecteditingQuery from 'gmf/objectediting/Query.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfObjecteditingGetWMSFeatureComponent', [\n  gmfObjecteditingQuery.module.name,\n]);\n\n\n/**\n * When activated, this directive registers clicks on an OL3 map and use the\n * clicked coordinate to fetch a feature using the ObjectEditing query service.\n * A feature returned is pushed to a collection.\n *\n * Example:\n *\n *     <gmf-objecteditinggetwmsfeature\n *         gmf-objecteditinggetwmsfeature-active=\"ctrl.active\"\n *         gmf-objecteditinggetwmsfeature-features=\"ctrl.features\"\n *         gmf-objecteditinggetwmsfeature-layerinfo=\"ctrl.layerInfo\"\n *         gmf-objecteditinggetwmsfeature-map=\"::ctrl.map\">\n *     </gmf-objecteditinggetwmsfeature>\n *\n * @htmlAttribute {boolean} gmf-objecteditinggetwmsfeature-active Whether the\n *     directive is active or not.\n * @htmlAttribute {ol.Collection} gmf-objecteditinggetwmsfeature-features\n *     The collection of features where to add those created by this directive.\n * @htmlAttribute {gmfx.ObjectEditingQueryableLayerInfo} gmf-objecteditinggetwmsfeature-layerinfo Queryable layer info.\n * @htmlAttribute {ol.Map} gmf-objecteditinggetwmsfeature-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfObjecteditinggetwmsfeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'gmfObjecteditinggetwmsfeatureController',\n    scope: {\n      'active': '=gmfObjecteditinggetwmsfeatureActive',\n      'features': '<gmfObjecteditinggetwmsfeatureFeatures',\n      'layerInfo': '=gmfObjecteditinggetwmsfeatureLayerinfo',\n      'map': '<gmfObjecteditinggetwmsfeatureMap'\n    },\n    bindToController: true\n  };\n};\n\nexports.directive('gmfObjecteditinggetwmsfeature',\n  exports.directive_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {gmf.objectediting.Query} gmfObjectEditingQuery GMF ObjectEditing\n *     query service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfObjecteditinggetwmsfeatureController\n */\nexports.Controller_ = function($scope,\n  gmfObjectEditingQuery) {\n\n  // Scope properties\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  $scope.$watch(\n    () => this.active,\n    this.handleActiveChange_.bind(this)\n  );\n\n  /**\n   * @type {ol.Collection}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {gmfx.ObjectEditingQueryableLayerInfo}\n   * @export\n   */\n  this.layerInfo;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n\n  // Injected properties\n\n  /**\n   * @type {gmf.objectediting.Query}\n   * @private\n   */\n  this.gmfObjectEditingQuery_ = gmfObjectEditingQuery;\n\n};\n\n\n/**\n * @param {boolean} active Active.\n * @private\n */\nexports.Controller_.prototype.handleActiveChange_ = function(active) {\n  if (active) {\n    olEvents.listen(\n      this.map,\n      'click',\n      this.handleMapClick_,\n      this\n    );\n  } else {\n    olEvents.unlisten(\n      this.map,\n      'click',\n      this.handleMapClick_,\n      this\n    );\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapClick_ = function(evt) {\n  this.gmfObjectEditingQuery_.getFeatureInfo(\n    this.layerInfo,\n    evt.coordinate,\n    this.map\n  ).then((feature) => {\n    if (feature) {\n      this.features.push(feature);\n    }\n  });\n};\n\nexports.controller('gmfObjecteditinggetwmsfeatureController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.DrawRegularPolygonFromClick\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\n\n/**\n * @classdesc\n * This interactions allows drawing regular polygons of a pre-determined number\n * of sides and size a a clicked location on the map.\n *\n * @constructor\n * @struct\n * @fires ngeox.DrawEvent\n * @extends {ol.interaction.Interaction}\n * @param {ngeox.interaction.DrawRegularPolygonFromClickOptions} options Options\n */\nconst exports = function(options) {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.radius_ = options.radius;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.sides_ = options.sides !== undefined ? options.sides : 3;\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n};\n\nolBase.inherits(\n  exports, olInteractionInteraction);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionInteraction.prototype.setActive.call(this, active);\n\n  if (this.getMap()) {\n    if (active) {\n      this.enable_();\n    } else {\n      this.disable_();\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  const active = this.getActive();\n\n  const currentMap = this.getMap();\n  if (currentMap && active) {\n    this.disable_();\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map && active) {\n    this.enable_();\n  }\n\n};\n\n\n/**\n * Enable the interaction. Called when added to a map AND active.\n * @private\n */\nexports.prototype.enable_ = function() {\n  const map = this.getMap();\n  googAsserts.assert(map, 'Map should be set.');\n  this.listenerKeys_.push(\n    olEvents.listen(map, 'click', this.handleMapClick_, this)\n  );\n};\n\n\n/**\n * Disable the interaction. Called when removed from a map or deactivated.\n * @private\n */\nexports.prototype.disable_ = function() {\n  const map = this.getMap();\n  googAsserts.assert(map, 'Map should be set.');\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\n/**\n * Called the the map is clicked. Create a regular polygon at the clicked\n * location using the configuration\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @private\n */\nexports.prototype.handleMapClick_ = function(evt) {\n  const center = evt.coordinate;\n  const geometry = olGeomPolygon.fromCircle(\n    new olGeomCircle(center), this.sides_\n  );\n\n  olGeomPolygon.makeRegular(geometry, center, this.radius_, this.angle_);\n\n  /** @type {ngeox.DrawEvent} */\n  const event = new ngeoCustomEvent('drawend', {feature: new olFeature(geometry)});\n  this.dispatchEvent(event);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.createregularpolygonfromclickComponent\n */\nimport ngeoInteractionDrawRegularPolygonFromClick from 'ngeo/interaction/DrawRegularPolygonFromClick.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\n\nconst exports = angular.module('ngeoCreateregularpolygonfromclick', [\n]);\n\n\n/**\n * A directive used to draw vector features of a single geometry type using\n * either a 'draw' or 'measure' interaction. Once a feature is finished being\n * drawn, it is added to a collection of features.\n *\n * The geometry types supported are:\n *  - Point\n *  - LineString\n *  - Polygon\n *\n * Example:\n *\n *     <a\n *       href\n *       translate\n *       ngeo-btn\n *       ngeo-createregularpolygonfromclick\n *       ngeo-createregularpolygonfromclick-active=\"ctrl.active\"\n *       ngeo-createregularpolygonfromclick-angle=\"::ctrl.angle\"\n *       ngeo-createregularpolygonfromclick-features=\"ctrl.features\"\n *       ngeo-createregularpolygonfromclick-map=\"::ctrl.map\"\n *       ngeo-createregularpolygonfromclick-radius=\"::ctrl.radius\"\n *       ngeo-createregularpolygonfromclick-sides=\"::ctrl.sides\"\n *       class=\"btn btn-default ngeo-createregularpolygonfromclick\"\n *       ng-class=\"{active: ctrl.active}\"\n *       ng-model=\"ctrl.active\">\n *     </a>\n *\n * @htmlAttribute {boolean} ngeo-createregularpolygonfromclick-active Whether\n *     the directive is active or not.\n * @htmlAttribute {number|undefined} ngeo-createregularpolygonfromclick-angle\n *     Angle in radians. A value of 0 will have one of the shape's point\n *     facing up. Default value is 0.\n * @htmlAttribute {ol.Collection} ngeo-createregularpolygonfromclick-features\n *     The collection of features where to add those created by this directive.\n * @htmlAttribute {ol.Map} ngeo-createregularpolygonfromclick-map The map.\n * @htmlAttribute {number} ngeo-createregularpolygonfromclick-radius Radius\n *     size in map units.\n * @htmlAttribute {number|undefined} ngeo-createregularpolygonfromclick-sides\n *     The number of sides for the regular polygon. Default value is 3.\n *\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname ngeoCreateregularpolygonfromclick\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoCreateregularpolygonfromclickController',\n    bindToController: true,\n    scope: {\n      'active': '=ngeoCreateregularpolygonfromclickActive',\n      'angle': '<?ngeoCreateregularpolygonfromclickAngle',\n      'features': '=ngeoCreateregularpolygonfromclickFeatures',\n      'map': '=ngeoCreateregularpolygonfromclickMap',\n      'radius': '<ngeoCreateregularpolygonfromclickRadius',\n      'sides': '<?ngeoCreateregularpolygonfromclickSides'\n    }\n  };\n};\n\nexports.directive(\n  'ngeoCreateregularpolygonfromclick',\n  exports.directive_\n);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoCreateregularpolygonfromclickController\n */\nexports.Controller_ = function($scope) {\n\n  // == Scope properties ==\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = false;\n\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      this.interaction_.setActive(newVal);\n    }\n  );\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.angle;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.radius;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.sides;\n\n\n  // == Other properties ==\n\n  /**\n   * @type {ngeo.interaction.DrawRegularPolygonFromClick}\n   * @private\n   */\n  this.interaction_;\n\n  /**\n   * @type {ol.EventsKey}\n   * @private\n   */\n  this.interactionListenerKey_;\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Initialize the directive.\n */\nexports.Controller_.prototype.$onInit = function() {\n\n  this.interaction_ = new ngeoInteractionDrawRegularPolygonFromClick({\n    angle: this.angle,\n    radius: this.radius,\n    sides: this.sides\n  });\n  this.interaction_.setActive(this.active);\n\n  this.interactionListenerKey_ = olEvents.listen(\n    this.interaction_,\n    'drawend',\n    this.handleDrawEnd_,\n    this\n  );\n\n  this.map.addInteraction(this.interaction_);\n};\n\n\n/**\n * Called when a feature is finished being drawn. Add the feature to the\n * collection.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleDrawEnd_ = function(evt) {\n  const feature = new olFeature(evt.feature.getGeometry());\n  this.features.push(feature);\n};\n\n\n/**\n * Cleanup event listeners and remove the interaction from the map.\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  olEvents.unlistenByKey(this.interactionListenerKey_);\n  this.interaction_.setActive(false);\n  this.map.removeInteraction(this.interaction_);\n};\n\n\nexports.controller(\n  'ngeoCreateregularpolygonfromclickController',\n  exports.Controller_\n);\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.toolsComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfObjecteditingGetWMSFeatureComponent from 'gmf/objectediting/getWMSFeatureComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingCreatefeatureComponent from 'ngeo/editing/createfeatureComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingCreateregularpolygonfromclickComponent from 'ngeo/editing/createregularpolygonfromclickComponent.js';\n\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfObjecteditingToolsComponent', [\n  gmfObjecteditingGetWMSFeatureComponent.name,\n  ngeoEditingCreatefeatureComponent.name,\n  ngeoEditingCreateregularpolygonfromclickComponent.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/objectediting/toolsComponent', require('./toolsComponent.html'));\n});\n\n\n/**\n * A list of additional options for this directive that are not defined as\n * html attributes. All keys of this hash are optional. For the complete list\n * of keys and their possible values, see in gmfx.js, under:\n * `gmfx.ObjectEditingToolsOptions`.\n */\nexports.value('gmfObjectEditingToolsOptions', {});\n\n\n/**\n * Directive used to edit the geometry of a single feature using advanced\n * tools.\n *\n * Example:\n *\n *     <gmf-objecteditingtools\n *         gmf-objecteditingtools-active=\"ctrl.objectEditingActive\"\n *         gmf-objecteditingtools-copyfromactive=\"ctrl.objectEditingCopyFromActive\"\n *         gmf-objecteditingtools-deletefromactive=\"ctrl.objectEditingDeleteFromActive\"\n *         gmf-objecteditingtools-feature=\"ctrl.objectEditingFeature\"\n *         gmf-objecteditingtools-geomtype=\"ctrl.objectEditingGeomType\"\n *         gmf-objecteditingtools-map=\"::ctrl.map\"\n *         gmf-objecteditingtools-process=\"::ctrl.process\"\n *         gmf-objecteditingtools-queryablelayerinfo=\"::ctrl.queryableLayerInfo\"\n *         gmf-objecteditingtools-requireslayer=\"ctrl.requiresLayer\"\n *         gmf-objecteditingtools-sketchfeatures=\"::ctrl.sketchFeatures\">\n *     </gmf-objecteditingtools>\n *\n * @htmlAttribute {boolean} gmf-objecteditingtools-active Whether the\n *     directive is active or not.\n * @htmlAttribute {boolean} gmf-objecteditingtools-copyfromactive Whether the\n *     'Copy from' tool is active or not.\n * @htmlAttribute {boolean} gmf-objecteditingtools-deletefromactive Whether the\n *     'Delete from' tool is active or not.\n * @htmlAttribute {ol.Feature} gmf-objecteditingtools-feature The feature to\n *     edit.\n * @htmlAttribute {string} gmf-objecteditingtools-geomtype The geometry type.\n * @htmlAttribute {ol.Map} gmf-objecteditingtools-map The map.\n * @htmlAttribute {string} gmf-objectediting-process Determines the\n *     behavior to adopt when sketch features are added.\n * @htmlAttribute {gmfx.ObjectEditingQueryableLayerInfo} gmf-objectediting-queryablelayerinfo\n *     Queryable layer information.\n * @htmlAttribute {boolean} gmf-objectediting-requireslayer Flag that determines\n *     if the currently active tool requires a queryable layer or not.\n * @htmlAttribute {ol.Collection.<ol.Feature>} gmf-objectediting-sketchfeatures\n *     Collection of temporary features being drawn by the tools.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfObjecteditingtools\n */\nexports.directive_ = function() {\n  return {\n    controller: 'GmfObjecteditingtoolsController as oetCtrl',\n    scope: {\n      'active': '=gmfObjecteditingtoolsActive',\n      'copyFromActive': '=gmfObjecteditingtoolsCopyfromactive',\n      'deleteFromActive': '=gmfObjecteditingtoolsDeletefromactive',\n      'feature': '<gmfObjecteditingtoolsFeature',\n      'geomType': '<gmfObjecteditingtoolsGeomtype',\n      'map': '<gmfObjecteditingtoolsMap',\n      'process': '=gmfObjecteditingtoolsProcess',\n      'queryableLayerInfo': '=gmfObjecteditingtoolsQueryablelayerinfo',\n      'requiresLayer': '=gmfObjecteditingtoolsRequireslayer',\n      'sketchFeatures': '<gmfObjecteditingtoolsSketchfeatures'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/objectediting/toolsComponent'\n  };\n};\n\nexports.directive('gmfObjecteditingtools',\n  exports.directive_);\n\n\n/**\n * @param {angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Scope.\n * @param {ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfObjecteditingtoolsController\n */\nexports.Controller_ = function($injector, $scope, ngeoToolActivateMgr) {\n\n  // == Scope properties ==\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.copyFromActive;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.deleteFromActive;\n\n  /**\n   * @type {ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {gmfx.ObjectEditingQueryableLayerInfo}\n   * @export\n   */\n  this.queryableLayerInfo;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.process;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.requiresLayer;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @export\n   */\n  this.sketchFeatures;\n\n\n  // == Injected properties ==\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n  // == Other properties ==\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.geomTypePolygon = ngeoGeometryType.POLYGON;\n\n  /**\n   * @type {Array.<string>}\n   * @private\n   */\n  this.toolActiveNames_ = [];\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawActive = false;\n\n  this.registerTool_('drawActive',\n    exports.ProcessType.ADD);\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.eraseActive = false;\n\n  this.registerTool_('eraseActive',\n    exports.ProcessType.DELETE);\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawTriangleActive = false;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.triangleAngle = Math.PI / 180 * 90; // 90 degrees\n\n  const oeToolsOptions = /** @type {gmfx.ObjectEditingToolsOptions} */ (\n    $injector.get('gmfObjectEditingToolsOptions'));\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.triangleRadius = oeToolsOptions.regularPolygonRadius !== undefined ?\n    oeToolsOptions.regularPolygonRadius : 100;\n\n  this.registerTool_('drawTriangleActive',\n    exports.ProcessType.ADD);\n\n  this.registerTool_('copyFromActive',\n    exports.ProcessType.ADD, true);\n\n  this.registerTool_('deleteFromActive',\n    exports.ProcessType.DELETE, true);\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Register a tool using its `active` property name and what behavior it should\n * have when it is active and a sketch feature is added\n *\n * This method:\n *  - registers a watcher on the tool active property to manage this directive\n *    main active property, i.e the directive is considered active when one\n *    of the tools is active,  otherwise it's not active.\n *\n *  - creates a `ngeo.misc.ToolActivate` object and registers it in a group so\n *    that only one tool can be active at a time\n *\n * @param {string} toolActiveName The name of the active property for the tool.\n * @param {string} process The behavior the tool should use when active\n *     and when sketch features are added.\n * @param {boolean=} opt_requiresLayer Whether the tool requires the queryable\n *     layer or not. Defaults to `false`.\n * @private\n */\nexports.Controller_.prototype.registerTool_ = function(\n  toolActiveName, process, opt_requiresLayer\n) {\n\n  const requiresLayer = opt_requiresLayer === true;\n\n  this.scope_.$watch(\n    () => this[toolActiveName],\n    this.handleToolActiveChange_.bind(this, process, requiresLayer)\n  );\n\n  const group = `${exports.Controller_.NAMESPACE_}-${olBase.getUid(this)}`;\n  const toolActivate = new ngeoMiscToolActivate(this, toolActiveName);\n  this.ngeoToolActivateMgr_.registerTool(group, toolActivate, false);\n\n  this.toolActiveNames_.push(toolActiveName);\n\n};\n\n\n/**\n * Called when any of the tool 'active' property changes.\n * @param {string} process The behavior the tool should use when active.\n * @param {boolean} requiresLayer Whether the tool requires the queryable\n *     layer or not.\n * @param {boolean|undefined} newVal New value.\n * @private\n */\nexports.Controller_.prototype.handleToolActiveChange_ = function(\n  process, requiresLayer, newVal\n) {\n\n  // Update process if a tool was activated.\n  if (newVal) {\n    this.process = process;\n    this.requiresLayer = requiresLayer;\n  }\n\n  // Update active property\n  let active = false;\n  for (let i = 0, ii = this.toolActiveNames_.length; i < ii; i++) {\n    active = active || this[this.toolActiveNames_[i]];\n    if (active) {\n      break;\n    }\n  }\n  this.active = active;\n\n  if (!this.active) {\n    this.requiresLayer = false;\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {};\n\n\nexports.controller('GmfObjecteditingtoolsController',\n  exports.Controller_);\n\n\n/**\n * @const\n * @private\n */\nexports.Controller_.NAMESPACE_ = 'oet';\n\n\n/**\n * @enum {string}\n */\nexports.ProcessType = {\n  ADD: 'add',\n  DELETE: 'delete'\n};\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.component\n */\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfObjecteditingGeom from 'gmf/objectediting/geom.js';\nimport gmfObjecteditingQuery from 'gmf/objectediting/Query.js';\n\n/** @suppress {extraRequire} */\nimport gmfObjecteditingToolsComponent from 'gmf/objectediting/toolsComponent.js';\n\nimport googAsserts from 'goog/asserts.js';\n\n\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\n\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport {OL3Parser} from 'jsts/io';\nconst jsts = {\n  io: {\n    OL3Parser,\n  },\n};\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfObjectEditingComponent', [\n  gmfEditingEditFeature.module.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfObjecteditingQuery.module.name,\n  gmfObjecteditingToolsComponent.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/objectediting', require('./component.html'));\n});\n\n\nexports.value('gmfObjecteditingTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfObjecteditingTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/objectediting';\n  }\n);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfObjecteditingTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfObjecteditingTemplateUrl($element, $attrs, gmfObjecteditingTemplateUrl) {\n  return gmfObjecteditingTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Component used to edit the geometry of a single feature using advanced\n * tools. The geometry must be Multi.\n *\n * Example:\n *\n *     <gmf-objectediting\n *         gmf-objectediting-active=\"ctrl.objectEditingActive\"\n *         gmf-objectediting-feature=\"ctrl.objectEditingFeature\"\n *         gmf-objectediting-geomtype=\"ctrl.objectEditingGeomType\"\n *         gmf-objectediting-layernodeid=\"ctrl.objectEditingLayerNodeId\"\n *         gmf-objectediting-map=\"::ctrl.map\"\n *         gmf-objectediting-sketchfeatures=\"::ctrl.sketchFeatures\">\n *     </gmf-objectediting>\n *\n * @htmlAttribute {boolean} gmf-objectediting-active Whether the component is\n *     active or not.\n * @htmlAttribute {ol.Feature} gmf-objectediting-feature The feature to edit.\n * @htmlAttribute {string} gmf-objectediting-geomtype The geometry type.\n * @htmlAttribute {number} gmf-objectediting-layernodeid The GMF layer node id.\n * @htmlAttribute {ol.Map} gmf-objectediting-map The map.\n * @htmlAttribute {ol.Collection.<ol.Feature>} gmf-objectediting-sketchfeatures\n *     Collection of temporary features being drawn by the tools.\n * @ngdoc component\n * @ngname gmfObjectediting\n */\nexports.component_ = {\n  controller: 'GmfObjecteditingController as oeCtrl',\n  bindings: {\n    'active': '=gmfObjecteditingActive',\n    'feature': '<gmfObjecteditingFeature',\n    'geomType': '<gmfObjecteditingGeomtype',\n    'layerNodeId': '<gmfObjecteditingLayernodeid',\n    'map': '<gmfObjecteditingMap',\n    'sketchFeatures': '<gmfObjecteditingSketchfeatures'\n  },\n  templateUrl: gmfObjecteditingTemplateUrl\n};\n\nexports.component('gmfObjectediting', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!gmf.editing.EditFeature} gmfEditFeature Gmf edit feature service.\n * @param {!gmf.objectediting.Query} gmfObjectEditingQuery Gmf ObjectEditing\n *     query service.\n * @param {!gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\ngoog.require('ngeo.map.LayerHelper');\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfObjecteditingController\n */\nexports.Controller = function($scope, $timeout, gettextCatalog,\n  gmfEditFeature, gmfObjectEditingQuery, gmfTreeManager,\n  ngeoFeatureHelper, ngeoLayerHelper, ngeoToolActivateMgr) {\n\n  // == Scope properties ==\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.layerNodeId;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @export\n   */\n  this.sketchFeatures;\n\n\n  // == Injected properties ==\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {!gmf.editing.EditFeature}\n   * @private\n   */\n  this.gmfEditFeature_ = gmfEditFeature;\n\n  /**\n   * @type {!gmf.objectediting.Query}\n   * @private\n   */\n  this.gmfObjectEditingQuery_ = gmfObjectEditingQuery;\n\n  /**\n   * @type {Array.<!gmfx.ObjectEditingQueryableLayerInfo>}\n   * @export\n   */\n  this.queryableLayersInfo;\n\n  /**\n   * @type {gmfx.ObjectEditingQueryableLayerInfo}\n   * @export\n   */\n  this.selectedQueryableLayerInfo;\n\n  /**\n   * Whether to show or hide the queryable list of layers. It is shown only\n   * when a tool requires it, which is managed in the `gmf-objecteditingtools`\n   * component.\n   * @type {boolean}\n   * @export\n   */\n  this.queryableLayerListShown = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.copyFromActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.deleteFromActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.featureHasGeom;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {!gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {!ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {!ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n\n  // == Other properties ==\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.skipGeometryChange_ = false;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.process = gmfObjecteditingToolsComponent.ProcessType.ADD;\n\n  /**\n   * @type {?ol.layer.Image|ol.layer.Tile}\n   * @private\n   */\n  this.editableWMSLayer_ = null;\n\n  /**\n   * @type {!jsts.io.OL3Parser}\n   * @private\n   */\n  this.jstsOL3Parser_ = new jsts.io.OL3Parser();\n\n  /**\n   * The state of the feature determines whether the next 'save' request\n   * should be an 'insert' or 'update' one.\n   * @type {string|undefined}\n   * @private\n   */\n  this.state_;\n\n  /**\n   * @type {!Array.<?ol.geom.Geometry>}\n   * @private\n   */\n  this.geometryChanges_ = [];\n\n  /**\n   * @type {!gmfx.StylesObject}\n   * @private\n   */\n  this.defaultStyles_ = {};\n\n  /**\n   * @type {!gmfx.StylesObject}\n   * @private\n   */\n  this.defaultStylesWoVertice_ = {};\n\n  /**\n   * @type {!gmfx.StylesObject}\n   * @private\n   */\n  this.dirtyStyles_ = {};\n\n  /**\n   * @type {!gmfx.StylesObject}\n   * @private\n   */\n  this.dirtyStylesWoVertice_ = {};\n\n  /**\n   * Flag that is toggled while a request is pending.\n   * @type {boolean}\n   * @export\n   */\n  this.pending = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.dirty = false;\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.interactions_ = new olCollection();\n\n  /**\n   * @type {!ol.interaction.Modify}\n   * @private\n   */\n  this.modify_ = new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.features_,\n    style: ngeoFeatureHelper.getVertexStyle(false)\n  });\n  this.interactions_.push(this.modify_);\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @private\n   */\n  this.modifyToolActivate_ = new ngeoMiscToolActivate(this.modify_, 'active');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.toolsActive = false;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @private\n   */\n  this.toolsToolActivate_ = new ngeoMiscToolActivate(this, 'toolsActive');\n};\n\n/**\n * Init the controller\n */\nexports.Controller.prototype.$onInit = function() {\n  this.gmfObjectEditingQuery_.getQueryableLayersInfo().then(\n    this.handleGetQueryableLayersInfo_.bind(this)\n  );\n\n  this.scope_.$watchCollection(\n    () => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    },\n    (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(\n            this.registerTreeCtrl_.bind(this)\n          );\n        }\n      });\n    }\n  );\n\n  const geometry = this.feature.getGeometry();\n  this.state_ = geometry ? exports.Controller.State.UPDATE :\n    exports.Controller.State.INSERT;\n\n  this.scope_.$watchCollection(\n    () => this.geometryChanges_,\n    (newVal, oldVal) => {\n      if (newVal.length) {\n        if (newVal.length === 1) {\n          this.dirty = false;\n        } else {\n          this.dirty = true;\n        }\n      }\n    }\n  );\n\n  const defaultColor = [39, 155, 145];\n  const dirtyColor = [153, 51, 51];\n  this.initializeStyles_(this.defaultStyles_, defaultColor);\n  this.initializeStyles_(this.defaultStylesWoVertice_, defaultColor, false);\n  this.initializeStyles_(this.dirtyStyles_, dirtyColor);\n  this.initializeStyles_(this.dirtyStylesWoVertice_, dirtyColor, false);\n\n  this.scope_.$watch(\n    () => this.dirty,\n    this.setFeatureStyle_.bind(this)\n  );\n\n  this.features_.push(this.feature);\n\n  this.featureHasGeom = !gmfObjecteditingGeom.isEmpty(geometry);\n\n  // Toggle on\n  this.initializeInteractions_();\n  this.registerInteractions_();\n  this.toggle_(true);\n  this.resetGeometryChanges_();\n\n  this.scope_.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n// == API methods ==\n\n\n/**\n * Delete the feature after asking for a confirmation.\n * @export\n */\nexports.Controller.prototype.delete = function() {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete the feature?');\n  // Confirm deletion first\n  if (confirm(msg)) {\n    this.dirty = false;\n    this.pending = true;\n\n    this.gmfEditFeature_.deleteFeature(\n      this.layerNodeId,\n      this.feature\n    ).then(\n      this.handleDeleteFeature_.bind(this)\n    );\n  }\n\n};\n\n\n/**\n * Save the current modifications.\n * @export\n */\nexports.Controller.prototype.save = function() {\n\n  this.pending = true;\n\n  // The geometry of the feature may contain Z in its coordinates, which\n  // GMF doesn't support.  This section ensures that the geometry gets purged\n  // of all Z from the coordinates before saving.\n  //\n  // Also, this is only done before saving on a clone of the feature. Doing\n  // it directly on the feature makes JSTS complain.\n  const feature = this.feature.clone();\n  feature.setId(this.feature.getId());\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    gmfObjecteditingGeom.toXY(geometry);\n  }\n\n  if (this.state_ === exports.Controller.State.INSERT) {\n    this.gmfEditFeature_.insertFeatures(\n      this.layerNodeId,\n      [feature]\n    ).then(\n      this.handleEditFeature_.bind(this)\n    );\n  } else if (this.state_ === exports.Controller.State.UPDATE) {\n    this.gmfEditFeature_.updateFeature(\n      this.layerNodeId,\n      feature\n    ).then(\n      this.handleEditFeature_.bind(this)\n    );\n  }\n};\n\n\n/**\n * Undo the latest modifications.\n * @export\n */\nexports.Controller.prototype.undo = function() {\n\n  if (this.geometryChanges_.length <= 1) {\n    return;\n  }\n\n  this.skipGeometryChange_ = true;\n\n  this.geometryChanges_.pop();\n  const clone = exports.Controller.cloneGeometry_(\n    this.geometryChanges_[this.geometryChanges_.length - 1]);\n\n  this.feature.setGeometry(clone);\n\n  this.skipGeometryChange_ = false;\n};\n\n\n/**\n * Undo the latest modifications.\n * @return {boolean} Whether the state is INSERT or not.\n * @export\n */\nexports.Controller.prototype.isStateInsert = function() {\n  return this.state_ === exports.Controller.State.INSERT;\n};\n\n\n// == Private methods ==\n\n\n/**\n * Called after a delete request.\n * @param {angular.$http.Response} resp Ajax response.\n * @private\n */\nexports.Controller.prototype.handleDeleteFeature_ = function(resp) {\n  this.feature.setGeometry(null);\n  this.resetGeometryChanges_();\n  this.state_ = exports.Controller.State.INSERT;\n  this.pending = false;\n  this.refreshWMSLayer_();\n};\n\n\n/**\n * Called after an 'insert' or 'update' request.\n * @param {angular.$http.Response} resp Ajax response.\n * @private\n */\nexports.Controller.prototype.handleEditFeature_ = function(resp) {\n  // (1) Update the id\n  const features = new olFormatGeoJSON().readFeatures(resp.data);\n  if (features.length) {\n    this.feature.setId(features[0].getId());\n  }\n  // (2) Reset geometry changes\n  this.resetGeometryChanges_();\n  // (3) Update state\n  if (this.feature.getGeometry()) {\n    this.state_ = exports.Controller.State.UPDATE;\n  } else {\n    this.state_ = exports.Controller.State.INSERT;\n  }\n  // (4) No longer pending\n  this.pending = false;\n  // (5) Refresh WMS layer\n  this.refreshWMSLayer_();\n};\n\n\n/**\n * Initialize interactions by setting them inactive and decorating them\n * @private\n */\nexports.Controller.prototype.initializeInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    interaction.setActive(false);\n    ngeoMiscDecorate.interaction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by adding them to the map\n * @private\n */\nexports.Controller.prototype.registerInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.addInteraction(interaction);\n  });\n};\n\n\n/**\n * Unregister interactions, i.e. remove them from the map\n * @private\n */\nexports.Controller.prototype.unregisterInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.removeInteraction(interaction);\n  });\n};\n\n\n/**\n * Activate or deactivate this component.\n * @param {boolean} active Whether to activate this component or not.\n * @private\n */\nexports.Controller.prototype.toggle_ = function(active) {\n\n  const keys = this.listenerKeys_;\n  const uid = `${exports.Controller.NAMESPACE_}-${olBase.getUid(this)}`;\n  const toolMgr = this.ngeoToolActivateMgr_;\n\n  if (active) {\n\n    keys.push(\n      olEvents.listen(\n        this.feature,\n        `change:${this.feature.getGeometryName()}`,\n        this.handleFeatureGeometryChange_,\n        this\n      )\n    );\n\n    keys.push(\n      olEvents.listen(\n        this.modify_,\n        'change:active',\n        this.setFeatureStyle_,\n        this\n      )\n    );\n\n    keys.push(\n      olEvents.listen(\n        this.modify_,\n        'modifyend',\n        this.handleModifyInteractionModifyEnd_,\n        this\n      )\n    );\n\n    keys.push(\n      olEvents.listen(\n        window,\n        'beforeunload',\n        this.handleWindowBeforeUnload_,\n        this\n      )\n    );\n\n    keys.push(\n      olEvents.listen(\n        this.sketchFeatures,\n        'add',\n        this.handleSketchFeaturesAdd_,\n        this\n      )\n    );\n\n    toolMgr.registerTool(uid, this.modifyToolActivate_, true);\n    toolMgr.registerTool(uid, this.toolsToolActivate_, false);\n\n  } else {\n\n    this.undoAllChanges_();\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n\n    toolMgr.unregisterTool(uid, this.modifyToolActivate_);\n    toolMgr.unregisterTool(uid, this.toolsToolActivate_);\n\n  }\n\n  this.modify_.setActive(active);\n};\n\n\n/**\n * Undo all current changes.\n * @private\n */\nexports.Controller.prototype.undoAllChanges_ = function() {\n  const clone = exports.Controller.cloneGeometry_(\n    this.geometryChanges_[0]);\n  this.feature.setGeometry(clone);\n\n  this.resetGeometryChanges_();\n  this.dirty = false;\n  this.setFeatureStyle_();\n};\n\n\n/**\n * Reset the array of geometry changes.  If there are more than one changes,\n * reset them entirely. Then, if there's no changes, clone the current geometry\n * as the first entry. One entry means that there's no changes.\n * @private\n */\nexports.Controller.prototype.resetGeometryChanges_ = function() {\n  if (this.geometryChanges_.length > 1) {\n    this.geometryChanges_.length = 0;\n  }\n  if (this.geometryChanges_.length === 0) {\n    const geometry = this.feature.getGeometry();\n    const clone = exports.Controller.cloneGeometry_(geometry);\n    this.geometryChanges_.push(clone);\n  }\n};\n\n\n/**\n * Called after the modification interaction has completed modifying the\n * existing geometry. The new geometry is pushed in the changes array.\n * If the geometry type is `MultiPolygon`, we check if any of the inner\n * geometries intersects with one an other first. Those that does are merged\n * before being pushed to the changes.\n *\n * @param {ol.interaction.Modify.Event} evt Event.\n * @private\n */\nexports.Controller.prototype.handleModifyInteractionModifyEnd_ = function(\n  evt\n) {\n  let geometry = this.feature.getGeometry();\n\n  if (geometry instanceof olGeomMultiPolygon) {\n    const jstsGeom = this.jstsOL3Parser_.read(geometry);\n    const jstsBuffered = jstsGeom.buffer(0);\n    geometry = ngeoUtils.toMulti(this.jstsOL3Parser_.write(jstsBuffered));\n    this.skipGeometryChange_ = true;\n    this.feature.setGeometry(geometry.clone());\n    this.skipGeometryChange_ = false;\n  }\n\n  const clone = exports.Controller.cloneGeometry_(geometry);\n  googAsserts.assert(clone);\n  this.geometryChanges_.push(clone);\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {gmfx.StylesObject} styles Hash of style.\n * @param {ol.Color} color Color.\n * @param {boolean=} opt_incVertice Whether to include vertice or not. Defaults\n *     to `true`.\n * @private\n */\nexports.Controller.prototype.initializeStyles_ = function(\n  styles, color, opt_incVertice\n) {\n\n  const incVertice = opt_incVertice !== false;\n  const rgbaColor = color.slice();\n  rgbaColor.push(0.3);\n\n  const image = new olStyleCircle({\n    radius: 8,\n    stroke: new olStyleStroke({\n      color: color,\n      width: 1\n    }),\n    fill: new olStyleFill({color: rgbaColor})\n  });\n\n  styles['Point'] = new olStyleStyle({\n    image\n  });\n  styles['MultiPoint'] = new olStyleStyle({\n    image\n  });\n\n  styles['LineString'] = [\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: color,\n        width: 3\n      })\n    })\n  ];\n  if (incVertice) {\n    styles['LineString'].push(\n      this.ngeoFeatureHelper_.getVertexStyle(true)\n    );\n  }\n  styles['MultiLineString'] = [\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: color,\n        width: 3\n      })\n    })\n  ];\n  if (incVertice) {\n    styles['MultiLineString'].push(\n      this.ngeoFeatureHelper_.getVertexStyle(true)\n    );\n  }\n\n  styles['Polygon'] = [\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: color,\n        width: 2\n      }),\n      fill: new olStyleFill({\n        color: rgbaColor\n      })\n    })\n  ];\n  if (incVertice) {\n    styles['Polygon'].push(\n      this.ngeoFeatureHelper_.getVertexStyle(true)\n    );\n  }\n  styles['MultiPolygon'] = [\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: color,\n        width: 2\n      }),\n      fill: new olStyleFill({\n        color: rgbaColor\n      })\n    })\n  ];\n  if (incVertice) {\n    styles['MultiPolygon'].push(\n      this.ngeoFeatureHelper_.getVertexStyle(true)\n    );\n  }\n\n};\n\n\n/**\n * Set the style of the feature depending on:\n *  - the geometry type\n *  - the dirty state of the component\n *  - whether the modify control is active or not\n *\n * @private\n */\nexports.Controller.prototype.setFeatureStyle_ = function() {\n  const geometry = this.feature.getGeometry();\n  if (geometry) {\n    const geomType = geometry.getType();\n    const modifyActive = this.modify_.getActive();\n    let style;\n    if (this.dirty) {\n      if (modifyActive) {\n        style = this.dirtyStyles_[geomType];\n      } else {\n        style = this.dirtyStylesWoVertice_[geomType];\n      }\n    } else {\n      if (modifyActive) {\n        style = this.defaultStyles_[geomType];\n      } else {\n        style = this.defaultStylesWoVertice_[geomType];\n      }\n    }\n    this.feature.setStyle(style);\n  }\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf', i.e. groups are\n * excluded.\n *\n * If the Layertree controller node id is equal to the `layerNodeId` configured\n * with this component, then find the WMS layer associated with it for\n * for refresh purpose.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.Controller.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  const node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (\n    treeCtrl.node);\n  if (node.children && node.children.length) {\n    return;\n  }\n\n  // Set editable WMS layer for refresh purpose\n  if (node.id === this.layerNodeId) {\n    const layer = gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl);\n    googAsserts.assert(\n      layer instanceof olLayerImage || layer instanceof olLayerTile);\n    this.editableWMSLayer_ = layer;\n  }\n\n};\n\n\n/**\n * Unregisters all currently registered Layertree controllers.\n *\n * Unset the WMS layer associated with the `layerNodeId` configured with\n * this component.\n *\n * @private\n */\nexports.Controller.prototype.unregisterAllTreeCtrl_ = function() {\n  this.editableWMSLayer_ = null;\n};\n\n\n/**\n * Refresh the WMS layer, if set.\n * @private\n */\nexports.Controller.prototype.refreshWMSLayer_ = function() {\n  if (this.editableWMSLayer_) {\n    this.ngeoLayerHelper_.refreshWMSLayer(this.editableWMSLayer_);\n  }\n};\n\n\n/**\n * Called before the window unloads. Show a confirmation message if there are\n * unsaved modifications.\n * @param {Event} e Event.\n * @return {string} Message\n * @private\n */\nexports.Controller.prototype.handleWindowBeforeUnload_ = function(e) {\n  const gettextCatalog = this.gettextCatalog_;\n  if (this.dirty) {\n    const msg = gettextCatalog.getString('There are unsaved changes.');\n    (e || window.event).returnValue = msg;\n    return msg;\n  }\n  return '';\n};\n\n\n/**\n * Called when a feature is added to the collection of sketch features.\n * Depending on the current behaviour, use the added sketch feature to process\n * the existing geometry.\n *\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller.prototype.handleSketchFeaturesAdd_ = function(evt) {\n  const sketchFeature = /** @type {ol.Feature} */ (evt.element);\n  const sketchGeom = /** @type {ol.geom.Geometry} */ (\n    sketchFeature.getGeometry());\n\n  const geom = this.feature.getGeometry();\n\n  if (geom) {\n    const jstsGeom = this.jstsOL3Parser_.read(geom);\n    const jstsSketchGeom = this.jstsOL3Parser_.read(sketchGeom);\n    let jstsProcessedGeom;\n\n    if (this.process === gmfObjecteditingToolsComponent.ProcessType.ADD) {\n      jstsProcessedGeom = jstsGeom.union(jstsSketchGeom);\n    } else {\n      if (jstsGeom.intersects(jstsSketchGeom)) {\n        jstsProcessedGeom = jstsGeom.difference(jstsSketchGeom);\n      }\n    }\n\n    if (jstsProcessedGeom) {\n      const processedGeom = this.jstsOL3Parser_.write(jstsProcessedGeom);\n      const multiGeom = ngeoUtils.toMulti(processedGeom);\n      this.feature.setGeometry(multiGeom.clone());\n    }\n\n  } else if (this.process === gmfObjecteditingToolsComponent.ProcessType.ADD) {\n    this.feature.setGeometry(ngeoUtils.toMulti(sketchGeom.clone()));\n  }\n\n  this.sketchFeatures.clear();\n};\n\n\n/**\n * Called when the geometry property of the feature changes, i.e. not when the\n * geometry itself changes but when a new geometry is set to the feature.\n *\n * This happens either when resetting the geometry to null, in which case\n * there's nothing to do here. Otherwise, it happens after the combinaison\n * of a sketch geometry with the existing feature geometry. This new geom\n * is pushed in the `geometryChanges_` array.\n *\n * @private\n */\nexports.Controller.prototype.handleFeatureGeometryChange_ = function() {\n  const geom = this.feature.getGeometry();\n  this.timeout_(() => {\n    this.featureHasGeom = !gmfObjecteditingGeom.isEmpty(geom);\n  });\n\n  if (this.skipGeometryChange_) {\n    return;\n  }\n\n  if (geom) {\n    // Use a timeout here, because there can be a scope digest already in\n    // progress. For example, with tools that requires the user to draw\n    // features on the map, we would need to manually call:\n    // this.scope_.$apply();\n    // For tools that use promises instead, such as the \"copy/delete\" from,\n    // a scope is already in progress so we must not invoke it again.\n    this.timeout_(() => {\n      this.geometryChanges_.push(geom.clone());\n    });\n  }\n};\n\n\n/**\n * @param {Array.<gmfx.ObjectEditingQueryableLayerInfo>} layersInfo List\n *     of queryable layers information, which contains the node and ogcServer.\n * @private\n */\nexports.Controller.prototype.handleGetQueryableLayersInfo_ = function(layersInfo) {\n  this.queryableLayersInfo = layersInfo;\n  if (this.queryableLayersInfo.length) {\n    this.selectedQueryableLayerInfo = this.queryableLayersInfo[0];\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller.prototype.handleDestroy_ = function() {\n  this.features_.clear();\n  this.toggle_(false);\n  this.unregisterInteractions_();\n};\n\n\n// == Static methods and type definitions ==\n\n\n/**\n * Utility method that gets the clone of a geometry, which can be null or\n * undefined. In the latter case, a null value is returned instead of a\n * geometry.\n * @param {?ol.geom.Geometry|undefined} geometry A geometry, undefined or\n *     null value.\n * @return {?ol.geom.Geometry} A geometry clone or null value.\n * @private\n */\nexports.Controller.cloneGeometry_ = function(geometry) {\n  let clone = null;\n  if (geometry) {\n    clone = geometry.clone();\n  }\n  return clone;\n};\n\n\n/**\n * @const\n * @private\n */\nexports.Controller.NAMESPACE_ = 'oe';\n\n\n/**\n * @enum {string}\n */\nexports.Controller.State = {\n  INSERT: 'insert',\n  UPDATE: 'update'\n};\n\n\nexports.controller('GmfObjecteditingController',\n  exports.Controller);\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.Manager\n */\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * A service that looks for certain parameters in the url and use them to fetch\n * a feature using the GMF protocol.\n *\n * @param {angular.$q} $q Angular $q service.\n * @param {gmf.editing.EditFeature} gmfEditFeature Gmf edit feature service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @constructor\n * @struct\n * @ngInject\n */\nconst exports = function($q, gmfEditFeature, ngeoLocation) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {gmf.editing.EditFeature}\n   * @private\n   */\n  this.gmfEditFeature_ = gmfEditFeature;\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {angular.$q.Deferred|null}\n   * @private\n   */\n  this.getFeatureDefered_ = null;\n\n};\n\n\n/**\n * Use the EditFeature service to fetch a single feature using parameters in\n * the url. The method returns a promise that has the feature as argument in\n * the callback method. If any parameter in the url is missing, `null` is\n * returned, otherwise the query is made. If the query returns a feature, it\n * is returned, otherwise one is created with empty geometry and with the\n * property set.\n *\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getFeature = function() {\n\n  if (!this.getFeatureDefered_) {\n    this.getFeatureDefered_ = this.q_.defer();\n\n    const geomType = this.ngeoLocation_.getParam(\n      exports.Param.GEOM_TYPE);\n    const id = this.ngeoLocation_.getParam(\n      exports.Param.ID);\n    const layer = this.ngeoLocation_.getParam(\n      exports.Param.LAYER);\n    const property = this.ngeoLocation_.getParam(\n      exports.Param.PROPERTY);\n    const theme = this.ngeoLocation_.getParam(\n      exports.Param.THEME);\n\n    if (geomType && id && layer && property && theme) {\n      this.gmfEditFeature_.getFeaturesWithComparisonFilters(\n        [layer],\n        [{\n          operator: 'eq',\n          property: property,\n          value: id\n        }]\n      ).then(this.handleGetFeatures_.bind(this, property, id));\n    } else {\n      this.getFeatureDefered_.resolve(null);\n    }\n  }\n\n  return this.getFeatureDefered_.promise;\n\n};\n\n\n/**\n * @return {string|undefined} The geometry type.\n * @export\n */\nexports.prototype.getGeomType = function() {\n  return this.ngeoLocation_.getParam(\n    exports.Param.GEOM_TYPE);\n};\n\n\n/**\n * @return {number|undefined} The gmf layer node id.\n * @export\n */\nexports.prototype.getLayerNodeId = function() {\n  return this.ngeoLocation_.getParamAsInt(\n    exports.Param.LAYER);\n};\n\n\n/**\n * Called after getting features with comparison filters. Resolve the deferred\n * promise with the first returned feature (if any), otherwise resolve it\n * with a feature created with an empty geometry and the property key + value\n * that was used in the attempt to fetch it.\n *\n * @param {string} key Property key.\n * @param {string} value Property value.\n * @param {Array.<ol.Feature>} features List of features.\n * @private\n */\nexports.prototype.handleGetFeatures_ = function(key, value, features) {\n  let feature;\n\n  if (features.length) {\n    feature = features[0];\n  } else {\n    const featureProperties = {};\n    featureProperties[key] = value;\n    featureProperties['geometry'] = null;\n    feature = new olFeature(featureProperties);\n  }\n\n  this.getFeatureDefered_.resolve(feature);\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Param = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GEOM_TYPE: 'objectediting_geomtype',\n  /**\n   * @type {string}\n   * @export\n   */\n  ID: 'objectediting_id',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAYER: 'objectediting_layer',\n  /**\n   * @type {string}\n   * @export\n   */\n  PROPERTY: 'objectediting_property',\n  /**\n   * @type {string}\n   * @export\n   */\n  THEME: 'objectediting_theme'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfObjectEditingManager', [\n  gmfEditingEditFeature.module.name,\n  ngeoStatemanagerLocation.module.name,\n]);\nexports.module.service('gmfObjectEditingManager', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.module\n */\nimport gmfObjecteditingComponent from 'gmf/objectediting/component.js';\nimport gmfObjecteditingGetWMSFeatureComponent from 'gmf/objectediting/getWMSFeatureComponent.js';\nimport gmfObjecteditingManager from 'gmf/objectediting/Manager.js';\nimport gmfObjecteditingQuery from 'gmf/objectediting/Query.js';\nimport gmfObjecteditingToolsComponent from 'gmf/objectediting/toolsComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfObjecteditingModule', [\n  gmfObjecteditingComponent.name,\n  gmfObjecteditingGetWMSFeatureComponent.name,\n  gmfObjecteditingManager.module.name,\n  gmfObjecteditingQuery.module.name,\n  gmfObjecteditingToolsComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.EPSG2056\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\nimport somerc from 'ngeo/proj/somerc.js';\nimport proj4 from 'proj4';\n\nconst epsg2056def = [\n  `+proj=${somerc}`,\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=2600000',\n  '+y_0=1200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg2056extent = [2420000, 1030000, 2900000, 1350000];\n\nproj4.defs('EPSG:2056', epsg2056def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:2056').setExtent(epsg2056extent);\n\nconst exports = 'EPSG:2056';\n\n\nexport default exports;\n","/**\n * @module app.oeedit.Controller\n */\n/**\n * Application entry point.\n *\n * This file includes `goog.require`'s for all the components/directives used\n * by the HTML page and the controller to provide the configuration.\n */\n\nimport gmfControllersAbstractDesktopController from 'gmf/controllers/AbstractDesktopController.js';\nimport './less/main.less';\nimport appBase from '../appmodule.js';\nimport gmfObjecteditingModule from 'gmf/objectediting/module.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoProjEPSG2056 from 'ngeo/proj/EPSG2056.js';\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport Raven from 'raven-js/src/raven.js';\nimport RavenPluginsAngular from 'raven-js/plugins/angular.js';\n\nif (!window.requestAnimationFrame) {\n  alert('Your browser is not supported, please update it or use another one. You will be redirected.\\n\\n'\n    + 'Votre navigateur n\\'est pas supporté, veuillez le mettre à jour ou en utiliser un autre. Vous allez être redirigé.\\n\\n'\n    + 'Ihr Browser wird nicht unterstützt, bitte aktualisieren Sie ihn oder verwenden Sie einen anderen. Sie werden weitergeleitet.');\n  window.location = 'http://geomapfish.org/';\n}\n\n/**\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @constructor\n * @extends {gmf.controllers.AbstractDesktopController}\n * @ngInject\n * @export\n */\nconst exports = function($scope, $injector, $timeout) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.oeEditActive = false;\n\n  gmfControllersAbstractDesktopController.call(this, {\n    srid: 21781,\n    mapViewConfig: {\n      center: [632464, 185457],\n      zoom: 3,\n      resolutions: [250, 100, 50, 20, 10, 5, 2, 1, 0.5, 0.25, 0.1, 0.05]\n    }\n  }, $scope, $injector);\n\n  /**\n   * The ngeo ToolActivate manager service.\n   * @type {ngeo.misc.ToolActivateMgr}\n   */\n  const ngeoToolActivateMgr = $injector.get('ngeoToolActivateMgr');\n\n  ngeoToolActivateMgr.unregisterGroup('mapTools');\n\n  const oeEditToolActivate = new ngeoMiscToolActivate(this, 'oeEditActive');\n  ngeoToolActivateMgr.registerTool('mapTools', oeEditToolActivate, true);\n\n  const queryToolActivate = new ngeoMiscToolActivate(this, 'queryActive');\n  ngeoToolActivateMgr.registerTool('mapTools', queryToolActivate, false);\n\n  // Set edit tool as default active one\n  $timeout(() => {\n    this.oeEditActive = true;\n  });\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.vectorSource_ = new olSourceVector({\n    wrapX: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: this.vectorSource_\n  });\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @export\n   */\n  this.sketchFeatures = new olCollection();\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      features: this.sketchFeatures,\n      wrapX: false\n    })\n  });\n\n  /**\n   * @type {gmf.theme.Themes} gmfObjectEditingManager The gmf theme service\n   */\n  const gmfThemes = $injector.get('gmfThemes');\n\n  gmfThemes.getThemesObject().then((themes) => {\n    if (themes) {\n      // Add layer vector after\n      this.map.addLayer(this.vectorLayer_);\n      this.map.addLayer(this.sketchLayer_);\n    }\n  });\n\n  /**\n   * @type {gmf.objectediting.Manager} gmfObjectEditingManager The gmf\n   *     ObjectEditing manager service.\n   */\n  const gmfObjectEditingManager = $injector.get('gmfObjectEditingManager');\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.oeGeomType = gmfObjectEditingManager.getGeomType();\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.oeLayerNodeId = gmfObjectEditingManager.getLayerNodeId();\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.oeFeature = null;\n\n  gmfObjectEditingManager.getFeature().then((feature) => {\n    this.oeFeature = feature;\n    if (feature) {\n      this.vectorSource_.addFeature(feature);\n    }\n  });\n\n  /**\n   * @type {Array.<string>}\n   * @export\n   */\n  this.searchCoordinatesProjections = [ngeoProjEPSG21781, ngeoProjEPSG2056, 'EPSG:4326'];\n\n  /**\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scaleSelectorValues = [250000, 100000, 50000, 20000, 10000, 5000, 2000, 1000, 500, 250, 100, 50];\n\n  /**\n   * @type {Array.<string>}\n   * @export\n   */\n  this.elevationLayers = ['aster', 'srtm'];\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.selectedElevationLayer = this.elevationLayers[0];\n\n  /**\n   * @type {Object.<string, gmfx.ProfileLineConfiguration>}\n   * @export\n   */\n  this.profileLinesconfiguration = {\n    'aster': {color: '#0000A0'},\n    'srtm': {color: '#00A000'}\n  };\n\n  /**\n   * @type {Array.<gmfx.MousePositionProjection>}\n   * @export\n   */\n  this.mousePositionProjections = [{\n    code: ngeoProjEPSG2056,\n    label: 'CH1903+ / LV95',\n    filter: 'ngeoNumberCoordinates::{x}, {y} m'\n  }, {\n    code: ngeoProjEPSG21781,\n    label: 'CH1903 / LV03',\n    filter: 'ngeoNumberCoordinates::{x}, {y} m'\n  }, {\n    code: 'EPSG:4326',\n    label: 'WGS84',\n    filter: 'ngeoDMSCoordinates:2'\n  }];\n\n  // Allow angular-gettext-tools to collect the strings to translate\n  /** @type {angularGettext.Catalog} */\n  const gettextCatalog = $injector.get('gettextCatalog');\n  gettextCatalog.getString('Add a theme');\n  gettextCatalog.getString('Add a sub theme');\n  gettextCatalog.getString('Add a layer');\n\n  if ($injector.has('sentryUrl')) {\n    const options = $injector.has('sentryOptions') ? $injector.get('sentryOptions') : undefined;\n    const raven = new Raven();\n    raven.config($injector.get('sentryUrl'), options)\n      .addPlugin(RavenPluginsAngular)\n      .install();\n  }\n};\n\nolBase.inherits(exports, gmfControllersAbstractDesktopController);\n\nexports.module = angular.module('Appoeedit', [\n  appBase.module.name,\n  gmfControllersAbstractDesktopController.module.name,\n  gmfObjecteditingModule.name,\n]);\n\nexports.module.value('gmfContextualdatacontentTemplateUrl', 'gmf/contextualdata');\nexports.module.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/contextualdata', require('./contextualdata.html'));\n});\n\nexports.module.controller('OEEditController', exports);\n\nexport default exports;\n","module.exports = \"<table> <tr> <td translate> Swiss grid (LV03) </td> <td> {{coord_21781|ngeoNumberCoordinates:0:'{x} / {y}'}} </td> </tr> <tr> <td translate> Wgs Coord. </td> <td> {{coord_4326|ngeoNumberCoordinates:2:'{y} / {x}'}} </td> </tr> <tr> <td translate> Wgs Coord. DMS </td> <td> {{coord_4326|ngeoDMSCoordinates:0:'{y} {x}'}} </td> </tr> <tr> <td translate> Elevation (SRTM) </td> <td> {{srtm | number}} [m] </td> </tr> <tr> <td translate> Elevation (Aster) </td> <td> {{aster | number}} [m] </td> </tr> </table> <a ng-href=\\\"https://maps.google.ch/?ie=UTF8&ll={{coord_4326_northern}},{{coord_4326_eastern}}&layer=c&cbll={{coord_4326_northern}},{{coord_4326_eastern}}&cbp=12,57.78,,0,8.1\\\" target=_blank>Google StreetView</a> \";","module.exports = \"<gmf-objecteditingtools gmf-objecteditingtools-active=oeCtrl.toolsActive gmf-objecteditingtools-copyfromactive=oeCtrl.copyFromActive gmf-objecteditingtools-deletefromactive=oeCtrl.deleteFromActive gmf-objecteditingtools-feature=oeCtrl.feature gmf-objecteditingtools-geomtype=::oeCtrl.geomType gmf-objecteditingtools-map=::oeCtrl.map gmf-objecteditingtools-process=oeCtrl.process gmf-objecteditingtools-queryablelayerinfo=oeCtrl.selectedQueryableLayerInfo gmf-objecteditingtools-requireslayer=oeCtrl.queryableLayerListShown gmf-objecteditingtools-sketchfeatures=::oeCtrl.sketchFeatures> </gmf-objecteditingtools> <div class=form-group ng-show=oeCtrl.queryableLayerListShown> <label ng-show=\\\"oeCtrl.copyFromActive === true\\\" class=control-label>{{'Copy from:' | translate}}</label> <label ng-show=\\\"oeCtrl.deleteFromActive === true\\\" class=control-label>{{'Cut from:' | translate}}</label> <select class=form-control ng-model=oeCtrl.selectedQueryableLayerInfo ng-options=\\\"layerInfo.layerNode.name | translate for layerInfo in oeCtrl.queryableLayersInfo\\\"> </select> </div> <form novalidate name=form class=\\\"form gmf-objectediting-form\\\"> <input type=submit value=\\\"{{'Save' | translate}}\\\" class=\\\"btn btn-sm btn-default gmf-objectediting-btn-save\\\" ng-click=\\\"form.$valid && oeCtrl.save()\\\" ng-disabled=\\\"!oeCtrl.dirty || oeCtrl.pending || !oeCtrl.featureHasGeom\\\" title=\\\"{{'Save modifications' | translate}}\\\"> <a class=\\\"btn btn-sm btn-link gmf-objectediting-btn-undo\\\" ng-click=oeCtrl.undo() ng-disabled=\\\"!oeCtrl.dirty || oeCtrl.pending\\\" title=\\\"{{'Undo latest modifications' | translate}}\\\" href>{{'Undo' | translate}}</a> <a class=\\\"btn btn-sm btn-link gmf-objectediting-btn-delete\\\" ng-click=oeCtrl.delete() ng-disabled=\\\"oeCtrl.isStateInsert() || oeCtrl.pending\\\" title=\\\"{{'Delete the feature' | translate}}\\\" href>{{'Delete' | translate}}</a> </form> \";","module.exports = \"<div class=btn-group role=group aria-label=\\\"\\\"> <a href ngeo-btn ngeo-createfeature ngeo-createfeature-active=oetCtrl.drawActive ngeo-createfeature-features=::oetCtrl.sketchFeatures ngeo-createfeature-geom-type=::oetCtrl.geomType ngeo-createfeature-map=::oetCtrl.map class=\\\"btn btn-sm btn-default\\\" ng-class=\\\"{active: oetCtrl.drawActive}\\\" ng-if=\\\"::(oetCtrl.geomType === 'MultiPoint')\\\" ng-model=oetCtrl.drawActive title=\\\"{{'Add a point to the geometry' | translate}}\\\"> <span class=\\\"fa fa-plus-square-o gmf-icon-oe-draw\\\"> </span> </a> <a href ngeo-btn ngeo-createfeature ngeo-createfeature-active=oetCtrl.drawActive ngeo-createfeature-features=::oetCtrl.sketchFeatures ngeo-createfeature-geom-type=::oetCtrl.geomType ngeo-createfeature-map=::oetCtrl.map class=\\\"btn btn-sm btn-default\\\" ng-class=\\\"{active: oetCtrl.drawActive}\\\" ng-if=\\\"::(oetCtrl.geomType === 'MultiLineString')\\\" ng-model=oetCtrl.drawActive title=\\\"{{'Add a linestring to the geometry' | translate}}\\\"> <span class=\\\"fa fa-plus-square-o gmf-icon-oe-draw\\\"> </span> </a> <a href ngeo-btn ngeo-createfeature ngeo-createfeature-active=oetCtrl.drawActive ngeo-createfeature-features=::oetCtrl.sketchFeatures ngeo-createfeature-geom-type=::oetCtrl.geomType ngeo-createfeature-map=::oetCtrl.map class=\\\"btn btn-sm btn-default\\\" ng-class=\\\"{active: oetCtrl.drawActive}\\\" ng-if=\\\"::(oetCtrl.geomType === 'MultiPolygon')\\\" ng-model=oetCtrl.drawActive title=\\\"{{'Add a polygon to the geometry' | translate}}\\\"> <span class=\\\"fa fa-plus-square-o gmf-icon-oe-draw\\\"> </span> </a> <a href ngeo-btn ngeo-createfeature ngeo-createfeature-active=oetCtrl.eraseActive ngeo-createfeature-features=::oetCtrl.sketchFeatures ngeo-createfeature-geom-type=::oetCtrl.geomTypePolygon ngeo-createfeature-map=::oetCtrl.map class=\\\"btn btn-sm btn-default\\\" ng-class=\\\"{active: oetCtrl.eraseActive}\\\" ng-model=oetCtrl.eraseActive title=\\\"{{'Erase geometry' | translate}}\\\"> <span class=\\\"fa fa-minus-square-o gmf-icon-oe-erase\\\"> </span> </a> <a href ng-if=\\\"::oetCtrl.geomType === 'MultiPolygon'\\\" ngeo-btn ngeo-createregularpolygonfromclick ngeo-createregularpolygonfromclick-active=oetCtrl.drawTriangleActive ngeo-createregularpolygonfromclick-angle=oetCtrl.triangleAngle ngeo-createregularpolygonfromclick-features=::oetCtrl.sketchFeatures ngeo-createregularpolygonfromclick-map=::oetCtrl.map ngeo-createregularpolygonfromclick-radius=::oetCtrl.triangleRadius class=\\\"btn btn-sm btn-default ngeo-createregularpolygonfromclick\\\" ng-class=\\\"{active: oetCtrl.drawTriangleActive}\\\" ng-model=oetCtrl.drawTriangleActive title=\\\"{{'Draw a triangle' | translate}}\\\"> <span class=\\\"fa fa-play fa-rotate-270 gmf-icon-oe-triangle\\\"> </span> </a> <a href ngeo-btn gmf-objecteditinggetwmsfeature gmf-objecteditinggetwmsfeature-active=oetCtrl.copyFromActive gmf-objecteditinggetwmsfeature-features=::oetCtrl.sketchFeatures gmf-objecteditinggetwmsfeature-layerinfo=oetCtrl.queryableLayerInfo gmf-objecteditinggetwmsfeature-map=::oetCtrl.map class=\\\"btn btn-sm btn-default gmf-objecteditinggetwmsfeature-add\\\" ng-class=\\\"{active: oetCtrl.copyFromActive}\\\" ng-model=oetCtrl.copyFromActive title=\\\"{{'Copy from external WMS feature' | translate}}\\\"> <span class=\\\"fa fa-clone gmf-icon-oe-copyfrom\\\"> </span> </a> <a href ngeo-btn gmf-objecteditinggetwmsfeature gmf-objecteditinggetwmsfeature-active=oetCtrl.deleteFromActive gmf-objecteditinggetwmsfeature-features=::oetCtrl.sketchFeatures gmf-objecteditinggetwmsfeature-layerinfo=oetCtrl.queryableLayerInfo gmf-objecteditinggetwmsfeature-map=::oetCtrl.map class=\\\"btn btn-sm btn-default gmf-objecteditinggetwmsfeature-delete\\\" ng-class=\\\"{active: oetCtrl.deleteFromActive}\\\" ng-model=oetCtrl.deleteFromActive title=\\\"{{'Cut from external WMS feature' | translate}}\\\"> <span class=\\\"fa fa-scissors gmf-icon-oe-deletefrom\\\"> </span> </a> </div> \";","module.exports = \"<div class=form-group> <select class=form-control ng-model=$ctrl.mode ng-options=\\\"mode | translate for mode in $ctrl.modes\\\"> </select> </div> <div> <form name=idsl_form novalidate ng-show=\\\"$ctrl.mode === 'Local'\\\"> <div class=form-group> <div class=\\\"input-group input-group-sm\\\"> <input name=file type=file required/> <input class=form-control placeholder=\\\"{{'No file' | translate}}\\\" readonly=readonly type=text value={{$ctrl.fileNameAndSize}} ng-click=$ctrl.browse() /> <span class=input-group-btn> <button class=\\\"btn btn-default\\\" type=button ng-click=$ctrl.browse() translate>Browse</button> </span> </div> </div> <div class=form-group> <button class=\\\"btn btn-sm btn-default form-control\\\" title=\\\"{{'Load a file from local' | translate}}\\\" type=submit ng-click=\\\"idsl_form.$valid && $ctrl.load()\\\" ng-disabled=\\\"$ctrl.file === undefined\\\"> <span>{{'Load local file' | translate}}</span> </button> </div> </form> <form name=idsc_form novalidate ng-show=\\\"$ctrl.mode === 'Online'\\\"> <div class=\\\"form-group gmf-importdatasource-url-form-group\\\"> <input autocomplete=off class=form-control name=url placeholder=\\\"{{'Choose or enter online resource URL' | translate}}\\\" required type=url ng-disabled=$ctrl.pending ng-model=$ctrl.url /> </div> <div class=form-group> <button class=\\\"btn btn-sm btn-default form-control gmf-importdatasource-connect-btn\\\" title=\\\"{{'Connect to online resource' | translate}}\\\" type=submit ng-click=\\\"idsc_form.$valid && $ctrl.connect()\\\" ng-disabled=\\\"idsc_form.$invalid || $ctrl.pending\\\"> <span ng-if=$ctrl.pending>{{'Connecting, please wait...' | translate}}</span> <span ng-if=\\\"!$ctrl.pending && $ctrl.hasError\\\">{{'Failed to connect' | translate}}</span> <span ng-if=\\\"!$ctrl.pending && !$ctrl.hasError\\\">{{'Connect' | translate}}</span> </button> </div> </form> </div> <div class=gmf-importdatasource-layers ng-if=\\\"$ctrl.wmsCapabilities !== null || $ctrl.wmtsCapabilities !== null\\\"> <hr/> <gmf-wmscapabilitylayertreenode capabilities=::$ctrl.wmsCapabilities layer=::$ctrl.wmsCapabilities.Capability.Layer url=::$ctrl.url ng-if=\\\"$ctrl.wmsCapabilities !== null\\\"> </gmf-wmscapabilitylayertreenode> <gmf-wmtscapabilitylayertree capabilities=::$ctrl.wmtsCapabilities layers=::$ctrl.wmtsCapabilities.Contents.Layer url=::$ctrl.url ng-if=\\\"$ctrl.wmtsCapabilities !== null\\\"> </gmf-wmtscapabilitylayertree> </div> \";","module.exports = \"<ul> <li ng-repeat=\\\"layer in ::$ctrl.layers\\\"> <div class=gmf-wmscapabilitylayertreenode-header> <span class=gmf-wmscapabilitylayertreenode-popover-container ngeo-popover ngeo-popover-dismiss=.content ngeo-popover-placement=left> <span ngeo-popover-anchor class=\\\"fa fa-cog gmf-wmscapabilitylayertreenode-actions\\\"> </span> <div class=gmf-wmscapabilitylayertreenode-popover-content ngeo-popover-content> <ul> <li> <i class=\\\"fa fa-plus fa-fw\\\"></i> <a href=\\\"\\\" ng-click=\\\"$ctrl.createAndAddDataSource(layer); popoverCtrl.dismissPopover()\\\"> <span translate>Add layer</span> </a> </li> <li ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a aria-expanded=false data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-click=popoverCtrl.dismissPopover()> <span translate>Open/Close description</span> </a> </li> </ul> </div> </span> <a class=\\\"fa fa-circle-thin gmf-wmscapabilitylayertreenode-no-icon fa-fw\\\"></a> <span class=gmf-wmscapabilitylayertreenode-title>{{ ::layer.Title }}</span> <div class=\\\"collapse gmf-wmscapabilitylayertreenode-description\\\" id=gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <a aria-expanded=false class=gmf-wmscapabilitylayertreenode-description-toggle data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}}> <span translate>Hide description</span> </a> <span class=gmf-wmscapabilitylayertreenode-description-content>{{ ::layer.Abstract }}</span> </div> </div> </li> </ul> \";","module.exports = \"<ul> <li ng-repeat=\\\"layer in ::$ctrl.layer.Layer\\\"> <div class=gmf-wmscapabilitylayertreenode-header> <span class=gmf-wmscapabilitylayertreenode-popover-container ng-if=\\\"::(layer.Name !== undefined || layer.Abstract !== undefined)\\\" ngeo-popover ngeo-popover-dismiss=.content ngeo-popover-placement=left> <span ngeo-popover-anchor class=\\\"fa fa-cog gmf-wmscapabilitylayertreenode-actions\\\"> </span> <div class=gmf-wmscapabilitylayertreenode-popover-content ngeo-popover-content> <ul> <li ng-if=\\\"::(layer.Name !== undefined)\\\"> <i class=\\\"fa fa-plus fa-fw\\\"></i> <a href=\\\"\\\" ng-click=\\\"$ctrl.createAndAddDataSource(layer); popoverCtrl.dismissPopover()\\\"> <span translate>Add layer</span> </a> </li> <li ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a aria-expanded=false data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-click=popoverCtrl.dismissPopover()> <span translate>Open/Close description</span> </a> </li> </ul> </div> </span> <a aria-expanded=false class=\\\"fa gmf-wmscapabilitylayertreenode-expand-node fa-fw\\\" data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-children-{{::$ctrl.getUid(layer)}} ng-if=\\\"::(layer.Layer !== undefined && layer.Layer.length)\\\"></a> <span ng-if=\\\"::(layer.Layer !== undefined && layer.Layer.length)\\\" class=\\\"fa fa-fw gmf-wmscapabilitylayertreenode-group\\\"> </span> <a class=\\\"fa fa-circle-thin gmf-wmscapabilitylayertreenode-no-icon fa-fw\\\" ng-if=\\\"::(layer.Layer === undefined || layer.Layer.length === 0)\\\"></a> <span class=gmf-wmscapabilitylayertreenode-title>{{ ::layer.Title }}</span> <div class=\\\"collapse gmf-wmscapabilitylayertreenode-description\\\" id=gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <a aria-expanded=false class=gmf-wmscapabilitylayertreenode-description-toggle data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}}> <span translate>Hide description</span> </a> <span class=gmf-wmscapabilitylayertreenode-description-content>{{ ::layer.Abstract }}</span> </div> </div> <gmf-wmscapabilitylayertreenode class=collapse id=gmf-wmscapabilitylayertreenode-children-{{::$ctrl.getUid(layer)}} capabilities=::$ctrl.capabilities layer=::layer ng-if=\\\"::(layer.Layer !== undefined)\\\"> </gmf-wmscapabilitylayertreenode> </li> </ul> \";","module.exports = \"<div class=\\\"text-center btn-group dropup\\\" gmf-elevation gmf-elevation-active=ctrl.active gmf-elevation-elevation=ctrl.elevationValue gmf-elevation-loading=ctrl.elevationLoading gmf-elevation-layer=ctrl.selectedElevationLayer gmf-elevation-map=::ctrl.map> <a type=button class=\\\"btn btn-default\\\" aria-expanded=false ng-class=\\\"::{'dropdown-toggle': ctrl.layers.length > 1}\\\" ng-attr-data-toggle=\\\"{{::(ctrl.layers.length > 1) ? 'dropdown' : ''}}\\\"> <span class=gmf-elevationwidget-value> {{ctrl.elevationValue | number}}<span ng-show=ctrl.elevationValue> m</span> <span ng-show=ctrl.elevationLoading class=\\\"fa fa-spinner\\\"></span> <span ng-show=\\\"!ctrl.elevationValue && !ctrl.elevationLoading\\\" translate>Elevation…</span> </span><span class=caret ng-if=\\\"::ctrl.layers.length > 1\\\"></span> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu ng-if=\\\"::ctrl.layers.length > 1\\\"> <li class=dropdown-header translate>Elevation data sources</li> <li ng-repeat=\\\"elevationItem in ::ctrl.layers\\\"> <a href ng-click=\\\"ctrl.selectedElevationLayer = elevationItem\\\"> <span class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedElevationLayer === elevationItem}\\\"></span> {{::elevationItem | translate}} </a> </li> </ul> </div> \";","module.exports = \"<div class=\\\"gmf-profile-container panel\\\" ng-show=ctrl.active> <div class=ngeo-profile ng-show=!ctrl.isErrored ngeo-profile=ctrl.profileData ngeo-profile-highlight=ctrl.profileHighlight ngeo-profile-options=::ctrl.profileOptions> </div> <ul class=gmf-profile-legend ng-show=!ctrl.isErrored> <li ng-repeat=\\\"name in ::ctrl.getLayersNames()\\\"> <i class=\\\"fa fa-minus\\\" style=color:{};></i> &nbsp;{{name | translate}}&nbsp;{{ctrl.currentPoint.elevations[name]}}&nbsp;{{ctrl.currentPoint.yUnits}} </li> </ul> <div class=\\\"gmf-profile-export btn-group dropup\\\" ng-show=!ctrl.isErrored> <a class=dropdown-toggle href=\\\"\\\" ng-show=\\\"ctrl.profileData.length !== 0\\\" data-toggle=dropdown aria-expanded=false> {{'Export' | translate}}&nbsp;<i class=\\\"fa fa-caret-up\\\"></i> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li> <a href=\\\"\\\" ng-click=::ctrl.downloadCsv()> <i class=\\\"fa fa-table\\\"></i>&nbsp;{{'Download CSV' | translate}}</a> </li> </ul> </div> <div class=gmf-profile-error ng-show=ctrl.isErrored> <p>{{'The profile service does not respond, please try later.' | translate}}</p> </div> <div class=close ng-click=\\\"ctrl.line = null\\\">&times;</div> </div> \";","module.exports = \"<div class=gmf-print> <div ng-show=\\\"$ctrl.isState('CAPABILITIES_NOT_LOADED') !== true && $ctrl.isState('ERROR_ON_GETCAPABILITIES') !== true\\\"> <div class=\\\"gmf-print-layout-selector form-horizontal\\\"><ng-transclude/></div> <div ng-repeat=\\\"attribute in $ctrl.layoutInfo.simpleAttributes\\\" class=\\\"gmf-print-layoutinfo form-group\\\"> <div ng-if=\\\"$ctrl.hiddenAttributeNames === undefined || $ctrl.hiddenAttributeNames.indexOf(attribute.name) < 0\\\"> <input ng-if=\\\"attribute.type === 'number'\\\" ng-model=attribute.value class=form-control type=number ng-attr-placeholder=\\\"{{attribute.name | translate}}\\\"> <input ng-if=\\\"attribute.type === 'text'\\\" ng-model=attribute.value class=form-control type=text ng-attr-placeholder=\\\"{{attribute.name | translate}}\\\"> <textarea ng-if=\\\"attribute.type === 'textarea'\\\" ng-model=attribute.value class=form-control row=3 ng-attr-placeholder=\\\"{{attribute.name | translate}}\\\"></textarea> <div ng-if=\\\"attribute.type === 'checkbox'\\\" class=checkbox> <label> <input ng-model=attribute.value type=checkbox> <span>{{attribute.name | translate}}</span> </label> </div> </div> </div> <div ng-show=\\\"$ctrl.layoutInfo.legend !== undefined\\\" class=\\\"gmf-print-legend checkbox\\\"> <label> <input ng-model=$ctrl.layoutInfo.legend type=checkbox> <span translate>Legend</span> </label> </div> <div class=\\\"gmf-print-layout-selector form-horizontal\\\"> <div ng-show=\\\"$ctrl.layoutInfo.layouts.length !== 1\\\" class=form-group> <label class=\\\"control-label col-md-5\\\" translate>Layout</label> <div class=col-md-7> <div class=\\\"btn-group btn-block\\\"> <button type=button class=\\\"btn btn-default form-control\\\" data-toggle=dropdown> <span>{{$ctrl.layoutInfo.layout | translate}}&nbsp;</span> <i class=\\\"fa fa-caret-down\\\"></i> </button> <ul class=\\\"dropdown-menu dropdown-menu-right btn-block\\\" role=menu> <li ng-repeat=\\\"layout in $ctrl.layoutInfo.layouts\\\"> <a ng-click=$ctrl.setLayout(layout) href=\\\"\\\">{{layout | translate}}</a> </li> </ul> </div> </div> </div> <div ng-show=\\\"$ctrl.layoutInfo.scales.length !== 1\\\" class=\\\"gmf-print-scale-selector form-group\\\"> <label class=\\\"control-label col-md-5\\\" translate>Scale</label> <div class=col-md-7> <div class=\\\"btn-group btn-block\\\"> <button type=button class=\\\"btn btn-default form-control\\\" data-toggle=dropdown aria-expanded=false> <span>{{$ctrl.layoutInfo.scale | ngeoScalify}}&nbsp;</span> <i class=\\\"fa fa-caret-down\\\"></i> </button> <ul class=\\\"dropdown-menu dropdown-menu-right btn-block\\\" role=menu> <li ng-repeat=\\\"scale in $ctrl.layoutInfo.scales\\\"> <a ng-click=$ctrl.getSetScale(scale) href=\\\"\\\">{{scale | ngeoScalify}}</a> </li> <span ng-if=$ctrl.scaleInput> <li class=dropdown-header translate>Manual entry</li> <li> <div class=gmf-print-custom-scale> 1 : <input class=gmf-print-custom-scale-input type=number min=1 ng-model=$ctrl.getSetScale ng-model-options=\\\"{getterSetter: true}\\\"> </div> </li> </span> </ul> </div> </div> </div> <div ng-show=\\\"$ctrl.layoutInfo.dpis.length !== 1\\\" class=\\\"gmf-print-dpi-selector form-group\\\"> <label class=\\\"control-label col-md-3\\\" translate>DPI</label> <div class=col-md-5> <div class=\\\"btn-group btn-block\\\"> <button type=button class=\\\"btn btn-default form-control\\\" data-toggle=dropdown aria-expanded=false> <span>{{$ctrl.layoutInfo.dpi}}&nbsp;</span> <i class=\\\"fa fa-caret-down\\\"></i> </button> <ul class=\\\"dropdown-menu dropdown-menu-right btn-block\\\" role=menu> <li ng-repeat=\\\"dpi in $ctrl.layoutInfo.dpis\\\"> <a href=\\\"\\\" ng-click=$ctrl.setDpi(dpi)>{{dpi}}</a> </li> </ul> </div> </div> </div> <div class=\\\"gmf-print-rotation-selector form-group\\\"> <label class=\\\"control-label col-md-3\\\" translate>Rotation</label> <div class=col-md-5> <input class=\\\"form-control gmf-print-rotation-input\\\" type=range value=0 min=-180 max=180 data-toggle=tooltip title=\\\"{{'You can also use Alt+Shift on the map' | translate}}\\\"> </div> <div class=col-md-4> <input class=\\\"form-control gmf-print-rotation-input\\\" type=number min=-180 max=180 value=0> </div> </div> </div> <div class=\\\"gmf-print-actions form-group pull-right\\\"> <span ng-show=\\\"$ctrl.isState('PRINTING')\\\"> <i class=\\\"fa fa-refresh fa-spin\\\"></i> </span> <a ng-show=\\\"$ctrl.isState('PRINTING')\\\" class=\\\"gmf-print-cancel btn btn-link\\\" href=\\\"\\\" ng-click=$ctrl.cancel() translate>Abort</a> <button ng-show=$ctrl.layoutInfo.formats.png class=\\\"gmf-print-image btn btn-primary\\\" ng-disabled=\\\"$ctrl.isState('PRINTING')\\\" ng-click=\\\"$ctrl.print('png')\\\" translate>Image</button> <button ng-show=$ctrl.layoutInfo.formats.pdf class=\\\"gmf-print-pdf btn btn-primary\\\" ng-disabled=\\\"$ctrl.isState('PRINTING')\\\" ng-click=\\\"$ctrl.print('pdf')\\\" translate>PDF</button> </div> <div ng-show=\\\"$ctrl.isState('ERROR_ON_REPORT')\\\" class=\\\"gmf-print-error-report form-group pull-left text-danger\\\"> <p>{{'Error during the print, please try again.' | translate}}</p> </div> </div> <div ng-show=\\\"$ctrl.isState('CAPABILITIES_NOT_LOADED')\\\" class=\\\"gmf-print-wait form-group pull-left\\\"> <p>{{'Connecting to the print server, please wait.' | translate}}</p> </div> <div ng-show=\\\"$ctrl.isState('ERROR_ON_GETCAPABILITIES')\\\" class=\\\"gmf-print-error-capabilities form-group pull-left text-danger\\\"> <p>{{'The print server is unavailable. Please, try later.' | translate}}</p> </div> </div> \";","module.exports = \"<div ng-switch=efsCtrl.selectedEditableTreeCtrl> <div ng-switch-when=null> <select class=form-control ng-model=efsCtrl.selectedEditableTreeCtrl ng-show=\\\"efsCtrl.editableTreeCtrls.length > 0\\\" ng-options=\\\"treeCtrl.node.name | translate for treeCtrl in efsCtrl.editableTreeCtrls\\\"> <option value=\\\"\\\" translate>-- Choose a layer --</option> </select> <span ng-show=\\\"efsCtrl.editableTreeCtrls.length == 0\\\" translate>No editable layer available!</span> </div> <div ng-switch-default> <div class=row> <div class=col-sm-12> <span translate>Currently editing: </span> <b>{{ efsCtrl.selectedEditableTreeCtrl.node.name | translate }}</b> <span class=\\\"fa fa-pencil\\\"></span> <br> <button ng-click=efsCtrl.stopEditing() class=\\\"btn btn-link btn-xs pull-right\\\"> <span class=\\\"fa fa-times\\\"></span> {{'Stop editing' | translate}} </button> </div> </div> <gmf-editfeature gmf-editfeature-dirty=efsCtrl.dirty gmf-editfeature-editabletreectrl=::efsCtrl.selectedEditableTreeCtrl gmf-editfeature-map=::efsCtrl.map gmf-editfeature-state=efsCtrl.state gmf-editfeature-tolerance=::efsCtrl.tolerance gmf-editfeature-vector=::efsCtrl.vectorLayer> </gmf-editfeature> </div> </div> \";","module.exports = \"<div> <div ng-switch=efCtrl.feature> <a ng-switch-when=null ng-if=efCtrl.geomType href ngeo-btn ngeo-createfeature ngeo-createfeature-active=efCtrl.createActive ngeo-createfeature-features=::efCtrl.features ngeo-createfeature-geom-type=::efCtrl.geomType ngeo-createfeature-map=::efCtrl.map class=\\\"btn btn-default\\\" ng-class=\\\"{active: efCtrl.createActive}\\\" ng-model=efCtrl.createActive> <span ng-switch=::efCtrl.geomType> <span ng-switch-when=Point> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> {{'Draw new point' | translate}} </span> <span ng-switch-when=MultiPoint> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> {{'Draw new point' | translate}} </span> <span ng-switch-when=LineString> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> {{'Draw new linestring' | translate}} </span> <span ng-switch-when=MultiLineString> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> {{'Draw new linestring' | translate}} </span> <span ng-switch-when=Polygon> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> {{'Draw new polygon' | translate}} </span> <span ng-switch-when=MultiPolygon> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> {{'Draw new polygon' | translate}} </span> </span> </a> <div ng-switch-default> <form novalidate name=form class=\\\"form gmf-editfeature-attributes-container\\\" ng-if=efCtrl.attributes> <div class=row> <div class=col-sm-12> <a class=close ng-click=efCtrl.cancel() ng-disabled=efCtrl.pending title=\\\"{{'Cancel modifications' | translate}}\\\" href>&times;</a> </div> </div> <ngeo-attributes ngeo-attributes-attributes=::efCtrl.attributes ngeo-attributes-disabled=efCtrl.pending ngeo-attributes-feature=::efCtrl.feature> </ngeo-attributes> <input type=submit value=\\\"{{'Save' | translate}}\\\" class=\\\"btn btn-sm btn-default gmf-editfeature-btn-save\\\" ng-click=\\\"form.$valid && efCtrl.save()\\\" ng-disabled=\\\"!efCtrl.dirty || efCtrl.pending\\\" title=\\\"{{'Save modifications' | translate}}\\\"> <a class=\\\"btn btn-sm btn-default gmf-editfeature-btn-cancel\\\" ng-click=efCtrl.confirmCancel() ng-disabled=efCtrl.pending title=\\\"{{'Cancel modifications' | translate}}\\\" href>{{'Cancel' | translate}}</a> <button class=\\\"btn btn-sm btn-link gmf-editfeature-btn-delete\\\" ng-click=efCtrl.delete() ng-disabled=efCtrl.pending ng-show=efCtrl.featureId title=\\\"{{'Delete this feature' | translate}}\\\"> <span class=\\\"fa fa-trash\\\"></span> {{'Delete' | translate}} </button> </form> </div> </div> <ngeo-modal ng-model=efCtrl.unsavedModificationsModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Unsaved modifications!' | translate}} </h4> </div> <div class=modal-body> {{'There are unsaved changes.' | translate}} </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal ng-click=efCtrl.continueWithoutSaving()> {{'Continue without saving' | translate}} </button> <button type=button class=\\\"btn btn-primary\\\" data-dismiss=modal> {{'Cancel' | translate}} </button> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal ng-click=efCtrl.submit()> {{'Save' | translate}} </button> </div> </ngeo-modal> <ngeo-modal ng-model=efCtrl.showServerError> <div class=modal-header>{{'Server error.' | translate}}</div> <div class=modal-body>{{$parent.efCtrl.serverErrorType}}<br> {{$parent.efCtrl.serverErrorMessage || ('Unexpected server error.' | translate)}}</div> </ngeo-modal> </div> \";","module.exports = \"<fieldset ng-disabled=attrCtrl.disabled> <div class=form-group ng-repeat=\\\"attribute in ::attrCtrl.attributes\\\"> <div ng-if=\\\"attribute.type !== 'geometry'\\\"> <label ng-if=\\\"::attribute.type !== 'boolean'\\\" class=control-label>{{ ::attribute.name | translate }} <span class=text-muted>{{::attribute.required ? \\\"*\\\" : \\\"\\\"}}</span> </label> <div ng-switch=::attribute.type> <div ng-switch-when=boolean class=checkbox> <label> <input name={{::attribute.name}} ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); type=checkbox>  <span> {{ ::attribute.name | translate }} <span class=text-muted>{{::attribute.required ? \\\"*\\\" : \\\"\\\"}}</span></span> </label> </div> <select name={{::attribute.name}} ng-required=attribute.required ng-switch-when=select ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control type=text> <option ng-repeat=\\\"attribute in ::attribute.choices\\\" value=\\\"{{ ::attribute }}\\\"> {{ ::attribute }} </option> </select> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-when=date ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ngeo-datetimepicker ngeo-datetimepicker-options=\\\"'{&quot;timepicker&quot;: false, &quot;format&quot;: &quot;' + attribute.format + '&quot;, &quot;allowBlank&quot;: true, &quot;todayButton&quot;: false, &quot;mask&quot;: &quot;' + attribute.mask + '&quot;}'\\\" class=form-control type=text>  <input name={{::attribute.name}} id=time ng-required=attribute.required ng-switch-when=time ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ngeo-datetimepicker ngeo-datetimepicker-options=\\\"'{&quot;datepicker&quot;: false, &quot;format&quot;: &quot;' + attribute.format + '&quot;, &quot;todayButton&quot;: false, &quot;mask&quot;: &quot;' + attribute.mask + '&quot;, &quot;defaultTime&quot;: &quot;00:00&quot;}'\\\" class=form-control type=text>  <input name={{::attribute.name}} ng-required=attribute.required ng-switch-when=datetime ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ngeo-datetimepicker ngeo-datetimepicker-options=\\\"'{&quot;scrollTime&quot;: false, &quot;format&quot;: &quot;' + attribute.format + '&quot;, &quot;allowBlank&quot;: true, &quot;todayButton&quot;: false, &quot;mask&quot;: &quot;' + attribute.mask + '&quot;, &quot;defaultTime&quot;: &quot;00:00&quot;}'\\\" class=form-control type=text>  <div ng-switch-when=number ng-switch=::attribute.numType> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-when=integer ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control step=1 type=number>  <input name={{::attribute.name}} ng-required=attribute.required ng-switch-default ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control type=number>  </div> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-default ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ng-maxlength=attribute.maxLength class=form-control type=text>  <div ng-show=\\\"attrCtrl.form.$submitted || attrCtrl.form[attribute.name].$touched\\\"> <p class=text-danger ng-show=attrCtrl.form[attribute.name].$error.required> {{'This field is required' | translate}} </p> </div> </div> </div> </div> </fieldset> \";","module.exports = \"<ngeo-drawfeature ngeo-btn-group class=btn-group ngeo-drawfeature-active=efCtrl.drawActive ngeo-drawfeature-map=efCtrl.map ngeo-drawfeature-showmeasure=efCtrl.showMeasure> <a data-toggle=tooltip title=\\\"{{'Draw a point on the map' | translate}}\\\" href ngeo-btn ngeo-drawpoint class=\\\"btn btn-default ngeo-drawfeature-point\\\" ng-class=\\\"{active: dfCtrl.drawPoint.active}\\\" ng-model=dfCtrl.drawPoint.active> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a line on the map' | translate}}\\\" href ngeo-btn ngeo-measurelength class=\\\"btn btn-default ngeo-drawfeature-linestring\\\" ng-class=\\\"{active: dfCtrl.measureLength.active}\\\" ng-model=dfCtrl.measureLength.active> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a polygon on the map' | translate}}\\\" href ngeo-btn ngeo-measurearea class=\\\"btn btn-default ngeo-drawfeature-polygon\\\" ng-class=\\\"{active: dfCtrl.measureArea.active}\\\" ng-model=dfCtrl.measureArea.active> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a circle on the map' | translate}}\\\" href ngeo-btn ngeo-measureazimut class=\\\"btn btn-default ngeo-drawfeature-circle\\\" ng-class=\\\"{active: dfCtrl.measureAzimut.active}\\\" ng-model=dfCtrl.measureAzimut.active> <span class=\\\"gmf-icon gmf-icon-circle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a rectangle on the map' | translate}}\\\" href ngeo-btn ngeo-drawrectangle class=\\\"btn btn-default ngeo-drawfeature-rectangle\\\" ng-class=\\\"{active: dfCtrl.drawRectangle.active}\\\" ng-model=dfCtrl.drawRectangle.active> <span class=\\\"gmf-icon gmf-icon-rectangle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a text label on the map' | translate}}\\\" href ngeo-btn ngeo-drawtext class=\\\"btn btn-default ngeo-drawfeature-text\\\" ng-class=\\\"{active: dfCtrl.drawText.active}\\\" ng-model=dfCtrl.drawText.active> <span class=\\\"gmf-icon gmf-icon-text\\\"></span> </a> </ngeo-drawfeature> <div ng-switch=efCtrl.selectedFeature> <hr class=gmf-drawfeature-separator ng-show=\\\"efCtrl.getFeaturesArray().length > 0\\\"> <div ng-switch-when=null> <div ng-show=\\\"efCtrl.getFeaturesArray().length > 0\\\"> <div class=ngeo-drawfeature-actionbuttons> <button type=button data-toggle=dropdown aria-haspopup=true aria-expanded=false ngeo-exportfeatures ngeo-exportfeatures-features=efCtrl.features class=\\\"btn btn-link btn-sm\\\"> <span class=\\\"fa fa-mail-forward\\\"></span> {{'Export' | translate}} <span class=caret></span> </button> <button ng-click=efCtrl.clearFeatures() class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-trash\\\"></span> {{'Delete All' | translate}} </button> </div> <div class=gmf-eol></div> <div class=\\\"gmf-drawfeature-featurelist list-group list-group-sm\\\"> <button role=button class=list-group-item ng-repeat=\\\"feature in efCtrl.getFeaturesArray()\\\" ng-click=efCtrl.selectFeatureFromList(feature);> {{ feature.get(efCtrl.nameProperty) }} </button> </div> </div> </div> <div ng-switch-default> <button ng-click=\\\"efCtrl.selectedFeature = null;\\\" class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-arrow-left\\\"></span> {{'List' | translate}} </button> <div class=ngeo-drawfeature-actionbuttons> <button type=button data-toggle=dropdown aria-haspopup=true aria-expanded=false ngeo-exportfeatures ngeo-exportfeatures-features=efCtrl.selectedFeatures class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-mail-forward\\\"></span> {{'Export' | translate}} <span class=caret></span> </button> <button ng-click=efCtrl.removeFeature(efCtrl.selectedFeature); class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-trash\\\"></span> {{'Delete' | translate}} </button> </div> <div class=gmf-eol></div> <gmf-featurestyle gmf-featurestyle-feature=efCtrl.selectedFeature> </gmf-featurestyle> </div> </div> \";","module.exports = \"<div ng-if=\\\"fsCtrl.feature && fsCtrl.type\\\"> <div class=form-group> <input ng-model=fsCtrl.getSetName ng-model-options=\\\"{getterSetter: true}\\\" ng-attr-placeholder=\\\"{{'Name' | translate}}\\\" class=form-control /> </div> <div ng-if=\\\"fsCtrl.type !== 'Text'\\\" class=form-group> <input id=gmf-featurestyle-showlabel type=checkbox ng-model=fsCtrl.getSetShowLabel ng-model-options=\\\"{getterSetter: true}\\\"/> <label ng-switch=fsCtrl.type for=gmf-featurestyle-showlabel class=control-label> {{'Display label' | translate}} </label> </div> <div ng-if=\\\"fsCtrl.type !== 'Text'\\\" class=form-group> <input id=gmf-featurestyle-showmeasure type=checkbox ng-model=fsCtrl.getSetShowMeasure ng-model-options=\\\"{getterSetter: true}\\\"/> <label ng-switch=fsCtrl.type for=gmf-featurestyle-showmeasure class=control-label> <span ng-switch-when=Circle> {{'Display azimuth and radius' | translate}} </span> <span ng-switch-when=Polygon> {{'Display surface' | translate}} </span> <span ng-switch-when=Rectangle> {{'Display surface' | translate}} </span> <span ng-switch-when=LineString> {{'Display length' | translate}} </span> <span ng-switch-when=Point> {{'Display coordinates' | translate}} </span> </label> <em class=text-muted> ({{ fsCtrl.measure }}) </em> </div> </div> <div ng-if=\\\"fsCtrl.feature && fsCtrl.type\\\" class=form-horizontal> <div class=form-group> <div ngeo-colorpicker=\\\"\\\" ngeo-colorpicker-color=fsCtrl.color class=col-md-12> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Point'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Size' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=3 max=20 step=1 ng-model=fsCtrl.getSetSize ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Text'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Size' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=8 max=30 step=1 ng-model=fsCtrl.getSetSize ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Circle' || fsCtrl.type === 'LineString' || fsCtrl.type === 'Polygon' || fsCtrl.type === 'Rectangle'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Stroke' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=0.5 max=5 step=0.5 ng-model=fsCtrl.getSetStroke ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Circle' || fsCtrl.type === 'Polygon' || fsCtrl.type === 'Rectangle'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Opacity' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=0 max=1 step=0.05 ng-model=fsCtrl.getSetOpacity ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Text'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Angle' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=-180 max=180 step=22.5 ng-model=fsCtrl.getSetAngle ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> </div> \";","module.exports = \"<div class=ngeo-displaywindow ng-show=$ctrl.open ng-style=$ctrl.style> <div class=windowcontainer> <button type=button class=\\\"btn fa-close close\\\" ng-click=$ctrl.close()> </button> <div class=animation-container> <div class=slide-animation> <div class=\\\"header ui-draggable-handle\\\" ng-if=\\\"$ctrl.title !== null\\\"> <p class=title>{{ $ctrl.title }}</p> </div> <div class=details ng-if=$ctrl.content ng-bind-html=$ctrl.content> </div> <div class=details ng-if=\\\"$ctrl.url !== null\\\"> <iframe frameborder=0 type=text/html height=100% width=100% ng-src=\\\"{{ $ctrl.urlTrusted }}\\\"></iframe> </div> </div> </div> </div> </div> \";","module.exports = \"<ul class=gmf-theme-selector> <li ng-repeat=\\\"theme in $ctrl.themes\\\" ng-click=$ctrl.setTheme(theme) ng-class=\\\"{'gmf-theme-selector-active': $ctrl.gmfThemeManager.getThemeName() == theme.name}\\\"> <img class=gmf-thumb ng-src={{::theme.icon}} /> <span class=gmf-text>{{theme.name | translate}}</span> </li> </ul> \";","module.exports = \"<div class=gmf-search> <input type=text ng-attr-placeholder={{$ctrl.placeholder|translate}} class=form-control ng-model=$ctrl.inputValue ngeo-search=$ctrl.options ngeo-search-datasets=$ctrl.datasets ngeo-search-listeners=$ctrl.listeners> <span class=\\\"gmf-clear-button ng-hide\\\" ng-hide=\\\"!$ctrl.clearButton || $ctrl.inputValue == ''\\\" ng-click=$ctrl.onClearButton()> </span> </div> <span ng-if=$ctrl.colorChooser> <span ng-show=$ctrl.displayColorPicker ngeo-popover ngeo-popover-placement=bottom> <button class=\\\"gmf-color-button fa fa-tint\\\" ngeo-popover-anchor data-original-title=\\\"{{'Change the color of the search result'|translate}}\\\"></button> <div ngeo-popover-content> <div ngeo-colorpicker ngeo-colorpicker-color=$ctrl.color></div> </div> </span> </span> \";","module.exports = \"<table class=ngeo-colorpicker-palette> <tr ng-repeat=\\\"colors in ::ctrl.colors\\\"> <td ng-repeat=\\\"color in ::colors\\\" ng-click=ctrl.setColor(color) ng-class=\\\"{'ngeo-colorpicker-selected': color == ctrl.color}\\\"> <div ng-style=\\\"::{'background-color': color}\\\"></div> </td> </tr> </table> \";","module.exports = \"<div class=gmf-displayquerywindow ng-class=\\\"{'desktop': ctrl.desktop, 'mobile': !ctrl.desktop}\\\" ng-show=ctrl.open ngeo-swipe-up=\\\"ctrl.collapsed = false\\\" ngeo-swipe-down=\\\"ctrl.collapsed = true\\\" ngeo-swipe-disable-mouse ng-swipe-disable-mouse ng-swipe-left=ctrl.next() ng-swipe-right=ctrl.previous()> <button class=collapse-button type=button ng-show=::!ctrl.desktop ng-click=\\\"ctrl.collapsed = !ctrl.collapsed\\\" ng-class=\\\"[ctrl.collapsed ? 'collapse-button-up' : 'collapse-button-down']\\\"> </button> <div class=windowcontainer> <button type=button class=\\\"btn fa-close close\\\" ng-click=ctrl.close()> </button> <div class=animation-container ng-class=\\\"[ctrl.collapsed ? '' : 'animation-container-detailed', ctrl.isNext ? 'next' : 'previous']\\\"> <div ng-animate-swap=ctrl.animate class=\\\"slide-animation gmf-animatable\\\"> <div class=header> <p class=title>{{ctrl.source.label | translate}}</p> <p class=subtitle>{{ctrl.getFeatureValues()[ctrl.source.identifierAttributeField]}}</p> </div> <div class=details> <table> <tr ng-repeat=\\\"(key, value) in ctrl.getFeatureValues()\\\" ng-if=\\\"value !== undefined\\\"> <td class=details-key ng-bind-html=\\\"key | translate | ngeoTrustHtml\\\"></td> <td class=details-value ng-bind-html=\\\"value | ngeoTrustHtml\\\"></td> </tr> </table> </div> </div> </div> <div class=navigate> <div class=placeholder> <button type=button class=\\\"previous btn\\\" ng-disabled=ctrl.isFirst() ng-show=\\\"ctrl.getResultLength() > 1\\\" ng-click=ctrl.previous()> <span ng-show=::ctrl.desktop>{{'Prev.' | translate}}</span> </button> </div> <div class=results> <span ng-show=::!ctrl.desktop>{{'Result' | translate}}</span> <span>{{ctrl.currentResult + 1}}</span> <span>/</span> <span>{{ctrl.getResultLength()}}</span> <div ng-show=::ctrl.desktop class=dropup> <button type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span class=\\\"fa fa-filter\\\"></span> <span class=\\\"fa fa-caret-up\\\"></span> </button> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li> <a href=# ng-click=ctrl.setSelectedSource(null)> <i class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedSource === null}\\\"> </i> <span>{{'All layers' | translate}} ({{ctrl.ngeoQueryResult.total}})</span> </a> </li> <li role=separator class=divider> </li> <li ng-repeat-start=\\\"source in ctrl.ngeoQueryResult.sources | filter: ctrl.sourcesFilter\\\" ng-repeat-end ng-class=\\\"{'disabled': source.features.length <= 0}\\\"> <a href=# ng-click=ctrl.setSelectedSource(source)> <i class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedSource === source}\\\"> </i> <span>{{source.label | translate}} ({{source.features.length}})</span> </a> </li> </ul> </div> </div> <div class=placeholder> <button type=button class=\\\"next btn\\\" ng-disabled=ctrl.isLast() ng-show=\\\"ctrl.getResultLength() > 1\\\" ng-click=ctrl.next()> <span ng-show=::ctrl.desktop>{{'Next' | translate}}</span> </button> </div> </div> </div> </div> \";","module.exports = \"<div class=\\\"gmf-displayquerygrid panel\\\" ng-show=ctrl.active> <div class=close ng-click=ctrl.clear()> &times; </div> <ul class=\\\"nav nav-pills\\\" role=tablist> <li ng-repeat=\\\"gridSource in ctrl.getGridSources() track by gridSource.source.label\\\" role=presentation ng-class=\\\"{'active' : ctrl.isSelected(gridSource)}\\\" ng-click=ctrl.selectTab(gridSource)> <a href=#{{ctrl.escapeValue(gridSource.source.label)}} data-target=#{{ctrl.escapeValue(gridSource.source.label)}} aria-controls={{ctrl.escapeValue(gridSource.source.label)}} role=tab data-toggle=tab> <span ng-if=\\\"gridSource.source.tooManyResults !== true\\\"> {{gridSource.source.label | translate}} ({{gridSource.source.features.length}}) </span> <span ng-if=\\\"gridSource.source.tooManyResults === true\\\"> {{gridSource.source.label | translate}} ({{gridSource.source.totalFeatureCount}}*) </span> </a> </li> </ul> <div class=tab-content> <div ng-repeat=\\\"gridSource in ctrl.getGridSources() track by gridSource.source.label\\\" role=tabpanel class=tab-pane ng-class=\\\"{'active' : ctrl.isSelected(gridSource)}\\\" id={{ctrl.escapeValue(gridSource.source.label)}}> <ngeo-grid ngeo-grid-configuration=gridSource.configuration ng-if=\\\"gridSource.source.tooManyResults !== true\\\"> </ngeo-grid> <div ng-if=\\\"gridSource.source.tooManyResults === true\\\"> <div class=\\\"gmf-displayquerygrid-message alert alert-warning\\\"> <p><span translate>The results can not be displayed because the maximum number has been reached</span> ({{gridSource.source.limit}}).</p> <p translate>Please refine your query.</p> </div> </div> </div> </div> <div class=navbar ng-show=\\\"!ctrl.pending && ctrl.getActiveGridSource() && ctrl.getActiveGridSource().configuration !== null\\\"> <ul class=\\\"nav navbar-nav navbar-right\\\"> <li class=ng-hide ng-show=ctrl.isOneSelected()> <p class=\\\"navbar-text ng-binding\\\"> {{ctrl.getSelectedRowCount()}} <span translate>selected element(s)</span> </p> </li> <li ng-show=ctrl.isOneSelected() class=ng-hide> <button class=\\\"btn btn-link btn-xs\\\" title=\\\"{{'Zoom to selection' | translate}}\\\" ng-click=ctrl.zoomToSelection()> <i class=\\\"fa fa-search-plus\\\"></i> <span translate>Zoom to</span> </button> </li> <li ng-show=ctrl.isOneSelected() class=ng-hide> <button class=\\\"btn btn-link btn-xs\\\" title=\\\"{{'Export selection as CSV' | translate}}\\\" ng-click=ctrl.downloadCsv()> <i class=\\\"fa fa-download\\\"></i> <span translate>Export as CSV</span> </button> </li> <li class=\\\"dropdown navbar-link dropup\\\"> <button type=button class=\\\"dropup btn btn-default btn-xs\\\" data-toggle=dropdown aria-haspopup=true aria-expanded=false> <span translate>Select</span> <span class=caret></span> </button> <ul class=dropdown-menu aria-labelledby=dLabel> <li> <a href=\\\"\\\" ng-click=ctrl.selectAll() translate>All</a> </li> <li> <a href=\\\"\\\" ng-click=ctrl.unselectAll() translate>None</a> </li> <li> <a href=\\\"\\\" ng-click=ctrl.invertSelection() translate>Reverse selection</a> </li> </ul> </li> </ul> </div> <div ng-show=ctrl.pending class=gmf-displayquerygrid-pending> <span class=\\\"fa fa-spinner fa-spin\\\"></span> </div> </div> \";","module.exports = \"<div class=ngeo-grid-table-container> <table float-thead=ctrl.floatTheadConfig ng-model=ctrl.configuration.data class=\\\"table table-bordered table-striped table-hover\\\"> <thead class=table-header> <tr> <th ng-repeat=\\\"columnDefs in ctrl.configuration.columnDefs\\\" ng-click=ctrl.sort(columnDefs.name) ng-bind-html=\\\"columnDefs.name | ngeoTrustHtml | translate\\\"> <i ng-show=\\\"ctrl.sortedBy !== columnDefs.name\\\" class=\\\"fa fa-fw\\\"></i> <i ng-show=\\\"ctrl.sortedBy === columnDefs.name && ctrl.sortAscending === true\\\" class=\\\"fa fa-caret-up\\\"></i> <i ng-show=\\\"ctrl.sortedBy === columnDefs.name && ctrl.sortAscending === false\\\" class=\\\"fa fa-caret-down\\\"></i> </th> </tr> </thead> <tbody> <tr ng-repeat=\\\"attributes in ctrl.configuration.data\\\" ng-class=\\\"['row-' + ctrl.configuration.getRowUid(attributes), ctrl.configuration.isRowSelected(attributes) ? 'ngeo-grid-active': '']\\\" ng-click=\\\"ctrl.clickRow(attributes, $event)\\\" ng-mousedown=ctrl.preventTextSelection($event)> <td ng-repeat=\\\"columnDefs in ctrl.configuration.columnDefs\\\" ng-bind-html=\\\"attributes[columnDefs.name] | ngeoTrustHtml\\\"></td> </tr> </tbody> </table> </div> \";","module.exports = \"<div class=\\\"btn-group dropup\\\"> <a type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span class=gmf-mouseposition-control-target></span> <span class=caret></span> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li class=dropdown-header translate>Coordinate systems</li> <li ng-repeat=\\\"projitem in ::ctrl.projections\\\"> <a href ng-click=ctrl.setProjection(projitem)> <span class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.projection == projitem}\\\"></span> {{::projitem.label}} </a> </li> </ul> </div> \";","module.exports = \"<div ngeo-map=ctrl.map ngeo-map-manage-resize=ctrl.manageResize ngeo-map-resize-transition=ctrl.resizeTransition> </div> \";","module.exports = \"<div class=\\\"btn-group btn-block\\\" ng-class=\\\"::{'dropup': scaleselectorCtrl.options.dropup}\\\"> <button type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span ng-bind-html=\\\"scaleselectorCtrl.currentScale | ngeoScalify | ngeoTrustHtml\\\"></span>&nbsp;<i class=caret></i> </button> <ul class=\\\"dropdown-menu btn-block\\\" role=menu> <li ng-repeat=\\\"zoomLevel in ::scaleselectorCtrl.zoomLevels\\\"> <a href ng-click=scaleselectorCtrl.changeZoom(zoomLevel) ng-bind-html=\\\"scaleselectorCtrl.getScale(zoomLevel) | ngeoScalify | ngeoTrustHtml\\\"> </a> </li> </ul> </div> \";","module.exports = \"<div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=Close><span aria-hidden=true>&times;</span></button> <h4 class=modal-title translate>Share this map</h4> </div> <div class=modal-body> <form role=form name=gmfShareForm novalidate> <div class=form-group> <label for=gmfShareInputShortLink translate>Permalink</label> <input type=text class=form-control id=gmfShareInputShortLink onclick=this.select() ng-model=$ctrl.shortLink readonly=True> <p class=help-block translate>Copy this link to share it.</p> <p class=text-danger ng-if=$ctrl.showLengthWarning> <span class=\\\"fa fa-exclamation-triangle\\\"></span> {{'You have a lot of drawn elements in this map. The above link may not be correctly supported by some browsers.' | translate}} </p> <p class=text-danger ng-if=$ctrl.errorOnGetShortUrl> <span class=\\\"fa fa-exclamation\\\"></span> {{'Error, cannot get the shortened URL.' | translate}} </p> </div> <hr> <div class=gmf-share-email ng-if=::$ctrl.enableEmail> <div class=form-group> <label for=gmfShareInputEmail translate>Send this link to</label> <input type=email class=form-control name=inputEmail id=gmfShareInputEmail placeholder=E-mail ng-model=$ctrl.email required> <span ng-show=\\\"gmfShareForm.$submitted || gmfShareForm.inputEmail.$touched\\\"> <span class=text-danger ng-show=\\\"gmfShareForm.inputEmail.$error.email || gmfShareForm.inputEmail.$error.required\\\"> <i class=\\\"fa fa-exclamation-triangle\\\" aria-hidden=true></i> {{'Invalid email.' | translate}}</span> </span> </div> <div class=form-group> <textarea class=form-control ng-attr-placeholder=\\\"{{'Message (optional)' | translate }}\\\" ng-model=$ctrl.message></textarea> </div> <span class=text-success ng-if=$ctrl.successfullySent> <i class=\\\"fa fa-check\\\" aria-hidden=true></i> {{ 'Link successfully sent.' | translate }} </span> <span class=text-danger ng-if=$ctrl.errorOnsend> <i class=\\\"fa fa-exclamation\\\" aria-hidden=true></i> {{ 'Error, the link has not been sent.' | translate }} </span> </div> <div class=text-right> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal translate>Close</button> <button ng-if=::$ctrl.enableEmail type=submit class=\\\"btn btn-default btn-primary\\\" ng-click=$ctrl.sendShortUrl() ng-disabled=!gmfShareForm.$valid translate>Send </button> </div> </form> </div> \";","module.exports = \"<div class=gmf-time-slider> <div ui-slider=sliderCtrl.sliderOptions ng-model=sliderCtrl.dates> <span class=\\\"ui-slider-handle ui-state-default ui-corner-all\\\" tabindex=0 data-toggle=tooltip title=\\\"\\\"> </span> </div> <div class=gmf-time-slider-displayed-dates> <div class=gmf-time-slider-start-date ng-if=\\\"::sliderCtrl.time.mode === 'range'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates[0])}}</span> </div> <div class=gmf-time-slider-start-date ng-if=\\\"::sliderCtrl.time.mode === 'value'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates)}}</span> </div> <div class=gmf-time-slider-end-date ng-if=\\\"::sliderCtrl.time.mode === 'range'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates[1])}}</span> </div> </div> </div> \";","module.exports = \"<div class=gmf-layertree-root-tools ng-if=layertreeCtrl.isRoot> <a href ng-if=\\\"gmfLayertreeCtrl.nodesCount() > 0\\\" ng-click=gmfLayertreeCtrl.removeAllNodes()> <span class=\\\"fa fa-trash\\\"></span> {{'Clear all' | translate}} </a> </div> <div ng-if=::!layertreeCtrl.isRoot id=gmf-layertree-node-{{::layertreeCtrl.uid}} ng-class=\\\"[layertreeCtrl.node.children ? 'gmf-layertree-group' : 'gmf-layertree-leaf', 'gmf-layertree-depth-' + layertreeCtrl.depth, gmfLayertreeCtrl.getResolutionStyle(layertreeCtrl.node), gmfLayertreeCtrl.getNodeState(layertreeCtrl)]\\\"> <div class=ngeo-sortable-handle ng-show=\\\"layertreeCtrl.depth === 1 && layertreeCtrl.parent.children.length > 1\\\"> <i class=\\\"gmf-layertree-sortable-handle-icon fa fa-ellipsis-v\\\"></i> </div> <a ng-if=::layertreeCtrl.node.children data-toggle=collapse href=#gmf-layertree-layer-group-{{::layertreeCtrl.uid}} aria-expanded={{::layertreeCtrl.node.metadata.isExpanded}} class=\\\"fa gmf-layertree-expand-node fa-fw\\\"> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) ng-if=::!layertreeCtrl.node.children ng-class=\\\"::{'gmf-layertree-no-layer-icon' : !gmfLayertreeCtrl.getLegendIconURL(layertreeCtrl)}\\\" class=gmf-layertree-layer-icon> <img ng-if=\\\"::(legendIconUrl=gmfLayertreeCtrl.getLegendIconURL(layertreeCtrl))\\\" ng-src={{::legendIconUrl}}>  </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) ng-if=::layertreeCtrl.node.children ng-class=\\\"['fa fa-fw', layertreeCtrl.node.children && !layertreeCtrl.layer.loading ? 'gmf-layertree-state' : 'fa-refresh fa-spin']\\\"> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) class=gmf-layertree-name data-toggle=tooltip data-placement=top title=\\\"{{layertreeCtrl.node.name | translate}}\\\"> {{layertreeCtrl.node.name | translate}} <i class=\\\"gmf-icon gmf-icon-search-go gmf-layertree-zoom\\\" data-toggle=tooltip data-placement=bottom data-title=\\\"{{'Not visible at current scale. Click to zoom.'|translate}}\\\" ng-click=\\\"::gmfLayertreeCtrl.zoomToResolution(layertreeCtrl); $event.preventDefault(); $event.stopPropagation();\\\" ng-if=\\\"gmfLayertreeCtrl.getNodeState(layertreeCtrl) == 'on'\\\"> </i> <span ngeo-popover ngeo-popover-dismiss=.content ng-if=\\\"gmfLayertreeCtrl.getNodeState(layertreeCtrl) !== 'off' && layertreeCtrl.node.time && layertreeCtrl.node.time.mode !== 'disabled'\\\"> <span ngeo-popover-anchor class=\\\"fa fa-clock-o\\\" ng-click=\\\"$event.preventDefault(); $event.stopPropagation()\\\"> </span> <div ngeo-popover-content> <ngeo-date-picker ng-if=\\\"::layertreeCtrl.node.time.widget === 'datepicker'\\\" time=layertreeCtrl.node.time on-date-selected=\\\"gmfLayertreeCtrl.updateWMSTimeLayerState(layertreeCtrl, time)\\\"> </ngeo-date-picker> <gmf-time-slider ng-if=\\\"::layertreeCtrl.node.time.widget === 'slider'\\\" gmf-time-slider-time=layertreeCtrl.node.time gmf-time-slider-on-date-selected=\\\"gmfLayertreeCtrl.updateWMSTimeLayerState(layertreeCtrl, time)\\\"> </gmf-time-slider> </div> </span> <span class=\\\"fa fa-pencil\\\" data-toggle=tooltip data-placement=right title=\\\"{{'Currently editing this layer'|translate}}\\\" ng-if=layertreeCtrl.properties.editing> </span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-if=\\\"::layertreeCtrl.depth == 1\\\" ng-click=gmfLayertreeCtrl.removeNode(layertreeCtrl.node)> <span class=\\\"fa fa-trash\\\"></span> </a> <a class=gmf-layertree-node-menu-btn href=\\\"\\\" ng-if=::gmfLayertreeCtrl.supportsCustomization(layertreeCtrl) ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-menu-' + layertreeCtrl.uid)\\\"> <span class=\\\"fa fa-cog\\\"></span> </a> <span ngeo-popover ng-if=\\\"::(layertreeCtrl.depth === 1 && !layertreeCtrl.node.mixed) || (layertreeCtrl.depth > 1 && layertreeCtrl.parent.node.mixed && !layertreeCtrl.node.children) || (gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend) || layertreeCtrl.getDataSource().filtrable\\\" ngeo-popover-dismiss=.content> <span ngeo-popover-anchor class=\\\"extra-actions fa fa-cog\\\"> </span> <div ngeo-popover-content> <ul> <li ng-if=\\\"::(layertreeCtrl.depth === 1 && !layertreeCtrl.node.mixed) || (layertreeCtrl.depth > 1 && layertreeCtrl.parent.node.mixed)\\\"> <i class=\\\"fa fa-tint fa-fw\\\"></i> <span for=layer-opactity>{{'Opacity'|translate}}</span> <input class=input-action name=layer-opactity type=range min=0 max=1 step=0.01 ng-model=layertreeCtrl.layer.opacity /> </li> <li ng-if=\\\"::gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend'); popoverCtrl.dismissPopover()\\\" data-toggle=collapse href=\\\"\\\"> {{'Show/hide legend'|translate}} </a> </li> <li ng-if=\\\"layertreeCtrl.getDataSource() && layertreeCtrl.getDataSource().filtrable\\\"> <i class=\\\"fa fa-filter fa-fw\\\"></i> <a ng-click=gmfLayertreeCtrl.toggleFiltrableDataSource(layertreeCtrl.getDataSource()) href=\\\"\\\"> {{'Filter'|translate}} </a> </li> </ul> </div> </span> <span class=gmf-layertree-metadata ng-if=::layertreeCtrl.node.metadata.metadataUrl> <span ng-if=\\\"::gmfLayertreeCtrl.openLinksInNewWindow === true\\\"> <a title=\\\"{{'More informations'|translate}}\\\" href={{::layertreeCtrl.node.metadata.metadataUrl}} target=blank_> </a> </span> <span ng-if=\\\"::gmfLayertreeCtrl.openLinksInNewWindow !== true\\\"> <a title=\\\"{{'More informations'|translate}}\\\" href=\\\"\\\" ng-click=gmfLayertreeCtrl.displayMetadata(layertreeCtrl)> </a> </span> </span> </span> </div> <div class=gmf-layertree-node-menu id=gmf-layertree-node-menu-{{::layertreeCtrl.uid}} style=display:none ng-if=::gmfLayertreeCtrl.supportsCustomization(layertreeCtrl)> <div ng-if=::gmfLayertreeCtrl.supportsOpacityChange(layertreeCtrl)> <i class=\\\"fa fa-tint fa-fw\\\"></i> <span for=layer-opactity>{{'Opacity'|translate}}</span> <input class=input-action name=layer-opactity type=range min=0 max=1 step=0.01 ng-model=layertreeCtrl.layer.opacity /> </div> <a class=gmf-layertree-node-menu-togglelegend ng-if=::gmfLayertreeCtrl.supportsLegend(layertreeCtrl) data-toggle=collapse ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\" href=\\\"\\\"> <span class=\\\"fa fa-th-list\\\"> </span> {{'Show/hide legend'|translate}} </a> </div> <div ng-if=\\\"::!layertreeCtrl.isRoot && gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend\\\" id=gmf-layertree-node-{{::layertreeCtrl.uid}}-legend class=\\\"collapse gmf-layertree-legend\\\" ng-class=\\\"::[layertreeCtrl.node.metadata.isLegendExpanded ? 'in' : '']\\\"> <a title=\\\"{{'Hide legend'|translate}}\\\" data-toggle=collapse ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\" href=\\\"\\\"> {{'Hide legend'|translate}} </a> <div ng-if=\\\"gmfLayertreeCtrl.isNodeLegendVisible('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\"> <div ng-repeat=\\\"(title, url) in ::gmfLayertreeCtrl.getLegendsObject(layertreeCtrl)\\\"> <p ng-if=\\\"::gmfLayertreeCtrl.getNumberOfLegendsObject(layertreeCtrl) > 1\\\">{{title|translate}}</p> <img ng-src={{url}}> </div> </div> </div> <ul class=gmf-layertree-root-external-datasources ng-if=\\\"layertreeCtrl.isRoot && (gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmsGroups.length || gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmtsGroups.length || gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup.dataSources.length)\\\"> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-repeat=\\\"wmtsGroup in gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmtsGroups\\\" group=wmtsGroup> </gmf-datasourcegrouptree> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-repeat=\\\"wmsGroup in gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmsGroups\\\" group=wmsGroup> </gmf-datasourcegrouptree> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-if=gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup.dataSources.length group=gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup> </gmf-datasourcegrouptree> </ul> <ul id=gmf-layertree-layer-group-{{::layertreeCtrl.uid}} ng-if=::layertreeCtrl.node.children ng-class=\\\"{collapse: !layertreeCtrl.isRoot, in : layertreeCtrl.node.metadata.isExpanded}\\\" ngeo-sortable=\\\"::layertreeCtrl.isRoot && layertreeCtrl.node.children\\\" ngeo-sortable-options=\\\"{handleClassName: 'ngeo-sortable-handle', draggerClassName: 'gmf-layertree-dragger', placeholderClassName : 'gmf-layertree-curr-drag-item'}\\\" ngeo-sortable-callback=::gmfLayertreeCtrl.afterReorder ngeo-sortable-callback-ctx=::gmfLayertreeCtrl> <li class=gmf-layertree-node ng-repeat=\\\"node in layertreeCtrl.node.children\\\" ng-class=\\\"'gmf-layertree-depth-' + layertreeCtrl.depth\\\" ngeo-layertree=node ngeo-layertree-notroot ngeo-layertree-map=layertreeCtrl.map ngeo-layertree-nodelayerexpr=layertreeCtrl.nodelayerExpr ngeo-layertree-listenersexpr=layertreeCtrl.listenersExpr> </li> </ul> \";","module.exports = \"<span ng-if=::!layertreeCtrl.isRoot>{{::layertreeCtrl.node.name}}</span> <input type=checkbox ng-if=\\\"::layertreeCtrl.node && !layertreeCtrl.node.children\\\" ng-model=layertreeCtrl.getSetActive ng-model-options=\\\"{getterSetter: true}\\\"/> <ul ng-if=::layertreeCtrl.node.children> <li ng-repeat=\\\"node in ::layertreeCtrl.node.children\\\" ngeo-layertree=::node ngeo-layertree-notroot ngeo-layertree-map=layertreeCtrl.map ngeo-layertree-nodelayerexpr=layertreeCtrl.nodelayerExpr ngeo-layertree-listenersexpr=layertreeCtrl.listenersExpr> </li> </ul> \";","module.exports = \"<div class=\\\"gmf-layertree-group gmf-layertree-depth-1 {{$ctrl.group.visibilityState}}\\\"> <a data-toggle=collapse href=#gmf-layertree-layer-group-{{::$ctrl.getGroupUid()}} aria-expanded=true class=\\\"fa gmf-layertree-expand-node fa-fw\\\"> </a> <a class=\\\"fa fa-fw gmf-layertree-state\\\" href ng-click=$ctrl.toggle()> </a> <a class=gmf-layertree-name href ng-click=$ctrl.toggle()> <span>{{$ctrl.group.title | translate}}</span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-click=$ctrl.remove()> <span class=\\\"fa fa-trash\\\"></span> </a> </span> </div> <ul id=gmf-layertree-layer-group-{{::$ctrl.getGroupUid()}} class=\\\"collapse in\\\"> <li class=\\\"gmf-layertree-node gmf-layertree-depth-2\\\" ng-class=\\\"[dataSource.visible ? 'on' : 'off']\\\" ng-repeat=\\\"dataSource in $ctrl.group.dataSources\\\"> <div class=gmf-layertree-leaf> <a href ng-click=$ctrl.toggleDataSource(dataSource) class=\\\"gmf-layertree-layer-icon gmf-layertree-no-layer-icon\\\"> </a> <a class=gmf-layertree-name href ng-click=$ctrl.toggleDataSource(dataSource)> <span>{{dataSource.name | translate}}</span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-click=$ctrl.removeDataSource(dataSource)> <span class=\\\"fa fa-trash\\\"></span> </a> </span> </div> </li> </ul> \";","module.exports = \"<div class=form-group ng-switch=$ctrl.filtrableDataSources.length> <span ng-switch-when=0 translate>No filtrable layer available!</span> <select class=form-control ng-disabled=$ctrl.aRuleIsActive ng-switch-default ng-model=$ctrl.gmfDataSourceBeingFiltered.dataSource ng-options=\\\"dataSource.name | translate for dataSource in $ctrl.filtrableDataSources\\\"> <option value=\\\"\\\" translate>-- Layer to filter --</option> </select> <div ng-if=\\\"$ctrl.customRules && $ctrl.directedRules && $ctrl.readyDataSource\\\"> <hr class=gmf-filterselector-separator /> <div class=\\\"dropdown gmf-filterselector-savedfilters\\\"> <a class=\\\"btn btn-link dropdown-toggle ngeo-filter-condition-button\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive || $ctrl.gmfSavedFilters.currentDataSourceItems.length === 0}\\\" type=button data-toggle=dropdown ng-disabled=\\\"$ctrl.aRuleIsActive || $ctrl.gmfSavedFilters.currentDataSourceItems.length === 0\\\"> <span translate>Saved</span> <span class=caret></span> </a> <ul class=dropdown-menu> <li ng-repeat=\\\"item in $ctrl.gmfSavedFilters.currentDataSourceItems\\\"> <a href ng-click=$ctrl.saveFilterLoadItem(item)> <span>{{::item.name}}</span> </a> </li> <li role=separator class=divider></li> <li> <a href ng-click=$ctrl.saveFilterManage()> <span translate>Manage saved filters</span> </a> </li> </ul> </div> <ngeo-filter a-rule-is-active=$ctrl.aRuleIsActive custom-rules=$ctrl.customRules datasource=$ctrl.readyDataSource directed-rules=$ctrl.directedRules feature-overlay=$ctrl.featureOverlay map=$ctrl.map tool-group=$ctrl.toolGroup> </ngeo-filter> <div> <a class=\\\"btn btn-link gmf-filterselector-savebtn\\\" type=button data-toggle=dropdown ng-click=\\\"!$ctrl.aRuleIsActive && $ctrl.saveFilterShowModal()\\\" ng-disabled=$ctrl.aRuleIsActive> <span class=\\\"fa fa-save\\\"></span> <span translate>Save</span> </a> </div> </div> <ngeo-modal ng-model=$ctrl.saveFilterSaveModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title>{{'Save filter' | translate}}</h4> </div> <div class=modal-body> <p class=gmf-filterselector-savefilter-desc translate> You can save the filter that you created to re-load it later. </p> <input type=text class=form-control name=name ng-model=$ctrl.saveFilterName placeholder=\\\"{{'Filter name' | translate}}\\\"/> </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'Cancel' | translate}}</button> <button type=button ng-click=$ctrl.saveFilterSave() ng-disabled=\\\"$ctrl.saveFilterName === ''\\\" class=\\\"btn btn-primary\\\">{{'Save' | translate}}</button> </div> </ngeo-modal> <ngeo-modal ng-model=$ctrl.saveFilterManageModalShown> <div class=gmf-filterselector-managefilter-modal> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title>{{'Manage filters' | translate}}</h4> </div> <div class=modal-body> <ul> <li ng-repeat=\\\"item in $ctrl.gmfSavedFilters.currentDataSourceItems\\\"> <span>{{::item.name}}</span> <a href ng-click=$ctrl.saveFilterRemoveItem(item)> {{ 'Delete' | translate }} </a> <div class=gmf-eol></div> </li> </ul> </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'Close' | translate}}</button> </div> </div> </ngeo-modal> </div> \";","module.exports = \"<div class=dropdown> <a class=\\\"btn btn-link dropdown-toggle ngeo-filter-condition-button\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive}\\\" type=button data-toggle=dropdown ng-disabled=$ctrl.aRuleIsActive> <span class=\\\"fa fa-cog\\\"></span> <span class=caret></span> </a> <ul class=dropdown-menu> <li class=ngeo-filter-condition-criteria-header translate>Criteria taken into account</li> <li ng-repeat=\\\"condition in ::$ctrl.conditions\\\"> <a href ng-click=$ctrl.setCondition(condition)> <span ng-class=\\\"{'ngeo-filter-condition-criteria-active': condition.value == $ctrl.datasource.filterCondition}\\\" class=\\\"fa fa-check ngeo-filter-condition-criteria\\\"> </span> <span>{{::condition.text | translate}}</span> </a> </li> </ul> </div> <ngeo-rule ng-repeat=\\\"rule in $ctrl.directedRules\\\" feature-overlay=::$ctrl.featureOverlay class=ngeo-filter-rule-directed map=$ctrl.map rule=rule tool-group=$ctrl.toolGroup> </ngeo-rule> <hr class=ngeo-filter-separator-rules /> <div ng-repeat=\\\"rule in $ctrl.customRules\\\"> <a class=\\\"btn btn-xs btn-link ngeo-filter-rule-custom-rm-btn\\\" ng-click=\\\"!$ctrl.aRuleIsActive && $ctrl.removeCustomRule(rule)\\\" ng-disabled=$ctrl.aRuleIsActive href> <span class=\\\"fa fa-remove\\\"></span> </a> <ngeo-rule feature-overlay=::$ctrl.featureOverlay class=ngeo-filter-rule-custom map=$ctrl.map rule=rule tool-group=$ctrl.toolGroup> </ngeo-rule> </div> <div class=dropdown> <a class=\\\"btn btn-link dropdown-toggle\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive}\\\" type=button data-toggle=dropdown ng-disabled=$ctrl.aRuleIsActive> <span translate>+ Add a new criteria</span> <span class=caret></span> </a> <ul class=dropdown-menu> <li ng-repeat=\\\"attribute in ::$ctrl.geometryAttributes\\\"> <a href ng-click=$ctrl.createAndAddCustomRule(attribute)> <span translate>Spatial filter</span> </a> </li> <li role=presentation class=divider></li> <li ng-repeat=\\\"attribute in ::$ctrl.otherAttributes\\\"> <a href ng-click=$ctrl.createAndAddCustomRule(attribute)> <span>{{::attribute.name | translate}}</span> </a> </li> </ul> </div> <hr class=ngeo-filter-separator-criteria /> <a class=\\\"btn btn-link\\\" type=button ng-click=$ctrl.apply() ng-disabled=\\\"$ctrl.hasARule() === false || $ctrl.datasource.visible === false\\\"> <span class=\\\"fa fa-check\\\"></span> <span translate>Apply filter</span> </a> <a class=\\\"btn btn-link\\\" type=button ng-click=$ctrl.getData() ng-disabled=\\\"$ctrl.hasARule() === false || $ctrl.datasource.visible === false\\\"> <span class=\\\"fa fa-chevron-right\\\"></span> <span translate>Get data</span> </a> \";","module.exports = \"<div class=dropdown ng-class=\\\"{open: $ctrl.rule.active}\\\"> <a class=\\\"btn btn-default btn-sm dropdown-toggle\\\" type=button ng-click=$ctrl.toggle()> <span>{{ ::$ctrl.clone.name | translate }}</span> <span class=caret></span> </a> <div class=\\\"dropdown-menu form-group\\\"> <select class=\\\"form-control input-sm ngeo-rule-operators-list\\\" ng-disabled=$ctrl.drawActive ng-if=::$ctrl.clone.operators ng-model=$ctrl.clone.operator ng-options=\\\"$ctrl.operators[operator] | translate for operator in ::$ctrl.clone.operators track by operator\\\"> </select> <div ng-switch=::$ctrl.clone.type> <div class=\\\"ngeo-rule-type-date form-group\\\" ng-if=$ctrl.rule.active ng-switch-when=date|datetime ng-switch-when-separator=|> <div ng-switch=$ctrl.clone.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <ngeo-date-picker time=$ctrl.timeRangeMode on-date-selected=$ctrl.onDateRangeSelected(time)> </ngeo-date-picker> </div> <div ng-switch-default> <ngeo-date-picker time=$ctrl.timeValueMode on-date-selected=$ctrl.onDateSelected(time)> </ngeo-date-picker> </div> </div> </div> <div class=\\\"ngeo-rule-type-geometry form-group\\\" ng-switch-when=geometry> <div ng-switch=$ctrl.geomType> <span class=\\\"gmf-icon gmf-icon-point\\\" ng-switch-when=Point> </span> <span class=\\\"gmf-icon gmf-icon-line\\\" ng-switch-when=LineString> </span> <span class=\\\"gmf-icon gmf-icon-polygon\\\" ng-switch-when=Polygon> </span> <span class=\\\"gmf-icon gmf-icon-circle\\\" ng-switch-when=Circle> </span> <span class=\\\"gmf-icon gmf-icon-rectangle\\\" ng-switch-when=Rectangle> </span> </div> <ngeo-drawfeature ngeo-drawfeature-active=$ctrl.drawActive ngeo-drawfeature-features=$ctrl.drawnFeatures ngeo-drawfeature-map=$ctrl.map> <div ngeo-btn-group class=btn-group> <a data-toggle=tooltip title=\\\"{{'Draw a point on the map' | translate}}\\\" href ngeo-btn ngeo-drawpoint class=\\\"btn btn-sm btn-default ngeo-drawfeature-point\\\" ng-show=\\\"['intersects', 'within'].indexOf($ctrl.clone.operator) !== -1\\\" ng-class=\\\"{active: dfCtrl.drawPoint.active}\\\" ng-model=dfCtrl.drawPoint.active> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a line on the map' | translate}}\\\" href ngeo-btn ngeo-measurelength class=\\\"btn btn-sm btn-default ngeo-drawfeature-linestring\\\" ng-show=\\\"['intersects', 'within'].indexOf($ctrl.clone.operator) !== -1\\\" ng-class=\\\"{active: dfCtrl.measureLength.active}\\\" ng-model=dfCtrl.measureLength.active> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a polygon on the map' | translate}}\\\" href ngeo-btn ngeo-measurearea class=\\\"btn btn-sm btn-default ngeo-drawfeature-polygon\\\" ng-class=\\\"{active: dfCtrl.measureArea.active}\\\" ng-model=dfCtrl.measureArea.active> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a circle on the map' | translate}}\\\" href ngeo-btn ngeo-measureazimut class=\\\"btn btn-sm btn-default ngeo-drawfeature-circle\\\" ng-class=\\\"{active: dfCtrl.measureAzimut.active}\\\" ng-model=dfCtrl.measureAzimut.active> <span class=\\\"gmf-icon gmf-icon-circle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a rectangle on the map' | translate}}\\\" href ngeo-btn ngeo-drawrectangle class=\\\"btn btn-sm btn-default ngeo-drawfeature-rectangle\\\" ng-class=\\\"{active: dfCtrl.drawRectangle.active}\\\" ng-model=dfCtrl.drawRectangle.active> <span class=\\\"gmf-icon gmf-icon-rectangle\\\"></span> </a> </div> <div class=ngeo-rule-type-geometry-instructions ng-if=$ctrl.drawActive> <span ng-if=dfCtrl.drawPoint.active> {{ 'Draw a point on the map.' | translate }} </span> <span ng-if=dfCtrl.measureLength.active> {{ 'Draw a line string on the map.' | translate }} </span> <span ng-if=dfCtrl.measureArea.active> {{ 'Draw a polygon on the map.' | translate }} </span> <span ng-if=dfCtrl.measureAzimut.active> {{ 'Draw a circle on the map.' | translate }} </span> <span ng-if=dfCtrl.drawRectangle.active> {{ 'Draw a rectangle on the map.' | translate }} </span> </div> </ngeo-drawfeature> </div> <div class=\\\"checkbox ngeo-rule-type-select\\\" ng-switch-when=select> <a ng-click=$ctrl.selectAllChoices() href>{{ All | translate}} </a> <label class=\\\"form-group ol-unselectable\\\" ng-repeat=\\\"choice in ::$ctrl.clone.choices\\\"> <input ng-checked=\\\"$ctrl.clone.getExpression() && $ctrl.clone.getExpression().split(',').indexOf(choice) > -1\\\" ng-click=$ctrl.toggleChoiceSelection(choice) type=checkbox value=choice /> <span>{{ choice | translate }}</span> </label> </div> <div class=\\\"form-group ngeo-rule-type-text\\\" ng-switch-default> <div ng-switch=$ctrl.clone.operator> <div ng-switch-when=..> <input type=number class=\\\"form-control input-sm\\\" ng-model=$ctrl.clone.lowerBoundary /> <input type=number class=\\\"form-control input-sm\\\" ng-model=$ctrl.clone.upperBoundary /> </div> <div ng-switch-default> <input type=number class=\\\"form-control input-sm\\\" ng-if=\\\"$ctrl.clone.type === 'number'\\\" ng-model=$ctrl.clone.expression /> <input type=text class=\\\"form-control input-sm\\\" ng-if=\\\"$ctrl.clone.type !== 'number'\\\" ng-model=$ctrl.clone.expression /> </div> </div> </div> <div class=ngeo-rule-btns> <button class=\\\"btn btn-xs btn-default\\\" ng-click=$ctrl.apply() type=button>{{'Apply' | translate}}</button> <button class=\\\"btn btn-xs btn-default\\\" ng-click=$ctrl.cancel() type=button>{{'Cancel' | translate}}</button> </div> </div> </div> </div> <div class=ngeo-rule-value ng-if=\\\"$ctrl.rule.value !== null\\\"> <a class=\\\"btn btn-xs btn-link\\\" ng-click=\\\"!$ctrl.rule.active && $ctrl.reset()\\\" ng-disabled=$ctrl.rule.active href> <span class=\\\"fa fa-remove\\\"></span> </a> <div ng-switch=::$ctrl.rule.type> <div ng-switch-when=date|datetime ng-switch-when-separator=|> <div ng-switch=$ctrl.rule.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <span translate>From </span> <span>{{ $ctrl.timeToDate($ctrl.rule.lowerBoundary) }}</span> <span translate> to </span> <span>{{ $ctrl.timeToDate($ctrl.rule.upperBoundary) }}</span> </div> <div ng-switch-default> <span>{{ $ctrl.operatorsShortFormat[$ctrl.rule.operator] }}</span> <span>{{ $ctrl.timeToDate($ctrl.rule.getExpression()) }}</span> </div> </div> </div> <div ng-switch-when=geometry> <span>{{ $ctrl.operators[$ctrl.rule.operator] }}</span> <span ng-switch=$ctrl.getRuleGeometryType()> <span class=\\\"gmf-icon gmf-icon-point\\\" ng-switch-when=Point> </span> <span class=\\\"gmf-icon gmf-icon-line\\\" ng-switch-when=LineString> </span> <span class=\\\"gmf-icon gmf-icon-polygon\\\" ng-switch-when=Polygon> </span> <span class=\\\"gmf-icon gmf-icon-circle\\\" ng-switch-when=Circle> </span> <span class=\\\"gmf-icon gmf-icon-rectangle\\\" ng-switch-when=Rectangle> </span> </span> </div> <div ng-switch-when=select> <span ng-repeat=\\\"choice in $ctrl.rule.getExpression().split(',')\\\"> {{ choice | translate }}{{ $last ? '' : ', ' }} </span> </div> <div ng-switch-default> <div ng-switch=$ctrl.rule.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <span translate>Between </span> <span>{{ $ctrl.rule.lowerBoundary }}</span> <span translate> and </span> <span>{{ $ctrl.rule.upperBoundary }}</span> </div> <div ng-switch-default> <span>{{ $ctrl.operatorsShortFormat[$ctrl.rule.operator] }}</span> <span>{{ $ctrl.rule.getExpression() }}</span> </div> </div> </div> </div> </div> \";","module.exports = \"<div class=ngeo-datepicker> <form name=dateForm class=ngeo-datepicker-form novalidate> <div ng-if=\\\"::datepickerCtrl.time.widget === 'datepicker'\\\"> <div class=ngeo-datepicker-start-date> <span ng-if=\\\"::datepickerCtrl.time.mode === 'range'\\\" translate>From:</span> <span ng-if=\\\"::datepickerCtrl.time.mode !== 'range'\\\" translate>Date:</span> <input name=sdate ui-date=datepickerCtrl.sdateOptions ng-model=datepickerCtrl.sdate required=\\\"\\\"/> </div> <div class=ngeo-datepicker-end-date ng-if=\\\"::datepickerCtrl.time.mode === 'range'\\\"> <span translate>To:</span> <input name=edate ui-date=datepickerCtrl.edateOptions ng-model=datepickerCtrl.edate required=\\\"\\\"/> </div> </div> </form> </div> \";","module.exports = \"<h4 class=\\\"popover-title ngeo-popup-title\\\"> <span ng-bind-html=title></span> <button type=button class=close ng-click=\\\"open = false\\\"> &times;</button> </h4> <div class=popover-content ng-bind-html=content></div> \";","module.exports = \"<ul class=gmf-backgroundlayerselector> <li ng-repeat=\\\"layer in ctrl.bgLayers\\\" ng-click=ctrl.setLayer(layer) ng-class=\\\"{'gmf-backgroundlayerselector-active': ctrl.bgLayer == layer, 'gmf-backgroundlayerselector-disabled': ctrl.opacityLayer == layer}\\\"> <img class=gmf-thumb ng-src=\\\"{{::layer.get('metadata')['thumbnail']}}\\\"/> <span class=gmf-text>{{layer.get(\\\"label\\\") | translate}}</span> <span ng-class=\\\"{'gmf-backgroundlayerselector-opacity-check': ctrl.opacityLayer == layer}\\\"></span> </li> <input ng-if=ctrl.opacityLayer class=\\\"input-action gmf-backgroundlayerselector-opacity-slider\\\" name=bg-layer-opacity type=range min=0 max=1 step=0.01 ng-model=ctrl.getSetBgLayerOpacity ng-model-options=\\\"{getterSetter: true}\\\"> </ul> \";","module.exports = \"<div ng-if=$ctrl.gmfUser.username> <div class=form-group> <span>{{'Logged in as' | translate}}</span> <strong>{{ ::$ctrl.gmfUser.username }}</strong>. </div> <form name=logoutForm role=form ng-submit=$ctrl.logout() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\" ng-if=!$ctrl.changingPassword> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Logout' | translate}}\\\"/> </div> <div class=form-group> <input ng-show=$ctrl.allowPasswordChange type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Change password' | translate}}\\\" ng-click=\\\"$ctrl.changingPassword = true\\\"/> </div> </form> <form name=changePasswordForm role=form ng-submit=$ctrl.changePassword() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\" ng-if=$ctrl.changingPassword> <div class=form-group> <input type=password class=form-control name=oldpassword ng-model=$ctrl.oldPwdVal ng-attr-placeholder=\\\"{{'Old password' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=newpassword ng-model=$ctrl.newPwdVal ng-attr-placeholder=\\\"{{'New password' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=newpasswordconfirm ng-model=$ctrl.newPwdConfVal ng-attr-placeholder=\\\"{{'Confirm new password' | translate}}\\\"/> </div> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Change password' | translate}}\\\"/> </div> <div class=form-group> <input type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Cancel' | translate}}\\\" ng-if=!$ctrl.userMustChangeItsPassword() ng-click=$ctrl.changePasswordReset() /> <input type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Logout' | translate}}\\\" ng-if=$ctrl.userMustChangeItsPassword() ng-click=$ctrl.logout() /> </div> </form> <div ng-show=$ctrl.error class=\\\"gmf-authentication-error help-block\\\"></div> <ngeo-modal ng-model=$ctrl.changePasswordModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Password Changed' | translate}} </h4> </div> <div class=modal-body> {{'Your password has successfully been changed.' | translate}} </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'OK' | translate}}</button> </div> </ngeo-modal> </div> <div ng-if=!$ctrl.gmfUser.username> <form name=loginForm role=form ng-submit=$ctrl.login() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\"> <div class=form-group> <input type=text class=form-control name=login ng-model=$ctrl.loginVal ng-attr-placeholder=\\\"{{'Username' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=password ng-model=$ctrl.pwdVal ng-attr-placeholder=\\\"{{'Password' | translate}}\\\"/> </div> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Connect' | translate}}\\\"/> </div> <div ng-show=$ctrl.allowPasswordReset class=form-group> <a ng-click=$ctrl.resetPassword() href=\\\"\\\">{{'Password forgotten?' | translate}}</a> </div> </form> <div ng-show=$ctrl.error class=\\\"gmf-authentication-error help-block\\\"></div> <ngeo-modal ng-model=$ctrl.resetPasswordModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Password forgotten?' | translate}} </h4> </div> <div class=modal-body translate> A new password has just been sent to you by e-mail. </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'OK' | translate}}</button> </div> </ngeo-modal> </div> \";"],"sourceRoot":""}