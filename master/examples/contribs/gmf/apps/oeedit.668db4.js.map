{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/goog.asserts.prod.js","webpack:///./src/GeometryType.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/format/AttributeType.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/datasource/OGC.js","webpack:///./src/rule/Rule.js","webpack:///./contribs/gmf/src/index.js","webpack:///./src/misc/ToolActivate.js","webpack:///./src/misc/FeatureHelper.js","webpack:///./src/utils.js","webpack:///./src/CustomEvent.js","webpack:///./src/message/Message.js","webpack:///./src/map/LayerHelper.js","webpack:///./src/rule/Geometry.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/layertree/Controller.js","webpack:///./src/interaction/Measure.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/misc/decorate.js","webpack:///./src/query/MapQuerent.js","webpack:///./src/misc/WMSTime.js","webpack:///./src/misc/filters.js","webpack:///./contribs/gmf/src/layertree/SyncLayertreeMap.js","webpack:///./src/misc/ToolActivateMgr.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/rule/Date.js","webpack:///./src/rule/Text.js","webpack:///./src/filter/RuleHelper.js","webpack:///./src/datasource/File.js","webpack:///./src/datasource/FileGroup.js","webpack:///./src/datasource/OGCGroup.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./contribs/gmf/src/datasource/ExternalDataSourcesManager.js","webpack:///./src/misc/btnComponent.js","webpack:///./src/datasource/DataSources.js","webpack:///./contribs/gmf/src/editing/editFeatureComponent.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/rule/Select.js","webpack:///./contribs/gmf/src/editing/EditFeature.js","webpack:///./src/misc/debounce.js","webpack:///./src/statemanager/Location.js","webpack:///./src/statemanager/Service.js","webpack:///./src/interaction/common.js","webpack:///./contribs/gmf/src/authentication/Service.js","webpack:///./src/misc/Time.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./src/message/popupComponent.js","webpack:///./src/message/Popup.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/format/XSDAttribute.js","webpack:///./src/datasource/Group.js","webpack:///./src/WFSDescribeFeatureType.js","webpack:///./src/query/Querent.js","webpack:///./src/format/WFSAttribute.js","webpack:///./src/datasource/Helper.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./src/interaction/Translate.js","webpack:///./src/interaction/Rotate.js","webpack:///./src/draw/features.js","webpack:///./src/Menu.js","webpack:///./src/download/service.js","webpack:///./contribs/gmf/src/datasource/DataSourceBeingFiltered.js","webpack:///./src/message/modalComponent.js","webpack:///./src/message/Notification.js","webpack:///./src/misc/php-date-formatter.js","webpack:///./contribs/gmf/src/permalink/ShareService.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/interaction/MeasureLength.js","webpack:///./src/interaction/MeasureArea.js","webpack:///./contribs/gmf/src/authentication/component.js","webpack:///./contribs/gmf/src/authentication/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./contribs/gmf/src/backgroundlayerselector/component.js","webpack:///./contribs/gmf/src/datasource/Helper.js","webpack:///./contribs/gmf/src/datasource/OGC.js","webpack:///./contribs/gmf/src/datasource/WFSAliases.js","webpack:///./contribs/gmf/src/datasource/Manager.js","webpack:///./contribs/gmf/src/datasource/module.js","webpack:///./src/message/Disclaimer.js","webpack:///./contribs/gmf/src/disclaimer/component.js","webpack:///./contribs/gmf/src/filters/SavedFilters.js","webpack:///./src/filter/ruleComponent.js","webpack:///./src/filter/component.js","webpack:///./contribs/gmf/src/filters/filterselectorComponent.js","webpack:///./contribs/gmf/src/filters/module.js","webpack:///./contribs/gmf/src/layertree/timeSliderComponent.js","webpack:///./contribs/gmf/src/layertree/module.js","webpack:///./contribs/gmf/src/permalink/module.js","webpack:///./src/map/component.js","webpack:///./src/map/scaleselector.js","webpack:///./src/map/module.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./contribs/gmf/src/map/mousepositionComponent.js","webpack:///./contribs/gmf/src/map/module.js","webpack:///./src/grid/Config.js","webpack:///./src/grid/component.js","webpack:///./contribs/gmf/src/query/gridComponent.js","webpack:///./src/misc/swipe.js","webpack:///./contribs/gmf/src/query/windowComponent.js","webpack:///./contribs/gmf/src/query/extraModule.js","webpack:///./contribs/gmf/src/search/module.js","webpack:///./contribs/gmf/src/theme/selectorComponent.js","webpack:///./contribs/gmf/src/theme/module.js","webpack:///./src/message/displaywindowComponent.js","webpack:///./src/misc/controlComponent.js","webpack:///./src/misc/filereaderComponent.js","webpack:///./src/misc/getBrowserLanguage.js","webpack:///./src/misc/extraModule.js","webpack:///./src/query/mapQueryComponent.js","webpack:///./src/statemanager/WfsPermalink.js","webpack:///./contribs/gmf/src/controllers/AbstractAppController.js","webpack:///./src/interaction/ModifyCircle.js","webpack:///./src/interaction/ModifyRectangle.js","webpack:///./src/interaction/Modify.js","webpack:///./src/draw/Controller.js","webpack:///./src/draw/point.js","webpack:///./src/draw/rectangle.js","webpack:///./src/draw/text.js","webpack:///./src/measure/area.js","webpack:///./src/measure/azimut.js","webpack:///./src/measure/length.js","webpack:///./src/draw/component.js","webpack:///./src/editing/createfeatureComponent.js","webpack:///./contribs/gmf/src/editing/XSDAttributes.js","webpack:///./contribs/gmf/src/raster/RasterService.js","webpack:///./src/proj/somerc.js","webpack:///./src/misc/colorpickerComponent.js","webpack:///./src/misc/AutoProjection.js","webpack:///./contribs/gmf/src/search/FulltextSearch.js","webpack:///./src/download/Csv.js","webpack:///./src/map/resizemap.js","webpack:///./contribs/gmf/src/permalink/shareComponent.js","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.js","webpack:///./src/statemanager/module.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/misc/datepickerComponent.js","webpack:///./src/format/Attribute.js","webpack:///./contribs/gmf/src/editing/EnumerateAttribute.js","webpack:///./src/misc/File.js","webpack:///./contribs/gmf/src/controllers/AbstractDesktopController.js","webpack:///./src/print/VectorEncoder.js","webpack:///./src/print/Service.js","webpack:///./contribs/gmf/src/editing/editFeatureSelectorComponent.js","webpack:///./contribs/gmf/src/editing/module.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/format/FeatureHash.js","webpack:///./contribs/gmf/src/contextualdata/component.js","webpack:///./contribs/gmf/src/contextualdata/module.js","webpack:///./contribs/gmf/src/drawing/featureStyleComponent.js","webpack:///./contribs/gmf/src/drawing/drawFeatureComponent.js","webpack:///./contribs/gmf/src/drawing/module.js","webpack:///./contribs/gmf/src/import/wmsCapabilityLayertreeComponent.js","webpack:///./contribs/gmf/src/import/wmtsCapabilityLayertreeComponent.js","webpack:///./contribs/gmf/src/import/importdatasourceComponent.js","webpack:///./contribs/gmf/src/import/module.js","webpack:///./src/search/searchDirective.js","webpack:///./src/search/createGeoJSONBloodhound.js","webpack:///./src/search/createLocationSearchBloodhound.js","webpack:///./src/search/module.js","webpack:///./src/profile/d3Elevation.js","webpack:///./src/profile/elevationComponent.js","webpack:///./contribs/gmf/src/profile/component.js","webpack:///./contribs/gmf/src/profile/drawLineComponent.js","webpack:///./contribs/gmf/src/profile/module.js","webpack:///./src/query/bboxQueryComponent.js","webpack:///./contribs/gmf/src/raster/component.js","webpack:///./src/print/Utils.js","webpack:///./contribs/gmf/src/print/component.js","webpack:///./src/misc/datetimepickerComponent.js","webpack:///./src/editing/attributesComponent.js","webpack:///./src/editing/exportfeaturesComponent.js","webpack:///./src/misc/sortableComponent.js","webpack:///./src/message/popoverComponent.js","webpack:///./contribs/gmf/src/search/component.js","webpack:///./src/map/recenter.js","webpack:///./src/misc/syncArrays.js","webpack:///./src/layertree/component.js","webpack:///./src/olcs/constants.js","webpack:///./src/Popover.js","webpack:///./contribs/gmf/src/layertree/component.js","webpack:///./contribs/gmf/apps/appmodule.js","webpack:///./contribs/gmf/src/objectediting/coordinate.js","webpack:///./contribs/gmf/src/objectediting/geom.js","webpack:///./contribs/gmf/src/objectediting/Query.js","webpack:///./contribs/gmf/src/objectediting/getWMSFeatureComponent.js","webpack:///./src/interaction/DrawRegularPolygonFromClick.js","webpack:///./src/editing/createregularpolygonfromclickComponent.js","webpack:///./contribs/gmf/src/objectediting/toolsComponent.js","webpack:///./contribs/gmf/src/objectediting/component.js","webpack:///./contribs/gmf/src/objectediting/Manager.js","webpack:///./contribs/gmf/src/objectediting/module.js","webpack:///./src/proj/EPSG2056.js","webpack:///./contribs/gmf/apps/oeedit/Controller.js","webpack:///./contribs/gmf/apps/oeedit/contextualdata.html","webpack:///./contribs/gmf/src/objectediting/component.html","webpack:///./contribs/gmf/src/objectediting/toolsComponent.html","webpack:///./contribs/gmf/src/import/importdatasourceComponent.html","webpack:///./contribs/gmf/src/import/wmtsCapabilityLayertreeComponent.html","webpack:///./contribs/gmf/src/import/wmsCapabilityLayertreeComponent.html","webpack:///./contribs/gmf/src/raster/widgetComponent.html","webpack:///./contribs/gmf/src/profile/component.html","webpack:///./contribs/gmf/src/print/component.html","webpack:///./contribs/gmf/src/editing/editFeatureSelectorComponent.html","webpack:///./contribs/gmf/src/editing/editFeatureComponent.html","webpack:///./src/editing/attributescomponent.html","webpack:///./contribs/gmf/src/drawing/drawFeatureComponent.html","webpack:///./contribs/gmf/src/drawing/featureStyleComponent.html","webpack:///./src/message/displaywindowComponent.html","webpack:///./contribs/gmf/src/theme/selectorComponent.html","webpack:///./contribs/gmf/src/search/component.html","webpack:///./src/misc/colorpickerComponent.html","webpack:///./contribs/gmf/src/query/windowComponent.html","webpack:///./contribs/gmf/src/query/gridComponent.html","webpack:///./src/grid/component.html","webpack:///./contribs/gmf/src/map/mousepositionComponent.html","webpack:///./contribs/gmf/src/map/component.html","webpack:///./src/map/scaleselector.html","webpack:///./contribs/gmf/src/permalink/shareComponent.html","webpack:///./contribs/gmf/src/layertree/timesliderComponent.html","webpack:///./contribs/gmf/src/layertree/component.html","webpack:///./src/layertree/component.html","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.html","webpack:///./contribs/gmf/src/filters/filterselectorcomponent.html","webpack:///./src/filter/component.html","webpack:///./src/filter/rulecomponent.html","webpack:///./src/misc/datepickerComponent.html","webpack:///./src/message/popupcomponent.html","webpack:///./contribs/gmf/src/backgroundlayerselector/component.html","webpack:///./contribs/gmf/src/authentication/component.html"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","condition","opt_message","var_args","type","__webpack_exports__","CIRCLE","LINE_STRING","MULTI_LINE_STRING","MULTI_POINT","MULTI_POLYGON","POINT","POLYGON","RECTANGLE","TEXT","ANGLE","COLOR","IS_CIRCLE","IS_RECTANGLE","IS_TEXT","NAME","SHOW_LABEL","OPACITY","AZIMUT","SHOW_MEASURE","SIZE","STROKE","BOOLEAN","DATE","DATETIME","TIME","GEOMETRY","NUMBER","SELECT","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_6__","$http","$injector","$q","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","ol_events_EventTarget_js__WEBPACK_IMPORTED_MODULE_5__","this","addBlankBackgroundLayer_","undefined","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","defer","promise_","promise","loaded","bgLayerPromise_","ol_index_js__WEBPACK_IMPORTED_MODULE_2__","findGroupByLayerNodeName","themes","ii","theme","jj","children","group","childNodes","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","ol_array_js__WEBPACK_IMPORTED_MODULE_3__","findThemeByName","themeName","node","nodes","getBgLayers","_this","layerHelper","callback","item","layer","set","metadata","dimensions","ids","getIds","array","forEach","child","layerLayerCreationFn","ogcServers","gmfLayer","gmfLayerWMTS","goog_asserts_js__WEBPACK_IMPORTED_MODULE_0__","assert","url","createWMTSLayerFromCapabilitites","matrixSet","then","response","message","console","error","resolve","gmfLayerWMS","ogcServer","server","imageType","createBasicWMSLayer","layers","credential","fail","promiseSuccessFn","promises","background_layers","map","itemType","x","reverse","all","collection","filter","ol_Collection_js__WEBPACK_IMPORTED_MODULE_4__","createBasicGroup","layerGroupCreationFn","values","getString","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","getOgcServersObject","hasEditableLayers","hasEditableLayers_","_this2","some","hasNodeEditableLayers_","editable","getSnappingConfig","snappingConfig","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","params","role","cache_version","cache","withCredentials","errors","join","hasParam","alert","dispatchEvent","reject","NodeType","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","WMS","angular","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_1__","service","options","_classCallCheck","_possibleConstructorReturn","_ngeoDatasourceDataSo","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","ngeo_filter_Condition_js__WEBPACK_IMPORTED_MODULE_2__","AND","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","geometryName","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","queryable","_iterator","_isArray","Array","isArray","_i","iterator","_ref","next","done","ogcLayer","wfsFormat","supportsWFS","format","ol_format_GML3_js__WEBPACK_IMPORTED_MODULE_5__","GML2","ol_format_GML2_js__WEBPACK_IMPORTED_MODULE_4__","ol_format_WFS_js__WEBPACK_IMPORTED_MODULE_6__","featureNS","featureType","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","ol_format_WMSGetFeatureInfo_js__WEBPACK_IMPORTED_MODULE_7__","wmsFormat_","_inherits","getAttributes","attributes","setAttributes","updateGeometryNameFromAttributes_","combinableWithDataSourceForWFS","dataSource","combinableForWFS","haveTheSameActiveDimensions","combinableWithDataSourceForWMS","combinableForWMS","isAnyOGCLayerInRange","res","queryableOnly","arguments","getInRangeOGCLayerNames","layerNames","_iterator2","_isArray2","_i2","_ref2","maxRes","minRes","getOGCLayerNames","_iterator3","_isArray3","_i3","_ref3","getFiltrableOGCLayerName","_iterator4","_isArray4","_i4","_ref4","attribute","ngeo_format_AttributeType_js__WEBPACK_IMPORTED_MODULE_3__","share","myActive","activeDimensions","itsActive","_createClass","time","range","lower","upper","end","start","active","config","timeRangeValue","_iterator5","_isArray5","_i5","_ref5","ngeo_datasource_DataSource_js__WEBPACK_IMPORTED_MODULE_1__","guessServiceTypeByUrl","test","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","active_","expression","lowerBoundary_","lowerBoundary","operator_","operator","upperBoundary_","upperBoundary","isCustom_","isCustom","name_","operators_","operators","propertyName_","propertyName","type_","listenerKeys","getExpression","setExpression","reset","destroy","ol_events_js__WEBPACK_IMPORTED_MODULE_1__","OperatorType","BETWEEN","TemporalOperatorType","DURING","EQUAL_TO","GREATER_THAN","GREATER_THAN_OR_EQUAL_TO","LESSER_THAN","LESSER_THAN_OR_EQUAL_TO","LIKE","NOT_EQUAL_TO","SpatialOperatorType","CONTAINS","INTERSECTS","WITHIN","BEGINS","ENDS","EQUALS","BG_LAYER","EXTERNAL_DATASOURCES_NAMES","EXTERNAL_DATASOURCES_URLS","FEATURES","MAP_CROSSHAIR","MAP_TOOLTIP","MAP_X","MAP_Y","MAP_Z","TREE_GROUPS","WFS_LAYER","WFS_NGROUPS","WFS_SHOW_FEATURES","toolContext","activePropertyName","getActive","setActive","newVal","ol_style_Text_js__WEBPACK_IMPORTED_MODULE_24__","$filter","$filter_","decimals_","precision_","numberFormat_","unitPrefixFormat_","ngeoNumberCoordinates_","pointFilterFn_","pointFilterArgs_","filterElements","split","filterName","assertFunction","projection_","download_","setProjection","projection","setStyle","feature","opt_select","styles","getStyle","supportsVertex_","getVertexStyle","unshift","getHaloStyle_","style","getType","ngeo_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__","getLineStringStyle_","getPointStyle_","getPolygonStyle_","getTextStyle_","constructor","strokeWidth","getStrokeProperty","showLabel","getShowLabelProperty","showMeasure","getShowMeasureProperty","color","getRGBAColorProperty","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_23__","stroke","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_22__","width","textLabelValues","getMeasure","getNameProperty","textLabelValue","text","createTextStyle_","size","getSizeProperty","image","ol_style_Circle_js__WEBPACK_IMPORTED_MODULE_19__","radius","fill","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_20__","offsetY","font_size","optNumber","attrib","assertNumber","getNumber","opacity","getOpacityProperty","fillColor","azimut","ngeo_format_FeatureProperties_js__WEBPACK_IMPORTED_MODULE_3__","line","getRadiusLine","ngeo_interaction_Measure_js__WEBPACK_IMPORTED_MODULE_5__","getFormattedLength","geometry","angle","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_14__","getLastCoordinate","offsetX","Math","cos","PI","sin","exceedLength","getAngleProperty","createEditingStyles","white","blue","geom","getGeometry","zIndex","Infinity","opt_incGeomFunc","incGeomFunc","ol_style_RegularShape_js__WEBPACK_IMPORTED_MODULE_21__","points","innerMultiCoordinates","multiCoordinates","coordinates","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_11__","getCoordinates","ol_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_12__","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_15__","ol_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_16__","concat","ol_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_13__","supported","ol_array_js__WEBPACK_IMPORTED_MODULE_7__","haloSize","getFilteredFeatureValues","properties","getProperties","getGeometryName","getColorProperty","assertString","ol_color_js__WEBPACK_IMPORTED_MODULE_8__","assertBoolean","export","features","formatType","FormatType","GPX","exportGPX","KML","exportKML","ol_format_GPX_js__WEBPACK_IMPORTED_MODULE_17__","export_","ol_format_KML_js__WEBPACK_IMPORTED_MODULE_18__","fileName","opt_mimeType","mimeType","clones","clone","ol_Feature_js__WEBPACK_IMPORTED_MODULE_10__","writeOptions","dataProjection","featureProjection","writeFeatures","rotation","font","measure","ngeo_interaction_MeasureAzimut_js__WEBPACK_IMPORTED_MODULE_6__","getFormattedAzimutRadius","getFormattedArea","getFormattedPoint","args","panMapToFeature","opt_panDuration","panDuration","getSize","assertArray","view","getView","extent","calculateExtent","intersectsExtent","mapCenter","getCenter","featureCenter","getCoordinateAt","getInteriorPoint","ol_extent_js__WEBPACK_IMPORTED_MODULE_9__","getExtent","animate","center","duration","y","endPoint","getNonSpatialProperties","nonSpatialProperties","clearNonSpatialProperties","ngeo_download_service_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_misc_filters_js__WEBPACK_IMPORTED_MODULE_1__","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_6__","multiGeom","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_5__","ol_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_2__","appendPoint","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_1__","ol_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_3__","appendLineString","ol_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_4__","appendPolygon","navigator","userAgent","indexOf","hex","rgb","g","b","Error","colorZeroPadding","toString","queryString","queryData","substring","pair","indexOfEquals","decodeURIComponent","queryItem","encodeURIComponent","event","ol_events_condition_js__WEBPACK_IMPORTED_MODULE_0__","ol_events_Event_js__WEBPACK_IMPORTED_MODULE_1__","detail","ol_index_js__WEBPACK_IMPORTED_MODULE_0__","showMessage","show","getMessageObjects","ERROR","info","INFORMATION","success","SUCCESS","warn","WARNING","opt_type","msgObjects","msgObject","defaultType","msg","ol_uri_js__WEBPACK_IMPORTED_MODULE_10__","ngeoTilesPreloadingLimit","tilesPreloadingLimit_","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","LAYERS","olServerType","replace","source","ol_source_ImageWMS_js__WEBPACK_IMPORTED_MODULE_7__","serverType","crossOrigin","updateParams","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_4__","createBasicWMSLayerFromDataSource","setVisible","visible","id","capabilitiesURL","layerName","opt_matrixSet","opt_dimensions","parser","ol_format_WMTSCapabilities_js__WEBPACK_IMPORTED_MODULE_2__","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_5__","preload","read","ol_source_WMTS_js__WEBPACK_IMPORTED_MODULE_9__","ol_obj_js__WEBPACK_IMPORTED_MODULE_6__","updateDimensions","setSource","ol_array_js__WEBPACK_IMPORTED_MODULE_1__","elt","index","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_3__","setLayers","getGroupFromMap","groupName","getLayerGroup","getLayers","getArray","existingGroup","addLayer","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","isLayerVisible","getVisible","currentResolution","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","source_","getSource","ol_source_TileWMS_js__WEBPACK_IMPORTED_MODULE_8__","getParams","random","setZIndexToFirstLevelChildren","element","ZIndex","innerLayer","setZIndex","updateWMSLayerState","names","getQuerySourceIds","ngeo_format_AttributeType_js__WEBPACK_IMPORTED_MODULE_1__","_ngeoRuleRule","featureProperties","feature_","ol_Feature_js__WEBPACK_IMPORTED_MODULE_4__","format_","ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_5__","updatingExpression_","updatingGeometry_","geometryChangeListenerKey_","ol_events_js__WEBPACK_IMPORTED_MODULE_3__","handleFeatureGeometryChange_","setGeometryFromExpression_","registerGeometryChange_","writeGeometry","handleGeometryChange_","evt","assertInstanceof","target","ol_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_6__","readGeometry","setGeometry","ngeo_rule_Rule_js__WEBPACK_IMPORTED_MODULE_2__","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_6__","featureUidToGroupIndex_","groups_","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_5__","useSpatialIndex","layer_","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_3__","styleFunction_","updateWhileAnimating","updateWhileInteracting","addFeature","groupIndex","featureUid","removeFeature","clear","ol_obj_js__WEBPACK_IMPORTED_MODULE_4__","getLayer","getFeatureOverlay","styleFunction","ngeo_map_FeatureOverlay_js__WEBPACK_IMPORTED_MODULE_1__","init","setMap","defaultFunction","resolution","ol_layer_Layer_js__WEBPACK_IMPORTED_MODULE_5__","$scope","$rootScope","$attrs","isRoot","nodeExpr","rootScope_","state_","$watch","oldVal","$eval","mapExpr","parent","$parent","$on","uid","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","treeCtrl","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_4__","dataSource_","ngeo_misc_decorate_js__WEBPACK_IMPORTED_MODULE_1__","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","getState","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","getFirstParentTree","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","val","removeLayer","getDataSource","setDataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","traverseDepthFirst","visitor","controller","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_13__","ol_interaction_Interaction_js__WEBPACK_IMPORTED_MODULE_8__","handleEvent","handleEvent_","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","sketchFeature","continueMsg","decimals","precision","displayHelpTooltip_","displayHelpTooltip","startMsg","document","createElement","textContent","changeEventKey_","postcomposeEventKey_","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_11__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_12__","vectorLayer_","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_9__","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_10__","drawInteraction_","createDrawInteraction","sketchStyle","shouldHandleDrawInteractionActiveChange_","ol_events_js__WEBPACK_IMPORTED_MODULE_7__","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","updateState_","polygon","transform","abs","ol_sphere_js__WEBPACK_IMPORTED_MODULE_6__","getFormattedCircleArea","circle","pow","getRadius","lineString","c1","ol_proj_js__WEBPACK_IMPORTED_MODULE_4__","c2","point","opt_template","dragging","helpMsg","ol_dom_js__WEBPACK_IMPORTED_MODULE_3__","appendChild","setPosition","coordinate","getDrawInteraction","prevMap","getMap","removeInteraction","addInteraction","createMeasureTooltip_","handleMeasure","coord","innerHTML","classList","add","setOffset","ngeo_CustomEvent_js__WEBPACK_IMPORTED_MODULE_1__","unlistenerEvent_","createHelpTooltip_","removeHelpTooltip_","ol_Overlay_js__WEBPACK_IMPORTED_MODULE_5__","offset","positioning","addOverlay","removeOverlay","parentNode","removeChild","removeMeasureTooltip_","stopEvent","getTooltipElement","ol_obj_js__WEBPACK_IMPORTED_MODULE_9__","$timeout","ngeoNotification","gmfThemes","ngeoStateManager","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","gmfThemes_","root","rootCtrl","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","ngeoStateManager_","ogcServers_","ol_events_js__WEBPACK_IMPORTED_MODULE_8__","handleThemesChange_","refreshFirstLevelGroups_","setFirstLevelGroups","firstLevelGroups","deleteParam","gmf_index_js__WEBPACK_IMPORTED_MODULE_0__","PermalinkParam","addFirstLevelGroups","opt_add","opt_silent","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","groups","treeGroupsParam","updateState","cleanParams","alreadyAdded","groupID","rootChild","grp","cancel","addGroupByName","_this4","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_1__","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_3__","removeGroup","removeAll","cloneGroupNode_","toggleNodeCheck_","_this6","childNode","isChecked","notify","ngeo_message_Message_js__WEBPACK_IMPORTED_MODULE_4__","correspondingTreeCtrl","getOgcServer","mixed","goog_asserts_js__WEBPACK_IMPORTED_MODULE_2__","firstLevelGroupCtrl","gmfGroup","_this7","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this8","isExpanded","isLegendExpanded","nodeElement","$","hasClass","legendElement","is","_this9","ngeo_message_Notification_js__WEBPACK_IMPORTED_MODULE_5__","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_6__","ol_source_Tile_js__WEBPACK_IMPORTED_MODULE_6__","interaction","ol_interaction_Interaction_js__WEBPACK_IMPORTED_MODULE_1__","ol_layer_Base_js__WEBPACK_IMPORTED_MODULE_2__","configurable","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","on","olEvent","ol_layer_Layer_js__WEBPACK_IMPORTED_MODULE_4__","ol_source_Image_js__WEBPACK_IMPORTED_MODULE_5__","$applyAsync","ngeoDataSources","ngeoDataSourcesHelper","ngeoQuerent","ngeoQueryResult","dataSources_","ngeoDataSourcesHelper_","ngeoQuerent_","result_","limit_","limit","queryCountFirst_","queryCountFirst","tolerancePx_","tolerance","dataSourceNames_","$inject","issue","queryableDataSources","dataSources","getQueryableDataSources","tolerancePx","wfsCount","pending","handleResult_","total","sources","queried","tooManyResults","totalFeatureCount","_loop","idStr","Number","querentResultItem","tooManyFeatures","typeSeparatedFeatures","filteredProperties","alias","unset","setProperties","featuresByType","ngeo_datasource_DataSources_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_datasource_Helper_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_query_Querent_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_misc_Time_js__WEBPACK_IMPORTED_MODULE_1__","formatTimeValue","opt_useISOFormat","opt_toUTC","date","Date","utc","yearResolution","monthResolution","dayResolution","toISOString","formatWMSTimeParam","wmsTimeProperty","times","ol_string_js__WEBPACK_IMPORTED_MODULE_1__","Scalify","numberFilter","filterFn","scale","$locale","formats","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","sign","nb_decimal","floor","log","factor","round","decimal","unit","str_number","str_unit","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","divisor","prefix","index_max","postfix","space","NumberCoordinates","opt_fractionDigits","template","fractionDigits","parseInt","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","ol_math_js__WEBPACK_IMPORTED_MODULE_0__","dms","charAt","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","Duration","TimeUnits","freeze","SECONDS","MINUTES","HOURS","DAYS","pluralize","amount","formattedUnit","getPlural","output","remainder","ngeoWMSTime","ngeoWMSTime_","ogcServersObject_","ogcServersObject","sync_","createLayer","dataLayerGroup","opt_position","createGroup_","createLeafInAMixedGroup_","initGmfLayerInANotMixedGroup_","updateLayerState_","goog_asserts_js__WEBPACK_IMPORTED_MODULE_1__","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_5__","groupNode","isFirstLevelGroup","printNativeAngle","createLayerFromGroup_","position","insertAt","isOneParentNotMixed_","timeParam","getTimeParam_","hasActiveChildren","ctrl","updateLayerReferences_","createWMTSLayer_","checked","leafNode","firstLevelGroup","getFirstLevelGroupCtrl_","newLayer","ol_index_js__WEBPACK_IMPORTED_MODULE_4__","querySourceIds","disclaimer","disclaimers","wmsTime","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_2__","timeValues","getOptions","isOneParentNotMix","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_0__","ngeo_misc_WMSTime_js__WEBPACK_IMPORTED_MODULE_3__","scope_","registerTool","tool","opt_defaultActivate","entries","unlisten","deactivateTools_","activateDefault_","defaultTool","ENABLE_ASSERTS","defaultTools","entry","unregisterTool","unregisterGroup","activateTool","deactivateTool","hasActiveTool","ol_events_js__WEBPACK_IMPORTED_MODULE_0__","listenerKeys_","addListenerKey","initListenerKey_","clearListenerKey","NOT","OR","rule_Date","AttributeType","Rule","Text","Text_classCallCheck","Text_possibleConstructorReturn","Text_inherits","RuleHelper_exports","ngeoFeatureHelper","RuleHelper_classCallCheck","ngeoFeatureHelper_","createRulesFromAttributes","opt_isCustom","rules","createRuleFromAttribute","rule","Geometry","Select","choices","goog_asserts_prod","createRules","optionsList","createRule","selectOptions","cloneRule","extendRule","sourceRule","destRule","serializeRules","serializeRule","obj","createFilter","mainFilter","conditions","createFilterFromRule_","srsName","Condition","format_filter","incTime","timeFilter","createTimeFilterFromDataSource_","createFilterString","filterString","filterNode","WFS","XMLSerializer","serializeToString","opt_srsName","rot","rsot","rtot","spatialTypes","numericTypes","beginValue","endValue","moment","subtract","selectedChoices","selectedChoice","numericExpression","stringExpression","String","momentEnd","startValue","FeatureHelper","WMSTime","datasource_File","featuresCollection_","Collection","source_Vector","wrapX","Vector","DataSource","FileGroup","FileGroup_classCallCheck","FileGroup_possibleConstructorReturn","_ngeoDatasourceGroup","injector","unregister_","FileGroup_inherits","addDataSource","registerDataSource_","handleDataSourceVisibleChange_","oldValue","removeDataSource","unregisterDataSource_","Group","OGCGroup","OGCGroup_classCallCheck","OGCGroup_possibleConstructorReturn","url_","OGCGroup_inherits","OGCGroup_createClass","WMSGroup","WMSGroup_classCallCheck","WMSGroup_possibleConstructorReturn","_ngeoDatasourceOGCGro","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","WMSGroup_inherits","OGC","updateLayer_","unregister","WMSGroup_createClass","ExternalDataSourcesManager_exports","ngeoFile","ExternalDataSourcesManager_classCallCheck","injector_","q_","ngeoFile_","extDataSources_","files_","map_","fileGroup_","title","wmsGroupsCollection_","wmtsGroupsCollection_","wmtsCache_","events","handleDataSourcesRemove_","addWMSGroup_","wmsGroup","wmsGroupsCollection","removeWMSGroup_","remove","getWMSGroup","wmsGroups","addWMTSGroup_","wmtsGroup","wmtsGroupsCollection","removeWMTSGroup_","getWMTSGroup","wmtsGroups","isExternalDataSource","addLayer_","layerGroup","removeLayer_","createAndAddDataSourceFromWMSCapability","getId","req","includes","createAndAddDataSourceFromWMTSCapability","layerObj","handleWMTSDataSourceVisibleChange_","createAndAddDataSourceFromFile","file","getFileDataSource_","fileGroup","fit","rejections","content","readOptions","getProjection","isKml","readFeatures","isGpx","removeFileDataSource_","removeOGCDataSource_","ExternalDataSourcesManager_createClass","src","EXTERNALLAYERGROUP_NAME","ol","LayerHelper","File","DataSources","btnGroupComponent_","$parse","restrict","link","scope","attrs","assign","buttons_","buttonModel","newValue","directive","BtnGroupController","activate","expressionFn","addButton","btnComponent_","require","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","$apply","$setViewValue","$viewValue","$render","toggleClass","collection_","ol_Collection_js__WEBPACK_IMPORTED_MODULE_2__","handleDataSourcesAdd_","bindMap_","handleViewResolutionChange_","syncDataSourcesToResolution_","unbindMap_","ol_View_js__WEBPACK_IMPORTED_MODULE_4__","syncDataSourceToResolution_","supportsDynamicInRange","inRange","ol_style_Text_js__WEBPACK_IMPORTED_MODULE_36__","gmf_editing_EditFeature_js__WEBPACK_IMPORTED_MODULE_0__","gmf_editing_Snapping_js__WEBPACK_IMPORTED_MODULE_1__","gmf_editing_XSDAttributes_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_editing_attributesComponent_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_editing_createfeatureComponent_js__WEBPACK_IMPORTED_MODULE_9__","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_15__","ngeo_message_modalComponent_js__WEBPACK_IMPORTED_MODULE_17__","ngeo_misc_btnComponent_js__WEBPACK_IMPORTED_MODULE_18__","ngeo_misc_EventHelper_js__WEBPACK_IMPORTED_MODULE_20__","ngeo_misc_FeatureHelper_js__WEBPACK_IMPORTED_MODULE_21__","ngeo_misc_ToolActivateMgr_js__WEBPACK_IMPORTED_MODULE_23__","run","$templateCache","put","component_","dirty","editableTreeCtrl","vectorLayer","bindToController","templateUrl","Controller_","$element","gmfEditFeature","gmfSnapping","gmfXSDAttributes","ngeoEventHelper","ngeoToolActivateMgr","element_","timeout_","gmfEditFeature_","gmfSnapping_","gmfXSDAttributes_","ngeoEventHelper_","ngeoToolActivateMgr_","editableNode_","editableWMSLayer_","confirmDeferred_","unsavedModificationsModalShown","createActive","createToolActivate","ngeo_misc_ToolActivate_js__WEBPACK_IMPORTED_MODULE_22__","mapSelectActive","mapSelectToolActivate","handleFeatureChange_","featureId","interactions_","ol_Collection_js__WEBPACK_IMPORTED_MODULE_26__","modify_","modifyToolActivate","menu_","ngeo_Menu_js__WEBPACK_IMPORTED_MODULE_16__","actions","cls","translate_","rotate_","rotateToolActivate","translateToolActivate","geomType","showServerError","serverErrorMessage","serverErrorType","$onInit","lang","getCurrentLanguage","datetimepicker","setLocale","setDateFormatter","ngeo_misc_php_date_formatter_js__WEBPACK_IMPORTED_MODULE_5__","getFeaturesCollection","gmf_layertree_SyncLayertreeMap_js__WEBPACK_IMPORTED_MODULE_3__","goog_asserts_js__WEBPACK_IMPORTED_MODULE_4__","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_32__","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_33__","ol_interaction_Modify_js__WEBPACK_IMPORTED_MODULE_31__","deleteCondition","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_10__","ngeo_interaction_Rotate_js__WEBPACK_IMPORTED_MODULE_13__","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_35__","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_34__","ngeo_interaction_Translate_js__WEBPACK_IMPORTED_MODULE_14__","initializeInteractions_","ensureSnapInteractionsOnTop","handleDestroy_","ol_index_js__WEBPACK_IMPORTED_MODULE_24__","ol_events_js__WEBPACK_IMPORTED_MODULE_27__","handleFeatureAdd_","handleMapSelectActiveChange_","State","STOP_EDITING_PENDING","confirmCancel","STOP_EDITING_EXECUTE","DEACTIVATE_PENDING","DEACTIVATE_EXECUTE","IDLE","setAttributes_","toggle_","save","setId","dateFormatter","parseDate","jsonFormat","setMinutes","getMinutes","getTimezoneOffset","formatDate","updateFeature","insertFeatures","handleEditFeature_","close","checkForModifications_","scopeApply","continueWithoutSaving","delete","confirm","deleteFeature","submit","find","click","resp","ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_30__","mask","geomAttr","ngeo_format_XSDAttribute_js__WEBPACK_IMPORTED_MODULE_11__","getGeometryAttribute","ol_Feature_js__WEBPACK_IMPORTED_MODULE_29__","keys","createUid","otherUid","toolMgr","handleMenuActionClick_","handleTranslateEnd_","handleRotateEnd_","mapDiv","getViewport","assertElement","handleMapClick_","handleMapContextMenu_","pixel","forEachFeatureAtPixel","ret","ol_array_js__WEBPACK_IMPORTED_MODULE_25__","hitTolerance","buffer","ol_extent_js__WEBPACK_IMPORTED_MODULE_28__","getFeaturesInExtent","handleGetFeatures_","getEventPixel","getCoordinateFromPixel","ngeo_GeometryType_js__WEBPACK_IMPORTED_MODULE_12__","open","preventDefault","stopPropagation","_this10","ngeo_misc_decorate_js__WEBPACK_IMPORTED_MODULE_19__","registerInteractions_","_this11","unregisterInteractions_","_this12","newFeature","oldFeature","_this13","handleFeaturePropertyChange_","action","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_2__","gmfTreeManagerModeFlush","gmfTreeManager","$rootScope_","modeFlush","gmfTreeManager_","themeName_","addTheme","setThemeName","getThemeName","isLoading","$emit","EventType","THEME_NAME_SET","gmf_layertree_TreeManager_js__WEBPACK_IMPORTED_MODULE_0__","inRange_","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","ngeo_rule_Rule_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_format_AttributeType_js__WEBPACK_IMPORTED_MODULE_0__","choices_","ol_uri_js__WEBPACK_IMPORTED_MODULE_1__","gmfLayersUrl","http_","baseUrl_","layerIds","bbox","getFeaturesWithComparisonFilters","filters","ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_0__","layerId","geoJSON","post","headers","Content-Type","writeFeature","factory_","func","wait","invokeApply","timeout","_len","_key","context","factory","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_1__","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","hash","replaceState","getPath","getUriString","out","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getParam","getFragmentParam","getParamAsInt","valueAsInt","isNaN","getParamAsFloat","valueAsFloat","parseFloat","getFragmentParamAsInt","getParamKeys","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","$window","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","ngeo_statemanager_Location_js__WEBPACK_IMPORTED_MODULE_1__","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","keyRegexp","match","localStorage","err","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","RegExp","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_0__","authenticationBaseUrl","gmfUser","_olEventsEventTarget","user_","noReloadRole_","load_","RouteSuffix","IS_LOGGED_IN","handleLogin_","changePassword","oldPwd","newPwd","confPwd","CHANGE_PASSWORD","param","oldPassword","newPassword","confirmNewPassword","is_password_changed","$digest","login","pwd","LOGIN","password","logout","noReload","LOGOUT","resetUser_","resetPassword","RESET_PASSWORD","successFn","getFunctionalities","functionalities","getRoleId","role_id","checkingLoginStatus","respData","setUser_","ngeo_CustomEvent_js__WEBPACK_IMPORTED_MODULE_0__","user","emitEvent","username","role_name","createDate","defaultValue","getTime","minDate","minValue","maxDate","maxValue","minDefaultDate","minDefValue","maxDefaultDate","maxDefValue","defaultValues","getUTCDate","localDate","getUTCFullYear","getUTCMonth","DrawAzimut_exports","Pointer","handleDownEvent","handleDownEvent_","handleUpEvent","handleUpEvent_","downPx_","started_","sketchFeature_","sketchPoint_","squaredClickTolerance_","sketchLayer_","common","getDefaultDrawStyleFunction","downPx","clickPx","dx","dy","pass","handlePointerMove_","finishDrawing_","startDrawing_","mapBrowserEvent","modifyDrawing_","createOrUpdateSketchPoint_","Feature","Point","updateSketchFeatures_","sketchPointGeom","setCoordinates","sketchFeatures","addFeatures","LineString","Circle","GeometryCollection","CustomEvent","geometries","getGeometriesArray","last","setRadius","getLength","abortDrawing_","shouldStopEvent","functions","DrawAzimut","MeasureAzimut_exports","unitPrefixFormat","numberFormat","Measure","getGeometries","Projection","formatLength","formatAzimut","getFormattedAzimut","getAzimut","coords","rad","acos","sqrt","popupComponent_exports","directive_","ngeoPopupTemplateUrl","addClass","css","popupComponent","Popup_exports","$compile","$new","autoDestroy_","sce_","body","append","getOpen","setOpen","$destroy","setTitle","trustedTitle","setContent","opt_trusted","setUrl","setWidth","setHeight","height","setSize","setAutoDestroy","autoDestroy","Factory","manager","manager_","features_","index_","setFeatures","handleFeatureRemove_","ol_format_XML_js__WEBPACK_IMPORTED_MODULE_4__","ol_index_js__WEBPACK_IMPORTED_MODULE_3__","readFromDocument","doc","nodeType","Node","DOCUMENT_NODE","firstChild","nextSibling","ELEMENT_NODE","readFromNode","localName","elements","getElementsByTagName","readFromElementNode_","getAttribute","nillable","required","ngeo_format_Attribute_js__WEBPACK_IMPORTED_MODULE_1__","setGeometryType","setAttributeByXsdType_","enumerations","ngeo_format_AttributeType_js__WEBPACK_IMPORTED_MODULE_2__","restrictions","restrictionNode","maxLengths","maxLength","numType","NumberType","FLOAT","INTEGER","geomAttribute","dataSourcesCollection_","ol_Collection_js__WEBPACK_IMPORTED_MODULE_1__","title_","getDataSourceState","VisibilityState","ON","OFF","toggleVisibilityState","visibleToSet","visibilityState","INDETERMINATE","WFSDescribeFeatureType_exports","XML","xml","PARSERS_","readElement_","objectStack","len","pop","readComplexType_","COMPLEX_TYPE_PARSERS_","readComplexContent_","COMPLEX_CONTENT_PARSERS_","readExtension_","EXTENSION_PARSERS_","readSequence_","SEQUENCE_PARSERS_","NAMESPACE_URIS_","complexType","complexContent","extension","sequence","WFSDescribeFeatureType","Querent_exports","ngeoRuleHelper","ngeoRuleHelper_","requestCancelers_","wmsGetCapabilitiesPromises_","wmtsGetCapabilitiesPromises_","cancelStillRunningRequests_","combinedWFSDataSources","getCombinableWFSDataSources_","wfs","issueCombinedWFS_","combinedWMSDataSources","getCombinableWMSDataSources_","wms","issueCombinedWMS_","handleCombinedQueryResult_","isDataSourceQueryable_","wfsDescribeFeatureType","supportsAttributes","ogcLayerNames","uri","TYPENAME","wmsFindLayerCapability","layerCapabilities","layerCapability","wmsGetCapabilities","baseUrl","opt_cache","WMSCapabilities","wmtsFindLayerCapability","wmtsGetCapabilities","WMTSCapabilities","combinedHash","dataSourceIdStr","dataSourceId","handleQueryResult_","readAndTypeFeatures_","setUniqueIds_","featureTypes","getSetOlFormatTypes_","opt_types","types","setFeatureType","getFeatureType","combinedDataSources","maxFeatures","getCode","xmlSerializer","getFeatureCommonOptions","_iterator7","_isArray7","_i7","_ref7","featurePrefix","outputFormat","getFeatureDefer","countPromise","getCountOptions","resultType","featureCountXml","writeGetFeature","featureCountRequest","canceler","registerCanceler_","readFeatureCollectionMetadata","numberOfFeatures","getFeatureOptions","featureRequestXml","featureRequest","_iterator6","_isArray6","_i6","_ref6","FEATURE_COUNT","projCode","_iterator8","_isArray8","_i8","_ref8","INFO_FORMAT","activeDimensionsSet","filtrableLayerName","_iterator9","_isArray9","_i9","_ref9","filterParamValue","filterParamValues","wmsSource","ImageWMS","wmsGetFeatureInfoUrl","getGetFeatureInfoUrl","combinableDataSources","notCombinableDataSources","_iterator10","_isArray10","_i10","_ref10","combined","_iterator11","_isArray11","_i11","_ref11","combinableDataSource","_iterator12","_isArray12","_i12","_ref12","_iterator13","_isArray13","_i13","_ref13","ds","_iterator14","_isArray14","_i14","_ref14","CombinedDataSources","RuleHelper","WFSAttribute","complexTypeElements","readFromComplexTypeElement_","Attribute","XSDAttribute","Helper_exports","Helper_classCallCheck","cache_","getDataSourceAttributes","wfsDescribeFeatureTypeDefer","ogcLayerName","Querent","ol_interaction_Snap_js__WEBPACK_IMPORTED_MODULE_8__","mapViewChangePromise_","treeCtrlsUnregister_","unregisterAllTreeCtrl_","ol_events_js__WEBPACK_IMPORTED_MODULE_5__","$watchCollection","registerTreeCtrl_","handleMapMoveEnd_","wfsConfig","getWFSConfig_","stateWatcherUnregister","handleTreeCtrlStateChange_","ol_Collection_js__WEBPACK_IMPORTED_MODULE_6__","requestDeferred","deactivateItem_","childLayers","ogcServerName","wfsSupport","urlWfs","activateItem_","edge","pixelTolerance","vertex","loadItemFeatures_","loadAllItems_","ol_format_WFS_js__WEBPACK_IMPORTED_MODULE_7__","extend","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_11__","featureListenerKeys_","keyPressListenerKey_","myFeatures_","vectorSource_","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_10__","centerFeatures_","ol_interaction_Translate_js__WEBPACK_IMPORTED_MODULE_9__","ol_index_js__WEBPACK_IMPORTED_MODULE_1__","ol_events_js__WEBPACK_IMPORTED_MODULE_4__","handleKeyUp_","setState_","addFeature_","handleFeaturesAdd_","handleFeaturesRemove_","getTargetElement","cursor","removeFeature_","ol_Feature_js__WEBPACK_IMPORTED_MODULE_3__","ol_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_5__","getGeometryCenterPoint_","centerFeature","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_8__","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_6__","ol_extent_js__WEBPACK_IMPORTED_MODULE_2__","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_7__","keyCode","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_13__","modified_","changingFeature_","pixelTolerance_","coordinate_","centerCoordinate_","overlay_","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_12__","ngeo_interaction_common_js__WEBPACK_IMPORTED_MODULE_1__","getDefaultModifyStyleFunction","ol_interaction_Pointer_js__WEBPACK_IMPORTED_MODULE_7__","handleDown_","handleDragEvent","handleDrag_","handleUp_","ol_events_js__WEBPACK_IMPORTED_MODULE_6__","ol_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_8__","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_9__","getCenterCoordinate_","ol_Feature_js__WEBPACK_IMPORTED_MODULE_5__","willModifyFeatures_","ngeo_CustomEvent_js__WEBPACK_IMPORTED_MODULE_2__","f","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_10__","getFlatMidpoint","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_11__","getFlatInteriorPoint","ol_extent_js__WEBPACK_IMPORTED_MODULE_4__","oldX","oldY","centerX","centerY","dx1","dy1","dx0","dy0","a0","atan2","rotate","ol_Collection_js__WEBPACK_IMPORTED_MODULE_0__","ol_OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_5__","menuOptions","opt_overlayOptions","TOP_LEFT","clickOutListenerKey_","contentEl","class","autoClose_","autoClose","headerEl","appendTo","actionsEl","actions_","data-name","prepend","ol_Overlay_js__WEBPACK_IMPORTED_MODULE_4__","handleActionClick_","handleMapPointerMove_","documentElement","handleClickOut_","getElement","closest","originalEvent","Element","contains","file_saver__WEBPACK_IMPORTED_MODULE_1__","opt_fileType","fileType","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_0__","isSafari","blob","Blob","ngModel","transclude","bindings","resizable","closable","component","_class","$element_","$scope_","modal_","attr","dialog","draggable","modal","e","$onDestroy","ngeo_message_Message_js__WEBPACK_IMPORTED_MODULE_2__","container","container_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","el","html","delay","_compare","str1","str2","toLowerCase","_lpad","chr","_indexOf","arr","defaultSettings","dateSettings","days","daysShort","months","monthsShort","meridiem","ordinal","suffixes","2","3","separators","validParts","intParts","tzParts","tzClip","DateFormatter","_extend","_typeof","getMonth","vDate","vFormat","vSettings","year","month","day","hour","min","sec","vDateFlag","vTimeFlag","vFormatParts","vDateParts","vDatePart","iDatePart","vMonth","vMeriIndex","mer","vMeriOffset","guessDate","vDateStr","vParts","vDigit","iPart","iSec","substr","setMonth","setDate","vYear","getFullYear","setFullYear","setHours","setSeconds","parseFormat","vChar","fmt","self","backslash","doFormat","D","w","getDate","N","getDay","z","a","Y","W","F","M","L","A","G","B","H","getUTCHours","getUTCMinutes","getUTCSeconds","getHours","h","getSeconds","u","getMilliseconds","exec","I","UTC","O","tzo","P","T","Z","U","str","gmfShortenerCreateUrl","gmfShortenerCreateUrl_","getShortUrl","postShortUrl_","short_url","status","sendShortUrl","shortUrl","email","URL_MAX_LEN","URL_PATH_MAX_LEN","proj4__WEBPACK_IMPORTED_MODULE_3__","epsg21781def","ngeo_proj_somerc_js__WEBPACK_IMPORTED_MODULE_2__","defs","ol_proj_proj4_js__WEBPACK_IMPORTED_MODULE_1__","ol_proj_js__WEBPACK_IMPORTED_MODULE_0__","setExtent","ol_interaction_Draw_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_interaction_Measure_js__WEBPACK_IMPORTED_MODULE_1__","br","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_3__","proj","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_3__","component_exports","Service","Notification","modalComponent","gmfAuthenticationTemplateUrl","gmfAuthenticationTemplateUrl_","allowPasswordReset","allowPasswordChange","passwordValidator","forcePasswordChange","AuthenticationController_","gmfAuthenticationService","gmfAuthenticationService_","notification_","changingPassword","changePasswordModalShown","resetPasswordModalShown","loginVal","pwdVal","oldPwdVal","newPwdVal","newPwdConfVal","setError_","isPasswordValid","notValidMessage","changePasswordReset","resetError_","resetPasswordSuccessFn","userMustChangeItsPassword","Message","authentication_module","BackgroundLayerMgr_exports","Observable","mapUids_","BACKGROUNDLAYERGROUP_NAME","mapUid","previous","bgGroup","setAt","removeAt","current","getOpacityBgLayer","setOpacityBgLayer","baseBgLayer","Layer","hasUpdates","updatedDimensions","TileWMS","BackgroundLayerMgr","backgroundlayerselector_component_exports","Themes","gmfBackgroundlayerselectorTemplateUrl","opacityOptions","select","ngeoBackgroundLayerMgr","bgLayer","bgLayers","opacityLayer","backgroundLayerMgr_","indexOpa","findIndex","getSetBgLayerOpacity","setLayer","backgroundlayerselector_component","gmfEnumerateAttribute","gmfEnumerateAttribute_","prepareFiltrableDataSource","prepareFiltrableDataSourceDefer","enumAttributes","enumeratedAttributes","getAttributeValues","choice","Helper","EnumerateAttribute","datasource_Helper","datasource_OGC","OGC_classCallCheck","_ngeoDatasourceOGC","gmfLayer_","OGC_createClass","WFSAliases_exports","WFSAliases_classCallCheck","describe","WFSAliases","Manager_exports","gmfWFSAliases","Manager_classCallCheck","ngeoBackgroundLayerMgr_","ngeoDataSources_","gmfWFSAliases_","dataSourcesCache_","treeCtrlCache_","handleNgeoBackgroundLayerChange_","setDatasourceMap","setDimensions","clearDataSources_","clearTreeCtrlCache_","promiseThemes","createDataSource_","promiseBgLayers","backgroundLayers","backgroundLayer","handleTreeManagerRootChildrenChange_","newTreeCtrls","treeCtrls","newTreeCtrl","getTreeCtrlCacheItem_","addTreeCtrlToCache_","removeTreeCtrlCacheItem_","ol_obj","meta","queryLayers","wmsLayers","childLayer","isSingleTile","identifierAttributeField","timeAttribute","filterRulesWatcherUnregister","hasFilters","isVisible","handleDataSourceFilterRulesChange_","timeLowerValueWatcherUnregister","timeUpperValueWatcherUnregister","wmsLayer","handleDataSourceTimeValueChange_","SyncLayertreeMap","Image","treeDataSource","siblingDataSourceIds","_source$updateParams","Tile","layersList","previousBackgroundLayer","currentBackgroundLayer","TreeManager","Manager","datasource_module","DataSourceBeingFiltered","ExternalDataSourcesManager","Disclaimer_exports","ngeoCreatePopup","createPopup_","messages_","closeMessage_","getMessageUid_","popup","button","Popup","Disclaimer","disclaimer_component_exports","EventHelper","ngeoDisclaimer","external","visibility","msgs_","disclaimer_","eventHelper_","dataLayerGroup_","DATALAYERGROUP_NAME","registerLayer_","handleLayersAdd_","Base","handleLayersRemove_","unregisterLayer_","layerUid","showDisclaimerMessage_","closeDisclaimerMessage_","disclaimer_component","SavedFilters_exports","SavedFilters_classCallCheck","currentDataSourceId_","currentDataSourceItems_","localStorageKey_","items_","items","rePopulateCurrentDataSourceItems_","loadItemsFromLocalStorage_","JSON","parse","indexOfItem","idx","saveItemsInLocalStorage_","stringify","SavedFilters_createClass","Item","customRules","directedRules","SavedFilters","ruleComponent_exports","draw_component","FeatureOverlay","datepickerComponent","ToolActivateMgr","ngeoRuleTemplateUrl","RuleController_","_operators","_operatorsShortFormat","ruleComponent_classCallCheck","featureOverlay","toolGroup","operatorType","spatialOperatorType","temporalOperatorType","operatorsShortFormat","timeRangeMode","widget","createDate_","createWeekAgoDate_","interval","timeValueMode","toolActivate_","unlisteners_","drawActive","drawToolActivate","ToolActivate","drawnFeatures","selectedFeatures","Modify","Rotate","Style","Fill","Translate","handleActiveChange_","supportedTypes","GeometryType","hasExpression","isActive","editToolIsActive","toggle","toggleChoiceSelection","onDateSelected","onDateRangeSelected","opt_timeDelta","setTime","timeToDate","toLocaleDateString","oldActive","ruleFeature","cloneFeature","decorate","drawnFeature","geom_Geometry","getRuleGeometryType","removeMenu_","Menu","ruleComponent","filter_component_exports","MapQuerent","ngeoFilterTemplateUrl","aRuleIsActive","datasource","FilterController_","ngeoMapQuerent","component_classCallCheck","ngeoMapQuerent_","geometryAttributes","otherAttributes","ruleUnlisteners_","handleARuleIsActiveChange_","registerRule_","hasARule","getRulesWithValue_","getData","createAndAddCustomRule","setCondition","removeCustomRule","unregisterRule_","handleRuleActiveChange_","unlistener","filter_component","filterselectorComponent_exports","FeatureOverlayMgr","gmfFilterselectorTemplateUrl","gmfDataSourceBeingFiltered","gmfDataSourcesHelper","gmfSavedFilters","ngeoFeatureOverlayMgr","filterselectorComponent_classCallCheck","handleSelectedDataSourceChange_","gmfDataSourcesHelper_","currentDataSourceItems","saveFilterManageModalShown","gmfUser_","handleGmfUserFunctionalitiesChange_","filtrableDataSources","filtrableLayerNodeNames_","gmfDataSources_","readyDataSource","ruleCache_","saveFilterSaveModalShown","saveFilterName","enableDataSourceRegistration_","handleEnableDataSourceRegistrationChange_","defaultFiltrableDataSourceName_","toggleDataSourceRegistration_","usrFunc","newDataSourceRegistration","register","isDataSourceFiltrable_","opt_notify","gettext","msgs","p1","p2","p3","currentDataSourceId","getRuleCacheItem_","setRuleCacheItem_","directedFilterAttributes","directedAttributes","saveFilterShowModal","saveFilterSave","alreadyExist","saveFilterLoadItem","filterItem","cacheItem","saveFilterManage","saveFilterRemoveItem","RuleCache","RuleCacheItem","filterselectorComponent","filters_module","timeSliderComponent_exports","pre","computeDates_","sliderUi","sDate","eDate","wmstime","getClosestValue_","dates","sliderOptions","isModeRange","timeValueList","getTimeValueList_","initialOptions_","max","endDate","nextDate","timestamp","leftIndex","rightIndex","leftDistance","rightDistance","targetDate","startDate","bestDate","bestDistance","distance","getLocalizedDate","timeSliderComponent","layertree_module","layertree_component","datasourceGroupTreeComponent","permalink_module","Permalink","ShareService","shareComponent","map_component_exports","prop","Map","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","map_component","scaleselector_exports","ngeoScaleselectorTemplateUrl","scaleselector_ScaleselectorController","ScaleselectorController","scalesExpr","scales","zoomLevels","newLength","sort","optionsExpr","getOptions_","resolutionChangeKey_","currentScale","currentZoom","getZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","zoom","changeZoom","setZoom","handleResolutionChange_","scaleselector","map_module","recenter","resizemap","src_map_component_exports","Snapping","manageResize","gmfPermalink","ngeoFeatureOverlayMgr_","gmfPermalink_","src_map_component","mousepositionComponent_exports","misc_filters","gmfMapMousepositionTemplateUrl","projections","control_","initOlControl_","removeControl","MousePosition","className","coordinateFormat","filterAndArgs","undefinedHTML","addControl","code","mousepositionComponent","src_map_module","Config_exports","columnDefs","selectedRows","getRowUid","isRowSelected","getSelectedCount","getSelectedRows","row","selectRow","toggleRow","selectAll","unselectAll","rowId","invertSelection","Config","grid_component_exports","ngeoGridTemplateUrl","configuration","sortedBy","sortAscending","floatTheadConfig","scrollContainer","$table","columnName","asc","attributes1","attributes2","clickRow","shiftKey","isShiftKeyOnly_","platformModifierKey","isPlatformModifierKeyOnly_","clickRow_","selectRange_","isSelected","targetUid","posClickedRow","posSelectedRows","currentRow","posClosestRow","currentPos","currentDistance","rangeEnd","preventTextSelection","altKey","metaKey","ctrlKey","grid_component","gridComponent_exports","Csv","gmfDisplayquerygridTemplateUrl","featuresStyleFn","selectedFeatureStyleFn","getMapFn","removeEmptyColumnsFn","maxResultsFn","maxRecenterZoomFn","mergeTabs","ngeoCsvDownload","queryOptions","ngeoCsvDownload_","maxResults","gridSources","loadedGridSources","selectedTab","removeEmptyColumns_","maxRecenterZoom","featuresForSources_","highlightFeatures_","filename_","newQueryResult","oldQueryResult","updateData_","unregisterSelectWatcher_","featuresOverlay","featuresStyle","highlightFeaturesOverlay","highlightFeatureStyle","Stroke","mapFn","getGridSources","sourceLabel","hasOneWithTooManyResults_","getMergedSources_","makeGrid_","escapeValue","collectData_","firstSourceId","selectTab","isInteger","toEscape","gridSource","allSources","mergedSources","mergedSourceId","getMergedSource_","mergeSourceId","currentMergeSourceId","mergeSource","allProperties","featureGeometriesNames","featuresForSource","featureGeometryName","cleanProperties_","removeEmptyColumnsFn_","keysToKeep","keyToRemove","gridConfig","getGridConfiguration_","ol_uid","column","newSelected","oldSelectedRows","onSelectionChanged_","updateFeatures_","reflowGrid_","activePane","removeClass","getActiveGridSource","isOneSelected","getSelectedRowCount","zoomToSelection","ol_extent","maxZoom","downloadCsv","startDownload","gridComponent","swipe_exports","POINTER_EVENTS","mouse","move","touch","pointer","touches","changedTouches","clientX","clientY","getEvents","pointerTypes","eventType","pointerType","eventName","eventHandlers","totalX","totalY","startCoords","lastPos","makeSwipeDirective_","directiveName","direction","$verticalSwipe","MAX_HORIZONTAL_DISTANCE","MAX_HORIZONTAL_RATIO","MIN_VERTICAL_DISTANCE","swipeHandler","valid","isDefined","deltaY","deltaX","validSwipe","triggerHandler","$event","swipe","windowComponent_exports","gmfDisplayquerywindowTemplateUrl","$animateProvider","classNameFilter","draggableContainment","defaultCollapsedFn","desktop","showUnqueriedLayers","collapsed","showUnqueriedLayers_","sourcesFilter","selectedSource","currentResult","isNext","updateQueryResult_","containment","minHeight","minWidth","setCurrentResult_","collectFeatures_","highlightCurrentFeature_","setHighlight","hasChanged","lastFeature","getResultLength","animate_","queryResult","isFirst","isLast","getFeatureValues","opt_lastFeature","setSelectedSource","windowComponent","extraModule","search_module","search_component","FulltextSearch","selectorComponent_exports","theme_Manager","gmfThemeSelectorTemplateUrl","gmfThemeManager","setThemes_","setTheme","selectorComponent","theme_module","displaywindowComponent_exports","ngeoMessageDisplaywindowTemplateUrl","displaywindowComponent_classCallCheck","clearOnClose","contentTemplate","contentScope","compile_","handle","compiled","clear_","displaywindowComponent_createClass","trustAsResourceUrl","displaywindowComponent","controlComponent_exports","control","Control","controlComponent","filereaderComponent_exports","fileContent","changeEvent","fileReader","FileReader","onload","readAsText","files","filereaderComponent","getBrowserLanguage_exports","availableLanguages","nav","browserLanguages","languages","language","browserLanguage","systemLanguage","userLanguage","getBrowserLanguage","misc_extraModule","AutoProjection","btnComponent","debounce","sortableComponent","Time","mapQueryComponent_exports","elem","clickEventKey_","pointerMoveEventKey_","hit","forEachLayerAtPixel","sourceids","cursorHover","mapQueryComponent","WfsPermalink_WfsPermalinkService","ngeoWfsPermalinkOptions","maxFeatures_","wfsTypes_","wfsTypes","wfsType","defaultFeatureNS_","defaultFeatureNS","defaultFeaturePrefix_","defaultFeaturePrefix","pointRecenterZoom_","pointRecenterZoom","clearResult_","typeName","createFilters_","filterGroups","issueRequest_","showFeatures","getExtent_","padding","resultSource","reduce","or_","filterGroup","filterDef","cond","equalTo","and_","joinFilters_","joinFn","combinedFilters","currentFilter","WfsPermalink","AbstractAppController_exports","permalink_","gmfAuthentication","updateHasEditableLayers_","userChange","roleId","open_panel","filterSelectorActive","previousThemeName","updateCurrentTheme_","searchDatasources","labelKey","groupValues","groupActions","srid","gmfDataSourcesManager","defaultDimensions","dim","leftNavVisible","rightNavVisible","queryFill","queryStroke","queryFeatureStyle","queryActive","queryAutoClear","printPanelActive","printActive","measurePointActive","measureLengthActive","drawFeatureActive","drawProfilePanelActive","stateManager","tmhDynamicLocale","defaultLang","langUrls","initLanguage","mapToolsGroup","queryToolActivate","measurePointActivate","measureLengthActivate","drawFeatureActivate","drawProfilePanelActivate","printPanelActivate","$root","setDefaultBackground_","updateCurrentBackgroundLayer_","skipPermalink","background","getBackgroundLayer","defaultBasemapArray","default_basemap","defaultBasemapLabel","gmfx","openIframePopup","opt_width","opt_height","opt_apply","displaywindowUrl","openPopup_","openTextPopup","displaywindowContent","displaywindowTitle","displaywindowOpen","displaywindowWidth","displaywindowHeight","cgxp","tools","openInfoWindow","displaywindowDraggableContainment","getLayerByLabels","labels","switchLanguage","setCurrentLanguage","loadRemote","urlLanguage","fallbackThemeName","defaultThemeNameFromFunctionalities","getLocationIcon","arrow","arrowWrapper","statemanager_module","tmhDynamicLocaleProvider","angularLocaleScript","localeLocationPattern","ModifyCircle_exports","handleDragEvent_","vertexFeature_","lastPixel_","rBush_","RBush","snappedToVertex_","dragSegments_","FeatureProperties","writeCircleGeometry_","handlePointerAtPixel_","removeFeatureSegmentData_","rBush","nodesToRemove","rings","segment","segmentData","insert","createOrUpdateVertexFeature_","vertexFeature","compareIndexes_","vertexExtent","segmentDataMatches","getInExtent","componentSegments","segmentDataMatch","Polygon","setGeometryCoordinates_","MeasureAzimut","MapBrowserPointerEvent","getInteracting","handlingDownUpSequence","pixelCoordinate","lowerLeft","upperRight","box","closestSegment","vertexPixel","getPixelFromCoordinate","pixel1","pixel2","squaredDist1","squaredDist2","dist","vertexSegments","ModifyCircle","ModifyRectangle_exports","vectorPoints_","params_","featureGeom","pointSource","corners","pointFeatures","cornerPoint","cornerFeature","corner","siblingX","siblingY","boxFeature","previousFeature","nextFeature","initializeParams_","origin","originPoint","originCoordinate","originPixel","siblingXPoint","siblingXCoordinate","siblingXPixel","vectorX","vectorXMagnitude","siblingYPoint","siblingYCoordinate","siblingYPixel","vectorY","vectorYMagnitude","destinationPixel","b2Pixel","calculateNewPixel_","b2Coordinate","c2Pixel","c2Coordinate","destination","vector","aVector","abScalarProduct","deltaVector","ModifyRectangle","Modify_exports","otherFeatures_","utils","circleFeatures_","rectangleFeatures_","Interaction","interactions","currentMap","getFeatureCollection_","isCircle","isRectangle","Controller_exports","ngeoFeatures","featureHelper_","ngeoFeatures_","drawPoint","measureLength","measureArea","measureAzimut","drawRectangle","drawText","registerInteraction","handleActiveChange","handleDrawEnd","sketch","draw_features","Controller","point_exports","drawFeatureCtrl","Draw","rectangle_exports","geometryFunction","maxPoints","rectangle","text_exports","draw_text","area_exports","contMsg","MeasureArea","measure_area","azimut_exports","measure_azimut","length_exports","MeasureLength","measure_length","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_12__","ngeo_misc_EventHelper_js__WEBPACK_IMPORTED_MODULE_5__","filter_","interaction_","ngeo_GeometryType_js__WEBPACK_IMPORTED_MODULE_2__","ol_interaction_Draw_js__WEBPACK_IMPORTED_MODULE_11__","ngeo_interaction_MeasureLength_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_interaction_MeasureArea_js__WEBPACK_IMPORTED_MODULE_3__","ol_index_js__WEBPACK_IMPORTED_MODULE_7__","ol_events_js__WEBPACK_IMPORTED_MODULE_9__","handleDrawEnd_","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_6__","toMulti","ol_Collection_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_format_XSDAttribute_js__WEBPACK_IMPORTED_MODULE_0__","promises_","handleGetAttributes_","gmfRasterUrl","getRaster","Param","X","handleGetRaster_","proj4_projections_somerc_js__WEBPACK_IMPORTED_MODULE_1__","proj4__WEBPACK_IMPORTED_MODULE_0__","Proj","ngeoColorpickerTemplateUrl","colors","DEFAULT_COLORS","setColor","ol_extent_js__WEBPACK_IMPORTED_MODULE_1__","stringToCoordinates","getProjectionList","projectionsCodes","toUpperCase","tryProjections","viewProjection","opt_projections","tryProjectionsWithInversion","defaultParams_","query","queryParams","Promise","catch","ngeo_download_service_js__WEBPACK_IMPORTED_MODULE_0__","encoding_","extension_","includeHeader_","quote_","separator_","generateCsv","translatedColumnHeaders","columnHeader","header","getRow_","dataRows","rowValues","matchAllQuotesRegex","doubleQuote","ol_Map_js__WEBPACK_IMPORTED_MODULE_1__","stateExpr","animationDelayKey","animationDelay","cancelAnimationFrame","gmf_permalink_ShareService_js__WEBPACK_IMPORTED_MODULE_0__","gmfPermalinkShareTemplateUrl","enableEmail","ShareComponentController","gmfShareService","gmfShareService_","shortLink","showLengthWarning","successfullySent","errorOnsend","errorOnGetShortUrl","when","permalink","$valid","ngeo_datasource_DataSources_js__WEBPACK_IMPORTED_MODULE_0__","gmfLayertreeDatasourceGroupTreeTemplateUrl","getGroupUid","toggleDataSource","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_statemanager_Location_js__WEBPACK_IMPORTED_MODULE_0__","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_24__","ngeoDebounce","mapViewPropertyChangeEventKey_","ngeoDebounce_","featureOverlay_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","ngeoAutoProjection_","sourceProjections_","projectionCodes","crosshairFeature_","crosshairStyle_","crosshairStyle","ol_style_RegularShape_js__WEBPACK_IMPORTED_MODULE_22__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_21__","radius2","mapTooltip_","featureHashFormat_","ngeo_format_FeatureHash_js__WEBPACK_IMPORTED_MODULE_8__","encodeStyles","propertiesType","ngeo_format_FeatureProperties_js__WEBPACK_IMPORTED_MODULE_9__","fillOpacity","fontColor","fontSize","isBox","isLabel","pointRadius","strokeColor","ol_events_js__WEBPACK_IMPORTED_MODULE_18__","handleBackgroundLayerManagerChange_","goog_asserts_js__WEBPACK_IMPORTED_MODULE_15__","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","TREE_OPACITY","TREE_GROUP_OPACITY","getFeatures","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","gmf_theme_Manager_js__WEBPACK_IMPORTED_MODULE_1__","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","registerExternalDSGroup_","initLayers_","getMapCenter","targetProjection","reprojectedCenter","getMapZoom","getMapCrosshair","crosshair","setMapCrosshair","opt_center","crosshairCoordinate","ol_Feature_js__WEBPACK_IMPORTED_MODULE_19__","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_20__","getMapTooltip","setMapTooltip","tooltipText","tooltipPosition","div","ngeo_Popover_js__WEBPACK_IMPORTED_MODULE_3__","DIMENSIONS","unregisterMap_","getFeature","registerMap_","oeFeature","ngeo_olcs_constants_js__WEBPACK_IMPORTED_MODULE_7__","Permalink3dParam","ENABLED","setCenter","wfsPermalinkData","getWfsPermalinkData_","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","default_theme","groupsNames","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_2__","enable","groupLayers","groupLayersArray","ol_array_js__WEBPACK_IMPORTED_MODULE_17__","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_14__","removeNgeoFeature_","ol_index_js__WEBPACK_IMPORTED_MODULE_16__","handleNgeoFeaturesChange_","wfsLayer","numGroups","createFilterGroup_","showFeaturesParam","paramKey","gmfExtDSManager","layerNamesString","urlsString","ExtDSSeparator","LIST","urls","groupLayerNamesString","groupLayerNames","NAMES","serviceType","ngeo_datasource_OGC_js__WEBPACK_IMPORTED_MODULE_6__","getCapabilitiesDefer","responses","ngeo_datasource_Group_js__WEBPACK_IMPORTED_MODULE_5__","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","unregisterExternalDSGroup_","_this8$ngeoStateManag","wmsGroupLayerNames","wmsDataSource","wmtsGroupLayerNames","wmtsDataSource","startsWith","_iterator15","_isArray15","_i15","_ref15","ngeo_draw_features_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_misc_debounce_js__WEBPACK_IMPORTED_MODULE_10__","ngeo_misc_EventHelper_js__WEBPACK_IMPORTED_MODULE_11__","ngeo_statemanager_module_js__WEBPACK_IMPORTED_MODULE_12__","OpenLayersLayerProperties","regexp","key1","key2","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_13__","ngeoDatePickerTemplateUrl","sdateOptions","initialMinDate","initialMaxDate","onClose","selectedDate","datepicker","edateOptions","dp","ngeoTime","ngeoTime_","changeMonth","changeYear","sdate","edate","$watchGroup","newDates","oldDates","isDate","promiseId","handleGetAttributeValues_","isValidFileSize","fileSize","isWmsGetCap","isWmtsGetCap","readyState","LOADING","abort","onerror","reason","onprogress","load","opt_cancelP","ol_style_Text_js__WEBPACK_IMPORTED_MODULE_28__","viewConfig","ol_proj_js__WEBPACK_IMPORTED_MODULE_14__","ol_obj_js__WEBPACK_IMPORTED_MODULE_15__","mapViewConfig","gmf_controllers_AbstractAppController_js__WEBPACK_IMPORTED_MODULE_0__","ol_Map_js__WEBPACK_IMPORTED_MODULE_17__","pixelRatio","mapPixelRatio","ol_View_js__WEBPACK_IMPORTED_MODULE_18__","controls","mapControls","ol_control_ScaleLine_js__WEBPACK_IMPORTED_MODULE_19__","getElementById","ol_control_Zoom_js__WEBPACK_IMPORTED_MODULE_20__","zoomInTipLabel","zoomOutTipLabel","ol_control_Rotate_js__WEBPACK_IMPORTED_MODULE_21__","tipLabel","mapInteractions","ol_interaction_js__WEBPACK_IMPORTED_MODULE_22__","pinchRotate","altShiftDragRotate","loadTilesWhileAnimating","loadTilesWhileInteracting","loginActive","toolsActive","modalShareShown","editFeatureActive","routingfeatureActive","googleStreetViewActive","googleStreetViewStyle","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_27__","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_25__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_26__","importDataSourceActive","tooltip","trigger","selector","off","drawFeatureLayer","editFeatureVectorLayer","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_23__","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_24__","ol_Collection_js__WEBPACK_IMPORTED_MODULE_16__","editFeatureActivate","ngeo_misc_ToolActivate_js__WEBPACK_IMPORTED_MODULE_10__","googleStreetViewActivate","scaleSelectorOptions","profileLine","ol_index_js__WEBPACK_IMPORTED_MODULE_13__","gmf_contextualdata_module_js__WEBPACK_IMPORTED_MODULE_1__","gmf_drawing_module_js__WEBPACK_IMPORTED_MODULE_2__","gmf_editing_module_js__WEBPACK_IMPORTED_MODULE_3__","gmf_permalink_shareComponent_js__WEBPACK_IMPORTED_MODULE_4__","gmf_print_component_js__WEBPACK_IMPORTED_MODULE_5__","gmf_profile_module_js__WEBPACK_IMPORTED_MODULE_6__","gmf_raster_component_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_draw_features_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_map_resizemap_js__WEBPACK_IMPORTED_MODULE_9__","ngeo_query_bboxQueryComponent_js__WEBPACK_IMPORTED_MODULE_11__","gmf_import_module_js__WEBPACK_IMPORTED_MODULE_12__","VectorEncoder_exports","geojsonFormat","GeoJSON","PrintStyleTypes_","PrintStyleType","MultiLineString","MultiPoint","MultiPolygon","encodeVectorLayer","geojsonFeatures","mapfishStyleObject","version","originalFeature","styleData","getStyleFunction","origGeojsonFeature","writeFeatureObject","isOriginalFeatureAdded","styleId","geojsonFeature","styledFeature","geometryType","featureStyleProp","encodeVectorStyle","geoJson","styleType","styleObject","symbolizers","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeVectorStylePolygon","encodeVectorStyleLine","encodeVectorStylePoint","encodeTextStyle","encodeVectorStyleFill","symbolizer","getColor","rgbArrayToHex","encodeVectorStyleStroke","Icon","getSrc","externalGraphic","graphicOpacity","graphicWidth","graphicHeight","getRotation","math","RegularShape","getPoints","graphicName","sizeShape","rotationShape","opacityShape","strokeShape","fillShape","strokeColorRgba","strokeOpacity","strokeDashstyle","getLineDash","getWidth","getLineCap","strokeLinecap","xAlign","yAlign","olTextAlign","getTextAlign","olTextBaseline","getTextBaseline","labelAlign","labelRotation","fontStyle","getFont","fontWeight","fontFamily","haloColor","haloOpacity","haloRadius","fillColorRgba","labelXOffset","getOffsetX","labelYOffset","getOffsetY","VectorEncoder","Service_exports","vectorEncoder_","printNativeAngle_","ref","opt_httpConfig","httpConfig","createSpec","dpi","layout","customAttributes","specMap","encodeMap_","currentLanguage","viewCenter","viewResolution","viewRotation","mapLayerGroup","layer_a","layer_b","getZIndex","encodeLayer","encodeImageLayer_","encodeTileLayer_","layer_Vector","encodeImageWmsLayer_","getUrl","encodeWmsLayer_","url_url","URL","customParams","searchParams","baseURL","getAbsoluteUrl_","imageFormat","useNativeAngle","href","encodeURI","decodeURI","encodeTileWmtsLayer_","encodeTileWmsLayer_","tileGrid","getTileGrid","tilegrid_WMTS","matrixIds","getMatrixIds","matrices","tileRange","getFullTileRange","identifier","scaleDenominator","getMetersPerUnit","tileSize","ol_size","getTileSize","topLeftCorner","getOrigin","matrixSize","maxX","minX","maxY","minY","getDimensions","dimensionKeys","getWmtsUrl_","dimensionParams","getFormat","getMatrixSet","requestEncoding","getRequestEncoding","getVersion","getUrls","createReport","printSpec","getStatus","getReportUrl","getCapabilities","createPrintServiceFactory","editFeatureSelectorComponent_exports","editFeatureComponent","treeCtrlsWatcherUnregister_","editables","editableTreeCtrls","selectedEditableTreeCtrl","stopEditing","editFeatureSelectorComponent","module_exports","EditFeature","XSDAttributes","FeatureHashStyleType","FeatureHash_exports","opt_options","TextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","propertiesFunction_","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","StyleTypes_","readFeature","CHAR64_","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","encodedStyles","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","encodeStyleFill_","opt_propertyName","fillColorHex","strokeColorHex","readLineStringGeometry_","flatCoordinates","decodeCoordinates_","setFlatCoordinates","GeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","readPointGeometry_","readMultiPointGeometry_","multiPoint","readPolygonGeometry_","readMultiPolygonGeometry_","endss","polygons","multipolygon","setStyleInFeature_","getStyleProperties_","setStyleProperties_","castValue_","numProperties","boolProperties","parts","keyVal","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","GEOMETRY_WRITERS_","opt_flatCoordinates","encodedCoordinates","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","attributesAndStylesText","attributesText","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","encoded","writeFeaturesText","geometryWriter","transformedGeometry","format_Feature","RasterService","gmfRaster","$compile_","gmfRaster_","hidePopover","preparePopover_","setContent_","showPopover","content_","mapProjection","ol_proj","getRasterSuccess","setAttribute","Overlay","autoPan","autoPanAnimation","contentDirective_","gmfContextualdatacontentTemplateUrl","featureStyleComponent_exports","colorpickerComponent","handleColorSet_","handleFeatureSet_","propName","newColor","getSetAngle","getSetProperty_","getSetName","getSetShowLabel","getSetOpacity","getSetShowMeasure","getSetSize","getSetStroke","featureStyleComponent","drawFeatureComponent_exports","exportfeaturesComponent","longPressTimeout_","selectedFeature","listSelectionInProgress_","nameProperty","drawUid","selectFeatureFromList","getFeaturesArray","clearFeatures","handleMapTouchStart_","handleMapTouchEnd_","setTimeout","clearTimeout","drawFeatureComponent","wmsCapabilityLayertreeComponent_exports","gmfWmscapabilitylayertreenodeTemplateUrl","gmfExternalDataSourcesManager","createAndAddDataSource","getUid","wmsCapabilityLayertreeComponent","wmtsCapabilityLayertreeComponent_exports","gmfWmtscapabilitylayertreTemplateUrl","wmtsCapabilityLayertreeComponent_classCallCheck","wmtsCapabilityLayertreeComponent","importdatasourceComponent_exports","gmfImportdatasourceTemplateUrl","importdatasourceComponent_classCallCheck","fileInput_","hasError","hasErrorPromise_","Mode","ONLINE","modes","LOCAL","wmsCapabilities","wmtsCapabilities","serversEngine_","servers","serverUrls","Bloodhound","datumTokenizer","datum","originalDatumTokenizers","tokenizers","whitespace","datumTokenizers","originalDatumTokenizer","queryTokenizer","identify","local","$urlInput","$connectBtn","typeahead","hint","highlight","minLength","ttAdapter","ev","suggestion","focus","browse","connect","startWorking_","stopWorking_","opt_hasError","nameAndSize","importdatasourceComponent","searchDirective_exports","typeaheadOptionsExpr","typeaheadOptions","typeaheadDatasetsExpr","typeaheadListenersExpr","typeaheadListeners_","typeaheadListeners","adaptListeners_","dataset","cursorchange","autocomplete","empty","datasetsempty","searchDirective","createGeoJSONBloodhound_exports","opt_filter","opt_featureProjection","opt_dataProjection","opt_remoteOptions","bloodhoundOptions","remote","prepare","settings","parsedResponse","featureCollection","remoteOptions","createGeoJSONBloodhound","createLocationSearchBloodhound_exports","sourceProjection","EPSG21781","origins","results","parseBbox","geom_st_box2d","removeHtmlTags","extractName","bhOptions","createLocationSearchBloodhound","d3","bisector","d3_array","axisBottom","d3_axis","axisLeft","scaleLinear","d3_scale","d3_selection","area","d3_shape","d3Elevation","light","margin","top","right","bottom","left","hoverCallback","outCallback","distanceExtractor","linesConfiguration","numberOfLines","bisectDistance","poiExtractor","styleDefs","poiLabelAngle","i18n","xAxisLabel","xAxis","yAxisLabel","yAxis","formatter","xhover","units","toPrecision","yhover","ele","xtick","ytick","lightXAxis","svg","scaleModifier","xFactor","xUnits","xDomain","profile","selection","each","clientWidth","clientHeight","y0","y1","firstLineName","zExtractor","svgEnter","enter","gEnter","clearPois","xHover","domain","yDomain","elevationsValues","transition","yHover","tickFormat","tickValues","ticks","tickSize","clearHighlight","mouseX","x0","invert","showPois","elevation","elevations","elevationsRef","lineName","xtranslate","pois","pe","profileData","poiEnterG","exit","elevationComponent_d3","elevationComponent_exports","optionsAttr","elevationData","poiData","refreshData","origHoverCallback","origOutCallback","elevationComponent","gmfProfileTemplateUrl","getLinesConfigurationFn","getHoverPointStyleFn","getNbPointsFn","getOptionsFn","gmfProfileJsonUrl","pointHoverOverlay_","gmfProfileJsonUrl_","linesConfiguration_","layersNames_","nbPoints_","currentPoint","yUnits","profileHighlight","measureTooltip_","snappedPoint_","profileLabels_","profileOptions","pointerMoveKey_","isErrored","updateEventsListening_","newLine","oldLine","update_","hoverPointStyle","hoverPointStyleFn","getZFactory_","getDist_","hoverCallback_","outCallback_","optionsFn","assertObject","getJsonProfile_","onPointerMove_","getEventCoordinate","closestPoint","getClosestPoint","pixelDist","getDistanceOnALine_","pointOnLine","distOnLine","fakeExtent","forEachSegment","firstPoint","lastPoint","getTooltipHTML_","elevationName","translatedElevationName","DistDecimal","lineConfiguration","getLayersNames","nbPoints","method","paramSerializer","getProfileDataSuccess_","getProfileDataError_","hasDistance","rows","drawLineComponent_exports","getStyleFn","overlay","styleFn","drawLineComponent","ol_events_condition_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_query_MapQuerent_js__WEBPACK_IMPORTED_MODULE_0__","ol_interaction_DragBox_js__WEBPACK_IMPORTED_MODULE_1__","gmf_raster_RasterService_js__WEBPACK_IMPORTED_MODULE_0__","ngeo_misc_debounce_js__WEBPACK_IMPORTED_MODULE_2__","gmfElevationwidgetTemplateUrl","loading","toggleActive_","inViewport_","pointerStop_","getRasterSuccess_","getRasterError_","widgetComponent_","WidgetController_","selectedElevationLayer","ol_math_js__WEBPACK_IMPORTED_MODULE_1__","extentHalfHorizontalDistance_","extentHalfVerticalDistance_","INCHES_PER_METER_","DOTS_PER_INCH_","createPrintMaskPostcompose","opt_rotation","frameState","viewState","viewportWidth","viewportHeight","ol_has_js__WEBPACK_IMPORTED_MODULE_0__","ppi","ipm","extentHalfWidth","extentHalfHeight","beginPath","moveTo","lineTo","closePath","drawPrintZoneWithRotation_","drawPrintZone_","minx","miny","maxx","maxy","diagonal","gamma","atan","omega","x1","x2","y2","x3","y3","x4","y4","getOptimalScale","mapSize","mapResolution","printMapSize","printMapScales","mapWidth","mapHeight","scaleWidth","scaleHeight","optimal","getOptimalResolution","printMapScale","dotsPerMeter","resolutionX","resolutionY","getBottomLeftCorner","getBottomRightCorner","getUpLeftCorner","getUpRightCorner","gmf_authentication_Service_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_map_FeatureOverlayMgr_js__WEBPACK_IMPORTED_MODULE_5__","ngeo_misc_FeatureHelper_js__WEBPACK_IMPORTED_MODULE_6__","ngeo_print_Service_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_print_Utils_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_query_MapQuerent_js__WEBPACK_IMPORTED_MODULE_9__","gmfPrintTemplateUrl","PrintStateEnum","NOT_IN_USE","PRINTING","ERROR_ON_REPORT","CAPABILITIES_NOT_LOADED","ERROR_ON_GETCAPABILITIES","rotateMask","fieldValues","hiddenAttributeNames","attributesOut","ngeoPrintUtils","ngeoCreatePrint","gmfPrintUrl","gmfPrintState","gmfPrintState_","featureOverlayLayer_","ngeoPrintUtils_","ngeoPrint_","ngeoQueryResult_","scaleInput","requestCanceler_","statusTimeoutPromise_","onDragPreviousMousePosition_","rotationTimeoutPromise_","postComposeListenerKey_","pointerDragListenerKey_","mapViewResolutionChangeKey_","curRef_","formats_","layouts_","layout_","paperSize_","layoutInfo","scaleManuallySelected_","rotationInput_","setRotation","postcomposeListener_","capabilities_","currentThemes_","togglePrintPanel_","print","currentThemes","getRotationFn","getScaleFn","goog_asserts_js__WEBPACK_IMPORTED_MODULE_3__","ol_array_js__WEBPACK_IMPORTED_MODULE_10__","getOptimalScale_","getCapabilities_","parseCapabilities_","ol_events_js__WEBPACK_IMPORTED_MODULE_11__","onPointerDrag_","render","layouts","updateFields_","mapInfo","isAttributeInCurrentLayout_","clientInfo","updateCustomFields_","legend","dpis","rawType","simpleAttributes","previousAttributes","default","ol_math_js__WEBPACK_IMPORTED_MODULE_16__","p0x","p0y","p1x","p1y","centerToP0","centerToP1","boost","increment","getDataSource_","field","getLegend_","ol_Map_js__WEBPACK_IMPORTED_MODULE_15__","setView","ol_layers","new_ol_layers","print_native_angle","server_name","layer_names","printLayers","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_12__","setLayerGroup","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_14__","spec","handleCreateReportSuccess_","handleCreateReportError_","resetPrintStates_","opt_printState","datasourceObj","columns","datasourceArr","table","getStatus_","handleGetStatusSuccess_","mfResp","classes","icons","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_13__","getMetadataLegendImage_","legendImage","setLayout","layoutName","getSetScale","contrainRes","constrainResolution","setResolution","setDpi","isState","stateEnumKey","ngeo_misc_php_date_formatter_js__WEBPACK_IMPORTED_MODULE_0__","fromJson","ngeo_misc_datetimepickerComponent_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_misc_EventHelper_js__WEBPACK_IMPORTED_MODULE_2__","ngeoAttributesTemplateUrl","disabled","form","updating_","handleInputChange","ngeo_misc_FeatureHelper_js__WEBPACK_IMPORTED_MODULE_0__","$menu","aria-labelledby","$item","handleMenuItemClick_","handleElementClick_","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_2__","parentElement","sortable","resetUpDragDrop","handleClassName","callbackFn","callbackCtx","sortableElement","sortableOptions","axis","ui-sortable-helper","ui","oldIndex","newIndex","Function","ngeoPopoverCtrl","anchorElm","bodyElm","shown","popover","placement","dismissPopover","unbind","anchorComponent","contentComponent","hide","PopoverController_","onMouseDown","clickEvent","gmf_layertree_TreeManager_js__WEBPACK_IMPORTED_MODULE_1__","gmf_search_FulltextSearch_js__WEBPACK_IMPORTED_MODULE_2__","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_misc_AutoProjection_js__WEBPACK_IMPORTED_MODULE_6__","ngeo_misc_colorpickerComponent_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_search_module_js__WEBPACK_IMPORTED_MODULE_9__","ngeo_message_popoverComponent_js__WEBPACK_IMPORTED_MODULE_8__","gmfSearchTemplateUrl","gmfSearchTemplateUrl_","inputValue","placeholder","datasources","featuresStyles","clearButton","colorChooser","coordinatesProjections","additionalListeners","onInitCallback","SearchController_","ngeoAutoProjection","ngeoSearchCreateGeoJSONBloodhound","gmfSearchFulltextSearch","fullTextSearch_","ngeoSearchCreateGeoJSONBloodhound_","styles_","datasets","displayColorPicker","listeners","coordProj","initStyles_","getSearchStyle_","ol_obj_js__WEBPACK_IMPORTED_MODULE_13__","initDatasets_","setStyleColor","mergeListeners_","select_","close_","datasetsempty_","searchQuery","resultIndex","mapZoom","fulltextsearch_","filterLayername_","filterAction_","createDataset_","datasetTitle","groupsKey","typeaheadDatasetOptions","createSearchCoordinates_","display","templates","componentScope","compile","typeaheadDataset","createAndInitBloodhound_","act","opt_layerName","featureLayerName","mapProjectionCode","getBloodhoudRemoteOptions_","bloodhound","ol_proj_js__WEBPACK_IMPORTED_MODULE_15__","initialize","rateLimitWait","xhrFields","ol_uri_js__WEBPACK_IMPORTED_MODULE_21__","interface","suggestions","tt_source","COORDINATES_LAYER_NAME","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_20__","ol_style_RegularShape_js__WEBPACK_IMPORTED_MODULE_18__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_19__","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_17__","ol_style_Circle_js__WEBPACK_IMPORTED_MODULE_16__","customStyles","ol_color_js__WEBPACK_IMPORTED_MODULE_11__","setImage","changed","setTTDropdownVisibility_","ttDropdown","onClearButton","ttmenu","inputs","blur","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_12__","layer_name","leaveSearch_","selectFromGMF_","featureGeometry","_loop2","actionName","actionData","datasourcesActionsHaveAddLayer","groupAction","silent","fitArray","menu","opt_zoom","ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_14__","fitOptions","selected","selectedIndex","arr1","arr2","dereg1","dereg2","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_0__","ngeoLayertreeTemplateUrl","ol_Overlay_js__WEBPACK_IMPORTED_MODULE_1__","originalEl","closeEl_","contentEl_","one","gmf_datasource_DataSourceBeingFiltered_js__WEBPACK_IMPORTED_MODULE_1__","gmf_datasource_ExternalDataSourcesManager_js__WEBPACK_IMPORTED_MODULE_2__","gmf_permalink_Permalink_js__WEBPACK_IMPORTED_MODULE_3__","gmf_layertree_datasourceGroupTreeComponent_js__WEBPACK_IMPORTED_MODULE_4__","gmf_layertree_SyncLayertreeMap_js__WEBPACK_IMPORTED_MODULE_5__","gmf_layertree_TreeManager_js__WEBPACK_IMPORTED_MODULE_6__","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_layertree_component_js__WEBPACK_IMPORTED_MODULE_10__","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_11__","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_12__","ngeo_misc_WMSTime_js__WEBPACK_IMPORTED_MODULE_14__","gmfLayertreeTemplate","openLinksInNewWindow","gmfSyncLayertreeMap","goog_asserts_js__WEBPACK_IMPORTED_MODULE_8__","gmfSyncLayertreeMap_","groupNodeStates_","ngeo_misc_syncArrays_js__WEBPACK_IMPORTED_MODULE_13__","updateDimensions_","ol_layer_Layer_js__WEBPACK_IMPORTED_MODULE_16__","updateLayerDimensions_","ol_obj_js__WEBPACK_IMPORTED_MODULE_17__","ol_source_WMTS_js__WEBPACK_IMPORTED_MODULE_20__","ol_source_TileWMS_js__WEBPACK_IMPORTED_MODULE_19__","ol_source_ImageWMS_js__WEBPACK_IMPORTED_MODULE_18__","once","toggleActive","getNodeState","updateWMSTimeLayerState","layertreeCtrl","ngeo_datasource_OGC_js__WEBPACK_IMPORTED_MODULE_9__","getLegendIconURL","iconUrl","legendRule","gmfOgcServer","getLegendsObject","legendsObject","gmfLayerDefaultName","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_15__","wmtsLegendURL","layersNames","getScale_","getNumberOfLegendsObject","displayMetadata","metadataURL","afterReorder","groupNodes","currentTreeCtrls","removeNode","removeAllNodes","nodesCount","getResolutionStyle","zoomToResolution","toggleNodeLegend","legendNodeId","toggleFiltrableDataSource","isNodeLegendVisible","supportsCustomization","supportsLegend","supportsOpacityChange","appmodule_exports","$compileProvider","debugInfoEnabled","appmodule","coordinate_exports","toXY","nesting","objectediting_coordinate","geom_exports","isEmpty","SimpleGeometry","objectediting_geom","Query_exports","getQueryableLayerNodesDefered_","getQueryableLayersInfo","allQueryableLayersInfo","getQueryableLayersInfoFromThemes","queryableLayersInfo","layerNode","k","kk","getFeatureInfo","layerInfo","infoFormat","layersParam","WMSGetFeatureInfo","QUERY_LAYERS","Query","getWMSFeatureComponent_exports","gmfObjectEditingQuery","gmfObjectEditingQuery_","getWMSFeatureComponent","DrawRegularPolygonFromClick_exports","angle_","radius_","sides_","sides","enable_","disable_","fromCircle","makeRegular","DrawRegularPolygonFromClick","createregularpolygonfromclickComponent_exports","interactionListenerKey_","createregularpolygonfromclickComponent","toolsComponent_exports","createfeatureComponent","copyFromActive","deleteFromActive","process","queryableLayerInfo","requiresLayer","geomTypePolygon","toolActiveNames_","registerTool_","ProcessType","ADD","eraseActive","DELETE","drawTriangleActive","triangleAngle","oeToolsOptions","triangleRadius","regularPolygonRadius","toolActiveName","opt_requiresLayer","handleToolActiveChange_","NAMESPACE_","toolActivate","toolsComponent","jsts","io","OL3Parser","gmfObjecteditingTemplateUrl","layerNodeId","selectedQueryableLayerInfo","queryableLayerListShown","featureHasGeom","skipGeometryChange_","jstsOL3Parser_","geometryChanges_","defaultStyles_","defaultStylesWoVertice_","dirtyStyles_","dirtyStylesWoVertice_","modifyToolActivate_","toolsToolActivate_","handleGetQueryableLayersInfo_","UPDATE","INSERT","defaultColor","dirtyColor","initializeStyles_","setFeatureStyle_","resetGeometryChanges_","handleDeleteFeature_","undo","cloneGeometry_","isStateInsert","refreshWMSLayer_","handleModifyInteractionModifyEnd_","handleWindowBeforeUnload_","handleSketchFeaturesAdd_","undoAllChanges_","jstsBuffered","write","opt_incVertice","incVertice","rgbaColor","style_Circle","modifyActive","returnValue","sketchGeom","jstsGeom","jstsSketchGeom","jstsProcessedGeom","union","intersects","difference","processedGeom","layersInfo","getFeatureDefered_","GEOM_TYPE","ID","PROPERTY","THEME","getGeomType","getLayerNodeId","Location","objectediting_module","epsg2056def","somerc","lib","proj4","oeEditActive","AbstractDesktopController","resolutions","oeEditToolActivate","gmfObjectEditingManager","oeGeomType","oeLayerNodeId","searchCoordinatesProjections","scaleSelectorValues","elevationLayers","profileLinesconfiguration","aster","srtm","mousePositionProjections","raven_default","addPlugin","angular_default","install"],"mappings":"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","file":"oeedit.668db4.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([355,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","const exports = {};\n\nexports.assert = function(condition, opt_message, var_args) {\n  return condition;\n};\n\nexports.assertNumber = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertString = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertFunction = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertObject = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertArray = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertBoolean = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertElement = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertInstanceof = function(value, type, opt_message, var_args) {\n  return value;\n};\n\nexports.assertObjectPrototypeIsIntact = function() {};\n\nexport default exports;\n","/**\n * @module ngeo.GeometryType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  CIRCLE: 'Circle',\n  /**\n   * @type {string}\n   * @export\n   */\n  LINE_STRING: 'LineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_LINE_STRING: 'MultiLineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POINT: 'MultiPoint',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POLYGON: 'MultiPolygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  POINT: 'Point',\n  /**\n   * @type {string}\n   * @export\n   */\n  POLYGON: 'Polygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  RECTANGLE: 'Rectangle',\n  /**\n   * @type {string}\n   * @export\n   */\n  TEXT: 'Text'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function() {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayerWMTS.matrixSet,\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Several OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Rule\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @implements {ngeox.rule.Rule}\n */\nconst exports = class {\n\n  /**\n   * The abstract class for all filter rules.\n   *\n   * Rules are used to define filters that can be applied on data sources.\n   * A rule is usually a combination of 3 things:\n   *\n   * - a property name, for example 'city_name'\n   * - an operator, for example 'is equal to'\n   * - and an expression, for example 'Chicoutimi'.\n   *\n   * A rule is useful to hold those properties and change them on the fly.\n   * For example, changing an operator from 'is equal to' to 'like'.\n   *\n   * Also, a rule is especially useful for its `value` getter, which returns\n   * the combination of properties described above or `null` if there are some\n   * missing.  The `value` getter can be watched and used when the value is\n   * not null.\n   *\n   * When the operator is `between`, the `lowerBoundary` and `upperBoundary`\n   * properties are used instead of `expression`.\n   *\n   * @struct\n   * @param {!ngeox.rule.RuleOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * Whether the rule is active or not. Used by the `ngeo-rule` component.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.active_ = options.active === true;\n\n    /**\n     * The expression of the rule. The expression and boundaries are mutually\n     * exclusives.\n     *\n     * Note: exported (instead of private) due to the problem with the\n     * compiler. See the getter/setter methods below...  As a setter, the\n     * `expression` property would support being bond to an `ng-model`. Without\n     * it, it can't unless we expose the property directly.\n     *\n     * @type {?number|string}\n     * @export\n     */\n    this.expression = options.expression !== undefined ?\n      options.expression : null;\n\n    /**\n     * The lower boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.lowerBoundary_ = options. lowerBoundary !== undefined ?\n      options.lowerBoundary : null;\n\n    /**\n     * The rule operator.\n     * @type {?string}\n     * @private\n     */\n    this.operator_ = options.operator || null;\n\n    /**\n     * The upper boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.upperBoundary_ = options. upperBoundary !== undefined ?\n      options.upperBoundary : null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the rule is a custom one or not.\n     * @type {boolean}\n     * @private\n     */\n    this.isCustom_ = options.isCustom !== false;\n\n    /**\n     * The human-readable name of the rule.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n\n    /**\n     * A list of rule operators.\n     * @type {?Array.<string>}\n     * @private\n     */\n    this.operators_ = options.operators || null;\n\n    /**\n     * The property name (a.k.a. the attribute name).\n     * @type {string}\n     * @private\n     */\n    this.propertyName_ = options.propertyName;\n\n    /**\n     * The type of rule.\n     * @type {string}\n     * @private\n     */\n    this.type_ = googAsserts.assert(options.type);\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Array.<!ol.EventsKey>}\n     * @protected\n     */\n    this.listenerKeys = [];\n\n  }\n\n  // === Dynamic property getters/setters ===\n\n  /**\n   * @return {boolean} Active\n   * @export\n   */\n  get active() {\n    return this.active_;\n  }\n\n  /**\n   * @param {boolean} active Active\n   * @export\n   */\n  set active(active) {\n    this.active_ = active;\n  }\n\n  /**\n   * The `expression` property does not have conventionnal getter/setters\n   * method because of a limitation of the compiler. It doesn't support\n   * yet having such methods being extended in child classes.\n   *\n   * See: https://github.com/google/closure-compiler/issues/1089\n   *\n   * @return {?number|string} Expression\n   * @export\n   */\n  getExpression() {\n    return this.expression;\n  }\n\n  /**\n   * @param {?number|string} expression Expression\n   * @export\n   */\n  setExpression(expression) {\n    this.expression = expression;\n  }\n\n  /**\n   * @return {?number} Lower boundary\n   * @export\n   */\n  get lowerBoundary() {\n    return this.lowerBoundary_;\n  }\n\n  /**\n   * @param {?number} lowerBoundary Lower boundary\n   * @export\n   */\n  set lowerBoundary(lowerBoundary) {\n    this.lowerBoundary_ = lowerBoundary;\n  }\n\n  /**\n   * @return {?string} Operator\n   * @export\n   */\n  get operator() {\n    return this.operator_;\n  }\n\n  /**\n   * @param {?string} operator Operator\n   * @export\n   */\n  set operator(operator) {\n    this.operator_ = operator;\n  }\n\n  /**\n   * @return {?number} Upper boundary\n   * @export\n   */\n  get upperBoundary() {\n    return this.upperBoundary_;\n  }\n\n  /**\n   * @param {?number} upperBoundary Upper boundary\n   * @export\n   */\n  set upperBoundary(upperBoundary) {\n    this.upperBoundary_ = upperBoundary;\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {boolean} Is custom.\n   * @export\n   */\n  get isCustom() {\n    return this.isCustom_;\n  }\n\n  /**\n   * @return {string} name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n  /**\n   * @return {?Array.<string>} Operators\n   * @export\n   */\n  get operators() {\n    return this.operators_;\n  }\n\n  /**\n   * @return {string} Property name\n   * @export\n   */\n  get propertyName() {\n    return this.propertyName_;\n  }\n\n  /**\n   * @return {string} Type\n   * @export\n   */\n  get type() {\n    return this.type_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {?ngeox.rule.RuleSimpleValue|ngeox.rule.RuleRangeValue} Value.\n   * @export\n   */\n  get value() {\n    let value = null;\n\n    const expression = this.getExpression();\n    const lowerBoundary = this.lowerBoundary;\n    const operator = this.operator;\n    const propertyName = this.propertyName;\n    const upperBoundary = this.upperBoundary;\n\n    if (operator) {\n      if (operator === exports.OperatorType.BETWEEN ||\n          operator === exports.TemporalOperatorType.DURING) {\n        if (lowerBoundary !== null && upperBoundary !== null) {\n          value = {\n            operator,\n            lowerBoundary,\n            propertyName,\n            upperBoundary\n          };\n        }\n      } else {\n        if (expression !== null) {\n          value = {\n            expression,\n            operator,\n            propertyName\n          };\n        }\n      }\n    }\n\n    return value;\n  }\n\n  // === Other utility methods ===\n\n  /**\n   * Reset the following properties to `null`: expression, lowerBoundary,\n   * upperBoundary.\n   * @export\n   */\n  reset() {\n    if (this.getExpression() !== null) {\n      this.setExpression(null);\n    }\n    if (this.lowerBoundary !== null) {\n      this.lowerBoundary = null;\n    }\n    if (this.upperBoundary !== null) {\n      this.upperBoundary = null;\n    }\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.listenerKeys.forEach(olEvents.unlistenByKey);\n    this.listenerKeys.length = 0;\n  }\n\n};\n\n\n/**\n * @enum {string}\n */\nexports.OperatorType = {\n  BETWEEN: '..',\n  EQUAL_TO: '=',\n  GREATER_THAN: '>',\n  GREATER_THAN_OR_EQUAL_TO: '>=',\n  LESSER_THAN: '<',\n  LESSER_THAN_OR_EQUAL_TO: '<=',\n  LIKE: '~',\n  NOT_EQUAL_TO: '!='\n};\n\n\n/**\n * @enum {string}\n */\nexports.SpatialOperatorType = {\n  CONTAINS: 'contains',\n  INTERSECTS: 'intersects',\n  WITHIN: 'within'\n};\n\n\n/**\n * @enum {string}\n */\nexports.TemporalOperatorType = {\n  BEGINS: 'time_start',\n  DURING: 'time_during',\n  ENDS: 'time_end',\n  EQUALS: 'time_equal'\n};\n\n\nexport default exports;\n","/**\n * @module gmf\n */\nconst exports = {};\n\n/**\n * The default template base URL for modules, used as-is by the template cache.\n * @type {string}\n */\n\n/**\n * @const\n * @export\n */\nexports.DATALAYERGROUP_NAME = 'data';\n\n/**\n * @const\n * @export\n */\nexports.EXTERNALLAYERGROUP_NAME = 'external';\n\n/**\n * @const\n * @export\n */\nexports.COORDINATES_LAYER_NAME = 'gmfCoordinatesLayerName';\n\n\n/**\n * @enum {string}\n */\nexports.PermalinkParam = {\n  BG_LAYER: 'baselayer_ref',\n  EXTERNAL_DATASOURCES_NAMES: 'eds_n',\n  EXTERNAL_DATASOURCES_URLS: 'eds_u',\n  FEATURES: 'rl_features',\n  MAP_CROSSHAIR: 'map_crosshair',\n  MAP_TOOLTIP: 'map_tooltip',\n  MAP_X: 'map_x',\n  MAP_Y: 'map_y',\n  MAP_Z: 'map_zoom',\n  TREE_GROUPS: 'tree_groups',\n  WFS_LAYER: 'wfs_layer',\n  WFS_NGROUPS: 'wfs_ngroups',\n  WFS_SHOW_FEATURES: 'wfs_showFeatures'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.ToolActivate\n */\n/**\n * A simple object that can be managed by `ngeo.misc.ToolActivateMgr`.\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {Object} toolContext An object which acts as the context for the tool.\n * @param {string} activePropertyName The name of a boolean property on\n *      `toolContext` which represents the active state of the tool.\n * @constructor\n * @struct\n * @ngname ngeoToolActivate\n * @export\n */\nconst exports = function(toolContext, activePropertyName) {\n\n  /**\n   * A getter function to get the active state of the tool.\n   * @return {boolean} Is active.\n   * @export\n   */\n  this.getActive = function() {\n    return toolContext[activePropertyName];\n  };\n\n  /**\n   * A setter function to set the active state of the tool.\n   * @param {boolean} newVal New active state.\n   * @export\n   */\n  this.setActive = function(newVal) {\n    toolContext[activePropertyName] = newVal;\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.FeatureHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olArray from 'ol/array.js';\nimport * as olColor from 'ol/color.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Provides methods for features, such as:\n *  - style setting / getting\n *  - measurement\n *  - export\n *\n * @constructor\n * @struct\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.$filter} $filter Angular filter.\n * @ngdoc service\n * @ngname ngeoFeatureHelper\n * @ngInject\n */\nconst exports = function($injector, $filter) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.decimals_ = undefined;\n  if ($injector.has('ngeoMeasureDecimals')) {\n    this.decimals_ = $injector.get('ngeoMeasureDecimals');\n  }\n\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.precision_ = undefined;\n  if ($injector.has('ngeoMeasurePrecision')) {\n    this.precision_ = $injector.get('ngeoMeasurePrecision');\n  }\n\n  /**\n   * @type {!ngeox.number}\n   */\n  this.numberFormat_ = /** @type {ngeox.number} */ ($filter('number'));\n\n  /**\n   * @type {!ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ ($filter('ngeoUnitPrefix'));\n\n  /**\n   * @type {!ngeox.numberCoordinates}\n   */\n  this.ngeoNumberCoordinates_ = /** @type {ngeox.numberCoordinates} */ ($filter('ngeoNumberCoordinates'));\n\n  /**\n   * Filter function to display point coordinates or null to don't use any filter.\n   * @type {function(*):string|null}\n   * @private\n   */\n  this.pointFilterFn_ = null;\n\n  /**\n   * Arguments to apply to the point filter function.\n   * @type {Array.<*>}\n   * @private\n   */\n  this.pointFilterArgs_ = [];\n\n  if ($injector.has('ngeoPointfilter')) {\n    const filterElements = $injector.get('ngeoPointfilter').split(':');\n    const filterName = filterElements.shift();\n    const filter = this.$filter_(filterName);\n    googAsserts.assertFunction(filter);\n    this.pointFilterFn_ = filter;\n    this.pointFilterArgs_ = filterElements;\n  } else {\n    this.pointFilterFn_ = null;\n  }\n\n  /**\n   * @type {!ol.proj.Projection}\n   * @private\n   */\n  this.projection_;\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n\n};\n\n\n/**\n * @param {!ol.proj.Projection} projection Projection.\n * @export\n */\nexports.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n// === STYLE METHODS ===\n\n\n/**\n * Set the style of a feature using its inner properties and depending on\n * its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @param {boolean=} opt_select Whether the feature should be rendered as\n *     selected, which includes additional vertex and halo styles.\n * @export\n */\nexports.prototype.setStyle = function(feature, opt_select) {\n  const styles = this.getStyle(feature);\n  if (opt_select) {\n    if (this.supportsVertex_(feature)) {\n      styles.push(this.getVertexStyle());\n    }\n    styles.unshift(this.getHaloStyle_(feature));\n  }\n  feature.setStyle(styles);\n};\n\n\n/**\n * Create and return a style object from a given feature using its inner\n * properties and depending on its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @return {!Array.<!ol.style.Style>} The style object.\n * @export\n */\nexports.prototype.getStyle = function(feature) {\n  const type = this.getType(feature);\n  let style;\n\n  switch (type) {\n    case ngeoGeometryType.LINE_STRING:\n      style = this.getLineStringStyle_(feature);\n      break;\n    case ngeoGeometryType.POINT:\n      style = this.getPointStyle_(feature);\n      break;\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      style = this.getPolygonStyle_(feature);\n      break;\n    case ngeoGeometryType.TEXT:\n      style = this.getTextStyle_(feature);\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  let styles;\n  if (style.constructor === Array) {\n    styles = /** @type {!Array.<!ol.style.Style>}*/ (style);\n  } else {\n    styles = [style];\n  }\n\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with linestring geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getLineStringStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n\n  const styles = [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPointStyle_ = function(feature) {\n  const size = this.getSizeProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const styles = [new olStyleStyle({\n    image: new olStyleCircle({\n      radius: size,\n      fill: new olStyleFill({\n        color: color\n      })\n    })\n  })];\n  // Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    const font_size = 10;\n    // https://reeddesign.co.uk/test/points-pixels.html\n    const point_to_px = 1.3;\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue,\n        size: font_size,\n        offsetY: -(size + (font_size / 2) * textLabelValues.length * point_to_px + 4)\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * Get an optional number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number|undefined}, The attribute value\n */\nexports.prototype.optNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (value !== undefined) {\n    if (typeof value == 'string') {\n      return +value;\n    } else {\n      return googAsserts.assertNumber(value);\n    }\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Get a number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number}, The attribute value\n */\nexports.prototype.getNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (typeof value == 'string') {\n    return +value;\n  } else {\n    return googAsserts.assertNumber(value);\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with polygon geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPolygonStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const opacity = this.getOpacityProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n\n  // fill color with opacity\n  const fillColor = color.slice();\n  fillColor[3] = opacity;\n\n  const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n\n  const styles = [new olStyleStyle({\n    fill: new olStyleFill({\n      color: fillColor\n    }),\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  if (showMeasure || showLabel) {\n    if (showMeasure && azimut !== undefined) {\n      // Radius style:\n      const line = this.getRadiusLine(feature, azimut);\n      const length = ngeoInteractionMeasure.getFormattedLength(\n        line, this.projection_, this.precision_, this.unitPrefixFormat_);\n\n      styles.push(new olStyleStyle({\n        geometry: line,\n        fill: new olStyleFill({\n          color: fillColor\n        }),\n        stroke: new olStyleStroke({\n          color: color,\n          width: strokeWidth\n        }),\n        text: this.createTextStyle_({\n          text: length,\n          angle: ((azimut % 180) + 180) % 180 - 90\n        })\n      }));\n\n      // Azimut style\n      styles.push(new olStyleStyle({\n        geometry: new olGeomPoint(line.getLastCoordinate()),\n        text: this.createTextStyle_({\n          text: `${this.numberFormat_(azimut, this.decimals_)}°`,\n          size: 10,\n          offsetX: Math.cos((azimut - 90) * Math.PI / 180) * 20,\n          offsetY: Math.sin((azimut - 90) * Math.PI / 180) * 20\n        })\n      }));\n\n      //Label Style\n      if (showLabel) {\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: this.getNameProperty(feature),\n            offsetY: -8,\n            exceedLength: true\n          })\n        }));\n      }\n    } else {\n      //Label Style\n      const textLabelValues = [];\n      if (showMeasure) {\n        textLabelValues.push(this.getMeasure(feature));\n      }\n      if (showLabel) {\n        textLabelValues.push(this.getNameProperty(feature));\n      }\n      if (showLabel ||  showMeasure) {\n        // display both label using  \\n\n        const textLabelValue = textLabelValues.join('\\n');\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: textLabelValue,\n            exceedLength: true\n          })\n        }));\n      }\n    }\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry, rendered as text.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getTextStyle_ = function(feature) {\n\n  return new olStyleStyle({\n    text: this.createTextStyle_({\n      text: this.getNameProperty(feature),\n      size: this.getSizeProperty(feature),\n      angle: this.getAngleProperty(feature),\n      color: this.getRGBAColorProperty(feature),\n      width: this.getStrokeProperty(feature)\n    })\n  });\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature to create the editing styles with.\n * @return {!Array.<!ol.style.Style>} List of style.\n * @export\n */\nexports.prototype.createEditingStyles = function(feature) {\n  // (1) Style definition depends on geometry type\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  const styles = [];\n\n  const geom = feature.getGeometry();\n  console.assert(geom);\n  const type = geom.getType();\n\n  if (type === 'Point') {\n    styles.push(\n      new olStyleStyle({\n        image: new olStyleCircle({\n          radius: width * 2,\n          fill: new olStyleFill({\n            color: blue\n          }),\n          stroke: new olStyleStroke({\n            color: white,\n            width: width / 2\n          })\n        }),\n        zIndex: Infinity\n      })\n    );\n  } else {\n    if (type === 'LineString') {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: white,\n            width: width + 2\n          })\n        })\n      );\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width\n          })\n        })\n      );\n    } else {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width / 2\n          }),\n          fill: new olStyleFill({\n            color: [255, 255, 255, 0.5]\n          })\n        })\n      );\n    }\n\n    // (2) Anything else than 'Point' requires the vertex style as well\n    styles.push(this.getVertexStyle(true));\n  }\n\n  return styles;\n};\n\n\n/**\n * Create and return a style object to be used for vertex.\n * @param {boolean=} opt_incGeomFunc Whether to include the geometry function\n *     or not. One wants to use the geometry function when you want to draw\n *     the vertex of features that don't have point geometries. One doesn't\n *     want to include the geometry function if you just want to have the\n *     style object itself to be used to draw features that have point\n *     geometries. Defaults to `true`.\n * @return {!ol.style.Style} Style.\n * @export\n */\nexports.prototype.getVertexStyle = function(opt_incGeomFunc) {\n  const incGeomFunc = opt_incGeomFunc !== undefined ? opt_incGeomFunc : true;\n\n  const options = {\n    image: new olStyleRegularShape({\n      radius: 6,\n      points: 4,\n      angle: Math.PI / 4,\n      fill: new olStyleFill({\n        color: [255, 255, 255, 0.5]\n      }),\n      stroke: new olStyleStroke({\n        color: [0, 0, 0, 1]\n      })\n    })\n  };\n\n  if (incGeomFunc) {\n    options.geometry = function(feature) {\n      const geom = feature.getGeometry();\n\n      if (geom.getType() == 'Point') {\n        return;\n      }\n\n      let innerMultiCoordinates;\n      let multiCoordinates = [];\n      let coordinates = [];\n      let i, ii;\n      if (geom instanceof olGeomLineString) {\n        coordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomMultiLineString) {\n        multiCoordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomPolygon) {\n        coordinates = geom.getCoordinates()[0];\n      } else if (geom instanceof olGeomMultiPolygon) {\n        innerMultiCoordinates = geom.getCoordinates();\n      }\n\n      if (innerMultiCoordinates) {\n        for (i = 0, ii = innerMultiCoordinates.length; i < ii; i++) {\n          multiCoordinates = multiCoordinates.concat(innerMultiCoordinates[i]);\n        }\n      }\n      for (i = 0, ii = multiCoordinates.length; i < ii; i++) {\n        coordinates = coordinates.concat(multiCoordinates[i]);\n      }\n\n      if (coordinates.length) {\n        return new olGeomMultiPoint(coordinates);\n      } else {\n        return geom;\n      }\n    };\n  }\n\n  return new olStyleStyle(options);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Whether the feature supports vertex or not.\n * @private\n */\nexports.prototype.supportsVertex_ = function(feature) {\n  const supported = [\n    ngeoGeometryType.LINE_STRING,\n    ngeoGeometryType.POLYGON,\n    ngeoGeometryType.RECTANGLE\n  ];\n  const type = this.getType(feature);\n  return olArray.includes(supported, type);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getHaloStyle_ = function(feature) {\n  const type = this.getType(feature);\n  let style;\n  const haloSize = 3;\n\n  switch (type) {\n    case ngeoGeometryType.POINT:\n      const size = this.getSizeProperty(feature);\n      style = new olStyleStyle({\n        image: new olStyleCircle({\n          radius: size + haloSize,\n          fill: new olStyleFill({\n            color: [255, 255, 255, 1]\n          })\n        })\n      });\n      break;\n    case ngeoGeometryType.LINE_STRING:\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      const strokeWidth = this.getStrokeProperty(feature);\n      style = new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: strokeWidth + haloSize * 2\n        })\n      });\n      break;\n    case ngeoGeometryType.TEXT:\n      style = new olStyleStyle({\n        text: this.createTextStyle_({\n          text: this.getNameProperty(feature),\n          size: this.getSizeProperty(feature),\n          angle: this.getAngleProperty(feature),\n          width: haloSize * 3\n        })\n      });\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  return style;\n};\n\n\n// === PROPERTY GETTERS ===\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * Also delete the 'ngeo_feature_type_' from the ngeo query system.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Filtered properties of the current feature.\n * @export\n */\nexports.getFilteredFeatureValues = function(feature) {\n  const properties = feature.getProperties();\n  delete properties['boundedBy'];\n  delete properties[feature.getGeometryName()];\n  delete properties['ngeo_feature_type_'];\n  return properties;\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {number} Angle.\n * @export\n */\nexports.prototype.getAngleProperty = function(feature) {\n  const angle = +(/** @type {string} */ (\n    feature.get(ngeoFormatFeatureProperties.ANGLE)));\n  googAsserts.assertNumber(angle);\n  return angle;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Color.\n * @export\n */\nexports.prototype.getColorProperty = function(feature) {\n\n  const color = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.COLOR));\n\n  googAsserts.assertString(color);\n\n  return color;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {ol.Color} Color.\n * @export\n */\nexports.prototype.getRGBAColorProperty = function(feature) {\n  return olColor.fromString(this.getColorProperty(feature));\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Name.\n * @export\n */\nexports.prototype.getNameProperty = function(feature) {\n  const name = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.NAME));\n  googAsserts.assertString(name);\n  return name;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Opacity.\n * @export\n */\nexports.prototype.getOpacityProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.OPACITY);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show measure.\n * @export\n */\nexports.prototype.getShowMeasureProperty = function(feature) {\n  let showMeasure = feature.get(ngeoFormatFeatureProperties.SHOW_MEASURE);\n  if (showMeasure === undefined) {\n    showMeasure = false;\n  } else if (typeof showMeasure === 'string') {\n    showMeasure = (showMeasure === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showMeasure);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show feature label.\n * @export\n */\nexports.prototype.getShowLabelProperty = function(feature) {\n  let showLabel = feature.get(ngeoFormatFeatureProperties.SHOW_LABEL);\n  if (showLabel === undefined) {\n    showLabel = false;\n  } else if (typeof showLabel === 'string') {\n    showLabel = (showLabel === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showLabel);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Size.\n * @export\n */\nexports.prototype.getSizeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.SIZE);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Stroke.\n * @export\n */\nexports.prototype.getStrokeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.STROKE);\n};\n\n\n// === EXPORT ===\n\n\n/**\n * Export features in the given format. The projection of the exported features\n * is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {string} formatType Format type to export the features.\n * @export\n */\nexports.prototype.export = function(features, formatType) {\n  switch (formatType) {\n    case exports.FormatType.GPX:\n      this.exportGPX(features);\n      break;\n    case exports.FormatType.KML:\n      this.exportKML(features);\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * Export features in GPX and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportGPX = function(features) {\n  const format = new olFormatGPX();\n  const mimeType = 'application/gpx+xml';\n  const fileName = 'export.gpx';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features in KML and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportKML = function(features) {\n  const format = new olFormatKML();\n  const mimeType = 'application/vnd.google-earth.kml+xml';\n  const fileName = 'export.kml';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features using a given format to a specific filename and download\n * the result to the browser. The projection of the exported features is:\n * `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {!ol.format.Feature} format Format\n * @param {string} fileName Name of the file.\n * @param {string=} opt_mimeType Mime type. Defaults to 'text/plain'.\n * @private\n */\nexports.prototype.export_ = function(features, format, fileName, opt_mimeType) {\n  const mimeType = opt_mimeType !== undefined ? opt_mimeType : 'text/plain';\n\n  // clone the features to apply the original style to the clone\n  // (the original may have select style active)\n  const clones = [];\n  let clone;\n  features.forEach((feature) => {\n    clone = new olFeature(feature.getProperties());\n    this.setStyle(clone, false);\n    clones.push(clone);\n  });\n\n  const writeOptions = this.projection_ ? {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.projection_\n  } : {};\n\n  const data = format.writeFeatures(clones, writeOptions);\n  this.download_(\n    data, fileName, `${mimeType};charset=utf-8`);\n};\n\n\n// === OTHER UTILITY METHODS ===\n\n\n/**\n * @param {!ngeox.style.TextOptions} options Options.\n * @return {!ol.style.Text} Style.\n * @private\n */\nexports.prototype.createTextStyle_ = function(options) {\n  if (options.angle) {\n    const angle = options.angle !== undefined ? options.angle : 0;\n    const rotation = angle * Math.PI / 180;\n    options.rotation = rotation;\n    delete options.angle;\n  }\n\n  options.font = ['normal', `${options.size || 10}pt`, 'Arial'].join(' ');\n\n  if (options.color) {\n    options.fill = new olStyleFill({color: options.color || [0, 0, 0, 1]});\n    delete options.color;\n  }\n\n  options.stroke = new olStyleStroke({\n    color: [255, 255, 255, 1],\n    width: options.width || 3\n  });\n  delete options.width;\n\n  return new olStyleText(options);\n};\n\n\n/**\n * Get the measure of the given feature as a string. For points, you can format\n * the result by setting a filter to apply on the coordinate with the function\n * {@link ngeo.misc.FeatureHelper.prototype.setPointFilterFn}.\n * @param {!ol.Feature} feature Feature.\n * @return {string} Measure.\n * @export\n */\nexports.prototype.getMeasure = function(feature) {\n\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be truthy');\n\n  let measure = '';\n\n  if (geometry instanceof olGeomPolygon) {\n    if (this.getType(feature) === ngeoGeometryType.CIRCLE) {\n      const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n      googAsserts.assertNumber(azimut);\n      const line = this.getRadiusLine(feature, azimut);\n\n      measure = ngeoInteractionMeasureAzimut.getFormattedAzimutRadius(\n        line, this.projection_, this.decimals_, this.precision_, this.unitPrefixFormat_, this.numberFormat_);\n    } else {\n      measure = ngeoInteractionMeasure.getFormattedArea(\n        geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n    }\n  } else if (geometry instanceof olGeomLineString) {\n    measure = ngeoInteractionMeasure.getFormattedLength(\n      geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n  } else if (geometry instanceof olGeomPoint) {\n    if (this.pointFilterFn_ === null) {\n      measure = ngeoInteractionMeasure.getFormattedPoint(\n        geometry, this.decimals_, this.ngeoNumberCoordinates_);\n    } else {\n      const coordinates = geometry.getCoordinates();\n      const args = this.pointFilterArgs_.slice(0);\n      args.unshift(coordinates);\n      measure = this.pointFilterFn_(...args);\n    }\n  }\n\n  return measure;\n};\n\n\n/**\n * Return the type of geometry of a feature using its geometry property and\n * some inner properties.\n * @param {!ol.Feature} feature Feature.\n * @return {string} The type of geometry.\n * @export\n */\nexports.prototype.getType = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n  let type;\n\n  if (geometry instanceof olGeomPoint) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_TEXT)) {\n      type = ngeoGeometryType.TEXT;\n    } else {\n      type = ngeoGeometryType.POINT;\n    }\n  } else if (geometry instanceof olGeomMultiPoint) {\n    type = ngeoGeometryType.MULTI_POINT;\n  } else if (geometry instanceof olGeomPolygon) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n      type = ngeoGeometryType.CIRCLE;\n    } else if (feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE)) {\n      type = ngeoGeometryType.RECTANGLE;\n    } else {\n      type = ngeoGeometryType.POLYGON;\n    }\n  } else if (geometry instanceof olGeomMultiPolygon) {\n    type = ngeoGeometryType.MULTI_POLYGON;\n  } else if (geometry instanceof olGeomLineString) {\n    type = ngeoGeometryType.LINE_STRING;\n  } else if (geometry instanceof olGeomMultiLineString) {\n    type = ngeoGeometryType.MULTI_LINE_STRING;\n  }\n\n  googAsserts.assert(type, 'Type should be thruthy');\n\n  return type;\n};\n\n\n/**\n * This method first checks if a feature's extent intersects with the map view\n * extent. If it doesn't, then the view gets recentered with an animation to\n * the center of the feature.\n * @param {!ol.Feature} feature Feature.\n * @param {!ol.Map} map Map.\n * @param {number=} opt_panDuration Pan animation duration. Defaults to `250`.\n * @export\n */\nexports.prototype.panMapToFeature = function(feature, map,\n  opt_panDuration) {\n\n  const panDuration = opt_panDuration !== undefined ? opt_panDuration : 250;\n  const size = map.getSize();\n  googAsserts.assertArray(size);\n  const view = map.getView();\n  const extent = view.calculateExtent(size);\n  const geometry = feature.getGeometry();\n\n  if (!geometry.intersectsExtent(extent)) {\n    const mapCenter = view.getCenter();\n    googAsserts.assertArray(mapCenter);\n\n    let featureCenter;\n    if (geometry instanceof olGeomLineString) {\n      featureCenter = geometry.getCoordinateAt(0.5);\n    } else if (geometry instanceof olGeomPolygon) {\n      featureCenter = geometry.getInteriorPoint().getCoordinates();\n    } else if (geometry instanceof olGeomPoint) {\n      featureCenter = geometry.getCoordinates();\n    } else {\n      featureCenter = olExtent.getCenter(geometry.getExtent());\n    }\n\n    view.animate({\n      center: mapCenter,\n      duration: panDuration\n    }, {\n      center: featureCenter,\n      duration: panDuration\n    });\n  }\n};\n\n\n/**\n * This method generates a line string geometry that represents the radius for\n * a given azimut. It expects the input geometry to be a circle.\n * @param {!ol.Feature} feature Feature.\n * @param {number} azimut Azimut in degrees.\n * @return {!ol.geom.LineString} The line geometry.\n */\nexports.prototype.getRadiusLine = function(feature, azimut) {\n  const geometry = feature.getGeometry();\n  // Determine the radius for the circle\n  const extent = geometry.getExtent();\n  const radius = (extent[3] - extent[1]) / 2;\n\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const x = Math.cos((azimut - 90) * Math.PI / 180) * radius;\n  const y = -Math.sin((azimut - 90) * Math.PI / 180) * radius;\n  const endPoint = [x + center[0], y + center[1]];\n  return new olGeomLineString([center, endPoint]);\n};\n\n\n/**\n * Return the properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Object.\n * @export\n */\nexports.prototype.getNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const nonSpatialProperties = {};\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      nonSpatialProperties[key] = properties[key];\n    }\n  }\n  return nonSpatialProperties;\n};\n\n\n/**\n * Clear all properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @export\n */\nexports.prototype.clearNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      feature.set(key, undefined);\n    }\n  }\n};\n\n\n// === FORMAT TYPES ===\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.FormatType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GPX: 'GPX',\n  /**\n   * @type {string}\n   * @export\n   */\n  KML: 'KML'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureHelper', [\n  ngeoDownloadService.name,\n  ngeoMiscFilters.name,\n]);\nexports.module.service('ngeoFeatureHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport * as olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.CustomEvent\n */\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS, {optionsFromCapabilities} from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @param {number} ngeoTilesPreloadingLimit Load tiles up to preload levels. By default preload is Infinity,\n *     which means load all tiles on the top of the visible level. See also preload value\n *     in documentation for ol.Layer.Tile.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http, ngeoTilesPreloadingLimit) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * The Tiles Preloading Limit value\n   * @type {number}\n   * @private\n   */\n  this.tilesPreloadingLimit_ = ngeoTilesPreloadingLimit;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {string=} opt_matrixSet Optional WMTS matrix set.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_matrixSet, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: this.tilesPreloadingLimit_\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = optionsFromCapabilities(result, {\n        matrixSet: opt_matrixSet,\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach((l) => {\n      this.getFlatLayers_(l, array);\n    });\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some((layer) => {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  });\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Set ZIndex property to first level children elements\n * @param {ol.layer.Group|ol.layer.Base} element The group of layer with first level children layers.\n * @param {number} ZIndex The ZIndex for children element.\n */\nexports.prototype.setZIndexToFirstLevelChildren = function(element, ZIndex) {\n  if (!(element instanceof olLayerGroup)) {\n    return;\n  }\n  const innerGroupLayers = element.getLayers();\n  innerGroupLayers.forEach(innerLayer => innerLayer.setZIndex(ZIndex));\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', [])\n  .service('ngeoLayerHelper', exports)\n  .value('ngeoTilesPreloadingLimit', Infinity);\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Geometry\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A rule bound to the geometry of a `ol.Feature` object. Changes made\n   * to the geometry are applied to the `expression` property of the rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.GeometryOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = ngeoFormatAttributeType.GEOMETRY;\n\n    super(options);\n\n    // === STATIC properties ===\n\n    const properties = options.featureProperties || {};\n\n    /**\n     * @type {!ol.Feature}\n     * @private\n     */\n    this.feature_ = new olFeature(properties);\n\n    /**\n     * @type {!ol.format.GeoJSON}\n     * @private\n     */\n    this.format_ = new olFormatGeoJSON();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingExpression_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingGeometry_ = false;\n\n    /**\n     * @type {?ol.EventsKey}\n     * @private\n     */\n    this.geometryChangeListenerKey_ = null;\n\n    this.listenerKeys.push(\n      olEvents.listen(\n        this.feature_,\n        `change:${this.feature.getGeometryName()}`,\n        this.handleFeatureGeometryChange_,\n        this\n      )\n    );\n\n    this.setGeometryFromExpression_();\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {!ol.Feature} Feature.\n   * @export\n   */\n  get feature() {\n    return this.feature_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setExpression(expression) {\n    this.updatingExpression_ = true;\n    super.setExpression(expression);\n\n    if (!this.updatingGeometry_) {\n      this.setGeometryFromExpression_();\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingExpression_ = false;\n  }\n\n  // === Calculated property getters/setters ===\n\n  /**\n   * @return {?ol.geom.Geometry} Geometry\n   * @export\n   */\n  get geometry() {\n    return this.feature_.getGeometry() || null;\n  }\n\n  /**\n   * @param {?ol.geom.Geometry} geometry Geometry\n   * @export\n   */\n  set geometry(geometry) {\n    this.feature_.setGeometry(geometry);\n  }\n\n  // === Other methods ===\n\n  /**\n   * Called when the geometry property in the feature changes. Update the\n   * expression accordingly.\n   * @private\n   */\n  handleFeatureGeometryChange_() {\n    if (this.updatingExpression_) {\n      return;\n    }\n\n    this.updatingGeometry_ = true;\n\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.expression = this.format_.writeGeometry(geometry);\n    } else {\n      this.expression = null;\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Called when the geometry of the features changes. Update the expression\n   * accordingly.\n   * @param {ol.Object.Event} evt Event\n   * @private\n   */\n  handleGeometryChange_(evt) {\n    const geometry = googAsserts.assertInstanceof(\n      evt.target, olGeomGeometry\n    );\n    this.updatingGeometry_ = true;\n    this.expression = this.format_.writeGeometry(geometry);\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Set geometry property using the expression property.\n   * @private\n   */\n  setGeometryFromExpression_() {\n    let geometry = null;\n    if (this.expression) {\n      // An expression can only have a string value with a geometry rule.\n      const expression = googAsserts.assertString(this.expression);\n      geometry = this.format_.readGeometry(expression);\n    }\n    this.geometry = geometry;\n  }\n\n  /**\n   * Unlisten the feature geometry change event, then listen to it if the\n   * feature has a geometry.\n   * @private\n   */\n  registerGeometryChange_() {\n\n    // (1) Unlisten\n    if (this.geometryChangeListenerKey_ !== null) {\n      olEvents.unlistenByKey(this.geometryChangeListenerKey_);\n      this.geometryChangeListenerKey_ = null;\n    }\n\n    // (2) Listen, if geom\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.geometryChangeListenerKey_ = olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      );\n    }\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle, {toFunction as toStyleFunction, createDefaultStyle as olStyleDefaultFunction} from 'ol/style/Style.js';\n\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleDefaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : toStyleFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach((child) => {\n    child.setStateInternal_(this.state_);\n  });\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Measure\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olDom from 'ol/dom.js';\nimport * as olProj from 'ol/proj.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olSphere from 'ol/sphere.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} options Options\n */\nconst exports = function(options = /** @type {ngeo.interaction.MeasureBaseOptions} */ ({})) {\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ? options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (polygon.clone().transform(projection, 'EPSG:4326'));\n  const area = Math.abs(olSphere.getArea(geom, {'projection': 'EPSG:4326'}));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection, precision, format) {\n  let length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = olProj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = olProj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n    length += olSphere.getDistance(c1, c2);\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  const helpMsg = this.sketchFeature === null ? this.startMsg : this.continueMsg;\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event|ngeox.DrawEvent} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature || evt.detail.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event|ngeox.DrawEvent} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  this.unlistenerEvent_();\n};\n\n/**\n * Handle unlistener events for 'end of drawing' interaction\n * @private\n */\nexports.prototype.unlistenerEvent_ = function() {\n  if (this.changeEventKey_ !== null && this.postcomposeEventKey_ !== null) {\n    olEvents.unlistenByKey(this.changeEventKey_);\n    olEvents.unlistenByKey(this.postcomposeEventKey_);\n    this.changeEventKey_ = null;\n    this.postcomposeEventKey_ = null;\n  }\n};\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n    this.unlistenerEvent_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is available through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach((grp) => {\n      this.root.children.unshift(grp);\n    });\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach((childNode) => {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  });\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object information.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.query.MapQuerent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport * as olObj from 'ol/obj.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Map Querent is the service bound to a map that issues\n   * queries using the Querent service. The result is stored inside this\n   * service.\n   *\n   * @struct\n   * @param {angular.$injector} $injector Main injector.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     sources helper service.\n   * @param {ngeo.query.Querent} ngeoQuerent The ngeo querent service.\n   * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($injector, ngeoDataSources, ngeoDataSourcesHelper, ngeoQuerent,\n    ngeoQueryResult) {\n\n    const options = /** @type {ngeox.QueryOptions} */ (\n      $injector.has('ngeoQueryOptions') ?\n        $injector.get('ngeoQueryOptions') : {});\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n    /**\n     * @type {ngeox.QueryResult}\n     * @private\n     */\n    this.result_ = ngeoQueryResult;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.limit_ = options.limit !== undefined ? options.limit : 50;\n\n    /**\n     * When set, before making WFS GetFeature requests to fetch features,\n     * WFS GetFeature requests with `resultType = 'hits'` are made first. If\n     * the number of records for the request would exceed the limit, then\n     * no features are returned.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.queryCountFirst_ = options.queryCountFirst !== undefined ?\n      options.queryCountFirst : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.tolerancePx_ = options.tolerance !== undefined ?\n      options.tolerance : 3;\n\n    /**\n     * A hash of data source names classified by ids.\n     * @type {Object.<number, string>}\n     * @private\n     */\n    this.dataSourceNames_ = {};\n  }\n\n  /**\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @export\n   */\n  issue(options) {\n    // (1) Clear previous result\n    this.clear();\n\n    // (2) Get queryable data sources, unless they are already set\n    let queryableDataSources;\n    if (options.dataSources === undefined &&\n        options.queryableDataSources === undefined\n    ) {\n      queryableDataSources = this.ngeoQuerent_.getQueryableDataSources(\n        this.dataSources_.getArray(),\n        options.map\n      );\n    }\n\n    // (3) Update query options, update the pending property and issue the\n    //     request.\n    const limit = options.limit !== undefined ? options.limit : this.limit_;\n    olObj.assign(options, {\n      queryableDataSources: queryableDataSources,\n      limit: limit,\n      tolerancePx: this.tolerancePx_,\n      wfsCount: this.queryCountFirst_\n    });\n    this.result_.pending = true;\n    this.ngeoQuerent_.issue(options).then(this.handleResult_.bind(this));\n  }\n\n  /**\n   * Clear result, i.e. clear all 'result source' from their features and other\n   * information.\n   * @export\n   */\n  clear() {\n    this.result_.total = 0;\n    for (const source of this.result_.sources) {\n      source.features.length = 0;\n      source.pending = false;\n      source.queried = false;\n      source.tooManyResults = false;\n      source.totalFeatureCount = undefined;\n    }\n    this.result_.sources.length = 0; // Clear previous result sources\n    this.result_.pending = false;\n  }\n\n  /**\n   * Called after a request to the querent service. Update the result.\n   *\n   * @param {ngeox.QuerentResult} response Response\n   * @private\n   */\n  handleResult_(response) {\n    let total = 0;\n\n    // (1) Update result sources, i.e. add them\n    for (const idStr in response) {\n      const id = Number(idStr);\n      const dataSource = this.ngeoDataSourcesHelper_.getDataSource(id);\n      let label = dataSource.name;\n      googAsserts.assert(dataSource);\n\n      const querentResultItem = response[id];\n      const features = querentResultItem.features;\n      const limit = querentResultItem.limit;\n      const tooManyResults = querentResultItem.tooManyFeatures === true;\n      const totalFeatureCount = querentResultItem.totalFeatureCount;\n\n      const typeSeparatedFeatures = {};\n      features.forEach((feature) => {\n        const type = googAsserts.assertString(feature.get('ngeo_feature_type_'));\n        if (!typeSeparatedFeatures[type]) {\n          typeSeparatedFeatures[type] = [];\n        }\n        // Use properties aliases if any\n        if (dataSource.attributes && dataSource.attributes.length) {\n          const properties = feature.getProperties();\n          const filteredProperties = {};\n          dataSource.attributes.forEach((attribute) => {\n            if (attribute.alias) {\n              filteredProperties[attribute.alias] = properties[attribute.name];\n              feature.unset(attribute.name, /* silent */ true);\n            } else {\n              // No alias is available => use the attribute as is.\n              filteredProperties[attribute.name] = properties[attribute.name];\n            }\n          });\n          feature.setProperties(filteredProperties, /* silent */ true);\n        }\n        typeSeparatedFeatures[type].push(feature);\n      });\n\n      for (const type in typeSeparatedFeatures) {\n        label = type ? type : label;\n        const featuresByType = typeSeparatedFeatures[type];\n        this.result_.sources.push({\n          features: featuresByType,\n          id: id,\n          label: label,\n          limit: limit,\n          pending: false,\n          queried: true,\n          tooManyResults: tooManyResults,\n          totalFeatureCount: totalFeatureCount\n        });\n        total += features.length;\n      }\n    }\n\n    // (2) Update total & pending\n    this.result_.total = total;\n    this.result_.pending = false;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoMapQuerent', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoDatasourceHelper.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoMapQuerent', exports);\n\n\n/**\n * The `ngeoQueryResult` is the value service where the features of the query\n * result are added.\n */\nexports.module.value('ngeoQueryResult', /** @type {ngeox.QueryResult} */ ({\n  sources: [],\n  total: 0,\n  pending: false\n}));\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.WMSTime\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * ngeo - WMS time service\n * @extends {ngeo.misc.Time}\n * @param {angular.$filter} $filter angular filter service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoWMSTime\n */\nconst exports = function($filter, gettextCatalog) {\n\n  /**\n   * @private\n   * @type {angular.$filter}\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  ngeoMiscTime.call(this);\n};\n\nolBase.inherits(exports, ngeoMiscTime);\n\n\n/**\n * Format time regarding a resolution\n * @param  {number} time (in ms format) timestamp to format\n * @param  {(ngeox.TimePropertyResolutionEnum|undefined)} resolution resolution to use\n * @param  {boolean=} opt_useISOFormat True to a ISO-8601 date string that can be used\n *     as a WMS-T Parameter. Otherwise, use a localized date format.\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} Date string regarding the resolution.\n */\nexports.prototype.formatTimeValue = function(time, resolution, opt_useISOFormat, opt_toUTC) {\n  const date = new Date(time);\n  const utc = opt_toUTC ? 'UTC' : undefined;\n\n  // ISO-8601 format to use date as a WMS-T Parameter.\n  let yearResolution = 'yyyy';\n  let monthResolution = 'yyyy-MM';\n  let dayResolution = 'yyyy-MM-dd';\n\n  // Localized format.\n  if (!opt_useISOFormat) {\n    const gettextCatalog = this.gettextCatalog_;\n    yearResolution = gettextCatalog.getString('yyyy');\n    monthResolution = gettextCatalog.getString('M/yyyy');\n    dayResolution = gettextCatalog.getString('M/d/yyyy');\n  }\n\n  switch (resolution) {\n    case 'year':\n      return this.$filter_('date')(date, yearResolution, utc);\n    case 'month':\n      return this.$filter_('date')(date, monthResolution, utc);\n    case 'day':\n      return this.$filter_('date')(date, dayResolution, utc);\n    default:\n      //case \"second\":\n      return date.toISOString().replace(/\\.\\d{3}/, '');\n  }\n};\n\n\n/**\n * Format time to be used as a WMS Time query parameter\n * @param  {ngeox.TimeProperty} wmsTimeProperty a wmstime property from a node\n * @param  {{start : number, end : (number|undefined)}} times start & end time selected (in ms format)\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} ISO-8601 date string ready to be used as a query parameter for a\n * WMS request\n * @export\n */\nexports.prototype.formatWMSTimeParam = function(wmsTimeProperty, times, opt_toUTC) {\n  googAsserts.assert(wmsTimeProperty.resolution !== undefined);\n  if (wmsTimeProperty.mode === 'range') {\n    googAsserts.assert(times.end !== undefined);\n    return (\n      `${this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC)}/${\n        this.formatTimeValue(times.end, wmsTimeProperty.resolution, true, opt_toUTC)}`\n    );\n  } else {\n    return this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC);\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoWMSTime', [\n  ngeoMiscTime.module.name,\n]);\nexports.module.service('ngeoWMSTime', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.filters\n */\nimport * as olMath from 'ol/math.js';\nimport * as olString from 'ol/string.js';\nconst exports = angular.module('ngeoAngularFilters', []);\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nexports.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nexports.filter('ngeoScalify', exports.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nexports.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nexports.filter('ngeoNumber', exports.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nexports.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nexports.filter('ngeoUnitPrefix', exports.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nexports.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nexports.filter('ngeoNumberCoordinates', exports.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nexports.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nexports.filter('ngeoDMSCoordinates', exports.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * If you use it, you don't require the \"ngSanitize\".\n * @return {function(?):string} The filter function.\n * @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nexports.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nexports.filter('ngeoTrustHtml', exports.trustHtmlFilter);\n\n\n/**\n * A filter used to format a time duration in seconds into a more\n * readable form.\n * Only the two largest units will be shown.\n *\n * Examples:\n *      {{42 | ngeoDuration}} => 42 seconds\n *      {{132 | ngeoDuration}} => 2 minutes 12 seconds\n *      {{3910 | ngeoDuration}} => 1 hour 5 minutes\n *        -> Note: the remaining 10 seconds will be dropped\n *\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @return {ngeox.duration} Function used to format a time duration in seconds into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDuration\n */\nexports.Duration = function(gettextCatalog) {\n  // time unit enum\n  const TimeUnits = Object.freeze({\n    SECONDS: Symbol('seconds'),\n    MINUTES: Symbol('minutes'),\n    HOURS: Symbol('hours'),\n    DAYS: Symbol('days')\n  });\n\n  /**\n   * @param {number} amount Amount of time.\n   * @param {symbol} unit Unit of time.\n   * @return {string} formatted and translated string\n   */\n  const pluralize = function(amount, unit) {\n    let formattedUnit = '';\n    switch (unit) {\n      case TimeUnits.SECONDS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'second', 'seconds');\n        break;\n      case TimeUnits.MINUTES:\n        formattedUnit = gettextCatalog.getPlural(amount, 'minute', 'minutes');\n        break;\n      case TimeUnits.HOURS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'hour', 'hours');\n        break;\n      case TimeUnits.DAYS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'day', 'days');\n        break;\n      default:\n        break;\n    }\n    return `${amount} ${formattedUnit}`;\n  };\n\n  /**\n   * @param {number} duration The duration in seconds.\n   * @return {string} The formatted string.\n   */\n  const result = function(duration) {\n    // round to next integer\n    duration = Math.round(duration);\n\n    // just seconds\n    let output;\n    if (duration < 60) {\n      return pluralize(duration, TimeUnits.SECONDS);\n    }\n\n    // minutes (+ seconds)\n    let remainder = duration % 60; // seconds\n    duration = Math.floor(duration / 60); // minutes\n    if (duration < 60) { // less than an hour\n      output = pluralize(duration, TimeUnits.MINUTES);\n      if (remainder > 0) {\n        output += ` ${pluralize(remainder, TimeUnits.SECONDS)}`;\n      }\n      return output;\n    }\n\n    // hours (+ minutes)\n    remainder = duration % 60; // minutes\n    duration = Math.floor(duration / 60); // hours\n    if (duration < 24) { // less than a day\n      output = pluralize(duration, TimeUnits.HOURS);\n      if (remainder > 0) {\n        output += ` ${pluralize(remainder, TimeUnits.MINUTES)}`;\n      }\n      return output;\n    }\n\n    // days (+ hours)\n    remainder = duration % 24; // hours\n    duration = Math.floor(duration / 24); // days\n    output = pluralize(duration, TimeUnits.DAYS);\n    if (remainder > 0) {\n      output += ` ${pluralize(remainder, TimeUnits.HOURS)}`;\n    }\n    return output;\n  };\n\n  return result;\n};\n\nexports.filter('ngeoDuration', exports.Duration);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.SyncLayertreeMap\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * Service to create layer based on a ngeo.layertree.Controller with a\n * GMFThemesGroup or a GMFThemesLeaf as node object.\n * This layer is also used to synchronise a state of ngeo.layertree.Controller\n * and its corresponding layer in the map.\n *\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSyncLayertreeMap\n */\nconst exports = function($rootScope, ngeoLayerHelper, ngeoWMSTime,\n  gmfThemes) {\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {gmfThemes.GmfOgcServers}\n   * @private\n   */\n  this.ogcServersObject_;\n\n  gmfThemes.getOgcServersObject().then((ogcServersObject) => {\n    this.ogcServersObject_ = ogcServersObject;\n  });\n\n  $rootScope.$on('ngeo-layertree-state', (map, treeCtrl, firstParent) => {\n    this.sync_(/** @type ol.Map */ (map), firstParent);\n  });\n};\n\n\n/**\n * Create, insert (or update) and return a layer from the GmfGroup or the\n * GmfLayer of the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Base|ol.layer.Group} a new layer.\n * @public\n */\nexports.prototype.createLayer = function(treeCtrl, map, dataLayerGroup, opt_position) {\n  /**\n   * @type {ol.layer.Base|ol.layer.Group}\n   */\n  let layer = null;\n  if (treeCtrl.node.children !== undefined && treeCtrl.node.mixed) {\n    // Mixed groups\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  } else if (treeCtrl.node.children === undefined && treeCtrl.parent.node.mixed) {\n    // Layers in a mixed group\n    layer = this.createLeafInAMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.node.children === undefined) {\n    // Layers in a non mixed group\n    this.initGmfLayerInANotMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.depth === 1 && !treeCtrl.node.mixed) {\n    // First level group non mix\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  }\n\n  if (layer && treeCtrl.node.metadata.opacity) {\n    layer.setOpacity(treeCtrl.node.metadata.opacity);\n  }\n\n  return layer;\n};\n\n\n/**\n * Synchronise the state of each layers corresponding to the given tree and\n * all its children.\n * @param {ol.Map} map A map that contains the layers.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.sync_ = function(map, treeCtrl) {\n  treeCtrl.traverseDepthFirst((treeCtrl) => {\n    if (treeCtrl.layer && !treeCtrl.node.mixed) {\n      this.updateLayerState_(/** @type ol.layer.Image|ol.layer.Tile */ (treeCtrl.layer), treeCtrl);\n    }\n  });\n};\n\n\n/**\n * Set the active state of a layer based on its treeCtrl state.\n * @param {ol.layer.Tile|ol.layer.Image} layer A layer.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.updateLayerState_ = function(layer, treeCtrl) {\n  const active = treeCtrl.getState() === 'on';\n  if (treeCtrl.node.type === 'WMTS') {\n    layer.setVisible(active);\n  } else if (!treeCtrl.node.mixed && treeCtrl.depth === 1) {\n    // First level non mixed group\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    const names = [];\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.getState() === 'on') {\n        names.push(treeCtrl.node.layers);\n      }\n    });\n    if (names.length === 0) {\n      layer.setVisible(false);\n    }\n    /** @type {ol.source.ImageWMS} */ (layer.getSource()).updateParams({\n      'LAYERS': names.reverse().join(',')\n    });\n    if (names.length !== 0) {\n      layer.setVisible(true);\n    }\n  } else {\n    // WMS mixed layer\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    layer.setVisible(active);\n  }\n};\n\n\n/**\n * Create insert and return a layer group (for not mixed case) or a wmsLayer (for\n * mixed case). Take care about the insertion order in the map in case of first\n * level group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createGroup_ = function(treeCtrl, map,\n  dataLayerGroup, opt_position) {\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  let layer = null;\n  const isFirstLevelGroup = treeCtrl.parent.isRoot;\n\n  let printNativeAngle = true;\n  if (groupNode.metadata.printNativeAngle !== undefined) {\n    printNativeAngle = groupNode.metadata.printNativeAngle;\n  }\n\n  if (isFirstLevelGroup) { // First level group\n    layer = this.createLayerFromGroup_(treeCtrl, !!groupNode.mixed);\n    // Insert the layer at the right place\n    const position = opt_position | 0;\n    dataLayerGroup.getLayers().insertAt(position, layer);\n\n  } else { // Other Groups, create a group layer only in mixed groups\n    const inAMixedGroup = !this.isOneParentNotMixed_(treeCtrl);\n    if (inAMixedGroup) {\n      layer = this.createLayerFromGroup_(treeCtrl, true);\n      const layerGroup = /** @type {ol.layer.Group} */ (\n        exports.getLayer(treeCtrl.parent));\n      layerGroup.getLayers().insertAt(0, layer);\n    }\n  }\n\n  layer.set('printNativeAngle', printNativeAngle);\n  return layer;\n};\n\n\n/**\n * Create, insert and return a layer group (for not mixed case) or a wmsLayer\n * for mixed case).\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {boolean} mixed True for a group layer, false for a WMS layer.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createLayerFromGroup_ = function(treeCtrl,\n  mixed) {\n  let layer;\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  if (mixed) { // Will be one ol.layer per each node.\n    layer = this.layerHelper_.createBasicGroup();\n  } else { // Will be one ol.layer for multiple WMS nodes.\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[groupNode.ogcServer || ''];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      '',\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n    let hasActiveChildren = false;\n    treeCtrl.traverseDepthFirst((ctrl) => {\n      // Update layer information and tree state.\n      this.updateLayerReferences_(/** @type gmfThemes.GmfLayer */ (ctrl.node), layer);\n      if (ctrl.node.metadata.isChecked) {\n        ctrl.setState('on', false);\n        this.updateLayerState_(/** @type {ol.layer.Image} */ (layer), ctrl);\n        hasActiveChildren = true;\n      }\n    });\n    layer.setVisible(hasActiveChildren);\n    layer.set('layerNodeName', groupNode.name); //Really useful ?\n  }\n  return layer;\n};\n\n\n/**\n * Create and insert a layer from a leaf in a mixed group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the layer.\n * @return {ol.layer.Tile|ol.layer.Image} a new layer.\n * @private\n */\nexports.prototype.createLeafInAMixedGroup_ = function(treeCtrl, map) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  let layer;\n  // Make layer.\n  if (gmfLayer.type === 'WMTS') {\n    layer = this.createWMTSLayer_(/** @type gmfThemes.GmfLayerWMTS */ (gmfLayer));\n  } else {\n    const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[/** @type string */ (gmfLayerWMS.ogcServer)];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(gmfLayerWMS.layers);\n    googAsserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      gmfLayerWMS.layers,\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n  }\n  // Update layer information and tree state.\n  layer.set('layerNodeName', gmfLayer.name); // Really useful ?\n  this.updateLayerReferences_(gmfLayer, layer);\n  const checked = gmfLayer.metadata.isChecked === true;\n  if (checked) {\n    treeCtrl.setState('on', false);\n  }\n  layer.setVisible(checked);\n  // Insert layer in the map.\n  const layerGroup = /** @type {ol.layer.Group} */ (\n    exports.getLayer(treeCtrl.parent));\n  layerGroup.getLayers().insertAt(0, layer);\n  return layer;\n};\n\n\n/**\n * Update a WMS layer with the given treeCtrl node information. Assumes that\n * the first parent with ogcServer information is linked to the layer to update\n * and that this treeCtrl node is a leafNode.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the layer to update.\n * @private\n */\nexports.prototype.initGmfLayerInANotMixedGroup_ = function(treeCtrl, map) {\n  const leafNode = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const firstLevelGroup = this.getFirstLevelGroupCtrl_(treeCtrl);\n  googAsserts.assert(firstLevelGroup);\n  const layer = /** @type {ol.layer.Image} */ (firstLevelGroup.layer);\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  // Update layer information and tree state.\n  this.updateLayerReferences_(leafNode, layer);\n  if (leafNode.metadata.isChecked) {\n    treeCtrl.setState('on', false);\n    this.updateLayerState_(layer, firstLevelGroup);\n  } else {\n    treeCtrl.parent.refreshState();\n  }\n};\n\n\n/**\n * Create and return a Tile layer.\n * @param {gmfThemes.GmfLayerWMTS} gmfLayerWMTS A leaf node.\n * @return {ol.layer.Tile} a Tile WMTS layer. (Source and capabilities can come\n *     later).\n * @private\n */\nexports.prototype.createWMTSLayer_ = function(gmfLayerWMTS) {\n  const newLayer = new olLayerTile();\n  googAsserts.assert(gmfLayerWMTS.url);\n  googAsserts.assert(gmfLayerWMTS.layer);\n  this.layerHelper_.createWMTSLayerFromCapabilitites(gmfLayerWMTS.url,\n    gmfLayerWMTS.layer, gmfLayerWMTS.matrixSet, gmfLayerWMTS.dimensions).then((layer) => {\n    newLayer.setSource(layer.getSource());\n    newLayer.set('capabilitiesStyles', layer.get('capabilitiesStyles'));\n  });\n  return newLayer;\n};\n\n\n/**\n * Update properties of a layer with the node of a given leafNode.\n * @param {gmfThemes.GmfLayer} leafNode a leaf node.\n * @param {ol.layer.Base} layer A layer.\n * @private\n */\nexports.prototype.updateLayerReferences_ = function(leafNode, layer) {\n  const id = olBase.getUid(leafNode);\n  const querySourceIds = layer.get('querySourceIds') || [];\n  querySourceIds.push(id);\n  layer.set('querySourceIds', querySourceIds);\n\n  const disclaimer = leafNode.metadata.disclaimer;\n  if (disclaimer) {\n    const disclaimers = layer.get('disclaimers') || [];\n    disclaimers.push(leafNode.metadata.disclaimer);\n    layer.set('disclaimers', disclaimers);\n  }\n};\n\n\n/**\n * Get the time parameter for a WMS Layer. If it's a group and it doesn't have\n * time, get the first time parameter available in any child.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {string|undefined} A wms time param.\n * @private\n */\nexports.prototype.getTimeParam_ = function(treeCtrl) {\n  let wmsTime;\n  let timeParam;\n  const node = treeCtrl.node;\n  if (node.time) {\n    wmsTime = node.time;\n  } else if (node.children) {\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.node.time) {\n        wmsTime = treeCtrl.node.time;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  if (wmsTime) {\n    const timeValues = this.ngeoWMSTime_.getOptions(wmsTime)['values'];\n    timeParam = this.ngeoWMSTime_.formatWMSTimeParam(wmsTime, {\n      start: timeValues[0] || timeValues,\n      end: timeValues[1]\n    });\n  }\n  return timeParam;\n};\n\n\n/**\n * Return true if a parent tree is mixed, based on its node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {boolean} True is any parent is mixed. False Otherwise.\n * @private\n */\nexports.prototype.isOneParentNotMixed_ = function(treeCtrl) {\n  let tree = treeCtrl.parent;\n  let isOneParentNotMix = false;\n  do {\n    isOneParentNotMix = tree.node.mixed === false;\n    tree = tree.parent;\n  }\n  while (tree.parent && !isOneParentNotMix);\n  return isOneParentNotMix;\n};\n\n\n/**\n * Return the first parent, from the root parent, that is not mixed.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} The first not mixed parent.\n * @private\n */\nexports.prototype.getFirstLevelGroupCtrl_ = function(\n  treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * Return the layer used by the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ol.layer.Base} The layer.\n * @public\n */\nexports.getLayer = function(treeCtrl) {\n  let tree = treeCtrl;\n  let layer = null;\n  while (!tree.isRoot && layer === null) {\n    if (tree.layer) {\n      layer = tree.layer;\n    }\n    tree = tree.parent;\n  }\n  return layer;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSyncLayertreeMap', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfSyncLayertreeMap', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.ToolActivateMgr\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * Provides a service to manage the activation of `ngeo.misc.ToolActivate` objects.\n *\n * Example:\n *\n * Each tool must be registered before using it.\n *\n *     let tool = new ngeo.misc.ToolActivate(interaction, 'active');\n *     ngeoToolActivateMgr.registerTool('mapTools', tool);\n *\n * A tool will be registered in a group identified by a group name.\n * Once registered a tool can be activated and deactivated. When activating a\n * tool, all others tools in the same group will be deactivated.\n *\n *     ngeoToolActivateMgr.activateTool(tool);\n *     ngeoToolActivateMgr.deactivateTool(tool);\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoToolActivateMgr\n * @ngInject\n */\nconst exports = function($rootScope) {\n\n  /**\n   * @type {!Object.<string, Array.<ngeox.miscToolActivateMgrEntry>>}\n   * @private\n   */\n  this.groups_ = {};\n\n  /**\n   * The scope.\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $rootScope;\n};\n\n\n/**\n * Register a tool.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to register.\n * @param {boolean=} opt_defaultActivate If true, this tool will be activated\n *     when all other tools in the group are deactivated.\n * @export\n */\nexports.prototype.registerTool = function(groupName, tool,\n  opt_defaultActivate) {\n  let entries = this.groups_[groupName];\n  if (!entries) {\n    entries = this.groups_[groupName] = [];\n  }\n\n  const unlisten = this.scope_.$watch(\n    tool.getActive,\n    (newVal, oldVal) => {\n      if (newVal === oldVal) {\n        return;\n      }\n      if (newVal) {\n        this.deactivateTools_(groupName, tool);\n      } else {\n        this.activateDefault_(groupName);\n      }\n    });\n\n  entries.push({\n    tool: tool,\n    defaultTool: opt_defaultActivate || false,\n    unlisten: unlisten\n  });\n\n  if (googAsserts.ENABLE_ASSERTS) {\n    // check that only one default tool per group exists\n    let defaultTools = 0;\n    entries.forEach((entry) => {\n      if (entry.defaultTool) {\n        defaultTools++;\n      }\n    });\n    googAsserts.assert(\n      defaultTools <= 1, `more than one default tool in group ${groupName}`);\n  }\n};\n\n\n/**\n * Unregister a tool from a group.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to unregister.\n * @export\n */\nexports.prototype.unregisterTool = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      if (entries[i].tool == tool) {\n        entries[i].unlisten();\n        entries.splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * Unregister each tool from a group.\n * @param {string} groupName Name of the group of tools to unregister.\n * @export\n */\nexports.prototype.unregisterGroup = function(groupName) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      entries[i].unlisten();\n    }\n    delete this.groups_[groupName];\n  }\n};\n\n\n/**\n * Activate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @export\n */\nexports.prototype.activateTool = function(tool) {\n  tool.setActive(true);\n};\n\n\n/**\n * Deactivate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to deactivate.\n * @export\n */\nexports.prototype.deactivateTool = function(tool) {\n  tool.setActive(false);\n};\n\n\n/**\n * Deactivate all tools except the given one.\n *\n * @param {string} groupName Name of the group.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @private\n */\nexports.prototype.deactivateTools_ = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  for (let i = 0; i < entries.length; i++) {\n    if (tool != entries[i].tool) {\n      entries[i].tool.setActive(false);\n    }\n  }\n};\n\n\n/**\n * Activate the default tool in the given group if no other tool is active.\n *\n * @param {string} groupName Name of the group.\n * @private\n */\nexports.prototype.activateDefault_ = function(groupName) {\n  const entries = this.groups_[groupName];\n  let defaultTool = null;\n  let hasActiveTool = false;\n\n  for (let i = 0; i < entries.length; i++) {\n    hasActiveTool = hasActiveTool || entries[i].tool.getActive();\n\n    if (entries[i].defaultTool) {\n      defaultTool = entries[i].tool;\n    }\n  }\n\n  if (!hasActiveTool && defaultTool !== null) {\n    defaultTool.setActive(true);\n  }\n};\n\n\nexports.module = angular.module('ngeoToolActivateMgr', []);\nexports.module.service('ngeoToolActivateMgr', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.EventHelper\n */\nimport * as olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Date\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A date rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.DateOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = options.type || ngeoFormatAttributeType.DATE;\n\n    super(options);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Text\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A text rule, which always compares the value with the LIKE operator, by\n   * default.\n   *\n   * @struct\n   * @param {!ngeox.rule.TextOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = options.operator || ngeoRuleRule.OperatorType.LIKE;\n    options.type = ngeoFormatAttributeType.TEXT;\n\n    super(options);\n\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.RuleHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport ngeoRuleDate from 'ngeo/rule/Date.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport ngeoRuleText from 'ngeo/rule/Text.js';\nimport {writeFilter} from 'ol/format/WFS.js';\nimport * as olFormatFilter from 'ol/format/filter.js';\nimport * as olArray from 'ol/array.js';\n\nimport moment from 'moment';\n\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to create `ngeo.rule.Rule`\n   * objects.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoRuleHelper\n   * @ngInject\n   */\n  constructor(gettextCatalog, ngeoFeatureHelper, ngeoWMSTime) {\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.Attribute>} attributes Attributes.\n   * @param {boolean=} opt_isCustom Whether the created rules should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRulesFromAttributes(attributes, opt_isCustom) {\n    const rules = [];\n    for (const attribute of attributes) {\n      rules.push(this.createRuleFromAttribute(attribute, opt_isCustom));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.Attribute} attribute Attribute.\n   * @param {boolean=} opt_isCustom Whether the created rule should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRuleFromAttribute(attribute, opt_isCustom) {\n\n    let rule;\n    const isCustom = opt_isCustom === true;\n\n    /**\n     * @type {string}\n     */\n    const name = this.gettextCatalog_.getString(attribute.name);\n\n    // Todo: support geometry\n\n    switch (attribute.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        if (isCustom) {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.EQUALS,\n            operators: [\n              ngeoRuleRule.TemporalOperatorType.EQUALS,\n              ngeoRuleRule.TemporalOperatorType.BEGINS,\n              ngeoRuleRule.TemporalOperatorType.ENDS\n            ],\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        } else {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.DURING,\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry({\n          name: name,\n          operator: ngeoRuleRule.SpatialOperatorType.WITHIN,\n          operators: [\n            ngeoRuleRule.SpatialOperatorType.CONTAINS,\n            ngeoRuleRule.SpatialOperatorType.INTERSECTS,\n            ngeoRuleRule.SpatialOperatorType.WITHIN\n          ],\n          propertyName: attribute.name,\n          type: attribute.type\n        });\n        break;\n      case ngeoFormatAttributeType.NUMBER:\n        if (isCustom) {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.EQUAL_TO,\n            operators: [\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.GREATER_THAN,\n              ngeoRuleRule.OperatorType.GREATER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.LESSER_THAN,\n              ngeoRuleRule.OperatorType.LESSER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        } else {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.BETWEEN,\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        rule = new ngeoRuleSelect({\n          choices: googAsserts.assert(attribute.choices),\n          name: name,\n          propertyName: attribute.name\n        });\n        break;\n      default:\n        if (isCustom) {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            operators: [\n              ngeoRuleRule.OperatorType.LIKE,\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name\n          });\n        } else {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            propertyName: attribute.name\n          });\n        }\n        break;\n    }\n\n    return rule;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions>} optionsList List of options\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRules(optionsList) {\n    const rules = [];\n    for (const options of optionsList) {\n      rules.push(this.createRule(options));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions} options Options\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRule(options) {\n    let rule;\n    switch (options.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        rule = new ngeoRuleDate(options);\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry(options);\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        const selectOptions = /** @type {!ngeox.rule.SelectOptions} */ (\n          options);\n        googAsserts.assert(selectOptions.choices);\n        rule = new ngeoRuleSelect(selectOptions);\n        break;\n      default:\n        rule = new ngeoRuleText(options);\n        break;\n    }\n    return rule;\n  }\n\n  /**\n   * Create a new `ngeo.rule.Rule` object using an other given rule.\n   *\n   * @param {!ngeo.rule.Rule} rule Original rule to clone.\n   * @return {!ngeo.rule.Rule} A clone rule.\n   * @export\n   */\n  cloneRule(rule) {\n\n    let clone;\n\n    let expression = rule.getExpression();\n    if (expression === null) {\n      expression = undefined;\n    }\n    const isCustom = rule.isCustom;\n    const lowerBoundary = rule.lowerBoundary !== null ? rule.lowerBoundary :\n      undefined;\n    const name = rule.name;\n    const operator = rule.operator !== null ? rule.operator : undefined;\n    const operators = rule.operators ? rule.operators.slice(0) : undefined;\n    const propertyName = rule.propertyName;\n    const type = rule.type !== null ? rule.type : undefined;\n    const upperBoundary = rule.upperBoundary !== null ? rule.upperBoundary :\n      undefined;\n\n    const options = {\n      expression,\n      isCustom,\n      lowerBoundary,\n      name,\n      operator,\n      operators,\n      propertyName,\n      type,\n      upperBoundary\n    };\n\n    if (rule instanceof ngeoRuleDate) {\n      clone = new ngeoRuleDate(options);\n    } else if (rule instanceof ngeoRuleGeometry) {\n      clone = new ngeoRuleGeometry(options);\n      clone.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(rule.feature)\n      );\n    } else if (rule instanceof ngeoRuleSelect) {\n      options.choices = rule.choices.slice(0);\n      clone = new ngeoRuleSelect(options);\n    } else if (rule instanceof ngeoRuleText) {\n      clone = new ngeoRuleText(options);\n    } else {\n      clone = new ngeoRuleRule(options);\n    }\n\n    return clone;\n  }\n\n  /**\n   * Extend the dynamic properties from a source rule to destination rule.\n   * The source rule remains unchanged, while the destination rule changes.\n   *\n   * @param {!ngeo.rule.Rule} sourceRule Source rule to collect the dynamic\n   *     properties from.\n   * @param {!ngeo.rule.Rule} destRule Destination rule where the dynamic\n   *     properties are set.\n   * @export\n   */\n  extendRule(sourceRule, destRule) {\n\n    if (destRule.getExpression() !== sourceRule.getExpression()) {\n      destRule.setExpression(sourceRule.getExpression());\n    }\n\n    if (destRule.lowerBoundary !== sourceRule.lowerBoundary) {\n      destRule.lowerBoundary = sourceRule.lowerBoundary;\n    }\n\n    if (destRule.operator !== sourceRule.operator) {\n      destRule.operator = sourceRule.operator;\n    }\n\n    if (destRule.upperBoundary !== sourceRule.upperBoundary) {\n      destRule.upperBoundary = sourceRule.upperBoundary;\n    }\n\n    if (sourceRule instanceof ngeoRuleGeometry &&\n       destRule instanceof ngeoRuleGeometry\n    ) {\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(destRule.feature);\n      destRule.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(sourceRule.feature)\n      );\n    }\n  }\n\n  /**\n   * @param {!Array.<!ngeo.rule.Rule>} rules Rules\n   * @return {!Array.<!ngeox.rule.AnyOptions>} List of serialized rule options.\n   * @export\n   */\n  serializeRules(rules) {\n    return rules.map((rule) => {\n      const serializedRule = this.serializeRule(rule);\n      return serializedRule;\n    });\n  }\n\n  /**\n   * Selialize a rule into options to re-create it later.\n   * @param {!ngeo.rule.Rule} rule Rule to serialize.\n   * @return {!ngeox.rule.AnyOptions} Serialized rule options.\n   * @export\n   */\n  serializeRule(rule) {\n    const obj = {\n      name: rule.name,\n      propertyName: rule.propertyName,\n      type: rule.type\n    };\n\n    if (rule.expression !== null) {\n      obj.expression = rule.expression;\n    }\n\n    if (rule.lowerBoundary !== null) {\n      obj.lowerBoundary = rule.lowerBoundary;\n    }\n\n    if (rule.operator !== null) {\n      obj.operator = rule.operator;\n    }\n\n    if (rule.operators !== null) {\n      obj.operators = rule.operators.slice(0);\n    }\n\n    if (rule.upperBoundary !== null) {\n      obj.upperBoundary = rule.upperBoundary;\n    }\n\n    if (rule instanceof ngeoRuleGeometry) {\n      obj.featureProperties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        rule.feature);\n    }\n\n    if (rule instanceof ngeoRuleSelect) {\n      obj.choices = rule.choices;\n    }\n\n    return obj;\n  }\n\n  /**\n   * Create a `ol.format.filter.Filter` object for a given data source.\n   * See the `ngeox.CreateFilterOptions` to learn more.\n   *\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?ol.format.filter.Filter} Filter.\n   * @export\n   */\n  createFilter(options) {\n\n    const dataSource = /** @type {ngeo.datasource.OGC} */ (options.dataSource);\n    let mainFilter = null;\n\n    if (options.filter) {\n      mainFilter = options.filter;\n    } else {\n      const rules = options.filterRules || dataSource.filterRules;\n      const conditions = [];\n\n      if (rules && rules.length) {\n        for (const rule of rules) {\n          const filter = this.createFilterFromRule_(\n            rule,\n            dataSource,\n            options.srsName\n          );\n          if (filter) {\n            conditions.push(filter);\n          }\n        }\n      }\n\n      const condition = dataSource.filterCondition;\n      if (conditions.length === 1) {\n        mainFilter = conditions[0];\n      } else if (conditions.length >= 2) {\n        if (condition === ngeoFilterCondition.AND) {\n          mainFilter = olFormatFilter.and.apply(null, conditions);\n        } else if (condition === ngeoFilterCondition.OR ||\n                   condition === ngeoFilterCondition.NOT\n        ) {\n          mainFilter = olFormatFilter.or.apply(null, conditions);\n        }\n      }\n      if (mainFilter && condition === ngeoFilterCondition.NOT) {\n        mainFilter = olFormatFilter.not(mainFilter);\n      }\n    }\n\n    if (options.incTime) {\n      const timeFilter = this.createTimeFilterFromDataSource_(dataSource);\n      if (timeFilter) {\n        if (mainFilter) {\n          mainFilter = olFormatFilter.and.apply(\n            null,\n            [\n              mainFilter,\n              timeFilter\n            ]\n          );\n        } else {\n          mainFilter = timeFilter;\n        }\n      }\n    }\n\n    return mainFilter;\n  }\n\n  /**\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?string} Filter string.\n   * @export\n   */\n  createFilterString(options) {\n    let filterString = null;\n    const filter = this.createFilter(options);\n    if (filter) {\n      const filterNode = writeFilter(filter);\n      const xmlSerializer = new XMLSerializer();\n      filterString = xmlSerializer.serializeToString(filterNode);\n    }\n    return filterString;\n  }\n\n  /**\n   * @param {ngeo.rule.Rule} rule Rule.\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @param {string=} opt_srsName SRS name. No srsName attribute will be\n   *     set on geometries when this is not provided.\n   * @return {?ol.format.filter.Filter} filter Filter;\n   * @private\n   */\n  createFilterFromRule_(rule, dataSource, opt_srsName) {\n\n    let filter = null;\n\n    const value = rule.value;\n    if (!value) {\n      return null;\n    }\n\n    const expression = value.expression;\n    const lowerBoundary = value.lowerBoundary;\n    const operator = value.operator;\n    const propertyName = value.propertyName;\n    const upperBoundary = value.upperBoundary;\n\n    const rot =  ngeoRuleRule.OperatorType;\n    const rsot = ngeoRuleRule.SpatialOperatorType;\n    const rtot = ngeoRuleRule.TemporalOperatorType;\n\n    const spatialTypes = [\n      rsot.CONTAINS,\n      rsot.INTERSECTS,\n      rsot.WITHIN\n    ];\n\n    const numericTypes = [\n      rot.GREATER_THAN,\n      rot.GREATER_THAN_OR_EQUAL_TO,\n      rot.LESSER_THAN,\n      rot.LESSER_THAN_OR_EQUAL_TO\n    ];\n\n    if (rule instanceof ngeoRuleDate) {\n      let beginValue;\n      let endValue;\n\n      if (operator === rtot.DURING) {\n        beginValue = moment(lowerBoundary).format('YYYY-MM-DD');\n        endValue = moment(upperBoundary).format('YYYY-MM-DD');\n      } else if (operator === rtot.EQUALS) {\n        beginValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD HH:mm:ss'\n        );\n        endValue = moment(\n          expression\n        ).add(\n          1, 'days'\n        ).subtract(\n          1, 'seconds'\n        ).format(\n          'YYYY-MM-DD HH:mm:ss'\n        );\n      } else if (operator === rtot.BEGINS) {\n        beginValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD'\n        );\n        // NOTE: end value is CURRENT + 30 years\n        endValue = moment(\n          expression\n        ).add(\n          30, 'years'\n        ).format(\n          'YYYY-MM-DD'\n        );\n      } else if (operator === rtot.ENDS) {\n        // NOTE: begin value is hardcoded to 1970-01-01\n        beginValue = '1970-01-01';\n        endValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD'\n        );\n      }\n      if (beginValue && endValue) {\n        filter = olFormatFilter.during(\n          propertyName,\n          beginValue,\n          endValue\n        );\n      }\n    } else if (rule instanceof ngeoRuleSelect) {\n      const selectedChoices = rule.selectedChoices;\n      if (selectedChoices.length === 1) {\n        filter = olFormatFilter.equalTo(\n          propertyName,\n          selectedChoices[0]\n        );\n      } else if (selectedChoices.length >= 2) {\n        const conditions = [];\n        for (const selectedChoice of selectedChoices) {\n          conditions.push(\n            olFormatFilter.equalTo(\n              propertyName,\n              selectedChoice\n            )\n          );\n        }\n        filter = olFormatFilter.or.apply(null, conditions);\n      }\n    } else if (olArray.includes(spatialTypes, operator)) {\n      const geometryName = dataSource.geometryName;\n      googAsserts.assertInstanceof(rule, ngeoRuleGeometry);\n      const geometry = googAsserts.assert(rule.geometry);\n      if (operator === rsot.CONTAINS) {\n        filter = olFormatFilter.contains(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.INTERSECTS) {\n        filter = olFormatFilter.intersects(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.WITHIN) {\n        filter = olFormatFilter.within(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      }\n    } else if (olArray.includes(numericTypes, operator)) {\n      const numericExpression = googAsserts.assertNumber(expression);\n      if (operator === rot.GREATER_THAN) {\n        filter = olFormatFilter.greaterThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.GREATER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.greaterThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN) {\n        filter = olFormatFilter.lessThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.lessThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      }\n    } else if (operator === rot.BETWEEN) {\n      filter = olFormatFilter.between(\n        propertyName,\n        lowerBoundary,\n        upperBoundary\n      );\n    } else if (operator === rot.EQUAL_TO) {\n      filter = olFormatFilter.equalTo(\n        propertyName,\n        expression\n      );\n    } else if (operator === rot.LIKE) {\n      const stringExpression = String(expression)\n        .replace(/!/g, '!!')\n        .replace(/\\./g, '!.')\n        .replace(/\\*/g, '!*');\n      filter = olFormatFilter.like(\n        propertyName,\n        `*${stringExpression}*`,\n        '*', /* wildCard */\n        '.', /* singleChar */\n        '!', /* escapeChar */\n        false /* matchCase */\n      );\n    } else if (operator === rot.NOT_EQUAL_TO) {\n      filter = olFormatFilter.notEqualTo(\n        propertyName,\n        expression\n      );\n    }\n\n    return filter;\n  }\n\n  /**\n   * Create and return an OpenLayers filter object using the available\n   * time properties within the data source.\n   * @param {ngeo.datasource.OGC} dataSource Data source from which to\n   *     create the filter.\n   * @return {?ol.format.filter.Filter} Filter\n   * @private\n   */\n  createTimeFilterFromDataSource_(dataSource) {\n    let filter = null;\n    const range = dataSource.timeRangeValue;\n    const timeProperty = dataSource.timeProperty;\n    const name = dataSource.timeAttributeName;\n\n    if (range && timeProperty && name) {\n\n      if (range.end !== undefined) {\n        // Case 1: the range has both 'start' and 'end' values.  Use them to\n        //         create a During filter.\n\n        const values = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        ).split('/');\n\n        filter = olFormatFilter.during(name, values[0], values[1]);\n      } else {\n\n        // Case 2: we only have a 'start' value. We need to calculate the 'end'\n        //         using the resolution of the time property.\n\n        const resolution = timeProperty.resolution || 'seconds';\n        const value = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        );\n        let momentEnd;\n\n        switch (resolution) {\n          case 'year':\n            momentEnd = moment(value).add(1, 'years').subtract(1, 'seconds');\n            break;\n          case 'month':\n            momentEnd = moment(value).add(1, 'months').subtract(1, 'seconds');\n            break;\n          case 'day':\n            momentEnd = moment(value).add(1, 'days').subtract(1, 'seconds');\n            break;\n          default:\n            //case \"second\":\n            // This would require a TContains filter, which neither OpenLayers\n            // and MapServer support. Skip...\n        }\n\n        if (momentEnd) {\n          const startValue = moment(value).format('YYYY-MM-DD HH:mm:ss');\n          const endValue = momentEnd.format('YYYY-MM-DD HH:mm:ss');\n          filter = olFormatFilter.during(name, startValue, endValue);\n        }\n      }\n    }\n\n    return filter;\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRuleHelper', [\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoRuleHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.File\n */\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source that contains vector features that were loaded from a file.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @private\n     */\n    this.featuresCollection_ = options.features || new olCollection();\n\n    /**\n     * @type {!ol.source.Vector}\n     * @private\n     */\n    this.source_ = new olSourceVector({\n      features: this.featuresCollection_,\n      wrapX: false\n    });\n\n    /**\n     * @type {!ol.layer.Vector}\n     * @private\n     */\n    this.layer_ = new olLayerVector({\n      source: this.source_\n    });\n  }\n\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ol.Feature>} Features\n   * @export\n   */\n  get features() {\n    return this.featuresCollection_.getArray();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {!ol.Collection.<!ol.Feature>} Features collection\n   * @export\n   */\n  get featuresCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * @return {!ol.layer.Vector} Vector layer.\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {ol.Extent} Extent.\n   * @export\n   */\n  get extent() {\n    return this.source_.getExtent();\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.FileGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A FileGroup data source combines multiple `ngeo.datasource.File` objects.\n   * Its main goal is to synchronize the added data source 'visible' properties\n   * with the visibility of their layer 'visible' property.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.unregister_ = {};\n  }\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    this.unregister_[dataSource.id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this, dataSource)\n    );\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source.\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(dataSource, value, oldValue) {\n    if (value !== undefined) {\n      dataSource.layer.setVisible(value);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    this.unregister_[dataSource.id]();\n    delete this.unregister_[dataSource.id];\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper the ngeo map LayerHelper service.\n   */\n  constructor(options, ngeoLayerHelper) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.ExternalDataSourcesManager\n */\n// TODO - MaxScaleDenominator\n// TODO - MinScaleDenominator\n\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceFileGroup from 'ngeo/datasource/FileGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\n\nconst exports = class {\n\n  /**\n   * External data sources come remote online resources, such as WMS/WMTS\n   * servers, and also files such as KML/GXP. This service is responsible of\n   * creating, storing and managing them.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog service.\n   * @param {!angular.$injector} $injector Main injector.\n   * @param {!angular.$q} $q The Angular $q service.\n   * @param {!angular.Scope} $rootScope The rootScope provider.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {!ngeo.misc.File} ngeoFile Ngeo file.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo layer helper service\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfExternalDataSourcesManager\n   */\n  constructor(gettextCatalog, $injector, $q, $rootScope, ngeoDataSources,\n    ngeoFile, ngeoLayerHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angular.$injector}\n     * @private\n     */\n    this.injector_ = $injector;\n\n    /**\n     * @type {!angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * The collection of DataSources from ngeo. When this service creates\n     * a data source, its gets added to that collection.\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.misc.File}\n     * @private\n     */\n    this.ngeoFile_ = ngeoFile;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * All external data sources that are created are stored here. The key\n     * is the data source id.\n     *\n     * Note: This cache is never cleaned and elements are never removed from it.\n     * If a data source with an id already exists in this cache, it is used\n     * instead of being re-created.\n     *\n     * @type {Object.<number, !ngeo.datasource.OGC|!ngeo.datasource.File>}\n     * @private\n     */\n    this.extDataSources_ = {};\n\n    /**\n     * File external data sources, with the key being the file name.\n     * @type {Object.<string, !ngeo.datasource.File>}\n     * @private\n     */\n    this.files_ = {};\n\n    /**\n     * @type {?ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * Group that contains file data sources.\n     * @type {!ngeo.datasource.FileGroup}\n     * @private\n     */\n    this.fileGroup_ = new ngeoDatasourceFileGroup({\n      dataSources: [],\n      injector: this.injector_,\n      title: gettextCatalog.getString('Local files')\n    });\n\n    /**\n     * Collection of WMS groups.\n     * @type {!ol.Collection.<!ngeo.datasource.WMSGroup>}\n     * @private\n     */\n    this.wmsGroupsCollection_ = new olCollection();\n\n    /**\n     * Collection of groups for WMTS data sources.\n     * @type {!ol.Collection.<!ngeo.datasource.OGCGroup>}\n     * @private\n     */\n    this.wmtsGroupsCollection_ = new olCollection();\n\n    /**\n     * Cache that stores the information of a WMTS data source. The key is the\n     * data source id.\n     * @type {!Object.<number, gmfx.datasource.ExternalDataSourcesManagerWMTSCacheItem>}\n     * @private\n     */\n    this.wmtsCache_ = {};\n\n    olEvents.listen(this.dataSources_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n\n  // === File Group ===\n\n  /**\n   * @return {!ngeo.datasource.FileGroup} File group.\n   * @export\n   */\n  get fileGroup() {\n    return this.fileGroup_;\n  }\n\n\n  // === WMS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  addWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.push(wmsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  removeWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.remove(wmsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.WMSGroup} WMS group.\n   */\n  getWMSGroup(url) {\n    let found = null;\n    for (const wmsGroup of this.wmsGroups) {\n      if (wmsGroup.url === url) {\n        found = wmsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.WMSGroup>} List of WMS groups.\n   * @export\n   */\n  get wmsGroups() {\n    return this.wmsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.WMSGroup>} Collection of WMS\n   *     groups.\n   * @export\n   */\n  get wmsGroupsCollection() {\n    return this.wmsGroupsCollection_;\n  }\n\n\n  // === WMTS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  addWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.push(wmtsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  removeWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.remove(wmtsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.OGCGroup} WMTS group.\n   */\n  getWMTSGroup(url) {\n    let found = null;\n    for (const wmtsGroup of this.wmtsGroups) {\n      if (wmtsGroup.url === url) {\n        found = wmtsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.OGCGroup>} List of groups for WMTS data\n   *     sources.\n   * @export\n   */\n  get wmtsGroups() {\n    return this.wmtsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.OGCGroup>} Collection of groups\n   *     for WMTS data sources.\n   * @export\n   */\n  get wmtsGroupsCollection() {\n    return this.wmtsGroupsCollection_;\n  }\n\n\n  // === Other methods ===\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source\n   * @return {boolean} Whether the given data source is external or not. To\n   *     be considered external, it needs to be in the external data source\n   *     hash (cache).\n   */\n  isExternalDataSource(dataSource) {\n    return !!this.extDataSources_[dataSource.id];\n  }\n\n  /**\n   * @return {ol.layer.Group} Layer group where to push layers created by\n   *     this service.\n   */\n  get layerGroup() {\n    const map = this.map_;\n    googAsserts.assert(map);\n    return this.ngeoLayerHelper_.getGroupFromMap(\n      map,\n      gmfBase.EXTERNALLAYERGROUP_NAME\n    );\n  }\n\n  /**\n   * @param {?ol.Map} map Map\n   */\n  set map(map) {\n    this.map_ = map;\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  addLayer_(layer) {\n    this.layerGroup.getLayers().push(layer);\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  removeLayer_(layer) {\n    this.layerGroup.getLayers().remove(layer);\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object.\n   * @param {!Object} capabilities  WMS Capabilities definition\n   * @param {string} url The WMS service url.\n   * @export\n   */\n  createAndAddDataSourceFromWMSCapability(layer, capabilities, url) {\n\n    const id = exports.getId(layer);\n    const service = capabilities['Service'];\n\n    let dataSource;\n\n    // (1) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n      const req = capabilities['Capability']['Request'];\n\n      // ogcImageType\n      const formats = req['GetMap']['Format'];\n      const imagePngType = 'image/png';\n      const ogcImageType = formats.includes(imagePngType) ?\n        imagePngType : formats[0];\n\n      // wmsInfoFormat\n      const infoFormats = req['GetFeatureInfo']['Format'];\n      const wmsInfoFormat = infoFormats.includes(\n        ngeoDatasourceOGC.WMSInfoFormat.GML\n      ) ? ngeoDatasourceOGC.WMSInfoFormat.GML : undefined;\n\n      // queryable\n      const queryable = layer['queryable'] === true &&\n          wmsInfoFormat !== undefined;\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: layer['Title'],\n        ogcImageType: ogcImageType,\n        ogcLayers: [{\n          name: layer['Name'],\n          queryable: queryable\n        }],\n        ogcType: ngeoDatasourceOGC.Type.WMS,\n        visible: true,\n        wmsInfoFormat: wmsInfoFormat,\n        wmsUrl: url\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n\n    // (2) Add data source in WMS group, unless it's already in there.\n    //     Will also add the data source to the `ngeo.DataSources` collection.\n    //     If the group is created, its inner OL layer is also added to the map.\n    let wmsGroup = this.getWMSGroup(url);\n    if (wmsGroup) {\n      if (!wmsGroup.dataSources.includes(dataSource)) {\n        wmsGroup.addDataSource(dataSource);\n        this.dataSources_.push(dataSource);\n      }\n    } else {\n      wmsGroup = new ngeoDatasourceWMSGroup({\n        dataSources: [dataSource],\n        injector: this.injector_,\n        title: service['Title'],\n        url: url\n      }, this.ngeoLayerHelper_);\n      this.addLayer_(wmsGroup.layer);\n      this.addWMSGroup_(wmsGroup);\n      this.dataSources_.push(dataSource);\n    }\n  }\n\n  /**\n   * @param {!Object} layer WTMS Capability Layer object.\n   * @param {!Object} capabilities  WMTS Capabilities definition\n   * @param {string} wmtsUrl The WMTS capabilities url\n   * @export\n   */\n  createAndAddDataSourceFromWMTSCapability(layer, capabilities, wmtsUrl) {\n    const id = exports.getId(layer);\n\n    // (1) No need to do anything if there's already a WMTS data source (and its\n    // layer in the map)\n    if (this.wmtsCache_[id]) {\n      return;\n    }\n\n    let dataSource;\n\n    // (2) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n\n      const name = googAsserts.assertString(layer['Title']);\n      const wmtsLayer = googAsserts.assertString(layer['Identifier']);\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: name,\n        ogcType: ngeoDatasourceOGC.Type.WMTS,\n        visible: true,\n        wmtsLayer: wmtsLayer,\n        wmtsUrl: wmtsUrl\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n    // (3) Get/Create group, then add data source to group\n    let wmtsGroup = this.getWMTSGroup(wmtsUrl);\n    if (!wmtsGroup) {\n      wmtsGroup = new ngeoDatasourceOGCGroup({\n        dataSources: [],\n        title: capabilities['ServiceIdentification']['Title'],\n        url: wmtsUrl\n      });\n      this.addWMTSGroup_(wmtsGroup);\n    }\n    wmtsGroup.addDataSource(dataSource);\n\n    // (4) Create and add the OL layer\n    const layerObj = this.ngeoLayerHelper_.createWMTSLayerFromCapabilititesObj(\n      capabilities,\n      layer\n    );\n    this.addLayer_(layerObj);\n\n    // (5) Add data source to ngeo collection\n    this.dataSources_.push(dataSource);\n\n    // (6) Create and set WMTS cache item\n    this.wmtsCache_[id] = {\n      layerObj: layerObj,\n      // This watcher synchronizes the data source visible property to\n      // the OL layer object visible property\n      unregister: this.rootScope_.$watch(\n        () => dataSource.visible,\n        this.handleWMTSDataSourceVisibleChange_.bind(this, layerObj)\n      )\n    };\n  }\n\n  /**\n   * @param {!File} file File.\n   * @export\n   */\n  createAndAddDataSourceFromFile(file) {\n    this.getFileDataSource_(file).then(\n      (dataSource) => {\n        const fileGroup = this.fileGroup_;\n\n        // (1) No need to do anything if the file has already been added...\n        if (fileGroup.dataSources.includes(dataSource)) {\n          return;\n        }\n\n        // (2) Okay, we need to add this data source. First, add its layer\n        //     to the map.\n        this.addLayer_(dataSource.layer);\n\n        // (3) Add it to the file group\n        fileGroup.addDataSource(dataSource);\n\n        // (4) Recenter the map view onto its extent\n        this.map_.getView().fit(dataSource.extent);\n\n        // (5) Finally, add it to the ngeo collection\n        this.dataSources_.push(dataSource);\n      },\n      (rejections) => {\n        googAsserts.fail(`Failed to load file: ${file.name}`);\n      }\n    );\n  }\n\n  /**\n   * Get file data source from cache, else create, store and return a new one.\n   * @param {!File} file File.\n   * @return {!angular.$q.Promise} Promise\n   * @private\n   */\n  getFileDataSource_(file) {\n\n    const defer = this.q_.defer();\n\n    if (this.files_[file.name]) {\n      defer.resolve(this.files_[file.name]);\n    } else {\n      const ngeoFile = this.ngeoFile_;\n      ngeoFile.read(file).then((content) => {\n        let features;\n        const readOptions = {\n          featureProjection: this.map_.getView().getProjection()\n        };\n\n        if (ngeoFile.isKml(content)) {\n          features = new olFormatKML().readFeatures(content, readOptions);\n        } else if (ngeoFile.isGpx(content)) {\n          features = new olFormatGPX().readFeatures(content, readOptions);\n        }\n\n        if (features) {\n          const id = exports.getId(file);\n\n          const dataSource = new ngeoDatasourceFile({\n            features: new olCollection(features),\n            id: id,\n            name: file.name,\n            visible: true\n          });\n\n          // Keep a reference if both caches\n          this.files_[file.name] = dataSource;\n          this.extDataSources_[id] = dataSource;\n\n          defer.resolve(dataSource);\n        } else {\n          defer.reject();\n        }\n      });\n    }\n\n    return defer.promise;\n  }\n\n  /**\n   * @param {!ol.layer.Tile} layer WMTS layer\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleWMTSDataSourceVisibleChange_(layer, value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      layer.setVisible(value);\n    }\n  }\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If it's an external data source, remove it from its WMS Group\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (this.extDataSources_[dataSource.id] === dataSource) {\n      if (dataSource instanceof ngeoDatasourceFile) {\n        this.removeFileDataSource_(dataSource);\n      } else if (dataSource instanceof ngeoDatasourceOGC) {\n        this.removeOGCDataSource_(dataSource);\n      }\n    }\n  }\n\n  /**\n   * Remove a data source from its group. Remove its layer from the map as well.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.File} dataSource External File data source.\n   * @private\n   */\n  removeFileDataSource_(dataSource) {\n    this.removeLayer_(dataSource.layer);\n    this.fileGroup_.removeDataSource(dataSource);\n  }\n\n  /**\n   * Remove the data source from its group. If the group no longer has\n   * any data source in it, it is removed then destroyed and its layer is\n   * removed from the map.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.OGC} dataSource External OGC data source.\n   * @private\n   */\n  removeOGCDataSource_(dataSource) {\n    if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMS) {\n      // WMS data source\n      const url = dataSource.wmsUrl;\n      googAsserts.assert(url);\n\n      const wmsGroup = this.getWMSGroup(url);\n      if (wmsGroup && wmsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmsGroup.removeDataSource(dataSource);\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the group, and remove the layer from the map as well.\n        if (!wmsGroup.dataSources.length) {\n          this.removeLayer_(wmsGroup.layer);\n          wmsGroup.destroy();\n          this.removeWMSGroup_(wmsGroup);\n        }\n      }\n    } else if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMTS) {\n      // WMTS data source\n      const url = dataSource.wmtsUrl;\n      googAsserts.assert(url);\n\n      const wmtsGroup = this.getWMTSGroup(url);\n      if (wmtsGroup && wmtsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmtsGroup.removeDataSource(dataSource);\n\n        // Remove the cache item, in addition to removing the layer from the\n        // map and unregister the watcher\n        const id = dataSource.id;\n        this.removeLayer_(this.wmtsCache_[id].layerObj);\n        this.wmtsCache_[id].unregister();\n        delete this.wmtsCache_[id];\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the groug.\n        if (!wmtsGroup.dataSources.length) {\n          wmtsGroup.destroy();\n          this.removeWMTSGroup_(wmtsGroup);\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * Get the data source id from a WMS or WMTS Capability Layer object, or\n * from a File object.\n *\n * Please, note that this is used to generate a unique id for the created\n * external data sources and since a WMS/WMTS Capability Layer objects don't\n * natively contains an id by themselves, then it is programmatically generated\n * using the `ol.getUid` method, plus a million.\n *\n * @param {!Object} layer WMS/WMTS Capability Layer object.\n * @return {number} Data source id.\n * @export\n */\nexports.getId = function(layer) {\n  return olBase.getUid(layer) + 1000000;\n};\n\n\nexports.module = angular.module('gmfExternalDataSourcesManager', [\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscFile.module.name,\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('gmfExternalDataSourcesManager',\n  exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.btnComponent\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Attributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach((expressionFn, i) => {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  });\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Attributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.DataSources\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport olView from 'ol/View.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoDataSources\n   * @ngInject\n   */\n  constructor() {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = new olCollection();\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_ === map) {\n      return;\n    }\n\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.collection_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.service('ngeoDataSources', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.editFeatureComponent\n */\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\n\n/** @suppress {extraRequire} */\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\n\nimport gmfEditingXSDAttributes from 'gmf/editing/XSDAttributes.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport googAsserts from 'goog/asserts.js';\nimport DateFormatter from 'ngeo/misc/php-date-formatter.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.css';\n\n\n/** @suppress {extraRequire} */\nimport ngeoEditingAttributesComponent from 'ngeo/editing/attributesComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingCreatefeatureComponent from 'ngeo/editing/createfeatureComponent.js';\n\nimport ngeoUtils from 'ngeo/utils.js';\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMenu from 'ngeo/Menu.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\n\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfEditingFeatureComponent', [\n  gmfEditingEditFeature.module.name,\n  gmfEditingSnapping.module.name,\n  gmfEditingXSDAttributes.module.name,\n  ngeoEditingAttributesComponent.name,\n  ngeoEditingCreatefeatureComponent.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMessageModalComponent.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/editing/editFeatureComponent', require('./editFeatureComponent.html'));\n});\n\n\n/**\n * Directive used to insert, modify and delete features from a single layer.\n * It allows you to modify the geometry of the feature in addition to its\n * attributes.\n *\n * In order to modify or delete a feature, you must click on the map at the\n * location of the feature to select it first.\n *\n * In order to create a new feature, you use the \"Draw\" button and digitize\n * the feature on the map.\n *\n * Example:\n *\n *     <gmf-editfeature\n *         gmf-editfeature-dirty=\"ctrl.dirty\"\n *         gmf-editfeature-editabletreectrl=\"::ctrl.treeCtrl\"\n *         gmf-editfeature-map=\"::ctrl.map\"\n *         gmf-editfeature-state=\"efsCtrl.state\"\n *         gmf-editfeature-tolerance=\"::ctrl.tolerance\"\n *         gmf-editfeature-vector=\"::ctrl.vectorLayer\">\n *     </gmf-editfeature>\n *\n * @htmlAttribute {boolean} gmf-editfeature-dirty Flag that is toggled as soon\n *     as the feature changes, i.e. if any of its properties change, which\n *     includes the geometry.\n * @htmlAttribute {ngeo.layertree.Controller} gmf-editfeature-editabletreectrl\n *     A reference to the editable Layertree controller, which contains a\n *     a reference to the node and WMS layer.\n * @htmlAttribute {ol.Map} gmf-editfeature-map The map.\n * @htmlAttribute {string} gmf-editfeature-state The state property shared\n *     with the `gmf-editfeatureselector` directive. For more info, see in\n *     that directive.\n * @htmlAttribute {number|undefined} gmf-editfeatureselector-tolerance The\n *     buffer in pixels to use when making queries to get the features.\n * @htmlAttribute {ol.layer.Vector} gmf-editfeature-vector The vector layer in\n *     which to draw the vector features.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfEditfeature\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfEditfeatureController as efCtrl',\n    scope: {\n      'dirty': '=gmfEditfeatureDirty',\n      'editableTreeCtrl': '=gmfEditfeatureEditabletreectrl',\n      'map': '<gmfEditfeatureMap',\n      'state': '=gmfEditfeatureState',\n      'tolerance': '<?gmfEditfeatureTolerance',\n      'vectorLayer': '<gmfEditfeatureVector'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/editing/editFeatureComponent'\n  };\n};\n\n\nexports.directive('gmfEditfeature',\n  exports.component_);\n\n\n/**\n * @param {jQuery} $element Element.\n * @param {angular.$q} $q Angular $q service.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmf.editing.EditFeature} gmfEditFeature Gmf edit feature service.\n * @param {gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @param {gmf.editing.XSDAttributes} gmfXSDAttributes The gmf XSDAttributes service.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo Event Helper.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfEditfeatureController\n */\nexports.Controller_ = function($element, $q, $scope, $timeout,\n  gettextCatalog, gmfEditFeature, gmfSnapping, gmfXSDAttributes,\n  ngeoEventHelper, ngeoFeatureHelper, ngeoLayerHelper, ngeoToolActivateMgr) {\n\n\n  // === Binding properties ===\n\n  /**\n   * Flag that is toggled as soon as the feature changes, i.e. if any of its\n   * properties change, which includes the geometry.\n   * @type {boolean}\n   * @export\n   */\n  this.dirty;\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.editableTreeCtrl;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * The state property shared with the `gmf-editfeatureselector` directive.\n   * For more info, see in that directive.\n   * @type {string}\n   * @export\n   */\n  this.state;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.tolerance;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.vectorLayer;\n\n\n  // === Injected properties ===\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {gmf.editing.EditFeature}\n   * @private\n   */\n  this.gmfEditFeature_ = gmfEditFeature;\n\n  /**\n   * @type {gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n\n  /**\n   * @type {gmf.editing.XSDAttributes}\n   * @private\n   */\n  this.gmfXSDAttributes_ = gmfXSDAttributes;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n\n  // === Private properties ===\n\n  /**\n   * @type {gmfThemes.GmfLayer}\n   * @private\n   */\n  this.editableNode_;\n\n  /**\n   * @type {ol.layer.Image|ol.layer.Tile}\n   * @private\n   */\n  this.editableWMSLayer_;\n\n  /**\n   * A deferred object resolved after the confirm modal \"continue w/o saving\" or\n   * \"save\" buttons are clicked.\n   * @type {angular.$q.Deferred|null}\n   * @private\n   */\n  this.confirmDeferred_ = null;\n\n  /**\n   * Flag that controls the visibility of the modal that manages unsaved\n   * modifications.\n   * @type {boolean}\n   * @export\n   */\n  this.unsavedModificationsModalShown = false;\n\n  /**\n   * Flag that is toggled while a request is pending, either one to get\n   * features when a map is clicked or when saving\n   * @private\n   */\n  this.pending = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = true;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.createActive = false;\n\n  /**\n   * @type {ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.createToolActivate = new ngeoMiscToolActivate(this, 'createActive');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.mapSelectActive = true;\n\n  /**\n   * @type {ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.mapSelectToolActivate = new ngeoMiscToolActivate(this, 'mapSelectActive');\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature = null;\n\n  this.scope_.$watch(\n    () => this.feature,\n    this.handleFeatureChange_.bind(this)\n  );\n\n  /**\n   * @type {number|string|undefined}\n   * @export\n   */\n  this.featureId = undefined;\n\n  /**\n   * @type {ol.Collection}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Collection}\n   * @private\n   */\n  this.interactions_ = new olCollection();\n\n  /**\n   * @type {ol.interaction.Modify}\n   * @private\n   */\n  this.modify_;\n\n  /**\n   * @type {ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.modifyToolActivate;\n\n  /**\n   * @type {ngeo.Menu}\n   * @private\n   */\n  this.menu_ = new ngeoMenu({\n    actions: [{\n      cls: 'fa fa-arrows',\n      label: gettextCatalog.getString('Move'),\n      name: 'move'\n    }, {\n      cls: 'fa fa-rotate-right',\n      label: gettextCatalog.getString('Rotate'),\n      name: 'rotate'\n    }]\n  });\n\n  /**\n   * @type {ngeo.interaction.Translate}\n   * @private\n   */\n  this.translate_;\n\n  /**\n   * @type {ngeo.interaction.Rotate}\n   * @private\n   */\n  this.rotate_;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.rotateToolActivate;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.translateToolActivate;\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?Array.<!ngeox.Attribute>}\n   * @export\n   */\n  this.attributes = null;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showServerError = false;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.serverErrorMessage = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.serverErrorType = null;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const lang = this.gettextCatalog_.getCurrentLanguage();\n  $.datetimepicker.setLocale(lang);\n  $.datetimepicker.setDateFormatter(new DateFormatter());\n\n  // (1) Set default values and other properties\n  this.dirty = this.dirty === true;\n  this.editableNode_ = /** @type {gmfThemes.GmfLayer} */ (\n    this.editableTreeCtrl.node);\n  this.features = this.vectorLayer.getSource().getFeaturesCollection();\n  this.tolerance = this.tolerance !== undefined ? this.tolerance : 10;\n\n  // (1.1) Set editable WMS layer\n  const layer = gmfLayertreeSyncLayertreeMap.getLayer(this.editableTreeCtrl);\n  googAsserts.assert(\n    layer instanceof olLayerImage || layer instanceof olLayerTile);\n  this.editableWMSLayer_ = layer;\n\n  // (1.2) Create, set and initialize interactions\n  this.modify_ = new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.features,\n    style: this.ngeoFeatureHelper_.getVertexStyle(false)\n  });\n  this.interactions_.push(this.modify_);\n\n  this.rotate_ = new ngeoInteractionRotate({\n    features: this.features,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf01e',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.rotate_);\n\n  this.translate_ = new ngeoInteractionTranslate({\n    features: this.features,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf047',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.translate_);\n\n  this.initializeInteractions_();\n\n  this.modifyToolActivate = new ngeoMiscToolActivate(this.modify_, 'active');\n  this.rotateToolActivate = new ngeoMiscToolActivate(this.rotate_, 'active');\n  this.translateToolActivate = new ngeoMiscToolActivate(this.translate_, 'active');\n\n  // (1.3) Add menu to map\n  this.map.addOverlay(this.menu_);\n\n\n  // (2) Watchers and event listeners\n  this.scope_.$watch(\n    () => this.createActive,\n    (newVal, oldVal) => {\n      if (newVal) {\n        this.gmfSnapping_.ensureSnapInteractionsOnTop();\n      }\n    }\n  );\n\n  this.scope_.$on('$destroy', this.handleDestroy_.bind(this));\n\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(\n      this.features,\n      'add',\n      this.handleFeatureAdd_,\n      this\n    )\n  );\n\n  this.scope_.$watch(\n    () => this.mapSelectActive,\n    this.handleMapSelectActiveChange_.bind(this)\n  );\n\n  this.scope_.$watch(\n    () => this.state,\n    (newValue, oldValue) => {\n      const state = exports.State;\n      if (newValue === state.STOP_EDITING_PENDING) {\n        this.confirmCancel().then(() => {\n          this.state = state.STOP_EDITING_EXECUTE;\n        });\n      } else if (newValue === state.DEACTIVATE_PENDING) {\n        this.confirmCancel().then(() => {\n          this.state = state.DEACTIVATE_EXECUTE;\n        });\n      }\n    }\n  );\n\n  this.scope_.$watch(\n    () => this.unsavedModificationsModalShown,\n    (newValue, oldValue) => {\n      // Reset stop request when closing the confirmation modal\n      if (oldValue && !newValue) {\n        this.state = exports.State.IDLE;\n      }\n    }\n  );\n\n\n  // (3) Get attributes\n  this.gmfXSDAttributes_.getAttributes(this.editableNode_.id).then(\n    this.setAttributes_.bind(this));\n\n\n  // (4) Toggle\n  this.toggle_(true);\n\n};\n\n\n/**\n * Save the currently selected feature modifications.\n * @export\n */\nexports.Controller_.prototype.save = function() {\n  googAsserts.assert(this.attributes);\n\n  const feature = this.feature.clone();\n  feature.setId(this.feature.getId());\n  const id = this.featureId;\n\n  this.pending = true;\n\n  const dateFormatter = new DateFormatter();\n  for (const attribute of this.attributes) {\n    if (attribute.format) {\n      if (this.feature.get(attribute.name)) {\n        const name = this.feature.get(attribute.name);\n        googAsserts.assertString(name);\n        const value = dateFormatter.parseDate(name, attribute.format);\n        let jsonFormat = 'Y-m-d\\\\TH:i:s';\n        if (attribute.type === 'date') {\n          jsonFormat = 'Y-m-d';\n        } else if (attribute.type === 'time') {\n          jsonFormat = 'H:i:s';\n        } else if (attribute.type === 'datetime') {\n          // Time zone correction\n          value.setMinutes(value.getMinutes() + value.getTimezoneOffset());\n        }\n        feature.set(attribute.name, dateFormatter.formatDate(value, jsonFormat));\n      } else {\n        // Shouldn't be set to an empty string\n        feature.set(attribute.name, null);\n      }\n    }\n  }\n\n  const promise = id ?\n    this.gmfEditFeature_.updateFeature(\n      this.editableNode_.id,\n      feature\n    ) :\n    this.gmfEditFeature_.insertFeatures(\n      this.editableNode_.id,\n      [feature]\n    );\n  promise.then(\n    (response) => {\n      this.dirty = false;\n      this.pending = false;\n      this.handleEditFeature_(response);\n    },\n    (response) => {\n      this.showServerError = true;\n      this.pending = false;\n      this.serverErrorType =  `error type : ${response.data['error_type']}`;\n      this.serverErrorMessage = `error message : ${response.data['message']}`;\n    }\n  );\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.cancel = function() {\n  this.dirty = false;\n  this.feature = null;\n  this.features.clear();\n  this.menu_.close();\n  this.unsavedModificationsModalShown = false;\n};\n\n\n/**\n * Check if there are unsaved modifications. If there aren't, then cancel.\n * Used by the 'cancel' button in the template.\n * @return {angular.$q.Promise} The promise attached to the confirm deferred\n *     object.\n * @export\n */\nexports.Controller_.prototype.confirmCancel = function() {\n  return this.checkForModifications_().then(() => {\n    this.cancel();\n  });\n};\n\n\n/**\n * Check if there's a feature selected and if it contains modifications\n * (a.k.a. is dirty), then the confirmation modal is shown.\n * @param {boolean=} scopeApply Whether to force scope to refresh or not.\n *     when the confirm modal is not dismissed.\n * @return {angular.$q.Promise} The promise attached to the confirm deferred\n *     object.\n * @private\n */\nexports.Controller_.prototype.checkForModifications_ = function(\n  scopeApply) {\n  this.confirmDeferred_ = this.q_.defer();\n  if (this.feature && this.dirty) {\n    this.unsavedModificationsModalShown = true;\n    if (scopeApply) {\n      this.scope_.$apply();\n    }\n  } else {\n    this.confirmDeferred_.resolve();\n  }\n\n  return this.confirmDeferred_.promise;\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.continueWithoutSaving = function() {\n  this.cancel();\n  this.confirmDeferred_.resolve();\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.delete = function() {\n  const msg = this.gettextCatalog_.getString(\n    'Do you really want to delete the selected feature?');\n  // Confirm deletion first\n  if (confirm(msg)) {\n    this.pending = true;\n\n    // (1) Launch request\n    this.gmfEditFeature_.deleteFeature(\n      this.editableNode_.id,\n      this.feature\n    ).then(\n      (response) => {\n        this.dirty = false;\n        this.pending = false;\n        this.ngeoLayerHelper_.refreshWMSLayer(this.editableWMSLayer_);\n\n        // (2) Reset selected feature\n        this.cancel();\n      },\n      (response) => {\n        this.showServerError = true;\n        this.pending = false;\n        this.serverErrorType =  `error type : ${response.data['error_type']}`;\n        this.serverErrorMessage = `error message : ${response.data['message']}`;\n      }\n    );\n\n  }\n};\n\n\n/**\n * Called when the modal 'save' button is clicked. Do as if the user had\n * clicked on the 'save' input button in the form, which allows the form\n * to be validated.\n * @export\n */\nexports.Controller_.prototype.submit = function() {\n  // Use timeout to prevent the digest already in progress\n  // due to clicking on the modal button to throw an error.\n  this.timeout_(() => {\n    this.element_.find('input[type=\"submit\"]').click();\n  }, 0);\n};\n\n/**\n * Called after an insert, update or delete request.\n * @param {angular.$http.Response} resp Ajax response.\n * @private\n */\nexports.Controller_.prototype.handleEditFeature_ = function(resp) {\n  const features = new olFormatGeoJSON().readFeatures(resp.data);\n  if (features.length) {\n    this.feature.setId(features[0].getId());\n    this.ngeoLayerHelper_.refreshWMSLayer(this.editableWMSLayer_);\n  }\n  if (this.confirmDeferred_) {\n    this.confirmDeferred_.resolve();\n  }\n};\n\n\n/**\n * @param {!Array.<ngeox.Attribute>} attributes Attributes.\n * @private\n */\nexports.Controller_.prototype.setAttributes_ = function(attributes) {\n  // Set attributes\n  this.attributes = attributes;\n  for (const attribute of attributes) {\n    if (attribute.type == 'date') {\n      attribute.format = 'Y-m-d';\n      attribute.mask = '9999-19-39';\n    } else if (attribute.type == 'time') {\n      attribute.format = 'H:i';\n      attribute.mask = '29:59';\n    } else if (attribute.type == 'datetime') {\n      attribute.format = 'Y-m-d H:i';\n      attribute.mask = '9999-19-39 29:59';\n    }\n  }\n\n  // Get geom type from attributes and set\n  const geomAttr = ngeoFormatXSDAttribute.getGeometryAttribute(\n    this.attributes\n  );\n  if (geomAttr && geomAttr.geomType) {\n    this.geomType = geomAttr.geomType;\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeatureAdd_ = function(evt) {\n  this.feature = null;\n  this.timeout_(() => {\n    googAsserts.assert(this.attributes);\n    const feature = evt.element;\n    googAsserts.assertInstanceof(feature, olFeature);\n    const dateFormatter = new DateFormatter();\n    for (const attribute of this.attributes) {\n      if (attribute.format) {\n        if (feature.get(attribute.name)) {\n          let value;\n          if (attribute.type === 'datetime') {\n            value = new Date(feature.get(attribute.name));\n            // Time zone correction\n            value.setMinutes(value.getMinutes() - value.getTimezoneOffset());\n          } else {\n            let jsonFormat = '';\n            if (attribute.type === 'date') {\n              jsonFormat = 'Y-m-d';\n            } else if (attribute.type === 'time') {\n              jsonFormat = 'H:i:s';\n            }\n            const name = feature.get(attribute.name);\n            googAsserts.assertString(name);\n            value = dateFormatter.parseDate(name, jsonFormat);\n          }\n          feature.set(attribute.name, dateFormatter.formatDate(value, attribute.format));\n        } else {\n          // Shouldn't be set to an empty string\n          feature.set(attribute.name, null);\n        }\n      }\n    }\n    this.feature = feature;\n    this.createActive = false;\n    if (!feature.getId()) {\n      this.dirty = true;\n    }\n    this.scope_.$apply();\n  }, 0);\n};\n\n\n/**\n * Activate or deactivate this directive.\n * @param {boolean} active Whether to activate this directive or not.\n * @private\n */\nexports.Controller_.prototype.toggle_ = function(active) {\n\n  const keys = this.listenerKeys_;\n  const createUid = ['create-', olBase.getUid(this)].join('-');\n  const otherUid = ['other-', olBase.getUid(this)].join('-');\n  const toolMgr = this.ngeoToolActivateMgr_;\n\n  if (active) {\n\n    // FIXME\n    //this.registerInteractions_();\n\n    keys.push(olEvents.listen(this.menu_, 'actionclick',\n      this.handleMenuActionClick_, this));\n\n    keys.push(olEvents.listen(this.translate_,\n      'translateend',\n      this.handleTranslateEnd_, this));\n\n    keys.push(olEvents.listen(this.rotate_, 'rotateend', this.handleRotateEnd_, this));\n\n    toolMgr.registerTool(createUid, this.createToolActivate, false);\n    toolMgr.registerTool(createUid, this.mapSelectToolActivate, true);\n\n    toolMgr.registerTool(otherUid, this.createToolActivate, false);\n    toolMgr.registerTool(otherUid, this.modifyToolActivate, true);\n    toolMgr.registerTool(otherUid, this.translateToolActivate, false);\n    toolMgr.registerTool(otherUid, this.rotateToolActivate, false);\n\n  } else {\n\n    // FIXME\n    //this.unregisterInteractions_();\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n\n    toolMgr.unregisterTool(createUid, this.createToolActivate);\n    toolMgr.unregisterTool(createUid, this.mapSelectToolActivate);\n\n    toolMgr.unregisterTool(otherUid, this.createToolActivate);\n    toolMgr.unregisterTool(otherUid, this.modifyToolActivate);\n    toolMgr.unregisterTool(otherUid, this.translateToolActivate);\n    toolMgr.unregisterTool(otherUid, this.rotateToolActivate);\n\n    this.createActive = false;\n    this.cancel();\n  }\n\n  this.modify_.setActive(active);\n  this.mapSelectActive = active;\n  this.editableTreeCtrl.properties['editing'] = active;\n\n};\n\n\n/**\n * Called when the mapSelectActive property changes.\n * @param {boolean} active Whether the map select is active or not.\n * @private\n */\nexports.Controller_.prototype.handleMapSelectActiveChange_ = function(\n  active) {\n\n  const mapDiv = this.map.getViewport();\n  googAsserts.assertElement(mapDiv);\n\n  if (active) {\n    olEvents.listen(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.listen(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n  } else {\n    olEvents.unlisten(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.unlisten(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n  }\n};\n\n\n/**\n * Called when the map is clicked.\n *\n * (1) If a vector feature was clicked, don't do anything (i.e. allow the\n *     interactions to do their bidings without selecting a new feature).\n *\n * (2) Otherwise, if there is a feature being edited and has unsaved\n *     modifications, show the confirmation modal asking the user what to do\n *     about it.\n *\n * (3) If there's no feature selected or we have one without unsaved\n *     modifications or with modifications that were canceled, launch a query\n *     to fetch the features at the clicked location.\n *\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapClick_ = function(evt) {\n  const coordinate = evt.coordinate;\n  const pixel = evt.pixel;\n\n  // (1) Check if we clicked on an existing vector feature, i.e the one\n  //     selected. In that case, no need to do any further action.\n  const feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 5\n    }\n  );\n\n  if (feature) {\n    return;\n  }\n\n  // (2) If a feature is being edited and has unsaved changes, show modal\n  //     to let the user decide what to do\n  this.checkForModifications_(true).then(() => {\n\n    const map = this.map;\n    const view = map.getView();\n    const resolution = view.getResolution();\n    const buffer = resolution * this.tolerance;\n    const extent = olExtent.buffer(\n      [coordinate[0], coordinate[1], coordinate[0], coordinate[1]],\n      buffer\n    );\n\n    // (3) Launch query to fetch features\n    this.gmfEditFeature_.getFeaturesInExtent(\n      [this.editableNode_.id],\n      extent\n    ).then(this.handleGetFeatures_.bind(this));\n\n    // (4) Clear any previously selected feature\n    this.cancel();\n\n    // (5) Pending\n    this.pending = true;\n  });\n};\n\n\n/**\n * @param {Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(evt) {\n  const pixel = this.map.getEventPixel(evt);\n  const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 7\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // show contextual menu when clicking on certain types of features\n  if (feature) {\n    const type = this.ngeoFeatureHelper_.getType(feature);\n    if (type === ngeoGeometryType.POLYGON || type === ngeoGeometryType.MULTI_POLYGON ||\n        type === ngeoGeometryType.LINE_STRING || type === ngeoGeometryType.MULTI_LINE_STRING) {\n      this.menu_.open(coordinate);\n    }\n    evt.preventDefault();\n    evt.stopPropagation();\n  }\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @private\n */\nexports.Controller_.prototype.handleGetFeatures_ = function(features) {\n  this.pending = false;\n\n  this.timeout_(() => {\n    if (features.length) {\n      const feature = features[0];\n      this.feature = feature;\n      this.features.push(feature);\n    }\n  }, 0);\n};\n\n\n/**\n * Initialize interactions by setting them inactive and decorating them\n * @private\n */\nexports.Controller_.prototype.initializeInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    interaction.setActive(false);\n    ngeoMiscDecorate.interaction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by adding them to the map\n * @private\n */\nexports.Controller_.prototype.registerInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.addInteraction(interaction);\n  });\n};\n\n\n/**\n * Unregister interactions, i.e. set them inactive and remove them from the map\n * @private\n */\nexports.Controller_.prototype.unregisterInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.removeInteraction(interaction);\n  });\n};\n\n\n/**\n * @param {?ol.Feature} newFeature The new feature.\n * @param {?ol.Feature} oldFeature The old feature.\n * @private\n */\nexports.Controller_.prototype.handleFeatureChange_ = function(\n  newFeature, oldFeature\n) {\n\n  let geom;\n  if (oldFeature) {\n    olEvents.unlisten(oldFeature, 'propertychange', this.handleFeaturePropertyChange_, this);\n    geom = oldFeature.getGeometry();\n    googAsserts.assert(geom);\n    olEvents.unlisten(\n      geom,\n      'change',\n      this.handleFeatureGeometryChange_,\n      this\n    );\n    this.unregisterInteractions_();\n  }\n\n  if (newFeature) {\n    this.featureId = newFeature.getId();\n    olEvents.listen(newFeature, 'propertychange', this.handleFeaturePropertyChange_, this);\n    geom = newFeature.getGeometry();\n    googAsserts.assert(geom);\n    olEvents.listen(\n      geom,\n      'change',\n      this.handleFeatureGeometryChange_,\n      this\n    );\n    this.registerInteractions_();\n\n    this.gmfSnapping_.ensureSnapInteractionsOnTop();\n\n    // The `ui-date` triggers an unwanted change, i.e. it converts the text\n    // to Date, which makes the directive dirty when it shouldn't... to\n    // bypass this, we reset the dirty state here. We do so only if we're\n    // editing an existing feature\n    if (this.featureId) {\n      this.timeout_(() => {\n        this.dirty = false;\n        this.scope_.$apply();\n      }, 0);\n    }\n  } else {\n    this.featureId = undefined;\n  }\n\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeaturePropertyChange_ = function() {\n  this.dirty = true;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeatureGeometryChange_ = function() {\n  this.dirty = true;\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {ngeox.MenuEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuActionClick_ = function(evt) {\n  const action = evt.detail.action;\n\n  switch (action) {\n    case 'move':\n      this.translate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    case 'rotate':\n      this.rotate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * @param {ol.interaction.Translate.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleTranslateEnd_ = function(evt) {\n  this.translate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.RotateEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleRotateEnd_ = function(evt) {\n  this.rotate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.features.clear();\n  this.handleFeatureChange_(null, this.feature);\n  this.feature = null;\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.toggle_(false);\n  this.handleMapSelectActiveChange_(false);\n  this.unregisterInteractions_();\n};\n\n\nexports.controller('GmfEditfeatureController',\n  exports.Controller_);\n\n\n/**\n * The different possible values of the `state` inner property.\n * @enum {string}\n */\nexports.State = {\n  /**\n   * The default state. While idle, nothing happens.\n   * @type {string}\n   */\n  IDLE: 'idle',\n  /**\n   * The state active after the deactivation of the editing tools and the\n   * unsaved modifications were saved or discarded.\n   * @type {string}\n   */\n  DEACTIVATE_EXECUTE: 'deactivate_execute',\n  /**\n   * The state active when the deactivation of the editing tools is in\n   * progress while there are unsaved modifications.\n   * @type {string}\n   */\n  DEACTIVATE_PENDING: 'deactivate_pending',\n  /**\n   * Final state set after the \"stop editing\" button has been clicked while\n   * no unsaved modifications were made or if the user saved them or confirmed\n   * to continue without saving.\n   * @type {string}\n   */\n  STOP_EDITING_EXECUTE: 'stop_editing_execute',\n  /**\n   * The state that is active while when the \"stop editing\" button has been\n   * clicked but before any confirmation has been made to continue.\n   * @type {string}\n   */\n  STOP_EDITING_PENDING: 'stop_editing_pending'\n};\n\n\nexport default exports;\n","/**\n * @module gmf.theme.Manager\n */\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.DataSource\n */\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Select\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A select rule, which allows the selection of multiple values among a list\n   * of choices.\n   *\n   * The expression property holds the list of selected choices, which is\n   * comma-separated.\n   *\n   * @struct\n   * @param {!ngeox.rule.SelectOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = ngeoRuleRule.OperatorType.EQUAL_TO;\n    options.type = ngeoFormatAttributeType.SELECT;\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.choices_ = options.choices;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {Array.<string>} Choices\n   * @export\n   */\n  get choices() {\n    return this.choices_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {Array.<string>} Selected choices\n   * @export\n   */\n  get selectedChoices() {\n    let selectedChoices;\n    if (this.expression) {\n      const stringExpression = String(this.expression);\n      selectedChoices = stringExpression.split(',');\n    } else {\n      selectedChoices = [];\n    }\n    return selectedChoices;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module gmf.editing.EditFeature\n */\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Service that provides methods to get, insert, update and delete vector\n * features with the use of a GeoMapFish Protocol as back-end.\n *\n * The GeoJSON format is used when obtaining or sending features.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n * @ngInject\n */\nconst exports = function($http, gmfLayersUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * Url to the GeoMapFish layers service. Required in applications that use:\n   * - the editfeature tools\n   * - the objectediting tools\n   *\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = gmfLayersUrl;\n\n};\n\n\n/**\n * Build a query to the MapFish protocol to fetch features from a list\n * of layer ids inside a specified extent.\n *\n * @param {Array.<number>} layerIds List of layer ids to get the features from.\n * @param {ol.Extent} extent The extent where to get the features from.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getFeaturesInExtent = function(layerIds, extent) {\n  const url = olUri.appendParams(\n    `${this.baseUrl_}/${layerIds.join(',')}`,\n    {\n      'bbox': extent.join(',')\n    }\n  );\n  return this.http_.get(url).then(this.handleGetFeatures_.bind(this));\n};\n\n\n/**\n * Build a query to the MapFish protocol to fetch features from a list\n * of layer ids and a list of comparison filters.\n *\n * This method is called in the ObjectEditing service, which is injected in\n * the permalink service, i.e. it's always called. Since we don't have to\n * define the url to the GMF Protocol (layers) a dummy promise returns an\n * empty array of features if the url is not defined.\n *\n * @param {!Array.<number>} layerIds List of layer ids to get the features from.\n * @param {!Array.<!gmfx.ComparisonFilter>} filters List of comparison filters\n * @return {angular.$q.Promise} Promise.\n */\nexports.prototype.getFeaturesWithComparisonFilters = function(\n  layerIds, filters\n) {\n  const properties = [];\n  const params = {};\n\n  for (const filter of filters) {\n    params[`${filter.property}__${filter.operator}`] = filter.value;\n    properties.push(filter.property);\n  }\n\n  params['queryable'] = properties.join(',');\n\n  const url = olUri.appendParams(`${this.baseUrl_}/${layerIds.join(',')}`, params);\n  return this.http_.get(url).then(this.handleGetFeatures_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Array.<ol.Feature>} List of features.\n * @private\n */\nexports.prototype.handleGetFeatures_ = function(resp) {\n  return new olFormatGeoJSON().readFeatures(resp.data);\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {Array.<ol.Feature>} features List of features to insert.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.insertFeatures = function(layerId, features) {\n  const url = `${this.baseUrl_}/${layerId}`;\n  const geoJSON = new olFormatGeoJSON().writeFeatures(features);\n  return this.http_.post(url, geoJSON, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {ol.Feature} feature The feature to update.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.updateFeature = function(layerId, feature) {\n  const url = `${this.baseUrl_}/${layerId.toString()}/${feature.getId()}`;\n  const geoJSON = new olFormatGeoJSON().writeFeature(feature);\n  return this.http_.put(url, geoJSON, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {ol.Feature} feature The feature to delete.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.deleteFeature = function(layerId, feature) {\n  const url = `${this.baseUrl_}/${layerId.toString()}/${feature.getId()}`;\n  return this.http_.delete(url, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfEditFeature', []);\nexports.module.service('gmfEditFeature', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.debounce\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.common\n */\nconst exports = {};\nimport {createEditingStyle} from 'ol/style/Style.js';\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultDrawStyleFunction = function() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultModifyStyleFunction = function() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[/**@type {ol.geom.GeometryType} */ ('Point')];\n  };\n};\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.Service\n */\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\n\n/**\n * An \"authentication\" service for a GeoMapFish application. Upon loading, it\n * launches a request to determine whether a user is currently logged in or\n * not.\n *\n * The possible API requests it supports, which are all self-explanatory, are:\n *\n * - changePassword\n * - login\n * - logout\n * - resetPassword\n *\n * @extends {ol.events.EventTarget}\n */\nconst exports = class extends olEventsEventTarget {\n\n  /**\n   * @param {angular.$http} $http Angular http service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angular.Scope} $rootScope The directive's scope.\n   * @param {string} authenticationBaseUrl URL to \"authentication\" web service.\n   * @param {gmfx.User} gmfUser User.\n   * @ngInject\n   */\n  constructor($http, $injector, $rootScope, authenticationBaseUrl, gmfUser) {\n\n    super();\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.$http_ = $http;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$rootScope_ = $rootScope;\n\n    /**\n     * The authentication url without trailing slash\n     * @type {string}\n     * @private\n     */\n    this.baseUrl_ = authenticationBaseUrl.replace(/\\/$/, '');\n\n    /**\n     * @type {gmfx.User}\n     * @private\n     */\n    this.user_ = gmfUser;\n\n    /**\n      * Don't request a new user object from the back-end after\n      * logging out if the logged-in user's role has this role.\n      * @type {?string}\n      * @private\n      */\n    this.noReloadRole_ =  $injector.has('gmfAuthenticationNoReloadRole')\n      ? $injector.get('gmfAuthenticationNoReloadRole')\n      : null;\n\n    this.load_();\n  }\n\n  /**\n   * Load the authentication service, which sends an asynch request to\n   * determine whether the user is currently connected or not.\n   * @private\n   */\n  load_() {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.IS_LOGGED_IN}`;\n    this.$http_.get(url, {withCredentials: true}).then(\n      this.handleLogin_.bind(this, true)\n    );\n  }\n\n  /**\n   * @param {string} oldPwd Old password.\n   * @param {string} newPwd New password.\n   * @param {string} confPwd New password confirmation.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  changePassword(oldPwd, newPwd, confPwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.CHANGE_PASSWORD}`;\n\n    return this.$http_.post(url, $.param({\n      'oldPassword': oldPwd,\n      'newPassword': newPwd,\n      'confirmNewPassword': confPwd\n    }), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    }).then(((response) => {\n      this.user_.is_password_changed = true;\n      this.$rootScope_.$digest();\n    }).bind(this));\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @param {string} pwd Password.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  login(login, pwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGIN}`;\n\n    return this.$http_.post(url, $.param({'login': login, 'password': pwd}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    }).then(\n      this.handleLogin_.bind(this, false));\n  }\n\n  /**\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  logout() {\n    const noReload = this.user_['role_name'] === this.noReloadRole_;\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGOUT}`;\n    return this.$http_.get(url, {withCredentials: true}).then(() => {\n      this.resetUser_(noReload);\n    });\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  resetPassword(login) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.RESET_PASSWORD}`;\n\n    /**\n     * @param {angular.$http.Response} resp Ajax response.\n     * @return {gmfx.AuthenticationDefaultResponse} Response.\n     */\n    const successFn = function(resp) {\n      const respData = /** @type gmfx.AuthenticationDefaultResponse} */ (\n        resp.data);\n      return respData;\n    }.bind(this);\n\n    return this.$http_.post(url, $.param({'login': login}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n    }).then(successFn);\n  }\n\n  /**\n   * @return {?gmfx.AuthenticationFunctionalities} The role functionalities.\n   */\n  getFunctionalities() {\n    return this.user_.functionalities;\n  }\n\n  /**\n   * @return {number|null} The role ID.\n   */\n  getRoleId() {\n    return this.user_.role_id;\n  }\n\n  /**\n   * @param {boolean} checkingLoginStatus Checking the login status?\n   * @param {angular.$http.Response} resp Ajax response.\n   * @return {angular.$http.Response} Response.\n   * @private\n   */\n  handleLogin_(checkingLoginStatus, resp) {\n    const respData = /** @type {gmfx.AuthenticationLoginResponse} */ (resp.data);\n    this.setUser_(respData, !checkingLoginStatus);\n    if (checkingLoginStatus) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('ready', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n    return resp;\n  }\n\n  /**\n   * @param {gmfx.AuthenticationLoginResponse} respData Response.\n   * @param {boolean} emitEvent Emit a login event?\n   * @private\n   */\n  setUser_(respData, emitEvent) {\n    for (const key in respData) {\n      this.user_[key] = respData[key];\n    }\n    if (emitEvent && respData.username !== undefined) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('login', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @private\n   * @param {boolean} noReload Don't request a new user object from\n   * the back-end after logging out, defaults to false.\n   */\n  resetUser_(noReload) {\n    noReload = noReload || false;\n    for (const key in this.user_) {\n      this.user_[key] = null;\n    }\n    /** @type {gmfx.AuthenticationEvent} */\n    const event = new ngeoCustomEvent('logout', {user: this.user_});\n    this.dispatchEvent(event);\n    if (!noReload) {\n      this.load_();\n    }\n  }\n};\n\n/**\n * @enum {string}\n */\nexports.RouteSuffix = {\n  CHANGE_PASSWORD: 'loginchange',\n  IS_LOGGED_IN: 'loginuser',\n  LOGIN: 'login',\n  LOGOUT: 'logout',\n  RESET_PASSWORD: 'loginresetpassword'\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfAuthenticationService', []);\nexports.module.service('gmfAuthenticationService', exports);\n\nexports.module.value('gmfUser', {\n  'functionalities': null,\n  'is_password_changed': null,\n  'role_id': null,\n  'role_name': null,\n  'username': null\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.Time\n */\n/**\n * ngeo - Time service\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoTime\n */\nconst exports = function() {};\n\n/**\n * @param {number|string|null} value The value\n * @param {Date} defaultValue The default value\n * @return {Date} the date\n */\nexports.prototype.createDate = function(value, defaultValue = null) {\n  return value !== null ? new Date(value) : defaultValue;\n};\n\n/**\n * @param {Date} date The date\n * @param {number|null=} defaultValue The default value\n * @return {number|null} the time\n */\nexports.prototype.getTime = function(date, defaultValue = null) {\n  return date ? date.getTime() : defaultValue;\n};\n\n/**\n * Get options regarding the time property of a node;\n *\n * @param {ngeox.TimeProperty} time the time property of a node\n * @return {{\n *  minDate : number,\n *  maxDate : number,\n *  values : (Array<number>|number)\n * }} - Configuration for the UI components\n * @export\n */\nexports.prototype.getOptions = function(time) {\n\n  const minDate = this.createDate(time.minValue);\n  const maxDate = this.createDate(time.maxValue);\n\n  const minDefaultDate = this.createDate(time.minDefValue, minDate);\n  const maxDefaultDate = this.createDate(time.maxDefValue, maxDate);\n\n  const defaultValues = (time.mode === 'range') ?\n    [this.getTime(minDefaultDate), this.getTime(maxDefaultDate)] :\n    this.getTime(minDefaultDate);\n\n  return {\n    minDate: this.getTime(minDate),\n    maxDate: this.getTime(maxDate),\n    values: defaultValues\n  };\n};\n\n\n/**\n * Time.prototype.getUTCDate - Get UTC date from a local date object\n *\n * @param  {Object} localDate loacl date object in\n * @return {Object} UTC date\n * @export\n */\nexports.prototype.getUTCDate = function(localDate) {\n  return new Date(\n    localDate.getUTCFullYear(),\n    localDate.getUTCMonth(),\n    localDate.getUTCDate());\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoTime', []);\nexports.module.service('ngeoTime', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.DrawAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionPointer, {handleEvent as pointerHandleEvent} from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultDrawStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return pointerHandleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  /** @type {ngeox.DrawEvent} */\n  const evt = new ngeoCustomEvent('drawstart', {feature: this.sketchFeature_});\n  this.dispatchEvent(evt);\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  /** @type {ngeox.DrawEvent} */\n  const event = new ngeoCustomEvent('drawend', {feature: this.sketchFeature_});\n  this.dispatchEvent(event);\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olProjProjection from 'ol/proj/Projection.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ngeox.MeasureEvent\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, options = /** @type {ngeox.interaction.MeasureOptions} */({})) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), olProjProjection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.message.popupComponent\n */\n\nimport 'angular-sanitize';\n\n\nconst exports = angular.module('ngeoPopup', [\n  'ngSanitize',\n]);\n\n\nexports.value('ngeoPopupTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoPopupTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/message/popupcomponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/message/popupcomponent', require('./popupcomponent.html'));\n});\n\n\n/**\n * Provides a directive used to show a popup over the page with\n * a title and content.\n *\n *\n * Things to know about this directive:\n *\n * - This directive is intended to be used along with the popup service.\n *\n * - By default the directive uses \"popup.html\" as its templateUrl. This can be\n *   changed by redefining the \"ngeoPopupTemplateUrl\" value.\n *\n * - The directive doesn't create any scope but relies on its parent scope.\n *   Properties like 'content', 'title' or 'open' come from the parent scope.\n *\n * @private\n * @param {string} ngeoPopupTemplateUrl URL to popup template.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoPopup\n */\nexports.directive_ = function(ngeoPopupTemplateUrl) {\n  return {\n    restrict: 'A',\n    templateUrl: ngeoPopupTemplateUrl,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      element.addClass('popover');\n\n      /**\n       * @param {jQuery.Event} evt Event.\n       */\n      scope.close = function(evt) {\n        if (evt) {\n          evt.stopPropagation();\n          evt.preventDefault();\n        }\n        element.addClass('hidden');\n      };\n\n      // Watch the open property\n      scope.$watch('open', (newVal, oldVal) => {\n        element.css('display', newVal ? 'block' : 'none');\n      });\n    }\n  };\n};\n\nexports.directive('ngeoPopup', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Popup\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * This goog.require is needed because of 'ngeo-popup' used in\n * the template.\n * @suppress {extraRequire}\n */\nimport ngeoMessagePopupComponent from 'ngeo/message/popupComponent.js';\n\n/**\n * Provides a factory to create a popup in the page.\n * The factory returns a ngeo.message.Popup object.\n *\n * Example:\n *\n *     let popup = ngeoCreatePopup();\n *     popup.setTitle(\"A title\");\n *     popup.setContent(\"Some content\");\n *     popup.setOpen(true);\n *\n * @constructor\n * @struct\n * @param {angular.$compile} $compile The compile provider.\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoCreatePopup\n */\nconst exports = function($compile, $rootScope, $sce, $timeout) {\n\n  /**\n   * The scope the compiled element is link to.\n   * @type {angular.Scope}\n   * @export\n   */\n  this.scope = $rootScope.$new(true);\n\n  // manage the auto destruction of the popup\n  this.scope.$watch(\n    () => this.scope['open'],\n    (open) => {\n      if (!open && this.autoDestroy_) {\n        this.timeout_(() => {\n          this.destroy();\n        });\n      }\n    }\n  );\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * The element.\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = angular.element('<div ngeo-popup></div>');\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoDestroy_ = false;\n\n\n  // Compile the element, link it to the scope and add it to the document.\n  $compile(this.element_)(this.scope);\n  angular.element(document.body).append(this.element_);\n};\n\n\n/**\n * Get the current popup state.\n * @return {boolean} `true` if the popup is currently, otherwise `false`.\n * @export\n */\nexports.prototype.getOpen = function() {\n  return this.scope['open'];\n};\n\n\n/**\n * Show/hide the popup.\n * @param {boolean} open `true` to show the popup, `false` to hide it.\n * @export\n */\nexports.prototype.setOpen = function(open) {\n  this.scope['open'] = open;\n};\n\n\n/**\n * Destroy the popup.\n * @export\n */\nexports.prototype.destroy = function() {\n  this.scope.$destroy();\n  this.element_.remove();\n};\n\n\n/**\n * Set the popup's title.\n * @param {string} title The title.\n * @export\n */\nexports.prototype.setTitle = function(title) {\n  const trustedTitle = this.sce_.trustAsHtml(title);\n  this.scope['title'] = trustedTitle;\n};\n\n\n/**\n * Set the popup's content.\n * Note: the type of the `content` param is `*` instead of `string`, this\n * is because the content may be trusted using `$sce.trustAsHtml`.\n * @param {*} content The content.\n * @param {boolean=} opt_trusted Whether the content can be trusted.\n *     Default is false.\n * @export\n */\nexports.prototype.setContent = function(content, opt_trusted) {\n  this.scope['content'] = opt_trusted ? this.sce_.trustAsHtml(/** @type {string} */ (content)) : content;\n};\n\n\n/**\n * Set the popup's content with an iframe using the given url.\n * @param {string} url The url of the page.\n * @export\n */\nexports.prototype.setUrl = function(url) {\n  const content = this.sce_.trustAsHtml(\n    `<iframe src=\"${url}\" width=\"100%\" height=\"100%\"></iframe>`\n  );\n  this.setContent(content);\n};\n\n\n/**\n * Set the popup's width.\n * @param {string} width Width the popup should have.\n * @export\n */\nexports.prototype.setWidth = function(width) {\n  this.element_.width(width);\n};\n\n\n/**\n * Set the popup's height.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setHeight = function(height) {\n  this.element_.height(height);\n};\n\n\n/**\n * Set the popup's width and height.\n * @param {string} width Width the popup should have.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setSize = function(width, height) {\n  this.setWidth(width);\n  this.setHeight(height);\n};\n\n\n/**\n * Set the popup's autoDestroy property.\n * @param {boolean} autoDestroy Whether to automatically destroy the popup when\n *     being closed or not.\n * @export\n */\nexports.prototype.setAutoDestroy = function(autoDestroy) {\n  this.autoDestroy_ = autoDestroy;\n};\n\n\n/**\n * Add an extra CSS class name to the popup.\n * @param {string} cls Class name to add to the popup element.\n * @export\n */\nexports.prototype.addClass = function(cls) {\n  this.element_.addClass(cls);\n};\n\n\n/**\n * Open a popup with the given properties.\n * @param {ngeox.PopupOptions} options Options.\n * @export\n */\nexports.prototype.open = function(options) {\n\n  if (options.url) {\n    this.setUrl(options.url);\n  } else if (options.content) {\n    this.setContent(options.content);\n  } else {\n    googAsserts.fail('ngeo.message.Popup options requirest \"url\" or \"content\".');\n  }\n\n  if (options.autoDestroy !== undefined) {\n    this.setAutoDestroy(options.autoDestroy);\n  }\n\n  if (options.cls !== undefined) {\n    this.addClass(options.cls);\n  }\n\n  if (options.height !== undefined) {\n    this.setHeight(options.height);\n  }\n\n  if (options.title !== undefined) {\n    this.setTitle(options.title);\n  }\n\n  if (options.width !== undefined) {\n    this.setWidth(options.width);\n  }\n\n  this.setOpen(true);\n};\n\n\n/**\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.Scope} $rootScope Angular rootScope service.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.PopupFactory} The function to create a popup.\n * @ngInject\n */\nexports.Factory = function($compile, $rootScope, $sce, $timeout) {\n  return (\n    /**\n     * @return {!ngeo.message.Popup} The popup instance.\n     */\n    function() {\n      return new exports($compile, $rootScope, $sce, $timeout);\n    }\n  );\n};\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoCreatePopup', [\n  ngeoMessagePopupComponent.name,\n]);\nexports.module.factory('ngeoCreatePopup', exports.Factory);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach((feature) => {\n      this.addFeature(feature);\n    });\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.XSDAttribute\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttribute from 'ngeo/format/Attribute.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\n\n/**\n * @classdesc\n * Reads attributes that are defined in XSD format and return them as a list.\n *\n * @constructor\n * @struct\n * @extends {ol.format.XML}\n */\nconst exports = function() {\n  olFormatXML.call(this);\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Array.<ngeox.Attribute>} The parsed result.\n * @override\n */\nexports.prototype.read = function(source) {\n  return (\n    /** @type {Array.<ngeox.Attribute>} */ olFormatXML.prototype.read.call(this, source)\n  );\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromDocument = function(doc) {\n  googAsserts.assert(doc.nodeType == Node.DOCUMENT_NODE,\n    'doc.nodeType should be DOCUMENT');\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromNode = function(node) {\n  googAsserts.assert(node.nodeType == Node.ELEMENT_NODE,\n    'node.nodeType should be ELEMENT');\n  googAsserts.assert(node.localName == 'schema',\n    'localName should be schema');\n\n  let elements = node.getElementsByTagName('element');\n  if (!elements.length) {\n    elements = node.getElementsByTagName('xsd:element');\n  }\n  const attributes = [];\n\n  let attribute;\n  for (let i = 0, ii = elements.length; i < ii; i++) {\n    attribute = this.readFromElementNode_(elements[i]);\n    if (attribute) {\n      attributes.push(attribute);\n    }\n  }\n\n  return attributes;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {?ngeox.Attribute} An attribute object.\n * @private\n */\nexports.prototype.readFromElementNode_ = function(node) {\n\n  const name = node.getAttribute('name');\n  googAsserts.assertString(name, 'name should be defined in element node.');\n\n  const alias = node.getAttribute('alias');\n  const nillable = node.getAttribute('nillable');\n  const required = !(nillable === true || nillable === 'true');\n\n  const attribute = {\n    name,\n    alias,\n    required\n  };\n\n  const type = node.getAttribute('type');\n  if (type) {\n    if (!ngeoFormatAttribute.setGeometryType(attribute, type)) {\n      this.setAttributeByXsdType_(attribute, type);\n    }\n  } else {\n\n    // Attribute has no type defined on 'element' node.  Try:\n\n    // (1) Enumerations\n    let enumerations = node.getElementsByTagName('enumeration');\n    if (!enumerations.length) {\n      enumerations = node.getElementsByTagName('xsd:enumeration');\n    }\n    if (enumerations.length) {\n      attribute.type = ngeoFormatAttributeType.SELECT;\n      const choices = [];\n      for (let i = 0, ii = enumerations.length; i < ii; i++) {\n        choices.push(enumerations[i].getAttribute('value'));\n      }\n      attribute.choices = choices;\n    } else {\n      // (2) Other types with restrictions\n      let restrictions = node.getElementsByTagName('restriction');\n      if (!restrictions.length) {\n        restrictions = node.getElementsByTagName('xsd:restriction');\n      }\n      if (restrictions.length && restrictions[0]) {\n        const restrictionNode = restrictions[0];\n        this.setAttributeByXsdType_(\n          attribute,\n          restrictionNode.getAttribute('base')\n        );\n        // MaxLength\n        let maxLengths = node.getElementsByTagName('maxLength');\n        if (!maxLengths.length) {\n          maxLengths = node.getElementsByTagName('xsd:maxLength');\n        }\n        if (maxLengths.length && maxLengths[0]) {\n          attribute.maxLength = Number(maxLengths[0].getAttribute('value'));\n        }\n      }\n    }\n  }\n\n  if (!attribute.type) {\n    return null;\n  }\n\n  googAsserts.assert(attribute.type);\n\n  return attribute;\n};\n\n\n/**\n * Set the `type` and `numType` properties of an attribute depending on the\n * given xsdType.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type The xsd type.\n * @private\n */\nexports.prototype.setAttributeByXsdType_ = function(\n  attribute, type\n) {\n  if (type === 'xsd:boolean') {\n    attribute.type = ngeoFormatAttributeType.BOOLEAN;\n  } else if (type === 'xsd:date') {\n    attribute.type = ngeoFormatAttributeType.DATE;\n  } else if (type === 'xsd:dateTime') {\n    attribute.type = ngeoFormatAttributeType.DATETIME;\n  } else if (type === 'xsd:time') {\n    attribute.type = ngeoFormatAttributeType.TIME;\n  } else if (type === 'xsd:decimal' || type === 'xsd:double') {\n    attribute.type = ngeoFormatAttributeType.NUMBER;\n    attribute.numType = exports.NumberType.FLOAT;\n  } else if (type === 'xsd:integer') {\n    attribute.type = ngeoFormatAttributeType.NUMBER;\n    attribute.numType = exports.NumberType.INTEGER;\n  } else if (type === 'xsd:string') {\n    attribute.type = ngeoFormatAttributeType.TEXT;\n  }\n};\n\n\n/**\n * Returns the first geometry attribute among a given list of attributes.\n * @param {Array.<ngeox.Attribute>} attributes The list of attributes.\n * @return {?ngeox.Attribute} A geometry attribute object.\n */\nexports.getGeometryAttribute = function(attributes) {\n  let geomAttribute = null;\n  for (let i = 0, ii = attributes.length; i < ii; i++) {\n    if (attributes[i].type === ngeoFormatAttributeType.GEOMETRY) {\n      geomAttribute = attributes[i];\n      break;\n    }\n  }\n  return geomAttribute;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.NumberType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  FLOAT: 'float',\n  /**\n   * @type {string}\n   * @export\n   */\n  INTEGER: 'integer'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.WFSDescribeFeatureType\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\nimport * as olXml from 'ol/xml.js';\n\n/**\n * @classdesc\n * Format for reading WFS DescribeFeatureType data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst exports = function() {\n\n  olFormatXML.call(this);\n\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * Read a WFS DescribeFeatureType document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WFS DescribeFeatureType.\n * @api\n */\nexports.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromNode = function(node) {\n  let result = {};\n  result = olXml.pushParseAndPop(\n    result,\n    exports.PARSERS_,\n    node,\n    []\n  );\n  return result;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Attributes.\n */\nexports.readElement_ = function(node, objectStack) {\n  const attributes = {};\n  for (let i = 0, len = node.attributes.length; i < len; i++) {\n    const attribute = node.attributes.item(i);\n    attributes[attribute.name] = attribute.value;\n  }\n  if (objectStack.length === 1) {\n    // remove namespace from type\n    attributes['type'] = attributes['type'].split(':').pop();\n  }\n  return attributes;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexType_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const object = olXml.pushParseAndPop(\n    {'name': name},\n    exports.COMPLEX_TYPE_PARSERS_,\n    node, objectStack\n  );\n  // flatten\n  object['complexContent'] =\n    object['complexContent']['extension']['sequence']['element'];\n  return object;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexContent_ = function(\n  node, objectStack\n) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.COMPLEX_CONTENT_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readExtension_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.EXTENSION_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readSequence_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.SEQUENCE_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nexports.NAMESPACE_URIS_ = [\n  null,\n  'http://www.w3.org/2001/XMLSchema'\n];\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    ),\n    'complexType': olXml.makeObjectPropertyPusher(\n      exports.readComplexType_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_TYPE_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'complexContent': olXml.makeObjectPropertySetter(\n      exports.readComplexContent_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_CONTENT_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'extension': olXml.makeObjectPropertySetter(\n      exports.readExtension_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.EXTENSION_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'sequence': olXml.makeObjectPropertySetter(\n      exports.readSequence_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.SEQUENCE_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    )\n  }));\n\n\nexport default exports;\n","/**\n * @module ngeo.query.Querent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport ngeoWFSDescribeFeatureType from 'ngeo/WFSDescribeFeatureType.js';\nimport olFormatWMSCapabilities from 'ol/format/WMSCapabilities.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport * as olObj from 'ol/obj.js';\nimport * as olUri from 'ol/uri.js';\nimport * as olExtent from 'ol/extent.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Querent is a service that issues all sorts of queries using\n   * ngeo data sources. It does not store the result. Instead, it returns it\n   * using promises. Any component that inject this service can use it to\n   * make it issue its own queries and do whatever it wants with the result.\n   *\n   * It supports sending OGC requests and parse the response, such as:\n   * - WFS DescribeFeatureType\n   * - WFS GetFeature\n   * - WMS GetCapabilites\n   * - WMS GetFeatureInfo\n   * - WMTS GetCapabilities\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($http, $q, ngeoRuleHelper, ngeoWMSTime) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n\n    // === Other properties ===\n\n    /**\n     * Promises that can be resolved to cancel started requests.\n     * @type {!Array.<angular.$q.Deferred>}\n     * @private\n     */\n    this.requestCancelers_ = [];\n\n    /**\n     * Cache of promises for WMS GetCapabilities requests. They key is the\n     * online resource base url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmsGetCapabilitiesPromises_ = {};\n\n    /**\n     * Cache of promises for WMST GetCapabilities requests. They key is the\n     * url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmtsGetCapabilitiesPromises_ = {};\n  }\n\n\n  // === PUBLIC methods ===\n\n  /**\n   * Issue WMS GetFeatureInfo and/or WFS GetFeature requests using the given\n   * data sources, map and optional filters.\n   *\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  issue(options) {\n\n    const promises = [];\n    const map = options.map;\n\n    // (1) Cancel requests that are still running\n    this.cancelStillRunningRequests_();\n\n    // (2) Get queryable data sources\n    let queryableDataSources;\n    if (options.queryableDataSources) {\n      queryableDataSources = options.queryableDataSources;\n    } else {\n      const dataSources = options.dataSources;\n      googAsserts.assert(dataSources, 'DataSources should be set');\n      queryableDataSources = this.getQueryableDataSources(dataSources, map);\n    }\n\n    // (3) Combine data sources that support WFS and issue WFS queries.\n    //     The 'bbox' ('extent' option) is not required for WFS requests to\n    //     be issued.\n    const combinedWFSDataSources = this.getCombinableWFSDataSources_(\n      queryableDataSources.wfs);\n    promises.push(this.issueCombinedWFS_(combinedWFSDataSources, options));\n\n    // (4) Combine data sources that support WMS and issue WMS queries.\n    //     Only occurs if the `coordinate` option is set, because it's required\n    //     by WMS GetFeatureInfo requests.\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const combinedWMSDataSources = this.getCombinableWMSDataSources_(\n        queryableDataSources.wms);\n      promises.push(this.issueCombinedWMS_(combinedWMSDataSources, options));\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Browse a given list of data sources. Return 2 lists of data sources that\n   * are queryable, the first one being those that support WFS and the other\n   * WMS only. This means that WFS is always favored first, then WMS.\n   *\n   * The map view resolution determines if the inner ogc layers are in range.\n   *\n   * @param {!Array.<!ngeo.datasource.DataSource>} dataSources Data sources\n   * @param {ol.Map} map Map.\n   * @return {!ngeox.QueryableDataSources} Queryable data sources.\n   * @export\n   */\n  getQueryableDataSources(dataSources, map) {\n\n    const queryableDataSources = {\n      wfs: [],\n      wms: []\n    };\n    const resolution = googAsserts.assertNumber(map.getView().getResolution());\n\n    for (const dataSource of dataSources) {\n\n      // (1) Skip data source that can't be queried\n      if (!this.isDataSourceQueryable_(dataSource, resolution)) {\n        continue;\n      }\n\n      if (dataSource instanceof ngeoDatasourceOGC) {\n        // (2) Split data sources\n        if (dataSource.supportsWFS) {\n          queryableDataSources.wfs.push(dataSource);\n        } else {\n          queryableDataSources.wms.push(dataSource);\n        }\n      }\n    }\n\n    return queryableDataSources;\n  }\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  wfsDescribeFeatureType(dataSource) {\n\n    googAsserts.assert(\n      dataSource.supportsAttributes,\n      `The data source must support WFS, have a single OGCLayer that\n      is queryable in order to issue WFS DescribeFeatureType requests`\n    );\n\n    const ogcLayerNames = dataSource.getOGCLayerNames();\n\n    const url = olUri.appendParams(\n      googAsserts.assertString(dataSource.wfsUrl),\n      {\n        'REQUEST': 'DescribeFeatureType',\n        'SERVICE': 'WFS',\n        'VERSION': '2.0.0',\n        'TYPENAME': ogcLayerNames\n      }\n    );\n\n    return this.http_.get(url).then((response) => {\n      const format = new ngeoWFSDescribeFeatureType();\n      return format.read(response.data);\n    });\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMS layer capabilities\n   * @param {string} layerName Name of the WMS layer\n   * @return {?Object} Found WMS layer capability\n   * @export\n   */\n  wmsFindLayerCapability(layerCapabilities, layerName) {\n\n    let found = null;\n\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Name'] === layerName) {\n        found = layerCapability;\n        break;\n      } else if (layerCapability['Layer']) {\n        found = this.wmsFindLayerCapability(\n          layerCapability['Layer'], layerName);\n        if (found) {\n          break;\n        }\n      }\n    }\n\n    return found;\n  }\n\n  /**\n   * @param {string} baseUrl Base url of the WMS server.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmsGetCapabilities(baseUrl, opt_cache) {\n\n    const cache = opt_cache !== false;\n\n    const params = {\n      'REQUEST': 'GetCapabilities',\n      'SERVICE': 'WMS',\n      'VERSION': '1.3.0'\n    };\n\n    const url = olUri.appendParams(baseUrl, params);\n    let promise;\n\n    if (!cache || !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.wmsGetCapabilitiesPromises_[baseUrl];\n    }\n\n    googAsserts.assert(promise);\n\n    if (cache && !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      this.wmsGetCapabilitiesPromises_[baseUrl] = promise;\n    }\n\n    return promise;\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMTS layer capabilities\n   * @param {string} layerName Name of the WMTS layer, a.k.a. the identifier.\n   * @return {?Object} Found WTMS layer capability\n   * @export\n   */\n  wmtsFindLayerCapability(layerCapabilities, layerName) {\n    let found = null;\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Identifier'] === layerName) {\n        found = layerCapability;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @param {string} url Url of the WMTS server. Note that it must contain\n   *     all required arguments.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmtsGetCapabilities(url, opt_cache) {\n\n    const cache = opt_cache !== false;\n    let promise;\n\n    if (!cache || !this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMTSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.wmtsGetCapabilitiesPromises_[url];\n    }\n\n    googAsserts.assert(promise);\n\n    if (cache && !this.wmtsGetCapabilitiesPromises_[url]) {\n      this.wmtsGetCapabilitiesPromises_[url] = promise;\n    }\n\n    return promise;\n  }\n\n\n  // === PRIVATE methods ===\n\n  /**\n   * Handles the response of multiple promises that did either\n   * WMS GetFeatureInfo or WFS GetFeature requests, in which the result is\n   * a hash with key being the data source id and value the array of features.\n   *\n   * The response object itself is an array, one item being one result per\n   * promise. The idea is to return a single hash by combining the result\n   * objects.\n   *\n   * The keys are always unique, i.e. there can be multiple result objects for\n   * the same data source id.\n   *\n   * @param {!Array.<ngeox.QuerentResult>} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleCombinedQueryResult_(response) {\n    const combinedHash = {};\n    for (const hash of response) {\n      for (const dataSourceIdStr in hash) {\n        const dataSourceId = Number(dataSourceIdStr);\n        combinedHash[dataSourceId] = hash[dataSourceId];\n      }\n    }\n    return combinedHash;\n  }\n\n\n  /**\n   * Handles the result of a single WMS GetFeatureInfo or WFS GetFeature\n   * request. Read features from the response and return them.\n   *\n   * @param {!Array.<!ngeo.datasource.OGC>} dataSources List of\n   *     queryable data sources that were used to do the query.\n   * @param {number} limit The maximum number of features to get with the query.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {angular.$http.Response|number} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleQueryResult_(dataSources, limit, wfs, response) {\n    const hash = {};\n\n    for (const dataSource of dataSources) {\n      let features;\n      let tooManyFeatures;\n      let totalFeatureCount;\n\n      if (typeof response === 'number') {\n        features = [];\n        tooManyFeatures = true;\n        totalFeatureCount = response;\n      } else {\n        if (dataSource instanceof ngeoDatasourceOGC) {\n          features = this.readAndTypeFeatures_(dataSource, response.data, wfs);\n        } else {\n          features = [];\n        }\n      }\n      const dataSourceId = dataSource.id;\n      this.setUniqueIds_(features, dataSource.id);\n      hash[dataSourceId] = {\n        features,\n        limit,\n        tooManyFeatures,\n        totalFeatureCount\n      };\n    }\n\n    return hash;\n  }\n\n  /**\n   * Read and assign the type of the feature to each feature in the data.\n   * The type will be stocked in the properties of the features as\n   * \"ngeo_feature_type_\".\n   * @param {ngeo.datasource.OGC} dataSource used to read the features.\n   * @param {Document | Node | Object | string} data the response data.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @return {Array.<ol.Feature>} returned features with a type in each features.\n   * @private\n   */\n  readAndTypeFeatures_(dataSource, data, wfs) {\n    const features = [];\n    let readFeatures;\n    // Copy the types to be able to set it AND iterate on it.\n    const featureTypes = this.getSetOlFormatTypes_(dataSource, wfs).slice();\n    featureTypes.forEach((type) => {\n      // Assign temporarily a single feature type to read features separately.\n      this.getSetOlFormatTypes_(dataSource, wfs, [type]);\n      if (wfs) {\n        readFeatures = dataSource.wfsFormat.readFeatures(data);\n      } else {\n        readFeatures = dataSource.wmsFormat.readFeatures(data);\n      }\n      if (readFeatures.length > 0) {\n        readFeatures.forEach((feature) => {\n          feature.set('ngeo_feature_type_', type);\n          features.push(feature);\n        });\n      }\n    });\n    // Re-set the value to the datasource.xxxFormat to be able to re-use\n    // it later (in another query);\n    this.getSetOlFormatTypes_(dataSource, wfs, featureTypes);\n    return features;\n  }\n\n  /**\n   * Return the types defined in the format of the datasource. Can set the\n   * types if one is given.\n   * @param {ngeo.datasource.OGC} dataSource that contains the format object.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {Array.<string>=} opt_types An array of type if you want to set the\n   *     type of the format object.\n   * @return {Array.<string>} The types defined in the format.\n   * @private\n   */\n  getSetOlFormatTypes_(dataSource, wfs, opt_types) {\n    let types;\n    if (wfs) {\n      if (opt_types) {\n        dataSource.wfsFormat.setFeatureType(opt_types);\n      }\n      types = dataSource.wfsFormat.getFeatureType();\n    } else {\n      if (opt_types) {\n        dataSource.wmsFormat.setLayers(opt_types);\n      }\n      types = dataSource.wmsFormat.getLayers();\n    }\n    if (!types) {\n      return [];\n    }\n    return (Array.isArray(types)) ? types : [types];\n  }\n\n  /**\n   * Issue WFS GetFeature requests using the given combined data sources, map\n   * and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWFS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const maxFeatures = googAsserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = googAsserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const srsName = projection.getCode();\n    const wfsCount = options.wfsCount === true;\n\n    // (1) Extent (bbox), which is optional, i.e. its value can stay undefined\n    let bbox;\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const tolerancePx = options.tolerancePx;\n      googAsserts.assert(tolerancePx);\n      const tolerance = tolerancePx * resolution;\n      bbox = olExtent.buffer(\n        olExtent.createOrUpdateFromCoordinate(coordinate),\n        tolerance\n      );\n    } else {\n      bbox = options.extent;\n    }\n\n    // (2) Launch one request per combinaison of data sources\n    const wfsFormat = new olFormatWFS();\n    const xmlSerializer = new XMLSerializer();\n    for (const dataSources of combinedDataSources) {\n\n      let getFeatureCommonOptions;\n      let featureNS;\n      let featureTypes = [];\n      let url;\n      const params = {};\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!getFeatureCommonOptions) {\n          featureNS = dataSource.wfsFeatureNS;\n          const featurePrefix = dataSource.wfsFeaturePrefix;\n          const geometryName = dataSource.geometryName;\n          const outputFormat = dataSource.wfsOutputFormat;\n\n          getFeatureCommonOptions = {\n            bbox,\n            featureNS,\n            featurePrefix,\n            geometryName,\n            outputFormat,\n            srsName\n          };\n\n          url = dataSource.wfsUrl;\n\n          // All data sources combined share the same active dimensions\n          olObj.assign(params, dataSource.activeDimensions);\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        featureTypes = featureTypes.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Add filter, if any. If the case, then only one data source\n        //     is expected to be used for this request.\n        let filter;\n        if (options.filter) {\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            filter: options.filter,\n            incTime: true\n          });\n        } else if ((dataSource.filterRules && dataSource.filterRules.length) ||\n            dataSource.timeRangeValue) {\n\n          googAsserts.assert(\n            dataSources.length === 1,\n            `A data source having filterRules or timeRangeValue should issue\n            a single query, alone.`\n          );\n\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            incTime: true,\n            srsName: srsName\n          });\n        }\n\n        if (filter) {\n          getFeatureCommonOptions['filter'] = filter;\n        }\n      }\n\n      googAsserts.assert(getFeatureCommonOptions);\n      getFeatureCommonOptions.featureTypes = featureTypes;\n      googAsserts.assert(url);\n\n      // (4) Build query then launch\n      //\n      //     If we require to do a WFS GetFeature request with\n      //     `resultType: 'hits'` first, do so. In that case, if there would\n      //     be too many features returned, no GetFeature is done thereafter\n      //     and the data sources will return empty arrays in the returned\n      //     response.\n      //\n      //     If we do not need to count features first, then proceed with\n      //     an normal WFS GetFeature request.\n      const getFeatureDefer = this.q_.defer();\n      promises.push(\n        getFeatureDefer.promise.then(\n          this.handleQueryResult_.bind(this, dataSources, maxFeatures, true)\n        )\n      );\n\n      // (4.1) Count, if required\n      let countPromise;\n      if (wfsCount) {\n        const getCountOptions = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n          olObj.assign(\n            {\n              resultType: 'hits'\n            },\n            getFeatureCommonOptions\n          )\n        );\n        const featureCountXml = wfsFormat.writeGetFeature(getCountOptions);\n        const featureCountRequest = xmlSerializer.serializeToString(\n          featureCountXml);\n        const canceler = this.registerCanceler_();\n        countPromise = this.http_.post(\n          url,\n          featureCountRequest,\n          {\n            params: params,\n            headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n            timeout: canceler.promise\n          }\n        ).then(((response) => {\n          const meta = dataSources[0].wfsFormat.readFeatureCollectionMetadata(\n            response.data\n          );\n          return meta['numberOfFeatures'];\n        }).bind(this));\n      } else {\n        countPromise = this.q_.resolve();\n      }\n\n      // (4.2) After count, do GetFeature (if required)\n      countPromise.then((numberOfFeatures) => {\n        // `true` is returned if a count request was made AND there would\n        // be too many features.\n        if (numberOfFeatures === undefined || numberOfFeatures < maxFeatures) {\n\n          const getFeatureOptions = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n            olObj.assign(\n              {\n                maxFeatures\n              },\n              getFeatureCommonOptions\n            )\n          );\n          const featureRequestXml = wfsFormat.writeGetFeature(\n            getFeatureOptions);\n          const featureRequest = xmlSerializer.serializeToString(\n            featureRequestXml);\n          googAsserts.assertString(url);\n          const canceler = this.registerCanceler_();\n          this.http_.post(\n            url,\n            featureRequest,\n            {\n              params: params,\n              headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n              timeout: canceler.promise\n            }\n          ).then((response) => {\n            getFeatureDefer.resolve(response);\n          });\n\n        } else {\n          getFeatureDefer.resolve(numberOfFeatures);\n        }\n      });\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Issue WMS GetFeatureInfo requests using the given combined data sources,\n   * map and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWMS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const FEATURE_COUNT = googAsserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = googAsserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const projCode = projection.getCode();\n\n    // (1) Coordinate, which is required to issue WMS GetFeatureInfo requests\n    const coordinate = options.coordinate;\n    googAsserts.assert(coordinate);\n\n    // (2) Launch one request per combinaison of data sources\n    for (const dataSources of combinedDataSources) {\n\n      let url;\n      let LAYERS = [];\n      let INFO_FORMAT;\n      let activeDimensionsSet = false;\n      const params = {};\n      let filterString = null;\n      let filtrableLayerName = null;\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!INFO_FORMAT) {\n          INFO_FORMAT = dataSource.wmsInfoFormat;\n          url = dataSource.wmsUrl;\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        LAYERS = LAYERS.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Manage active dimensions, which are added directly to the\n        //     query parameters. Note that this occurs only ONCE, i.e.\n        //     for the first data source, because all data sources here have\n        //     been combined together, therefore they share the same active\n        //     dimensions.\n        if (!activeDimensionsSet) {\n          olObj.assign(params, dataSource.activeDimensions);\n          activeDimensionsSet = true;\n        }\n\n        // (d) Add filter, if any. If there is a filter on the data source,\n        //     then it is expected that one request will be sent for this\n        //     data source only.\n        if (dataSource.filterRules && dataSource.filterRules.length) {\n          googAsserts.assert(dataSources.length === 1);\n          filtrableLayerName = dataSource.getFiltrableOGCLayerName();\n          filterString = this.ngeoRuleHelper_.createFilterString({\n            dataSource: dataSource,\n            srsName: projCode\n          });\n        }\n\n        // (e) Add TIME parameter if the data source has a time range value.\n        //     If that's the case, then it is expected that one request will be\n        //     sent for this data source only.\n        if (dataSource.timeRangeValue !== null && dataSource.timeProperty) {\n          googAsserts.assert(dataSources.length === 1);\n          params['TIME'] = this.ngeoWMSTime_.formatWMSTimeParam(\n            dataSource.timeProperty,\n            dataSource.timeRangeValue\n          );\n        }\n      }\n\n      params['LAYERS'] = LAYERS;\n      params['QUERY_LAYERS'] = LAYERS;\n\n      // Manage 'FILTER' parameter\n      if (filterString && filtrableLayerName) {\n        let filterParamValue = null;\n        if (LAYERS.length === 1) {\n          // When there's only one layer in the `LAYERS` parameters, then\n          // the filter string is given as-is.\n          filterParamValue = filterString;\n        } else {\n          // When there's more then one layer, then each filter must be wrapped\n          // between parenthesis and the order must also match the `LAYERS`\n          // parameter as well.\n          const filterParamValues = [];\n          for (let i = 0, ii = LAYERS.length; i < ii; i++) {\n            if (LAYERS[i] === filtrableLayerName) {\n              filterParamValues.push(`(${filterString})`);\n            } else {\n              filterParamValues.push('()');\n            }\n          }\n          filterParamValue = filterParamValues.join('');\n        }\n        params['FILTER'] = filterParamValue;\n      }\n\n      googAsserts.assert(url);\n      const wmsSource = new olSourceImageWMS({\n        params,\n        url\n      });\n\n      // (4) Build query url, then launch\n      const wmsGetFeatureInfoUrl = googAsserts.assertString(\n        wmsSource.getGetFeatureInfoUrl(\n          coordinate, resolution, projCode, {\n            // Without extern, quoting is necessary\n            'FEATURE_COUNT': FEATURE_COUNT,\n            'INFO_FORMAT': INFO_FORMAT\n          }\n        )\n      );\n\n      const canceler = this.registerCanceler_();\n      promises.push(\n        this.http_.get(\n          wmsGetFeatureInfoUrl,\n          {\n            timeout: canceler.promise\n          }\n        ).then(\n          this.handleQueryResult_.bind(this, dataSources, FEATURE_COUNT, false)\n        )\n      );\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WFS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWFSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWFS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWFS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WMS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWMSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWMS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWMS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * Checks if a data source can be queried, which requires it to be:\n   * - visible\n   * - in range\n   * - queryable (using the native getter)\n   * - have at least one OGC layer in range of current map view resolution.\n   *\n   * @param {ngeo.datasource.DataSource} ds Data source\n   * @param {number} res Resolution.\n   * @return {boolean} Whether the data source is queryable\n   * @private\n   */\n  isDataSourceQueryable_(ds, res) {\n    let queryable = ds.visible && ds.inRange && ds.queryable;\n    if (queryable && ds instanceof ngeoDatasourceOGC) {\n      const ogcDS = /** @type {!ngeo.datasource.OGC} */ (ds);\n      queryable = ogcDS.isAnyOGCLayerInRange(res, true);\n    }\n    return queryable;\n  }\n\n  /**\n   * Make sure that feature ids are unique, because the same features might\n   * be returned for different layers.\n   * @param {Array.<ol.Feature>} features Features\n   * @param {number} dataSourceId Data source id.\n   * @private\n   */\n  setUniqueIds_(features, dataSourceId) {\n    features.forEach((feature) => {\n      if (feature.getId() !== undefined) {\n        const id = `${dataSourceId}_${feature.getId()}`;\n        feature.setId(id);\n      }\n    });\n  }\n\n  /**\n   * @return {angular.$q.Deferred} A deferred that can be resolved to cancel a\n   *    HTTP request.\n   * @private\n   */\n  registerCanceler_() {\n    const canceler = this.q_.defer();\n    this.requestCancelers_.push(canceler);\n    return canceler;\n  }\n\n  /**\n   * @private\n   */\n  cancelStillRunningRequests_() {\n    for (const canceler of this.requestCancelers_) {\n      canceler.resolve();\n    }\n    this.requestCancelers_.length = 0;\n  }\n};\n\n\n/**\n * @typedef {!Array.<!Array.<!ngeo.datasource.OGC>>}\n */\nexports.CombinedDataSources;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoQuerent', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoQuerent', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.WFSAttribute\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttribute from 'ngeo/format/Attribute.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\n\nconst exports = class {\n\n\n  /**\n   * A format that reads the complexType from a WFS DescribeFeatureType\n   * response for a single set of attributes and return an array of\n   * `ngeox.Attribute`.\n   */\n\n\n  /**\n   * @param {Array.<Object>} complexTypeElements Complex type element\n   * @return {Array.<ngeox.Attribute>} Attributes\n   */\n  read(complexTypeElements) {\n    return complexTypeElements.map(this.readFromComplexTypeElement_);\n  }\n\n\n  /**\n   * @param {Object} object Complex type element\n   * @return {ngeox.Attribute} Attribute\n   * @private\n   */\n  readFromComplexTypeElement_(object) {\n\n    const name = googAsserts.assertString(object['name']);\n    const alias = 'alias' in object ?\n      googAsserts.assertString(object['alias']) : null;\n    const required = object['minOccurs'] != '0';\n\n    const attribute = {\n      name,\n      alias,\n      required\n    };\n\n    const type = googAsserts.assertString(object['type']);\n\n    if (!ngeoFormatAttribute.setGeometryType(attribute, type)) {\n      if (type === 'gml:TimeInstantType' || type === 'dateTime') {\n        attribute.type = ngeoFormatAttributeType.DATETIME;\n      } else if (type === 'date') {\n        attribute.type = ngeoFormatAttributeType.DATE;\n      } else if (type === 'time') {\n        attribute.type = ngeoFormatAttributeType.TIME;\n      } else if (type === 'decimal' || type === 'double') {\n        attribute.type = ngeoFormatAttributeType.NUMBER;\n        attribute.numType = ngeoFormatXSDAttribute.NumberType.FLOAT;\n      } else if (type === 'integer' || type === 'long') {\n        attribute.type = ngeoFormatAttributeType.NUMBER;\n        attribute.numType = ngeoFormatXSDAttribute.NumberType.INTEGER;\n      } else if (type === 'boolean') {\n        attribute.type = ngeoFormatAttributeType.BOOLEAN;\n      } else {\n        attribute.type = ngeoFormatAttributeType.TEXT;\n      }\n    }\n\n    return attribute;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.Helper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoFormatWFSAttribute from 'ngeo/format/WFSAttribute.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport * as olEvents from 'ol/events.js';\n\nconst exports = class {\n  /**\n   * A service that provides utility methods to manipulate or get data sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data source\n   *     service.\n   * @param {ngeo.query.Querent} ngeoQuerent Ngeo querent service.\n   * @ngdoc service\n   * @ngname ngeoDataSourcesHelper\n   * @ngInject\n   */\n  constructor($q, ngeoDataSources, ngeoQuerent) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Object.<number, ngeo.datasource.DataSource>}\n     * @private\n     */\n    this.cache_ = {};\n\n    // Events\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n    olEvents.listen(this.collection_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n  /**\n   * @return {ngeox.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?ngeo.datasource.DataSource} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return this.cache_[id] || null;\n  }\n\n  /**\n   * Get the attributes of a data source. If they are not set, they are obtained\n   * from the querent service using a WFS DescribeFeatureType request, then set\n   * in the data source.\n   *\n   * Please, note that in order to be dynamically set, the data source must\n   * only have 1 ogcLayer set and be queryable.\n   *\n   * @param {ngeo.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  getDataSourceAttributes(dataSource) {\n\n    const wfsDescribeFeatureTypeDefer = this.q_.defer();\n\n    if (dataSource.attributes) {\n      wfsDescribeFeatureTypeDefer.resolve(dataSource.attributes);\n    } else {\n      this.ngeoQuerent_.wfsDescribeFeatureType(\n        dataSource\n      ).then((featureType) => {\n        // We know, at this point, that there's only one definition that\n        // was returned.  Just to be sure, let's do a bunch of assertions.\n        const ogcLayerName = dataSource.getOGCLayerNames()[0];\n        googAsserts.assertString(\n          ogcLayerName, 'The data source should have only one ogcLayer.');\n        const element = featureType.element[0];\n        googAsserts.assert(element.name === ogcLayerName);\n        googAsserts.assert(\n          featureType.complexType[0].name === element.type);\n\n        const complexContent = featureType['complexType'][0]['complexContent'];\n        const attributes = new ngeoFormatWFSAttribute().read(complexContent);\n\n        // Set the attributes in the data source\n        dataSource.setAttributes(attributes);\n\n        wfsDescribeFeatureTypeDefer.resolve(attributes);\n      });\n    }\n\n    return wfsDescribeFeatureTypeDefer.promise;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. Add it\n   * to the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = googAsserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    this.cache_[dataSource.id] = dataSource;\n  }\n\n  /**\n   * Called when a data source is removed from the ngeo collection. Remove it\n   * from the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = googAsserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    delete this.cache_[dataSource.id];\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSourcesHelper', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoDataSourcesHelper', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.Snapping\n */\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Translate\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionTranslate from 'ol/interaction/Translate.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * An extension of the OpenLayers Translate interaction that adds the following\n * features to it:\n *\n * - show a small arrow icon in the middle of the features allowing a visual\n *   aspect that tells the user \"this feature can be moved\"\n * - pressing the ESC key automatically deactivate the interaction.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Translate}\n * @param {ngeox.interaction.TranslateOptions} options Options.\n */\nconst exports = function(options) {\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {!Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = {};\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.myFeatures_ = options.features !== undefined ? options.features : null;\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.vectorSource_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: this.vectorSource_,\n    style: options.style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionTranslate.call(\n    this, /** @type {olx.interaction.TranslateOptions} */ (options));\n};\n\nolBase.inherits(exports, olInteractionTranslate);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionTranslate.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.vectorLayer_.setMap(null);\n  }\n\n  olInteractionTranslate.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.vectorLayer_.setMap(map);\n  }\n\n  this.setState_();\n};\n\n\n/**\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const features = this.myFeatures_;\n  const keys = this.listenerKeys_;\n\n  if (map && active && features) {\n    features.forEach(feature => this.addFeature_(feature));\n    keys.push(\n      olEvents.listen(features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(features, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n\n    if (map) {\n      const elem = map.getTargetElement();\n      elem.style.cursor = 'default';\n    }\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    features.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  this.featureListenerKeys_[uid] = olEvents.listen(\n    geometry,\n    'change',\n    this.handleGeometryChange_.bind(this, feature),\n    this\n  );\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.vectorSource_.addFeature(centerFeature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  if (this.featureListenerKeys_[uid]) {\n    olEvents.unlistenByKey(this.featureListenerKeys_[uid]);\n    delete this.featureListenerKeys_[uid];\n\n    this.vectorSource_.removeFeature(this.centerFeatures_[uid]);\n    delete this.centerFeatures_[uid];\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature being moved.\n * @param {ol.events.Event} evt Event.\n * @private\n */\nexports.prototype.handleGeometryChange_ = function(feature,\n  evt) {\n  const geometry = evt.target;\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const uid = olBase.getUid(feature);\n  this.centerFeatures_[uid].setGeometry(point);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.geom.Point} The center point of the geometry.\n * @private\n */\nexports.prototype.getGeometryCenterPoint_ = function(\n  geometry) {\n\n  let center;\n  let point;\n\n  if (geometry instanceof olGeomPolygon) {\n    point = geometry.getInteriorPoint();\n  } else if (geometry instanceof olGeomLineString) {\n    center = geometry.getCoordinateAt(0.5);\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  if (!point && center) {\n    point = new olGeomPoint(center);\n  }\n\n  googAsserts.assert(point, 'Point should be thruthy');\n\n  return point;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Rotate\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction to rotate features.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.coordinate_ = null;\n\n  /**\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.centerCoordinate_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionPointer.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n    this.features_.forEach(feature => this.addFeature_(feature));\n    this.listenerKeys_.push(\n      olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this)\n    );\n\n  } else {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n    this.features_.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  feature.set('angle', 0);\n\n  // Add the center icon to the overlay\n  const uid = olBase.getUid(feature);\n  const point = new olGeomPoint(this.getCenterCoordinate_(geometry));\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.overlay_.getSource().addFeature(centerFeature);\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.feature_ = null;\n  //this.overlay_.getSource().removeFeature(feature);\n\n  if (feature) {\n    const uid = olBase.getUid(feature);\n\n    if (this.centerFeatures_[uid]) {\n      this.overlay_.getSource().removeFeature(this.centerFeatures_[uid]);\n      delete this.centerFeatures_[uid];\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  let feature = map.forEachFeatureAtPixel(evt.pixel,\n    (feature, layer) => feature, undefined);\n\n  if (feature) {\n    let found = false;\n    this.features_.forEach((f) => {\n      if (olBase.getUid(f) == olBase.getUid(feature)) {\n        found = true;\n      }\n    });\n    if (!found) {\n      feature = null;\n    }\n  }\n\n  if (feature) {\n    this.coordinate_ = evt.coordinate;\n    this.feature_ = feature;\n    const geometry = (this.feature_.getGeometry());\n    if (geometry !== undefined) {\n      this.centerCoordinate_ = this.getCenterCoordinate_(geometry);\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.Coordinate} The center coordinate of the geometry.\n * @private\n */\nexports.prototype.getCenterCoordinate_ = function(\n  geometry) {\n\n  let center;\n\n  if (geometry instanceof olGeomLineString) {\n    center = geometry.getFlatMidpoint();\n  } else if (geometry instanceof olGeomPolygon) {\n    center = geometry.getFlatInteriorPoint();\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  return center;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (this.feature_.getGeometry());\n\n  const oldX = this.coordinate_[0];\n  const oldY = this.coordinate_[1];\n\n  const centerX = this.centerCoordinate_[0];\n  const centerY = this.centerCoordinate_[1];\n\n  const dx1 = oldX - centerX;\n  const dy1 = oldY - centerY;\n  const dx0 = evt.coordinate[0] - centerX;\n  const dy0 = evt.coordinate[1] - centerY;\n\n  this.coordinate_[0] = evt.coordinate[0];\n  this.coordinate_[1] = evt.coordinate[1];\n\n  const a0 = Math.atan2(dy0, dx0);\n  const a1 = Math.atan2(dy1, dx1);\n  const angle = a1 - a0;\n\n  geometry.rotate(-angle, [centerX, centerY]);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.RotateEvent} */\n    const event = new ngeoCustomEvent('rotateend', {feature: this.feature_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n    this.setActive(false);\n  }\n  return false;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.features\n */\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n","/**\n * @module ngeo.Menu\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olOverlay from 'ol/Overlay.js';\nimport olOverlayPositioning from 'ol/OverlayPositioning.js';\n\n/**\n * @classdesc\n * An OpenLayers overlay that shows a contextual menu with configurable actions\n * anchored from its top left to a specific location. An event is fired when\n * any of the action is clicked.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {ngeox.MenuOptions=} menuOptions Menu options.\n * @param {olx.OverlayOptions=} opt_overlayOptions Overlay options.\n */\nconst exports = function(menuOptions, opt_overlayOptions) {\n\n  const options = opt_overlayOptions !== undefined ? opt_overlayOptions : {};\n\n  options.positioning = olOverlayPositioning.TOP_LEFT;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.clickOutListenerKey_ = null;\n\n  const contentEl = $('<div/>', {\n    'class': 'panel panel-default'\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoClose_ = menuOptions.autoClose !== undefined ?\n    menuOptions.autoClose : true;\n\n  // titleEl\n  if (menuOptions.title) {\n    const headerEl = $('<div>', {\n      'class': 'panel-heading'\n    }).appendTo(contentEl);\n\n    $('<span>', {\n      text: menuOptions.title\n    }).appendTo(headerEl);\n  }\n\n  // actionsEl\n  const actionsEl = $('<div>', {\n    'class': 'list-group'\n  }).appendTo(contentEl);\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.actions_ = [];\n\n  menuOptions.actions.forEach((action) => {\n    this.actions_.push(\n      $('<button>', {\n        'class': 'list-group-item',\n        'data-name': action.name,\n        'text': [\n          ' ',\n          (action.label) !== undefined ? action.label : action.name\n        ].join('')\n      })\n        .appendTo(actionsEl)\n        .prepend($('<span>', {\n          'class': action.cls !== undefined ? action.cls : ''\n        }))\n    );\n  });\n\n  options.element = contentEl[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @param {ol.PluggableMap|undefined} map Map.\n * @export\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.actions_.forEach((action) => {\n      const data = action.data();\n      this.listenerKeys_.push(\n        olEvents.listen(\n          action[0],\n          'click',\n          this.handleActionClick_.bind(this, data.name)\n        )\n      );\n    });\n\n    // Autoclose the menu when clicking anywhere else than the menu\n    this.listenerKeys_.push(\n      olEvents.listen(\n        map,\n        'pointermove',\n        this.handleMapPointerMove_,\n        this\n      )\n    );\n  }\n\n};\n\n\n/**\n * Opens the menu at the desited coordinate. Also starts listening for the\n * clickout if autoClose is enabled.\n * @param {ol.Coordinate} coordinate Where to open the menu.\n * @export\n */\nexports.prototype.open = function(coordinate) {\n  this.setPosition(coordinate);\n  if (this.autoClose_) {\n    this.clickOutListenerKey_ = olEvents.listen(\n      document.documentElement,\n      'mousedown',\n      this.handleClickOut_,\n      this\n    );\n  }\n\n};\n\n\n/**\n * @export\n */\nexports.prototype.close = function() {\n  this.setPosition(undefined);\n\n  if (this.clickOutListenerKey_ !== null) {\n    olEvents.unlistenByKey(this.clickOutListenerKey_);\n  }\n};\n\n\n/**\n * @param {string} action The action name that was clicked.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleActionClick_ = function(action, evt) {\n\n  this.dispatchEvent(new ngeoCustomEvent('actionclick', {\n    action: action\n  }));\n\n  if (this.autoClose_) {\n    this.close();\n  }\n\n  evt.stopPropagation();\n};\n\n\n/**\n * Handles clicks out of the menu. If the menu is visible, close it.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleClickOut_ = function(evt) {\n  const element = this.getElement();\n  if (element && $(evt.target).closest(element).length === 0) {\n    this.close();\n  }\n};\n\n\n/**\n * When the mouse is hovering the menu, set the event coordinate and pixel\n * values to Infinity to do as if the mouse had been move out of range of the\n * map. This prevents behaviours such as vertex still appearing while mouse\n * hovering edges of features bound to an active modify control while the\n * cursor is on top of the menu.\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handleMapPointerMove_ = function(evt) {\n  const target = evt.originalEvent.target;\n  googAsserts.assertInstanceof(target, Element);\n\n  const element = this.getElement();\n  googAsserts.assertInstanceof(element, Element);\n\n  if (element.contains(target)) {\n    evt.coordinate = [Infinity, Infinity];\n    evt.pixel = [Infinity, Infinity];\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.download.service\n */\nimport ngeoUtils from 'ngeo/utils.js';\n\nimport {saveAs} from 'file-saver';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDownload', []);\n\n/**\n * A service to start a download for a file.\n *\n * @return {ngeox.Download} The download function.\n * @ngdoc service\n * @ngname ngeoDownload\n */\nexports.factory_ = function() {\n  /**\n   * @param {string} content The file content.\n   * @param {string} fileName The file name.\n   * @param {string=} opt_fileType The file type. If not given,\n   *    `text/plain;charset=utf-8` is used.\n   */\n  function download(content, fileName, opt_fileType) {\n    // Safari does not properly work with FileSaver. Using the the type 'text/plain'\n    // makes it a least possible to show the file content so that users can\n    // do a manual download with \"Save as\".\n    // See also: https://github.com/eligrey/FileSaver.js/issues/12\n    /** @type {string} */\n    const fileType = opt_fileType !== undefined && !ngeoUtils.isSafari() ?\n      opt_fileType : 'text/plain;charset=utf-8';\n\n    const blob = new Blob([content], {type: fileType});\n    saveAs(blob, fileName);\n  }\n\n  return download;\n};\n\nexports.factory('ngeoDownload', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.DataSourceBeingFiltered\n */\nconst exports = {};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourceBeingFiltered', []);\n// type gmfx.datasource.DataSourceBeingFiltered\nexports.module.value('gmfDataSourceBeingFiltered', {\n  dataSource: null\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.message.modalComponent\n */\nimport 'jquery-ui/ui/widgets/draggable.js';\nimport 'bootstrap/js/modal.js';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoModal', []);\n\n/**\n * Provides the \"ngeoModal\" component.\n *\n * This component shows a Bootstrap modal when the `ngModel` expression\n * evaluates to `true`, and it hides it when the `ngModel` expression\n * evaluates to `false`.\n *\n * The components also changes the `ngModel` value when the user manually\n * closes the modal.\n *\n * This component is based on Bootstrap's `modal` classes and associated\n * jQuery plugin.\n *\n *     <ngeo-modal ng-model=\"modalShown\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *         <h4 class=\"modal-title\">The Title</h4>\n *       </div>\n *       <div class=\"modal-body\">Some content</div>\n *     </ngeo-modal>\n *\n * Note: for z-indexing purpose, the modal DOM element is automatically moved\n * to document body element.\n *\n * See our live example: [../examples/modal.html](../examples/modal.html)\n *\n * @htmlAttribute {boolean} ngeo-modal-resizable Whether the modal can be\n *     resized or not. Defaults to `false`.\n * @htmlAttribute {boolean} ngeo-modal-closable Whether the modal can be\n *     closed by clicking outside it or by hiting the `escape` keyboard key. Defaults to `true`.\n * @ngdoc component\n * @ngname ngeoModal\n * @type {!angular.Component}\n */\nexports.component_ = {\n  template: `<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <ng-transclude></ng-transclude>\n      </div>\n    </div>\n  </div>`,\n  require: {\n    'ngModel': 'ngModel'\n  },\n  transclude: true,\n  controller: 'ngeoModalController',\n  bindings: {\n    'resizable': '<ngeoModalResizable',\n    'closable': '<ngeoModalClosable'\n  }\n};\n\nexports.component('ngeoModal', exports.component_);\n\nexports.Controller_ = class {\n  /**\n   * @ngInject\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!jQuery} $element Element.\n   */\n  constructor($scope, $element) {\n    /**\n     * @private\n     * @type {!jQuery}\n     */\n    this.$element_ = $element;\n\n    /**\n     * @private\n     * @type {!angular.Scope}\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @private\n     * @type {jQuery}\n     */\n    this.modal_;\n\n    /**\n     * @export\n     * @type {boolean}\n     */\n    this.closable;\n\n    /**\n     * @export\n     * @type {boolean}\n     */\n    this.resizable;\n\n    /**\n     * @export\n     * @type {angular.NgModelController|null}\n     */\n    this.ngModel;\n  }\n\n  $onInit() {\n    this.closable = this.closable !== false;\n\n    this.modal_ = this.$element_.children();\n\n    if (!this.closable) {\n      this.modal_.attr('data-keyboard', false);\n      this.modal_.attr('data-backdrop', 'static');\n    }\n\n    this.resizable = !!this.resizable;\n\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable();\n    if (this.resizable) {\n      dialog.resizable();\n    }\n\n    this.ngModel.$render = () => {\n      this.modal_.modal(this.ngModel.$viewValue ? 'show' : 'hide');\n    };\n\n    this.modal_.on('shown.bs.modal hidden.bs.modal', (e) => {\n      const type = e.type;\n      googAsserts.assert(type == 'shown' || type == 'hidden');\n      this.ngModel.$setViewValue(type == 'shown');\n    });\n  }\n\n  $onDestroy() {\n    // Force close the modal.\n    this.modal_.modal('hide');\n    this.modal_.modal('removeBackdrop');\n    // Destroy the children's plugins.\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable('destroy');\n    if (this.resizable) {\n      dialog.resizable('destroy');\n    }\n  }\n};\n\nexports.controller('ngeoModalController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Notification\n */\nimport 'bootstrap/js/alert.js';\nimport googAsserts from 'goog/asserts.js';\n\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\n\nexport default exports;\n","/*!\n * @copyright Copyright &copy; Kartik Visweswaran, Krajee.com, 2014 - 2017\n * @version 1.3.4\n *\n * Date formatter utility library that allows formatting date/time variables or Date objects using PHP DateTime format.\n * This library is a standalone javascript library and does not depend on other libraries or plugins like jQuery.\n *\n * @see http://php.net/manual/en/function.date.php\n *\n * For more JQuery plugins visit http://plugins.krajee.com\n * For more Yii related demos visit http://demos.krajee.com\n */\n\n/*eslint valid-jsdoc: 0 */\n/*eslint quotes: 0 */\n/*eslint indent: 0 */\n/*eslint default-case: 0 */\n/*eslint prefer-rest-params: 0 */\n/*eslint prefer-template: 0 */\n\n\"use strict\";\n\nconst DAY = 1000 * 60 * 60 * 24;\nconst HOUR = 3600;\n\nfunction _compare(str1, str2) {\n    return typeof str1 === 'string' && typeof str2 === 'string' && str1.toLowerCase() === str2.toLowerCase();\n}\nfunction _lpad(value, length, chr) {\n    const val = value.toString();\n    chr = chr || '0';\n    return val.length < length ? _lpad(chr + val, length) : val;\n}\nfunction _extend(out) {\n    out = out || {};\n    for (let i = 1; i < arguments.length; i++) {\n        const obj = arguments[i];\n        if (!obj) {\n            continue;\n        }\n        for (const key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                if (typeof obj[key] === 'object') {\n                    _extend(out[key], obj[key]);\n                } else {\n                    out[key] = obj[key];\n                }\n            }\n        }\n    }\n    return out;\n}\nfunction _indexOf(val, arr) {\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i].toLowerCase() === val.toLowerCase()) {\n            return i;\n        }\n    }\n    return -1;\n}\nconst defaultSettings = {\n    dateSettings: {\n        days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        daysShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        months: [\n            'January', 'February', 'March', 'April', 'May', 'June', 'July',\n            'August', 'September', 'October', 'November', 'December'\n        ],\n        monthsShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        meridiem: ['AM', 'PM'],\n        ordinal: function(number) {\n            const n = number % 10, suffixes = {1: 'st', 2: 'nd', 3: 'rd'};\n            return Math.floor(number % 100 / 10) === 1 || !suffixes[n] ? 'th' : suffixes[n];\n        }\n    },\n    separators: /[ \\-+/.T:@]/g,\n    validParts: /[dDjlNSwzWFmMntLoYyaABgGhHisueTIOPZcrU]/g,\n    intParts: /[djwNzmnyYhHgGis]/g,\n    tzParts: /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g,\n    tzClip: /[^-+\\dA-Z]/g\n};\n\nexport default class DateFormatter {\n    constructor(options) {\n        const self = this, config = _extend(defaultSettings, options);\n        self.dateSettings = config.dateSettings;\n        self.separators = config.separators;\n        self.validParts = config.validParts;\n        self.intParts = config.intParts;\n        self.tzParts = config.tzParts;\n        self.tzClip = config.tzClip;\n    }\n\n    getMonth(val) {\n        const self = this;\n        let i = _indexOf(val, self.dateSettings.monthsShort) + 1;\n        if (i === 0) {\n            i = _indexOf(val, self.dateSettings.months) + 1;\n        }\n        return i;\n    }\n    parseDate(vDate, vFormat) {\n        const self = this, vSettings = self.dateSettings,\n            out = {date: null, year: null, month: null, day: null, hour: 0, min: 0, sec: 0};\n        let vDateFlag = false, vTimeFlag = false, i;\n        if (!vDate) {\n            return null;\n        }\n        if (vDate instanceof Date) {\n            return vDate;\n        }\n        if (vFormat === 'U') {\n            i = parseInt(vDate);\n            return i ? new Date(i * 1000) : vDate;\n        }\n        switch (typeof vDate) {\n            case 'number':\n                return new Date(vDate);\n            case 'string':\n                break;\n            default:\n                return null;\n        }\n        const vFormatParts = vFormat.match(self.validParts);\n        if (!vFormatParts || vFormatParts.length === 0) {\n            throw new Error(\"Invalid date format definition.\");\n        }\n        const vDateParts = vDate.replace(self.separators, '\\0').split('\\0');\n        for (i = 0; i < vDateParts.length; i++) {\n            const vDatePart = vDateParts[i];\n            const iDatePart = parseInt(vDatePart);\n            switch (vFormatParts[i]) {\n                case 'y':\n                case 'Y':\n                    if (iDatePart) {\n                        const len = vDatePart.length;\n                        out.year = len === 2 ? parseInt((iDatePart < 70 ? '20' : '19') + vDatePart) : iDatePart;\n                    } else {\n                        return null;\n                    }\n                    vDateFlag = true;\n                    break;\n                case 'm':\n                case 'n':\n                case 'M':\n                case 'F':\n                    if (isNaN(iDatePart)) {\n                        const vMonth = self.getMonth(vDatePart);\n                        if (vMonth > 0) {\n                            out.month = vMonth;\n                        } else {\n                            return null;\n                        }\n                    } else {\n                        if (iDatePart >= 1 && iDatePart <= 12) {\n                            out.month = iDatePart;\n                        } else {\n                            return null;\n                        }\n                    }\n                    vDateFlag = true;\n                    break;\n                case 'd':\n                case 'j':\n                    if (iDatePart >= 1 && iDatePart <= 31) {\n                        out.day = iDatePart;\n                    } else {\n                        return null;\n                    }\n                    vDateFlag = true;\n                    break;\n                case 'g':\n                case 'h':\n                    const vMeriIndex = (vFormatParts.indexOf('a') > -1) ? vFormatParts.indexOf('a') :\n                        (vFormatParts.indexOf('A') > -1) ? vFormatParts.indexOf('A') : -1;\n                    const mer = vDateParts[vMeriIndex];\n                    if (vMeriIndex !== -1) {\n                        const vMeriOffset = _compare(mer, vSettings.meridiem[0]) ? 0 :\n                            (_compare(mer, vSettings.meridiem[1]) ? 12 : -1);\n                        if (iDatePart >= 1 && iDatePart <= 12 && vMeriOffset !== -1) {\n                            out.hour = iDatePart % 12 === 0 ? vMeriOffset : iDatePart + vMeriOffset;\n                        } else {\n                            if (iDatePart >= 0 && iDatePart <= 23) {\n                                out.hour = iDatePart;\n                            }\n                        }\n                    } else {\n                        if (iDatePart >= 0 && iDatePart <= 23) {\n                            out.hour = iDatePart;\n                        } else {\n                            return null;\n                        }\n                    }\n                    vTimeFlag = true;\n                    break;\n                case 'G':\n                case 'H':\n                    if (iDatePart >= 0 && iDatePart <= 23) {\n                        out.hour = iDatePart;\n                    } else {\n                        return null;\n                    }\n                    vTimeFlag = true;\n                    break;\n                case 'i':\n                    if (iDatePart >= 0 && iDatePart <= 59) {\n                        out.min = iDatePart;\n                    } else {\n                        return null;\n                    }\n                    vTimeFlag = true;\n                    break;\n                case 's':\n                    if (iDatePart >= 0 && iDatePart <= 59) {\n                        out.sec = iDatePart;\n                    } else {\n                        return null;\n                    }\n                    vTimeFlag = true;\n                    break;\n            }\n        }\n        if (vDateFlag === true && out.year && out.month && out.day) {\n            out.date = new Date(out.year, out.month - 1, out.day, out.hour, out.min, out.sec, 0);\n        } else {\n            if (vTimeFlag !== true) {\n                return null;\n            }\n            out.date = new Date(0, 0, 0, out.hour, out.min, out.sec, 0);\n        }\n        return out.date;\n    }\n    guessDate(vDateStr, vFormat) {\n        if (typeof vDateStr !== 'string') {\n            return vDateStr;\n        }\n        const self = this, vParts = vDateStr.replace(self.separators, '\\0').split('\\0'), vPattern = /^[djmn]/g,\n            vFormatParts = vFormat.match(self.validParts), vDate = new Date();\n\n        if (!vPattern.test(vFormatParts[0])) {\n            return vDateStr;\n        }\n\n        for (let i = 0; i < vParts.length; i++) {\n            let vDigit = 2;\n            const iPart = vParts[i];\n            const iSec = parseInt(iPart.substr(0, 2));\n            if (isNaN(iSec)) {\n                return null;\n            }\n            switch (i) {\n                case 0:\n                    if (vFormatParts[0] === 'm' || vFormatParts[0] === 'n') {\n                        vDate.setMonth(iSec - 1);\n                    } else {\n                        vDate.setDate(iSec);\n                    }\n                    break;\n                case 1:\n                    if (vFormatParts[0] === 'm' || vFormatParts[0] === 'n') {\n                        vDate.setDate(iSec);\n                    } else {\n                        vDate.setMonth(iSec - 1);\n                    }\n                    break;\n                case 2:\n                    let vYear = vDate.getFullYear();\n                    const len = iPart.length;\n                    vDigit = len < 4 ? len : 4;\n                    vYear = parseInt(len < 4 ? vYear.toString().substr(0, 4 - len) + iPart : iPart.substr(0, 4));\n                    if (!vYear) {\n                        return null;\n                    }\n                    vDate.setFullYear(vYear);\n                    break;\n                case 3:\n                    vDate.setHours(iSec);\n                    break;\n                case 4:\n                    vDate.setMinutes(iSec);\n                    break;\n                case 5:\n                    vDate.setSeconds(iSec);\n                    break;\n            }\n            const n = iPart.substr(vDigit);\n            if (n.length > 0) {\n                vParts.splice(i + 1, 0, n);\n            }\n        }\n        return vDate;\n    }\n    parseFormat(vChar, vDate) {\n        let fmt = null;\n        const self = this, vSettings = self.dateSettings, backslash = /\\\\?(.?)/gi, doFormat = function(t, s) {\n            return fmt[t] ? fmt[t]() : s;\n        };\n        fmt = {\n            /////////\n            // DAY //\n            /////////\n            /**\n             * Day of month with leading 0: `01..31`\n             * @return {string}\n             */\n            d() {\n                return _lpad(fmt.j(), 2);\n            },\n            /**\n             * Shorthand day name: `Mon...Sun`\n             * @return {string}\n             */\n            D() {\n                return vSettings.daysShort[fmt.w()];\n            },\n            /**\n             * Day of month: `1..31`\n             * @return {number}\n             */\n            j() {\n                return vDate.getDate();\n            },\n            /**\n             * Full day name: `Monday...Sunday`\n             * @return {number}\n             */\n            l() {\n                return vSettings.days[fmt.w()];\n            },\n            /**\n             * ISO-8601 day of week: `1[Mon]..7[Sun]`\n             * @return {number}\n             */\n            N() {\n                return fmt.w() || 7;\n            },\n            /**\n             * Day of week: `0[Sun]..6[Sat]`\n             * @return {number}\n             */\n            w() {\n                return vDate.getDay();\n            },\n            /**\n             * Day of year: `0..365`\n             * @return {number}\n             */\n            z() {\n                const a = new Date(fmt.Y(), fmt.n() - 1, fmt.j()), b = new Date(fmt.Y(), 0, 1);\n                return Math.round((a - b) / DAY);\n            },\n\n            //////////\n            // WEEK //\n            //////////\n            /**\n             * ISO-8601 week number\n             * @return {number}\n             */\n            W() {\n                const a = new Date(fmt.Y(), fmt.n() - 1, fmt.j() - fmt.N() + 3), b = new Date(a.getFullYear(), 0, 4);\n                return _lpad(1 + Math.round((a - b) / DAY / 7), 2);\n            },\n\n            ///////////\n            // MONTH //\n            ///////////\n            /**\n             * Full month name: `January...December`\n             * @return {string}\n             */\n            F() {\n                return vSettings.months[vDate.getMonth()];\n            },\n            /**\n             * Month w/leading 0: `01..12`\n             * @return {string}\n             */\n            m() {\n                return _lpad(fmt.n(), 2);\n            },\n            /**\n             * Shorthand month name; `Jan...Dec`\n             * @return {string}\n             */\n            M() {\n                return vSettings.monthsShort[vDate.getMonth()];\n            },\n            /**\n             * Month: `1...12`\n             * @return {number}\n             */\n            n() {\n                return vDate.getMonth() + 1;\n            },\n            /**\n             * Days in month: `28...31`\n             * @return {number}\n             */\n            t() {\n                return (new Date(fmt.Y(), fmt.n(), 0)).getDate();\n            },\n\n            //////////\n            // YEAR //\n            //////////\n            /**\n             * Is leap year? `0 or 1`\n             * @return {number}\n             */\n            L() {\n                const Y = fmt.Y();\n                return (Y % 4 === 0 && Y % 100 !== 0 || Y % 400 === 0) ? 1 : 0;\n            },\n            /**\n             * ISO-8601 year\n             * @return {number}\n             */\n            o() {\n                const n = fmt.n(), W = fmt.W(), Y = fmt.Y();\n                return Y + (n === 12 && W < 9 ? 1 : n === 1 && W > 9 ? -1 : 0);\n            },\n            /**\n             * Full year: `e.g. 1980...2010`\n             * @return {number}\n             */\n            Y() {\n                return vDate.getFullYear();\n            },\n            /**\n             * Last two digits of year: `00...99`\n             * @return {string}\n             */\n            y() {\n                return fmt.Y().toString().slice(-2);\n            },\n\n            //////////\n            // TIME //\n            //////////\n            /**\n             * Meridian lower: `am or pm`\n             * @return {string}\n             */\n            a() {\n                return fmt.A().toLowerCase();\n            },\n            /**\n             * Meridian upper: `AM or PM`\n             * @return {string}\n             */\n            A() {\n                const n = fmt.G() < 12 ? 0 : 1;\n                return vSettings.meridiem[n];\n            },\n            /**\n             * Swatch Internet time: `000..999`\n             * @return {string}\n             */\n            B() {\n                const H = vDate.getUTCHours() * HOUR, i = vDate.getUTCMinutes() * 60, s = vDate.getUTCSeconds();\n                return _lpad(Math.floor((H + i + s + HOUR) / 86.4) % 1000, 3);\n            },\n            /**\n             * 12-Hours: `1..12`\n             * @return {number}\n             */\n            g() {\n                return fmt.G() % 12 || 12;\n            },\n            /**\n             * 24-Hours: `0..23`\n             * @return {number}\n             */\n            G() {\n                return vDate.getHours();\n            },\n            /**\n             * 12-Hours with leading 0: `01..12`\n             * @return {string}\n             */\n            h() {\n                return _lpad(fmt.g(), 2);\n            },\n            /**\n             * 24-Hours w/leading 0: `00..23`\n             * @return {string}\n             */\n            H() {\n                return _lpad(fmt.G(), 2);\n            },\n            /**\n             * Minutes w/leading 0: `00..59`\n             * @return {string}\n             */\n            i() {\n                return _lpad(vDate.getMinutes(), 2);\n            },\n            /**\n             * Seconds w/leading 0: `00..59`\n             * @return {string}\n             */\n            s() {\n                return _lpad(vDate.getSeconds(), 2);\n            },\n            /**\n             * Microseconds: `000000-999000`\n             * @return {string}\n             */\n            u() {\n                return _lpad(vDate.getMilliseconds() * 1000, 6);\n            },\n\n            //////////////\n            // TIMEZONE //\n            //////////////\n            /**\n             * Timezone identifier: `e.g. Atlantic/Azores, ...`\n             * @return {string}\n             */\n            e() {\n                const str = /\\((.*)\\)/.exec(String(vDate))[1];\n                return str || 'Coordinated Universal Time';\n            },\n            /**\n             * DST observed? `0 or 1`\n             * @return {number}\n             */\n            I() {\n                const a = new Date(fmt.Y(), 0), c = Date.UTC(fmt.Y(), 0),\n                    b = new Date(fmt.Y(), 6), d = Date.UTC(fmt.Y(), 6);\n                return ((a - c) !== (b - d)) ? 1 : 0;\n            },\n            /**\n             * Difference to GMT in hour format: `e.g. +0200`\n             * @return {string}\n             */\n            O() {\n                const tzo = vDate.getTimezoneOffset(), a = Math.abs(tzo);\n                return (tzo > 0 ? '-' : '+') + _lpad(Math.floor(a / 60) * 100 + a % 60, 4);\n            },\n            /**\n             * Difference to GMT with colon: `e.g. +02:00`\n             * @return {string}\n             */\n            P() {\n                const O = fmt.O();\n                return (O.substr(0, 3) + ':' + O.substr(3, 2));\n            },\n            /**\n             * Timezone abbreviation: `e.g. EST, MDT, ...`\n             * @return {string}\n             */\n            T() {\n                const str = (String(vDate).match(self.tzParts) || [\"\"]).pop().replace(self.tzClip, \"\");\n                return str || 'UTC';\n            },\n            /**\n             * Timezone offset in seconds: `-43200...50400`\n             * @return {number}\n             */\n            Z() {\n                return -vDate.getTimezoneOffset() * 60;\n            },\n\n            ////////////////////\n            // FULL DATE TIME //\n            ////////////////////\n            /**\n             * ISO-8601 date\n             * @return {string}\n             */\n            c() {\n                return 'Y-m-d\\\\TH:i:sP'.replace(backslash, doFormat);\n            },\n            /**\n             * RFC 2822 date\n             * @return {string}\n             */\n            r() {\n                return 'D, d M Y H:i:s O'.replace(backslash, doFormat);\n            },\n            /**\n             * Seconds since UNIX epoch\n             * @return {number}\n             */\n            U() {\n                return vDate.getTime() / 1000 || 0;\n            }\n        };\n        return doFormat(vChar, vChar);\n    }\n    formatDate(vDate, vFormat) {\n        const self = this, BACKSLASH = '\\\\';\n        if (typeof vDate === 'string') {\n            vDate = self.parseDate(vDate, vFormat);\n            if (!vDate) {\n                return null;\n            }\n        }\n        if (vDate instanceof Date) {\n            let vDateStr = '';\n            const len = vFormat.length;\n            for (let i = 0; i < len; i++) {\n                const vChar = vFormat.charAt(i);\n                if (vChar === 'S' || vChar === BACKSLASH) {\n                    continue;\n                }\n                if (i > 0 && vFormat.charAt(i - 1) === BACKSLASH) {\n                    vDateStr += vChar;\n                    continue;\n                }\n                let str = self.parseFormat(vChar, vDate);\n                if (i !== (len - 1) && self.intParts.test(vChar) && vFormat.charAt(i + 1) === 'S') {\n                    const n = parseInt(str) || 0;\n                    str += self.dateSettings.ordinal(n);\n                }\n                vDateStr += str;\n            }\n            return vDateStr;\n        }\n        return '';\n    }\n}\n","/**\n * @module gmf.permalink.ShareService\n */\n/**\n * Service to handle the sharing of the permalink.\n * @param {angular.$http} $http Angular http service.\n * @param  {string} gmfShortenerCreateUrl URL for the shortener API\n * @constructor\n * @struct\n * @ngInject\n * @export\n * @ngname gmfShareService\n */\nconst exports = function($http, gmfShortenerCreateUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.gmfShortenerCreateUrl_ = gmfShortenerCreateUrl;\n\n};\n\n\n/**\n * Get a short URL of the permalink by calling the url shortener service.\n * - If no shortener API url have been specified, it returns the permalink itself.\n * @param  {string} url the permalink\n * @return {gmfx.ShortenerAPIResponse|angular.$http.HttpPromise} an object containing the permalink not shortened or\n * the promise attached to the shortener API request\n */\nexports.prototype.getShortUrl = function(url) {\n  const params = /** @type {gmfx.ShortenerAPIRequestParams} */ ({\n    url\n  });\n\n  if (!this.gmfShortenerCreateUrl_) {\n    return {\n      data: {\n        short_url: url\n      },\n      status: 200\n    };\n  }\n\n  return this.postShortUrl_(params);\n};\n\n\n/**\n * Send the short permalink to the email provided\n * - If email is provided, the short permalink will be sent to this email\n * @param  {string} shortUrl the short permalink to send\n * @param  {string} email the email to which the short url must be send\n * @param  {string=} opt_message message for the email\n * @return {angular.$http.HttpPromise} the promise attached to the shortener API request\n */\nexports.prototype.sendShortUrl = function(shortUrl, email, opt_message) {\n  const params = /** @type {gmfx.ShortenerAPIRequestParams} */ ({\n    url: shortUrl,\n    email: email\n  });\n\n  if (opt_message) {\n    params['message'] = opt_message;\n  }\n\n  return this.postShortUrl_(params);\n};\n\n\n/**\n * @param  {gmfx.ShortenerAPIRequestParams} params parameters for the request\n * @return {angular.$http.HttpPromise} the promise attached to the shortener API request\n * @private\n */\nexports.prototype.postShortUrl_ = function(params) {\n  // Override default behavior of $http.post method (sending data in json format)\n  return this.$http_.post(this.gmfShortenerCreateUrl_, $.param(params), {\n    headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n  });\n};\n\n\n/**\n * Max length defined for the complete url.\n * Check IE limits, see {@link http://support.microsoft.com/kb/208427}\n * @constant\n * @type {number}\n */\nexports.URL_MAX_LEN = 2083;\n\n/**\n * Max length defined for the url parth section.\n * Check IE limits, see {@link http://support.microsoft.com/kb/208427}\n * @constant\n * @type {number}\n */\nexports.URL_PATH_MAX_LEN = 2048;\n\nexports.module = angular.module('gmfShareService', []);\n\nexports.module.service('gmfShareService', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.EPSG21781\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\nimport somerc from 'ngeo/proj/somerc.js';\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  `+proj=${somerc}`,\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureLength\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, gettextCatalog, options = /** @type {ngeox.interaction.MeasureOptions} */({})) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = gettextCatalog.getString('Click to continue drawing the line.');\n    const br = document.createElement('br');\n    br.textContent = gettextCatalog.getString('Double-click or click last point to finish.');\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomLineString);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedLength(geom, proj, this.precision, this.format);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureArea\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, gettextCatalog, options = {}) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = gettextCatalog.getString('Click to continue drawing the polygon.');\n    const br = document.createElement('br');\n    br.textContent = gettextCatalog.getString('Double-click or click starting point to finish.');\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('Polygon'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomPolygon);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedArea(geom, proj, this.precision, this.format);\n  const verticesCount = geom.getCoordinates()[0].length;\n  let coord = null;\n  if (verticesCount > 3) {\n    coord = geom.getInteriorPoint().getCoordinates();\n  }\n  callback(output, coord);\n};\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.component\n */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfAuthentication', [\n  gmfAuthenticationService.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoMessageModalComponent.name,\n]);\n\n\n/**\n * @param {angular.JQLite} element Element.\n * @param {angular.Attributes} attrs Attributes.\n * @return {string} Template URL.\n */\nexports.gmfAuthenticationTemplateUrl_ = (element, attrs) => {\n  const templateUrl = attrs['gmfAuthenticationTemplateurl'];\n  return templateUrl !== undefined ? templateUrl :\n    'gmf/authentication';\n};\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/authentication', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfAuthenticationTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfAuthenticationTemplateUrl($element, $attrs, gmfAuthenticationTemplateUrl) {\n  return gmfAuthenticationTemplateUrl($element, $attrs);\n}\n\n\n/**\n * An \"authentication\" component for a GeoMapFish application. With the\n * use of the \"authentication\" service, it features a complete interface\n * for the user to be able to login, logout, change or reset his or her\n * password.  The `gmfUser` angular value is also used to keep track of\n * the user information. When empty, that means that the user isn't connected\n * yet.\n *\n * While not logged in, the \"login\" form is shown, which allows the user to\n * either log in or ask for a password reset.\n *\n * Once logged in, the \"logout\" form is shown, which allows the user to either\n * log out or change his or her password.\n *\n * Example:\n *\n *      <gmf-authentication\n *        gmf-authentication-allow-password-change=\"::true\">\n *      </gmf-authentication>\n *\n * @htmlAttribute {boolean} gmf-authentication-allow-password-reset Whether to\n *     show the password forgotten link. Default to true.\n * @htmlAttribute {boolean|function} gmf-authentication-allow-password-change Whether to\n *     show the change password button. Default to true. You can also specify a gmfx.PasswordValidator Object\n *     to add constraint on user's new password.\n * @htmlAttribute {gmfx.PasswordValidator} gmf-authentication-password-validator A gmfx.PasswordValidator\n *     Object to add constraint on user's new password. The gmf-authentication-allow-password-change. To use\n *     it you must also allow the user to change its password.\n * @htmlAttribute {boolean} gmf-authentication-force-password-change Force the\n *     user to change its password. Default to false. If you set it to true, you\n *     should also allow the user to change its password. Don't add this option alone, use\n *     it in a dedicated authentication component, in a ngeo-modal, directly in\n *     your index.html (see example 2.)\n *\n * Example 2:\n *\n *     <ngeo-modal\n *         ngeo-modal-closable=\"false\"\n *         ng-model=\"mainCtrl.userMustChangeItsPassword()\"\n *         ng-model-options=\"{getterSetter: true}\">\n *       <div class=\"modal-header\">\n *         <h4 class=\"modal-title\">\n *           {{'You must change your password' | translate}}\n *         </h4>\n *       </div>\n *       <div class=\"modal-body\">\n *         <gmf-authentication\n *           gmf-authentication-force-password-change=\"::true\">\n *         </gmf-authentication>\n *       </div>\n *     </ngeo-modal>\n *\n * @ngdoc component\n * @ngname gmfAuthentication\n */\nexports.component_ = {\n  bindings: {\n    'allowPasswordReset': '<?gmfAuthenticationAllowPasswordReset',\n    'allowPasswordChange': '<?gmfAuthenticationAllowPasswordChange',\n    'passwordValidator': '<?gmfAuthenticationPasswordValidator',\n    'forcePasswordChange': '<?gmfAuthenticationForcePasswordChange'\n  },\n  controller: 'GmfAuthenticationController',\n  templateUrl: gmfAuthenticationTemplateUrl\n};\n\nexports.value('gmfAuthenticationTemplateUrl',\n  exports.gmfAuthenticationTemplateUrl_);\n\nexports.component('gmfAuthentication', exports.component_);\n\n\n/**\n * @private\n */\nexports.AuthenticationController_ = class {\n  /**\n   * @private\n   * @param {!angular.JQLite} $element Element.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {gmf.authentication.Service} gmfAuthenticationService GMF Authentication service\n   * @param {gmfx.User} gmfUser User.\n   * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfAuthenticationController\n   */\n  constructor($element, gettextCatalog, gmfAuthenticationService, gmfUser, ngeoNotification) {\n\n    /**\n     * @type {!angular.JQLite}\n     * @private\n     */\n    this.$element_ = $element;\n\n    /**\n     * @type {gmfx.User}\n     * @export\n     */\n    this.gmfUser = gmfUser;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog = gettextCatalog;\n\n    /**\n     * @type {gmf.authentication.Service}\n     * @private\n     */\n    this.gmfAuthenticationService_ = gmfAuthenticationService;\n\n    /**\n     * @type {ngeo.message.Notification}\n     * @private\n     */\n    this.notification_ = ngeoNotification;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordReset;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordChange;\n\n    /**\n     * @type {gmfx.PasswordValidator?}\n     * @export\n     */\n    this.passwordValidator = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.forcePasswordChange;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.changingPassword = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.changePasswordModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.resetPasswordModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.error = false;\n\n    // LOGIN form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.loginVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.pwdVal = '';\n\n    // CHANGE PASSWORD form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.oldPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdConfVal = '';\n  }\n\n  /**\n   * Initialise the controller.\n   */\n  $onInit() {\n    this.allowPasswordReset = this.allowPasswordReset !== false;\n    this.allowPasswordChange = this.allowPasswordChange !== false;\n    this.forcePasswordChange = this.forcePasswordChange === true;\n    if (this.forcePasswordChange) {\n      this.changingPassword = true;\n    }\n  }\n\n\n  // METHODS THAT CALL THE AUTHENTICATION SERVICE METHODS\n\n  /**\n   * Calls the authentication service changePassword method.\n   * @export\n   */\n  changePassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const oldPwd = this.oldPwdVal;\n    const newPwd = this.newPwdVal;\n    const confPwd = this.newPwdConfVal;\n\n    const errors = [];\n    // Validation - Passwords are required.\n    if (oldPwd === '') {\n      errors.push(gettextCatalog.getString('The old password is required.'));\n    }\n    if (newPwd === '') {\n      errors.push(gettextCatalog.getString('The new password is required.'));\n    }\n    if (confPwd === '') {\n      errors.push(gettextCatalog.getString('The password confirmation is required.'));\n    }\n\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      // Default validation - Passwords must be new and must also match.\n      if (oldPwd === newPwd) {\n        errors.push(gettextCatalog.getString('The old and new passwords are the same.'));\n      }\n      if (newPwd !== confPwd) {\n        errors.push(gettextCatalog.getString('The passwords don\\'t match.'));\n      }\n      // Custom validation - If a passwordValidator is set, use it to validate the new password.\n      if (this.passwordValidator) {\n        if (!this.passwordValidator.isPasswordValid(oldPwd)) {\n          errors.push(gettextCatalog.getString(this.passwordValidator.notValidMessage));\n        }\n      }\n\n      if (errors.length) {\n        this.setError_(errors);\n      } else {\n        // Send request with current credentials, which may fail if the old password given is incorrect.\n        const error = gettextCatalog.getString('Incorrect old password.');\n        this.gmfAuthenticationService_.changePassword(oldPwd, newPwd, confPwd).then(\n          () => {\n            this.changePasswordModalShown = true;\n            this.changePasswordReset();\n          },\n          this.setError_.bind(this, error));\n      }\n    }\n  }\n\n  /**\n   * Calls the authentication service login method.\n   * @export\n   */\n  login() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const errors = [];\n    if (this.loginVal === '') {\n      errors.push(gettextCatalog.getString('The username is required.'));\n    }\n    if (this.pwdVal === '') {\n      errors.push(gettextCatalog.getString('The password is required.'));\n    }\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      const error = gettextCatalog.getString('Incorrect credentials or disabled account.');\n      this.gmfAuthenticationService_.login(this.loginVal, this.pwdVal).then(\n        this.resetError_.bind(this),\n        this.setError_.bind(this, error));\n    }\n  }\n\n  /**\n   * Calls the authentication service logout method.\n   * @export\n   */\n  logout() {\n    const gettextCatalog = this.gettextCatalog;\n    const error = gettextCatalog.getString('Could not log out.');\n    this.gmfAuthenticationService_.logout().then(\n      this.resetError_.bind(this),\n      this.setError_.bind(this, error));\n  }\n\n  /**\n   * Calls the authentication service resetPassword method.\n   * @export\n   */\n  resetPassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    if (!this.loginVal) {\n      this.setError_(gettextCatalog.getString('Please, input a login...'));\n      return;\n    }\n\n    const error = gettextCatalog.getString('An error occurred while resetting the password.');\n\n    /**\n     * @param {gmfx.AuthenticationDefaultResponse} respData Response.\n     */\n    const resetPasswordSuccessFn = function(respData) {\n      this.resetPasswordModalShown = true;\n      this.resetError_();\n    }.bind(this);\n\n    this.gmfAuthenticationService_.resetPassword(this.loginVal).then(\n      resetPasswordSuccessFn,\n      this.setError_.bind(this, error)\n    );\n  }\n\n\n  // OTHER METHODS\n\n  /**\n   * Reset the changePassword values and error.\n   * @export\n   */\n  changePasswordReset() {\n    this.resetError_();\n    this.changingPassword = false;\n    this.oldPwdVal = '';\n    this.newPwdVal = '';\n    this.newPwdConfVal = '';\n  }\n\n  /**\n   * @return {boolean} True if the user must change is password and if the \"forcePasswordChange\" option of\n   *    this component is set to true.\n   * @export\n   */\n  userMustChangeItsPassword() {\n    return (this.gmfUser.is_password_changed === false && this.forcePasswordChange);\n  }\n\n  /**\n   * @param {string|Array.<string>} errors Errors.\n   * @private\n   */\n  setError_(errors) {\n    if (this.error) {\n      this.resetError_();\n    }\n\n    this.error = true;\n\n    const container = this.$element_.find('.gmf-authentication-error');\n\n    if (!Array.isArray(errors)) {\n      errors = [errors];\n    }\n\n    errors.forEach(function(error) {\n      this.notification_.notify({\n        msg: error,\n        target: container,\n        type: ngeoMessageMessage.Type.ERROR\n      });\n    }, this);\n  }\n\n  /**\n   * @private\n   */\n  resetError_() {\n    this.notification_.clear();\n    this.error = false;\n  }\n};\n\nexports.controller('GmfAuthenticationController',\n  exports.AuthenticationController_);\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.module\n */\nimport gmfAuthenticationComponent from 'gmf/authentication/component.js';\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfAuthenticationModule', [\n  gmfAuthenticationComponent.name,\n  gmfAuthenticationService.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.BackgroundLayerMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport ngeoLayerHelper from 'ngeo/map/LayerHelper.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function(ngeoLayerHelper) {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? this.ngeoLayerHelper_.getGroupFromMap(map,\n    exports.BACKGROUNDLAYERGROUP_NAME).getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const ZIndex = -200;\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (layer !== null) {\n    layer.setZIndex(ZIndex);\n    this.ngeoLayerHelper_.setZIndexToFirstLevelChildren(layer, ZIndex);\n  }\n\n  const bgGroup = this.ngeoLayerHelper_.getGroupFromMap(map, exports.BACKGROUNDLAYERGROUP_NAME);\n\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      bgGroup.getLayers().setAt(0, layer);\n    } else {\n      bgGroup.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    bgGroup.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * Return the current background layer overlay of a given map, used by the opacity slider.\n * `null` is returned if the map does not have an opacity background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.prototype.getOpacityBgLayer = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? this.ngeoLayerHelper_.getGroupFromMap(map,\n    exports.BACKGROUNDLAYERGROUP_NAME).getLayers().item(1) : null;\n};\n\n/**\n * Set an background layer overlay, used by the opacity slider.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.prototype.setOpacityBgLayer = function(map, layer) {\n  const ZIndex = -100;\n  layer.setOpacity(0);\n  layer.setVisible(true);\n  layer.setZIndex(ZIndex);\n  this.ngeoLayerHelper_.setZIndexToFirstLevelChildren(layer, ZIndex);\n  const bgGroup = this.ngeoLayerHelper_.getGroupFromMap(map, exports.BACKGROUNDLAYERGROUP_NAME);\n\n  const index = bgGroup.getLayers().getArray().indexOf(layer);\n  if (index === -1) {\n    bgGroup.getLayers().push(layer);\n  }\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', [\n  ngeoLayerHelper.module.name\n]);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\n\n/**\n * @const\n */\nexports.BACKGROUNDLAYERGROUP_NAME = 'background';\n\n\nexport default exports;\n","/**\n * @module gmf.backgroundlayerselector.component\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfBackgroundlayerselector', [\n  gmfThemeThemes.module.name,\n  ngeoMapBackgroundLayerMgr.module.name,\n]);\n\n\nexports.value('gmfBackgroundlayerselectorTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfBackgroundlayerselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/backgroundlayerselector';\n  }\n);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/backgroundlayerselector', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfBackgroundlayerselectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfBackgroundlayerselectorTemplateUrl($element, $attrs, gmfBackgroundlayerselectorTemplateUrl) {\n  return gmfBackgroundlayerselectorTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a \"background layer selector\" component.\n *\n * Example:\n *\n *      <gmf-backgroundlayerselector\n *        gmf-backgroundlayerselector-map=\"::ctrl.map\"\n *        gmf-backgroundlayer-opacity-options=\"::ctrl.bgOpacityOptions\"\n *        gmf-backgroundlayerselector-select=\"onBackgroundSelected()\">\n *      </gmf-backgroundlayerselector>\n *\n * Used UI metadata:\n *\n *  * thumbnail: The URL used for the icon.\n *\n * @htmlAttribute {ol.Map=} gmf-backgroundlayerselector-map The map.\n * @htmlAttribute {string} gmf-backgroundlayer-opacity-options The opacity slider options.\n * @htmlAttribute {Function} gmf-backgroundlayerselector-select Function called\n *     when a layer was selected by the user.\n *\n * @ngdoc component\n * @ngname gmfBackgroundlayerselector\n */\nexports.component_ = {\n  controller: 'GmfBackgroundlayerselectorController as ctrl',\n  bindings: {\n    'map': '=gmfBackgroundlayerselectorMap',\n    'opacityOptions': '=gmfBackgroundlayerOpacityOptions',\n    'select': '&?gmfBackgroundlayerselectorSelect'\n  },\n  templateUrl: gmfBackgroundlayerselectorTemplateUrl\n};\n\n\nexports.component('gmfBackgroundlayerselector',\n  exports.component_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer manager.\n * @param {!gmf.theme.Themes} gmfThemes Themes service.\n * @ngInject\n * @ngdoc controller\n * @ngname GmfBackgroundlayerselectorController\n */\nexports.Controller_ = function($scope, ngeoBackgroundLayerMgr, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!string|undefined}\n   * @export\n   */\n  this.opacityOptions;\n\n  /**\n   * Function called when a layer was selected by the user.\n   * @type {?Function}\n   * @export\n   */\n  this.select;\n\n  /**\n   * @type {?ol.layer.Base}\n   * @export\n   */\n  this.bgLayer;\n\n  /**\n   * @type {?Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.bgLayers;\n\n  /**\n   * @type {ol.layer.Base}\n   * @export\n   */\n  this.opacityLayer;\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(gmfThemes, 'change', this.handleThemesChange_, this));\n\n  /**\n   * @type {!ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n\n  this.listenerKeys_.push(olEvents.listen(this.backgroundLayerMgr_, 'change',\n    /**\n     * @param {!ngeox.BackgroundEvent} event Event.\n     */\n    (event) => {\n      this.bgLayer = event.detail.current;\n    }));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.handleThemesChange_();\n};\n\n\n/**\n * Called when the themes changes. Set (or reset) the backround layers.\n * @private\n */\nexports.Controller_.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getBgLayers().then((layers) => {\n    this.bgLayers = layers;\n\n    if (this.opacityOptions !== undefined) {\n      const opacityLayer = layers.find(layer => layer.get('label') === this.opacityOptions);\n      if (opacityLayer !== undefined) {\n        this.setOpacityBgLayer(opacityLayer);\n        this.opacityLayer = opacityLayer;\n\n        // Reorder for the UI the bgArray copy with the opacity layer at the end\n        this.bgLayers = this.bgLayers.slice();\n        const indexOpa = this.bgLayers.findIndex(layer => layer === this.opacityLayer);\n        this.bgLayers.splice(indexOpa, 1);\n        this.bgLayers.push(opacityLayer);\n      }\n    }\n  });\n};\n\n/**\n * Getter/setter for background layer overlay, used by opacity slider.\n * @param {?number} val The opacity.\n * @returns {number} The background layer opacity.\n * @export\n */\nexports.Controller_.prototype.getSetBgLayerOpacity = function(val) {\n  if (val) {\n    this.opacityLayer.setOpacity(val);\n  }\n  return this.opacityLayer.getOpacity();\n};\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @param {boolean=} opt_silent Do not notify listeners.\n * @export\n */\nexports.Controller_.prototype.setLayer = function(layer, opt_silent) {\n  this.bgLayer = layer;\n  this.backgroundLayerMgr_.set(this.map, layer);\n  if (!opt_silent && this.select) {\n    this.select();\n  }\n};\n\n/**\n * Set a background layer overlay, used by the opacity slider.\n * @param {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.Controller_.prototype.setOpacityBgLayer = function(layer) {\n  this.backgroundLayerMgr_.setOpacityBgLayer(this.map, layer);\n};\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('GmfBackgroundlayerselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.Helper\n */\nimport gmfEditingEnumerateAttribute from 'gmf/editing/EnumerateAttribute.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to manipulate or get GMF data\n   * sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {gmf.editing.EnumerateAttribute} gmfEnumerateAttribute The Gmf enumerate\n   *     attribute service.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     source helper service.\n   * @ngdoc service\n   * @ngname gmfDataSourcesHelper\n   * @ngInject\n   */\n  constructor($q, gmfEnumerateAttribute, ngeoDataSourcesHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {gmf.editing.EnumerateAttribute}\n     * @private\n     */\n    this.gmfEnumerateAttribute_ = gmfEnumerateAttribute;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {gmfx.datasource.DataSources}\n     * @protected\n     */\n    this.collection_;\n\n    /**\n     * @type {Object.<number, gmf.datasource.OGC>}\n     * @protected\n     */\n    this.cache_;\n  }\n\n  /**\n   * @return {gmfx.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return /** @type {gmfx.datasource.DataSources} */ (\n      this.ngeoDataSourcesHelper_.collection\n    );\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?gmf.datasource.OGC} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return /** @type {?gmf.datasource.OGC} */ (\n      this.ngeoDataSourcesHelper_.getDataSource(id)\n    );\n  }\n\n  /**\n   * @param {gmf.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  prepareFiltrableDataSource(dataSource) {\n\n    const prepareFiltrableDataSourceDefer = this.q_.defer();\n\n    // (1) Get the attributes. The first time, they will be asynchronously\n    //     obtained using a WFS DescribeFeatureType request.\n    this.ngeoDataSourcesHelper_.getDataSourceAttributes(\n      dataSource\n    ).then((attributes) => {\n      // (2) The attribute names that are in the `enumeratedAttributes`\n      //     metadata are the ones that need to have their values fetched.\n      //     Do that once then set the type to SELECT and the choices.\n      const meta = dataSource.gmfLayer.metadata || {};\n      const enumAttributes = meta.enumeratedAttributes;\n      if (enumAttributes && enumAttributes.length) {\n        const promises = [];\n        for (const attribute of attributes) {\n          if (olArray.includes(enumAttributes, attribute.name) &&\n             attribute.type !== ngeoFormatAttributeType.SELECT &&\n             (!attribute.choices || !attribute.choices.length)) {\n            promises.push(\n              this.gmfEnumerateAttribute_.getAttributeValues(\n                dataSource, attribute.name\n              ).then((values) => {\n                const choices = values.map(choice => choice.value);\n                attribute.type = ngeoFormatAttributeType.SELECT;\n                attribute.choices = choices;\n              })\n            );\n          }\n        }\n        return this.q_.all(promises).then(\n          prepareFiltrableDataSourceDefer.resolve(dataSource)\n        );\n      } else {\n        prepareFiltrableDataSourceDefer.resolve(dataSource);\n      }\n    });\n\n    return prepareFiltrableDataSourceDefer.promise;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourcesHelper', [\n  ngeoDatasourceHelper.module.name,\n  gmfEditingEnumerateAttribute.module.name,\n]);\nexports.module.service('gmfDataSourcesHelper', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.OGC\n */\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\nconst exports = class extends ngeoDatasourceOGC {\n\n  /**\n   * A `gmf.datasource.OGC` extends a `ngeo.datasource.OGC` and\n   * adds some properties that are proper to GMF only.\n   *\n   * @struct\n   * @param {gmfx.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {gmfThemes.GmfLayer}\n     * @private\n     */\n    this.gmfLayer_ = options.gmfLayer;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {gmfThemes.GmfLayer} GMF layer\n   * @export\n   */\n  get gmfLayer() {\n    return this.gmfLayer_;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.WFSAliases\n */\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\n\nconst exports = class {\n\n  /**\n   * Service that provides methods to get additional information and actions\n   * when performing WFS requests.\n   *\n   * @struct\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     source helper service.\n   * @ngdoc service\n   * @ngname gmfWFSAliases\n   * @ngInject\n   */\n  constructor(ngeoDataSourcesHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n  }\n\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @export\n   */\n  describe(dataSource) {\n    // Only QGIS Server supports WFS aliases\n    if (dataSource.ogcServerType === 'qgisserver' && !dataSource.attributes) {\n      // Trigger an additional WFS DescribeFeatureType request to get\n      // datasource attributes, including aliases.\n      this.ngeoDataSourcesHelper_.getDataSourceAttributes(dataSource);\n    }\n  }\n};\n\n\nexports.module = angular.module('gmfDatasourceWFSAliases', [\n  ngeoDatasourceHelper.module.name,\n]);\nexports.module.service('gmfWFSAliases', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.Manager\n */\nimport gmfDatasourceOGC from 'gmf/datasource/OGC.js';\nimport gmfDatasourceWFSAliases from 'gmf/datasource/WFSAliases.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\n\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\n\nconst exports = class {\n\n  /**\n   * The GeoMapFish DataSources Manager is responsible of listenening to the\n   * c2cgeoportal's themes to create instances of `ngeo.datasource.DataSource`\n   * objects with the layer definitions found and push them in the\n   * `ngeox.datasource.DataSources` collection. The Manager must be initialized\n   * with the app's map using the setDatasourcseMap() method.\n   *\n   * When changing theme, these data sources are cleared then re-created.\n   *\n   * @struct\n   * @param {angular.$q} $q Angular q service\n   * @param {!angular.Scope} $rootScope Angular rootScope.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n   * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n   * @param {!ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer\n   *     manager.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   *     data sources service.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @param {!gmf.datasource.WFSAliases} gmfWFSAliases Gmf WFS aliases service.\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfDataSourcesManager\n   */\n  constructor($q, $rootScope, $timeout, gmfThemes, gmfTreeManager,\n    ngeoBackgroundLayerMgr, ngeoDataSources, ngeoLayerHelper, ngeoRuleHelper,\n    ngeoWMSTime, gmfWFSAliases\n  ) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    /**\n     * @type {gmf.layertree.TreeManager}\n     * @private\n     */\n    this.gmfTreeManager_ = gmfTreeManager;\n\n    /**\n     * @type {!ngeo.map.BackgroundLayerMgr}\n     * @private\n     */\n    this.ngeoBackgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * The collection of DataSources from ngeo, which gets updated by this\n     * service. When the theme changes, first we remove all data sources, then\n     * the 'active' data source are added here.\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n    /**\n     * @type {!gmf.datasource.WFSAliases}\n     * @private\n     */\n    this.gmfWFSAliases_ = gmfWFSAliases;\n\n\n    // === Inner properties ===\n\n    /**\n     * While loading a new theme, this is where all of the created data sources\n     * are put using the id as key for easier find in the future.\n     * @type {Object.<number, gmf.datasource.OGC>}\n     * @private\n     */\n    this.dataSourcesCache_ = {};\n\n    /**\n     * A reference to the dimensions object.\n     * @type {ngeox.Dimensions|undefined}\n     * @private\n     */\n    this.dimensions_;\n\n    /**\n     * The cache of layertree leaf controller, i.e. those that are added to\n     * the tree manager. When treeCtrl is added in this cache, it's given\n     * a reference to its according data source.\n     * @type {gmfx.datasource.ManagerTreeCtrlCache}\n     * @private\n     */\n    this.treeCtrlCache_ = {};\n\n    /**\n     * The function to call to unregister the `watchCollection` event on\n     * the root layer tree controller children.\n     * @type {?Function}\n     * @private\n     */\n    this.treeCtrlsUnregister_ = null;\n\n    // === Events ===\n\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleNgeoBackgroundLayerChange_,\n      this\n    );\n    olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n  }\n\n\n  /**\n   * Set the map to use with your datasources.\n   * @param {!ol.Map} map The map to use.\n   * @export\n   */\n  setDatasourceMap(map) {\n    this.ngeoDataSources_.map = map;\n  }\n\n  /**\n   * @param {!ngeox.Dimensions} dimensions A reference to the dimensions\n   *     object to keep a reference of in this service.\n   */\n  setDimensions(dimensions) {\n    this.dimensions_ = dimensions;\n  }\n\n  /**\n   * Called when the themes change. Remove any existing data sources first,\n   * then create and add data sources from the loaded themes.\n   * @private\n   */\n  handleThemesChange_() {\n    // (1) Clear\n    this.clearDataSources_();\n    if (this.treeCtrlsUnregister_) {\n      this.treeCtrlsUnregister_();\n    }\n    this.clearTreeCtrlCache_();\n\n    // (2) Re-create data sources and event listeners\n    this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n      const promiseThemes = this.gmfThemes_.getThemesObject().then((themes) => {\n        // Create a DataSources for each theme\n        for (const theme of themes) {\n          for (const child of theme.children) {\n            googAsserts.assert(child);\n            this.createDataSource_(child, child, ogcServers);\n          }\n        }\n      });\n\n      const promiseBgLayers = this.gmfThemes_.getBackgroundLayersObject().then(\n        (backgroundLayers) => {\n          // Create a DataSource for each background layer\n          for (const backgroundLayer of backgroundLayers) {\n            this.createDataSource_(null, backgroundLayer, ogcServers);\n          }\n        }\n      );\n\n      // Then add the data sources that are active in the ngeo collection\n      this.q_.all([promiseThemes, promiseBgLayers]).then(() => {\n        this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(\n          () => {\n            if (this.gmfTreeManager_.rootCtrl) {\n              return this.gmfTreeManager_.rootCtrl.children;\n            }\n          },\n          this.handleTreeManagerRootChildrenChange_.bind(this)\n        );\n      });\n    });\n  }\n\n  /**\n   * Called when the list of tree controllers within the tree manager\n   * root controller changes. In other words, this method is called\n   * after nodes are being added added or removed from the tree,\n   * i.e. from the child nodes collection.\n   *\n   * A timeout is required  because the collection event is fired before\n   * the leaf nodes are created and they are the ones we're looking for here.\n   *\n   * This method handles the registration/unregistration of tree nodes that\n   * are added or removed, pushing it to the cache or removing it from the\n   * cache.\n   *\n   * @param {Array.<ngeo.layertree.Controller>|undefined} value List of tree\n   *     controllers.\n   * @private\n   */\n  handleTreeManagerRootChildrenChange_(value) {\n\n    this.timeout_(() => {\n\n      // (1) No need to do anything if the value is not set\n      if (!value) {\n        return;\n      }\n\n      // (2) Collect 'leaf' treeCtrls\n      const newTreeCtrls = [];\n      const visitor = (treeCtrls, treeCtrl) => {\n        const node = /** @type {!gmfThemes.GmfGroup|!gmfThemes.GmfLayer} */ (\n          treeCtrl.node);\n        const children = node.children;\n        if (!children) {\n          treeCtrls.push(treeCtrl);\n        }\n      };\n      for (let i = 0, ii = value.length; i < ii; i++) {\n        value[i].traverseDepthFirst(visitor.bind(this, newTreeCtrls));\n      }\n\n      // (3) Add new 'treeCtrls'\n      for (let i = 0, ii = newTreeCtrls.length; i < ii; i++) {\n        const newTreeCtrl = newTreeCtrls[i];\n        const cacheItem = this.getTreeCtrlCacheItem_(newTreeCtrl);\n        if (!cacheItem) {\n          this.addTreeCtrlToCache_(newTreeCtrl);\n        }\n      }\n\n      // (4) Remove treeCtrls that are no longer in the newTreeCtrl\n      const cache = this.treeCtrlCache_;\n      for (const id in this.treeCtrlCache_) {\n        const item = cache[id];\n        if (!newTreeCtrls.includes(item.treeCtrl)) {\n          this.removeTreeCtrlCacheItem_(item);\n        }\n      }\n    });\n  }\n\n  /**\n   * Remove the data sources from the ngeo collection that are in the cache,\n   * i.e. those created by this service, then clear the cache.\n   * @private\n   */\n  clearDataSources_() {\n\n    // (1) Remove data sources from ngeo collection\n    const dataSources = this.dataSources_.getArray();\n    for (let i = dataSources.length - 1, ii = 0; i >= ii; i--) {\n      if (this.dataSourcesCache_[dataSources[i].id]) {\n        // Use the `remove` method of the `ol.Collection` object for it\n        // to update its length accordingly and trigger the REMOVE event as\n        // well.\n        this.dataSources_.remove(dataSources[i]);\n      }\n    }\n\n    // (2) Clear the cache\n    olObj.clear(this.dataSourcesCache_);\n  }\n\n  /**\n   * Create a data source using the information on the node, group node\n   * and OGC servers. If the node has children, then we loop in those to get\n   * leaf nodes. Only leaf nodes end up creating a data source. If a data\n   * source with the same id already exists, then the node is skipped.\n   *\n   * Once a data source is created, it is added to the data sources cache.\n   *\n   * @param {gmfThemes.GmfGroup} firstLevelGroup The first level group node.\n   * @param {!gmfThemes.GmfGroup|!gmfThemes.GmfLayer} node The node, which\n   *     may have children or not.\n   * @param {!gmfThemes.GmfOgcServers} ogcServers OGC servers.\n   * @private\n   */\n  createDataSource_(firstLevelGroup, node, ogcServers) {\n\n    const children = node.children;\n\n    // (1) Group node (node that has children). Loop in the children\n    //     individually and create a data source for each one of them. The\n    //     group node itself is **skipped**.\n    if (children) {\n      for (const child of children) {\n        googAsserts.assert(child);\n        this.createDataSource_(firstLevelGroup, child, ogcServers);\n      }\n      return;\n    }\n\n    // From there on, the node is a layer node.\n    const gmfLayer = /** @type gmfThemes.GmfLayer */ (node);\n\n    // (2) Skip layer node if a data source with the same id exists\n    const id = olBase.getUid(gmfLayer);\n    if (this.dataSourcesCache_[id]) {\n      return;\n    }\n\n    // From there on, a data source will be created\n    const meta = gmfLayer.metadata;\n    const ogcType = gmfLayer.type;\n    let maxResolution;\n    let minResolution;\n    let ogcLayers;\n    let ogcServer;\n    let wmtsLayer;\n    let wmtsUrl;\n    let ogcImageType;\n    let timeProperty;\n\n    if (ogcType === gmfThemeThemes.NodeType.WMTS) {\n      // (3) Manage WMTS\n      const gmfLayerWMTS = /** @type {gmfThemes.GmfLayerWMTS} */ (gmfLayer);\n\n      // Common options for WMTS\n      wmtsLayer = gmfLayerWMTS.layer;\n      wmtsUrl = gmfLayerWMTS.url;\n      maxResolution = meta.maxResolution;\n      minResolution = meta.minResolution;\n\n      // OGC Layers\n      const layers = meta.queryLayers || meta.wmsLayers;\n      if (layers) {\n        ogcLayers = layers.split(',').map((layer) => {\n          return {\n            maxResolution: maxResolution,\n            minResolution: minResolution,\n            name: layer,\n            queryable: true\n          };\n        });\n      }\n\n      // OGC Server\n      if (meta.ogcServer && ogcServers[meta.ogcServer]) {\n        ogcServer = ogcServers[meta.ogcServer];\n      }\n      ogcImageType = gmfLayerWMTS.imageType;\n    } else if (ogcType === gmfThemeThemes.NodeType.WMS) {\n      // (4) Manage WMS\n      const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n      // Common options for WMS\n      maxResolution = gmfLayerWMS.maxResolutionHint;\n      minResolution = gmfLayerWMS.minResolutionHint;\n\n      // OGC Layers\n      ogcLayers = gmfLayerWMS.childLayers.map((childLayer) => {\n        return {\n          maxResolution: childLayer.maxResolutionHint,\n          minResolution: childLayer.minResolutionHint,\n          name: childLayer.name,\n          queryable: childLayer.queryable\n        };\n      });\n\n      // OGC Server\n      const ogcServerName = (!firstLevelGroup || firstLevelGroup.mixed) ?\n        gmfLayerWMS.ogcServer : firstLevelGroup.ogcServer;\n      googAsserts.assert(ogcServerName);\n      ogcServer = ogcServers[ogcServerName];\n      ogcImageType = ogcServer.imageType;\n\n      // Time property\n      if (gmfLayerWMS.time) {\n        timeProperty = gmfLayerWMS.time;\n      } else if (firstLevelGroup && firstLevelGroup.time) {\n        timeProperty = firstLevelGroup.time;\n      }\n    }\n\n    // (5) ogcServer\n    const ogcServerType = ogcServer ? ogcServer.type : undefined;\n    const wmsIsSingleTile = ogcServer ? ogcServer.isSingleTile : undefined;\n    const wfsUrl = ogcServer && ogcServer.wfsSupport ?\n      ogcServer.urlWfs : undefined;\n    const wmsUrl = ogcServer ? ogcServer.url : undefined;\n\n    let wfsOutputFormat = ngeoDatasourceOGC.WFSOutputFormat.GML3;\n    // qgis server only supports GML2 output\n    if (ogcServerType === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      wfsOutputFormat = ngeoDatasourceOGC.WFSOutputFormat.GML2;\n    }\n\n    // (6) Snapping\n    const snappable = !!meta.snappingConfig;\n    const snappingTolerance = meta.snappingConfig ?\n      meta.snappingConfig.tolerance : undefined;\n    const snappingToEdges = meta.snappingConfig ?\n      meta.snappingConfig.edge : undefined;\n    const snappingToVertice = meta.snappingConfig ?\n      meta.snappingConfig.vertex : undefined;\n\n    // (7) Dimensions\n    const dimensions = this.dimensions_;\n    const dimensionsConfig = node.dimensions || firstLevelGroup.dimensions;\n\n    // (8) Time values (lower or lower/upper)\n    let timeLowerValue;\n    let timeUpperValue;\n    if (timeProperty) {\n      const timeValues = this.ngeoWMSTime_.getOptions(timeProperty)['values'];\n      if (Array.isArray(timeValues)) {\n        timeLowerValue = timeValues[0];\n        timeUpperValue = timeValues[1];\n      } else {\n        timeLowerValue = timeValues;\n      }\n    }\n\n    // (9) Common options\n    const copyable = meta.copyable;\n    const identifierAttribute = meta.identifierAttributeField;\n    const name = gmfLayer.name;\n    const timeAttributeName = meta.timeAttribute;\n    const visible = meta.isChecked === true;\n\n    // Create the data source and add it to the cache\n    this.dataSourcesCache_[id] = new gmfDatasourceOGC({\n      copyable,\n      dimensions,\n      dimensionsConfig,\n      gmfLayer,\n      id,\n      identifierAttribute,\n      maxResolution,\n      minResolution,\n      name,\n      ogcImageType,\n      ogcLayers,\n      ogcServerType,\n      ogcType,\n      snappable,\n      snappingTolerance,\n      snappingToEdges,\n      snappingToVertice,\n      timeAttributeName,\n      timeLowerValue,\n      timeProperty,\n      timeUpperValue,\n      visible,\n      wfsOutputFormat,\n      wfsUrl,\n      wmsIsSingleTile,\n      wmsUrl,\n      wmtsLayer,\n      wmtsUrl\n    });\n  }\n\n  /**\n   * If the given Layertree controller is a 'leaf', add it to the cache.\n   * Also, set its according data source. Finally, add the data source to\n   * the ngeo collection.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to add\n   * @private\n   */\n  addTreeCtrlToCache_(treeCtrl) {\n\n    const id = olBase.getUid(treeCtrl.node);\n    const dataSource = this.dataSourcesCache_[id];\n    googAsserts.assert(dataSource, 'DataSource should be set');\n    treeCtrl.setDataSource(dataSource);\n\n    const stateWatcherUnregister = this.rootScope_.$watch(\n      () => treeCtrl.getState(),\n      this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n    );\n\n    const filterRulesWatcherUnregister = this.rootScope_.$watch(\n      () => {\n        const hasFilters = dataSource.filterRules !== null;\n        const isVisible = dataSource.visible;\n        return hasFilters && isVisible;\n      },\n      this.handleDataSourceFilterRulesChange_.bind(this, dataSource)\n    );\n\n    // Watch for time values change to update the WMS layer\n    let timeLowerValueWatcherUnregister;\n    let timeUpperValueWatcherUnregister;\n    let wmsLayer;\n    if (dataSource.timeProperty &&\n        dataSource.ogcType === ngeoDatasourceOGC.Type.WMS\n    ) {\n      timeLowerValueWatcherUnregister = this.rootScope_.$watch(\n        () => dataSource.timeLowerValue,\n        this.handleDataSourceTimeValueChange_.bind(this, dataSource)\n      );\n\n      if (dataSource.timeProperty.mode === 'range') {\n        timeUpperValueWatcherUnregister = this.rootScope_.$watch(\n          () => dataSource.timeUpperValue,\n          this.handleDataSourceTimeValueChange_.bind(this, dataSource)\n        );\n      }\n\n      wmsLayer = googAsserts.assertInstanceof(\n        gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl),\n        olLayerImage\n      );\n    }\n\n    this.treeCtrlCache_[id] = {\n      filterRulesWatcherUnregister,\n      stateWatcherUnregister,\n      timeLowerValueWatcherUnregister,\n      timeUpperValueWatcherUnregister,\n      treeCtrl,\n      wmsLayer\n    };\n\n    this.dataSources_.push(dataSource);\n\n    this.gmfWFSAliases_.describe(dataSource);\n  }\n\n  /**\n   * Remove a treeCtrl cache item. Unregister event listeners and remove the\n   * data source from the ngeo collection.\n   *\n   * @param {gmfx.datasource.ManagerTreeCtrlCacheItem} item Layertree\n   *     controller cache item\n   * @private\n   */\n  removeTreeCtrlCacheItem_(item) {\n\n    // (1) Remove data source\n    const dataSource = item.treeCtrl.getDataSource();\n    googAsserts.assert(dataSource, 'DataSource should be set');\n    this.dataSources_.remove(dataSource);\n\n    // (2) Remove item and clear event listeners\n    item.treeCtrl.setDataSource(null);\n    item.filterRulesWatcherUnregister();\n    item.stateWatcherUnregister();\n    if (item.timeLowerValueWatcherUnregister) {\n      item.timeLowerValueWatcherUnregister();\n    }\n    if (item.timeUpperValueWatcherUnregister) {\n      item.timeUpperValueWatcherUnregister();\n    }\n    delete this.treeCtrlCache_[olBase.getUid(item.treeCtrl.node)];\n  }\n\n  /**\n   * Clears the layer tree controller cache. At the same time, each item gets\n   * its data source reference unset and state watcher unregistered.\n   *\n   * The data source gets also removed from the ngeo data sources collection.\n   * @private\n   */\n  clearTreeCtrlCache_() {\n    for (const id in this.treeCtrlCache_) {\n      this.removeTreeCtrlCacheItem_(this.treeCtrlCache_[id]);\n    }\n  }\n\n  /**\n   * Called when the state of a 'leaf' layertree controller changes.\n   * Update the `visible` property of the data source according to the\n   * state of the layertree controller.\n   *\n   * Note: The possible states can only be 'on' or 'off', because the\n   * layertree controller being a 'leaf'.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n   * @param {string|undefined} newVal New state value\n   * @private\n   */\n  handleTreeCtrlStateChange_(treeCtrl, newVal) {\n    const treeDataSource = treeCtrl.getDataSource();\n    googAsserts.assert(treeDataSource, 'DataSource should be set');\n    const visible = newVal === 'on';\n    treeDataSource.visible = visible;\n\n    // In GMF, multiple data sources can be combined into one ol.layer.Layer\n    // object. When changing the state of a data source, we need to make\n    // sure that the FILTER param match order of the current LAYERS param.\n    //\n    // Note: we only need to do this ONCE, as there can be only one\n    // data source being filtered at a time\n    const siblingDataSourceIds = gmfLayertreeSyncLayertreeMap.getLayer(\n      treeCtrl).get('querySourceIds');\n    if (Array.isArray(siblingDataSourceIds)) {\n      const dataSources = this.dataSources_.getArray();\n      for (const dataSource of dataSources) {\n        if (dataSource instanceof gmfDatasourceOGC &&\n            dataSource.filterRules !== null &&\n            dataSource.id !== treeDataSource.id &&\n            siblingDataSourceIds.includes(dataSource.id) &&\n            dataSource.visible\n        ) {\n          this.handleDataSourceFilterRulesChange_(dataSource, true);\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Returns a layertree controller cache item, if it exists.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n   * @return {gmfx.datasource.ManagerTreeCtrlCacheItem} Cache item\n   * @private\n   */\n  getTreeCtrlCacheItem_(treeCtrl) {\n    return this.treeCtrlCache_[olBase.getUid(treeCtrl.node)] || null;\n  }\n\n  /**\n   * Called when both the 'visible' and 'filterRules' properties of a data\n   * source change.\n   *\n   * If the data source is filtrable, then make sure that when it gets rules\n   * set to apply them as OGC filters to the OpenLayers layer, more precisely\n   * as a `FILTER` parameter in the layer's source parameters.\n   *\n   * @param {!gmf.datasource.OGC} dataSource Data source.\n   * @param {boolean} value Value.\n   * @private\n   */\n  handleDataSourceFilterRulesChange_(dataSource, value) {\n\n    // Skip data sources that are not filtrables OR those that do not have\n    // the WMS ogcType, i.e. those that do not have an OpenLayers layer\n    // to update\n    if (dataSource.filtrable !== true ||\n        dataSource.ogcType !== ngeoDatasourceOGC.Type.WMS\n    ) {\n      return;\n    }\n\n    const id = olBase.getUid(dataSource.gmfLayer);\n    const item = this.treeCtrlCache_[id];\n    googAsserts.assert(item);\n    const treeCtrl = item.treeCtrl;\n\n    const layer = gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl);\n    googAsserts.assert(\n      layer instanceof olLayerImage ||\n      layer instanceof olLayerTile\n    );\n\n    const source = layer.getSource();\n    googAsserts.assert(\n      source instanceof olSourceImageWMS ||\n      source instanceof olSourceTileWMS\n    );\n\n    const filtrableLayerName = dataSource.getFiltrableOGCLayerName();\n    const projCode = treeCtrl.map.getView().getProjection().getCode();\n    const filterString = dataSource.visible ?\n      this.ngeoRuleHelper_.createFilterString({\n        dataSource,\n        projCode\n      }) :\n      null;\n\n    const filterParam = 'FILTER';\n    let filterParamValue = null;\n\n    if (filterString) {\n      const params = source.getParams();\n      const layersParam = params['LAYERS'];\n      const layersList = layersParam.split(',');\n      googAsserts.assert(layersList.length >= 1);\n\n      if (layersList.length === 1) {\n        // When there's only one layer in the `LAYERS` parameters, then\n        // the filter string is given as-is.\n        filterParamValue = filterString;\n      } else {\n        // When there's more then one layer, then each filter must be wrapped\n        // between parenthesis and the order must also match the `LAYERS`\n        // parameter as well.\n        const filterParamValues = [];\n        for (let i = 0, ii = layersList.length; i < ii; i++) {\n          if (layersList[i] === filtrableLayerName) {\n            filterParamValues.push(`(${filterString})`);\n          } else {\n            filterParamValues.push('()');\n          }\n        }\n        filterParamValue = filterParamValues.join('');\n      }\n    }\n\n    source.updateParams({\n      [filterParam]: filterParamValue\n    });\n  }\n\n  /**\n   * Called when either the `timeLowerValue` or `timeUpperValue` property of a\n   * data source changes.\n   *\n   * Get the range value from the data source, then update the WMS layer\n   * thereafter.\n   *\n   * @param {!gmf.datasource.OGC} dataSource Data source.\n   * @private\n   */\n  handleDataSourceTimeValueChange_(dataSource) {\n\n    const id = olBase.getUid(dataSource.gmfLayer);\n    const item = this.treeCtrlCache_[id];\n    googAsserts.assert(item);\n    const wmsLayer = googAsserts.assert(item.wmsLayer);\n    const wmsSource = googAsserts.assertInstanceof(\n      wmsLayer.getSource(),\n      olSourceImageWMS\n    );\n\n    const timeProperty = googAsserts.assert(dataSource.timeProperty);\n    let timeParam;\n    const range = dataSource.timeRangeValue;\n    if (range) {\n      timeParam = this.ngeoWMSTime_.formatWMSTimeParam(timeProperty, range);\n    }\n\n    // No need to update the TIME param if already the same value;\n    const params = wmsSource.getParams();\n    const currentTimeParam = params['TIME'];\n    if (currentTimeParam === timeParam) {\n      return;\n    }\n\n    // The `timeParam` can be undefined, which means that the TIME property\n    // gets reset.\n    this.ngeoLayerHelper_.updateWMSLayerState(\n      wmsLayer,\n      wmsSource.getParams()['LAYERS'],\n      timeParam\n    );\n  }\n\n  /**\n   * Called when the background layer changes. Add/Remove the according data\n   * sources to/from the ngeo data sources collection. Update the data source\n   * `visible` property as well.\n   *\n   * The `querySourceIds` property in the layer is used to determine the\n   * data sources that are bound to the layer.\n   *\n   * @param {!ngeox.BackgroundEvent} evt Event.\n   * @private\n   */\n  handleNgeoBackgroundLayerChange_(evt) {\n\n    const previousBackgroundLayer = evt.detail.previous;\n    const currentBackgroundLayer = evt.detail.current;\n    const cache = this.dataSourcesCache_;\n\n    // Remove data sources linked to previous background layer\n    if (previousBackgroundLayer) {\n      const ids = previousBackgroundLayer.get('querySourceIds');\n      if (Array.isArray(ids)) {\n        for (const id of ids) {\n          const dataSource = cache[id];\n          if (dataSource) {\n            dataSource.visible = false;\n            this.dataSources_.remove(dataSource);\n          }\n        }\n      }\n    }\n\n    // Add data sources linked to current background layer\n    if (currentBackgroundLayer) {\n      const ids = currentBackgroundLayer.get('querySourceIds');\n      if (Array.isArray(ids)) {\n        for (const id of ids) {\n          const dataSource = cache[id];\n          if (dataSource) {\n            dataSource.visible = true;\n            this.dataSources_.push(dataSource);\n          }\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourcesManager', [\n  gmfDatasourceWFSAliases.module.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoDatasourceDataSources.module.name,\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfDataSourcesManager', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.module\n */\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfDatasourceHelper from 'gmf/datasource/Helper.js';\nimport gmfDatasourceManager from 'gmf/datasource/Manager.js';\nimport gmfDatasourceWFSAliases from 'gmf/datasource/WFSAliases.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDatasourceModule', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfDatasourceHelper.module.name,\n  gmfDatasourceManager.module.name,\n  gmfDatasourceWFSAliases.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Disclaimer\n */\nimport 'bootstrap/js/alert.js';\nimport googAsserts from 'goog/asserts.js';\n\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * Provides methods to display any sort of messages, disclaimers, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @ngdoc service\n * @ngname ngeoDisclaimer\n * @ngInject\n */\nconst exports = function($sce, gettextCatalog, ngeoCreatePopup) {\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @private\n   * @type {ngeox.PopupFactory}\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  ngeoMessageMessage.call(this);\n\n  const container = angular.element('<div class=\"ngeo-disclaimer\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * Cache of messages.\n   * @type {Object.<string, angular.JQLite|ngeo.message.Popup>}\n   * @private\n   */\n  this.messages_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Show disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.alert = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Close disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.close = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.closeMessage_, this);\n};\n\n\n/**\n * Show the message.\n * @param {ngeox.Message} message Message.\n * @protected\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const gettextCatalog = this.gettextCatalog_;\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  // No need to do anything if message already exist.\n  const uid = this.getMessageUid_(message);\n  if (this.messages_[uid] !== undefined) {\n    return;\n  }\n\n  const showInPopup = message.popup === true;\n\n  if (showInPopup) {\n    // display the message in a popup, i.e. using the ngeo create popup\n    const popup = this.createPopup_();\n    const content = this.sce_.trustAsHtml(message.msg);\n    popup.open({\n      autoDestroy: true,\n      content: content,\n      title: '&nbsp;'\n    });\n\n    // Watch the open property\n    popup.scope.$watch('open', (newVal, oldVal) => {\n      if (!newVal) {\n        this.closeMessage_(message);\n      }\n    });\n\n    this.messages_[uid] =  popup;\n\n  } else {\n    // display the message using a boostrap dismissible alert\n    const classNames = ['alert', 'fade', 'alert-dismissible'];\n    switch (type) {\n      case ngeoMessageMessage.Type.ERROR:\n        classNames.push('alert-danger');\n        break;\n      case ngeoMessageMessage.Type.INFORMATION:\n        classNames.push('alert-info');\n        break;\n      case ngeoMessageMessage.Type.SUCCESS:\n        classNames.push('alert-success');\n        break;\n      case ngeoMessageMessage.Type.WARNING:\n        classNames.push('alert-warning');\n        break;\n      default:\n        break;\n    }\n\n    const el = angular.element(\n      `<div role=\"alert\" class=\"${classNames.join(' ')}\"></div>`);\n    const button = angular.element(\n      `<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"${\n        gettextCatalog.getString('Close')\n      }\"><span aria-hidden=\"true\" class=\"fa fa-times\"></span></button>`);\n    const msg = angular.element('<span />').html(message.msg);\n    el.append(button).append(msg);\n\n    let container;\n\n    if (message.target) {\n      container = angular.element(message.target);\n    } else {\n      container = this.container_;\n    }\n\n    container.append(el);\n    el.addClass('in');\n\n    // Listen when the message gets closed to cleanup the cache of messages\n    el.on('closed.bs.alert', () => {\n      this.closeMessage_(message);\n    });\n\n    this.messages_[uid] =  el;\n  }\n};\n\n\n/**\n * @param {ngeox.Message} message Message.\n * @return {string} The uid.\n * @private\n */\nexports.prototype.getMessageUid_ = function(message) {\n  return `${message.msg}-${message.type}`;\n};\n\n\n/**\n * Close the message.\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.closeMessage_ = function(message) {\n  const uid = this.getMessageUid_(message);\n  const obj = this.messages_[uid];\n\n  // (1) No need to do anything if message doesn't exist\n  if (obj === undefined) {\n    return;\n  }\n\n  // (2) Close message (popup or alert)\n  if (obj instanceof ngeoMessagePopup) {\n    // (2.1) Close popup, if not already closed\n    if (obj.getOpen()) {\n      obj.setOpen(false);\n    }\n  } else {\n    // (2.2) Check if the message hasn't been closed using the UI, i.e. by\n    //       clicking the close button. If not, then close it.\n    if (obj.hasClass('in')) {\n      obj.alert('close');\n    }\n  }\n\n  // (3) Remove message from cache since it's closed now.\n  delete this.messages_[uid];\n};\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoDisclaimer', [\n  ngeoMessagePopup.module.name,\n]);\n\nexports.module.service('ngeoDisclaimer', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.disclaimer.component\n */\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageDisclaimer from 'ngeo/message/Disclaimer.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\n\nimport 'angular-sanitize';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfDisclaimer', [\n  'ngSanitize',\n  ngeoMapLayerHelper.module.name,\n  ngeoMessageDisclaimer.module.name,\n  ngeoMiscEventHelper.module.name,\n]);\n\n\n/**\n * @constructor\n * @private\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$sce} $sce Angular sce service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @param {!ngeo.message.Disclaimer} ngeoDisclaimer Ngeo Disclaimer service.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo Event Helper.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisclaimerController\n */\nexports.Controller_ = function($element, $scope, $sce, $timeout,\n  gettextCatalog, ngeoCreatePopup, ngeoDisclaimer, ngeoEventHelper, ngeoLayerHelper) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.external;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.popup;\n\n  /**\n   * Visibility that is set to true when a new msg is there.\n   * @type {boolean}\n   * @export\n   */\n  this.visibility = false;\n\n  /**\n   * Trusted html messages that can be displayed as html.\n   * @type {string|undefined}\n   * @export\n   */\n  this.msg;\n\n  /**\n   * @type {!Array<string>}\n   * @export\n   */\n  this.msgs_ = [];\n\n  /**\n   * @type {!angular.$sce}\n   * @private\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {!ngeox.PopupFactory}\n   * @private\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  /**\n   * @type {!ngeo.message.Disclaimer}\n   * @private\n   */\n  this.disclaimer_ = ngeoDisclaimer;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.eventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.dataLayerGroup_ = this.ngeoLayerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n  this.registerLayer_(this.dataLayerGroup_);\n};\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersAdd_ = function(evt) {\n  this.timeout_(() => {\n    const layer = evt.element;\n    googAsserts.assertInstanceof(layer, olLayerBase);\n    this.registerLayer_(layer);\n  });\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersRemove_ = function(evt) {\n  const layer = evt.element;\n  googAsserts.assertInstanceof(layer, olLayerBase);\n  this.unregisterLayer_(layer);\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.registerLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Listen to added/removed layers to this group\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'add',\n        this.handleLayersAdd_,\n        this\n      )\n    );\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'remove',\n        this.handleLayersRemove_,\n        this\n      )\n    );\n\n    // (2) Register existing layers in the group\n    layer.getLayers().forEach((layer) => {\n      this.registerLayer_(layer);\n    });\n\n  } else {\n\n    // Show disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach((disclaimer) => {\n        this.showDisclaimerMessage_(disclaimer);\n      });\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.unregisterLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Clear event listeners\n    this.eventHelper_.clearListenerKey(layerUid);\n\n    // (2) Unregister existing layers in the group\n    layer.getLayers().forEach(layer => this.unregisterLayer_(layer));\n\n  } else {\n\n    // Close disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach((disclaimer) => {\n        this.closeDisclaimerMessage_(disclaimer);\n      });\n    }\n  }\n\n};\n\n\nexports.Controller_.prototype.$onDestroy = function() {\n  this.unregisterLayer_(this.dataLayerGroup_);\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.showDisclaimerMessage_ = function(msg) {\n  msg = this.gettextCatalog_.getString(msg);\n  if (this.external) {\n    if (this.msgs_.indexOf(msg) < 0) {\n      this.msgs_.push(msg);\n    }\n    this.msg = `${this.sce_.trustAsHtml(this.msgs_.join('<br />'))}`;\n    this.visibility = true;\n  } else {\n    this.disclaimer_.alert({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.closeDisclaimerMessage_ = function(msg) {\n  msg = this.gettextCatalog_.getString(msg);\n  if (this.external) {\n    this.visibility = false;\n    this.msgs_.length = 0;\n    this.msg = '';\n  } else {\n    this.disclaimer_.close({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * Provide a \"disclaimer\" component for GeoMapFish that is bound to the\n * layers added and removed from a map.\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\">\n *      </gmf-disclaimer>\n *\n * You can also display the disclaimer messages in popups or use them in another\n * context. The example below show you how to display the disclaimer messages\n * in a ngeo-modal window (external case).\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\"\n *        gmf-disclaimer-external=\"::true\"\n *        gmf-disclaimer-external-msg=\"disclaimerMsg\"\n *        gmf-disclaimer-external-visibility=\"disclaimerVisibility\">\n *      </gmf-disclaimer>\n *      <ngeo-modal ng-model=\"disclaimerVisibility\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *       </div>\n *       <div class=\"modal-body\">\n *         <div ng-bind-html=\"disclaimerMsg\"></div>\n *       </div>\n *     </ngeo-modal>\n *\n * @htmlAttribute {boolean} gmf-disclaimer-popup Whether to show the disclaimer\n *     messages in popups or not. Defaults to `false`.\n * @htmlAttribute {boolean?} gmf-disclaimer-external Whether to use disclaimer\n *     messages elsewhere or not. Default to `false`. If true, you should use\n *     the gmf-disclaimer-external-msg and the\n *     gmf-disclaimer-external-visibility too.\n * @htmlAttribute {boolean?} gmf-disclaimer-external-visibility variable that\n *     will be set to true if the disclaimers contain a new message. To uses it,\n *     you must set the gmf-disclaimer-external to true.\n * @htmlAttribute {string?} gmf-disclaimer-external-msg variable that will\n *     contains the disclaimer messages. To uses it, you must set the\n *     gmf-disclaimer-external to true.\n * @htmlAttribute {ol.Map=} gmf-disclaimer-map The map.\n *\n * @ngdoc component\n * @ngname gmfDisclaimer\n */\nexports.component_ = {\n  controller: exports.Controller_,\n  bindings: {\n    'popup': '<?gmfDisclaimerPopup',\n    'map': '=gmfDisclaimerMap',\n    'external': '<?gmfDisclaimerExternal',\n    'visibility': '=?gmfDisclaimerExternalVisibility',\n    'msg': '=?gmfDisclaimerExternalMsg'\n  }\n};\n\n\nexports.component('gmfDisclaimer', exports.component_);\n\n\nexport default exports;\n","/**\n * @module gmf.filters.SavedFilters\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * The GeoMapFish service responsible of storing filters that can be applied\n   * to data sources. A filter consists of:\n   *\n   * - a condition\n   * - a list of directed rules\n   * - a list of custom rules\n   * - a data source\n   * - a name\n   *\n   * The filters are saved in the browser local storage, if available.\n   * Otherwise, they are kept in this service for the duration of the visit.\n   *\n   * @param {!angular.Scope} $rootScope Angular rootScope.\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfSavedFilters\n   */\n  constructor($rootScope) {\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * This service can have a data source id bound to it, which automatically\n     * populates an array of items that are only bound to this data source.\n     * @type {?number}\n     * @private\n     */\n    this.currentDataSourceId_ = null;\n\n    /**\n     * @type {!Array.<!gmf.filters.SavedFilters.Item>}\n     * @private\n     */\n    this.currentDataSourceItems_ = [];\n\n    /**\n     * The used by this service to save in the local storage.\n     * @type {string}\n     * @private\n     */\n    this.localStorageKey_ = 'gmf_savedfilters';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.useLocalStorage_ = true;\n\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n\n    /**\n     * @type {!Array.<!gmf.filters.SavedFilters.Item>}\n     * @private\n     */\n    this.items_ = [];\n\n    this.rootScope_.$watchCollection(\n      () => this.items,\n      () => {\n        this.rePopulateCurrentDataSourceItems_();\n      }\n    );\n\n    if (this.useLocalStorage_) {\n      this.loadItemsFromLocalStorage_();\n    }\n\n  }\n\n  /**\n   * @return {!Array.<!gmf.filters.SavedFilters.Item>} Items\n   * @export\n   */\n  get currentDataSourceItems() {\n    return this.currentDataSourceItems_;\n  }\n\n  /**\n   * @param {?number} id Current data source id.\n   * @export\n   */\n  set currentDataSourceId(id) {\n    this.currentDataSourceId_ = id;\n    this.rePopulateCurrentDataSourceItems_();\n  }\n\n  /**\n   * @return {!Array.<!gmf.filters.SavedFilters.Item>} Items\n   * @export\n   */\n  get items() {\n    return this.items_;\n  }\n\n  /**\n   * Read the filter items that are saved in the local storage and set them\n   * as this service's items.\n   * @private\n   */\n  loadItemsFromLocalStorage_() {\n    if (window.localStorage[this.localStorageKey_]) {\n      const items = JSON.parse(window.localStorage[this.localStorageKey_]);\n      googAsserts.assertArray(items);\n      this.items_ = items;\n    }\n  }\n\n  /**\n   * Search for an item using a given name and data source id. Returns the\n   * index if it exists, otherwise -1 is returned.\n   * @param {string} name Name.\n   * @param {number} id Data source id.\n   * @return {number} The index of the item, if it exists.\n   * @export\n   */\n  indexOfItem(name, id) {\n\n    let item;\n    let idx = -1;\n    for (let i = 0, ii = this.items_.length; i < ii; i++) {\n      item = this.items[i];\n      if (item.dataSourceId === id && item.name === name) {\n        idx = i;\n        break;\n      }\n    }\n\n    return idx;\n  }\n\n  /**\n   * @param {!gmf.filters.SavedFilters.Item} item Item.\n   * @export\n   */\n  save(item) {\n\n    // (1) Add or replace item\n    const idx = this.indexOfItem(item.name, item.dataSourceId);\n    if (idx !== -1) {\n      this.items[idx] = item;\n    } else {\n      this.items.push(item);\n    }\n\n    // (2) Update local storage\n    if (this.useLocalStorage_) {\n      this.saveItemsInLocalStorage_();\n    }\n  }\n\n  /**\n   * @param {!gmf.filters.SavedFilters.Item} item Item.\n   * @export\n   */\n  remove(item) {\n\n    // (1) Remove the item\n    const found = olArray.remove(this.items, item);\n\n    // (2) Update local storage\n    if (found && this.useLocalStorage_) {\n      this.saveItemsInLocalStorage_();\n    }\n  }\n\n  /**\n   * Save all items in the local storage.\n   * @private\n   */\n  saveItemsInLocalStorage_() {\n    window.localStorage[this.localStorageKey_] = JSON.stringify(this.items);\n  }\n\n  /**\n   * @private\n   */\n  rePopulateCurrentDataSourceItems_() {\n    // (1) Clear existing items\n    this.currentDataSourceItems_.length = 0;\n\n    // (2) Populate\n    if (this.currentDataSourceId_ !== null) {\n      for (const item of this.items) {\n        if (item.dataSourceId === this.currentDataSourceId_) {\n          this.currentDataSourceItems_.push(item);\n        }\n      }\n    }\n  }\n\n};\n\n\nexports.module = angular.module('gmfSavedFilters', []);\n\nexports.module.service('gmfSavedFilters', exports);\n\n\n/**\n * The definition of a saved filter item.\n * @constructor\n * @struct\n * @export\n */\nexports.Item = function() {};\n\n\n/**\n * The condition of the saved filter item.\n * @type {string}\n * @export\n */\nexports.Item.prototype.condition;\n\n\n/**\n * The list of custom rules of the saved filter item.\n * @type {!Array.<!ngeox.rule.AnyOptions>}\n * @export\n */\nexports.Item.prototype.customRules;\n\n\n/**\n * The data source id related to the filter.\n * @type {number}\n * @export\n */\nexports.Item.prototype.dataSourceId;\n\n\n/**\n * The list of directed rules of the saved filter item.\n * @type {!Array.<!ngeox.rule.AnyOptions>}\n * @export\n */\nexports.Item.prototype.directedRules;\n\n\n/**\n * A human-readable name given to the saved filter item.\n * @type {string}\n * @export\n */\nexports.Item.prototype.name;\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.ruleComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMenu from 'ngeo/Menu.js';\nimport ngeoDrawComponent from 'ngeo/draw/component.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionModify from 'ngeo/interaction/Modify.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDatepickerComponent from 'ngeo/misc/datepickerComponent.js';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olArray from 'ol/array.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoRule', [\n  ngeoDrawComponent.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoMapFeatureOverlay.module.name,\n  ngeoMiscDatepickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/filter/rulecomponent', require('./rulecomponent.html'));\n});\n\n\nexports.value('ngeoRuleTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoRuleTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/filter/rulecomponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoRuleTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoRuleTemplateUrl($attrs, ngeoRuleTemplateUrl) {\n  return ngeoRuleTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.RuleController_ = class {\n\n  /**\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate\n   *     manager service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoRuleController\n   */\n  constructor(gettextCatalog, $scope, $timeout, ngeoFeatureHelper,\n    ngeoRuleHelper, ngeoToolActivateMgr) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * The original rule.\n     * @type {!ngeo.rule.Rule}\n     * @export\n     */\n    this.rule;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // Injected properties\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.ToolActivateMgr}\n     * @private\n     */\n    this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n\n    // Inner properties\n\n    /**\n     * The cloned rule. Changes in the UI are applied to the clone 'on-the-fly'.\n     * Changes in the clone are applied back in the original rule when the\n     * apply button is clicked.\n     * @type {!ngeo.rule.Rule}\n     * @export\n     */\n    this.clone;\n\n    const operatorType = ngeoRuleRule.OperatorType;\n    const spatialOperatorType = ngeoRuleRule.SpatialOperatorType;\n    const temporalOperatorType = ngeoRuleRule.TemporalOperatorType;\n\n    /**\n     * @type {Object.<string, string>}\n     * @export\n     */\n    this.operators = {\n      [operatorType.EQUAL_TO]: gettextCatalog.getString('Is equal to'),\n      [operatorType.GREATER_THAN]: gettextCatalog.getString('Is greater than'),\n      [operatorType.GREATER_THAN_OR_EQUAL_TO]: gettextCatalog.getString(\n        'Is greater than or equal to'),\n      [operatorType.LESSER_THAN]: gettextCatalog.getString('Is lesser than'),\n      [operatorType.LESSER_THAN_OR_EQUAL_TO]: gettextCatalog.getString(\n        'Is lesser than or equal to'),\n      [operatorType.NOT_EQUAL_TO]: gettextCatalog.getString('Is not equal to'),\n      [operatorType.LIKE]: gettextCatalog.getString('Contains'),\n      [spatialOperatorType.CONTAINS]: gettextCatalog.getString('Contains'),\n      [spatialOperatorType.INTERSECTS]: gettextCatalog.getString('Intersects'),\n      [spatialOperatorType.WITHIN]: gettextCatalog.getString('Is inside of'),\n      [temporalOperatorType.BEGINS]: gettextCatalog.getString('Begins at'),\n      [temporalOperatorType.DURING]: gettextCatalog.getString('During'),\n      [temporalOperatorType.ENDS]: gettextCatalog.getString('Ends at'),\n      [temporalOperatorType.EQUALS]: gettextCatalog.getString('Is equal to')\n    };\n\n    /**\n     * @type {Object.<string, string>}\n     * @export\n     */\n    this.operatorsShortFormat = {\n      [operatorType.EQUAL_TO]: '=',\n      [operatorType.GREATER_THAN]: '>',\n      [operatorType.GREATER_THAN_OR_EQUAL_TO]: '>=',\n      [operatorType.LESSER_THAN]: '<',\n      [operatorType.LESSER_THAN_OR_EQUAL_TO]: '<=',\n      [operatorType.NOT_EQUAL_TO]: '!=',\n      [operatorType.LIKE]: '~',\n      [temporalOperatorType.BEGINS]: '>=',\n      [temporalOperatorType.ENDS]: '<=',\n      [temporalOperatorType.EQUALS]: '='\n    };\n\n    /**\n     * Time property used when the rule is of type 'date|datetime' and uses\n     * a range of date.\n     * @type {!ngeox.TimeProperty}\n     * @export\n     */\n    this.timeRangeMode = {\n      widget: 'datepicker',\n      maxValue: null,\n      minValue: null,\n      maxDefValue: this.createDate_(),\n      minDefValue: this.createWeekAgoDate_(),\n      mode: 'range',\n      interval: [0, 1, 0, 0]\n    };\n\n    /**\n     * Time property used when the rule is of type 'date|datetime' and uses\n     * a single date.\n     * @type {!ngeox.TimeProperty}\n     * @export\n     */\n    this.timeValueMode = {\n      widget: 'datepicker',\n      maxValue: null,\n      minValue: null,\n      maxDefValue: this.createDate_(),\n      minDefValue: this.createDate_(),\n      mode: 'value',\n      interval: [0, 1, 0, 0]\n    };\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @private\n     */\n    this.toolActivate_;// = new ngeo.misc.ToolActivate(this.rule, 'active');\n\n    /**\n     * @type {!Array.<Function>}\n     * @private\n     */\n    this.unlisteners_ = [];\n\n\n    // Inner properties when dealing with a `ngeo.rule.Geometry`\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.drawActive = false;\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.drawToolActivate = new ngeoMiscToolActivate(this, 'drawActive');\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @export\n     */\n    this.drawnFeatures = new olCollection();\n\n    /**\n     * @type {?ngeo.Menu}\n     * @private\n     */\n    this.menu_ = null;\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @export\n     */\n    this.selectedFeatures = new olCollection();\n\n    /**\n     * @type {!ol.Collection.<!ol.interaction.Interaction>}\n     * @private\n     */\n    this.interactions_ = new olCollection();\n\n    /**\n     * @type {!ngeo.interaction.Modify}\n     * @private\n     */\n    this.modify_ = new ngeoInteractionModify({\n      features: this.selectedFeatures,\n      style: ngeoFeatureHelper.getVertexStyle(false)\n    });\n    this.interactions_.push(this.modify_);\n\n    /**\n     * @type {ngeo.interaction.Rotate}\n     * @private\n     */\n    this.rotate_ = new ngeoInteractionRotate({\n      features: this.selectedFeatures,\n      style: new olStyleStyle({\n        text: new olStyleText({\n          text: '\\uf01e',\n          font: 'normal 18px FontAwesome',\n          fill: new olStyleFill({\n            color: '#7a7a7a'\n          })\n        })\n      })\n    });\n    this.interactions_.push(this.rotate_);\n\n    /**\n     * @type {ngeo.interaction.Translate}\n     * @private\n     */\n    this.translate_ = new ngeoInteractionTranslate({\n      features: this.selectedFeatures,\n      style: new olStyleStyle({\n        text: new olStyleText({\n          text: '\\uf047',\n          font: 'normal 18px FontAwesome',\n          fill: new olStyleFill({\n            color: '#7a7a7a'\n          })\n        })\n      })\n    });\n    this.interactions_.push(this.translate_);\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    this.initializeInteractions_();\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.modifyToolActivate = new ngeoMiscToolActivate(\n      this.modify_,\n      'active'\n    );\n\n    /**\n     * @type {ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.rotateToolActivate = new ngeoMiscToolActivate(\n      this.rotate_,\n      'active'\n    );\n\n    /**\n     * @type {ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.translateToolActivate = new ngeoMiscToolActivate(\n      this.translate_,\n      'active'\n    );\n\n    /**\n     * The geometry type used by the clone feature.\n     * @type {?string}\n     * @export\n     */\n    this.geomType = null;\n  }\n\n  /**\n   * Called on initialization of the controller.\n   *\n   * Clone the rule to be able to work with the clone directly.\n   */\n  $onInit() {\n    this.clone = this.ngeoRuleHelper_.cloneRule(this.rule);\n\n    this.toolActivate_ = new ngeoMiscToolActivate(this.rule, 'active');\n\n    this.ngeoToolActivateMgr_.registerTool(\n      this.toolGroup, this.toolActivate_);\n\n    this.scope_.$watch(\n      () => this.rule.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    // If the rule is a DATE or DATETIME, then a datepicker directive is used.\n    // It is not possible to set the current values to the datepicker, but you\n    // can set the initial values. This is why it is created when the rule\n    // becomes active (see the partials/rule.html).\n    //\n    // This chunk of code ensures that the rule properties are synchronized\n    // with the TimeProperty objects required to build the datepickers.\n    if (this.clone.type === ngeoFormatAttributeType.DATE ||\n        this.clone.type === ngeoFormatAttributeType.DATETIME\n    ) {\n      // Watch 'expression'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.getExpression(),\n        (newVal) => {\n          this.timeValueMode.minValue = newVal;\n        }\n      ));\n      // Watch 'lowerBoundary'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.lowerBoundary,\n        (newVal) => {\n          this.timeRangeMode.minValue = newVal;\n        }\n      ));\n      // Watch 'upperBoundary'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.upperBoundary,\n        (newVal) => {\n          this.timeRangeMode.maxValue = newVal;\n        }\n      ));\n    } else if (this.clone.type === ngeoFormatAttributeType.GEOMETRY) {\n\n      // Watch 'operator' of clone. Make sure any existing geometry is\n      // supported by the newly selected operator. If it doesn't, reset\n      // the expression, i.e. geometry.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.operator,\n        (newVal) => {\n          if (newVal &&\n              newVal === ngeoRuleRule.SpatialOperatorType.CONTAINS\n          ) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            const geometry = clone.feature.getGeometry();\n            if (geometry) {\n              const geomType = this.ngeoFeatureHelper_.getType(clone.feature);\n              const supportedTypes = [\n                ngeoGeometryType.CIRCLE,\n                ngeoGeometryType.POLYGON,\n                ngeoGeometryType.RECTANGLE\n              ];\n              if (!olArray.includes(supportedTypes, geomType)) {\n                this.clone.setExpression(null);\n              }\n            }\n          }\n        }\n      ));\n\n      // Watch 'expression' of clone. Set 'geomType' property accordingly.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.expression,\n        (newVal) => {\n          if (newVal) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            this.geomType = this.ngeoFeatureHelper_.getType(clone.feature);\n          } else {\n            this.geomType = null;\n          }\n        }\n      ));\n\n      // Watch both 'expression', 'active' and the modify control to be all\n      // thruthy. When that's the case, the clone feature is added to the\n      // selection collection.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => {\n          const hasExpression = this.clone.getExpression() !== null;\n          const isActive = this.rule.active === true;\n          const editToolIsActive = this.modify_.getActive() ||\n                this.rotate_.getActive() ||\n                this.translate_.getActive();\n          return hasExpression && isActive && editToolIsActive;\n        },\n        (newVal) => {\n          if (newVal) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            this.selectedFeatures.push(clone.feature);\n          } else {\n            this.selectedFeatures.clear();\n          }\n        }\n      ));\n    }\n  }\n\n  /**\n   * Called on destruction of the controller.\n   */\n  $onDestroy() {\n    if (this.rule.active) {\n      this.rule.active = false;\n      // in $onDestroy, setting active to false will not call the handler. Call\n      // it manually to let it do its magic\n      this.handleActiveChange_(false, true);\n    }\n    this.ngeoToolActivateMgr_.unregisterTool(\n      this.toolGroup, this.toolActivate_);\n    for (let i = 0, ii = this.unlisteners_.length; i < ii; i++) {\n      this.unlisteners_[i]();\n    }\n    this.unlisteners_.length = 0;\n    this.clone.destroy();\n  }\n\n  /**\n   * @export\n   */\n  toggle() {\n    if (this.rule.active) {\n      this.cancel();\n    } else {\n      this.rule.active = true;\n    }\n  }\n\n  /**\n   * Apply the changes that were made in the original rule.\n   * @export\n   */\n  apply() {\n    this.ngeoRuleHelper_.extendRule(this.clone, this.rule);\n    this.rule.active = false;\n  }\n\n  /**\n   * Revert the changes that were made in the clone rule.\n   * @export\n   */\n  cancel() {\n    this.ngeoRuleHelper_.extendRule(this.rule, this.clone);\n    this.rule.active = false;\n  }\n\n  /**\n   * Reset both original and clone rules.\n   * @export\n   */\n  reset() {\n    this.clone.reset();\n    this.rule.reset();\n  }\n\n  /**\n   * Called when a choice is clicked, when using a `ngeo.rule.Select` rule type.\n   * Add/remove the choice to/from the `expression` of the rule.\n   * @param {string|number} choice Choice that has been clicked.\n   * @export\n   */\n  toggleChoiceSelection(choice) {\n    const rule = googAsserts.assertInstanceof(this.clone, ngeoRuleSelect);\n    const choices = rule.getExpression() ? rule.getExpression().split(',') : [];\n    const idx = choices.indexOf(choice);\n    if (idx > -1) {\n      choices.splice(idx, 1);\n    } else {\n      choices.push(choice);\n    }\n    rule.setExpression(choices.length ? choices.join(',') : null);\n  }\n\n\n  /**\n   * @param {Object} date Date\n   * @export\n   */\n  onDateSelected(date) {\n    this.clone.setExpression(date['start']);\n  }\n\n  /**\n   * @param {Object} date Date\n   * @export\n   */\n  onDateRangeSelected(date) {\n    this.clone.lowerBoundary = date['start'];\n    this.clone.upperBoundary = date['end'];\n  }\n\n  /**\n   * @param {number=} opt_timeDelta Time delta to go back in the past.\n   * @return {string} ISO string of the date\n   * @private\n   */\n  createDate_(opt_timeDelta) {\n\n    const date = new Date();\n\n    if (opt_timeDelta !== undefined) {\n      const time = date.getTime() - opt_timeDelta;\n      date.setTime(time);\n    }\n\n    return date.toISOString();\n  }\n\n  /**\n   * @return {string} ISO string of the date\n   * @private\n   */\n  createWeekAgoDate_() {\n    return this.createDate_(1000 * 60 * 60 * 24 * 7); // A week ago date\n  }\n\n  /**\n   * @param {number} time Time.\n   * @return {string} Date\n   * @export\n   */\n  timeToDate(time) {\n    const date = new Date(time);\n    return date.toLocaleDateString();\n  }\n\n\n  // === Methods used when bound to a `ngeo.rule.Geometry`\n\n\n  /**\n   * Called when the active property of a rule changes. Only used when this\n   * component is bound to a geometry rule.\n   *\n   * Manage the activation/deactivation of the interactions.\n   *\n   * @param {boolean} active Whether the rule is active or not.\n   * @param {boolean} oldActive Whether the rule was active or not.\n   * @private\n   */\n  handleActiveChange_(active, oldActive) {\n\n    if (!(this.rule instanceof ngeoRuleGeometry) ||\n        !(this.clone instanceof ngeoRuleGeometry) ||\n        active === oldActive\n    ) {\n      return;\n    }\n\n    const keys = this.listenerKeys_;\n    const uid = ['ngeo-rule-', olBase.getUid(this)].join('-');\n    const toolMgr = this.ngeoToolActivateMgr_;\n\n    const ruleFeature = this.rule.feature;\n    const cloneFeature = this.clone.feature;\n\n    const mapDiv = this.map.getViewport();\n    googAsserts.assertElement(mapDiv);\n\n    if (active) {\n      keys.push(\n        olEvents.listen(\n          this.drawnFeatures,\n          'add',\n          this.handleFeaturesAdd_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          mapDiv,\n          'contextmenu',\n          this.handleMapContextMenu_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          this.translate_,\n          'translateend',\n          this.handleTranslateEnd_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          this.rotate_,\n          'rotateend',\n          this.handleRotateEnd_,\n          this\n        )\n      );\n\n      this.featureOverlay.removeFeature(ruleFeature);\n      this.featureOverlay.addFeature(cloneFeature);\n\n      this.registerInteractions_();\n\n      toolMgr.registerTool(uid, this.drawToolActivate, false);\n      toolMgr.registerTool(uid, this.modifyToolActivate, true);\n      toolMgr.registerTool(uid, this.rotateToolActivate, false);\n      toolMgr.registerTool(uid, this.translateToolActivate, false);\n\n      this.modify_.setActive(true);\n\n      if (cloneFeature.getGeometry()) {\n        this.ngeoFeatureHelper_.setStyle(cloneFeature, true);\n      }\n\n    } else {\n      cloneFeature.setStyle(null);\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n\n      this.drawActive = false;\n\n      toolMgr.unregisterTool(uid, this.drawToolActivate);\n      toolMgr.unregisterTool(uid, this.modifyToolActivate);\n      toolMgr.unregisterTool(uid, this.rotateToolActivate);\n      toolMgr.unregisterTool(uid, this.translateToolActivate);\n\n      this.modify_.setActive(false);\n\n      this.unregisterInteractions_();\n\n      if (this.selectedFeatures.getLength()) {\n        this.featureOverlay.removeFeature(cloneFeature);\n      }\n      this.featureOverlay.addFeature(ruleFeature);\n\n      this.selectedFeatures.clear();\n    }\n  }\n\n  /**\n   * Initialize interactions by setting them inactive and decorating them\n   * @private\n   */\n  initializeInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      interaction.setActive(false);\n      ngeoMiscDecorate.interaction(interaction);\n    });\n  }\n\n  /**\n   * Register interactions by adding them to the map\n   * @private\n   */\n  registerInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      this.map.addInteraction(interaction);\n    });\n  }\n\n  /**\n   * Register interactions by removing them to the map\n   * @private\n   */\n  unregisterInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      this.map.removeInteraction(interaction);\n    });\n  }\n\n  /**\n   * @param {ol.Collection.Event} evt Event.\n   * @private\n   */\n  handleFeaturesAdd_(evt) {\n    // timeout to prevent double-click to zoom the map\n    this.timeout_(() => {\n\n      const clone = googAsserts.assertInstanceof(\n        this.clone, ngeoRuleGeometry);\n      const feature = clone.feature;\n\n      // (1) Apply geometry\n      const drawnFeature = googAsserts.assertInstanceof(\n        evt.element,\n        olFeature\n      );\n      const geometry = googAsserts.assertInstanceof(\n        drawnFeature.getGeometry(),\n        olGeomGeometry\n      );\n      clone.geometry = geometry;\n\n      // (2) Deactivate draw tools\n      this.drawActive = false;\n\n      // (3) Set properties, then style\n      const properties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        drawnFeature);\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(feature);\n      feature.setProperties(properties);\n      this.ngeoFeatureHelper_.setStyle(feature, true);\n\n      this.scope_.$apply();\n    });\n  }\n\n  /**\n   * Return the type of geometry used by the rule feature. Used in the template.\n   * @return {string} Geometry type.\n   * @export\n   */\n  getRuleGeometryType() {\n    const rule = googAsserts.assertInstanceof(this.rule, ngeoRuleGeometry);\n    return this.ngeoFeatureHelper_.getType(rule.feature);\n  }\n\n  /**\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleMapContextMenu_(evt) {\n\n    // (1) Remove previous menu, if any\n    this.removeMenu_();\n\n    // (2) Get feature at pixel\n    const pixel = this.map.getEventPixel(evt);\n    const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n    let feature = this.map.forEachFeatureAtPixel(\n      pixel,\n      (feature) => {\n        let ret = false;\n        if (olArray.includes(this.selectedFeatures.getArray(), feature)) {\n          ret = feature;\n        }\n        return ret;\n      }\n    );\n\n    feature = feature ? feature : null;\n\n    // (3) If the clicked feature is the selected one, plus if it has a certain\n    //     type of geometry, then show the menu\n    const actions = [];\n    if (feature) {\n\n      const type = this.ngeoFeatureHelper_.getType(feature);\n      const  gettextCatalog = this.gettextCatalog_;\n\n      if (type == ngeoGeometryType.CIRCLE ||\n          type == ngeoGeometryType.LINE_STRING ||\n          type == ngeoGeometryType.POLYGON ||\n          type == ngeoGeometryType.RECTANGLE) {\n        actions.push({\n          cls: 'fa fa-arrows',\n          label: gettextCatalog.getString('Move'),\n          name: 'move'\n        });\n      }\n      if (type == ngeoGeometryType.LINE_STRING ||\n          type == ngeoGeometryType.POLYGON ||\n          type == ngeoGeometryType.RECTANGLE) {\n        actions.push({\n          cls: 'fa fa-rotate-right',\n          label: gettextCatalog.getString('Rotate'),\n          name: 'rotate'\n        });\n      }\n    }\n\n    if (actions.length) {\n      // (4) Create and show menu\n      this.menu_ = new ngeoMenu({\n        actions\n      });\n\n      olEvents.listen(\n        this.menu_,\n        'actionclick',\n        this.handleMenuActionClick_,\n        this\n      );\n      this.map.addOverlay(this.menu_);\n\n      this.menu_.open(coordinate);\n\n      evt.preventDefault();\n      evt.stopPropagation();\n\n      this.scope_.$apply();\n    }\n  }\n\n  /**\n   * Remove contextual menu, if any.\n   * @private\n   */\n  removeMenu_() {\n    if (this.menu_) {\n      olEvents.unlisten(\n        this.menu_,\n        'actionclick',\n        this.handleMenuActionClick_,\n        this\n      );\n      this.map.removeOverlay(this.menu_);\n      this.menu_ = null;\n    }\n  }\n\n  /**\n   * @param {ngeox.MenuEvent} evt Event.\n   * @private\n   */\n  handleMenuActionClick_(evt) {\n    const action = evt.detail.action;\n\n    switch (action) {\n      case 'move':\n        this.translate_.setActive(true);\n        this.scope_.$apply();\n        break;\n      case 'rotate':\n        this.rotate_.setActive(true);\n        this.scope_.$apply();\n        break;\n      default:\n        console.log(`FIXME - support: ${action}`);\n        break;\n    }\n  }\n\n  /**\n   * @param {ngeox.RotateEvent} evt Event.\n   * @private\n   */\n  handleRotateEnd_(evt) {\n    this.rotate_.setActive(false);\n    this.scope_.$apply();\n  }\n\n  /**\n   * @param {ol.interaction.Translate.Event} evt Event.\n   * @private\n   */\n  handleTranslateEnd_(evt) {\n    this.translate_.setActive(false);\n    this.scope_.$apply();\n  }\n\n};\n\n\n/**\n * The rule component is bound to a `ngeo.rule.Rule` object and shows UI\n * components to be able to edit its properties, such as: operator, expression,\n * etc. The actual properties depend on the type of rule.\n *\n * Also, changes are not made on-the-fly. A button must be clicked for the\n * changes to be applied to the rule.\n */\nexports.component('ngeoRule', {\n  bindings: {\n    'featureOverlay': '<',\n    'map': '<',\n    'rule': '<',\n    'toolGroup': '<'\n  },\n  controller: exports.RuleController_,\n  templateUrl: ngeoRuleTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleComponent from 'ngeo/filter/ruleComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFilter', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoFilterRuleComponent.name,\n  ngeoMapFeatureOverlay.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/filter', require('./component.html'));\n});\n\n\nexports.value('ngeoFilterTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoFilterTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/filter';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoFilterTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoFilterTemplateUrl($attrs, ngeoFilterTemplateUrl) {\n  return ngeoFilterTemplateUrl($attrs);\n}\n\n\nexports.component('ngeoFilter', {\n  bindings: {\n    'aRuleIsActive': '=',\n    'customRules': '<',\n    // It's 'datasource' instead of 'dataSource', because that would require\n    // the attribute to be 'data-source', and Angular strips the 'data-'.\n    'datasource': '<',\n    'directedRules': '<',\n    'featureOverlay': '<',\n    'map': '<',\n    'toolGroup': '<'\n  },\n  controller: 'ngeoFilterController',\n  templateUrl: ngeoFilterTemplateUrl\n});\n\n/**\n * @private\n */\nexports.FilterController_ = class {\n\n  /**\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoFilterController\n   */\n  constructor(gettextCatalog, $scope, $timeout, ngeoMapQuerent,\n    ngeoRuleHelper) {\n\n    // === Binding properties ===\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.aRuleIsActive;\n\n    /**\n     * @type {Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.customRules;\n\n    /**\n     * @type {!ngeo.datasource.OGC}\n     * @export\n     */\n    this.datasource;\n\n    /**\n     * @type {Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.directedRules;\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!ngeo.query.MapQuerent}\n     * @private\n     */\n    this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * @type {Array.<!ngeox.FilterCondition>}\n     * @export\n     */\n    this.conditions = [\n      {\n        text: gettextCatalog.getString('All'),\n        value: ngeoFilterCondition.AND\n      },\n      {\n        text: gettextCatalog.getString('At least one'),\n        value: ngeoFilterCondition.OR\n      },\n      {\n        text: gettextCatalog.getString('None'),\n        value: ngeoFilterCondition.NOT\n      }\n    ];\n\n    /**\n     * List of geometry attributes.\n     * @type {Array.<!ngeox.Attribute>}\n     * @export\n     */\n    this.geometryAttributes = [];\n\n    /**\n     * List of other attribute names.\n     * @type {Array.<!ngeox.Attribute>}\n     * @export\n     */\n    this.otherAttributes = [];\n\n    /**\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.ruleUnlisteners_ = {};\n  }\n\n\n  /**\n   * Called on initialization of the controller.\n   *\n   * Loop through the attributes of the data source and separated them in 2\n   * lists: geometry and the others. Then, apply the filters to the data source.\n   */\n  $onInit() {\n\n    this.scope_.$watch(\n      () => this.aRuleIsActive,\n      this.handleARuleIsActiveChange_.bind(this)\n    );\n\n    // (1) Separate the attributes in 2: geometry and the others.\n    const attributes = googAsserts.assert(this.datasource.attributes);\n    for (const attribute of attributes) {\n      if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n        this.geometryAttributes.push(attribute);\n      } else {\n        this.otherAttributes.push(attribute);\n      }\n    }\n\n    // (2) All rules that have geometry are added in the featureOverlay\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      this.registerRule_(rule);\n    }\n\n    // (3) Apply the filters\n    this.apply();\n  }\n\n\n  /**\n   * Called on destruction of the controller.\n   *\n   * Reset the `filterRules` of the data source back to `null`.\n   * Clear the feature overlay.\n   */\n  $onDestroy() {\n    if (this.datasource.filterRules !== null) {\n      this.datasource.filterRules = null;\n    }\n    this.featureOverlay.clear();\n  }\n\n\n  /**\n   * @return {boolean} True if at least one rule is currently defined.\n   * @export\n   */\n  hasARule() {\n    return [].concat(this.customRules, this.directedRules).length > 0;\n  }\n\n\n  /**\n   * Loop in all directed and custom rules. Apply the rules that have a proper\n   * value inside the data source, in the `filterRules` property.\n   * @export\n   */\n  apply() {\n    // (1) Reset\n    this.datasource.filterRules = null;\n\n    // (2) Then set if there are filter rules with value.\n    this.timeout_(() => {\n      const filterRules = this.getRulesWithValue_();\n      if (filterRules.length) {\n        this.datasource.filterRules = filterRules;\n        // The current query results are cleared when we apply a filter.\n        this.ngeoMapQuerent_.clear();\n      }\n    });\n  }\n\n\n  /**\n   * Loop in all directed and custom rules. Issue a request to obtain the data\n   * and show the result.\n   * @export\n   */\n  getData() {\n    const filterRules = this.getRulesWithValue_();\n\n    // No need to do anything if there's no rules.\n    if (!filterRules.length) {\n      return;\n    }\n\n    const dataSource = this.datasource;\n    const limit = 1000;\n    const map = this.map;\n    const projCode = map.getView().getProjection().getCode();\n    const filter = this.ngeoRuleHelper_.createFilter({\n      dataSource: dataSource,\n      filterRules: filterRules,\n      srsName: projCode\n    });\n    googAsserts.assert(filter);\n\n    this.ngeoMapQuerent_.issue({\n      dataSources: [dataSource],\n      filter: filter,\n      limit: limit,\n      map: map\n    });\n  }\n\n\n  /**\n   * Loop in all directed and custom rules and collect those with a value.\n   * @return {Array.<!ngeo.rule.Rule>} Rules with value.\n   * @private\n   */\n  getRulesWithValue_() {\n    const filterRules = [];\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.value) {\n        filterRules.push(rule);\n      }\n    }\n    return filterRules;\n  }\n\n\n  /**\n   * Create and add a new custom rule using an attribute. The rule is activated\n   * after being created.\n   * @param {!ngeox.Attribute} attribute Attribute to use to create the custom\n   * rule.\n   * @export\n   */\n  createAndAddCustomRule(attribute) {\n    const rule = this.ngeoRuleHelper_.createRuleFromAttribute(attribute, true);\n    this.registerRule_(rule);\n    this.customRules.push(rule);\n\n    // Activate asynchronously allows the toolActivate manager to do its magic,\n    this.timeout_(() => {\n      rule.active = true;\n    }, 1);\n  }\n\n\n  /**\n   * @param {!ngeox.FilterCondition} condition Condition to set.\n   * @export\n   */\n  setCondition(condition) {\n    if (this.datasource.filterCondition !== condition.value) {\n      this.datasource.filterCondition = condition.value;\n    }\n  }\n\n  /**\n   * Remove a custom rule. Deactivate it first, then give time to the\n   * `ngeo-rule` directive to manage the deactivation of the rule.\n   * @param {!ngeo.rule.Rule} rule Custom rule to remove.\n   * @export\n   */\n  removeCustomRule(rule) {\n    rule.active = false;\n    this.timeout_(() => {\n      olArray.remove(this.customRules, rule);\n      this.unregisterRule_(rule);\n      rule.destroy();\n    });\n  }\n\n  /**\n   * @param {!ngeo.rule.Rule} rule Rule.\n   * @export\n   */\n  registerRule_(rule) {\n    const uid = olBase.getUid(rule);\n    this.ruleUnlisteners_[uid] = this.scope_.$watch(\n      () => rule.active,\n      this.handleRuleActiveChange_.bind(this)\n    );\n\n    if (rule instanceof ngeoRuleGeometry) {\n      this.featureOverlay.addFeature(rule.feature);\n    }\n  }\n\n  /**\n   * @param {!ngeo.rule.Rule} rule Rule.\n   * @export\n   */\n  unregisterRule_(rule) {\n    const uid = olBase.getUid(rule);\n    const unlistener = this.ruleUnlisteners_[uid];\n    googAsserts.assert(unlistener);\n    unlistener();\n    delete this.ruleUnlisteners_[uid];\n\n    if (rule instanceof ngeoRuleGeometry) {\n      this.featureOverlay.removeFeature(rule.feature);\n    }\n  }\n\n  /**\n   * Called when the active property of a rule changes. Set the `aRuleIsActive`\n   * property accordingly.\n   * @private\n   */\n  handleRuleActiveChange_() {\n    let aRuleIsActive = false;\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.active) {\n        aRuleIsActive = true;\n        break;\n      }\n    }\n    this.aRuleIsActive = aRuleIsActive;\n  }\n\n  /**\n   * Called when the `aRuleIsActive` property changes. Make sure that\n   * no rule is still active if the property is `false`.\n   * @private\n   */\n  handleARuleIsActiveChange_() {\n    if (this.aRuleIsActive) {\n      return;\n    }\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.active) {\n        rule.active = false;\n        break;\n      }\n    }\n  }\n\n};\n\nexports.controller('ngeoFilterController', exports.FilterController_);\n\n\nexport default exports;\n","/**\n * @module gmf.filters.filterselectorComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceHelper from 'gmf/datasource/Helper.js';\n\nimport gmfDatasourceOGC from 'gmf/datasource/OGC.js';\nimport gmfFiltersSavedFilters from 'gmf/filters/SavedFilters.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFilterComponent from 'ngeo/filter/component.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olArray from 'ol/array.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\nconst exports = angular.module('gmfFilterselector', [\n  gmfAuthenticationService.module.name,\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceHelper.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoMessageModalComponent.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoFilterComponent.name,\n  gmfFiltersSavedFilters.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/filters/filterselectorcomponent', require('./filterselectorcomponent.html'));\n});\n\nexports.value('gmfFilterselectorTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfFilterselectorTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/filters/filterselectorcomponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfFilterselectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfFilterselectorTemplateUrl($attrs, gmfFilterselectorTemplateUrl) {\n  return gmfFilterselectorTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n   *     The Gmf value service that determines the data source currently being\n   *     filtered.\n   * @param {gmf.datasource.Helper} gmfDataSourcesHelper Gmf data\n   *     sources helper service.\n   * @param {gmf.filters.SavedFilters} gmfSavedFilters Gmf saved filters service.\n   * @param {gmfx.User} gmfUser User.\n   * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n   * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo FeatureOverlay\n   *     manager\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfFilterselectorController\n   */\n  constructor($scope, $timeout, gettextCatalog, gmfDataSourceBeingFiltered,\n    gmfDataSourcesHelper, gmfSavedFilters, gmfUser, ngeoNotification,\n    ngeoFeatureOverlayMgr, ngeoRuleHelper\n  ) {\n\n    // Binding properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.active;\n\n    $scope.$watch(\n      () => this.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * The data source that can either be selected from the list or have\n     * its value set from an external source (for example: the layertree)\n     * and that requires to be ready before it can be filtered.\n     * @type {gmfx.datasource.DataSourceBeingFiltered}\n     * @export\n     */\n    this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n    $scope.$watch(\n      () => this.gmfDataSourceBeingFiltered.dataSource,\n      this.handleSelectedDataSourceChange_.bind(this)\n    );\n\n    /**\n     * @type {gmf.datasource.Helper}\n     * @private\n     */\n    this.gmfDataSourcesHelper_ = gmfDataSourcesHelper;\n\n    /**\n     * @type {gmf.filters.SavedFilters}\n     * @export\n     */\n    this.gmfSavedFilters = gmfSavedFilters;\n\n    // Close manage modal if the last item is removed.\n    $scope.$watchCollection(\n      () => this.gmfSavedFilters.currentDataSourceItems,\n      () => {\n        if (this.gmfSavedFilters.currentDataSourceItems.length === 0 &&\n           this.saveFilterManageModalShown) {\n          this.saveFilterManageModalShown = false;\n        }\n      }\n    );\n\n    /**\n     * @type {gmfx.User}\n     * @private\n     */\n    this.gmfUser_ = gmfUser;\n\n    $scope.$watch(\n      () => this.gmfUser_.functionalities,\n      this.handleGmfUserFunctionalitiesChange_.bind(this)\n    );\n\n    /**\n     * @type {ngeo.message.Notification}\n     * @private\n     */\n    this.ngeoNotification_ = ngeoNotification;\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay = googAsserts.assert(\n      ngeoFeatureOverlayMgr.getFeatureOverlay()\n    );\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n\n    // Inner properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.aRuleIsActive = false;\n\n    /**\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.customRules = null;\n\n    /**\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.directedRules = null;\n\n    /**\n     * @type {Array.<gmf.datasource.OGC>}\n     * @export\n     */\n    this.filtrableDataSources = [];\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.filtrableLayerNodeNames_ = null;\n\n    /**\n     * @type {gmfx.datasource.DataSources}\n     * @private\n     */\n    this.gmfDataSources_ = gmfDataSourcesHelper.collection;\n\n    /**\n     * @type {Array.<ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * The data source ready to be filtered, after it has been selected and\n     * prepared.\n     * @type {?gmf.datasource.OGC}\n     * @export\n     */\n    this.readyDataSource = null;\n\n    /**\n     * @type {!gmf.filters.filterselectorComponent.Controller_.RuleCache}\n     * @private\n     */\n    this.ruleCache_ = {};\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.saveFilterSaveModalShown = false;\n\n    // When the modal closes, reset name\n    $scope.$watch(\n      () => this.saveFilterSaveModalShown,\n      () => {\n        this.saveFilterName = '';\n      }\n    );\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.saveFilterName = '';\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.saveFilterManageModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.enableDataSourceRegistration_ = false;\n\n    $scope.$watch(\n      () => this.enableDataSourceRegistration_,\n      this.handleEnableDataSourceRegistrationChange_.bind(this)\n    );\n\n    /**\n     * The name of the data source that should be automatically selected\n     * by this component.\n     * @type {string|undefined}\n     * @private\n     */\n    this.defaultFiltrableDataSourceName_;\n\n    // Initialize the data sources registration\n    this.toggleDataSourceRegistration_();\n  }\n\n\n  /**\n   * @private\n   */\n  handleGmfUserFunctionalitiesChange_() {\n    const usrFunc = this.gmfUser_.functionalities;\n    if (usrFunc && usrFunc['filterable_layers']) {\n      this.filtrableLayerNodeNames_ = usrFunc['filterable_layers'];\n    } else {\n      this.filtrableLayerNodeNames_ = null;\n    }\n    if (usrFunc &&\n        usrFunc['preset_layer_filter'] &&\n        usrFunc['preset_layer_filter'][0]\n    ) {\n      this.defaultFiltrableDataSourceName_ = usrFunc['preset_layer_filter'][0];\n    } else {\n      this.defaultFiltrableDataSourceName_ = undefined;\n    }\n    this.toggleDataSourceRegistration_();\n  }\n\n\n  /**\n   * @private\n   */\n  toggleDataSourceRegistration_() {\n    const newDataSourceRegistration = !!this.filtrableLayerNodeNames_;\n    if (this.enableDataSourceRegistration_ !== newDataSourceRegistration) {\n      this.enableDataSourceRegistration_ = newDataSourceRegistration;\n    }\n  }\n\n\n  /**\n   * Called when the active property changes. Toggle data source registration.\n   * Also, when deactivated, deselect data source.\n   * @param {boolean} active Active.\n   * @private\n   */\n  handleActiveChange_(active) {\n    if (!active) {\n      this.aRuleIsActive = false;\n      this.timeout_(() => {\n        this.gmfDataSourceBeingFiltered.dataSource = null;\n      });\n    }\n  }\n\n\n  /**\n   * @param {boolean} register Whether register the data sources or not.\n   * @private\n   */\n  handleEnableDataSourceRegistrationChange_(register) {\n    const keys = this.listenerKeys_;\n\n    if (register) {\n      // Listen to data sources being added/removed\n      keys.push(\n        olEvents.listen(this.gmfDataSources_, 'add', this.handleDataSourcesAdd_, this),\n        olEvents.listen(this.gmfDataSources_, 'remove', this.handleDataSourcesRemove_, this)\n      );\n\n      // Manage the data sources that are already in the collection\n      this.gmfDataSources_.forEach(this.registerDataSource_, this);\n\n    } else {\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n\n      // Remove data sources that are in the collection\n      this.filtrableDataSources.length = 0;\n    }\n  }\n\n\n  /**\n   * Called when a data source is added to the collection of ngeo data sources.\n   * If the data source is 'valid', add it to the list of filtrable data\n   * sources.\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = evt.element;\n    if (dataSource instanceof gmfDatasourceOGC) {\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If the data source is 'valid', remove it from the list of\n   * filtrable data sources.\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (dataSource instanceof gmfDatasourceOGC) {\n      this.unregisterDataSource_(dataSource);\n    }\n  }\n\n\n  /**\n   * Register a data source if filtrable.  If it's the first time that the\n   * data source is about to be registered, then the `filtrable` property\n   * is set. Otherwise, it's used.\n   *\n   * @param {gmf.datasource.OGC} dataSource Data source\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    if (dataSource.filtrable === null) {\n      dataSource.filtrable = this.isDataSourceFiltrable_(dataSource);\n    }\n\n    if (dataSource.filtrable) {\n      this.filtrableDataSources.push(dataSource);\n\n      if (this.defaultFiltrableDataSourceName_ !== undefined &&\n          dataSource.name === this.defaultFiltrableDataSourceName_\n      ) {\n        this.gmfDataSourceBeingFiltered.dataSource = dataSource;\n      }\n    }\n  }\n\n\n  /**\n   * Unregister a data source if it's filtrable. Also, if it's the one\n   * that was currently selected, deselect it.\n   * @param {gmf.datasource.OGC} dataSource Data source\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    if (dataSource.filtrable) {\n      olArray.remove(this.filtrableDataSources, dataSource);\n\n      if (this.gmfDataSourceBeingFiltered.dataSource === dataSource) {\n        this.gmfDataSourceBeingFiltered.dataSource = null;\n      }\n    }\n  }\n\n\n  /**\n   * Determines whether the data source is valid for addition (or removal) to\n   * the list of filtrable data sources or not.\n   *\n   * To be filtrable, the data source must:\n   *\n   *  1) have its name in the list of filtrable layer node names\n   *  2) support WFS\n   *  3) have only one ogcLayers defined\n   *  4) the ogcLayer must be queryable\n   *\n   * If 1) is true but not any of the others, then the server has not been\n   * configured properly. In this case, a warning notification can be shown.\n   *\n   * @param {gmf.datasource.OGC} dataSource GMF data source object\n   * @param {boolean=} opt_notify Whether to show a warning notification or not\n   *     in case of a data source that has its name is in the list of\n   *     filtrable layer node names but it doesn't match the other requirements.\n   *     Defaults to `true.`\n   * @return {boolean} Whether the data source is valid to add to the list or\n   *     not.\n   * @private\n   */\n  isDataSourceFiltrable_(dataSource, opt_notify) {\n    let filtrable = true;\n    const gettext = this.gettextCatalog_;\n    const notify = opt_notify !== false;\n    const names = googAsserts.assert(this.filtrableLayerNodeNames_);\n    const msgs = [];\n\n    // (1) The name of the DS must be in list of filtrable layer node names\n    if (olArray.includes(names, dataSource.name)) {\n\n      // (2) The DS must support WFS\n      if (!dataSource.supportsWFS) {\n        msgs.push(gettext.getString(\n          'The data source doesn\\'t support WFS, which is required ' +\n          'to fetch the attributes to build the filter rules.'\n        ));\n      }\n\n      // (3) The DS must have only one ogcLayer\n      if (!dataSource.ogcLayers || !dataSource.ogcLayers.length) {\n        msgs.push(gettext.getString(\n          'The data source must have only 1 ogcLayer defined.'\n        ));\n      } else if (!dataSource.ogcLayers[0].queryable) {\n        // (4) The ogcLayer must be queryable\n        msgs.push(gettext.getString(\n          'The ogcLayer within the data source must be queryable.'\n        ));\n      }\n\n      filtrable = !msgs.length;\n\n      // Notify if the name is in list of filtrable layer node names but\n      // there are missing requirements.\n      if (notify && !filtrable) {\n        const p1 = gettext.getString(\n          `The following data source is marked as being filtrable,\n          but is missing some requirements: `\n        );\n        const p2 = `${dataSource.name} (${dataSource.id}).`;\n        const p3 = gettext.getString(\n          `Please, contact your administrator about this.\n          Here are the reasons: `\n        );\n        msgs.unshift(`${p1} ${p2} ${p3}`);\n        console.warn(msgs.join(' '));\n        this.ngeoNotification_.notify({\n          msg: msgs.join(' '),\n          type: ngeoMessageMessage.Type.WARNING\n        });\n      }\n    } else {\n      filtrable = false;\n    }\n\n    return filtrable;\n  }\n\n  /**\n   * @param {?gmf.datasource.OGC} dataSource Newly selected data source\n   *     object.\n   * @private\n   */\n  handleSelectedDataSourceChange_(dataSource) {\n\n    this.aRuleIsActive = false;\n    this.customRules = null;\n    this.directedRules = null;\n    this.readyDataSource = null;\n    this.gmfSavedFilters.currentDataSourceId = null;\n\n    // No need to do anything if no data source is selected\n    if (!dataSource) {\n      return;\n    }\n\n    // A data source has been selected. Make sure the component is active.\n    if (!this.active) {\n      this.active = true;\n    }\n\n    this.gmfDataSourcesHelper_.prepareFiltrableDataSource(\n      dataSource\n    ).then((dataSource) => {\n\n      // Data source is ready. Get any existing rules or create new ones from\n      // the attributes\n      let item = this.getRuleCacheItem_(dataSource);\n      if (!item) {\n        item = {\n          customRules: [],\n          directedRules: []\n        };\n        this.setRuleCacheItem_(dataSource, item);\n        if (dataSource.gmfLayer.metadata &&\n            dataSource.gmfLayer.metadata.directedFilterAttributes &&\n            dataSource.gmfLayer.metadata.directedFilterAttributes.length\n        ) {\n          const directedAttributes =\n              dataSource.gmfLayer.metadata.directedFilterAttributes;\n          const attributes = googAsserts.assert(dataSource.attributes);\n          for (const attribute of attributes) {\n            if (olArray.includes(directedAttributes, attribute.name)) {\n              item.directedRules.push(\n                this.ngeoRuleHelper_.createRuleFromAttribute(attribute)\n              );\n            }\n          }\n        }\n      }\n\n      this.customRules = item.customRules;\n      this.directedRules = item.directedRules;\n      this.readyDataSource = dataSource;\n      this.gmfSavedFilters.currentDataSourceId = dataSource.id;\n\n    });\n  }\n\n  /**\n   * @param {ngeo.datasource.DataSource} dataSource Data source.\n   * @return {?gmf.filters.filterselectorComponent.Controller_.RuleCacheItem} Rule cache item.\n   * @private\n   */\n  getRuleCacheItem_(dataSource) {\n    return this.ruleCache_[dataSource.id] || null;\n  }\n\n  /**\n   * @param {ngeo.datasource.DataSource} dataSource Data source.\n   * @param {gmf.filters.filterselectorComponent.Controller_.RuleCacheItem} item Rule cache item.\n   * @private\n   */\n  setRuleCacheItem_(dataSource, item) {\n    this.ruleCache_[dataSource.id] = item;\n  }\n\n  /**\n   * @export\n   */\n  saveFilterShowModal() {\n    this.saveFilterSaveModalShown = true;\n  }\n\n  /**\n   * @export\n   */\n  saveFilterSave() {\n\n    const name = this.saveFilterName;\n    const dataSource = googAsserts.assert(this.readyDataSource);\n    const dataSourceId = dataSource.id;\n    const alreadyExist = (this.gmfSavedFilters.indexOfItem(\n      name, dataSourceId) !== -1);\n    const condition = dataSource.filterCondition;\n\n    const msg = this.gettextCatalog_.getString(\n      `A filter with the same name already exists.\n      Do you want to overwrite it?`\n    );\n    if (!alreadyExist || confirm(msg)) {\n      // (1) Serialize the existing custom and directed rules\n      const customRules = this.customRules ?\n        this.ngeoRuleHelper_.serializeRules(this.customRules) : [];\n      const directedRules = this.directedRules ?\n        this.ngeoRuleHelper_.serializeRules(this.directedRules) : [];\n\n      // (2) Ask the service to save it\n      const item = /** @type {!gmf.filters.SavedFilters.Item} */ ({\n        condition,\n        customRules,\n        dataSourceId,\n        directedRules,\n        name\n      });\n      this.gmfSavedFilters.save(item);\n\n      // (3) Close popup, which resets the name\n      this.saveFilterSaveModalShown = false;\n    }\n  }\n\n  /**\n   * Load a saved filter item, replacing the current rules.\n   * @param {!gmf.filters.SavedFilters.Item} filterItem Filter item.\n   * @export\n   */\n  saveFilterLoadItem(filterItem) {\n\n    const dataSource = googAsserts.assert(this.readyDataSource);\n\n    // (1) Reset current rules\n    this.customRules = null;\n    this.directedRules = null;\n\n    const customRules = this.ngeoRuleHelper_.createRules(\n      filterItem.customRules);\n    const directedRules = this.ngeoRuleHelper_.createRules(\n      filterItem.directedRules);\n\n    // Timeout, which ensures the destruction of the previous filter component\n    // and the creation of a new one\n    this.timeout_(() => {\n      // (2) Set rules\n      this.customRules = customRules;\n      this.directedRules = directedRules;\n\n      // (3) Set condition\n      dataSource.filterCondition = filterItem.condition;\n\n      // (4) Update cache item\n      const cacheItem = googAsserts.assert(this.getRuleCacheItem_(dataSource));\n      cacheItem.customRules = customRules;\n      cacheItem.directedRules = directedRules;\n    });\n  }\n\n  /**\n   * @export\n   */\n  saveFilterManage() {\n    this.saveFilterManageModalShown = true;\n  }\n\n  /**\n   * Remove a saved filter item.\n   * @param {!gmf.filters.SavedFilters.Item} item Filter item.\n   * @export\n   */\n  saveFilterRemoveItem(item) {\n    this.gmfSavedFilters.remove(item);\n  }\n\n};\n\n\n/**\n * @typedef {Object.<number, !gmf.filters.filterselectorComponent.Controller_.RuleCacheItem>}\n */\nexports.Controller_.RuleCache;\n\n\n/**\n * @typedef {{\n *     customRules: (Array.<ngeo.rule.Rule>),\n *     directedRules: (Array.<ngeo.rule.Rule>)\n * }}\n */\nexports.Controller_.RuleCacheItem;\n\n\nexports.component('gmfFilterselector', {\n  bindings: {\n    active: '=',\n    map: '<',\n    toolGroup: '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfFilterselectorTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.filters.module\n */\nimport gmfFiltersFilterselectorComponent from 'gmf/filters/filterselectorComponent.js';\nimport gmfFiltersSavedFilters from 'gmf/filters/SavedFilters.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfFiltersModule', [\n  gmfFiltersFilterselectorComponent.name,\n  gmfFiltersSavedFilters.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.timeSliderComponent\n */\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\n\nimport 'jquery-ui/ui/widgets/slider.js';\nimport 'angular-ui-slider';\nimport './timeslider.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeTimeSliderComponent', [\n  ngeoMiscWMSTime.module.name,\n  'ui.slider',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree/timesliderComponent', require('./timesliderComponent.html'));\n});\n\n\n/**\n * Provide a directive to select a single date or a range of dates with a slider\n * Example:\n *\n *      <gmf-time-slider\n *          gmf-time-slider-time=\"{\n *            maxValue: '2013-12-31T00:00:00Z',\n *            minValue: '2006-01-01T00:00:00Z',\n *            mode: 'range'}\"\n *          gmf-time-slider-on-date-selected=\"ctrl.onDateSelected(time)\">\n *      </gmf-time-slider>\n *\n * @htmlAttribute {ngeox.TimeProperty} gmf-time-slider-time parameter for initialization.\n * @htmlAttribute {function()} gmf-time-slider-on-date-selected Expression evaluated after\n * date(s) changed\n * @param {angular.$timeout} $timeout angular timeout service\n * @param {angular.$filter} $filter angular filter service\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfTimeSlider\n */\nexports.directive_ = function($timeout, $filter) {\n  return {\n    scope: {\n      onDateSelected: '&gmfTimeSliderOnDateSelected',\n      time: '=gmfTimeSliderTime'\n    },\n    bindToController: true,\n    controller: 'gmfTimeSliderController as sliderCtrl',\n    restrict: 'AE',\n    templateUrl: 'gmf/layertree/timesliderComponent',\n    link: /** @type {!angular.LinkingFunctions} */ ({\n      pre: function preLink(scope, element, attrs, ctrl) {\n        ctrl.init();\n\n        ctrl.sliderOptions['stop'] = onSliderReleased_;\n        ctrl.sliderOptions['slide'] = computeDates_;\n\n        function onSliderReleased_(e, sliderUi) {\n          ctrl.onDateSelected({\n            time: computeDates_(e, sliderUi)\n          });\n          scope.$apply();\n        }\n\n        function computeDates_(e, sliderUi) {\n          let sDate, eDate, wmstime;\n          if (sliderUi.values) {\n            sDate = new Date(ctrl.getClosestValue_(sliderUi.values[0]));\n            eDate = new Date(ctrl.getClosestValue_(sliderUi.values[1]));\n            ctrl.dates = [sDate, eDate];\n            wmstime = {\n              start: sDate.getTime(),\n              end: eDate.getTime()\n            };\n          } else {\n            sDate = new Date(ctrl.getClosestValue_(sliderUi.value));\n            ctrl.dates = sDate;\n            wmstime = {\n              start: sDate.getTime()\n            };\n          }\n          scope.$apply();\n          return wmstime;\n        }\n      }\n    })\n  };\n};\n\n\nexports.directive('gmfTimeSlider', exports.directive_);\n\n\n/**\n * TimeSliderController - directive controller\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime WMSTime service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfTimeSliderController\n */\nexports.Controller_ = function($scope, ngeoWMSTime) {\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * Function called after date(s) changed/selected\n   * @function\n   * @export\n   */\n  this.onDateSelected;\n\n\n  /**\n   * A time object for directive initialization\n   * @type {ngeox.TimeProperty}\n   * @export\n   */\n  this.time;\n\n  /**\n   * If the component is used to select a date range\n   * @type {boolean}\n   * @export\n   */\n  this.isModeRange;\n\n  /**\n   * Minimal value of the slider (time in ms)\n   * @type {number}\n   * @export\n   */\n  this.minValue;\n\n  /**\n   * Maximal value of the slider (time in ms)\n   * @type {number}\n   * @export\n   */\n  this.maxValue;\n\n  /**\n   * Used when WMS time object has a property 'values' instead of an interval\n   * @type (?Array<number>)\n   */\n  this.timeValueList;\n\n  /**\n   * Default Slider options (used by ui-slider directive)\n   * @type {{\n   *  range : boolean,\n   *  min : number,\n   *  max : number\n   * }}\n   * @export\n   */\n  this.sliderOptions;\n\n  /**\n   * Model for the ui-slider directive (date in ms format)\n   * @type {Array.<number>|number}\n   * @export\n   */\n  this.dates;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  this.timeValueList = this.getTimeValueList_();\n\n  // Fetch the initial options for the component\n  const initialOptions_ = this.ngeoWMSTime_.getOptions(this.time);\n  this.isModeRange = this.time.mode === 'range';\n  this.minValue = initialOptions_.minDate;\n  this.maxValue = initialOptions_.maxDate;\n  this.dates = this.isModeRange ? [initialOptions_.values[0], initialOptions_.values[1]] :\n    initialOptions_.values;\n  this.sliderOptions = {\n    range: this.isModeRange,\n    min: this.minValue,\n    max: this.maxValue\n  };\n};\n\n/**\n * TimeSliderController.prototype.getTimeValueList_ - Get a list of time value instead\n * of using the wmstime interval as a list of possibles values\n * @private\n * @return {Array<number>}  - List of timestamp representing possible values\n */\nexports.Controller_.prototype.getTimeValueList_ = function() {\n  const wmsTime = this.time;\n  let timeValueList = null;\n  const minDate = new Date(this.minValue);\n  const maxDate = new Date(this.maxValue);\n\n  if (wmsTime.values) {\n    timeValueList = [];\n    wmsTime.values.forEach((date) => {\n      timeValueList.push(new Date(date).getTime());\n    });\n  } else {\n    const maxNbValues = 1024;\n    const endDate = new Date(minDate.getTime());\n    endDate.setFullYear(minDate.getFullYear() + maxNbValues * wmsTime.interval[0]);\n    endDate.setMonth(minDate.getMonth() + maxNbValues * wmsTime.interval[1],\n      minDate.getDate() + maxNbValues * wmsTime.interval[2]);\n    endDate.setSeconds(minDate.getSeconds() + maxNbValues * wmsTime.interval[3]);\n\n    if (endDate > maxDate) {\n      // Transform interval to a list of values when the number\n      // of values is below a threshold (maxNbValues)\n      timeValueList = [];\n      for (let i = 0; ; i++) {\n        const nextDate = new Date(minDate.getTime());\n        nextDate.setFullYear(minDate.getFullYear() + i * wmsTime.interval[0]);\n        nextDate.setMonth(minDate.getMonth() + i * wmsTime.interval[1],\n          minDate.getDate() + i * wmsTime.interval[2]);\n        nextDate.setSeconds(minDate.getSeconds() + i * wmsTime.interval[3]);\n        if (nextDate <= maxDate) {\n          timeValueList.push(nextDate.getTime());\n        } else {\n          break;\n        }\n      }\n    }\n  }\n  return timeValueList;\n};\n\n\n/**\n * Compute the closest available date from the given timestamp\n * @param  {number} timestamp selected datetime (in ms format)\n * @return {number} the closest available datetime (in ms format) from the timestamp\n * @private\n */\nexports.Controller_.prototype.getClosestValue_ = function(timestamp) {\n  if (timestamp <= this.minValue) {\n    return this.minValue;\n  }\n\n  if (timestamp >= this.maxValue) {\n    return this.maxValue;\n  }\n\n  if (this.timeValueList) {\n    // Time stops are defined as a list of values\n    let index;\n    let leftIndex = 0;\n    let rightIndex = this.timeValueList.length - 1;\n\n    while ((rightIndex - leftIndex) > 1) {\n      index = Math.floor((leftIndex + rightIndex) / 2);\n      if (this.timeValueList[index] >= timestamp) {\n        rightIndex = index;\n      } else {\n        leftIndex = index;\n      }\n    }\n\n    const leftDistance = Math.abs(this.timeValueList[leftIndex] - timestamp);\n    const rightDistance = Math.abs(this.timeValueList[rightIndex] - timestamp);\n\n    return this.timeValueList[leftDistance < rightDistance ? leftIndex : rightIndex];\n  } else {\n    // Time stops are defined by a start date plus an interval\n    const targetDate = new Date(timestamp);\n    const startDate = new Date(this.minValue);\n    let bestDate = new Date(this.minValue);\n    const maxDate = new Date(this.maxValue);\n    let bestDistance = Math.abs(targetDate - bestDate);\n\n    for (let i = 1; ; i++) {\n      // The start date should always be used as a reference\n      // because adding a month twice could differ from adding\n      // two months at once\n      const next = new Date(startDate.getTime());\n      next.setFullYear(startDate.getFullYear() + i * this.time.interval[0]);\n      next.setMonth(startDate.getMonth() + i *  this.time.interval[1],\n        startDate.getDate() + i * this.time.interval[2]);\n      next.setSeconds(startDate.getSeconds() + i * this.time.interval[3]);\n\n      if (next > maxDate) {\n        break;\n      }\n\n      const distance = Math.abs(targetDate - next);\n      if (distance <= bestDistance) {\n        bestDate = next;\n        bestDistance = distance;\n      } else {\n        break;\n      }\n    }\n\n    return bestDate.getTime();\n  }\n};\n\n\n/**\n * Format and localize time regarding a resolution.\n * @param {number} time (in ms format) timestamp to format and localize.\n * @return {string} Localized date string regarding the resolution.\n * @export\n */\nexports.Controller_.prototype.getLocalizedDate = function(time) {\n  return this.ngeoWMSTime_.formatTimeValue(time, this.time.resolution);\n};\n\n\nexports.controller('gmfTimeSliderController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.module\n */\nimport gmfLayertreeComponent from 'gmf/layertree/component.js';\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTimeSliderComponent from 'gmf/layertree/timeSliderComponent.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\n\nimport './common.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeModule', [\n  gmfLayertreeComponent.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTimeSliderComponent.name,\n  gmfLayertreeTreeManager.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.module\n */\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfPermalinkShareService from 'gmf/permalink/ShareService.js';\nimport gmfPermalinkShareComponent from 'gmf/permalink/shareComponent.js';\n\nimport './share.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfPermalinkModule', [\n  gmfPermalinkPermalink.module.name,\n  gmfPermalinkShareService.module.name,\n  gmfPermalinkShareComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optional. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.scaleselector\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport * as olEvents from 'ol/events.js';\nimport 'bootstrap/js/dropdown.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/map/scaleselector';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/map/scaleselector', require('./scaleselector.html'));\n});\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optional. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nconst directive = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', directive);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nconst ScaleselectorController = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  googAsserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = ScaleselectorController.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nScaleselectorController.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nScaleselectorController.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nScaleselectorController.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nScaleselectorController.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nScaleselectorController.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nScaleselectorController.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController', ScaleselectorController);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.module\n */\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.map.component\n */\nimport gmfPermalinkModule from 'gmf/permalink/module.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkModule.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapModule.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/map', require('./component.html'));\n});\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: 'gmf/map'\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.map.mousepositionComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport olControlMousePosition from 'ol/control/MousePosition.js';\nimport * as olProj from 'ol/proj.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapMouseposition', [\n  ngeoMiscFilters.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/map/mousepositionComponent', require('./mousepositionComponent.html'));\n});\n\n\nexports.value('gmfMapMousepositionTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfMapMousepositionTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/map/mousepositionComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfMapMousepositionTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfMapMousepositionTemplateUrl($attrs, gmfMapMousepositionTemplateUrl) {\n  return gmfMapMousepositionTemplateUrl($attrs);\n}\n\n/**\n * Provide a component to display the mouse position coordinates depending\n * on the chosen projection. The component also provides a projection picker\n * to choose how the coordinates are displayed.\n * service.\n *\n * Example:\n *  <gmf-mouseposition gmf-mouseposition-map=\"ctrl.map\"\n *     gmf-mouseposition-projections=\"ctrl.projections\">\n *  </gmf-mouseposition>\n *\n * @htmlAttribute {ol.Map} gmf-mouseposition-map The map.\n * @htmlAttribute {Array.<gmfx.MousePositionProjection>}\n *    gmf-mouseposition-projection The list of the projections.\n *\n * @ngdoc component\n * @ngname gmfMouseposition\n */\nexports.component_ = {\n  controller: 'gmfMousepositionController as ctrl',\n  bindings: {\n    'map': '<gmfMousepositionMap',\n    'projections': '<gmfMousepositionProjections'\n  },\n  templateUrl: gmfMapMousepositionTemplateUrl\n};\n\nexports.component('gmfMouseposition',\n  exports.component_);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfMousepositionController\n */\nexports.Controller_ = function($element, $filter, $scope, gettextCatalog) {\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!Array.<!gmfx.MousePositionProjection>}\n   * @export\n   */\n  this.projections;\n\n  /**\n   * @type {!gmfx.MousePositionProjection}\n   * @export\n   */\n  this.projection;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type  {?ol.control.MousePosition}\n   * @private\n   */\n  this.control_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.$scope_.$on('gettextLanguageChanged', () => {\n    this.initOlControl_();\n  });\n\n  // Init control once, in case of applications that never set the language.\n  this.initOlControl_();\n};\n\n\n/**\n * Init the ol.control.MousePosition\n * @private\n */\nexports.Controller_.prototype.initOlControl_ = function() {\n  if (this.control_ !== null) {\n    this.map.removeControl(this.control_);\n  }\n\n  // function that apply the filter.\n  const formatFn = function(coordinates) {\n    const filterAndArgs = this.projection.filter.split(':');\n    const filter = this.$filter_(filterAndArgs.shift());\n    googAsserts.assertFunction(filter);\n    const args = filterAndArgs;\n    args.unshift(coordinates);\n    return filter.apply(this, args);\n  };\n\n  const gettextCatalog = this.gettextCatalog_;\n  this.control_ = new olControlMousePosition({\n    className: 'gmf-mouseposition-control',\n    coordinateFormat: formatFn.bind(this),\n    target: angular.element('.gmf-mouseposition-control-target', this.$element_)[0],\n    undefinedHTML: gettextCatalog.getString('Coordinates')\n  });\n\n  this.setProjection(this.projections[0]);\n\n  this.map.addControl(this.control_);\n};\n\n\n/**\n * @param {gmfx.MousePositionProjection} projection The new projection to use.\n * @export\n */\nexports.Controller_.prototype.setProjection = function(projection) {\n  this.control_.setProjection(olProj.get(projection.code));\n  this.projection = projection;\n};\n\nexports.controller('gmfMousepositionController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.map.module\n */\nimport gmfMapComponent from 'gmf/map/component.js';\nimport gmfMapMousepositionComponent from 'gmf/map/mousepositionComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapModule', [\n  gmfMapComponent.name,\n  gmfMapMousepositionComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.grid.Config\n */\nimport * as olBase from 'ol/index.js';\n\n/**\n * @param {Array.<Object>|undefined} data Entries/objects to be shown in a grid.\n * @param {Array.<ngeox.GridColumnDef>|undefined} columnDefs Column definition of a grid.\n * @constructor\n * @struct\n * @export\n */\nconst exports = function(data, columnDefs) {\n  /**\n   * @type {Array.<Object>|undefined}\n   * @export\n   */\n  this.data = data;\n\n  /**\n   * @type {Array.<ngeox.GridColumnDef>|undefined}\n   * @export\n   */\n  this.columnDefs = columnDefs;\n\n  /**\n   * @type {!Object.<string, Object>}\n   * @export\n   */\n  this.selectedRows = {};\n};\n\n\n/**\n * Get an ID for a row.\n * @param {Object} attributes An entry/row.\n * @return {string} Unique id for this object.\n * @export\n */\nexports.getRowUid = function(attributes) {\n  return `${olBase.getUid(attributes)}`;\n};\n\n\n/**\n * Is the given row selected?\n * @param {Object} attributes An entry/row.\n * @return {boolean} True if already selected. False otherwise.\n * @export\n */\nexports.prototype.isRowSelected = function(attributes) {\n  return !!this.selectedRows[exports.getRowUid(attributes)];\n};\n\n\n/**\n * Returns the number of selected rows.\n * @return {number} Number of selected rows.\n * @export\n */\nexports.prototype.getSelectedCount = function() {\n  return Object.keys(this.selectedRows).length;\n};\n\n\n/**\n * Returns the selected rows.\n * @return {Array.<Object>} Selected rows in the current ordering.\n * @export\n */\nexports.prototype.getSelectedRows = function() {\n  return this.data.filter(row => this.isRowSelected(row));\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @public\n */\nexports.prototype.selectRow = function(attributes) {\n  const uid = exports.getRowUid(attributes);\n  this.selectedRows[uid] = attributes;\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @public\n */\nexports.prototype.toggleRow = function(attributes) {\n  const uid = exports.getRowUid(attributes);\n  const isSelected = this.isRowSelected(attributes);\n  if (isSelected) {\n    delete this.selectedRows[uid];\n  } else {\n    this.selectedRows[uid] = attributes;\n  }\n};\n\n\n/**\n * Select all rows.\n * @export\n */\nexports.prototype.selectAll = function() {\n  this.data.forEach((attributes) => {\n    this.selectRow(attributes);\n  });\n};\n\n\n/**\n * Deselect all rows.\n * @export\n */\nexports.prototype.unselectAll = function() {\n  for (const rowId in this.selectedRows) {\n    delete this.selectedRows[rowId];\n  }\n};\n\n\n/**\n * Invert selection.\n * @export\n */\nexports.prototype.invertSelection = function() {\n  this.data.forEach((attributes) => {\n    this.toggleRow(attributes);\n  });\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoGridConfig', []);\n\n\nexport default exports;\n","/**\n * @module ngeo.grid.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGridConfig from 'ngeo/grid/Config.js';\nimport * as olHas from 'ol/has.js';\n\nimport 'floatthead';\nimport 'angular-float-thead';\nimport 'font-awesome/css/font-awesome.css';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGrid', [\n  ngeoGridConfig.module.name,\n  ngeoMiscFilters.name,\n  'floatThead',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/grid', require('./component.html'));\n});\n\n\nexports.value('ngeoGridTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoGridTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/grid';\n  }\n);\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoGridTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoGridTemplateUrl($attrs, ngeoGridTemplateUrl) {\n  return ngeoGridTemplateUrl($attrs);\n}\n\n\n/**\n * A grid component for displaying tabular data. The columns of the grid\n * are sortable, rows can be selected with a single click (also in combination\n * with SHIFT and CTRL/Meta).\n *\n * Example:\n *\n *     <ngeo-grid\n *       ngeo-grid-configuration=\"::ctrl.gridConfiguration\"\n *     </ngeo-grid>\n *\n * @htmlAttribute {ngeo.grid.Config} ngeo-grid-configuration The\n * configuration to use.\n *\n * @ngdoc component\n * @ngname ngeoGrid\n */\nexports.component_ = {\n  controller: 'ngeoGridController as ctrl',\n  bindings: {\n    'configuration': '=ngeoGridConfiguration'\n  },\n  templateUrl: ngeoGridTemplateUrl\n};\n\nexports.component('ngeoGrid', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoGridController\n */\nexports.Controller_ = function($scope) {\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.grid.Config}\n   * @export\n   */\n  this.configuration;\n\n  /**\n   * @type {Object.<string, Object>}\n   * @export\n   */\n  this.selectedRows;\n\n  /**\n   * The name of the column used to sort the grid.\n   * @type {string}\n   * @export\n   */\n  this.sortedBy;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.sortAscending = true;\n\n  /**\n   * Configuration object for float-thead.\n   * @type {Object}\n   * @export\n   */\n  this.floatTheadConfig = {\n    'scrollContainer': function($table) {\n      return $table.closest('.ngeo-grid-table-container');\n    }\n  };\n};\n\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.selectedRows = this.configuration.selectedRows;\n};\n\n\n/**\n * Sort function that always puts undefined values to the bottom of the grid.\n * A new call will sort ascending. A next one will sort descending (and so\n * on).\n * @param {string} columnName The name of the column that should be used to\n *    sort the data.\n * @export\n */\nexports.Controller_.prototype.sort = function(columnName) {\n  this.sortAscending = this.sortedBy === columnName ? !this.sortAscending : true;\n  this.sortedBy = columnName;\n\n  const asc = this.sortAscending ? 1 : -1;\n  this.configuration.data.sort((attributes1, attributes2) => {\n    if (!attributes1[columnName]) {\n      return 1;\n    }\n    if (!attributes2[columnName]) {\n      return -1;\n    }\n    return attributes1[columnName] > attributes2[columnName] ? asc : -asc;\n  });\n};\n\n\n/**\n * Handler for clicks on a row.\n * @param {Object} attributes An entry/row.\n * @param {jQuery.Event} event Event.\n * @export\n */\nexports.Controller_.prototype.clickRow = function(attributes, event) {\n  const shiftKey = this.isShiftKeyOnly_(event);\n  const platformModifierKey = this.isPlatformModifierKeyOnly_(event);\n\n  this.clickRow_(attributes, shiftKey, platformModifierKey);\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @param {boolean} shiftKey Shift pressed?\n * @param {boolean} platformModifierKey CTRL/Meta pressed?\n * @private\n */\nexports.Controller_.prototype.clickRow_ = function(\n  attributes, shiftKey, platformModifierKey) {\n\n  if (shiftKey && !platformModifierKey) {\n    this.selectRange_(attributes);\n  } else if (!shiftKey && platformModifierKey) {\n    this.configuration.toggleRow(attributes);\n  } else {\n    const isSelected = this.configuration.isRowSelected(attributes);\n    this.configuration.unselectAll();\n    if (!isSelected) {\n      this.configuration.selectRow(attributes);\n    }\n  }\n};\n\n\n/**\n * Selects all rows between the given row and the closest already selected row.\n * @param {Object} attributes An entry/row.\n * @private\n */\nexports.Controller_.prototype.selectRange_ = function(attributes) {\n  const targetUid = ngeoGridConfig.getRowUid(attributes);\n  const data = this.configuration.data;\n\n  if (this.configuration.isRowSelected(attributes)) {\n    return;\n  }\n\n  // get the position of the clicked and all already selected rows\n  /** @type {number|undefined} */\n  let posClickedRow = undefined;\n  const posSelectedRows = [];\n  for (let i = 0; i < data.length; i++) {\n    const currentRow = data[i];\n    const currentUid = ngeoGridConfig.getRowUid(currentRow);\n\n    if (targetUid === currentUid) {\n      posClickedRow = i;\n    } else if (this.configuration.isRowSelected(currentRow)) {\n      posSelectedRows.push(i);\n    }\n  }\n  googAsserts.assert(posClickedRow !== undefined);\n\n  if (posSelectedRows.length == 0) {\n    // if no other row is selected, select the clicked one and stop\n    this.configuration.selectRow(attributes);\n  }\n\n  // find the selected row which is the closest to the clicked row\n  let distance = Infinity;\n  let posClosestRow = posSelectedRows[0];\n  for (let j = 0; j < posSelectedRows.length; j++) {\n    const currentPos = posSelectedRows[j];\n    const currentDistance = Math.abs(currentPos - posClickedRow);\n    if (distance > currentDistance) {\n      distance = currentDistance;\n      posClosestRow = currentPos;\n    }\n    // note: this could be optimized because `posSelectedRows` is ordered.\n  }\n\n  // then select all rows between the clicked one and the closest\n  const rangeStart = (posClickedRow < posClosestRow) ? posClickedRow : posClosestRow;\n  const rangeEnd = (posClickedRow > posClosestRow) ? posClickedRow : posClosestRow;\n\n  for (let l = rangeStart; l <= rangeEnd; l++) {\n    this.configuration.selectRow(data[l]);\n  }\n};\n\n\n/**\n * Prevent the default browser behaviour of selecting text\n * when selecting multiple rows with SHIFT or CTRL/Meta.\n * @param {jQuery.Event} event Event.\n * @export\n */\nexports.Controller_.prototype.preventTextSelection = function(event) {\n  const shiftKey = this.isShiftKeyOnly_(event);\n  const platformModifierKey = this.isPlatformModifierKeyOnly_(event);\n\n  if (shiftKey || platformModifierKey) {\n    event.preventDefault();\n  }\n};\n\n\n/**\n * Same as `ol.events.condition.platformModifierKeyOnly`.\n * @param {jQuery.Event} event Event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @private\n */\nexports.Controller_.prototype.isPlatformModifierKeyOnly_ = function(event) {\n  return !event.altKey &&\n    (olHas.MAC ? event.metaKey : event.ctrlKey) &&\n    !event.shiftKey;\n};\n\n\n/**\n * Same as `ol.events.condition.shiftKeyOnly`.\n * @param {jQuery.Event} event Event.\n * @return {boolean} True if only the shift key is pressed.\n * @private\n */\nexports.Controller_.prototype.isShiftKeyOnly_ = function(event) {\n  return (\n    !event.altKey &&\n      !(event.metaKey || event.ctrlKey) &&\n      event.shiftKey);\n};\n\n\nexports.controller('ngeoGridController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.query.gridComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadCsv from 'ngeo/download/Csv.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\n/** @suppress {extraRequire} */\nimport ngeoGridComponent from 'ngeo/grid/component.js';\n\nimport ngeoGridConfig from 'ngeo/grid/Config.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/** @suppress {extraRequire} - required for `ngeoQueryResult` */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olCollection from 'ol/Collection.js';\nimport * as olExtent from 'ol/extent.js';\nimport olMap from 'ol/Map.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryGridComponent', [\n  ngeoDownloadCsv.module.name,\n  ngeoDownloadService.name,\n  ngeoGridComponent.name,\n  ngeoGridConfig.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.value('gmfDisplayquerygridTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfDisplayquerygridTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/query/gridComponent';\n  }\n);\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/query/gridComponent', require('./gridComponent.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfDisplayquerygridTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfDisplayquerygridTemplateUrl($element, $attrs, gmfDisplayquerygridTemplateUrl) {\n  return gmfDisplayquerygridTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provides a component to display results of the {@link ngeo.queryResult} in a\n * grid and shows related features on the map using\n * the {@link ngeo.map.FeatureOverlayMgr}.\n *\n * You can override the default component's template by setting the\n * value `gmfDisplayquerygridTemplateUrl`.\n *\n * Features displayed on the map use a default style but you can override these\n * styles by passing ol.style.Style objects as attributes of this component.\n *\n * Note: the following ng-class need to be present in the interface <body> element to display the footer\n * when the grid is active (initially there should be the code for the profile tool):\n *      <body ng-class=\"{'gmf-profile-chart-active': !!profileChartActive, 'gmf-query-grid-active': !!queryGridActive}\">\n *\n * Example:\n *\n *      <gmf-displayquerygrid\n *        gmf-displayquerygrid-map=\"ctrl.map\"\n *        gmf-displayquerygrid-featuresstyle=\"ctrl.styleForAllFeatures\"\n *        gmf-displayquerygrid-selectedfeaturestyle=\"ctrl.styleForTheCurrentFeature\">\n *      </gmf-displayquerygrid>\n *\n * @htmlAttribute {boolean} gmf-displayquerygrid-active The active state of the component.\n * @htmlAttribute {ol.style.Style} gmf-displayquerygrid-featuresstyle A style\n *     object for all features from the result of the query.\n * @htmlAttribute {ol.style.Style} gmf-displayquerygrid-selectedfeaturestyle A style\n *     object for the currently selected features.\n * @htmlAttribute {ol.Map} gmf-displayquerygrid-map The map.\n * @htmlAttribute {boolean?} gmf-displayquerygrid-removeemptycolumns Optional. Should\n *     empty columns be hidden? Default: `false`.\n * @htmlAttribute {number?} gmf-displayquerygrid-maxrecenterzoom Optional. Maximum\n *     zoom-level to use when zooming to selected features.\n * @htmlAttribute {gmfx.GridMergeTabs?} gmf-displayquerygrid-gridmergetabs Optional.\n *     Configuration to merge grids with the same attributes into a single grid.\n *\n * @ngdoc component\n * @ngname gmfDisplayquerygrid\n */\nexports.component_ = {\n  controller: 'GmfDisplayquerygridController as ctrl',\n  bindings: {\n    'active': '=?gmfDisplayquerygridActive',\n    'featuresStyleFn': '&gmfDisplayquerygridFeaturesstyle',\n    'selectedFeatureStyleFn': '&gmfDisplayquerygridSelectedfeaturestyle',\n    'getMapFn': '&gmfDisplayquerygridMap',\n    'removeEmptyColumnsFn': '&?gmfDisplayquerygridRemoveemptycolumns',\n    'maxResultsFn': '&?gmfDisplayquerygridMaxresults',\n    'maxRecenterZoomFn': '&?gmfDisplayquerygridMaxrecenterzoom',\n    'mergeTabs': '<?gmfDisplayquerygridMergetabs'\n  },\n  templateUrl: gmfDisplayquerygridTemplateUrl\n};\n\n\nexports.component('gmfDisplayquerygrid', exports.component_);\n\n\n/**\n * Controller for the query grid.\n *\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.QueryResult} ngeoQueryResult ngeo query result.\n * @param {!ngeo.query.MapQuerent} ngeoMapQuerent ngeo map querent service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.download.Csv} ngeoCsvDownload CSV download service.\n * @param {!angular.JQLite} $element Element.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisplayquerygridController\n */\nexports.Controller_ = function($injector, $scope, ngeoQueryResult, ngeoMapQuerent,\n  ngeoFeatureOverlayMgr, $timeout, ngeoCsvDownload, $element) {\n\n  const queryOptions = /** @type {ngeox.QueryOptions} */ (\n    $injector.has('ngeoQueryOptions') ?\n      $injector.get('ngeoQueryOptions') : {});\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {!ngeox.QueryResult}\n   * @export\n   */\n  this.ngeoQueryResult = ngeoQueryResult;\n\n  /**\n   * @type {!ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n  /**\n   * @type {!ngeo.download.Csv}\n   * @private\n   */\n  this.ngeoCsvDownload_ = ngeoCsvDownload;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.maxResults = queryOptions.limit !== undefined ? queryOptions.limit : 50;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.pending = false;\n\n  /**\n   * @type {!Object.<string, gmfx.GridSource>}\n   * @export\n   */\n  this.gridSources = {};\n\n  /**\n   * IDs of the grid sources in the order they were loaded.\n   * @type {!Array.<string>}\n   * @export\n   */\n  this.loadedGridSources = [];\n\n  /**\n   * The id of the currently shown query source.\n   * @type {string|number|null}\n   * @export\n   */\n  this.selectedTab = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.removeEmptyColumns_ = false;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.maxRecenterZoom;\n\n  /**\n   * @type {!gmfx.GridMergeTabs}\n   * @export\n   */\n  this.mergeTabs = {};\n\n  /**\n   * A mapping between row uid and the corresponding feature for each\n   * source.\n   * @type {!Object.<string, Object.<string, ol.Feature>>}\n   * @private\n   */\n  this.featuresForSources_ = {};\n\n  // Styles for displayed features (features) and selected features\n  // (highlightFeatures_) (user can set both styles).\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.highlightFeatures_ = new olCollection();\n\n  /**\n   * Filename\n   * @type {string}\n   * @private\n   */\n  this.filename_ = $injector.has('gmfCsvFilename') ?\n    $injector.get('gmfCsvFilename') : 'query-results.csv';\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  // Watch the ngeo query result service.\n  this.$scope_.$watchCollection(\n    () => ngeoQueryResult,\n    (newQueryResult, oldQueryResult) => {\n      if (newQueryResult !== oldQueryResult) {\n        this.updateData_();\n      }\n    });\n\n  /**\n   * An unregister function returned from `$scope.$watchCollection` for\n   * \"on-select\" changes (when rows are selected/unselected).\n   * @type {?function()}\n   * @private\n   */\n  this.unregisterSelectWatcher_ = null;\n};\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.removeEmptyColumns_ = this['removeEmptyColumnsFn'] ? this['removeEmptyColumnsFn']() === true : false;\n  this.maxRecenterZoom = this['maxRecenterZoomFn'] ? this['maxRecenterZoomFn']() : undefined;\n\n  const featuresOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  featuresOverlay.setFeatures(this.features_);\n  const featuresStyle = this['featuresStyleFn']();\n  if (featuresStyle !== undefined) {\n    googAsserts.assertInstanceof(featuresStyle, olStyleStyle);\n    featuresOverlay.setStyle(featuresStyle);\n  }\n\n  const highlightFeaturesOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  highlightFeaturesOverlay.setFeatures(this.highlightFeatures_);\n  let highlightFeatureStyle = this['selectedFeatureStyleFn']();\n  if (highlightFeatureStyle !== undefined) {\n    googAsserts.assertInstanceof(highlightFeatureStyle, olStyleStyle);\n  } else {\n    const fill = new olStyleFill({color: [255, 0, 0, 0.6]});\n    const stroke = new olStyleStroke({color: [255, 0, 0, 1], width: 2});\n    highlightFeatureStyle = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke,\n      zIndex: 10\n    });\n  }\n  highlightFeaturesOverlay.setStyle(highlightFeatureStyle);\n\n  const mapFn = this['getMapFn'];\n  if (mapFn) {\n    const map = mapFn();\n    googAsserts.assertInstanceof(map, olMap);\n    this.map_ = map;\n  }\n};\n\n/**\n * Returns a list of grid sources in the order they were loaded.\n * @export\n * @return {Array.<gmfx.GridSource>} Grid sources.\n */\nexports.Controller_.prototype.getGridSources = function() {\n  return this.loadedGridSources.map(sourceLabel => this.gridSources[sourceLabel]);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateData_ = function() {\n  // close if there are no results\n  if (this.ngeoQueryResult.total === 0 && !this.hasOneWithTooManyResults_()) {\n    const oldActive = this.active;\n    this.clear();\n    if (oldActive) {\n      // don't close if there are pending queries\n      this.active = this.ngeoQueryResult.pending;\n      this.pending = this.ngeoQueryResult.pending;\n    }\n    return;\n  }\n\n  this.active = true;\n  this.pending = false;\n  let sources = this.ngeoQueryResult.sources;\n  // merge sources if requested\n  if (Object.keys(this.mergeTabs).length > 0) {\n    sources = this.getMergedSources_(sources);\n  }\n\n  // create grids (only for source with features or with too many results)\n  sources.forEach((source) => {\n    if (source.tooManyResults) {\n      this.makeGrid_(null, source);\n    } else {\n      source.id = this.escapeValue(source.id);\n      const features = source.features;\n      if (features.length > 0) {\n        this.collectData_(source);\n      }\n    }\n  });\n\n  if (this.loadedGridSources.length === 0) {\n    // if no grids were created, do not show\n    this.active = false;\n    return;\n  }\n\n  // keep the first existing navigation tab open\n  if (this.selectedTab === null || !((`${this.selectedTab}`) in this.gridSources)) {\n    // selecting the tab is done in a timeout, because otherwise in rare cases\n    // `ng-class` might set the `active` class on multiple tabs.\n    this.$timeout_(() => {\n      const firstSourceId = this.loadedGridSources[0];\n      this.selectTab(this.gridSources[firstSourceId]);\n    }, 0);\n  }\n};\n\n\n/**\n * @private\n * @return {boolean} If one of the source has too many results.\n */\nexports.Controller_.prototype.hasOneWithTooManyResults_ = function() {\n  return this.ngeoQueryResult.sources.some(source => source.tooManyResults);\n};\n\n/**\n * Returns the value with all symbols and spaces replaced by an underscore.\n * @param {string|number} value A value to escape.\n * @returns {string|number} value An escaped value.\n * @export\n */\nexports.Controller_.prototype.escapeValue = function(value) {\n  // Work-around for Number.isInteger() when not always getting a number ...\n  if (Number.isInteger(/** @type {number} */ (value))) {\n    return value;\n  } else {\n    const toEscape = /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\ |]/g;\n    if (value.match(toEscape) !== null) {\n      return value.replace(toEscape, '_');\n    } else {\n      return value;\n    }\n  }\n};\n\n\n/**\n * Returns if the given grid source is selected?\n * @export\n * @param {gmfx.GridSource} gridSource Grid source.\n * @return {boolean} Is selected?\n */\nexports.Controller_.prototype.isSelected = function(gridSource) {\n  return this.selectedTab === gridSource.source.label;\n};\n\n\n/**\n * Try to merge the mergable sources.\n * @param {Array.<ngeox.QueryResultSource>} sources Sources.\n * @return {Array.<ngeox.QueryResultSource>} The merged sources.\n * @private\n */\nexports.Controller_.prototype.getMergedSources_ = function(sources) {\n  const allSources = [];\n  /** @type {Object.<string, ngeox.QueryResultSource>} */\n  const mergedSources = {};\n\n  sources.forEach((source) => {\n    // check if this source can be merged\n    const mergedSource = this.getMergedSource_(source, mergedSources);\n\n    if (mergedSource === null) {\n      // this source should not be merged, add as is\n      allSources.push(source);\n    }\n  });\n\n  for (const mergedSourceId in mergedSources) {\n    allSources.push(mergedSources[mergedSourceId]);\n  }\n\n  return allSources;\n};\n\n\n/**\n * Check if the given source should be merged. If so, an artificial source\n * that will contain the features of all mergable sources is returned. If not,\n * `null` is returned.\n * @param {ngeox.QueryResultSource} source Source.\n * @param {Object.<string, ngeox.QueryResultSource>} mergedSources Merged sources.\n * @return {?ngeox.QueryResultSource} A merged source of null if the source should\n *    not be merged.\n * @private\n */\nexports.Controller_.prototype.getMergedSource_ = function(source, mergedSources) {\n  let mergeSourceId = null;\n\n  for (const currentMergeSourceId in this.mergeTabs) {\n    const sourceLabels = this.mergeTabs[currentMergeSourceId];\n    const containsSource = sourceLabels.some(sourceLabel => sourceLabel == source.label);\n    if (containsSource) {\n      mergeSourceId = currentMergeSourceId;\n      break;\n    }\n  }\n\n  if (mergeSourceId === null) {\n    // this source should not be merged\n    return null;\n  }\n\n  /** @type {ngeox.QueryResultSource} */\n  let mergeSource;\n  if (mergeSourceId in mergedSources) {\n    mergeSource = mergedSources[mergeSourceId];\n  } else {\n    mergeSource = {\n      features: [],\n      id: mergeSourceId,\n      label: mergeSourceId,\n      limit: this.maxResults,\n      pending: false,\n      queried: true,\n      tooManyResults: false,\n      totalFeatureCount: undefined\n    };\n    mergedSources[mergeSourceId] = mergeSource;\n  }\n\n  // add features of source to merge source\n  source.features.forEach((feature) => {\n    mergeSource.features.push(feature);\n  });\n\n  // if one of the source has too many results, the resulting merged source will\n  // also be marked with `tooManyResults` and will not contain any features.\n  mergeSource.tooManyResults = mergeSource.tooManyResults || source.tooManyResults;\n  if (mergeSource.tooManyResults) {\n    mergeSource.totalFeatureCount = (mergeSource.totalFeatureCount !== undefined) ?\n      mergeSource.totalFeatureCount + mergeSource.features.length : mergeSource.features.length;\n    mergeSource.features = [];\n  }\n  if (source.totalFeatureCount !== undefined) {\n    mergeSource.totalFeatureCount = (mergeSource.totalFeatureCount !== undefined) ?\n      mergeSource.totalFeatureCount + source.totalFeatureCount : source.totalFeatureCount;\n  }\n\n  return mergeSource;\n};\n\n\n/**\n * Collect all features in the queryResult object.\n * @param {ngeox.QueryResultSource} source Result source.\n * @private\n */\nexports.Controller_.prototype.collectData_ = function(source) {\n  const features = source.features;\n  const allProperties = [];\n  const featureGeometriesNames = [];\n  const featuresForSource = {};\n  let properties, featureGeometryName;\n  features.forEach((feature) => {\n    properties = feature.getProperties();\n    if (properties !== undefined) {\n      // Keeps distinct geometry names to remove theme later.\n      featureGeometryName = feature.getGeometryName();\n      if (featureGeometriesNames.indexOf(featureGeometryName) === -1) {\n        featureGeometriesNames.push(featureGeometryName);\n      }\n\n      allProperties.push(properties);\n      featuresForSource[ngeoGridConfig.getRowUid(properties)] = feature;\n    }\n  });\n\n  this.cleanProperties_(allProperties, featureGeometriesNames);\n  if (allProperties.length > 0) {\n    const gridCreated = this.makeGrid_(allProperties, source);\n    if (gridCreated) {\n      this.featuresForSources_[`${source.label}`] = featuresForSource;\n    }\n  }\n};\n\n\n/**\n * Remove all unwanted columns.\n * @param {Array.<Object>} allProperties A row.\n * @param {Array.<string>} featureGeometriesNames Geometry names.\n * @private\n */\nexports.Controller_.prototype.cleanProperties_ = function(\n  allProperties, featureGeometriesNames) {\n  allProperties.forEach((properties) => {\n    featureGeometriesNames.forEach((featureGeometryName) => {\n      delete properties[featureGeometryName];\n    });\n    delete properties['boundedBy'];\n    delete properties['ngeo_feature_type_'];\n  });\n\n  if (this.removeEmptyColumns_ === true) {\n    this.removeEmptyColumnsFn_(allProperties);\n  }\n};\n\n\n/**\n * Remove columns that will be completely empty between each properties.\n * @param {Array.<Object>} allProperties A row.\n * @private\n */\nexports.Controller_.prototype.removeEmptyColumnsFn_ = function(\n  allProperties) {\n  // Keep all keys that correspond to at least one value in a properties object.\n  const keysToKeep = [];\n  let i, key;\n  for (key in allProperties[0]) {\n    for (i = 0; i < allProperties.length; i++) {\n      if (allProperties[i][key] !== undefined) {\n        keysToKeep.push(key);\n        break;\n      }\n    }\n  }\n  // Get all keys that previously always refers always to an empty value.\n  let keyToRemove;\n  allProperties.forEach((properties) => {\n    keyToRemove = [];\n    for (key in properties) {\n      if (keysToKeep.indexOf(key) === -1) {\n        keyToRemove.push(key);\n      }\n    }\n    // Remove these keys.\n    keyToRemove.forEach((key) => {\n      delete properties[key];\n    });\n  });\n};\n\n\n/**\n * @param {?Array.<Object>} data Grid rows.\n * @param {ngeox.QueryResultSource} source Query source.\n * @return {boolean} Returns true if a grid was created.\n * @private\n */\nexports.Controller_.prototype.makeGrid_ = function(data, source) {\n  const sourceLabel = `${source.label}`;\n  let gridConfig = null;\n  if (data !== null) {\n    gridConfig = this.getGridConfiguration_(data);\n    if (gridConfig === null) {\n      return false;\n    }\n  }\n  if (this.loadedGridSources.indexOf(sourceLabel) == -1) {\n    this.loadedGridSources.push(sourceLabel);\n  }\n  this.gridSources[sourceLabel] = {\n    configuration: gridConfig,\n    source: source\n  };\n  return true;\n};\n\n\n/**\n * @param {Array.<!Object>} data Grid rows.\n * @return {?ngeo.grid.Config} Grid config.\n * @private\n */\nexports.Controller_.prototype.getGridConfiguration_ = function(\n  data) {\n  googAsserts.assert(data.length > 0);\n  const clone = {};\n  Object.assign(clone, data[0]);\n  delete clone.ol_uid;\n  const columns = Object.keys(clone);\n\n  /** @type {Array.<ngeox.GridColumnDef>} */\n  const columnDefs = [];\n  columns.forEach((column) => {\n    columnDefs.push(/** @type {ngeox.GridColumnDef} */ ({\n      name: column\n    }));\n  });\n\n  if (columnDefs.length > 0) {\n    return new ngeoGridConfig(data, columnDefs);\n  } else {\n    // no columns, do not show grid\n    return null;\n  }\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.active = false;\n  this.pending = false;\n  this.gridSources = {};\n  this.loadedGridSources = [];\n  this.selectedTab = null;\n  this.tooManyResults = false;\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n  this.ngeoMapQuerent_.clear();\n  this.featuresForSources_ = {};\n  if (this.unregisterSelectWatcher_) {\n    this.unregisterSelectWatcher_();\n  }\n};\n\n\n/**\n * Select the tab for the given grid source.\n * @param {gmfx.GridSource} gridSource Grid source.\n * @export\n */\nexports.Controller_.prototype.selectTab = function(gridSource) {\n  const source = gridSource.source;\n  this.selectedTab = source.label;\n\n  if (this.unregisterSelectWatcher_) {\n    this.unregisterSelectWatcher_();\n    this.unregisterSelectWatcher_ = null;\n  }\n\n  if (gridSource.configuration !== null) {\n    this.unregisterSelectWatcher_ = this.$scope_.$watchCollection(\n      () => gridSource.configuration.selectedRows,\n      (newSelected, oldSelectedRows) => {\n        if (Object.keys(newSelected) !== Object.keys(oldSelectedRows)) {\n          this.onSelectionChanged_();\n        }\n      });\n  }\n  this.updateFeatures_(gridSource);\n\n  this.reflowGrid_();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.reflowGrid_ = function() {\n  // This is a \"work-around\" to make sure that the grid is rendered correctly.\n  // When a pane is activated by setting `this.selectedTab`, the class `active`\n  // is not yet set on the pane. That's why the class is set manually, and\n  // after the pane is shown (in the next digest loop), the grid table can\n  // be refreshed.\n  const id = this.escapeValue(this.selectedTab || '');\n  const activePane = this.$element_.find(`div.tab-pane#${id}`);\n  activePane.removeClass('active').addClass('active');\n  this.$timeout_(() => {\n    activePane.find('div.ngeo-grid-table-container table')['trigger']('reflow');\n  });\n};\n\n\n/**\n * Called when the row selection has changed.\n * @private\n */\nexports.Controller_.prototype.onSelectionChanged_ = function() {\n  if (this.selectedTab === null) {\n    return;\n  }\n\n  const gridSource = this.gridSources[`${this.selectedTab}`];\n  this.updateFeatures_(gridSource);\n};\n\n\n/**\n * @param {gmfx.GridSource} gridSource Grid source\n * @private\n */\nexports.Controller_.prototype.updateFeatures_ = function(gridSource) {\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n\n  if (gridSource.configuration === null) {\n    return;\n  }\n\n  const sourceLabel = `${gridSource.source.label}`;\n  const featuresForSource = this.featuresForSources_[sourceLabel];\n  const selectedRows = gridSource.configuration.selectedRows;\n\n  for (const rowId in featuresForSource) {\n    const feature = featuresForSource[rowId];\n    if (rowId in selectedRows) {\n      this.highlightFeatures_.push(feature);\n    } else {\n      this.features_.push(feature);\n    }\n  }\n};\n\n\n/**\n * Get the currently shown grid source.\n * @export\n * @return {gmfx.GridSource|null} Grid source.\n */\nexports.Controller_.prototype.getActiveGridSource = function() {\n  if (this.selectedTab === null) {\n    return null;\n  } else {\n    return this.gridSources[`${this.selectedTab}`];\n  }\n};\n\n\n/**\n * Returns if a row of the currently active grid is selected?\n * @export\n * @return {boolean} Is one selected?\n */\nexports.Controller_.prototype.isOneSelected = function() {\n  const source = this.getActiveGridSource();\n  if (source === null || source.configuration === null) {\n    return false;\n  } else {\n    return source.configuration.getSelectedCount() > 0;\n  }\n};\n\n\n/**\n * Returns the number of selected rows of the currently active grid.\n * @export\n * @return {number} The number of selected rows.\n */\nexports.Controller_.prototype.getSelectedRowCount = function() {\n  const source = this.getActiveGridSource();\n  if (source === null || source.configuration === null) {\n    return 0;\n  } else {\n    return source.configuration.getSelectedCount();\n  }\n};\n\n\n/**\n * Select all rows of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.selectAll = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.selectAll();\n  }\n};\n\n\n/**\n * Deselect all rows of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.unselectAll = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.unselectAll();\n  }\n};\n\n\n/**\n * Invert the selection of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.invertSelection = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.invertSelection();\n  }\n};\n\n\n/**\n * Zoom to the selected features.\n * @export\n */\nexports.Controller_.prototype.zoomToSelection = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    const extent = olExtent.createEmpty();\n    this.highlightFeatures_.forEach((feature) => {\n      olExtent.extend(extent, feature.getGeometry().getExtent());\n    });\n    const size = this.map_.getSize();\n    googAsserts.assert(size !== undefined);\n    const maxZoom = this.maxRecenterZoom;\n    this.map_.getView().fit(extent, {size, maxZoom});\n  }\n};\n\n\n/**\n * Start a CSV download for the selected features.\n * @export\n */\nexports.Controller_.prototype.downloadCsv = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    const columnDefs = source.configuration.columnDefs;\n    googAsserts.assert(columnDefs !== undefined);\n    const selectedRows = source.configuration.getSelectedRows();\n\n    this.ngeoCsvDownload_.startDownload(\n      selectedRows, columnDefs, this.filename_);\n  }\n};\n\n\nexports.controller('GmfDisplayquerygridController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.swipe\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMiscSwipe', []);\n\n\n/**\n * ===========================================\n * NOTE: It is an inversed copy of ngSwipe.\n * Angular ngSwipe assumes that vertical\n * swipe is a scroll.\n * For more details:\n * https://docs.angularjs.org/api/ngTouch/service/$swipe\n * ===========================================\n */\n\n/**\n * @ngdoc service\n * @name $verticalSwipe\n *\n * @description\n * The `$verticalSwipe` service is a service that abstracts the messier details of hold-and-drag swipe\n * behavior, to make implementing swipe-related directives more convenient.\n *\n * Requires the {@link ngTouch `ngTouch`} module to be installed.\n *\n * `$verticalSwipe` is used by the `ngeoSwipeUp` and `ngeoSwipeDown` directives.\n *\n * # Usage\n * The `$verticalSwipe` service is an object with a single method: `bind`. `bind` takes an element\n * which is to be watched for swipes, and an object with four handler functions. See the\n * documentation for `bind` below.\n */\n\nexports.factory('$verticalSwipe', [function() {\n  // The total distance in any direction before we make the call on swipe vs. scroll.\n  const MOVE_BUFFER_RADIUS = 10;\n\n  const POINTER_EVENTS = {\n    'mouse': {\n      start: 'mousedown',\n      move: 'mousemove',\n      end: 'mouseup'\n    },\n    'touch': {\n      start: 'touchstart',\n      move: 'touchmove',\n      end: 'touchend',\n      cancel: 'touchcancel'\n    },\n    'pointer': {\n      start: 'pointerdown',\n      move: 'pointermove',\n      end: 'pointerup',\n      cancel: 'pointercancel'\n    }\n  };\n\n  function getCoordinates(event) {\n    const originalEvent = event.originalEvent || event;\n    const touches = originalEvent.touches && originalEvent.touches.length ? originalEvent.touches : [originalEvent];\n    const e = (originalEvent.changedTouches && originalEvent.changedTouches[0]) || touches[0];\n\n    return {\n      x: e.clientX,\n      y: e.clientY\n    };\n  }\n\n  function getEvents(pointerTypes, eventType) {\n    const res = [];\n    angular.forEach(pointerTypes, (pointerType) => {\n      const eventName = POINTER_EVENTS[pointerType][eventType];\n      if (eventName) {\n        res.push(eventName);\n      }\n    });\n    return res.join(' ');\n  }\n\n  return {\n    /**\n     * @ngdoc method\n     * @name $verticalSwipe#bind\n     * @param {!angular.JQLite} element Element.\n     * @param {Object} eventHandlers - Event handlers object with `start`, `cancel` and `end` callbacks\n     * @param {Array<string>} pointerTypes - Types of pointer\n     *\n     * @description\n     * The main method of `$verticalSwipe`. It takes an element to be watched for swipe motions, and an\n     * object containing event handlers.\n     * The pointer types that should be used can be specified via the optional\n     * third argument, which is an array of strings `'mouse'`, `'touch'` and `'pointer'`. By default,\n     * `$verticalSwipe` will listen for `mouse`, `touch` and `pointer` events.\n     *\n     * The four events are `start`, `move`, `end`, and `cancel`. `start`, `move`, and `end`\n     * receive as a parameter a coordinates object of the form `{ x: 150, y: 310 }` and the raw\n     * `event`. `cancel` receives the raw `event` as its single parameter.\n     *\n     * `start` is called on either `mousedown`, `touchstart` or `pointerdown`. After this event, `$verticalSwipe` is\n     * watching for `touchmove`, `mousemove` or `pointermove` events. These events are ignored until the total\n     * distance moved in either dimension exceeds a small threshold.\n     *\n     * Once this threshold is exceeded, either the vertical or vertical delta is greater.\n     * - If the vertical distance is greater, this is a swipe and `move` and `end` events follow.\n     * - If the horizontal distance is greater, this is a scroll, and we let the browser take over.\n     *   A `cancel` event is sent.\n     *\n     * `move` is called on `mousemove`, `touchmove` and `pointermove` after the above logic has determined that\n     * a swipe is in progress.\n     *\n     * `end` is called when a swipe is successfully completed with a `touchend`, `mouseup` or `pointerup`.\n     *\n     * `cancel` is called either on a `touchcancel` or `pointercancel`  from the browser, or when we begin scrolling\n     * as described above.\n     *\n     */\n    bind(element, eventHandlers, pointerTypes) {\n      // Absolute total movement, used to control swipe vs. scroll.\n      let totalX, totalY;\n      // Coordinates of the start position.\n      let startCoords;\n      // Last event's position.\n      let lastPos;\n      // Whether a swipe is active.\n      let active = false;\n\n      pointerTypes = pointerTypes || ['mouse', 'touch', 'pointer'];\n      element.on(getEvents(pointerTypes, 'start'), (event) => {\n        startCoords = getCoordinates(event);\n        active = true;\n        totalX = 0;\n        totalY = 0;\n        lastPos = startCoords;\n        if (eventHandlers['start']) {\n          eventHandlers['start'](startCoords, event);\n        }\n      });\n      const events = getEvents(pointerTypes, 'cancel');\n      if (events) {\n        element.on(events, (event) => {\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n        });\n      }\n\n      element.on(getEvents(pointerTypes, 'move'), (event) => {\n        if (!active) {\n          return;\n        }\n\n        // Android will send a touchcancel if it thinks we're starting to scroll.\n        // So when the total distance (+ or - or both) exceeds 10px in either direction,\n        // we either:\n        // - On totalX > totalY, we send preventDefault() and treat this as a swipe.\n        // - On totalY > totalX, we let the browser handle it as a scroll.\n\n        if (!startCoords) {\n          return;\n        }\n        const coords = getCoordinates(event);\n\n        totalX += Math.abs(coords.x - lastPos.x);\n        totalY += Math.abs(coords.y - lastPos.y);\n\n        lastPos = coords;\n\n        if (totalX < MOVE_BUFFER_RADIUS && totalY < MOVE_BUFFER_RADIUS) {\n          return;\n        }\n\n        // One of totalX or totalY has exceeded the buffer, so decide on swipe vs. scroll.\n        if (totalX > totalY) {\n          // Allow native scrolling to take over.\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n          return;\n        } else {\n          // Prevent the browser from scrolling.\n          event.preventDefault();\n          if (eventHandlers['move']) {\n            eventHandlers['move'](coords, event);\n          }\n        }\n      });\n\n      element.on(getEvents(pointerTypes, 'end'), (event) => {\n        if (!active) {\n          return;\n        }\n        active = false;\n        if (eventHandlers['end']) {\n          eventHandlers['end'](getCoordinates(event), event);\n        }\n      });\n    }\n  };\n}]);\n\nexports.makeSwipeDirective_ = function(directiveName, direction, eventName) {\n  exports.directive(directiveName, ['$parse', '$verticalSwipe', function($parse, $verticalSwipe) {\n    // The maximum horizontal delta for a swipe should be less than 75px.\n    const MAX_HORIZONTAL_DISTANCE = 75;\n    // Horizontal distance should not be more than a fraction of the vertical distance.\n    const MAX_HORIZONTAL_RATIO = 0.3;\n    // At least a 30px lateral motion is necessary for a swipe.\n    const MIN_VERTICAL_DISTANCE = 30;\n\n    return function(scope, element, attr) {\n      const swipeHandler = $parse(attr[directiveName]);\n\n      let startCoords, valid;\n\n      function validSwipe(coords) {\n        // Check that it's within the coordinates.\n        // Absolute vertical distance must be within tolerances.\n        // Horizontal distance, we take the current X - the starting X.\n        // This is negative for downward swipes and positive for upward swipes.\n        // After multiplying by the direction (-1 for down, +1 for up), legal swipes\n        // (ie. same direction as the directive wants) will have a positive delta and\n        // illegal ones a negative delta.\n        // Therefore this delta must be positive, and larger than the minimum.\n        if (!startCoords) {\n          return false;\n        }\n        const deltaY = (coords.y - startCoords.y) * direction;\n        const deltaX = Math.abs(coords.x - startCoords.x);\n        return valid && // Short circuit for already-invalidated swipes.\n            deltaX < MAX_HORIZONTAL_DISTANCE &&\n            deltaY > 0 &&\n            deltaY > MIN_VERTICAL_DISTANCE &&\n            deltaX / deltaY < MAX_HORIZONTAL_RATIO;\n      }\n\n      const pointerTypes = ['touch'];\n      if (!angular.isDefined(attr['ngeoSwipeDisableMouse'])) {\n        pointerTypes.push('mouse');\n      }\n      $verticalSwipe.bind(element, {\n        'start': function(coords, event) {\n          startCoords = coords;\n          valid = true;\n        },\n        'cancel': function(event) {\n          valid = false;\n        },\n        'end': function(coords, event) {\n          if (validSwipe(coords)) {\n            scope.$apply(() => {\n              element.triggerHandler(eventName);\n              swipeHandler(scope, {$event: event});\n            });\n          }\n        }\n      }, pointerTypes);\n    };\n  }]);\n};\n\n// Down is negative Y-coordinate, up is positive.\nexports.makeSwipeDirective_('ngeoSwipeDown', 1, 'swipedown');\nexports.makeSwipeDirective_('ngeoSwipeUp', -1, 'swipeup');\n\n\nexport default exports;\n","/**\n * @module gmf.query.windowComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscSwipe from 'ngeo/misc/swipe.js';\n\n/** @suppress {extraRequire} - required for `ngeoQueryResult` */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olCollection from 'ol/Collection.js';\nimport * as olObj from 'ol/obj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport 'jquery-ui/ui/widgets/resizable.js';\nimport 'angular-animate';\nimport 'angular-touch';\nimport 'bootstrap/js/collapse.js';\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryWindowComponent', [\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscSwipe.name,\n  ngeoQueryMapQuerent.module.name,\n  'ngAnimate',\n  'ngTouch',\n]);\n\n\nexports.config(['$animateProvider',\n  /**\n   * For performance reason, only perform animation on elements that have the\n   * `gmf-animatable` css class.\n   * @param {angular.$animateProvider} $animateProvider animate provider.\n   */\n  function($animateProvider) {\n    $animateProvider.classNameFilter(/gmf-animatable/);\n  }\n]);\n\n\nexports.value('gmfDisplayquerywindowTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfDisplayquerywindowTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/query/windowComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/query/windowComponent', require('./windowComponent.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfDisplayquerywindowTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfDisplayquerywindowTemplateUrl($element, $attrs, gmfDisplayquerywindowTemplateUrl) {\n  return gmfDisplayquerywindowTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component to display results of the {@link ngeo.queryResult}\n * and shows related features on the map using the {@link ngeo.map.FeatureOverlayMgr}.\n *\n * You can override the default component's template by setting the\n * value `gmfDisplayquerywindowTemplateUrl`.\n *\n * Features displayed on the map use a default style but you can override these\n * styles by passing ol.style.Style objects as attributes of this component.\n *\n * Example:\n *\n *      <gmf-displayquerywindow\n *        gmf-displayquerywindow-featuresstyle=\"ctrl.styleForAllFeatures\"\n *        gmf-displayquerywindow-selectedfeaturestyle=\"ctrl.styleForTheCurrentFeature\">\n *      </gmf-displayquerywindow>\n *\n * @htmlAttribute {ol.style.Style} gmf-displayquerywindow-featuresstyle A style\n *     object for all features from the result of the query.\n * @htmlAttribute {ol.style.Style} selectedfeaturestyle A style\n *     object for the current displayed feature.\n * @htmlAttribute {boolean=} defaultcollapsed If the query result window is\n *     collapsed.\n * @htmlAttribute {boolean} desktop If the component is used in the desktop\n *     application.\n * @htmlAttribute {boolean} showunqueriedlayers If also layers, that have not\n *     been queried for the last query, should be shown in the filter.\n *\n * @ngdoc component\n * @ngname gmfDisplayquerywindow\n */\nexports.component_ = {\n  controller: 'GmfDisplayquerywindowController as ctrl',\n  bindings: {\n    'draggableContainment': '<?gmfDisplayquerywindowDraggableContainment',\n    'featuresStyleFn': '&gmfDisplayquerywindowFeaturesstyle',\n    'selectedFeatureStyleFn': '&gmfDisplayquerywindowSelectedfeaturestyle',\n    'defaultCollapsedFn': '&?gmfDisplayquerywindowDefaultcollapsed',\n    'desktop': '=gmfDisplayquerywindowDesktop',\n    'showUnqueriedLayers': '=gmfDisplayquerywindowShowunqueriedlayers'\n  },\n  templateUrl: gmfDisplayquerywindowTemplateUrl\n};\n\n\nexports.component('gmfDisplayquerywindow', exports.component_);\n\n\n/**\n * @param {!jQuery} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.QueryResult} ngeoQueryResult ngeo query result.\n * @param {!ngeo.query.MapQuerent} ngeoMapQuerent ngeo map querent service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisplayquerywindowController\n */\nexports.Controller_ = function($element, $scope, ngeoQueryResult, ngeoMapQuerent,\n  ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {Element|string}\n   * @export\n   */\n  this.draggableContainment;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.desktop = false;\n\n  /**\n   * Is the window currently collapsed?\n   * When used for Desktop, it is shown non-collapsed.\n   * @type {boolean}\n   * @export\n   */\n  this.collapsed = !this.desktop;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.showUnqueriedLayers_ = false;\n\n  /**\n   * Object that is used to filter the source list in the template.\n   * @type {Object}\n   * @export\n   */\n  this.sourcesFilter = {'queried': true};\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @export\n   */\n  this.ngeoQueryResult = {\n    sources: [],\n    total: 0,\n    pending: false\n  };\n\n  /**\n   * @type {!ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.selectedSource = null;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.highlightFeatures_ = new olCollection();\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.source = null;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature = null;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.currentResult = -1;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isNext = true;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.animate = 0;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.open = false;\n\n  /**\n   * @const {!jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  $scope.$watchCollection(\n    () => ngeoQueryResult,\n    (newQueryResult, oldQueryResult) => {\n      this.updateQueryResult_(newQueryResult);\n      if (newQueryResult.total > 0) {\n        this.show();\n      } else if (oldQueryResult !== newQueryResult) {\n        this.close();\n      }\n    });\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.draggableContainment = this.draggableContainment || 'document';\n  this.desktop = this.desktop;\n  this.collapsed = this['defaultCollapsedFn'] ?\n    this['defaultCollapsedFn']() === true : !this.desktop;\n\n  this.showUnqueriedLayers_ = this['showUnqueriedLayers'] ?\n    this['showUnqueriedLayers'] === true : false;\n\n  this.sourcesFilter = this.showUnqueriedLayers_ ? {} : {'queried': true};\n\n  const featuresOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  featuresOverlay.setFeatures(this.features_);\n  const featuresStyle = this['featuresStyleFn']();\n  if (featuresStyle !== undefined) {\n    googAsserts.assertInstanceof(featuresStyle, olStyleStyle);\n    featuresOverlay.setStyle(featuresStyle);\n  }\n\n  const highlightFeaturesOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  highlightFeaturesOverlay.setFeatures(this.highlightFeatures_);\n  let highlightFeatureStyle = this['selectedFeatureStyleFn']();\n  if (highlightFeatureStyle !== undefined) {\n    googAsserts.assertInstanceof(highlightFeatureStyle, olStyleStyle);\n  } else {\n    const fill = new olStyleFill({color: [255, 0, 0, 0.6]});\n    const stroke = new olStyleStroke({color: [255, 0, 0, 1], width: 2});\n    highlightFeatureStyle = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke\n    });\n  }\n  highlightFeaturesOverlay.setStyle(highlightFeatureStyle);\n\n  if (this.desktop) {\n    this.element_.find('.gmf-displayquerywindow .windowcontainer').draggable({\n      'cancel': 'input,textarea,button,select,option,tr',\n      'containment': this.draggableContainment\n    });\n    this.element_.find('.gmf-displayquerywindow .windowcontainer').resizable({\n      'minHeight': 240,\n      'minWidth': 240\n    });\n  }\n};\n\n\n/**\n * Remove current displayed results then get new results from the\n * ngeoQueryResult service. Display all results on the map and display,\n * highlight the first feature.\n * @export\n */\nexports.Controller_.prototype.show = function() {\n  this.clear();\n  this.updateFeatures_();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateFeatures_ = function() {\n  this.setCurrentResult_(0, false);\n  if (this.source !== null) {\n    this.collectFeatures_();\n    this.highlightCurrentFeature_();\n    this.open = true;\n  }\n};\n\n/**\n * Select a source and a feature depending of the given position.\n * @param {number} position The index of the feature. If the position is bigger\n * than the length of the first source, get it in the next source. Etc.\n * @param {boolean} setHighlight True to set the highlight automatically.\n * @return {boolean} True if result has changed. False else.\n * @private\n */\nexports.Controller_.prototype.setCurrentResult_ = function(\n  position, setHighlight) {\n  let hasChanged = false;\n  if (position !== this.currentResult) {\n    let i, source, features;\n    const lastFeature = this.feature;\n    const sources = this.ngeoQueryResult.sources;\n    this.currentResult = position;\n    for (i = 0; i < sources.length; i++) {\n      source = sources[i];\n      if (this.selectedSource !== null && this.selectedSource !== source) {\n        // when filtering on a source, only consider features of the selected source\n        continue;\n      }\n      features = source.features;\n      if (position >= features.length) {\n        position -= features.length;\n      } else {\n        this.source = source;\n        this.feature = source.features[position];\n        hasChanged = true;\n        break;\n      }\n    }\n    if (setHighlight) {\n      this.highlightCurrentFeature_(lastFeature);\n    }\n  }\n  return hasChanged;\n};\n\n\n/**\n * Select the logical previous source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.previous = function() {\n  let position = this.currentResult - 1;\n  if (position < 0) {\n    position = this.getResultLength() - 1;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(false);\n  }\n};\n\n\n/**\n * Select the logical next source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.next = function() {\n  let position = this.currentResult + 1;\n  const positionMax = this.getResultLength() - 1;\n  if (position > positionMax) {\n    position = 0;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(true);\n  }\n};\n\n\n/**\n * Remove features without properties from the query result.\n * @param {ngeox.QueryResult} queryResult ngeo query result.\n * @private\n */\nexports.Controller_.prototype.updateQueryResult_ = function(queryResult) {\n  this.ngeoQueryResult.total = 0;\n  this.ngeoQueryResult.sources.length = 0;\n  for (let i = 0; i < queryResult.sources.length; i++) {\n    const source = queryResult.sources[i];\n    source.features = source.features.filter((feature) => {\n      googAsserts.assert(feature);\n      return !olObj.isEmpty(ngeoMiscFeatureHelper.getFilteredFeatureValues(feature));\n    });\n    this.ngeoQueryResult.sources.push(source);\n    this.ngeoQueryResult.total += source.features.length;\n  }\n};\n\n/**\n * Get the total count of features in the result of the query. If a source\n * has been select, only the number of features of that source are returned.\n * @return {number} Total number of features.\n * @export\n */\nexports.Controller_.prototype.getResultLength = function() {\n  if (this.selectedSource === null) {\n    return this.ngeoQueryResult.total;\n  } else {\n    return this.selectedSource.features.length;\n  }\n};\n\n\n/**\n * @return {boolean} If the first result is active.\n * @export\n */\nexports.Controller_.prototype.isFirst = function() {\n  return this.currentResult == 0;\n};\n\n\n/**\n * @return {boolean} If the last result is active.\n * @export\n */\nexports.Controller_.prototype.isLast = function() {\n  return this.currentResult == this.getResultLength() - 1;\n};\n\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * @return {Object?} Filtered properties of the current feature or null.\n * @export\n */\nexports.Controller_.prototype.getFeatureValues = function() {\n  if (!this.feature) {\n    return null;\n  }\n  return ngeoMiscFeatureHelper.getFilteredFeatureValues(this.feature);\n};\n\n\n/**\n * Special function that's used to set the \"animation\" value after to set the\n * \"isNext\" value. The aim is to wait on Angular to add a class (corresponding\n * to \"isNext\") on the DOM before to set the \"animation\" value and do the\n * animation.\n * @param {boolean} isNext used to indicate if the user wants to see the next\n * or the previous result.\n * @private\n */\nexports.Controller_.prototype.animate_ = function(isNext) {\n  this.isNext = isNext;\n  this.animate++;\n};\n\n\n/**\n * Collect all features in the queryResult object.\n * @private\n */\nexports.Controller_.prototype.collectFeatures_ = function() {\n  const sources = this.ngeoQueryResult.sources;\n  this.features_.clear();\n  for (let i = 0; i < sources.length; i++) {\n    const source = sources[i];\n    if (this.selectedSource !== null && this.selectedSource !== source) {\n      // when filtering on a source, only add features of the selected source\n      continue;\n    }\n    const features = source.features;\n    for (let ii = 0; ii < features.length; ii++) {\n      this.features_.push(features[ii]);\n    }\n  }\n};\n\n\n/**\n * Highlight the current displayed feature.\n * @param {ol.Feature=} opt_lastFeature last highlighted feature. Require if\n * it exists because it must be added to the 'non-selected' features collection.\n * @private\n */\nexports.Controller_.prototype.highlightCurrentFeature_ =\nfunction(opt_lastFeature) {\n  this.highlightFeatures_.clear();\n  this.features_.remove(this.feature);\n  this.highlightFeatures_.push(this.feature);\n  if (opt_lastFeature !== undefined) {\n    this.features_.push(opt_lastFeature);\n  }\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.close = function() {\n  this.open = false;\n  this.clear();\n  this.ngeoMapQuerent_.clear();\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.feature = null;\n  this.source = null;\n  this.currentResult = -1;\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n  this.selectedSource = null;\n};\n\n\n/**\n * @param {ngeox.QueryResultSource} source The source to select.\n * @export\n */\nexports.Controller_.prototype.setSelectedSource = function(source) {\n  if (source !== null && source.features.length <= 0) {\n    // sources with no results can not be selected\n    return;\n  }\n  this.clear();\n  this.selectedSource = source;\n  this.updateFeatures_();\n};\n\n\nexports.controller('GmfDisplayquerywindowController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.query.extraModule\n */\nimport gmfQueryGridComponent from 'gmf/query/gridComponent.js';\nimport gmfQueryWindowComponent from 'gmf/query/windowComponent.js';\n\nimport './grid.less';\nimport './window.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryExtraModule', [\n  gmfQueryGridComponent.name,\n  gmfQueryWindowComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.search.module\n */\nimport gmfSearchComponent from 'gmf/search/component.js';\nimport gmfSearchFulltextSearch from 'gmf/search/FulltextSearch.js';\n\nimport './search.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfSearchModule', [\n  gmfSearchComponent.name,\n  gmfSearchFulltextSearch.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.selectorComponent\n */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport * as olEvents from 'ol/events.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeSelectorComponent', [\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/theme/selectorComponent', require('./selectorComponent.html'));\n});\n\n\nexports.value('gmfThemeSelectorTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfThemeSelectorTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/theme/selectorComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfThemeSelectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfThemeSelectorTemplateUrl($attrs, gmfThemeSelectorTemplateUrl) {\n  return gmfThemeSelectorTemplateUrl($attrs);\n}\n\n\n/**\n * Note that this component works with the {@link gmf.layertree.TreeManager}.\n * Setting the theme will update the \"tree\" object of\n * this {@link gmf.layertree.TreeManager}.\n *\n * Example:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span ng-if=\"mainCtrl.gmfThemeManager.modeFlush\">\n *            <span translate>Theme:</span>\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.getThemeName()\" translate>Loading...</b>\n *            <b ng-if=\"mainCtrl.gmfThemeManager.getThemeName()\">{{mainCtrl.gmfThemeManager.getThemeName()|translate}}</b>\n *          </span>\n *          <span ng-if=\"!mainCtrl.gmfThemeManager.modeFlush\">\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.themeName\" translate>Themes</b>\n *          </span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *\n * The theme selector can operate in a 'flush' (as above) or 'add' mode. For more information\n * about these modes, refer to the documentation of {@link gmf.layertree.TreeManager}.\n *\n * Example in 'add' mode:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span translate>Themes</span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('gmfTreeManagerModeFlush', false);\n *        })();\n *      </script>\n *\n * @htmlAttribute {Function} gmf-themeselector-filter The themes filter.\n *\n * @type {!angular.Component}\n */\nexports.component_ = {\n  bindings: {\n    'filter': '<gmfThemeselectorFilter'\n  },\n  controller: 'gmfThemeselectorController',\n  templateUrl: gmfThemeSelectorTemplateUrl\n};\n\nexports.component('gmfThemeselector', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {gmf.theme.Manager} gmfThemeManager Tree manager service.\n * @param {gmf.theme.Themes} gmfThemes Themes service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfThemeselectorController\n */\nexports.Controller_ = function($scope, gmfThemeManager, gmfThemes) {\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = gmfThemeManager;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {Array.<Object>}\n   * @export\n   */\n  this.themes;\n\n  /**\n   * @type {Function|undefined}\n   * @export\n   */\n  this.filter;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(this.gmfThemes_, 'change', this.setThemes_, this));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n\n};\n\n/**\n * Store the loaded themes locally applying a filter (if any), then set the\n * current theme.\n * @private\n */\nexports.Controller_.prototype.setThemes_ = function() {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    // Keep only the themes dedicated to the theme switcher\n    this.themes = this.filter ? themes.filter(this.filter) : themes;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfTheme} theme Theme.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.Controller_.prototype.setTheme = function(theme, opt_silent) {\n  if (theme) {\n    this.gmfThemeManager.addTheme(theme, opt_silent);\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('gmfThemeselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.module\n */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeSelectorComponent from 'gmf/theme/selectorComponent.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeModule', [\n  gmfThemeSelectorComponent.name,\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.displaywindowComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\nimport 'font-awesome/css/font-awesome.css';\nimport 'jquery-ui/ui/widgets/resizable.js';\nimport 'jquery-ui/ui/widgets/draggable.js';\nimport 'angular-sanitize';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMessageDisplaywindowComponent', [\n  'ngSanitize',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/message/displaywindowComponent', require('./displaywindowComponent.html'));\n});\n\n\nexports.value('ngeoMessageDisplaywindowTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoMessageDisplaywindowTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/message/displaywindowComponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoMessageDisplaywindowTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoMessageDisplaywindowTemplateUrl($attrs, ngeoMessageDisplaywindowTemplateUrl) {\n  return ngeoMessageDisplaywindowTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!jQuery} $element Element.\n   * @param {!angular.$sce} $sce Angular sce service.\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!angular.$compile} $compile The compile provider.\n   * @private\n   * @ngInject\n   * @ngdoc controller\n   * @ngname ngeoDisplaywindowComponentController\n   */\n  constructor($element, $sce, $scope, $compile) {\n\n    // === Binding Properties ===\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.clearOnClose;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.content = null;\n\n    /**\n     * @type {?string}\n     */\n    this.contentTemplate = null;\n\n    /**\n     * @type {?angular.Scope}\n     */\n    this.contentScope = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.draggable;\n\n    /**\n     * @type {Element|string}\n     * @export\n     */\n    this.draggableContainment;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.desktop;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.height = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.open;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.resizable;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.title = null;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.url = null;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.width = null;\n\n\n    // === Injected Properties ===\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {!angular.$sce}\n     * @private\n     */\n    this.sce_ = $sce;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {angular.$compile}\n     * @private\n     */\n    this.compile_ = $compile;\n  }\n\n  /**\n   * Called on initialization of the component.\n   */\n  $onInit() {\n\n    // Initialize binding properties\n    this.clearOnClose = this.clearOnClose !== false;\n    this.content = this.content || null;\n    this.contentTemplate = this.contentTemplate || null;\n    this.contentScope = this.contentScope || null;\n    this.desktop = this.desktop !== false;\n    this.draggableContainment = this.draggableContainment || 'document';\n    this.open = this.open === true;\n\n    this.draggable = this.draggable !== undefined ?\n      this.draggable : this.desktop;\n    this.resizable = this.resizable !== undefined ?\n      this.resizable : this.desktop;\n\n    // Draggable\n    if (this.draggable) {\n      this.element_.find('.ngeo-displaywindow .windowcontainer').draggable({\n        'containment': this.draggableContainment,\n        'handle': 'div.header'\n      });\n    }\n\n    // Resizable\n    if (this.resizable) {\n      this.element_.find('.ngeo-displaywindow .windowcontainer').resizable({\n        'minHeight': 240,\n        'minWidth': 240\n      });\n    }\n\n    if (this.contentTemplate) {\n      const scope = googAsserts.assert(this.contentScope || this.scope_);\n      const compiled = this.compile_(this.contentTemplate)(scope);\n      const displayWindow = this.element_.find('.ngeo-displaywindow .windowcontainer .animation-container');\n      displayWindow.append(/** @type {?} */ (compiled));\n    }\n  }\n\n  /**\n   * @export\n   */\n  close() {\n    this.open = false;\n    if (this.clearOnClose) {\n      this.clear_();\n    }\n  }\n\n  /**\n   * @return {!Object.<string, string>} CSS style when using width/height\n   * @export\n   */\n  get style() {\n    return {\n      'height': this.height || '240px',\n      'width': this.width || '240px'\n    };\n  }\n\n  /**\n   * @return {string|undefined} Trusted url.\n   * @export\n   */\n  get urlTrusted() {\n    if (this.url) {\n      return /** @type {string} */ (this.sce_.trustAsResourceUrl(this.url));\n    }\n  }\n\n  /**\n   * @export\n   */\n  clear_() {\n    this.content = null;\n    this.height = null;\n    this.title = null;\n    this.url = null;\n    this.width = null;\n  }\n};\n\n\n/**\n * The `ngeo-displaywindow` component is an alternative to the `ngeo.message.Popup`.\n * What they have in common:\n *\n * - support title\n * - support url to be shown in an iframe\n * - support plain HTML content\n * - support sizing, i.e. height and width.\n * - support being opened/closed\n *\n * The differences with the `ngeo.message.Popup` are:\n *\n * - it supports being dragged\n * - it supports being resized\n * - support angularjs template content\n *\n * Example:\n *      <ngeo-displaywindow\n *        class=\"window1\"\n *        url=\"::ctrl.window1Content\"\n *        desktop=\"::false\"\n *        open=\"::true\"\n *        title=\"'Window 1 - The simplest window (close kills it)'\">\n *      </ngeo-displaywindow>\n *\n * @htmlAttribute {boolean=} ngeo-displaywindow-clear-on-close Whether to clear the content on close or not.\n * @htmlAttribute {string=} ngeo-displaywindow-content The html content. If not provided, you must provide\n *     an url.\n * @htmlAttribute {string=} ngeo-displaywindow-content-template AngularJS template. It gets compiled during runtime\n * with the supplied scope (ngeo-displaywindow-content-scope).\n * @htmlAttribute {angular.Scope=} ngeo-displaywindow-content-scope Scope used for ngeo-displaywindow-content-template.\n * @htmlAttribute {boolean=} ngeo-displaywindow-desktop If true, the window is draggable and resizable. If\n *     not set, you must set manually both parameter.\n * @htmlAttribute {boolean=} ngeo-displaywindow-draggable Whether the window is draggable or not.\n * @htmlAttribute {string=} ngeo-displaywindow-draggable-containment The zone (CSS selector) where the window\n *     is authorized to be dragged.\n * @htmlAttribute {string=} ngeo-displaywindow-height The default height of the window.\n * @htmlAttribute {boolean=} ngeo-displaywindow-open Whether the window is open or not.\n * @htmlAttribute {string=} ngeo-displaywindow-title The html title of the window.\n * @htmlAttribute {string=} ngeo-displaywindow-url The URL to open in an iframe, in the window. The content\n *     attribute must not be provided.\n * @htmlAttribute {string=} ngeo-displaywindow-width The default width of the window.\n * @ngdoc component\n * @ngname ngeoDisplaywindow\n */\nexports.component('ngeoDisplaywindow', {\n  bindings: {\n    'clearOnClose': '<?',\n    'content': '=?',\n    'contentTemplate': '<?',\n    'contentScope': '<?',\n    'desktop': '<?',\n    'draggable': '<?',\n    'draggableContainment': '<?',\n    'height': '=?',\n    'open': '=?',\n    'resizable': '<?',\n    'title': '=?',\n    'url': '=?',\n    'width': '=?'\n  },\n  controller: exports.Controller_,\n  templateUrl: ngeoMessageDisplaywindowTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.controlComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport olMap from 'ol/Map.js';\nimport olControlControl from 'ol/control/Control.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoControl', []);\n\n\n/**\n * Provides a directive that can be used to add a control to the map\n * using a DOM element.\n *\n * Example:\n *\n *     <div ngeo-control=\"ctrl.control\" ngeo-control-map=\"ctrl.map\"></div>\n *\n * The expression passed to \"ngeo-control\" should evaluate to a control\n * instance, and the expression passed to \"ngeo-control-map\" should\n * evaluate to a map instance.\n *\n * See our live example: [../examples/control.html](../examples/control.html)\n *\n * @htmlAttribute {ol.Map} ngeo-control-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoControl\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const control = /** @type {ol.control.Control} */\n              (scope.$eval(attrs['ngeoControl']));\n      googAsserts.assertInstanceof(control, olControlControl);\n\n      const map = /** @type {ol.Map} */\n              (scope.$eval(attrs['ngeoControlMap']));\n      googAsserts.assertInstanceof(map, olMap);\n\n      control.setTarget(element[0]);\n      map.addControl(control);\n    }\n  };\n};\n\n\nexports.directive('ngeoControl', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.filereaderComponent\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFilereader', []);\n\n/**\n * This directive is to used on an input file element. When a file is selected\n * the directive uses the browser `FileReader` API to read the file. The file\n * content is provided to the directive user through the assignable expression.\n * Only works for text files (`readAsText` used for reading the file). And does\n * not work in Internet Explorer 9.\n *\n * Example:\n *\n *      <input type=\"file\" ngeo-filereader=\"ctrl.fileContent\"\n *        ngeo-filereader-supported=\"ctrl.supported\"/>\n *\n * See our live example: [../examples/importfeatures.html](../examples/importfeatures.html)\n *\n * @htmlAttribute {string} ngeo-filereader The content of the file read.\n * @htmlAttribute {boolean=} ngeo-filereader-supported Whether the FileReader API is supported.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoFilereader\n */\nexports.component_ = function($window) {\n  return {\n    restrict: 'A',\n    scope: {\n      'fileContent': '=ngeoFilereader',\n      'supported': '=?ngeoFilereaderSupported'\n    },\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      const supported = 'FileReader' in $window;\n      scope['supported'] = supported;\n      if (!supported) {\n        return;\n      }\n      element.on('change', (changeEvent) => {\n        /** @type {!FileReader} */\n        const fileReader = new $window.FileReader();\n        fileReader.onload = (\n          /**\n                 * @param {!ProgressEvent} evt Event.\n                 */\n          function(evt) {\n            scope.$apply(() => {\n              scope['fileContent'] = evt.target.result;\n            });\n          });\n        fileReader.readAsText(changeEvent.target.files[0]);\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoFilereader',\n  exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.getBrowserLanguage\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGetBrowserLanguage', []);\n\n\n/**\n * Provides a function that returns the most appropriate 2-letter\n * language code depending on the list of available languages and the browser\n * languages settings.\n *\n * @param {angular.$window} $window Angular $window service.\n * @return {ngeox.miscGetBrowserLanguage} The \"GetBrowserLanguage\" function.\n *\n * @ngdoc service\n * @ngname ngeoGetBrowserLanguage\n * @ngInject\n */\nexports.factory_ = function($window) {\n  return (\n    /**\n     * @param {Array.<string>} availableLanguages Available languages.\n     * @return {string} The \"best\" language code.\n     */\n    function(availableLanguages) {\n      const nav = $window.navigator;\n      let browserLanguages = nav.languages || nav.language ||\n            nav.browserLanguage || nav.systemLanguage || nav.userLanguage;\n      if (!Array.isArray(browserLanguages)) {\n        browserLanguages = [browserLanguages];\n      }\n      browserLanguages = browserLanguages.map(item => item.substring(0, 2));\n      // remove duplicated language codes\n      browserLanguages = browserLanguages.filter((item, index, arr) => arr.indexOf(item) == index);\n      const supportedLanguages = browserLanguages.filter(item => availableLanguages.indexOf(item) != -1);\n      return supportedLanguages[0];\n    });\n};\n\nexports.factory('ngeoGetBrowserLanguage', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.extraModule\n */\nimport ngeoMiscAutoProjection from 'ngeo/misc/AutoProjection.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\nimport ngeoMiscControlComponent from 'ngeo/misc/controlComponent.js';\nimport ngeoMiscDatepickerComponent from 'ngeo/misc/datepickerComponent.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoMiscFilereaderComponent from 'ngeo/misc/filereaderComponent.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoMiscGetBrowserLanguage from 'ngeo/misc/getBrowserLanguage.js';\nimport ngeoMiscSortableComponent from 'ngeo/misc/sortableComponent.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMiscExtraModule', [\n  ngeoMiscAutoProjection.module.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscControlComponent.name,\n  ngeoMiscDatepickerComponent.name,\n  ngeoMiscDebounce.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscFile.module.name,\n  ngeoMiscFilereaderComponent.name,\n  ngeoMiscFilters.name,\n  ngeoMiscGetBrowserLanguage.name,\n  ngeoMiscSortableComponent.name,\n  ngeoMiscTime.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.query.mapQueryComponent\n */\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport * as olEvents from 'ol/events.js';\n\nconst exports = angular.module('ngeoMapQuery', [\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\n/**\n * Provides a \"map query\" directive.\n *\n * This directive is responsible of binding a map and the ngeo query service\n * together. While active, clicks made on the map are listened by the directive\n * and a request gets issued to the query service.\n *\n * This directive doesn't require to be rendered in a visible DOM element, but\n * it could be used with a ngeo-btn to manage the activation of the directive.\n * See below an example without any use of UI:\n *\n * Example:\n *\n *      <span\n *        ngeo-map-query=\"\"\n *        ngeo-map-query-map=\"::ctrl.map\"\n *        ngeo-map-query-active=\"ctrl.queryActive\"\n *        ngeo-map-query-autoclear=\"ctrl.queryAutoClear\">\n *      </span>\n *\n * See our live example: [../examples/mapquery.html](../examples/mapquery.html)\n *\n * @param {ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n * @param {angular.$injector} $injector Main injector.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoMapQuery\n */\nexports.directive_ = function(ngeoMapQuerent, $injector) {\n  return {\n    restrict: 'A',\n    scope: false,\n    link: (scope, elem, attrs) => {\n      const map = scope.$eval(attrs['ngeoMapQueryMap']);\n      let clickEventKey_ = null;\n      let pointerMoveEventKey_ = null;\n\n      /**\n       * Called when the map is clicked while this controller is active. Issue\n       * a request to the query service using the coordinate that was clicked.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handleMapClick_ = function(evt) {\n        const coordinate = evt.coordinate;\n        ngeoMapQuerent.issue({\n          coordinate,\n          map\n        });\n      };\n\n      /**\n       * Called when the pointer is moved while this controller is active.\n       * Change the mouse pointer when hovering a non-transparent pixel on the\n       * map.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handlePointerMove_ = function(evt) {\n        if (!evt.dragging) {\n          const pixel = map.getEventPixel(evt.originalEvent);\n          const queryable = function(layer) {\n            const visible = layer.get('visible');\n            const sourceids = layer.get('querySourceIds');\n            return visible && !!sourceids;\n          };\n          const hit = map.forEachLayerAtPixel(pixel, () => true, undefined, queryable);\n          map.getTargetElement().style.cursor = hit ? 'pointer' : '';\n        }\n      };\n\n      /**\n       * Listen to the map events.\n       */\n      const activate_ = function() {\n        clickEventKey_ = olEvents.listen(map, 'singleclick', handleMapClick_);\n        const queryOptions = /** @type {ngeox.QueryOptions} */ (\n          $injector.has('ngeoQueryOptions') ? $injector.get('ngeoQueryOptions') : {}\n        );\n        if (queryOptions.cursorHover) {\n          pointerMoveEventKey_ = olEvents.listen(map, 'pointermove', handlePointerMove_);\n        }\n      };\n\n      /**\n       * Unlisten the map events.\n       */\n      const deactivate_ = function() {\n        if (clickEventKey_ !== null) {\n          olEvents.unlistenByKey(clickEventKey_);\n          clickEventKey_ = null;\n        }\n        if (pointerMoveEventKey_ !== null) {\n          olEvents.unlistenByKey(pointerMoveEventKey_);\n          pointerMoveEventKey_ = null;\n        }\n        if (scope.$eval(attrs['ngeoMapQueryAutoclear']) !== false) {\n          ngeoMapQuerent.clear();\n        }\n      };\n\n      // watch 'active' property -> activate/deactivate accordingly\n      scope.$watch(attrs['ngeoMapQueryActive'],\n        (newVal, oldVal) => {\n          if (newVal) {\n            activate_();\n          } else {\n            deactivate_();\n          }\n        }\n      );\n    }\n  };\n};\n\nexports.directive('ngeoMapQuery', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.WfsPermalink\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olExtent from 'ol/extent.js';\nimport * as olFormatFilter from 'ol/format/filter.js';\nimport olFormatWFS from 'ol/format/WFS.js';\n\n/**\n * WFS permalink service that can be used to load features with a WFS\n * GetFeature request given query parameters.\n *\n * Resulting features are then highlighted and\n * the map is zoomed to the nearest map extent.\n *\n * Parameters:\n *\n * - ``wfs_layer`` tells what layer will be queried\n * - ``wfs_showFeatures`` (boolean) tells if the features should be\n *   highlighted and listed (when true) or if the map should only be\n *   recentered on the features (when false). Default is true.\n * - other parameters will be considered as WFS attribute/values filters and\n *   must be of the form:\n *   ``wfs_<layer attribute name>=<a comma-separated list of values>``\n *\n * Example:\n * http://example.com?wfs_layer=parcels&wfs_city=Oslo&wfs_number=12,34,56\n * will load parcels #12, 34 and 56 of the city of Oslo.\n *\n * It is possible to define several groups of filtering parameters by:\n *\n * - adding a ``wfs_ngroups`` parameter telling how many groups are defined\n * - prefixing all filtering parameters by the number of each group,\n *   starting at 0. For instance ``wfs_0_<layer attribute name>``\n *\n * Example:\n * http://example.com?wfs_layer=parcels&wfs_ngroups=2\n * &wfs_0_city=Oslo&wfs_0_number=12,34,56&wfs_1_city=Paris&wfs_1_number=78,90\n * will load parcels #12, 34 and 56 of the city of Oslo as well as\n * parcels #78 and 90 of the city of Paris.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular $http service.\n * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n * @param {ngeox.WfsPermalinkOptions} ngeoWfsPermalinkOptions The options to\n *     configure the ngeo wfs permalink service with.\n * @ngdoc service\n * @ngname ngeoWfsPermalink\n * @ngInject\n */\nconst WfsPermalinkService = function($http, ngeoQueryResult, ngeoWfsPermalinkOptions) {\n\n  const options = ngeoWfsPermalinkOptions;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = options.url;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxFeatures_ = options.maxFeatures !== undefined ? options.maxFeatures : 50;\n\n  /**\n   * @type {Object<string, ngeox.WfsType>}\n   * @private\n   */\n  this.wfsTypes_ = {};\n\n  googAsserts.assertArray(options.wfsTypes, 'wfsTypes is not correctly set');\n  options.wfsTypes.forEach((wfsType) => {\n    this.wfsTypes_[wfsType.featureType] = wfsType;\n  });\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.defaultFeatureNS_ = options.defaultFeatureNS;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.defaultFeaturePrefix_ = options.defaultFeaturePrefix;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.pointRecenterZoom_ = options.pointRecenterZoom;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @private\n   */\n  this.result_ = ngeoQueryResult;\n};\n\n\n/**\n * Clear the results.\n * @export\n */\nWfsPermalinkService.prototype.clear = function() {\n  this.clearResult_();\n};\n\n\n/**\n * Build a WFS GetFeature request for the given query parameter data, send the\n * request and add the received features to {@link ngeox.QueryResult}.\n *\n * @param {ngeox.WfsPermalinkData} queryData Query data for the WFS request.\n * @param {ol.Map} map The ol3 map object to get the current projection from.\n * @export\n */\nWfsPermalinkService.prototype.issue = function(queryData, map) {\n  googAsserts.assert(this.url_,\n    'url is not set. to use the wfs permalink service, ' +\n      'set the value `ngeoWfsPermalinkOptions`');\n  this.clearResult_();\n\n  const typeName = queryData.wfsType;\n  if (!this.wfsTypes_.hasOwnProperty(typeName)) {\n    return;\n  }\n  const wfsType = this.wfsTypes_[typeName];\n\n  const filters = this.createFilters_(queryData.filterGroups);\n  if (filters === null) {\n    return;\n  }\n\n  this.issueRequest_(wfsType, filters, map, queryData.showFeatures);\n};\n\n\n/**\n * @param {ngeox.WfsType} wfsType Type.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {ol.Map} map The ol3 map object to get the current projection from.\n * @param {boolean} showFeatures Show features or only zoom to feature extent?\n * @private\n */\nWfsPermalinkService.prototype.issueRequest_ = function(wfsType, filter, map, showFeatures) {\n  const wfsFormat = new olFormatWFS();\n  const featureRequestXml = wfsFormat.writeGetFeature({\n    srsName: map.getView().getProjection().getCode(),\n    featureNS: (wfsType.featureNS !== undefined) ?\n      wfsType.featureNS : this.defaultFeatureNS_,\n    featurePrefix: (wfsType.featurePrefix !== undefined) ?\n      wfsType.featurePrefix : this.defaultFeaturePrefix_,\n    featureTypes: [wfsType.featureType],\n    outputFormat: 'GML3',\n    filter: filter,\n    maxFeatures: this.maxFeatures_\n  });\n\n  const featureRequest = new XMLSerializer().serializeToString(featureRequestXml);\n  const config = {\n    headers: {'Content-Type': 'text/xml; charset=UTF-8'}\n  };\n  this.$http_.post(this.url_, featureRequest, config).then((response) => {\n    const features = wfsFormat.readFeatures(response.data);\n    if (features.length == 0) {\n      return;\n    }\n\n    // zoom to features\n    const size = map.getSize();\n    if (size !== undefined) {\n      const maxZoom = this.pointRecenterZoom_;\n      const padding = [10, 10, 10, 10];\n      map.getView().fit(this.getExtent_(features), {size, maxZoom, padding});\n    }\n\n    // then show if requested\n    if (showFeatures) {\n      const resultSource = /** @type {ngeox.QueryResultSource} */ ({\n        'features': features,\n        'id': wfsType.featureType,\n        'identifierAttributeField': wfsType.label,\n        'label': wfsType.featureType,\n        'pending': false\n      });\n\n      this.result_.sources.push(resultSource);\n      this.result_.total = features.length;\n    }\n  });\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @return {ol.Extent} The extent of all features.\n * @private\n */\nWfsPermalinkService.prototype.getExtent_ = function(features) {\n  return features.reduce((extent, feature) => olExtent.extend(extent, feature.getGeometry().getExtent()), olExtent.createEmpty());\n};\n\n/**\n * Create OGC filters for the filter groups extracted from the query params.\n *\n * @param {Array.<ngeox.WfsPermalinkFilterGroup>} filterGroups Filter groups.\n * @return {ol.format.filter.Filter} OGC filters.\n * @private\n */\nWfsPermalinkService.prototype.createFilters_ = function(filterGroups) {\n  if (filterGroups.length == 0) {\n    return null;\n  }\n  const f = olFormatFilter;\n  const createFiltersForGroup = function(filterGroup) {\n    const filters = filterGroup.filters.map((filterDef) => {\n      const condition = filterDef.condition;\n      if (Array.isArray(condition)) {\n        return WfsPermalinkService.or_(condition.map(cond => f.equalTo(filterDef.property, cond)));\n      } else {\n        return f.equalTo(filterDef.property, filterDef.condition);\n      }\n    });\n    return WfsPermalinkService.and_(filters);\n  };\n  return WfsPermalinkService.or_(filterGroups.map(createFiltersForGroup));\n};\n\n\n/**\n * Join a list of filters with `and(...)`.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.and_ = function(filters) {\n  return WfsPermalinkService.joinFilters_(filters, olFormatFilter.and);\n};\n\n\n/**\n * Join a list of filters with `or(...)`.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.or_ = function(filters) {\n  return WfsPermalinkService.joinFilters_(filters, olFormatFilter.or);\n};\n\n\n/**\n * Join a list of filters with a given join function.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @param {function(!ol.format.filter.Filter, !ol.format.filter.Filter):\n *    ol.format.filter.Filter} joinFn The function to join two filters.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.joinFilters_ = function(filters, joinFn) {\n  return filters.reduce((combinedFilters, currentFilter) => {\n    if (combinedFilters === null) {\n      return currentFilter;\n    } else {\n      googAsserts.assert(currentFilter !== null);\n      return joinFn(combinedFilters, currentFilter);\n    }\n  }, null);\n};\n\n\n/**\n * Clear every features for all result sources and reset the total counter\n * as well.\n * @private\n */\nWfsPermalinkService.prototype.clearResult_ = function() {\n  this.result_.total = 0;\n  this.result_.sources.forEach((source) => {\n    source.features.length = 0;\n  });\n};\n\n\n/**\n * @type {!angular.Module}\n */\nWfsPermalinkService.module = angular.module('ngeoWfsPermalink', [\n  // FIXME add dependencies\n]);\n\n\n/**\n * Value that is supposed to be set in applications to enable the WFS\n * permalink functionality.\n */\nWfsPermalinkService.module.value('ngeoWfsPermalinkOptions',\n  /** @type {ngeox.WfsPermalinkOptions} */ ({\n    url: '',\n    wfsTypes: [],\n    defaultFeatureNS: '',\n    defaultFeaturePrefix: ''\n  })\n);\n\n\nWfsPermalinkService.module.service('ngeoWfsPermalink', WfsPermalinkService);\n\n\nexport default WfsPermalinkService;\n","/**\n * @module gmf.controllers.AbstractAppController\n */\nimport 'jquery';\nimport 'angular';\nimport 'angular-gettext';\nimport 'angular-dynamic-locale';\nimport gmfAuthenticationModule from 'gmf/authentication/module.js';\n\nimport gmfBackgroundlayerselectorComponent from 'gmf/backgroundlayerselector/component.js';\nimport gmfDatasourceModule from 'gmf/datasource/module.js';\nimport gmfDisclaimerComponent from 'gmf/disclaimer/component.js';\nimport gmfFiltersModule from 'gmf/filters/module.js';\nimport gmfLayertreeModule from 'gmf/layertree/module.js';\nimport gmfMapModule from 'gmf/map/module.js';\nimport gmfQueryExtraModule from 'gmf/query/extraModule.js';\nimport gmfSearchModule from 'gmf/search/module.js';\nimport gmfThemeModule from 'gmf/theme/module.js';\nimport ngeoMessageDisplaywindowComponent from 'ngeo/message/displaywindowComponent.js';\nimport ngeoMiscExtraModule from 'ngeo/misc/extraModule.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport ngeoQueryMapQueryComponent from 'ngeo/query/mapQueryComponent.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerWfsPermalink from 'ngeo/statemanager/WfsPermalink.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * Application abstract controller.\n *\n * This file includes `goog.require` for base components/directives used\n * by the HTML page and the controller to provide the configuration.\n *\n * @param {gmfx.Config} config A part of the application config.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @ngdoc controller\n * @ngInject\n * @export\n */\nconst exports = function(config, $scope, $injector) {\n\n  /**\n   * Location service\n   * @type {ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = $injector.get('ngeoLocation');\n  if (this.ngeoLocation.hasParam('debug')) {\n    // make the injector globally available\n    window.injector = $injector;\n  }\n\n  googAsserts.assertInstanceof(this.map, olMap);\n\n  /**\n   * Ngeo FeatureHelper service\n   * @type {ngeo.misc.FeatureHelper}\n   */\n  const ngeoFeatureHelper = $injector.get('ngeoFeatureHelper');\n  ngeoFeatureHelper.setProjection(googAsserts.assert(this.map.getView().getProjection()));\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = $injector.get('gmfThemeManager');\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.get('gmfTreeManager');\n\n  /**\n   * Themes service\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.get('gmfThemes');\n\n  /**\n   * Permalink service\n   * @type {gmf.permalink.Permalink}\n   * @private\n   */\n  this.permalink_ = $injector.get('gmfPermalink');\n\n  /**\n   * Authentication service\n   * @type {gmf.authentication.Service}\n   */\n  const gmfAuthentication = $injector.get('gmfAuthenticationService');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.hasEditableLayers = false;\n\n  /**\n   * @private\n   */\n  this.updateHasEditableLayers_ = function() {\n    this.gmfThemes_.hasEditableLayers().then((hasEditableLayers) => {\n      this.hasEditableLayers = hasEditableLayers;\n    });\n  };\n\n  /**\n   * @param {gmfx.AuthenticationEvent} evt Event.\n   */\n  const userChange = (evt) => {\n    const user = evt.detail.user;\n    const roleId = (user.username !== null) ? user.role_id : undefined;\n\n    // Open filter panel if 'open_panel' is set in functionalities and\n    // has 'layer_filter' as first value\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      const functionalities = this.gmfUser.functionalities;\n      if (functionalities &&\n          functionalities.open_panel &&\n          functionalities.open_panel[0] === 'layer_filter') {\n        this.filterSelectorActive = true;\n      }\n    });\n\n    // Reload theme and background layer when login status changes.\n    const previousThemeName = this.gmfThemeManager.getThemeName();\n    this.gmfThemeManager.setThemeName('', true);\n    if (evt.type !== 'ready') {\n      this.updateCurrentTheme_(previousThemeName);\n    }\n    // Reload themes when login status changes.\n    this.gmfThemes_.loadThemes(roleId);\n    this.updateHasEditableLayers_();\n  };\n\n  olEvents.listen(gmfAuthentication, 'ready', userChange);\n  olEvents.listen(gmfAuthentication, 'login', userChange);\n  olEvents.listen(gmfAuthentication, 'logout', userChange);\n\n  /**\n   * @type {Array.<gmfx.SearchComponentDatasource>}\n   * @export\n   */\n  this.searchDatasources = [{\n    labelKey: 'label',\n    groupValues: /** @type {Array.<string>} **/ ($injector.get('gmfSearchGroups')),\n    groupActions: /** @type {Array.<string>} **/ ($injector.get('gmfSearchActions')),\n    projection: `EPSG:${config.srid || 21781}`,\n    url: /** @type {string} **/ ($injector.get('fulltextsearchUrl'))\n  }];\n\n  /**\n   * @type {!Object.<string, string>}\n   * @export\n   */\n  this.dimensions = {};\n\n  // watch any change on dimensions object to refresh the url\n  this.permalink_.setDimensions(this.dimensions);\n\n  // Injecting the gmfDataSourcesManager service creates the data sources\n  const gmfDataSourcesManager = $injector.get('gmfDataSourcesManager');\n  // Init the datasources with our map.\n  gmfDataSourcesManager.setDatasourceMap(this.map);\n  // Give the dimensions to the gmfDataSourcesManager\n  gmfDataSourcesManager.setDimensions(this.dimensions);\n\n  if ($injector.has('gmfDefaultDimensions')) {\n    // Set defaults\n    const defaultDimensions = $injector.get('gmfDefaultDimensions');\n    for (const dim in defaultDimensions) {\n      if (this.dimensions[dim] === undefined) {\n        this.dimensions[dim] = defaultDimensions[dim];\n      }\n    }\n  }\n\n  /**\n   * @type {ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = $injector.get('ngeoBackgroundLayerMgr');\n\n  // watch any change on dimensions object to refresh the background layer\n  $scope.$watchCollection(() => this.dimensions, () => {\n    this.backgroundLayerMgr_.updateDimensions(this.map, this.dimensions);\n  });\n\n  this.backgroundLayerMgr_.on('change', () => {\n    this.backgroundLayerMgr_.updateDimensions(this.map, this.dimensions);\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.leftNavVisible = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.rightNavVisible = false;\n\n  const queryFill = new olStyleFill({color: [255, 170, 0, 0.6]});\n  const queryStroke = new olStyleStroke({color: [255, 170, 0, 1], width: 2});\n\n  /**\n   * FeatureStyle used by the gmf.query.windowComponent\n   * @type {ol.style.Style}\n   * @export\n   */\n  this.queryFeatureStyle = new olStyleStyle({\n    fill: queryFill,\n    image: new olStyleCircle({\n      fill: queryFill,\n      radius: 5,\n      stroke: queryStroke\n    }),\n    stroke: queryStroke\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.filterSelectorActive = false;\n\n  /**\n   * The active state of the ngeo query directive.\n   * @type {boolean}\n   * @export\n   */\n  this.queryActive = true;\n\n  /**\n   * Set the clearing of the ngeoQuery after the deactivation of the query\n   * @type {boolean}\n   * @export\n   */\n  this.queryAutoClear = true;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.printPanelActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.printActive = false;\n\n  /**\n   * @type {ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = $injector.get('ngeoMapQuerent');\n\n  // Don't deactivate ngeoQuery on print activation\n  $scope.$watch(() => this.printPanelActive, (newVal) => {\n    // Clear queries if another panel is open but not if user go back to the\n    // map form the print.\n    if (!newVal && !this.queryActive) {\n      this.ngeoMapQuerent_.clear();\n    }\n    this.queryAutoClear = !newVal;\n    this.printActive = newVal;\n  });\n\n  /**\n   * The active state of the directive responsible of point measurements.\n   * @type {boolean}\n   * @export\n   */\n  this.measurePointActive = false;\n\n  /**\n   * The active state of the directive responsible of length measurements.\n   * @type {boolean}\n   * @export\n   */\n  this.measureLengthActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawFeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawProfilePanelActive = false;\n\n  /**\n   * @type {gmfx.User}\n   * @export\n   */\n  this.gmfUser = $injector.get('gmfUser');\n\n  /**\n   * @type {ngeox.miscGetBrowserLanguage}\n   */\n  this.getBrowserLanguage = $injector.get('ngeoGetBrowserLanguage');\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   */\n  this.stateManager = $injector.get('ngeoStateManager');\n\n  /**\n   * @type {tmhDynamicLocale}\n   */\n  this.tmhDynamicLocale = $injector.get('tmhDynamicLocale');\n\n  /**\n   * @type {angular.Scope}\n   */\n  this.$scope = $scope;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.lang;\n\n  /**\n   * Default language\n   * @type {string}\n   */\n  this.defaultLang = $injector.get('defaultLang');\n\n  /**\n   * Languages URL\n   * @type {!Object.<string, string>}\n   */\n  this.langUrls = $injector.get('langUrls');\n\n  /**\n   * The gettext catalog\n   * @type {angularGettext.Catalog}\n   */\n  this.gettextCatalog = $injector.get('gettextCatalog');\n\n  this.initLanguage();\n\n  const mapTools = 'mapTools';\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.mapToolsGroup = mapTools;\n\n  /**\n   * The ngeo feature overlay manager service\n   * @type {ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.get('ngeoFeatureOverlayMgr');\n  ngeoFeatureOverlayMgr.init(this.map);\n\n  /**\n   * The ngeo ToolActivate manager service.\n   * @type {ngeo.misc.ToolActivateMgr}\n   */\n  const ngeoToolActivateMgr = $injector.get('ngeoToolActivateMgr');\n\n  const queryToolActivate = new ngeoMiscToolActivate(this, 'queryActive');\n  ngeoToolActivateMgr.registerTool(mapTools, queryToolActivate, true);\n\n  const measurePointActivate = new ngeoMiscToolActivate(this, 'measurePointActive');\n  ngeoToolActivateMgr.registerTool(mapTools, measurePointActivate, false);\n\n  const measureLengthActivate = new ngeoMiscToolActivate(this, 'measureLengthActive');\n  ngeoToolActivateMgr.registerTool(mapTools, measureLengthActivate, false);\n\n  const drawFeatureActivate = new ngeoMiscToolActivate(this, 'drawFeatureActive');\n  ngeoToolActivateMgr.registerTool(mapTools, drawFeatureActivate, false);\n\n  const drawProfilePanelActivate = new ngeoMiscToolActivate(this, 'drawProfilePanelActive');\n  ngeoToolActivateMgr.registerTool(mapTools, drawProfilePanelActivate, false);\n\n  const printPanelActivate = new ngeoMiscToolActivate(this, 'printPanelActive');\n  ngeoToolActivateMgr.registerTool(mapTools, printPanelActivate, false);\n\n  $scope.$root.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n    this.gmfThemes_.getThemeObject(name).then((theme) => {\n      this.setDefaultBackground_(theme);\n    });\n  });\n\n  /**\n   * @param {boolean} skipPermalink If True, don't use permalink\n   * background layer.\n   * @private\n   */\n  this.updateCurrentBackgroundLayer_ = function(skipPermalink) {\n    this.gmfThemes_.getBgLayers().then((layers) => {\n      let background;\n      if (!skipPermalink) {\n        // get the background from the permalink\n        background = this.permalink_.getBackgroundLayer(layers);\n      }\n      if (!background) {\n        // get the background from the user settings\n        const functionalities = this.gmfUser.functionalities;\n        if (functionalities) {\n          const defaultBasemapArray = functionalities.default_basemap;\n          if (defaultBasemapArray.length > 0) {\n            const defaultBasemapLabel = defaultBasemapArray[0];\n            background = olArray.find(layers, layer => layer.get('label') === defaultBasemapLabel);\n          }\n        }\n      }\n      if (!background && layers[1]) {\n        // fallback to the layers list, use the second one because the first\n        // is the blank layer\n        background = layers[1];\n      }\n\n      if (background) {\n        this.backgroundLayerMgr_.set(this.map, background);\n      }\n    });\n  }.bind(this);\n\n  this.updateCurrentBackgroundLayer_(false);\n\n  // Static \"not used\" functions should be in the window because otherwise\n  // closure remove them. \"export\" tag doesn't work on static function below,\n  // we \"export\" them as externs in the gmfx options file.\n  const gmfx = window.gmfx || {};\n  /**\n   * @export\n   */\n  window.gmfx = gmfx;\n\n  /**\n   * Static function to create a popup with an iframe.\n   * @param {string} url an url.\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width.\n   * @param {number=} opt_height CSS height.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  gmfx.openIframePopup = (\n    url, title, opt_width, opt_height, opt_apply\n  ) => {\n    this.displaywindowUrl = url;\n    gmfx.openPopup_(title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * Static function to create a popup with html content.\n   * @param {string} content (text or html).\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  gmfx.openTextPopup = (\n    content, title, opt_width, opt_height, opt_apply\n  ) => {\n    this.displaywindowContent = content;\n    gmfx.openPopup_(title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   */\n  gmfx.openPopup_ = (title, opt_width, opt_height, opt_apply) => {\n\n    this.displaywindowTitle = title;\n    this.displaywindowOpen = true;\n\n    if (opt_width) {\n      this.displaywindowWidth = `${opt_width}px`;\n    }\n    if (opt_height) {\n      this.displaywindowHeight = `${opt_height}px`;\n    }\n    if (opt_apply !== false) {\n      this.$scope.$apply();\n    }\n  };\n\n  /**\n   * Whether to update the size of the map on browser window resize.\n   * @type {boolean}\n   * @export\n   */\n  this.manageResize = false;\n\n  /**\n   * The duration (milliseconds) of the animation that may occur on the div\n   * containing the map. Used to smoothly resize the map while the animation\n   * is in progress.\n   * @type {number|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n  const cgxp = window.cgxp || {};\n  /**\n   * @export\n   */\n  window.cgxp = cgxp;\n  /**\n   * @export\n   */\n  cgxp.tools = window.cgxp.tools || {};\n  /**\n   * Static function to create a popup with an iframe.\n   * @param {string} url an url.\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  cgxp.tools.openInfoWindow = function(url, title, opt_width, opt_height, opt_apply) {\n    gmfx.openIframePopup(url, title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowContent = null;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.displaywindowDraggableContainment = '.gmf-map';\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowHeight = null;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.displaywindowOpen = false;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowTitle = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowUrl = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowWidth = null;\n};\n\n\n/**\n * @return {boolean} Return true if a user exists and its 'is_password_changed' value is explicitly set\n *     to false.\n * @export\n */\nexports.prototype.userMustChangeItsPassword = function() {\n  return this.gmfUser.is_password_changed === false;\n};\n\n\n/**\n * @param {Array.<ol.layer.Base>} layers Layers list.\n * @param {Array.<string>} labels default_basemap list.\n * @return {ol.layer.Base} layer or null\n */\nexports.getLayerByLabels = function(layers, labels) {\n  if (labels && labels.length > 0) {\n    return olArray.find(layers, layer => layer.get('label') === labels[0]);\n  }\n  return null;\n};\n\n\n/**\n * @param {string} lang Language code.\n * @export\n */\nexports.prototype.switchLanguage = function(lang) {\n  googAsserts.assert(lang in this.langUrls);\n  this.gettextCatalog.setCurrentLanguage(lang);\n  this.gettextCatalog.loadRemote(this.langUrls[lang]);\n  this.tmhDynamicLocale.set(lang);\n  this.lang = lang;\n};\n\n\n/**\n */\nexports.prototype.initLanguage = function() {\n  this.$scope.$watch(() => this.lang, (newValue) => {\n    this.stateManager.updateState({\n      'lang': newValue\n    });\n  });\n\n  const browserLanguage = /** @type {string|undefined} */\n      (this.getBrowserLanguage(Object.keys(this.langUrls)));\n  const urlLanguage = /** @type {string|undefined} */\n      (this.stateManager.getInitialValue('lang'));\n\n  if (urlLanguage !== undefined && urlLanguage in this.langUrls) {\n    this.switchLanguage(urlLanguage);\n    return;\n  } else if (browserLanguage !== undefined && browserLanguage in this.langUrls) {\n    this.switchLanguage(browserLanguage);\n    return;\n  } else {\n    // if there is no information about language preference,\n    // fallback to default language\n\n    this.switchLanguage(this.defaultLang);\n    return;\n  }\n};\n\n\n/**\n * @param {gmfThemes.GmfTheme} theme Theme.\n * @private\n */\nexports.prototype.setDefaultBackground_ = function(theme) {\n  this.gmfThemes_.getBgLayers().then((layers) => {\n    let layer;\n\n    // get the background from the permalink\n    layer = this.permalink_.getBackgroundLayer(layers);\n\n    if (!layer && this.gmfUser.functionalities) {\n      // get the background from the user settings\n      layer = exports.getLayerByLabels(layers, this.gmfUser.functionalities.default_basemap);\n    }\n\n    if (!layer && theme) {\n      // get the background from the theme\n      layer = exports.getLayerByLabels(layers, theme.functionalities.default_basemap);\n    }\n\n    if (!layer) {\n      // fallback to the layers list, use the second one because the first is the blank layer.\n      layer = layers[layers.length > 1 ? 1 : 0];\n    }\n\n    googAsserts.assert(layer);\n    this.backgroundLayerMgr_.set(this.map, layer);\n  });\n};\n\n/**\n * @param {string} fallbackThemeName fallback theme name.\n * @private\n */\nexports.prototype.updateCurrentTheme_ = function(fallbackThemeName) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.permalink_.defaultThemeNameFromFunctionalities();\n    if (themeName) {\n      const theme = gmfThemeThemes.findThemeByName(themes, /** @type {string} */ (themeName));\n      if (theme) {\n        this.gmfThemeManager.addTheme(theme, true);\n      }\n    } else {\n      this.gmfThemeManager.setThemeName(fallbackThemeName);\n    }\n  });\n};\n\n/**\n * @protected\n * @return {Element} Span element with font-awesome inside of it\n */\nexports.prototype.getLocationIcon = function() {\n  const arrow = document.createElement('span');\n  arrow.className = 'fa fa-location-arrow';\n  arrow.style.transform = 'rotate(-0.82rad)';\n  const arrowWrapper = document.createElement('span');\n  arrowWrapper.appendChild(arrow);\n  return arrowWrapper;\n};\n\n\nexports.module = angular.module('GmfAbstractAppControllerModule', [\n  'gettext',\n  'tmh.dynamicLocale',\n  gmfAuthenticationModule.name,\n  gmfBackgroundlayerselectorComponent.name,\n  gmfDatasourceModule.name,\n  gmfDisclaimerComponent.name,\n  gmfFiltersModule.name,\n  gmfLayertreeModule.name,\n  gmfMapModule.name,\n  gmfQueryExtraModule.name,\n  gmfSearchModule.name,\n  gmfThemeModule.name,\n  ngeoMessageDisplaywindowComponent.name,\n  ngeoMiscExtraModule.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoQueryMapQuerent.module.name,\n  ngeoQueryMapQueryComponent.name,\n  ngeoStatemanagerModule.name,\n  ngeoStatemanagerWfsPermalink.module.name,\n]);\n\n\nexports.module.controller('AbstractController', exports);\n\n\nexports.module.value('ngeoExportFeatureFormats', [\n  ngeoMiscFeatureHelper.FormatType.KML,\n  ngeoMiscFeatureHelper.FormatType.GPX\n]);\n\nexports.module.config(['tmhDynamicLocaleProvider', 'angularLocaleScript',\n  /**\n   * @param {tmhDynamicLocaleProvider} tmhDynamicLocaleProvider angular-dynamic-locale provider.\n   * @param {string} angularLocaleScript the script.\n   */\n  function(tmhDynamicLocaleProvider, angularLocaleScript) {\n    // configure the script URL\n    tmhDynamicLocaleProvider.localeLocationPattern(angularLocaleScript);\n  }\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.ModifyCircle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport * as olCoordinate from 'ol/coordinate.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olExtent from 'ol/extent.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport {fromCircle} from 'ol/geom/Polygon.js';\nimport olInteractionPointer, {handleEvent as pointerHandleEvent} from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStructsRBush from 'ol/structs/RBush.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleDragEvent: exports.handleDragEvent_,\n    handleEvent: exports.handleEvent,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * Editing vertex.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {ol.structs.RBush.<ol.ModifySegmentDataType>}\n   * @private\n   */\n  this.rBush_ = new olStructsRBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  this.features_.forEach(feature => this.addFeature_(feature));\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  if (feature.getGeometry().getType() === 'Polygon' &&\n      !!feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n    const geometry = /** @type {ol.geom.Polygon}*/ (feature.getGeometry());\n    this.writeCircleGeometry_(feature, geometry);\n\n    const map = this.getMap();\n    if (map) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<ol.ModifySegmentDataType>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n       * @param {ol.ModifySegmentDataType} node RTree node.\n       */\n    (node) => {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nexports.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = rings.length; j < jj; ++j) {\n    coordinates = rings[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(olExtent.boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates Coordinates.\n * @return {ol.Feature} Vertex feature.\n * @private\n */\nexports.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new olFeature(new olGeomPoint(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} a The first segment data.\n * @param {ol.ModifySegmentDataType} b The second segment data.\n * @return {number} The difference in indexes.\n * @private\n */\nexports.compareIndexes_ = function(a, b) {\n  return a.index - b.index;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDownEvent_ = function(evt) {\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  this.dragSegments_ = [];\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = olExtent.boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(exports.compareIndexes_);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = olBase.getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += `-${depth.join('-')}`; // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (olCoordinate.equals(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (olCoordinate.equals(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      }\n    }\n  }\n  return !!this.vertexFeature_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDragEvent_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const vertex = evt.coordinate;\n  const geometry = /** @type {ol.geom.Polygon}*/ (this.dragSegments_[0][0].geometry);\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const line = new olGeomLineString([center, vertex]);\n\n\n  /**\n   * @type {ol.geom.Circle}\n   */\n  const circle = new olGeomCircle(center, line.getLength());\n  const coordinates = fromCircle(circle, 64).getCoordinates();\n  this.setGeometryCoordinates_(geometry, coordinates);\n\n\n  const azimut = ngeoInteractionMeasureAzimut.getAzimut(line);\n  this.features_.getArray()[0].set(ngeoFormatFeatureProperties.AZIMUT, azimut);\n\n  this.createOrUpdateVertexFeature_(vertex);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleUpEvent_ = function(evt) {\n  this.rBush_.clear();\n  this.writeCircleGeometry_(this.dragSegments_[0][0].feature,\n    this.dragSegments_[0][0].geometry);\n\n  if (this.modified_) {\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifyend', {features: this.features_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.ModifyCircle}\n * @api\n */\nexports.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof olMapBrowserPointerEvent)) {\n    return true;\n  }\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == 'pointermove' && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n\n  return pointerHandleEvent.call(this, mapBrowserEvent) &&\n      !handled;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.PluggableMap} map Map.\n * @private\n */\nexports.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return olCoordinate.squaredDistanceToSegment(pixelCoordinate, a.segment) -\n        olCoordinate.squaredDistanceToSegment(pixelCoordinate, b.segment);\n  };\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = olExtent.boundingExtent([lowerLeft, upperRight]);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = (olCoordinate.closestOnSegment(pixelCoordinate,\n      closestSegment));\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    if (Math.sqrt(olCoordinate.squaredDistance(pixel, vertexPixel)) <=\n        this.pixelTolerance_) {\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = olCoordinate.squaredDistance(vertexPixel, pixel1);\n      const squaredDist2 = olCoordinate.squaredDistance(vertexPixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      this.snappedToVertex_ = dist <= this.pixelTolerance_;\n      if (this.snappedToVertex_) {\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        this.createOrUpdateVertexFeature_(vertex);\n        const vertexSegments = {};\n        vertexSegments[olBase.getUid(closestSegment)] = true;\n        let segment;\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          segment = nodes[i].segment;\n          if ((olCoordinate.equals(closestSegment[0], segment[0]) &&\n              olCoordinate.equals(closestSegment[1], segment[1]) ||\n              (olCoordinate.equals(closestSegment[0], segment[1]) &&\n              olCoordinate.equals(closestSegment[1], segment[0])))) {\n            vertexSegments[olBase.getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n        return;\n      }\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nexports.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.ModifyRectangle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorPoints_ = new olLayerVector({\n    source: new olSourceVector({\n      wrapX: !!options.wrapX\n    }),\n    visible: this.getActive(),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {Object.<number, ngeo.interaction.ModifyRectangle.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {?ngeo.interaction.ModifyRectangle.ModifyParams}\n   * @private\n   */\n  this.params_ = null;\n\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n  this.features_.forEach((feature) => {\n    this.addFeature_(feature);\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionPointer.prototype.setActive.call(this, active);\n  if (this.vectorPoints_) {\n    this.vectorPoints_.setVisible(active);\n  }\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const featureGeom = feature.getGeometry();\n  if (featureGeom instanceof olGeomPolygon) {\n\n    // If the feature's corners are already set, no need to set them again\n    const uid = olBase.getUid(feature);\n    let item = this.cache_[uid];\n    if (item) {\n      return;\n    }\n\n    const pointSource = this.vectorPoints_.getSource();\n\n    // from each corners, create a point feature and add it to the point layer.\n    // each point is then associated with 2 siblings in order to update the\n    // siblings geometry at the same time when a point gets dragged around.\n    // mark each one as 'corner'\n    const corners = featureGeom.getCoordinates()[0];\n    while (corners.length > 4) {\n      if (corners[0][0] < corners[1][0] && corners[0][1] <= corners[1][1]) {\n        corners.pop();\n      } else {\n        corners.shift();\n      }\n    }\n    const pointFeatures = [];\n    let cornerPoint;\n    let cornerFeature;\n    corners.forEach((corner) => {\n      cornerPoint = new olGeomPoint(corner);\n      cornerFeature = new olFeature({\n        'corner': true,\n        'geometry': cornerPoint,\n        'siblingX': null,\n        'siblingY': null,\n        'boxFeature': feature\n      });\n\n      pointFeatures.push(cornerFeature);\n    }, this);\n    item = /** @type {ngeo.interaction.ModifyRectangle.CacheItem} */ ({\n      corners: pointFeatures\n    });\n    this.cache_[uid] = item;\n\n    let previousFeature;\n    let nextFeature;\n    pointFeatures.forEach((cornerFeature, index) => {\n      previousFeature = pointFeatures[index - 1];\n      if (!previousFeature) {\n        previousFeature = pointFeatures[pointFeatures.length - 1];\n      }\n\n      nextFeature = pointFeatures[index + 1];\n      if (!nextFeature) {\n        nextFeature = pointFeatures[0];\n      }\n\n      if (index % 2 === 0) {\n        cornerFeature.set('siblingX', nextFeature);\n        cornerFeature.set('siblingY', previousFeature);\n      } else {\n        cornerFeature.set('siblingX', previousFeature);\n        cornerFeature.set('siblingY', nextFeature);\n      }\n\n    }, this);\n    pointSource.addFeatures(pointFeatures);\n  }\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n    this.params_ = this.initializeParams_();\n  }\n};\n\n\n/**\n * @return {ngeo.interaction.ModifyRectangle.ModifyParams} The initialised params\n * @private\n */\nexports.prototype.initializeParams_ = function() {\n  const feature = this.feature_;\n\n  // 1. Find the origin (opposite) point for the modify operation\n  // siblingY relative to the origin is siblingX relative to the opposite\n  const siblingY = feature.get('siblingX');\n  googAsserts.assertInstanceof(siblingY, olFeature);\n\n  const origin = siblingY.get('siblingY');\n  googAsserts.assertInstanceof(origin, olFeature);\n  const originPoint = origin.getGeometry();\n  googAsserts.assertInstanceof(originPoint, olGeomPoint);\n  const originCoordinate = originPoint.getCoordinates();\n  const originPixel = this.getMap().getPixelFromCoordinate(originCoordinate);\n\n  // 2. Find the origin's X sibling and the normal vector from the origin to it\n  const siblingX = origin.get('siblingX');\n  googAsserts.assertInstanceof(siblingX, olFeature);\n  const siblingXPoint = siblingX.getGeometry();\n  googAsserts.assertInstanceof(siblingXPoint, olGeomPoint);\n  const siblingXCoordinate = siblingXPoint.getCoordinates();\n  const siblingXPixel = this.getMap().getPixelFromCoordinate(siblingXCoordinate);\n  let vectorX = [\n    siblingXPixel[0] - originPixel[0],\n    siblingXPixel[1] - originPixel[1]\n  ];\n  const vectorXMagnitude = Math.sqrt(vectorX[0] * vectorX[0] + vectorX[1] * vectorX[1]);\n  vectorX[0] /= vectorXMagnitude;\n  vectorX[1] /= vectorXMagnitude;\n\n  // 3. Find the origin's Y sibling and the normal vector from the origin to it\n  const siblingYPoint = siblingY.getGeometry();\n  googAsserts.assertInstanceof(siblingYPoint, olGeomPoint);\n  const siblingYCoordinate = siblingYPoint.getCoordinates();\n  const siblingYPixel = this.getMap().getPixelFromCoordinate(siblingYCoordinate);\n  let vectorY = [\n    siblingYPixel[0] - originPixel[0],\n    siblingYPixel[1] - originPixel[1]\n  ];\n  const vectorYMagnitude = Math.sqrt(vectorY[0] * vectorY[0] + vectorY[1] * vectorY[1]);\n  vectorY[0] /= vectorYMagnitude;\n  vectorY[1] /= vectorYMagnitude;\n\n  // 4. Validate the vectors.\n  if (isNaN(vectorX[0]) && isNaN(vectorY[0])) {\n    // Both vector are invalid. Rotation information has already been lost\n    vectorX = [0, 1];\n    vectorY = [1, 0];\n  } else if (isNaN(vectorX[0])) {\n    vectorX = [vectorY[1], -vectorY[0]];\n  } else if (isNaN(vectorY[0])) {\n    vectorY = [vectorX[1], -vectorX[0]];\n  }\n\n  return {\n    originCoordinate,\n    originPixel,\n    siblingXPoint,\n    siblingYPoint,\n    vectorX,\n    vectorY\n  };\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const item = this.cache_[uid];\n  const corners = item.corners;\n  for (let i = 0; i < corners.length; i++) {\n    this.vectorPoints_.getSource().removeFeature(corners[i]);\n  }\n  this.feature_ = null;\n  corners.length = 0;\n  delete this.cache_[uid];\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.vectorPoints_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  const feature = map.forEachFeatureAtPixel(evt.pixel, feature =>\n    (feature.get('siblingX') && feature.get('siblingY') ? feature : undefined)\n  );\n\n  if (feature) {\n    this.feature_ = feature;\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const feature = this.feature_;\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (feature.getGeometry());\n\n  if (geometry instanceof olGeomPoint) {\n    geometry.setCoordinates(evt.coordinate);\n\n    const destinationPixel = evt.pixel;\n\n    const originPixel = this.params_.originPixel;\n    const siblingXPoint = this.params_.siblingXPoint;\n    const siblingYPoint = this.params_.siblingYPoint;\n    const vectorX = this.params_.vectorX;\n    const vectorY = this.params_.vectorY;\n    const originCoordinate = this.params_.originCoordinate;\n\n    // Calculate new positions of siblings\n    const b2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorX);\n    const b2Coordinate = this.getMap().getCoordinateFromPixel(b2Pixel);\n    siblingXPoint.setCoordinates(b2Coordinate);\n\n    const c2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorY);\n    const c2Coordinate = this.getMap().getCoordinateFromPixel(c2Pixel);\n    siblingYPoint.setCoordinates(c2Coordinate);\n\n\n    // Resize the box\n    const boxFeature = feature.get('boxFeature');\n    const geom = boxFeature.getGeometry();\n    googAsserts.assertInstanceof(geom, olGeomPolygon);\n    geom.setCoordinates([[evt.coordinate, b2Coordinate, originCoordinate, c2Coordinate, evt.coordinate]]);\n  }\n};\n\n\n/**\n * Calculate the new position of a point as projected on a vector from origin to\n * destination.\n * @param {ol.Pixel} origin Pixel of origin (opposite of the drag handle)\n * @param {ol.Pixel} destination Pixel of destination (the handle we dragged)\n * @param {ol.Pixel} vector The normalized vector to the point\n * @return {ol.Pixel} The new pixel of the point\n * @private\n */\nexports.prototype.calculateNewPixel_ = function(\n  origin, destination, vector) {\n\n  const aVector = [destination[0] - origin[0], destination[1] - origin[1]];\n\n  const abScalarProduct = aVector[0] * vector[0] + aVector[1] * vector[1];\n\n  const deltaVector = [\n    (vector[0] * abScalarProduct),\n    (vector[1] * abScalarProduct)\n  ];\n\n  return [deltaVector[0] + origin[0], deltaVector[1] + origin[1]];\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifyend', {features: this.features_});\n    this.dispatchEvent(event);\n    this.params_ = null;\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * @typedef {{\n *     corners: Array.<ol.Feature>\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     originCoordinate: ol.Coordinate,\n *     originPixel: ol.Pixel,\n *     siblingXPoint: ol.geom.Point,\n *     siblingYPoint: ol.geom.Point,\n *     vectorX: Array.<number>,\n *     vectorY: Array.<number>\n * }}\n */\nexports.ModifyParams;\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Modify\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModifyCircle from 'ngeo/interaction/ModifyCircle.js';\nimport ngeoInteractionModifyRectangle from 'ngeo/interaction/ModifyRectangle.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olCollection from 'ol/Collection.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * This interaction combines multiple kind of feature modification interactions\n * in order to be able to modify vector features depending on their geometry\n * type. The different kind of interactions supported are:\n *\n * - `ol.interaction.Modify`\n * - `ngeo.interaction.ModifyCircle`\n * - `ngeo.interaction.ModifyRectangle`\n *\n * This interaction receives a collection of features. Its job is to listen\n * to added/removed features to and from it and add them in the proper\n * collection that is uniquely used for each inner interaction. Those inner\n * interactions follow the `active` property of this interaction, i.e. when\n * this interaction is activated, so do the inner interactions. Since they will\n * never share the same feature, they don't collide with one an other.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Interaction}\n * @param {olx.interaction.ModifyOptions} options Options.\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.otherFeatures_ = new olCollection();\n\n  this.interactions_.push(new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.otherFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.circleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyCircle({\n    features: this.circleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.rectangleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyRectangle({\n    features: this.rectangleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionInteraction.prototype.setActive.call(this, active);\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const interactions = this.interactions_;\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    interactions.forEach((interaction) => {\n      currentMap.removeInteraction(interaction);\n    });\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    interactions.forEach((interaction) => {\n      map.addInteraction(interaction);\n    });\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Toggle interactions.\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const interactions = this.interactions_;\n  const keys = this.listenerKeys_;\n\n  interactions.forEach((interaction) => {\n    interaction.setActive(active && !!map);\n  });\n\n  if (active && map) {\n    this.features_.forEach(feature => this.addFeature_(feature));\n    keys.push(\n      olEvents.listen(this.features_, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.features_.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.push(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.remove(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {ol.Collection.<ol.Feature>} Collection of features for this feature.\n * @private\n */\nexports.prototype.getFeatureCollection_ = function(feature) {\n  let features;\n  const isCircle = feature.get(ngeoFormatFeatureProperties.IS_CIRCLE);\n  const isRectangle = feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE);\n  if (isCircle === true || isCircle === 'true') {\n    features = this.circleFeatures_;\n  } else if (isRectangle === true || isRectangle === 'true') {\n    features = this.rectangleFeatures_;\n  } else {\n    features = this.otherFeatures_;\n  }\n  return features;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.Controller\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {ol.Collection.<ol.Feature>} ngeoFeatures Collection of features.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDrawfeatureController\n */\nconst exports = function($scope, $sce, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * Alternate collection of features in which to push the drawn features.\n   * If not defined, then `ngeoFeatures` is used instead.\n   * @type {!ol.Collection.<!ol.Feature>|undefined}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showMeasure;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n  // Fill the string collection\n  gettextCatalog.getString('Point');\n  gettextCatalog.getString('LineString');\n  gettextCatalog.getString('Polygon');\n  gettextCatalog.getString('Circle');\n  gettextCatalog.getString('Rectangle');\n  gettextCatalog.getString('Text');\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = ngeoFeatures;\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawPoint;\n\n  /**\n   * @type {ngeo.interaction.MeasureLength}\n   * @export\n   */\n  this.measureLength;\n\n  /**\n   * @type {ngeo.interaction.MeasureArea}\n   * @export\n   */\n  this.measureArea;\n\n  /**\n   * @type {ngeo.interaction.MeasureAzimut}\n   * @export\n   */\n  this.measureAzimut;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawRectangle;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawText;\n\n\n  // Watch the \"active\" property, and disable the draw interactions\n  // when \"active\" gets set to false.\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      if (newVal === false) {\n        this.interactions_.forEach((interaction) => {\n          interaction.setActive(false);\n        });\n      }\n    }\n  );\n\n};\n\n\n/**\n * Register a draw|measure interaction by setting it inactive, decorating it\n * and adding it to the map\n * @param {ol.interaction.Interaction} interaction Interaction to register.\n * @export\n */\nexports.prototype.registerInteraction = function(\n  interaction) {\n  this.interactions_.push(interaction);\n  interaction.setActive(false);\n  ngeoMiscDecorate.interaction(interaction);\n  this.map.addInteraction(interaction);\n};\n\n\n/**\n * Called when any of the draw or measure interaction active property changes.\n * Set the active property of this directive accordingly, i.e. if at least\n * one of the draw or measure is active then the active property is set to true.\n * @param {ol.Object.Event} event Event.\n * @export\n */\nexports.prototype.handleActiveChange = function(event) {\n  this.active = this.interactions_.some(interaction => interaction.getActive(), this);\n};\n\n\n/**\n * Called when a feature is finished being drawn. Set the default properties\n * for its style, then set its style and add it to the features collection.\n * @param {string} type Type of geometry being drawn.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.prototype.handleDrawEnd = function(type, event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  googAsserts.assert(sketch);\n\n  const azimut = sketch.get('azimut');\n\n  const features = this.features || this.ngeoFeatures_;\n\n  const feature = new olFeature(sketch.getGeometry());\n\n  const prop = ngeoFormatFeatureProperties;\n\n  switch (type) {\n    case ngeoGeometryType.CIRCLE:\n      feature.set(prop.IS_CIRCLE, true);\n      if (azimut !== undefined) {\n        feature.set(prop.AZIMUT, azimut);\n      }\n      break;\n    case ngeoGeometryType.TEXT:\n      feature.set(prop.IS_TEXT, true);\n      break;\n    case ngeoGeometryType.RECTANGLE:\n      feature.set(prop.IS_RECTANGLE, true);\n      break;\n    default:\n      break;\n  }\n\n  /**\n   * @type {string}\n   */\n  const name = this.gettextCatalog_.getString(type);\n  feature.set(prop.NAME, `${name} ${features.getLength() + 1}`);\n\n  /**\n   * @type {string}\n   */\n  const color = type !== ngeoGeometryType.TEXT ? '#DB4436' : '#000000';\n  feature.set(prop.COLOR, color);\n\n  feature.set(prop.ANGLE, 0);\n  feature.set(prop.OPACITY, 0.2);\n  feature.set(prop.SHOW_MEASURE, this.showMeasure ? true : false);\n  feature.set(prop.SHOW_LABEL, false);\n  feature.set(prop.SIZE, 10);\n  feature.set(prop.STROKE, 2);\n\n  // set style\n  this.featureHelper_.setStyle(feature);\n\n  // push in collection\n  features.push(feature);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDrawfeatureController', [\n  ngeoDrawFeatures.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\nexports.module.controller('ngeoDrawfeatureController', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.point\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawpoint', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawPoint = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawPoint);\n      drawFeatureCtrl.drawPoint = drawPoint;\n\n      olEvents.listen(\n        drawPoint,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POINT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawPoint,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawpoint', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.rectangle\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawrectangle', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawrectangle\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawRectangle = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n        geometryFunction: (coordinates, geometry) => {\n          if (!geometry) {\n            geometry = new olGeomPolygon(null);\n          }\n          const start = coordinates[0];\n          const end = coordinates[1];\n          geometry.setCoordinates([\n            [start, [start[0], end[1]], end, [end[0], start[1]], start]\n          ]);\n          return geometry;\n        },\n        maxPoints: 2\n      });\n\n      drawFeatureCtrl.registerInteraction(drawRectangle);\n      drawFeatureCtrl.drawRectangle = drawRectangle;\n\n      olEvents.listen(\n        drawRectangle,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.RECTANGLE),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawRectangle,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawrectangle', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.text\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawtext', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawtext\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawText = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawText);\n      drawFeatureCtrl.drawText = drawText;\n\n      olEvents.listen(\n        drawText,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.TEXT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawText,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawtext', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.area\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurearea', [\n  ngeoDrawController.module.name\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing polygon');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br>' +\n          'Double-click or click starting point to finish');\n\n      const measureArea = new ngeoInteractionMeasureArea($filter('ngeoUnitPrefix'), gettextCatalog, {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureArea);\n      drawFeatureCtrl.measureArea = measureArea;\n\n      olEvents.listen(\n        measureArea,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POLYGON),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureArea,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurearea', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.azimut\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport {fromCircle} from 'ol/geom/Polygon.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasureazimut', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing circle');\n      const contMsg = gettextCatalog.getString('Click to finish');\n\n      const measureAzimut = new ngeoInteractionMeasureAzimut(\n        $filter('ngeoUnitPrefix'), $filter('number'), {\n          style: new olStyleStyle(),\n          startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n          continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n          precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined,\n          decimals: $injector.has('ngeoMeasureDecimals') ? $injector.get('ngeoMeasureDecimals') : undefined\n        });\n\n      drawFeatureCtrl.registerInteraction(measureAzimut);\n      drawFeatureCtrl.measureAzimut = measureAzimut;\n\n      olEvents.listen(\n        measureAzimut,\n        'measureend',\n        /**\n         * @param {ngeox.MeasureEvent} event Event.\n         */\n        (event) => {\n          // In the case of azimut measure interaction, the feature's\n          // geometry is actually a collection (line + circle)\n          // For our purpose here, we only need the circle, which gets\n          // transformed into a polygon with 64 sides.\n          const geometry = /** @type {ol.geom.GeometryCollection} */\n                (event.detail.feature.getGeometry());\n          const circle = /** @type {ol.geom.Circle} */ (\n            geometry.getGeometries()[1]);\n          const polygon = fromCircle(circle, 64);\n          event.detail.feature = new olFeature(polygon);\n          const azimut = ngeoInteractionMeasureAzimut.getAzimut(\n            /** @type {ol.geom.LineString} */ (geometry.getGeometries()[0])\n          );\n          event.detail.feature.set('azimut', azimut);\n\n          drawFeatureCtrl.handleDrawEnd(ngeoGeometryType.CIRCLE, event);\n        },\n        drawFeatureCtrl\n      );\n\n      olEvents.listen(\n        measureAzimut,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasureazimut', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.length\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurelength', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing line');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br>' +\n          'Double-click or click last point to finish');\n\n      const measureLength = new ngeoInteractionMeasureLength($filter('ngeoUnitPrefix'), gettextCatalog, {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureLength);\n      drawFeatureCtrl.measureLength = measureLength;\n\n      olEvents.listen(\n        measureLength,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.LINE_STRING),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureLength,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurelength', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.component\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawPoint from 'ngeo/draw/point.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawRectangle from 'ngeo/draw/rectangle.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawText from 'ngeo/draw/text.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureArea from 'ngeo/measure/area.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureAzimut from 'ngeo/measure/azimut.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureLength from 'ngeo/measure/length.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawfeature', [\n  ngeoDrawController.module.name,\n  ngeoDrawPoint.name,\n  ngeoDrawRectangle.name,\n  ngeoDrawText.name,\n  ngeoMeasureArea.name,\n  ngeoMeasureAzimut.name,\n  ngeoMeasureLength.name,\n]);\n\n\n/**\n * Directive used to draw vector features on a map.\n * Example:\n *\n *     <ngeo-drawfeature\n *         ngeo-btn-group\n *         class=\"btn-group\"\n *         ngeo-drawfeature-active=\"ctrl.drawActive\"\n *         ngeo-drawfeature-map=\"::ctrl.map\">\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawpoint\n *         class=\"btn btn-default ngeo-drawfeature-point\"\n *         ng-class=\"{active: dfCtrl.drawPoint.active}\"\n *         ng-model=\"dfCtrl.drawPoint.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurelength\n *         class=\"btn btn-default ngeo-drawfeature-linestring\"\n *         ng-class=\"{active: dfCtrl.measureLength.active}\"\n *         ng-model=\"dfCtrl.measureLength.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurearea\n *         class=\"btn btn-default ngeo-drawfeature-polygon\"\n *         ng-class=\"{active: dfCtrl.measureArea.active}\"\n *         ng-model=\"dfCtrl.measureArea.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measureazimut\n *         class=\"btn btn-default ngeo-drawfeature-circle\"\n *         ng-class=\"{active: dfCtrl.measureAzimut.active}\"\n *         ng-model=\"dfCtrl.measureAzimut.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawrectangle\n *         class=\"btn btn-default ngeo-drawfeature-rectangle\"\n *         ng-class=\"{active: dfCtrl.drawRectangle.active}\"\n *         ng-model=\"dfCtrl.drawRectangle.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawtext\n *         class=\"btn btn-default ngeo-drawfeature-text\"\n *         ng-class=\"{active: dfCtrl.drawText.active}\"\n *         ng-model=\"dfCtrl.drawText.active\"></a>\n *     </ngeo-drawfeature>\n *\n * @htmlAttribute {boolean} ngeo-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {!ol.Collection=} ngeo-drawfeature-features The features\n *     collection in which to push the drawn features. If none is provided,\n *     then the `ngeoFeatures` collection is used.\n * @htmlAttribute {ol.Map} ngeo-drawfeature-map The map.\n * @htmlAttribute {boolean} ngeo-drawfeature-showmeasure. Checks the\n *      checkbox in order to display the feature measurements as a label.\n *      Default to false.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawfeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoDrawfeatureController as dfCtrl',\n    scope: true,\n    bindToController: {\n      'active': '=ngeoDrawfeatureActive',\n      'features': '=?ngeoDrawfeatureFeatures',\n      'map': '=ngeoDrawfeatureMap',\n      'showMeasure': '=?ngeoDrawfeatureShowmeasure'\n    }\n  };\n};\n\nexports.directive('ngeoDrawfeature', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.createfeatureComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nconst exports = angular.module('ngeoCreatefeature', [\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * A directive used to draw vector features of a single geometry type using\n * either a 'draw' or 'measure' interaction. Once a feature is finished being\n * drawn, it is added to a collection of features.\n *\n * The geometry types supported are:\n *  - Point\n *  - LineString\n *  - Polygon\n *\n * Example:\n *\n *     <a\n *       href\n *       translate\n *       ngeo-btn\n *       ngeo-createfeature\n *       ngeo-createfeature-active=\"ctrl.createPointActive\"\n *       ngeo-createfeature-features=\"ctrl.features\"\n *       ngeo-createfeature-geom-type=\"ctrl.pointGeomType\"\n *       ngeo-createfeature-map=\"::ctrl.map\"\n *       class=\"btn btn-default ngeo-createfeature-point\"\n *       ng-class=\"{active: ctrl.createPointActive}\"\n *       ng-model=\"ctrl.createPointActive\">\n *     </a>\n *\n * @htmlAttribute {boolean} ngeo-createfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {ol.Collection} ngeo-createfeature-features The collection of\n *     features where to add those created by this directive.\n * @htmlAttribute {string} ngeo-createfeature-geom-type Determines the type\n *     of geometry this directive should draw.\n * @htmlAttribute {ol.Map} ngeo-createfeature-map The map.\n *\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname ngeoCreatefeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoCreatefeatureController',\n    bindToController: true,\n    scope: {\n      'active': '=ngeoCreatefeatureActive',\n      'features': '=ngeoCreatefeatureFeatures',\n      'geomType': '=ngeoCreatefeatureGeomType',\n      'map': '=ngeoCreatefeatureMap'\n    }\n  };\n};\n\nexports.directive('ngeoCreatefeature', exports.directive_);\n\n\n/**\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.Scope} $scope Scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoCreatefeatureController\n */\nexports.Controller_ = function(gettextCatalog, $compile, $filter, $scope,\n  $timeout, ngeoEventHelper) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {ol.Collection.<!ol.Feature>|!ol.source.Vector}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {!angular.$compile}\n   * @private\n   */\n  this.compile_ = $compile;\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.filter_ = $filter;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * The draw or measure interaction responsible of drawing the vector feature.\n   * The actual type depends on the geometry type.\n   * @type {ol.interaction.Interaction}\n   * @private\n   */\n  this.interaction_;\n\n\n  // == Event listeners ==\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      this.interaction_.setActive(newVal);\n    }\n  );\n};\n\n\n/**\n * Initialize the directive.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.active = this.active === true;\n  const gettextCatalog = this.gettextCatalog_;\n\n  // Create the draw or measure interaction depending on the geometry type\n  let interaction;\n  if (this.geomType === ngeoGeometryType.POINT ||\n      this.geomType === ngeoGeometryType.MULTI_POINT\n  ) {\n    interaction = new olInteractionDraw({\n      type: /** @type {ol.geom.GeometryType} */ ('Point')\n    });\n  } else if (this.geomType === ngeoGeometryType.LINE_STRING ||\n      this.geomType === ngeoGeometryType.MULTI_LINE_STRING\n  ) {\n    const helpMsg = gettextCatalog.getString('Click to start drawing length');\n    const contMsg = gettextCatalog.getString(\n      'Click to continue drawing<br/>' +\n      'Double-click or click last point to finish'\n    );\n\n    interaction = new ngeoInteractionMeasureLength(\n      this.filter_('ngeoUnitPrefix'),\n      gettextCatalog,\n      {\n        style: new olStyleStyle(),\n        startMsg: this.compile_(`<div translate>${helpMsg}</div>`)(this.scope_)[0],\n        continueMsg: this.compile_(`<div translate>${contMsg}</div>`)(this.scope_)[0]\n      }\n    );\n  } else if (this.geomType === ngeoGeometryType.POLYGON ||\n      this.geomType === ngeoGeometryType.MULTI_POLYGON\n  ) {\n    const helpMsg = gettextCatalog.getString('Click to start drawing area');\n    const contMsg = gettextCatalog.getString(\n      'Click to continue drawing<br/>' +\n      'Double-click or click starting point to finish'\n    );\n\n    interaction = new ngeoInteractionMeasureArea(\n      this.filter_('ngeoUnitPrefix'),\n      gettextCatalog,\n      {\n        style: new olStyleStyle(),\n        startMsg: this.compile_(`<div translate>${helpMsg}</div>`)(this.scope_)[0],\n        continueMsg: this.compile_(`<div translate>${contMsg}</div>`)(this.scope_)[0]\n      }\n    );\n  }\n\n  googAsserts.assert(interaction);\n\n  interaction.setActive(this.active);\n  this.interaction_ = interaction;\n  this.map.addInteraction(interaction);\n\n  const uid = olBase.getUid(this);\n  if (interaction instanceof olInteractionDraw) {\n    this.ngeoEventHelper_.addListenerKey(\n      uid,\n      olEvents.listen(\n        interaction,\n        'drawend',\n        this.handleDrawEnd_,\n        this\n      )\n    );\n  } else if (interaction instanceof ngeoInteractionMeasureLength ||\n     interaction instanceof ngeoInteractionMeasureArea) {\n    this.ngeoEventHelper_.addListenerKey(\n      uid,\n      olEvents.listen(\n        interaction,\n        'measureend',\n        this.handleDrawEnd_,\n        this\n      )\n    );\n  }\n};\n\n\n/**\n * Called when a feature is finished being drawn. Add the feature to the\n * collection.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.Controller_.prototype.handleDrawEnd_ = function(event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  googAsserts.assert(sketch);\n\n  // convert to multi if geomType is multi and feature is not\n  let geometry = sketch.getGeometry();\n  const type = geometry.getType();\n  if (this.geomType.indexOf('Multi') != type.indexOf('Multi')) {\n    geometry = ngeoUtils.toMulti(geometry);\n  }\n  const feature = new olFeature(geometry);\n  if (this.features instanceof olCollection) {\n    this.features.push(feature);\n  } else {\n    this.features.addFeature(feature);\n  }\n};\n\n\n/**\n * Cleanup event listeners and remove the interaction from the map.\n */\nexports.Controller_.prototype.$onDestroy = function() {\n  this.timeout_(() => {\n    const uid = olBase.getUid(this);\n    this.ngeoEventHelper_.clearListenerKey(uid);\n    this.interaction_.setActive(false);\n    this.map.removeInteraction(this.interaction_);\n  }, 0);\n};\n\nexports.controller('ngeoCreatefeatureController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.XSDAttributes\n */\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\n\n/**\n * An service used to fetch the XSD attribute definition of layers using their\n * id from a GeoMapFish server.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n * @ngInject\n */\nconst exports = function($http, gmfLayersUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = gmfLayersUrl;\n\n  /**\n   * @type {Object.<number, !angular.$q.Promise>}\n   * @private\n   */\n  this.promises_ = {};\n\n};\n\n\n/**\n * @param {number} id Layer id.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getAttributes = function(id) {\n  if (!this.promises_[id]) {\n    const url = `${this.baseUrl_}/${id}/md.xsd`;\n    this.promises_[id] = this.http_.get(url).then(\n      this.handleGetAttributes_.bind(this));\n  }\n  return this.promises_[id];\n};\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @export\n */\nexports.prototype.handleGetAttributes_ = function(resp) {\n  return new ngeoFormatXSDAttribute().read(resp.data);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfXSDAttributes', []);\nexports.module.service('gmfXSDAttributes', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.raster.RasterService\n */\n/**\n * The Raster service.\n * Uses the c2cgeoportal's raster to obtain different kinds of\n * information at a specific coordinate.\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfRasterUrl URL to a the c2cgeoportal raster service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfRaster\n */\nconst exports = function($http, gmfRasterUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = gmfRasterUrl;\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Object=} opt_params Optional parameters for the request.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getRaster = function(coordinate, opt_params) {\n\n  const params = opt_params || {};\n  params[exports.Param.X] = coordinate[0];\n  params[exports.Param.Y] = coordinate[1];\n\n  return this.$http_.get(this.url_, {\n    params\n  }).then(this.handleGetRaster_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Object.<string, number>} The response object.\n * @private\n */\nexports.prototype.handleGetRaster_ = function(resp) {\n  return resp.data;\n};\n\n\n/**\n * @enum {string}\n */\nexports.Param = {\n  X: 'lon',\n  Y: 'lat'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfRaster', []);\nexports.module.service('gmfRaster', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.somerc\n */\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\n\nproj4.Proj.projections.add(somerc);\nconst exports = 'somerc';\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.colorpickerComponent\n */\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoColorpicker', []);\n\n\nexports.value('ngeoColorpickerTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoColorpickerTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/misc/colorpickerComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/misc/colorpickerComponent', require('./colorpickerComponent.html'));\n});\n\n\n/**\n * Provides the \"ngeoColorpicker\" directive, a widget for\n * selecting a color among predefined ones.\n *\n * Example:\n *\n *     <div ngeo-colorpicker=\"ctrl.colors\">\n *     </div>\n *\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoColorpickerTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoColorpicker\n */\nexports.component_ = function(ngeoColorpickerTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: {\n      colors: '<?ngeoColorpicker',\n      color: '=?ngeoColorpickerColor'\n    },\n    controller: 'NgeoColorpickerController as ctrl',\n    bindToController: true,\n    templateUrl: ngeoColorpickerTemplateUrl\n  };\n};\n\nexports.directive('ngeoColorpicker',\n  exports.component_);\n\n/**\n * Fefault colors for the colorpicker\n * @type {Array.<Array.<string>>}\n * @const\n * @export\n */\nexports.DEFAULT_COLORS = [\n  ['#F4EB37', '#CDDC39', '#62AF44', '#009D57', '#0BA9CC', '#4186F0', '#3F5BA9', '#7C3592', '#A61B4A', '#DB4436', '#F8971B', '#F4B400', '#795046'],\n  ['#F9F7A6', '#E6EEA3', '#B7DBAB', '#7CCFA9', '#93D7E8', '#9FC3FF', '#A7B5D7', '#C6A4CF', '#D698AD', '#EE9C96', '#FAD199', '#FFDD5E', '#B29189'],\n  ['#ffffff', '#CCCCCC', '#777', '#000000']\n];\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.Controller_ = function($scope, $element, $attrs) {\n\n  /**\n   * The set of color\n   * @type {Array.<Array.<string>>}\n   * @export\n   */\n  this.colors = this.colors || exports.DEFAULT_COLORS;\n\n  /**\n   * The selected color\n   * @type {undefined|string}\n   * @export\n   */\n  this.color;\n};\n\n/**\n * @param {string} color The color to select.\n * @export\n */\nexports.Controller_.prototype.setColor = function(color) {\n  this.color = color;\n};\n\nexports.controller('NgeoColorpickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.AutoProjection\n */\nimport * as olProj from 'ol/proj.js';\nimport * as olExtent from 'ol/extent.js';\n\n/**\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoAutoProjection\n */\nconst exports = function() {};\n\n\n/**\n * Parse a string and return a coordinate if the result is valid. Given string\n * must be a two numbers separated by a space.\n * @param {string} str the string to parse.\n * @return {?ol.Coordinate} A coordinate or null if the format is not valid.\n * @export\n */\nexports.prototype.stringToCoordinates = function(str) {\n  const coords = str.match(/([\\d\\.']+)[\\s,]+([\\d\\.']+)/);\n  if (coords) {\n    const x = parseFloat(coords[1].replace('\\'', ''));\n    const y = parseFloat(coords[2].replace('\\'', ''));\n    if (!isNaN(x) && !isNaN(y)) {\n      return [x, y];\n    }\n  }\n  return null;\n};\n\n\n/**\n * Get an array of projections corresponding to their EPSG codes. Log an error\n *     for each code that are not defined in ol projections.\n * @param {Array.<string>} projectionsCodes EPSG codes (e.g. 'EPSG:3857',\n *     'epsg:3857' or '3857').\n * @return {Array.<ol.proj.Projection>} An array of projections.\n * @export\n */\nexports.prototype.getProjectionList = function(projectionsCodes) {\n  let code, proj;\n  const projections = [];\n  projectionsCodes.forEach((projection) => {\n    code = projection.toUpperCase();\n    if (code.substr(0, 5) != 'EPSG:') {\n      code = `EPSG:${code}`;\n    }\n    proj = olProj.get(code);\n    if (proj !== null) {\n      projections.push(proj);\n    } else {\n      console.error(`The projection ${code} is not defined in ol.proj.`);\n    }\n  });\n  return projections;\n};\n\n\n/**\n * It projects the point using the projection array and finds the first one for\n * which it falls inside of the viewProjection extent.\n * @param {ol.Coordinate} coordinates The point to test.\n * @param {ol.Extent} extent Limits in which coordinates can be valid.\n * @param {ol.proj.Projection} viewProjection Target projection the point.\n * @param {Array.<ol.proj.Projection>=} opt_projections optional array of\n *     projections. The point is tested in each projection, in the order of\n *     the array.\n * @return {?ol.Coordinate} A coordinates in the view's projection if it matches\n *     in one of the given projections, or null else.\n * @export\n */\nexports.prototype.tryProjections = function(coordinates,\n  extent, viewProjection, opt_projections) {\n  let position;\n  if (opt_projections === undefined) {\n    opt_projections = [viewProjection];\n  }\n  opt_projections.some((projection) => {\n    try {\n      position = olProj.transform(coordinates, projection, viewProjection);\n      if (olExtent.containsCoordinate(extent, position)) {\n        return true;\n      }\n    } catch (e) {\n      // Wrong coordinate leads to a transform error and ol throw an exception that we won't log.\n    }\n    position = null;\n  });\n  return position;\n};\n\n\n/**\n * Same as AutoProjection.tryProjections but if tryProjections return null,\n * re-call it with coordinates in reverse order.\n * @param {ol.Coordinate} coordinates The point to test.\n * @param {ol.Extent} extent Limits in which coordinates can be valid.\n * @param {ol.proj.Projection} viewProjection Target projection the point.\n * @param {Array.<ol.proj.Projection>=} opt_projections optional array of\n *     projections. The point is tested in each projection, in the order of\n *     the array.\n * @return {?ol.Coordinate} A coordinates in the view's projection if it matches\n *     in one of the given projections, or null else.\n * @export\n */\nexports.prototype.tryProjectionsWithInversion = function(\n  coordinates, extent, viewProjection, opt_projections) {\n  let position = this.tryProjections(coordinates, extent, viewProjection,\n    opt_projections);\n  if (position === null) {\n    position = this.tryProjections(coordinates.reverse(), extent,\n      viewProjection, opt_projections);\n  }\n  return position;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoAutoProjection', []);\nexports.module.service('ngeoAutoProjection', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.search.FulltextSearch\n */\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides the c2c-geoportal full-text search.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngInject\n * @export\n * @ngname gmfFulltextSearch\n */\nconst exports = function($injector, $http) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = /** @type {string} **/ ($injector.get('fulltextsearchUrl'));\n\n  const url = this.url_.split('?');\n  /**\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = url[0];\n\n  const queryString = (url.length == 2) ? `?${url[1]}` : '';\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  this.defaultParams_ = ngeoUtils.decodeQueryString(queryString);\n};\n\n/**\n * Perform a search query on the c2c-geoportal full-text search.\n * @param {string} query Search query.\n * @param {Object.<string, string>} params Additional parameters.\n * @returns {Promise} Request promise with data array.\n */\nexports.prototype.search = function(query, params) {\n  const queryParams = Object.assign({}, this.defaultParams_, params);\n\n  queryParams['query'] = query;\n\n  const url = `${this.baseUrl_}?${ngeoUtils.encodeQueryString(queryParams)}`;\n\n  return new Promise((resolve, reject) => {\n    this.$http_.get(url)\n      .then(resp => resolve(resp['data']))\n      .catch(reject);\n  });\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSearchFulltextSearch', []);\nexports.module.service('gmfSearchFulltextSearch', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.download.Csv\n */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\n/**\n * Service to generate and download a CSV file from tabular data.\n * Column headers are translated using {@link angularGettext.Catalog}.\n *\n * @param {angular.$injector} $injector Main injector.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoCsvDownload\n * @ngInject\n */\nconst exports = function($injector, gettextCatalog) {\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * File extension of the CSV file.\n   * @type {string}\n   * @private\n   */\n  this.encoding_ = $injector.has('ngeoCsvEncoding') ?\n    $injector.get('ngeoCsvEncoding') : 'utf-8';\n\n  /**\n   * File extension of the CSV file.\n   * @type {string}\n   * @private\n   */\n  this.extension_ = $injector.has('ngeoCsvExtension') ?\n    $injector.get('ngeoCsvExtension') : '.csv';\n\n  /**\n   * Whether to include the header in the exported file or not.\n   * @type {boolean}\n   * @private\n   */\n  this.includeHeader_ = $injector.has('ngeoCsvIncludeHeader') ?\n    $injector.get('ngeoCsvIncludeHeader') : true;\n\n  /**\n   * Quote character.\n   * @type {string}\n   * @private\n   */\n  this.quote_ = $injector.has('ngeoCsvQuote') ?\n    $injector.get('ngeoCsvQuote') : '\"';\n\n  /**\n   * Separator character.\n   * @type {string}\n   * @private\n   */\n  this.separator_ = $injector.has('ngeoCsvSeparator') ?\n    $injector.get('ngeoCsvSeparator') : ',';\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n};\n\n\n/**\n * Generate a CSV.\n *\n * @param {Array.<Object>} data Entries/objects to include in the CSV.\n * @param {Array.<ngeox.GridColumnDef>} columnDefs Column definitions.\n * @return {string} The CSV file as string.\n * @export\n */\nexports.prototype.generateCsv = function(data, columnDefs) {\n  if (data.length == 0 || columnDefs.length == 0) {\n    return '';\n  }\n\n  const translatedColumnHeaders = columnDefs.map(columnHeader => this.gettextCatalog_.getString(columnHeader.name));\n\n  const header = this.getRow_(translatedColumnHeaders);\n  const dataRows = data.map((values) => {\n    const rowValues = columnDefs.map(columnHeader => values[columnHeader.name]);\n    return this.getRow_(rowValues);\n  });\n\n  return this.includeHeader_ ? header + dataRows.join('') : dataRows.join('');\n};\n\n\n/**\n * @param {Array.<?>} values Values.\n * @return {string} CSV row.\n * @private\n */\nexports.prototype.getRow_ = function(values) {\n  const matchAllQuotesRegex = new RegExp(this.quote_, 'g');\n  const doubleQuote = this.quote_ + this.quote_;\n\n  const rowValues = values.map((value) => {\n    if (value !== undefined && value !== null) {\n      value = `${value}`;\n      // wrap each value into quotes and escape quotes with double quotes\n      return this.quote_ + value.replace(matchAllQuotesRegex, doubleQuote) + this.quote_;\n    } else {\n      return '';\n    }\n  });\n\n  return `${rowValues.join(this.separator_)}\\n`;\n};\n\n\n/**\n * Generate a CSV and start a download with the generated file.\n *\n * @param {Array.<Object>} data Entries/objects to include in the CSV.\n * @param {Array.<ngeox.GridColumnDef>} columnDefs Column definitions.\n * @param {string} fileName The CSV file name, without the extension.\n * @export\n */\nexports.prototype.startDownload = function(data, columnDefs, fileName) {\n  const fileContent = this.generateCsv(data, columnDefs);\n  this.download_(\n    fileContent, fileName, `text/csv;charset=${this.encoding_}`);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoCsvDownload', [\n  ngeoDownloadService.name\n]);\nexports.module.service('ngeoCsvDownload', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.resizemap\n */\nimport googAsserts from 'goog/asserts.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.shareComponent\n */\nimport gmfPermalinkShareService from 'gmf/permalink/ShareService.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\nconst exports = angular.module('gmfPermalinkShareComponent', [\n  gmfPermalinkShareService.module.name,\n  ngeoStatemanagerLocation.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/permalink/shareComponent', require('./shareComponent.html'));\n});\n\n\nexports.value('gmfPermalinkShareTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfPermalinkShareTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/permalink/shareComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfPermalinkShareTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfPermalinkShareTemplateUrl($attrs, gmfPermalinkShareTemplateUrl) {\n  return gmfPermalinkShareTemplateUrl($attrs);\n}\n\n\n/**\n * Component to display a shortened permalink and share it by email\n * Example:\n *\n *      <gmf-share\n *        gmf-share-email=\"true\">\n *      </gmf-share>\n *\n * @htmlAttribute {boolean} gmf-share-email Enable emailing capability.\n * @type {!angular.Component}\n */\nexports.component_ = {\n  bindings: {\n    'enableEmail': '<gmfShareEmail'\n  },\n  controller: 'GmfShareController',\n  templateUrl: gmfPermalinkShareTemplateUrl\n};\nexports.component('gmfShare', exports.component_);\n\n\nclass ShareComponentController {\n  /**\n   * The controller for the share component\n   * @param {angular.Scope} $scope Scope.\n   * @param {ngeo.statemanager.Location} ngeoLocation ngeo Location service.\n   * @param {gmf.permalink.ShareService} gmfShareService service for sharing map.\n   * @param {angular.$q} $q Angular q service\n   * @param {angular.Attributes} $attrs Attributes.\n   * @constructor\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfShareController\n   */\n  constructor($scope, ngeoLocation, gmfShareService, $q, $attrs) {\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @type {gmf.permalink.ShareService}\n     * @private\n     */\n    this.gmfShareService_ = gmfShareService;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.$q_ = $q;\n\n    /**\n     * @type {ngeo.statemanager.Location}\n     * @private\n     */\n    this.ngeoLocation_ = ngeoLocation;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.enableEmail;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.shortLink;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.email;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.message;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.permalink_ = this.ngeoLocation_.getUriString();\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.showLengthWarning = this.permalink_.length > gmfPermalinkShareService.URL_MAX_LEN ||\n    ngeoLocation.getPath() > gmfPermalinkShareService.URL_PATH_MAX_LEN;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.successfullySent = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.errorOnsend = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.errorOnGetShortUrl = false;\n\n    this.getShortUrl();\n  }\n\n  /**\n   * Get the short version of the permalink if the email is not provided\n   * @export\n   */\n  getShortUrl() {\n    this.$q_.when(this.gmfShareService_.getShortUrl(this.permalink_))\n      .then((resp) => {\n        this.shortLink = resp.data.short_url;\n        this.errorOnGetShortUrl = false;\n      }, (resp) => {\n        this.shortLink = this.permalink;\n        this.errorOnGetShortUrl = true;\n      });\n  }\n\n  /**\n   * Send the short version of the permalink if the email is provided\n   * @export\n   */\n  sendShortUrl() {\n    if (this.$scope_['gmfShareForm'].$valid) {\n      this.$q_.when(this.gmfShareService_.sendShortUrl(this.permalink_, this.email, this.message))\n        .then((resp) => {\n          this.successfullySent = true;\n        }, (resp) => {\n          this.errorOnsend = true;\n        });\n    }\n  }\n}\n\nexports.controller('GmfShareController', ShareComponentController);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.datasourceGroupTreeComponent\n */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeDatasourceGroupTreeComponent', [\n  ngeoDatasourceDataSources.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree/datasourceGroupTreeComponent', require('./datasourceGroupTreeComponent.html'));\n});\n\n\nexports.value('gmfLayertreeDatasourceGroupTreeTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfLayertreeDatasourceGroupTreeTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/layertree/datasourceGroupTreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfLayertreeDatasourceGroupTreeTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfLayertreeDatasourceGroupTreeTemplateUrl($attrs, gmfLayertreeDatasourceGroupTreeTemplateUrl) {\n  return gmfLayertreeDatasourceGroupTreeTemplateUrl($attrs);\n}\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources\n   *     service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfDatasourcegrouptreeController\n   */\n  constructor($scope, ngeoDataSources) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.datasource.Group}\n     * @export\n     */\n    this.group;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n  }\n\n  /**\n   * @return {string} Group uid.\n   * @export\n   */\n  getGroupUid() {\n    return `datasourcegrouptree-${olBase.getUid(this.group)}`;\n  }\n\n  /**\n   * Toggle visibility of the group itself, i.e. its visibility state.\n   * @export\n   */\n  toggle() {\n    this.group.toggleVisibilityState();\n  }\n\n  /**\n   * Toggle visible property of a data source.\n   * @param {ngeo.datasource.DataSource} dataSource Data source to toggle the\n   * visibility\n   * @export\n   */\n  toggleDataSource(dataSource) {\n    dataSource.visible = !dataSource.visible;\n  }\n\n  /**\n   * Remove all data sources from the `ngeo.datasource.DataSources` collection, which\n   * will automatically remove them from the Group. The group itself\n   * is going to be removed as well, destroying this component in the process.\n   * @export\n   */\n  remove() {\n    for (let i = this.group.dataSources.length - 1, ii = 0; i >= ii; i--) {\n      this.dataSources_.remove(this.group.dataSources[i]);\n    }\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove from\n   *     the `ngeo.DataSources` collection.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSources_.remove(dataSource);\n  }\n};\n\n\nexports.component('gmfDatasourcegrouptree', {\n  bindings: {\n    'group': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfLayertreeDatasourceGroupTreeTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach((feature) => {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    });\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach((feature) => {\n        this.featureHelper_.setStyle(feature);\n      });\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoDrawFeatures.name,\n  ngeoLayertreeController.module.name,\n  ngeoMiscDebounce.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoStatemanagerModule.name,\n]);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoStatemanagerService.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.datepickerComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\n\nimport 'angular-ui-date';\nimport 'jquery-ui/themes/base/all.css';\n\n// FIXME: import the locales in the applications\nimport 'jquery-ui/ui/i18n/datepicker-fr.js';\nimport 'jquery-ui/ui/i18n/datepicker-en-GB.js';\nimport 'jquery-ui/ui/i18n/datepicker-de.js';\nimport 'jquery-ui/ui/i18n/datepicker-it.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDatePicker', [\n  ngeoMiscTime.module.name,\n  'ui.date',\n]);\n\n\nexports.value('ngeoDatePickerTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoDatePickerTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/misc/datepickerComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/misc/datepickerComponent', require('./datepickerComponent.html'));\n});\n\n\n/**\n * Provide a directive to select a single date or a range of dates. Requires\n * jQuery UI for the 'datepicker' widget.\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n * ngeoDatePickerTemplateUrl Template for the directive.\n * @param  {angular.$timeout} $timeout angular timeout service\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDatePicker\n */\nexports.component_ = function(ngeoDatePickerTemplateUrl,  $timeout) {\n  return {\n    scope: {\n      onDateSelected: '&',\n      time: '='\n    },\n    bindToController: true,\n    controller: 'ngeoDatePickerController as datepickerCtrl',\n    restrict: 'AE',\n    templateUrl: ngeoDatePickerTemplateUrl,\n    link: (scope, element, attrs, ctrl) => {\n      ctrl.init();\n\n      const lang =  ctrl.gettextCatalog_.getCurrentLanguage();\n      $['datepicker']['setDefaults']($['datepicker']['regional'][lang]);\n\n      ctrl.sdateOptions = angular.extend({}, ctrl.sdateOptions, {\n        'minDate': ctrl.initialMinDate,\n        'maxDate': ctrl.initialMaxDate,\n        'onClose': (selectedDate) => {\n          if (selectedDate) {\n            $(element[0]).find('input[name=\"edate\"]').datepicker('option', 'minDate', selectedDate);\n          }\n        }\n      });\n\n      ctrl.edateOptions = angular.extend({}, ctrl.edateOptions, {\n        'minDate': ctrl.initialMinDate,\n        'maxDate': ctrl.initialMaxDate,\n        'onClose': (selectedDate) => {\n          if (selectedDate) {\n            $(element[0]).find('input[name=\"sdate\"]').datepicker('option', 'maxDate', selectedDate);\n          }\n        }\n      });\n\n      angular.element('body').on('hidden.bs.popover', () => {\n        const dp = angular.element('#ui-datepicker-div');\n        if (dp && dp.css('display') === 'block') {\n          $(element[0]).find('input[name$=\"date\"]').datepicker('hide');\n        }\n      });\n\n      $timeout(() => {\n        angular.element('#ui-datepicker-div').on('mousedown', (e) => {\n          e.stopPropagation();\n        });\n      });\n    }\n  };\n};\n\nexports.directive('ngeoDatePicker', exports.component_);\n\n\n/**\n * DatePickerController - directive conttroller\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$injector} $injector injector.\n * @param {!ngeo.misc.Time} ngeoTime time service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDatePickerController\n */\nexports.Controller_ = function($scope, $injector,\n  ngeoTime, gettextCatalog) {\n\n  /**\n   * @type {!ngeo.misc.Time}\n   * @private\n   */\n  this.ngeoTime_ = ngeoTime;\n\n  /**\n   * @type {!ngeox.TimeProperty}\n   * @export\n   */\n  this.time;\n\n  /**\n   * The gettext catalog\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n\n  /**\n   * If the component is used to select a date range\n   * @type {boolean}\n   * @export\n   */\n  this.isModeRange;\n\n\n  /**\n   * Function called after date(s) changed/selected\n   * @type {function({time: {start: number, end: number}})}\n   * @export\n   */\n  this.onDateSelected;\n\n\n  /**\n   * Initial min date for the datepicker\n   * @type {!Date}\n   */\n  this.initialMinDate;\n\n  /**\n   * Initial max date for the datepickeronDateSelected\n   * @type {!Date}\n   */\n  this.initialMaxDate;\n\n  /**\n   * Datepicker options for the second datepicker (only for range mode)\n   * @type {Object}\n   * @export\n   */\n  this.edateOptions = {\n    'changeMonth': true,\n    'changeYear': true\n  };\n\n  /**\n   * Datepicker options for the first datepicker\n   * @type {Object}\n   * @export\n   */\n  this.sdateOptions = {\n    'changeMonth': true,\n    'changeYear': true\n  };\n\n  /**\n   * Start date model for the first date picker\n   * @type {Date}\n   * @export\n   */\n  this.sdate;\n\n  /**\n   * End date model for the second datepicker (only for range mode)\n   * @type {Date}\n   * @export\n   */\n  this.edate;\n\n  $scope.$watchGroup(['datepickerCtrl.sdate', 'datepickerCtrl.edate'], (newDates, oldDates) => {\n    const sDate = newDates[0];\n    const eDate = newDates[1];\n\n    if (angular.isDate(sDate) && (!this.isModeRange || angular.isDate(eDate))) {\n      this.onDateSelected({\n        time: {\n          start: this.ngeoTime_.getTime(sDate),\n          end: this.ngeoTime_.getTime(eDate)\n        }\n      });\n    }\n  });\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  //fetch the initial options for the component\n  const initialOptions_ = this.ngeoTime_.getOptions(this.time);\n  this.initialMinDate = this.ngeoTime_.createDate(initialOptions_.minDate);\n  this.initialMaxDate = this.ngeoTime_.createDate(initialOptions_.maxDate);\n  this.isModeRange = this.time.mode === 'range';\n\n  if (this.isModeRange) {\n    googAsserts.assertArray(initialOptions_.values);\n    this.sdate = this.ngeoTime_.createDate(initialOptions_.values[0]);\n    this.edate = this.ngeoTime_.createDate(initialOptions_.values[1]);\n  } else {\n    googAsserts.assertNumber(initialOptions_.values);\n    this.sdate = this.ngeoTime_.createDate(initialOptions_.values);\n  }\n};\n\nexports.controller('ngeoDatePickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.Attribute\n */\nconst exports = {};\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\n\n\n/**\n * Set the `type` and `geomType` properties of an attribute if the given\n * type is a geometry one.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type Type.\n * @return {boolean} Whether both attribute type and geomType were set.\n */\nexports.setGeometryType = function(attribute, type) {\n  const geomRegex =\n    /gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/;\n  if (geomRegex.exec(type)) {\n    attribute.type = ngeoFormatAttributeType.GEOMETRY;\n    if (/^gml:Point/.exec(type)) {\n      attribute.geomType = 'Point';\n    } else if (/^gml:LineString|^gml:Curve/.exec(type)) {\n      attribute.geomType = 'LineString';\n    } else if (/^gml:Polygon|^gml:Surface/.exec(type)) {\n      attribute.geomType = 'Polygon';\n    } else if (/^gml:MultiPoint/.exec(type)) {\n      attribute.geomType = 'MultiPoint';\n    } else if (/^gml:MultiLineString|^gml:MultiCurve/.exec(type)) {\n      attribute.geomType = 'MultiLineString';\n    } else if (/^gml:MultiPolygon|^gml:MultiSurface/.exec(type)) {\n      attribute.geomType = 'MultiPolygon';\n    }\n  }\n  return !!attribute.type && !!attribute.geomType;\n};\n\n\nexport default exports;\n","/**\n * @module gmf.editing.EnumerateAttribute\n */\nconst exports = class {\n\n  /**\n   * The EnumerateAttribute is responsible of fetching all possible of a given\n   * attribute of a given data source (gmf layer).\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfEnumerateAttribute\n   */\n  constructor($http, gmfLayersUrl) {\n\n    // === Injected services ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.baseUrl_ = gmfLayersUrl;\n\n    /**\n     * @type {Object.<string, !angular.$q.Promise>}\n     * @private\n     */\n    this.promises_ = {};\n  }\n\n  /**\n   * @param {gmf.datasource.OGC} dataSource Data source.\n   * @param {string} attribute Attribute name.\n   * @return {angular.$q.Promise} Promise.\n   */\n  getAttributeValues(dataSource, attribute) {\n    const promiseId = `${dataSource.id}_${attribute}`;\n    const name = dataSource.name;\n    if (!this.promises_[promiseId]) {\n      const url = `${this.baseUrl_}/${name}/values/${attribute}`;\n      this.promises_[promiseId] = this.http_.get(url).then(\n        this.handleGetAttributeValues_.bind(this));\n    }\n    return this.promises_[promiseId];\n  }\n\n  /**\n   * @param {angular.$http.Response} resp Ajax response.\n   * @return {Array.<gmfThemes.GmfLayerAttributeValue>} List of the attribute\n   *     values.\n   * @export\n   */\n  handleGetAttributeValues_(resp) {\n    const data = /** @type {gmfThemes.GmfLayerAttributeValuesResponse} */ (\n      resp.data);\n    return data.items;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfEnumerateAttribute', []);\nexports.module.service('gmfEnumerateAttribute', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.File\n */\n/**\n * @constructor\n * @param {angular.$q} $q .\n * @param {angular.$http} $http .\n * @param {gettext} gettext .\n * @ngInject\n */\nconst exports = function($q, $http, gettext) {\n  let fileReader, canceler;\n\n  // Test the validity of the file size\n  this.isValidFileSize = function(fileSize) {\n    return !(fileSize > 20000000); // 20 Mo\n  };\n\n  this.isWmsGetCap = function(fileContent) {\n    return /<(WMT_MS_Capabilities|WMS_Capabilities)/.test(fileContent);\n  };\n\n  this.isWmtsGetCap = function(fileContent) {\n    return /<Capabilities/.test(fileContent);\n  };\n\n  this.isKml = function(fileContent) {\n    return /<kml/.test(fileContent) && /<\\/kml>/.test(fileContent);\n  };\n\n  this.isGpx = function(fileContent) {\n    return /<gpx/.test(fileContent) && /<\\/gpx>/.test(fileContent);\n  };\n\n  /**\n   * @param {!Blob} file .\n   * @return {angular.$q.Promise<string>} .\n   */\n  this.read = function(file) {\n    const defer = $q.defer();\n    if (fileReader && fileReader.readyState === FileReader.LOADING) {\n      fileReader.abort();\n    }\n    fileReader = new FileReader();\n    fileReader.onload = function(evt) {\n      defer.resolve(evt.target.result);\n    };\n    fileReader.onerror = function(evt) {\n      const err = evt.target.error;\n      console.error('Reading file failed: ', err);\n      defer.reject({\n        'message': err.code == 20 ? gettext('Operation canceled') : gettext('Read failed'),\n        'reason': err.message\n      });\n    };\n    fileReader.onprogress = function(evt) {\n      defer.notify(evt);\n    };\n    // Read the file\n    fileReader.readAsText(file);\n    return defer.promise;\n  };\n\n  /**\n   * @param {string} url .\n   * @param {angular.$q.Deferred=} opt_cancelP .\n   * @return {angular.$q.Promise<Blob>} .\n   */\n  this.load = function(url, opt_cancelP) {\n\n    if (canceler) {\n      canceler.resolve();\n    }\n    canceler = opt_cancelP || $q.defer();\n\n    // Angularjs doesn't handle onprogress event\n    const defer = $q.defer();\n    $http.get(url, {\n      timeout: canceler.promise\n    }).then((response) => {\n      defer.resolve(response.data);\n    }, (reason) => {\n      console.error('Uploading file failed: ', reason);\n      defer.reject({\n        'message': gettext('Upload failed'),\n        'reason': reason\n      });\n    });\n    return defer.promise;\n  };\n};\n\nexports.module = angular.module('ngeoFile', []);\n\nexports.module.service('ngeoFile', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.controllers.AbstractDesktopController\n */\nimport gmfControllersAbstractAppController from 'gmf/controllers/AbstractAppController.js';\nimport gmfContextualdataModule from 'gmf/contextualdata/module.js';\nimport gmfDrawingModule from 'gmf/drawing/module.js';\nimport gmfEditingModule from 'gmf/editing/module.js';\nimport gmfPermalinkShareComponent from 'gmf/permalink/shareComponent.js';\nimport gmfPrintComponent from 'gmf/print/component.js';\nimport gmfProfileModule from 'gmf/profile/module.js';\nimport gmfRasterComponent from 'gmf/raster/component.js';\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoQueryBboxQueryComponent from 'ngeo/query/bboxQueryComponent.js';\nimport gmfImportModule from 'gmf/import/module.js';\nimport * as olBase from 'ol/index.js';\nimport * as olProj from 'ol/proj.js';\nimport * as olObj from 'ol/obj.js';\nimport olCollection from 'ol/Collection.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olControlScaleLine from 'ol/control/ScaleLine.js';\nimport olControlZoom from 'ol/control/Zoom.js';\nimport olControlRotate from 'ol/control/Rotate.js';\nimport * as olInteraction from 'ol/interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Desktop application abstract controller.\n *\n * This file includes `goog.require`'s for desktop components/directives used\n * by the HTML page and the controller to provide the configuration.\n *\n * @param {gmfx.Config} config A part of the application config.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @extends {gmf.controllers.AbstractAppController}\n * @ngdoc controller\n * @ngInject\n * @export\n */\nconst exports = function(config, $scope, $injector) {\n\n  const viewConfig = {\n    projection: olProj.get(`EPSG:${config.srid || 21781}`)\n  };\n  olObj.assign(viewConfig, config.mapViewConfig || {});\n\n  const arrow = gmfControllersAbstractAppController.prototype.getLocationIcon();\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    pixelRatio: config.mapPixelRatio,\n    layers: [],\n    view: new olView(viewConfig),\n    controls: config.mapControls || [\n      new olControlScaleLine({\n        target: document.getElementById('scaleline')\n      }),\n      new olControlZoom({\n        zoomInTipLabel: '',\n        zoomOutTipLabel: ''\n      }),\n      new olControlRotate({\n        label: arrow,\n        tipLabel: ''\n      })\n    ],\n    interactions: config.mapInteractions || olInteraction.defaults({\n      pinchRotate: true,\n      altShiftDragRotate: true\n    }),\n    loadTilesWhileAnimating: true,\n    loadTilesWhileInteracting: true\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.loginActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.toolsActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modalShareShown = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.editFeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.routingfeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.googleStreetViewActive = false;\n\n  /**\n   * @type {!ol.style.Style}\n   * @export\n   */\n  this.googleStreetViewStyle = new olStyleStyle({\n    text: new olStyleText({\n      fill: new olStyleFill({color: '#279B61'}),\n      font: 'normal 30px FontAwesome',\n      offsetY: -15,\n      stroke: new olStyleStroke({color: '#ffffff', width: 3}),\n      text: '\\uf041'\n    })\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.importDataSourceActive = false;\n\n  const body = $('body');\n\n  // initialize tooltips\n  body.tooltip({\n    container: 'body',\n    trigger: 'hover',\n    selector: '[data-toggle=\"tooltip\"]'\n  });\n\n  // deactivate tooltips on touch device\n  body.on('touchstart.detectTouch', () => {\n    body.tooltip('destroy');\n    body.off('touchstart.detectTouch');\n  });\n\n  /**\n   * Collection of features for the draw interaction\n   * @type {ol.Collection.<ol.Feature>}\n   */\n  const ngeoFeatures = $injector.get('ngeoFeatures');\n\n  /**\n   * @type {ngeo.map.FeatureOverlay}\n   * @export\n   */\n  this.drawFeatureLayer = $injector.get('ngeoFeatureOverlayMgr')\n    .getFeatureOverlay();\n  this.drawFeatureLayer.setFeatures(ngeoFeatures);\n\n  const ngeoFeatureHelper = $injector.get('ngeoFeatureHelper');\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.editFeatureVectorLayer = new olLayerVector({\n    source: new olSourceVector({\n      wrapX: false,\n      features: new olCollection()\n    }),\n    style: (feature, resolution) => ngeoFeatureHelper.createEditingStyles(feature)\n    // style: ngeoFeatureHelper.createEditingStyles.bind(ngeoFeatureHelper)\n  });\n  this.editFeatureVectorLayer.setMap(this.map);\n\n  /**\n   * The ngeo ToolActivate manager service.\n   * @type {ngeo.misc.ToolActivateMgr}\n   */\n  const ngeoToolActivateMgr = $injector.get('ngeoToolActivateMgr');\n\n  const editFeatureActivate = new ngeoMiscToolActivate(this, 'editFeatureActive');\n  ngeoToolActivateMgr.registerTool('mapTools', editFeatureActivate, false);\n\n  const googleStreetViewActivate = new ngeoMiscToolActivate(\n    this,\n    'googleStreetViewActive'\n  );\n  ngeoToolActivateMgr.registerTool('mapTools', googleStreetViewActivate, false);\n\n  /**\n   * @type {ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.scaleSelectorOptions = {\n    dropup: true\n  };\n\n  /**\n   * @type {ol.geom.LineString}\n   * @export\n   */\n  this.profileLine = null;\n\n  gmfControllersAbstractAppController.call(this, config, $scope, $injector);\n\n  // Close the login panel on successful login.\n  $scope.$watch(() => this.gmfUser.username, (newVal) => {\n    if (newVal !== null && this.loginActive) {\n      this.loginActive = false;\n    }\n  });\n};\n\nolBase.inherits(exports, gmfControllersAbstractAppController);\n\nexports.module = angular.module('GmfAbstractDesktopControllerModule', [\n  gmfControllersAbstractAppController.module.name,\n  gmfContextualdataModule.name,\n  gmfDrawingModule.name,\n  gmfEditingModule.name,\n  gmfPermalinkShareComponent.name,\n  gmfPrintComponent.name,\n  gmfProfileModule.name,\n  gmfRasterComponent.name,\n  ngeoDrawFeatures.name,\n  ngeoMapResizemap.name,\n  ngeoQueryBboxQueryComponent.name,\n  gmfImportModule.name,\n]);\n\nexports.module.controller(\n  'AbstractDesktopController',\n  exports);\n\nexports.module.value('isDesktop', true);\n\nexports.module.value('ngeoQueryOptions', {\n  'limit': 20\n});\n\nexports.module.value('ngeoMeasurePrecision', 3);\nexports.module.value('ngeoMeasureDecimals', 0);\n\n\nexport default exports;\n","/**\n * @module ngeo.print.VectorEncoder\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport * as olMath from 'ol/math.js';\nimport olStyleIcon from 'ol/style/Icon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport * as olColor from 'ol/color.js';\n\n/**\n * @constructor\n */\nconst exports = function() {\n  /**\n   * @type {ol.format.GeoJSON}\n   */\n  this.geojsonFormat = new olFormatGeoJSON();\n};\n\n\n/**\n * @enum {string}\n */\nexports.PrintStyleType = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.print.VectorEncoder.PrintStyleType>}\n * @private\n */\nexports.PrintStyleTypes_ = {\n  'LineString': exports.PrintStyleType.LINE_STRING,\n  'Point': exports.PrintStyleType.POINT,\n  'Polygon': exports.PrintStyleType.POLYGON,\n  'MultiLineString': exports.PrintStyleType.LINE_STRING,\n  'MultiPoint': exports.PrintStyleType.POINT,\n  'MultiPolygon': exports.PrintStyleType.POLYGON\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Vector} layer Layer.\n * @param {number} resolution Resolution.\n */\nexports.prototype.encodeVectorLayer = function(arr, layer, resolution) {\n  const source = layer.getSource();\n  googAsserts.assertInstanceof(source, olSourceVector);\n\n  const features = source.getFeatures();\n\n  const /** @type {Array.<GeoJSONFeature>} */ geojsonFeatures = [];\n  const mapfishStyleObject = /** @type {MapFishPrintVectorStyle} */ ({\n    version: 2\n  });\n\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    const originalFeature = features[i];\n\n    let styleData = null;\n    let styleFunction = originalFeature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      styleData = styleFunction.call(originalFeature, resolution);\n    } else {\n      styleFunction = layer.getStyleFunction();\n      if (styleFunction !== undefined) {\n        styleData = styleFunction.call(layer, originalFeature, resolution);\n      }\n    }\n    const origGeojsonFeature = this.geojsonFormat.writeFeatureObject(originalFeature);\n    /**\n     * @type {Array<ol.style.Style>}\n     */\n    const styles = (styleData !== null && !Array.isArray(styleData)) ? [styleData] : styleData;\n    googAsserts.assert(Array.isArray(styles));\n\n    if (styles !== null && styles.length > 0) {\n      let isOriginalFeatureAdded = false;\n      for (let j = 0, jj = styles.length; j < jj; ++j) {\n        const style = styles[j];\n        const styleId = olBase.getUid(style).toString();\n        let geometry = style.getGeometry();\n        let geojsonFeature;\n        if (!geometry) {\n          geojsonFeature = origGeojsonFeature;\n          geometry = originalFeature.getGeometry();\n          // no need to encode features with no geometry\n          if (!geometry) {\n            continue;\n          }\n          if (!isOriginalFeatureAdded) {\n            geojsonFeatures.push(geojsonFeature);\n            isOriginalFeatureAdded = true;\n          }\n        } else {\n          let styledFeature = originalFeature.clone();\n          styledFeature.setGeometry(geometry);\n          geojsonFeature = this.geojsonFormat.writeFeatureObject(styledFeature);\n          geometry = styledFeature.getGeometry();\n          styledFeature = null;\n          geojsonFeatures.push(geojsonFeature);\n        }\n\n        const geometryType = geometry.getType();\n        if (geojsonFeature.properties === null) {\n          geojsonFeature.properties = {};\n        }\n\n        const featureStyleProp = `_ngeo_style_${j}`;\n        this.encodeVectorStyle(mapfishStyleObject, geometryType, style, styleId, featureStyleProp);\n        geojsonFeature.properties[featureStyleProp] = styleId;\n      }\n    }\n  }\n\n  // MapFish Print fails if there are no style rules, even if there are no\n  // features either. To work around this we just ignore the layer if the\n  // array of GeoJSON features is empty.\n  // See https://github.com/mapfish/mapfish-print/issues/279\n\n  if (geojsonFeatures.length > 0) {\n    const geojsonFeatureCollection = /** @type {GeoJSONFeatureCollection} */ ({\n      type: 'FeatureCollection',\n      features: geojsonFeatures\n    });\n    const object = /** @type {MapFishPrintVectorLayer} */ ({\n      geoJson: geojsonFeatureCollection,\n      opacity: layer.getOpacity(),\n      style: mapfishStyleObject,\n      type: 'geojson'\n    });\n    arr.push(object);\n  }\n};\n\n\n/**\n * @param {MapFishPrintVectorStyle} object MapFish style object.\n * @param {ol.geom.GeometryType} geometryType Type of the GeoJSON geometry\n * @param {ol.style.Style} style Style.\n * @param {string} styleId Style id.\n * @param {string} featureStyleProp Feature style property name.\n */\nexports.prototype.encodeVectorStyle = function(object, geometryType, style, styleId, featureStyleProp) {\n  if (!(geometryType in exports.PrintStyleTypes_)) {\n    // unsupported geometry type\n    return;\n  }\n  const styleType = exports.PrintStyleTypes_[geometryType];\n  const key = `[${featureStyleProp} = '${styleId}']`;\n  if (key in object) {\n    // do nothing if we already have a style object for this CQL rule\n    return;\n  }\n  const styleObject = /** @type {MapFishPrintSymbolizers} */ ({\n    symbolizers: []\n  });\n  object[key] = styleObject;\n  const fillStyle = style.getFill();\n  const imageStyle = style.getImage();\n  const strokeStyle = style.getStroke();\n  const textStyle = style.getText();\n  if (styleType === exports.PrintStyleType.POLYGON) {\n    if (fillStyle !== null) {\n      this.encodeVectorStylePolygon(\n        styleObject.symbolizers, fillStyle, strokeStyle);\n    }\n  } else if (styleType === exports.PrintStyleType.LINE_STRING) {\n    if (strokeStyle !== null) {\n      this.encodeVectorStyleLine(styleObject.symbolizers, strokeStyle);\n    }\n  } else if (styleType === exports.PrintStyleType.POINT) {\n    if (imageStyle !== null) {\n      this.encodeVectorStylePoint(styleObject.symbolizers, imageStyle);\n    }\n  }\n  if (textStyle !== null) {\n    this.encodeTextStyle(styleObject.symbolizers, textStyle);\n  }\n};\n\n\n/**\n * @param {MapFishPrintSymbolizerPoint|MapFishPrintSymbolizerPolygon} symbolizer MapFish Print symbolizer.\n * @param {!ol.style.Fill} fillStyle Fill style.\n * @protected\n */\nexports.prototype.encodeVectorStyleFill = function(symbolizer, fillStyle) {\n  let fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(typeof fillColor === 'string' || Array.isArray(fillColor));\n    fillColor = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    symbolizer.fillColor = ngeoUtils.rgbArrayToHex(fillColor);\n    symbolizer.fillOpacity = fillColor[3];\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStyleLine = function(symbolizers, strokeStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerLine} */ ({\n    type: 'line'\n  });\n  this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n  symbolizers.push(symbolizer);\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Image} imageStyle Image style.\n * @protected\n */\nexports.prototype.encodeVectorStylePoint = function(symbolizers, imageStyle) {\n  let symbolizer;\n  if (imageStyle instanceof olStyleCircle) {\n    symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n      type: 'point'\n    });\n    symbolizer.pointRadius = imageStyle.getRadius();\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      this.encodeVectorStyleFill(symbolizer, fillStyle);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n    }\n  } else if (imageStyle instanceof olStyleIcon) {\n    const src = imageStyle.getSrc();\n    if (src !== undefined) {\n      symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n        type: 'point',\n        externalGraphic: src\n      });\n      const opacity = imageStyle.getOpacity();\n      if (opacity !== null) {\n        symbolizer.graphicOpacity = opacity;\n      }\n      const size = imageStyle.getSize();\n      if (size !== null) {\n        let scale = imageStyle.getScale();\n        if (isNaN(scale)) {\n          scale = 1;\n        }\n        symbolizer.graphicWidth = size[0] * scale;\n        symbolizer.graphicHeight = size[1] * scale;\n      }\n      let rotation = imageStyle.getRotation();\n      if (isNaN(rotation)) {\n        rotation = 0;\n      }\n      symbolizer.rotation = olMath.toDegrees(rotation);\n    }\n  } else if (imageStyle instanceof olStyleRegularShape) {\n    /**\n     * Mapfish Print does not support image defined with ol.style.RegularShape.\n     * As a workaround, I try to map the image on a well-known image name.\n     */\n    const points = /** @type {ol.style.RegularShape} */ (imageStyle).getPoints();\n    if (points !== null) {\n      symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n        type: 'point'\n      });\n      if (points === 4) {\n        symbolizer.graphicName = 'square';\n      } else if (points === 3) {\n        symbolizer.graphicName = 'triangle';\n      } else if (points === 5) {\n        symbolizer.graphicName = 'star';\n      } else if (points === 8) {\n        symbolizer.graphicName = 'cross';\n      }\n      const sizeShape = imageStyle.getSize();\n      if (sizeShape !== null) {\n        symbolizer.graphicWidth = sizeShape[0];\n        symbolizer.graphicHeight = sizeShape[1];\n      }\n      const rotationShape = imageStyle.getRotation();\n      if (!isNaN(rotationShape) && rotationShape !== 0) {\n        symbolizer.rotation = olMath.toDegrees(rotationShape);\n      }\n      const opacityShape = imageStyle.getOpacity();\n      if (opacityShape !== null) {\n        symbolizer.graphicOpacity = opacityShape;\n      }\n      const strokeShape = imageStyle.getStroke();\n      if (strokeShape !== null) {\n        this.encodeVectorStyleStroke(symbolizer, strokeShape);\n      }\n      const fillShape = imageStyle.getFill();\n      if (fillShape !== null) {\n        this.encodeVectorStyleFill(symbolizer, fillShape);\n      }\n    }\n  }\n  if (symbolizer !== undefined) {\n    symbolizers.push(symbolizer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStylePolygon = function(symbolizers, fillStyle, strokeStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerPolygon} */ ({\n    type: 'polygon'\n  });\n  this.encodeVectorStyleFill(symbolizer, fillStyle);\n  if (strokeStyle !== null) {\n    this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n  }\n  symbolizers.push(symbolizer);\n};\n\n\n/**\n * @param {MapFishPrintSymbolizerPoint|MapFishPrintSymbolizerLine|MapFishPrintSymbolizerPolygon}\n *      symbolizer MapFish Print symbolizer.\n * @param {!ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStyleStroke = function(symbolizer, strokeStyle) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(typeof strokeColor === 'string' || Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    symbolizer.strokeColor = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    symbolizer.strokeOpacity = strokeColorRgba[3];\n  }\n  const strokeDashstyle = strokeStyle.getLineDash();\n  if (strokeDashstyle !== null) {\n    symbolizer.strokeDashstyle = strokeDashstyle.join(' ');\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    symbolizer.strokeWidth = strokeWidth;\n  }\n  const strokeLineCap = strokeStyle.getLineCap();\n  if (strokeLineCap) {\n    symbolizer.strokeLinecap = strokeStyle.getLineCap();\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizerText>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Text} textStyle Text style.\n * @protected\n */\nexports.prototype.encodeTextStyle = function(symbolizers, textStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerText} */ ({\n    type: 'Text'\n  });\n  const label = textStyle.getText();\n  if (label !== undefined) {\n    symbolizer.label = label;\n    let xAlign = 'c';\n    let yAlign = 'm';\n\n    const olTextAlign = textStyle.getTextAlign();\n    // 'left', 'right', 'center', 'end' or 'start'.\n    if (olTextAlign === 'left' || olTextAlign === 'start') {\n      xAlign = 'l';\n    } else if (olTextAlign === 'right' || olTextAlign === 'end') {\n      xAlign = 'r';\n    }\n\n    const olTextBaseline = textStyle.getTextBaseline();\n    // 'bottom', 'top', 'middle', 'alphabetic', 'hanging' or 'ideographic'\n    if (olTextBaseline === 'bottom') {\n      yAlign = 'l';\n    } else if (olTextBaseline === 'top') {\n      yAlign = 't';\n    }\n    symbolizer.labelAlign = `${xAlign}${yAlign}`;\n\n    const labelRotation = textStyle.getRotation();\n    if (labelRotation !== undefined) {\n      // Mapfish Print expects a string, not a number to rotate text\n      symbolizer.labelRotation = (labelRotation * 180 / Math.PI).toString();\n      // rotate around the vertical/horizontal center\n      symbolizer.labelAlign = 'cm';\n    }\n\n    const fontStyle = textStyle.getFont();\n    if (fontStyle !== undefined) {\n      const font = fontStyle.split(' ');\n      if (font.length >= 3) {\n        symbolizer.fontWeight = font[0];\n        symbolizer.fontSize = font[1];\n        symbolizer.fontFamily = font.splice(2).join(' ');\n      }\n    }\n\n    const strokeStyle = textStyle.getStroke();\n    if (strokeStyle !== null) {\n      const strokeColor = strokeStyle.getColor();\n      googAsserts.assert(typeof strokeColor === 'string' || Array.isArray(strokeColor));\n      const strokeColorRgba = olColor.asArray(strokeColor);\n      googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n      symbolizer.haloColor = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n      symbolizer.haloOpacity = strokeColorRgba[3];\n      const width = strokeStyle.getWidth();\n      if (width !== undefined) {\n        // Width is a stroke, radius a radius, so divide by 2\n        symbolizer.haloRadius = width / 2;\n      }\n    }\n\n    const fillStyle = textStyle.getFill();\n    if (fillStyle !== null) {\n      const fillColor = fillStyle.getColor();\n      googAsserts.assert(typeof fillColor === 'string' || Array.isArray(fillColor));\n      const fillColorRgba = olColor.asArray(fillColor);\n      googAsserts.assert(Array.isArray(fillColorRgba), 'only supporting fill colors');\n      symbolizer.fontColor = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    }\n\n    // Mapfish Print allows offset only if labelAlign is defined.\n    if (symbolizer.labelAlign !== undefined) {\n      symbolizer.labelXOffset = textStyle.getOffsetX();\n      // Mapfish uses the opposite direction of OpenLayers for y axis, so the\n      // minus sign is required for the y offset to be identical.\n      symbolizer.labelYOffset = -textStyle.getOffsetY();\n    }\n\n    symbolizers.push(symbolizer);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.print.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoPrintVectorEncoder from 'ngeo/print/VectorEncoder.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olArray from 'ol/array.js';\nimport * as olObj from 'ol/obj.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olMath from 'ol/math.js';\nimport * as olSize from 'ol/size.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport olTilegridWMTS from 'ol/tilegrid/WMTS.js';\n\n/**\n * Provides a function to create ngeo.print.Service objects used to\n * interact with MapFish Print v3 services.\n *\n * ngeo.print.Service objects expose the following methods:\n *\n * - createSpec: create a report specification object\n * - createReport: send a create report request\n * - getStatus: get the status of a report\n * - getReportUrl: get the URL of a report\n * - getCapabilities: get the capabilities of the server\n *\n *\n *     let printBaseUrl = 'http://example.com/print';\n *     let print = new ngeo.print.Service(printBaseUrl);\n *\n *     let scale = 5000;\n *     let dpi = 72;\n *     let layout = 'A4 portrait';\n *     let format = 'pdf';\n *     let reportSpec = print.createSpec(map, scale, dpi, layout, format, {\n *       'title': 'A title for my report',\n *       'rotation': 45 // degree\n *     });\n *\n * See our live example: [../examples/mapfishprint.html](../examples/mapfishprint.html)\n *\n * TODO and limitations:\n *\n * - createSpec should also accept a bbox instead of a center and a scale.\n * - Add support for ol.style.RegularShape. MapFish Print supports symbols\n *   like crosses, stars and squares, so printing regular shapes should be\n *   possible.\n * - ol.style.Icon may use a sprite image, and offsets to define to rectangle\n *   to use within the sprite. This type of icons won't be printed correctly\n *   as MapFish Print does not support sprite icons.\n *\n * @constructor\n * @struct\n * @param {string} url URL to MapFish print web service.\n * @param {angular.$http} $http Angular $http service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper service.\n */\nconst exports = function(url, $http, gettextCatalog, ngeoLayerHelper) {\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = url;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.print.VectorEncoder}\n   * @private\n   */\n  this.vectorEncoder_ = new ngeoPrintVectorEncoder();\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.printNativeAngle_ = true;\n};\n\n\n/**\n * Cancel a report.\n * @param {string} ref Print report reference.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.cancel = function(ref, opt_httpConfig) {\n  const httpConfig = opt_httpConfig !== undefined ? opt_httpConfig :\n    /** @type {angular.$http.Config} */ ({});\n  const url = `${this.url_}/cancel/${ref}`;\n  // \"delete\" is a reserved word, so use ['delete']\n  return this.$http_['delete'](url, httpConfig);\n};\n\n\n/**\n * Create a report specification.\n * @param {ol.Map} map Map.\n * @param {number} scale Scale.\n * @param {number} dpi DPI.\n * @param {string} layout Layout.\n * @param {string} format Formats.\n * @param {Object.<string, *>} customAttributes Custom attributes.\n * @return {MapFishPrintSpec} The print spec.\n * @export\n */\nexports.prototype.createSpec = function(\n  map, scale, dpi, layout, format, customAttributes) {\n\n  const specMap = /** @type {MapFishPrintMap} */ ({\n    dpi: dpi,\n    rotation: /** number */ (customAttributes['rotation'])\n  });\n\n  this.encodeMap_(map, scale, specMap);\n\n  const attributes = /** @type {!MapFishPrintAttributes} */ ({\n    map: specMap\n  });\n  olObj.assign(attributes, customAttributes);\n\n  const lang = this.gettextCatalog_.currentLanguage;\n\n  const spec = /** @type {MapFishPrintSpec} */ ({\n    attributes,\n    format,\n    lang,\n    layout\n  });\n\n  return spec;\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @param {number} scale Scale.\n * @param {MapFishPrintMap} object Object.\n * @private\n */\nexports.prototype.encodeMap_ = function(map, scale, object) {\n  const view = map.getView();\n  const viewCenter = view.getCenter();\n  const viewProjection = view.getProjection();\n  const viewResolution = view.getResolution();\n  const viewRotation = object.rotation || olMath.toDegrees(view.getRotation());\n\n  googAsserts.assert(viewCenter !== undefined);\n  googAsserts.assert(viewProjection !== undefined);\n\n  object.center = viewCenter;\n  object.projection = viewProjection.getCode();\n  object.rotation = viewRotation;\n  object.scale = scale;\n  object.layers = [];\n\n  const mapLayerGroup = map.getLayerGroup();\n  googAsserts.assert(mapLayerGroup);\n  this.printNativeAngle_ = !(mapLayerGroup.get('printNativeAngle') === false);\n  let layers = this.ngeoLayerHelper_.getFlatLayers(mapLayerGroup);\n\n  // Sort the layer by ZIndex\n  olArray.stableSort(layers, (layer_a, layer_b) => layer_a.getZIndex() - layer_b.getZIndex());\n  layers = layers.slice().reverse();\n\n  layers.forEach((layer) => {\n    if (layer.getVisible()) {\n      googAsserts.assert(viewResolution !== undefined);\n      this.encodeLayer(object.layers, layer, viewResolution);\n    }\n  });\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Base} layer Layer.\n * @param {number} resolution Resolution.\n */\nexports.prototype.encodeLayer = function(arr, layer, resolution) {\n  if (layer instanceof olLayerImage) {\n    this.encodeImageLayer_(arr, layer);\n  } else if (layer instanceof olLayerTile) {\n    this.encodeTileLayer_(arr, layer);\n  } else if (layer instanceof olLayerVector) {\n    this.vectorEncoder_.encodeVectorLayer(arr, layer, resolution);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Image} layer Layer.\n * @private\n */\nexports.prototype.encodeImageLayer_ = function(arr, layer) {\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  const source = layer.getSource();\n  if (source instanceof olSourceImageWMS) {\n    this.encodeImageWmsLayer_(arr, layer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Image} layer Layer.\n * @private\n */\nexports.prototype.encodeImageWmsLayer_ = function(arr, layer) {\n  const source = layer.getSource();\n\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  googAsserts.assertInstanceof(source, olSourceImageWMS);\n\n  const url = source.getUrl();\n  if (url !== undefined) {\n    this.encodeWmsLayer_(\n      arr, layer.getOpacity(), url, source.getParams());\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {number} opacity Opacity of the layer.\n * @param {string} url Url of the WMS server.\n * @param {Object} params Url parameters\n * @private\n */\nexports.prototype.encodeWmsLayer_ = function(arr, opacity, url, params) {\n  if (url.startsWith('//')) {\n    url = window.location.protocol  + url;\n  }\n  const url_url = new URL(url);\n  const customParams = {'TRANSPARENT': true};\n  if (url_url.searchParams) {\n    for (const element of url_url.searchParams) {\n      customParams[element[0]] = element[1];\n    }\n  }\n  for (const key in params) {\n    const value = params[key];\n    // remove empty params\n    if (value !== null && value !== undefined) {\n      customParams[key] = value;\n    }\n  }\n  delete customParams['LAYERS'];\n  delete customParams['FORMAT'];\n  delete customParams['SERVERTYPE'];\n  delete customParams['VERSION'];\n\n  const object = /** @type {MapFishPrintWmsLayer} */ ({\n    baseURL: exports.getAbsoluteUrl_(url_url.origin + url_url.pathname),\n    imageFormat: 'FORMAT' in params ? params['FORMAT'] : 'image/png',\n    layers: params['LAYERS'].split(','),\n    customParams: customParams,\n    serverType: params['SERVERTYPE'],\n    type: 'wms',\n    opacity: opacity,\n    version: params['VERSION'],\n    useNativeAngle: this.printNativeAngle_,\n  });\n  arr.push(object);\n};\n\n\n/**\n * @param {string} url URL.\n * @return {string} Absolute URL.\n * @private\n */\nexports.getAbsoluteUrl_ = function(url) {\n  const a = document.createElement('a');\n  a.href = encodeURI(url);\n  return decodeURI(a.href);\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileLayer_ = function(arr, layer) {\n  googAsserts.assertInstanceof(layer, olLayerTile);\n  const source = layer.getSource();\n  if (source instanceof olSourceWMTS) {\n    this.encodeTileWmtsLayer_(arr, layer);\n  } else if (source instanceof olSourceTileWMS) {\n    this.encodeTileWmsLayer_(arr, layer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileWmtsLayer_ = function(arr, layer) {\n  googAsserts.assertInstanceof(layer, olLayerTile);\n  const source = layer.getSource();\n  googAsserts.assertInstanceof(source, olSourceWMTS);\n\n  const projection = source.getProjection();\n  const tileGrid = source.getTileGrid();\n  googAsserts.assertInstanceof(tileGrid, olTilegridWMTS);\n  const matrixIds = tileGrid.getMatrixIds();\n\n  /** @type {Array.<MapFishPrintWmtsMatrix>} */\n  const matrices = [];\n\n  for (let i = 0, ii = matrixIds.length; i < ii; ++i) {\n    const tileRange = tileGrid.getFullTileRange(i);\n    matrices.push(/** @type {MapFishPrintWmtsMatrix} */ ({\n      identifier: matrixIds[i],\n      scaleDenominator: tileGrid.getResolution(i) *\n          projection.getMetersPerUnit() / 0.28E-3,\n      tileSize: olSize.toSize(tileGrid.getTileSize(i)),\n      topLeftCorner: tileGrid.getOrigin(i),\n      matrixSize: [\n        tileRange.maxX - tileRange.minX,\n        tileRange.maxY - tileRange.minY\n      ]\n    }));\n  }\n\n  const dimensions = source.getDimensions();\n  const dimensionKeys = Object.keys(dimensions);\n\n  const object = /** @type {MapFishPrintWmtsLayer} */ ({\n    baseURL: this.getWmtsUrl_(source),\n    dimensions: dimensionKeys,\n    dimensionParams: dimensions,\n    imageFormat: source.getFormat(),\n    layer: source.getLayer(),\n    matrices: matrices,\n    matrixSet: source.getMatrixSet(),\n    opacity: layer.getOpacity(),\n    requestEncoding: source.getRequestEncoding(),\n    style: source.getStyle(),\n    type: 'WMTS',\n    version: source.getVersion()\n  });\n\n  arr.push(object);\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileWmsLayer_ = function(arr, layer) {\n  const source = layer.getSource();\n\n  googAsserts.assertInstanceof(layer, olLayerTile);\n  googAsserts.assertInstanceof(source, olSourceTileWMS);\n\n  this.encodeWmsLayer_(\n    arr, layer.getOpacity(), source.getUrls()[0], source.getParams());\n};\n\n\n/**\n * Return the WMTS URL to use in the print spec.\n * @param {ol.source.WMTS} source The WMTS source.\n * @return {string} URL.\n * @private\n */\nexports.prototype.getWmtsUrl_ = function(source) {\n  const urls = source.getUrls();\n  googAsserts.assert(urls.length > 0);\n  return exports.getAbsoluteUrl_(urls[0]);\n};\n\n\n/**\n * Send a create report request to the MapFish Print service.\n * @param {MapFishPrintSpec} printSpec Print specification.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.createReport = function(printSpec, opt_httpConfig) {\n  const format = printSpec.format || 'pdf';\n  const url = `${this.url_}/report.${format}`;\n  const httpConfig = /** @type {!angular.$http.Config} */ ({\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8'\n    }\n  });\n  olObj.assign(httpConfig,\n    opt_httpConfig !== undefined ? opt_httpConfig : {});\n  return this.$http_.post(url, printSpec, httpConfig);\n};\n\n\n/**\n * Get the status of a report.\n * @param {string} ref Print report reference.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.getStatus = function(ref, opt_httpConfig) {\n  const httpConfig = opt_httpConfig !== undefined ? opt_httpConfig :\n    /** @type {angular.$http.Config} */ ({});\n  const url = `${this.url_}/status/${ref}.json`;\n  return this.$http_.get(url, httpConfig);\n};\n\n\n/**\n * Get the URL of a report.\n * @param {string} ref Print report reference.\n * @return {string} The report URL for this ref.\n * @export\n */\nexports.prototype.getReportUrl = function(ref) {\n  return `${this.url_}/report/${ref}`;\n};\n\n\n/**\n * Get the print capabilities from MapFish Print.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n */\nexports.prototype.getCapabilities = function(opt_httpConfig) {\n  const httpConfig =\n    opt_httpConfig !== undefined ? opt_httpConfig : /** @type {angular.$http.Config} */ ({\n      withCredentials: true\n    });\n  const url = `${this.url_}/capabilities.json`;\n  return this.$http_.get(url, httpConfig);\n};\n\n\n/**\n * @param {angular.$http} $http Angular $http service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @return {ngeox.CreatePrint} The function to create a print service.\n * @ngInject\n * @ngdoc service\n * @ngname ngeoCreatePrint\n */\nexports.createPrintServiceFactory = function($http, gettextCatalog, ngeoLayerHelper) {\n  return (\n    /**\n     * @param {string} url URL to MapFish print service.\n     */\n    function(url) {\n      return new exports(url, $http, gettextCatalog, ngeoLayerHelper);\n    }\n  );\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoPrint', [\n  ngeoMapLayerHelper.module.name\n]);\nexports.module.service('ngeoPrintService', exports);\nexports.module.factory('ngeoCreatePrint', exports.createPrintServiceFactory);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.editFeatureSelectorComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport gmfEditingEditFeatureComponent from 'gmf/editing/editFeatureComponent.js';\n\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfEditingFeatureSelectorComponent', [\n  gmfEditingEditFeatureComponent.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/editing/editFeatureSelectorComponent', require('./editFeatureSelectorComponent.html'));\n});\n\n\n/**\n * Directive that uses the GMF Theme service to collect the editable layers\n * and create a drop-down list out of them. When the user selects one of the\n * layer from the list, a `gmf-editfeature` directive is created and shown,\n * which allows the user to edit that layer.\n *\n * Example:\n *\n *     <gmf-editfeatureselector\n *         gmf-editfeatureselector-active=\"ctrl.editFeatureSelectorActive\"\n *         gmf-editfeatureselector-map=\"::ctrl.map\"\n *         gmf-editfeatureselector-tolerance=\"::ctrl.tolerance\"\n *         gmf-editfeatureselector-vector=\"::ctrl.vectorLayer\">\n *     </gmf-editfeatureselector>\n *\n * @htmlAttribute {boolean} gmf-editfeatureselector-active Whether the\n *     directive is active or not.\n * @htmlAttribute {ol.Map} gmf-editfeatureselector-map The map.\n * @htmlAttribute {number|undefined} gmf-editfeatureselector-tolerance The\n *     buffer in pixels to use when making queries to get the features.\n * @htmlAttribute {ol.layer.Vector} gmf-editfeatureselector-vector The vector\n *     layer where the selected or created features are drawn.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfEditfeatureselector\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfEditfeatureselectorController as efsCtrl',\n    scope: {\n      'active': '=gmfEditfeatureselectorActive',\n      'map': '<gmfEditfeatureselectorMap',\n      'tolerance': '<?gmfEditfeatureselectorTolerance',\n      'vectorLayer': '<gmfEditfeatureselectorVector'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/editing/editFeatureSelectorComponent'\n  };\n};\n\n\nexports.directive('gmfEditfeatureselector', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfEditfeatureselectorController\n */\nexports.Controller_ = function($scope, $timeout, gmfThemes, gmfTreeManager) {\n\n  // === Directive options ===\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = this.active === true;\n\n  $scope.$watch(\n    () => this.active,\n    this.handleActiveChange_.bind(this)\n  );\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.tolerance;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.vectorLayer;\n\n\n  // === Injected services ===\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @param {Array.<ngeo.layertree.Controller>} value First level controllers.\n   */\n  const updateEditableTreeCtrls = function(value) {\n    // Timeout required, because the collection event is fired before the\n    // leaf nodes are created and they are the ones we're looking for here.\n    this.$timeout_(() => {\n      if (value) {\n        const editables = this.editableTreeCtrls;\n\n        editables.length = 0;\n        this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.editable) {\n            googAsserts.assert(treeCtrl.children.length === 0);\n            editables.push(treeCtrl);\n          }\n        });\n      }\n    }, 0);\n  };\n\n  /**\n   * @type {function()}\n   * @private\n   */\n  this.treeCtrlsWatcherUnregister_ = $scope.$watchCollection(() => {\n    if (gmfTreeManager.rootCtrl) {\n      return gmfTreeManager.rootCtrl.children;\n    }\n  }, updateEditableTreeCtrls.bind(this));\n\n\n  // === Other inner properties ===\n\n  /**\n   * Flag shared with the `gmf-editfeature` directive used to determine if it\n   * has unsaved changes or not.\n   * @type {boolean}\n   * @export\n   */\n  this.dirty = false;\n\n  /**\n   * List of editable Layertree controllers.\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.editableTreeCtrls = [];\n\n  /**\n   * The currently selected Layertree controller.\n   * @type {?ngeo.layertree.Controller}\n   * @export\n   */\n  this.selectedEditableTreeCtrl = null;\n\n  $scope.$watch(\n    () => this.selectedEditableTreeCtrl,\n    (newValue, oldValue) => {\n      this.dirty = false;\n      this.state = gmfEditingEditFeatureComponent.State.IDLE;\n    }\n  );\n\n  /**\n   * The state of this directive shared with the `gmf-editfeature` directive.\n   * This property allows the proper management of the \"stop editing\" button.\n   * When clicked, the according state is set and the `gmf-editfeature`\n   * directive checks if it has unsaved changes and allow this directive to\n   * continue the action that was made or not.\n   * @type {string}\n   * @export\n   */\n  this.state = gmfEditingEditFeatureComponent.State.IDLE;\n\n  $scope.$watch(\n    () => this.state,\n    (newValue, oldValue) => {\n      if (newValue === gmfEditingEditFeatureComponent.State.STOP_EDITING_EXECUTE ||\n          newValue === gmfEditingEditFeatureComponent.State.DEACTIVATE_EXECUTE) {\n        this.selectedEditableTreeCtrl = null;\n      }\n      if (newValue === gmfEditingEditFeatureComponent.State.DEACTIVATE_EXECUTE) {\n        this.active = false;\n      }\n    }\n  );\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n\n};\n\n\n/**\n * Called when the 'stop editing' button is clicked. Set the 'state'\n * variable to 'pending' allow the editfeature directive to check if it can\n * stop or if it requires confirmation due to unsaved modifications.\n * @export\n */\nexports.Controller_.prototype.stopEditing = function() {\n  this.state = gmfEditingEditFeatureComponent.State.STOP_EDITING_PENDING;\n};\n\n\n/**\n * Called when the active property of the this directive changes. Manage\n * the activation/deactivation accordingly.\n * @param {boolean} active Whether the directive is active or not.\n * @private\n */\nexports.Controller_.prototype.handleActiveChange_ = function(active) {\n  if (!active) {\n    if (!this.dirty) {\n      this.stopEditing();\n    } else {\n      // There are unsaved modifications. Prevent the deactivation and\n      // set the state accordingly for the `gmf-editfeature` directive\n      // to manage the unsaved modifications.\n      // The changes are made inside a $timeout to be taken into account\n      // in the next digest cycle.\n      this.$timeout_(() => {\n        this.active = true;\n        this.stopEditing();\n      });\n    }\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.treeCtrlsWatcherUnregister_();\n};\n\n\nexports.controller('GmfEditfeatureselectorController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.module\n */\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\nimport gmfEditingEditFeatureComponent from 'gmf/editing/editFeatureComponent.js';\nimport gmfEditingEditFeatureSelectorComponent from 'gmf/editing/editFeatureSelectorComponent.js';\nimport gmfEditingEnumerateAttribute from 'gmf/editing/EnumerateAttribute.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport gmfEditingXSDAttributes from 'gmf/editing/XSDAttributes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfEditingModule', [\n  gmfEditingEditFeature.module.name,\n  gmfEditingEditFeatureComponent.name,\n  gmfEditingEditFeatureSelectorComponent.name,\n  gmfEditingEnumerateAttribute.module.name,\n  gmfEditingSnapping.module.name,\n  gmfEditingXSDAttributes.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport * as olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complete then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n","/**\n * @module gmf.contextualdata.component\n */\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\nimport googAsserts from 'goog/asserts.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olProj from 'ol/proj.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfContextualdata', [\n  gmfRasterRasterService.module.name,\n]);\n\n\n/**\n * Provide a directive responsible of displaying contextual data after a right\n * click on the map.\n *\n * This directive doesn't require being rendered in a visible DOM element.\n * It's usually added to the element where the map directive is also added.\n *\n * Example:\n *\n *     <gmf-map gmf-map-map=\"mainCtrl.map\"\n *         gmf-contextualdata\n *         gmf-contextualdata-map=\"::mainCtrl.map\"\n *         gmf-contextualdata-projections=\"::[21781,4326]\">\n *\n * The content of the popover is managed in a partial that must be defined\n * using the `gmfContextualdatacontentTemplateUrl` value. See\n * {@link gmf.contextualdatacontentDirective} for more details.\n *\n * One can also provide a `gmf-contextualdata-callback` attribute in order to\n * do some additional computing on the coordinate or the values received for\n * the raster service. The callback function is called with the coordinate of\n * the clicked point and the response data from the server. It is intended to\n * return an object of additional properties to add to the scope.\n *\n * See the [../examples/contribs/gmf/contextualdata.html](../examples/contribs/gmf/contextualdata.html) example for a usage sample.\n *\n * @htmlAttribute {ol.Map} map The map.\n * @htmlAttribute {Array<number>} projections The list of projections.\n * @htmlAttribute {Function} callback A function called after server\n *    (raster) data is received in case some additional computing is required.\n *    Optional.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfContextualdata\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    scope: false,\n    controller: 'GmfContextualdataController as cdCtrl',\n    bindToController: {\n      'map': '<gmfContextualdataMap',\n      'projections': '<gmfContextualdataProjections',\n      'callback': '<gmfContextualdataCallback'\n    },\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {gmf.contextualdata.component.Controller_} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      controller.init();\n    }\n  };\n};\n\nexports.directive('gmfContextualdata',\n  exports.directive_);\n\n\n/**\n *\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {!angular.Scope} $scope Scope.\n * @param {gmf.raster.RasterService} gmfRaster Gmf Raster service\n *\n * @constructor\n * @private\n * @ngdoc controller\n * @ngInject\n */\nexports.Controller_ = function($compile, $timeout, $scope, gmfRaster) {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {Array<number>}\n   * @export\n   */\n  this.projections;\n\n  /**\n   * @type {function(ol.Coordinate, Object):Object}\n   * @export\n   */\n  this.callback;\n\n  /**\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.overlay_;\n\n  /**\n   * @type {angular.$compile}\n   * @private\n   */\n  this.$compile_ = $compile;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  angular.element('body').on('mousedown', this.hidePopover.bind(this));\n};\n\n/**\n *\n */\nexports.Controller_.prototype.init = function() {\n  this.preparePopover_();\n\n  const mapDiv = this.map.getTargetElement();\n  googAsserts.assertElement(mapDiv);\n\n  olEvents.listen(mapDiv, 'contextmenu',\n    this.handleMapContextMenu_, this);\n};\n\n/**\n * @param {!Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(event) {\n  this.$scope_.$apply(() => {\n    const pixel = this.map.getEventPixel(event);\n    const coordinate = this.map.getCoordinateFromPixel(pixel);\n    this.setContent_(coordinate);\n    event.preventDefault();\n    this.hidePopover();\n    this.showPopover();\n\n    // Use timeout to let the popover content to be rendered before displaying it.\n    this.timeout_(() => {\n      this.overlay_.setPosition(coordinate);\n    });\n  });\n};\n\nexports.Controller_.prototype.setContent_ = function(coordinate) {\n  const scope = this.$scope_.$new(true);\n  this.$compile_(this.content_)(scope);\n\n  const mapProjection = this.map.getView().getProjection().getCode();\n  this.projections.forEach((proj) => {\n    const coord = olProj.transform(coordinate, mapProjection, `EPSG:${proj}`);\n    scope[`coord_${proj}`] = coord;\n    scope[`coord_${proj}_eastern`] = coord[0];\n    scope[`coord_${proj}_northern`] = coord[1];\n  });\n\n  const getRasterSuccess = function(resp) {\n    olObj.assign(scope, resp);\n    if (this.callback) {\n      olObj.assign(scope, this.callback.call(this, coordinate, resp));\n    }\n  }.bind(this);\n  const getRasterError = function(resp) {\n    console.error('Error on getting the raster.');\n  };\n  this.gmfRaster_.getRaster(coordinate).then(\n    getRasterSuccess,\n    getRasterError\n  );\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.preparePopover_ = function() {\n\n  const container = document.createElement('DIV');\n  container.classList.add('popover');\n  container.classList.add('bottom');\n  container.classList.add('gmf-contextualdata');\n  angular.element(container).css('position', 'relative');\n  const arrow = document.createElement('DIV');\n  arrow.classList.add('arrow');\n  container.appendChild(arrow);\n  this.content_ = document.createElement('DIV');\n  this.content_.setAttribute('gmf-contextualdatacontent', '');\n  this.content_.classList.add('popover-content');\n  container.appendChild(this.content_);\n\n  this.overlay_ = new olOverlay({\n    element: container,\n    stopEvent: true,\n    autoPan: true,\n    autoPanAnimation: /** @type {olx.animation.PanOptions} */ ({\n      duration: 250\n    }),\n    positioning: 'top-center'\n  });\n  this.map.addOverlay(this.overlay_);\n};\n\nexports.Controller_.prototype.showPopover = function() {\n  const element = /** @type {Object} */ (this.overlay_.getElement());\n  angular.element(element).css('display', 'block');\n};\n\nexports.Controller_.prototype.hidePopover = function() {\n  const element = /** @type {Object} */ (this.overlay_.getElement());\n  angular.element(element).css('display', 'none');\n};\n\nexports.controller('GmfContextualdataController', exports.Controller_);\n\n\n/**\n * Provide a directive responsible of formatting the content of the popover for\n * the contextual data directive.\n *\n * Its main purpose is to configure the template to be used.\n * Integrators should ensure that the template values match the configuration\n * of the contextual data directive.\n *\n * For each projection the following expressions can be used (replace xxxx by\n * the relevant projection code:\n *  - {{coord_xxxx}},\n *  - {{coord_xxxx_eastern}},\n *  - {{coord_xxxx_northern}}\n *\n * Tip: one should use the `ngeoNumberCoordinates` and `ngeoDMSCoordinates`.\n *\n * The raster service is requested to query additional information. The\n * integrators can also use `{{xxxx}}` where `xxxx` will be replaced by\n * the name of the raster layers (for example 'srtm').\n *\n * See the [../examples/contribs/gmf/contextualdata.html](../examples/contribs/gmf/contextualdata.html) example for a usage sample.\n *\n * @param {string} gmfContextualdatacontentTemplateUrl Url to template.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfContextualdatacontent\n */\nexports.contentDirective_ = function(\n  gmfContextualdatacontentTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: gmfContextualdatacontentTemplateUrl\n  };\n};\n\nexports.directive('gmfContextualdatacontent', exports.contentDirective_);\n\n\nexport default exports;\n","/**\n * @module gmf.contextualdata.module\n */\nimport gmfContextualdataComponent from 'gmf/contextualdata/component.js';\n\nimport './contextualdata.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfContextualdataModule', [\n  gmfContextualdataComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.drawing.featureStyleComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingFeatureStyle', [\n  ngeoMiscColorpickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/drawing/featureStyleComponent', require('./featureStyleComponent.html'));\n});\n\n\n/**\n * Directive used to set the style of a vector feature. The options depend\n * on the type of geometry.\n * Example:\n *\n *     <gmf-featurestyle\n *         gmf-featurestyle-feature=\"ctrl.selectedFeature\">\n *     </gmf-featurestyle>\n *\n * @htmlAttribute {ol.Feature} gmf-featurestyle-feature The feature.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfFeaturestyle\n */\nexports.directive_ = function() {\n  return {\n    controller: 'GmfFeaturestyleController as fsCtrl',\n    scope: {\n      'feature': '=gmfFeaturestyleFeature'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/drawing/featureStyleComponent'\n  };\n};\n\n\nexports.directive('gmfFeaturestyle',\n  exports.directive_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Gmf feature helper service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfFeaturestyleController\n */\nexports.Controller_ = function($scope, ngeoFeatureHelper) {\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.color = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.label = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.measure = undefined;\n\n  $scope.$watch(\n    () => this.color,\n    this.handleColorSet_.bind(this)\n  );\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = [];\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.type;\n\n  $scope.$watch(\n    () => this.feature,\n    this.handleFeatureSet_.bind(this)\n  );\n\n};\n\n\n/**\n * Called when a new feature is set, which can also be null.\n * @param {?ol.Feature} newFeature New feature or null value.\n * @param {?ol.Feature} previousFeature Previous feature or null value.\n * @private\n */\nexports.Controller_.prototype.handleFeatureSet_ = function(\n  newFeature, previousFeature) {\n\n  const keys = this.featureListenerKeys_;\n\n  if (previousFeature) {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.type = undefined;\n    this.color = undefined;\n    this.measure = undefined;\n    this.label = undefined;\n  }\n\n  if (newFeature) {\n    [\n      ngeoFormatFeatureProperties.ANGLE,\n      ngeoFormatFeatureProperties.COLOR,\n      ngeoFormatFeatureProperties.NAME,\n      ngeoFormatFeatureProperties.SHOW_LABEL,\n      ngeoFormatFeatureProperties.OPACITY,\n      ngeoFormatFeatureProperties.SHOW_MEASURE,\n      ngeoFormatFeatureProperties.SIZE,\n      ngeoFormatFeatureProperties.STROKE\n    ].forEach(function(propName) {\n      keys.push(\n        olEvents.listen(\n          newFeature,\n          `change:${propName}`,\n          this.handleFeatureChange_,\n          this\n        )\n      );\n    }, this);\n\n    const geometry = newFeature.getGeometry();\n    googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n    keys.push(\n      olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      )\n    );\n\n    this.type = this.featureHelper_.getType(newFeature);\n    this.color = this.featureHelper_.getColorProperty(newFeature);\n    this.measure = this.featureHelper_.getMeasure(newFeature);\n  }\n};\n\n\n/**\n * @param {string|undefined} newColor Color.\n * @private\n */\nexports.Controller_.prototype.handleColorSet_ = function(\n  newColor) {\n  if (this.feature && newColor) {\n    const currentColor = this.feature.get(ngeoFormatFeatureProperties.COLOR);\n    if (currentColor !== newColor) {\n      this.feature.set(ngeoFormatFeatureProperties.COLOR, newColor);\n    }\n  }\n};\n\n\n/**\n * @param {number|undefined} value A name value to set or undefined to get.\n * @return {number} The angle of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetAngle = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.ANGLE, value));\n};\n\n\n/**\n * @param {string|undefined} value A name value to set or undefined to get.\n * @return {string} The name of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetName = function(value) {\n  return googAsserts.assertString(this.getSetProperty_(ngeoFormatFeatureProperties.NAME, value));\n};\n\n/**\n * @param {boolean|undefined} value A value to set or undefined for the\n *     purpose of showing the attribute labels or not.\n * @return {boolean} Whether to show the labels or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowLabel = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_LABEL, value));\n};\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetOpacity = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.OPACITY, value));\n};\n\n\n/**\n * @param {boolean|undefined} value A value to set or undefined to get for the\n *     purpose of showing the geometry measurements or not.\n * @return {boolean} Whether to show the measurements or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowMeasure = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_MEASURE, value));\n};\n\n\n/**\n * @param {number|undefined} value A size value to set or undefined to get.\n * @return {number} The size of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetSize = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.SIZE, value));\n};\n\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetStroke = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.STROKE, value));\n};\n\n\n/**\n * @param {string} key The property name.\n * @param {boolean|number|string|undefined} value A value to set or undefined\n *     to get.\n * @return {boolean|number|string} The property value of the feature.\n * @private\n */\nexports.Controller_.prototype.getSetProperty_ = function(key, value) {\n  if (value !== undefined) {\n    this.feature.set(key, value);\n  }\n  return /** @type {boolean|number|string} */ (this.feature.get(key));\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeatureChange_ = function() {\n  const feature = this.feature;\n\n  if (!feature) {\n    return;\n  }\n\n  this.featureHelper_.setStyle(feature, true);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleGeometryChange_ = function() {\n  googAsserts.assert(this.feature);\n  this.measure = this.featureHelper_.getMeasure(this.feature);\n\n  const showMeasure = this.featureHelper_.getShowMeasureProperty(this.feature);\n  if (showMeasure) {\n    this.handleFeatureChange_();\n  }\n\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfFeaturestyleController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.drawing.drawFeatureComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\nimport googAsserts from 'goog/asserts.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoMenu from 'ngeo/Menu.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingExportfeaturesComponent from 'ngeo/editing/exportfeaturesComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawComponent from 'ngeo/draw/component.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModify from 'ngeo/interaction/Modify.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfDrawFeatureComponent', [\n  gmfDrawingFeatureStyleComponent.name,\n  ngeoEditingExportfeaturesComponent.name,\n  ngeoMiscBtnComponent.name,\n  ngeoDrawComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/drawing/drawFeatureComponent', require('./drawFeatureComponent.html'));\n});\n\n\n/**\n * Directive used to create, modify and delete vector features on a map with\n * the addition of changing their style.\n * Example:\n *\n *     <gmf-drawfeature\n *         gmf-drawfeature-active=\"ctrl.drawFeatureActive\"\n *         gmf-drawfeature-map=\"::ctrl.map\">\n *     </gmf-drawfeature>\n *\n * @htmlAttribute {boolean} gmf-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {ol.Map} gmf-drawfeature-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfDrawfeature\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfDrawfeatureController as efCtrl',\n    scope: {\n      'active': '=gmfDrawfeatureActive',\n      'map': '<gmfDrawfeatureMap',\n      'showMeasure': '=?gmfDrawfeatureShowmeasure'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/drawing/drawFeatureComponent'\n  };\n};\n\n\nexports.directive('gmfDrawfeature',\n  exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {!ol.Collection.<!ol.Feature>} ngeoFeatures Collection of features.\n * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDrawfeatureController\n */\nexports.Controller_ = function($scope, $timeout, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures, ngeoToolActivateMgr) {\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawActive = false;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.drawToolActivate = new ngeoMiscToolActivate(this, 'drawActive');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.mapSelectActive = true;\n\n  /**\n   * @type {number?}\n   * @private\n   */\n  this.longPressTimeout_ = null;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.mapSelectToolActivate = new ngeoMiscToolActivate(this, 'mapSelectActive');\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {!ol.Collection.<!ol.Feature>}\n   * @export\n   */\n  this.features = ngeoFeatures;\n\n  /**\n   * @type {!ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.selectedFeature = null;\n\n  /**\n   * @type {!ol.Collection.<!ol.Feature>}\n   * @export\n   */\n  this.selectedFeatures = new olCollection();\n\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.interactions_ = new olCollection();\n\n  /**\n   * @type {!ngeo.interaction.Modify}\n   * @private\n   */\n  this.modify_ = new ngeoInteractionModify({\n    features: this.selectedFeatures,\n    style: ngeoFeatureHelper.getVertexStyle(false)\n  });\n  this.interactions_.push(this.modify_);\n\n  /**\n   * @type {?ngeo.Menu}\n   * @private\n   */\n  this.menu_ = null;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.modifyToolActivate = new ngeoMiscToolActivate(this.modify_, 'active');\n\n  /**\n   * @type {!ngeo.interaction.Translate}\n   * @private\n   */\n  this.translate_ = new ngeoInteractionTranslate({\n    features: this.selectedFeatures,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf047',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.translate_);\n\n  /**\n   * @type {!ngeo.interaction.Rotate}\n   * @private\n   */\n  this.rotate_ = new ngeoInteractionRotate({\n    features: this.selectedFeatures,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf01e',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.rotate_);\n\n  this.initializeInteractions_();\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.rotateToolActivate = new ngeoMiscToolActivate(this.rotate_, 'active');\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.translateToolActivate = new ngeoMiscToolActivate(this.translate_, 'active');\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * Flag used to determine whether the selection of a feature was made\n   * from the selection of an item from the list or not (the map, contextual\n   * menu, etc.)\n   * @type {boolean}\n   * @private\n   */\n  this.listSelectionInProgress_ = false;\n\n  $scope.$watch(\n    () => this.active,\n    this.handleActiveChange_.bind(this)\n  );\n\n  $scope.$watch(\n    () => this.drawActive,\n    (active) => {\n      if (active) {\n        this.selectedFeature = null;\n      }\n    }\n  );\n\n  $scope.$watch(\n    () => this.selectedFeature,\n    (newFeature, previousFeature) => {\n      this.selectedFeatures.clear();\n      if (previousFeature) {\n        this.featureHelper_.setStyle(previousFeature);\n        this.unregisterInteractions_();\n      }\n      if (newFeature) {\n        this.featureHelper_.setStyle(newFeature, true);\n        this.selectedFeatures.push(newFeature);\n        this.registerInteractions_();\n        if (this.listSelectionInProgress_) {\n          this.featureHelper_.panMapToFeature(newFeature, this.map);\n          this.listSelectionInProgress_ = false;\n        }\n      } else if (this.menu_) {\n        this.map.removeOverlay(this.menu_);\n        this.menu_ = null;\n      }\n    }\n  );\n\n  $scope.$watch(\n    () => this.mapSelectActive,\n    this.handleMapSelectActiveChange_.bind(this)\n  );\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nameProperty = ngeoFormatFeatureProperties.NAME;\n\n  /**\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n};\n\n\n/**\n * Initialize interactions by setting them inactive and decorating them\n * @private\n */\nexports.Controller_.prototype.initializeInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    interaction.setActive(false);\n    ngeoMiscDecorate.interaction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by adding them to the map\n * @private\n */\nexports.Controller_.prototype.registerInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.addInteraction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by removing them to the map\n * @private\n */\nexports.Controller_.prototype.unregisterInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.removeInteraction(interaction);\n  });\n};\n\n\n/**\n * Called when the active property of the this directive changes. Manage\n * the activation/deactivation accordingly (event management, etc.)\n * @param {boolean} active Whether the directive is active or not.\n * @private\n */\nexports.Controller_.prototype.handleActiveChange_ = function(active) {\n\n  const keys = this.listenerKeys_;\n  const drawUid = ['draw-', olBase.getUid(this)].join('-');\n  const otherUid = ['other-', olBase.getUid(this)].join('-');\n  const toolMgr = this.ngeoToolActivateMgr_;\n\n  if (active) {\n    // when activated\n\n    keys.push(\n      olEvents.listen(this.features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features, 'remove', this.handleFeaturesRemove_, this)\n    );\n\n    keys.push(olEvents.listen(this.translate_,\n      'translateend',\n      this.handleTranslateEnd_, this));\n\n    keys.push(olEvents.listen(this.rotate_, 'rotateend', this.handleRotateEnd_, this));\n\n    toolMgr.registerTool(drawUid, this.drawToolActivate, false);\n    toolMgr.registerTool(drawUid, this.mapSelectToolActivate, true);\n\n    toolMgr.registerTool(otherUid, this.drawToolActivate, false);\n    toolMgr.registerTool(otherUid, this.modifyToolActivate, true);\n    toolMgr.registerTool(otherUid, this.translateToolActivate, false);\n    toolMgr.registerTool(otherUid, this.rotateToolActivate, false);\n\n    this.mapSelectActive = true;\n    this.modify_.setActive(true);\n  } else {\n    // when deactivated\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n\n    toolMgr.unregisterTool(drawUid, this.drawToolActivate);\n    toolMgr.unregisterTool(drawUid, this.mapSelectToolActivate);\n\n    toolMgr.unregisterTool(otherUid, this.drawToolActivate);\n    toolMgr.unregisterTool(otherUid, this.modifyToolActivate);\n    toolMgr.unregisterTool(otherUid, this.translateToolActivate);\n    toolMgr.unregisterTool(otherUid, this.rotateToolActivate);\n\n    this.drawActive = false;\n    this.modify_.setActive(false);\n    this.mapSelectActive = false;\n    this.selectedFeature = null;\n\n    if (this.menu_) {\n      this.map.removeOverlay(this.menu_);\n      this.menu_ = null;\n    }\n  }\n\n};\n\n\n/**\n * Method called when a selection occurs from the list, i.e. when an item in\n * the list of features is clicked. Called from the template, so no need to\n * update Angular's scope.\n * @param {!ol.Feature} feature Feature to select.\n * @export\n */\nexports.Controller_.prototype.selectFeatureFromList = function(feature) {\n  this.listSelectionInProgress_ = true;\n  this.selectedFeature = feature;\n  this.drawActive = false;\n};\n\n\n/**\n * @return {!Array.<!ol.Feature>} Array.\n * @export\n */\nexports.Controller_.prototype.getFeaturesArray = function() {\n  return this.features.getArray();\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.clearFeatures = function() {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete all the features?');\n  if (confirm(msg)) {\n    this.features.clear();\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature The feature to remove from the selection.\n * @export\n */\nexports.Controller_.prototype.removeFeature = function(feature) {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete the selected feature?');\n  if (confirm(msg)) {\n    this.features.remove(feature);\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturesAdd_ = function(evt) {\n  // timeout to prevent double-click to zoom the map\n  this.timeout_(() => {\n    this.selectedFeature = /** @type {ol.Feature} */ (evt.element);\n    this.drawActive = false;\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturesRemove_ = function(evt) {\n  this.selectedFeature = null;\n};\n\n\n/**\n * Called when the mapSelectActive property changes.\n * @param {boolean} active Whether the map select is active or not.\n * @private\n */\nexports.Controller_.prototype.handleMapSelectActiveChange_ = function(\n  active) {\n\n  const mapDiv = this.map.getViewport();\n  googAsserts.assertElement(mapDiv);\n\n  if (active) {\n    olEvents.listen(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.listen(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n    olEvents.listen(mapDiv, 'touchstart',\n      this.handleMapTouchStart_, this);\n\n    olEvents.listen(mapDiv, 'touchmove',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.listen(mapDiv, 'touchend',\n      this.handleMapTouchEnd_, this);\n\n  } else {\n    olEvents.unlisten(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.unlisten(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n    olEvents.unlisten(mapDiv, 'touchstart',\n      this.handleMapTouchStart_, this);\n\n    olEvents.unlisten(mapDiv, 'touchmove',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.unlisten(mapDiv, 'touchend',\n      this.handleMapTouchEnd_, this);\n  }\n};\n\n\n/**\n * @param {!ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapClick_ = function(evt) {\n\n  const pixel = evt.pixel;\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 5\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // do not do any further action if feature is null or already selected\n  if (feature === this.selectedFeature) {\n    return;\n  }\n\n  this.selectedFeature = feature;\n\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapTouchStart_ = function(evt) {\n  this.longPressTimeout_ = setTimeout(() => {\n    this.handleMapContextMenu_(evt);\n  }, 500);\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapTouchEnd_ = function(evt) {\n  clearTimeout(this.longPressTimeout_);\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(evt) {\n  const gettextCatalog = this.gettextCatalog_;\n  const pixel = this.map.getEventPixel(evt);\n  const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 7\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // show contextual menu when clicking on certain types of features\n  if (feature) {\n    let actions = [];\n\n    const type = this.featureHelper_.getType(feature);\n    if (type == ngeoGeometryType.CIRCLE ||\n        type == ngeoGeometryType.LINE_STRING ||\n        type == ngeoGeometryType.POLYGON ||\n        type == ngeoGeometryType.RECTANGLE) {\n      actions = actions.concat([{\n        cls: 'fa fa-arrows',\n        label: gettextCatalog.getString('Move'),\n        name: 'move'\n      }, {\n        cls: 'fa fa-rotate-right',\n        label: gettextCatalog.getString('Rotate'),\n        name: 'rotate'\n      }]);\n    }\n\n    actions = actions.concat([{\n      cls: 'fa fa-trash-o',\n      label: gettextCatalog.getString('Delete'),\n      name: 'delete'\n    }]);\n\n    this.menu_ = new ngeoMenu({\n      actions\n    });\n\n    olEvents.listen(this.menu_, 'actionclick',\n      this.handleMenuActionClick_, this);\n    this.map.addOverlay(this.menu_);\n\n    this.menu_.open(coordinate);\n\n    evt.preventDefault();\n    evt.stopPropagation();\n  }\n\n  // do not do any further action if feature is null or already selected\n  if (feature === this.selectedFeature) {\n    return;\n  }\n\n  this.modify_.setActive(true);\n\n  this.selectedFeature = feature;\n\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.MenuEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuActionClick_ = function(evt) {\n  const action = evt.detail.action;\n\n  switch (action) {\n    case 'delete':\n      googAsserts.assert(\n        this.selectedFeature, 'Selected feature should be truthy');\n      this.removeFeature(this.selectedFeature);\n      this.scope_.$apply();\n      break;\n    case 'move':\n      this.translate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    case 'rotate':\n      this.rotate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    default:\n      // FIXME\n      console.log(`FIXME - support: ${action}`);\n      break;\n  }\n};\n\n\n/**\n * @param {!ol.interaction.Translate.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleTranslateEnd_ = function(evt) {\n  this.translate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.RotateEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleRotateEnd_ = function(evt) {\n  this.rotate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfDrawfeatureController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.drawing.module\n */\nimport gmfDrawingDrawFeatureComponent from 'gmf/drawing/drawFeatureComponent.js';\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingModule', [\n  gmfDrawingDrawFeatureComponent.name,\n  gmfDrawingFeatureStyleComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.import.wmsCapabilityLayertreeComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\n\nimport * as olBase from 'ol/index.js';\n\nimport 'bootstrap/js/collapse.js';\n\n\nconst exports = angular.module('gmfWmscapabilitylayertreenode', [\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  ngeoMessagePopup.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/import/wmsCapabilityLayertreeComponent', require('./wmsCapabilityLayertreeComponent.html'));\n});\n\n\nexports.value('gmfWmscapabilitylayertreenodeTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfWmscapabilitylayertreenodeTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/import/wmsCapabilityLayertreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfWmscapabilitylayertreenodeTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfWmscapabilitylayertreenodeTemplateUrl($attrs, gmfWmscapabilitylayertreenodeTemplateUrl) {\n  return gmfWmscapabilitylayertreenodeTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!gmf.datasource.ExternalDataSourcesManager}\n   *     gmfExternalDataSourcesManager GMF service responsible of managing\n   *     external data sources.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfWmscapabilitylayertreenodeController\n   */\n  constructor(gmfExternalDataSourcesManager) {\n\n    // Binding properties\n\n    /**\n     * WMS Capabilities definition\n     * @type {!Object}\n     * @export\n     */\n    this.capabilities;\n\n    /**\n     * WMS Capability Layer object.\n     * @type {!Object}\n     * @export\n     */\n    this.layer;\n\n    /**\n     * The original server url that was used to build the WMS GetCapabilities\n     * request.\n     * @type {string}\n     * @export\n     */\n    this.url;\n\n\n    // Injected properties\n\n    /**\n     * @type {!gmf.datasource.ExternalDataSourcesManager}\n     * @private\n     */\n    this.gmfExternalDataSourcesManager_ = gmfExternalDataSourcesManager;\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object\n   * @export\n   */\n  createAndAddDataSource(layer) {\n    this.gmfExternalDataSourcesManager_.createAndAddDataSourceFromWMSCapability(\n      layer,\n      this.capabilities,\n      this.url\n    );\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object\n   * @return {number} Unique id for the Capability Layer.\n   * @export\n   */\n  getUid(layer) {\n    return olBase.getUid(layer);\n  }\n};\n\n\nexports.component('gmfWmscapabilitylayertreenode', {\n  bindings: {\n    'capabilities': '<',\n    'layer': '<',\n    'url': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfWmscapabilitylayertreenodeTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.import.wmtsCapabilityLayertreeComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\n\nimport * as olBase from 'ol/index.js';\n\nconst exports = angular.module('gmfWmtscapabilitylayertree', [\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  ngeoMessagePopup.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/import/wmtsCapabilityLayertreeComponent', require('./wmtsCapabilityLayertreeComponent.html'));\n});\n\n\nexports.value('gmfWmtscapabilitylayertreTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfWmtscapabilitylayertreTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/import/wmtsCapabilityLayertreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfWmtscapabilitylayertreTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfWmtscapabilitylayertreTemplateUrl($attrs, gmfWmtscapabilitylayertreTemplateUrl) {\n  return gmfWmtscapabilitylayertreTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!gmf.datasource.ExternalDataSourcesManager}\n   *     gmfExternalDataSourcesManager GMF service responsible of managing\n   *     external data sources.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfWmtscapabilitylayertreeController\n   */\n  constructor(gmfExternalDataSourcesManager) {\n\n    // Binding properties\n\n    /**\n     * WMS Capabilities definition\n     * @type {!Object}\n     * @export\n     */\n    this.capabilities;\n\n    /**\n     * List of WMTS Capability Layer objects.\n     * @type {!Array.<!Object>}\n     * @export\n     */\n    this.layers;\n\n    /**\n     * The original WMTS GetCapabilities url that was used to fetch the\n     * capability layers.\n     * @type {string}\n     * @export\n     */\n    this.url;\n\n\n    // Injected properties\n\n    /**\n     * @type {!gmf.datasource.ExternalDataSourcesManager}\n     * @private\n     */\n    this.gmfExternalDataSourcesManager_ = gmfExternalDataSourcesManager;\n  }\n\n  /**\n   * @param {!Object} layer WMTS Capability Layer object\n   * @export\n   */\n  createAndAddDataSource(layer) {\n    const manager = this.gmfExternalDataSourcesManager_;\n    manager.createAndAddDataSourceFromWMTSCapability(\n      layer,\n      this.capabilities,\n      this.url\n    );\n  }\n\n  /**\n   * @param {!Object} layer WMTS Capability Layer object\n   * @return {number} Unique id for the Capability Layer.\n   * @export\n   */\n  getUid(layer) {\n    return olBase.getUid(layer);\n  }\n};\n\n\nexports.component('gmfWmtscapabilitylayertree', {\n  bindings: {\n    'capabilities': '<',\n    'layers': '<',\n    'url': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfWmtscapabilitylayertreTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.import.importdatasourceComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\n\n/** @suppress {extraRequire} */\nimport gmfImportWmsCapabilityLayertreeComponent from 'gmf/import/wmsCapabilityLayertreeComponent.js';\n\n/** @suppress {extraRequire} */\nimport gmfImportWmtsCapabilityLayertreeComponent from 'gmf/import/wmtsCapabilityLayertreeComponent.js';\n\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\nconst exports = angular.module('gmfImportdatasource', [\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfImportWmsCapabilityLayertreeComponent.name,\n  gmfImportWmtsCapabilityLayertreeComponent.name,\n  ngeoQueryQuerent.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/import/importdatasourceComponent', require('./importdatasourceComponent.html'));\n});\n\n\nexports.value('gmfImportdatasourceTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfImportdatasourceTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/import/importdatasourceComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfImportdatasourceTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfImportdatasourceTemplateUrl($attrs, gmfImportdatasourceTemplateUrl) {\n  return gmfImportdatasourceTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!jQuery} $element Element.\n   * @param {!angular.$filter} $filter Angular filter.\n   * @param {!angular.$injector} $injector Main injector.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!gmf.datasource.ExternalDataSourcesManager}\n   *     gmfExternalDataSourcesManager GMF service responsible of managing\n   *     external data sources.\n   * @param {!ngeo.query.Querent} ngeoQuerent Ngeo querent service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfImportdatasourceController\n   */\n  constructor($element, $filter, $injector, $scope, $timeout,\n    gmfExternalDataSourcesManager, ngeoQuerent) {\n\n    // Binding properties\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n\n    // Injected properties\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!gmf.datasource.ExternalDataSourcesManager}\n     * @private\n     */\n    this.gmfExternalDataSourcesManager_ = gmfExternalDataSourcesManager;\n\n    /**\n     * @type {!ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n\n    // Model properties\n\n    /**\n     * @type {File|undefined}\n     * @export\n     */\n    this.file;\n\n    /**\n     * @type {string|undefined}\n     * @export\n     */\n    this.url;\n\n\n    // Inner properties\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.fileInput_ = $element.find('input[type=file]');\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.hasError = false;\n\n    /**\n     * @type {?angular.$q.Promise}\n     * @private\n     */\n    this.hasErrorPromise_ = null;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.mode = exports.Controller_.Mode.ONLINE;\n\n    /**\n     * @type {!Array.<string>}\n     * @export\n     */\n    this.modes = [\n      exports.Controller_.Mode.LOCAL,\n      exports.Controller_.Mode.ONLINE\n    ];\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.pending = false;\n\n    /**\n     * @type {!ngeox.unitPrefix}\n     * @private\n     */\n    this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ (\n      $filter('ngeoUnitPrefix'));\n\n    /**\n     * Current WMS Capabilities that were connected.\n     * @type {?Object}\n     * @export\n     */\n    this.wmsCapabilities = null;\n\n    /**\n     * Current WTMS Capabilities that were connected.\n     * @type {?Object}\n     * @export\n     */\n    this.wmtsCapabilities = null;\n\n    /**\n     * @type {Bloodhound|undefined}\n     * @private\n     */\n    this.serversEngine_;\n\n    const servers = $injector.has('gmfExternalOGCServers') ?\n      /** @type {Array.<!gmfx.ExternalOGCServer>|undefined} */ (\n        $injector.get('gmfExternalOGCServers')\n      ) : undefined;\n\n    if (servers) {\n      const serverUrls = servers.map(server => server['url']);\n      this.serversEngine_ = new Bloodhound({\n        /**\n         * Allows search queries to match from string from anywhere within\n         * the url, and not only from the beginning of the string (which is\n         * the default, non-configurable behaviour of bloodhound).\n         *\n         * Borrowed from:\n         * https://stackoverflow.com/questions/22059933/twitter-typeahead-js-how-to-return-all-matched-elements-within-a-string\n         *\n         * @param {BloodhoundDatum} datum Datum.\n         * @return {Array.<string>} List of datum tokenizers.\n         */\n        datumTokenizer: (datum) => {\n          googAsserts.assertString(datum);\n          const originalDatumTokenizers = Bloodhound.tokenizers.whitespace(\n            datum);\n          googAsserts.assert(originalDatumTokenizers);\n          const datumTokenizers = [];\n          for (const originalDatumTokenizer of originalDatumTokenizers) {\n            let i = 0;\n            while ((i + 1) < originalDatumTokenizer.length) {\n              datumTokenizers.push(\n                originalDatumTokenizer.substr(\n                  i,\n                  originalDatumTokenizer.length\n                )\n              );\n              i++;\n            }\n          }\n          return datumTokenizers;\n        },\n        queryTokenizer: Bloodhound.tokenizers.whitespace,\n        identify: false,\n        local: serverUrls\n      });\n    }\n\n    // Register input[type=file] onchange event, use HTML5 File api\n    this.fileInput_.on('change', () => {\n      this.file = this.fileInput_[0].files && this.fileInput_[0].files[0] ?\n        this.fileInput_[0].files[0] : undefined;\n      this.scope_.$apply();\n    });\n  }\n\n  /**\n   * Called on initialization of the component.\n   */\n  $onInit() {\n    this.gmfExternalDataSourcesManager_.map = this.map;\n\n\n    if (this.serversEngine_) {\n      // Timeout to let Angular render the placeholder of the input properly,\n      // otherwise typeahead would copy the string with {{}} in it...\n      this.timeout_(() => {\n        googAsserts.assert(this.serversEngine_);\n        const $urlInput = this.element_.find('input[name=url]');\n        const $connectBtn = this.element_.find('button.gmf-importdatasource-connect-btn');\n        $urlInput.typeahead({\n          hint: true,\n          highlight: true,\n          minLength: 1\n        }, {\n          name: 'url',\n          source: this.serversEngine_.ttAdapter()\n        }).bind('typeahead:select', (ev, suggestion) => {\n          this.timeout_(() => {\n            this.url = suggestion;\n            this.scope_.$apply();\n            $connectBtn.focus();\n          });\n        });\n      });\n    }\n  }\n\n  /**\n   * Triggers a 'click' on the \"Browse\" button.\n   * @export\n   */\n  browse() {\n    this.element_.find('input[type=file][name=file]').click();\n  }\n\n  /**\n   * Connect to given online resource URL.\n   * @export\n   */\n  connect() {\n    const url = googAsserts.assertString(this.url);\n    const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n    this.startWorking_();\n    if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n      this.ngeoQuerent_.wmsGetCapabilities(url).then(\n        (wmsCapabilities) => {\n          this.wmsCapabilities = wmsCapabilities;\n          this.stopWorking_();\n        },\n        () => {\n          // Something went wrong...\n          this.stopWorking_(true);\n        }\n      );\n    } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n      this.ngeoQuerent_.wmtsGetCapabilities(url).then(\n        (wmtsCapabilities) => {\n          this.wmtsCapabilities = wmtsCapabilities;\n          this.stopWorking_();\n        },\n        () => {\n          // Something went wrong...\n          this.stopWorking_(true);\n        }\n      );\n    } else {\n      // Could not determine the type of url\n      this.timeout_(() => {\n        this.stopWorking_(true);\n      });\n    }\n  }\n\n  /**\n   * Create data source from file.\n   * @export\n   */\n  load() {\n    const file = googAsserts.assert(this.file);\n    this.gmfExternalDataSourcesManager_.createAndAddDataSourceFromFile(file);\n  }\n\n  /**\n   * @return {string} The name of the file and human-readable size.\n   * @export\n   */\n  get fileNameAndSize() {\n    let nameAndSize = '';\n\n    const file = this.file;\n    if (file !== undefined) {\n      const fileSize = this.unitPrefixFormat_(file.size, 'o');\n      nameAndSize = `${file.name}, ${fileSize}`;\n    }\n\n    return nameAndSize;\n  }\n\n\n  // === Private methods ===\n\n  /**\n   * @private\n   */\n  startWorking_() {\n    this.pending = true;\n    this.hasError = false;\n\n    // Clear any previous objects\n    this.wmsCapabilities = null;\n    this.wmtsCapabilities = null;\n  }\n\n  /**\n   * @param {boolean=} opt_hasError Whether we stopped working because of after\n   *     an error.\n   * @private\n   */\n  stopWorking_(opt_hasError = false) {\n    this.pending = false;\n    if (opt_hasError) {\n      this.hasError = true;\n      if (this.hasErrorPromise_) {\n        this.timeout_.cancel(this.hasErrorPromise_);\n      }\n      this.hasErrorPromise_ = this.timeout_(() => {\n        this.hasError = false;\n        this.hasErrorPromise_ = null;\n      }, 3000);\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.Controller_.Mode = {\n  LOCAL: 'Local',\n  ONLINE: 'Online'\n};\n\n\nexports.component('gmfImportdatasource', {\n  bindings: {\n    'map': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfImportdatasourceTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.import.module\n */\nimport gmfImportImportdatasourceComponent from 'gmf/import/importdatasourceComponent.js';\nimport gmfImportWmsCapabilityLayertreeComponent from 'gmf/import/wmsCapabilityLayertreeComponent.js';\nimport gmfImportWmtsCapabilityLayertreeComponent from 'gmf/import/wmtsCapabilityLayertreeComponent.js';\n\nimport './import.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfImportModule', [\n  gmfImportImportdatasourceComponent.name,\n  gmfImportWmsCapabilityLayertreeComponent.name,\n  gmfImportWmtsCapabilityLayertreeComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.search.searchDirective\n */\n\n/**\n * Provides the \"ngeoSearch\" directive, which uses Twitter's\n * typeahead component to change an input text into a search field.\n *\n * Example:\n *\n *      <input type=\"text\"\n *        ngeo-search=\"ctrl.typeaheadOptions\"\n *        ngeo-search-datasets=\"ctrl.typeaheadDatasets\"\n *        ngeo-search-listeners=\"crtl.typeaheadListeners\">\n *\n * See our live example: [../examples/search.html](../examples/search.html)\n *\n * @htmlAttribute {TypeaheadOptions} ngeo-search The options.\n * @htmlAttribute {Array.<TypeaheadDataset>} ngeo-search-datasets The sources datasets.\n * @htmlAttribute {ngeox.SearchDirectiveListeners} ngeo-search-listeners The listeners.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoSearch\n */\nconst exports = function() {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const typeaheadOptionsExpr = attrs['ngeoSearch'];\n      const typeaheadOptions = /** @type {TypeaheadOptions} */\n              (scope.$eval(typeaheadOptionsExpr));\n\n      const typeaheadDatasetsExpr = attrs['ngeoSearchDatasets'];\n      const typeaheadDatasets = /** @type {Array.<TypeaheadDataset>} */\n              (scope.$eval(typeaheadDatasetsExpr));\n\n      const args = typeaheadDatasets.slice();\n      args.unshift(typeaheadOptions);\n\n      element.typeahead(...args);\n\n      const typeaheadListenersExpr = attrs['ngeoSearchListeners'];\n      const typeaheadListeners_ =\n              /** @type {ngeox.SearchDirectiveListeners} */\n              (scope.$eval(typeaheadListenersExpr));\n\n      /**\n       * @type {ngeox.SearchDirectiveListeners}\n       */\n      const typeaheadListeners = exports.adaptListeners_(\n        typeaheadListeners_);\n\n      element.on('typeahead:open', () => {\n        scope.$apply(() => {\n          typeaheadListeners.open();\n        });\n      });\n\n      element.on('typeahead:close', () => {\n        scope.$apply(() => {\n          typeaheadListeners.close();\n        });\n      });\n\n      element.on('typeahead:cursorchange',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.cursorchange(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:select',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.select(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:autocomplete',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.autocomplete(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:asyncreceive',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {TypeaheadDataset} dataset Dataset.\n         * @param {string} query Query.\n         */\n        (event, dataset, query) => {\n          scope.$apply(() => {\n            const empty = element.data('tt-typeahead')['menu']['_allDatasetsEmpty']();\n            typeaheadListeners.datasetsempty(event, query, empty);\n          });\n        });\n\n    }\n  };\n};\n\n\n/**\n * Create a real ngeox.SearchDirectiveListeners object out of the object\n * returned by $eval.\n * @param {ngeox.SearchDirectiveListeners} object Object.\n * @return {ngeox.SearchDirectiveListeners} The listeners object.\n * @private\n */\nexports.adaptListeners_ = function(object) {\n  /** @type {ngeox.SearchDirectiveListeners} */\n  let typeaheadListeners;\n  if (object === undefined) {\n    typeaheadListeners = {\n      open() {},\n      close() {},\n      cursorchange() {},\n      datasetsempty() {},\n      select() {},\n      autocomplete() {}\n    };\n  } else {\n    typeaheadListeners = {\n      open: object.open !== undefined ?\n        object.open : () => {},\n      close: object.close !== undefined ?\n        object.close : () => {},\n      cursorchange: object.cursorchange !== undefined ?\n        object.cursorchange : () => {},\n      datasetsempty: object.datasetsempty !== undefined ?\n        object.datasetsempty : () => {},\n      select: object.select !== undefined ?\n        object.select : () => {},\n      autocomplete: object.autocomplete !== undefined ?\n        object.autocomplete : () => {}\n    };\n  }\n  return typeaheadListeners;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSearchDirective', []);\n\n\n// Register the directive in the module\nexports.module.directive('ngeoSearch', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.search.createGeoJSONBloodhound\n */\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olObj from 'ol/obj.js';\n\nimport 'corejs-typeahead';\n\n\n/**\n * @param {string} url an URL to a search service.\n * @param {(function(GeoJSONFeature): boolean)=} opt_filter function to filter\n *     results.\n * @param {ol.proj.Projection=} opt_featureProjection Feature projection.\n * @param {ol.proj.Projection=} opt_dataProjection Data projection.\n * @param {BloodhoundOptions=} opt_options optional Bloodhound options. If\n *     undefined, the default Bloodhound config will be used.\n * @param {BloodhoundRemoteOptions=} opt_remoteOptions optional Bloodhound\n * remote options. Effective only if `remote` is not defined in `opt_options`.\n * @return {Bloodhound} The Bloodhound object.\n */\nconst exports = function(url, opt_filter, opt_featureProjection,\n  opt_dataProjection, opt_options, opt_remoteOptions) {\n  const geojsonFormat = new olFormatGeoJSON();\n  const bloodhoundOptions = /** @type {BloodhoundOptions} */ ({\n    remote: {\n      url,\n      prepare(query, settings) {\n        settings.url = settings.url.replace('%QUERY', query);\n        return settings;\n      },\n      transform(parsedResponse) {\n        /** @type {GeoJSONFeatureCollection} */\n        let featureCollection = /** @type {GeoJSONFeatureCollection} */\n            (parsedResponse);\n        if (opt_filter !== undefined) {\n          featureCollection = /** @type {GeoJSONFeatureCollection} */ ({\n            type: 'FeatureCollection',\n            features: featureCollection.features.filter(opt_filter)\n          });\n        }\n\n        return geojsonFormat.readFeatures(featureCollection, {\n          featureProjection: opt_featureProjection,\n          dataProjection: opt_dataProjection\n        });\n      }\n    },\n    // datumTokenizer is required by the Bloodhound constructor but it\n    // is not used when only a remote is passsed to Bloodhound.\n    datumTokenizer: () => {},\n    queryTokenizer: Bloodhound.tokenizers.whitespace\n  });\n\n  // the options objects are cloned to avoid updating the passed object\n  const options = olObj.assign({}, opt_options || {});\n  const remoteOptions = olObj.assign({}, opt_remoteOptions || {});\n\n  if (options.remote) {\n    // move the remote options to opt_remoteOptions\n    olObj.assign(remoteOptions, options.remote);\n    delete options.remote;\n  }\n\n  olObj.assign(bloodhoundOptions, options);\n  olObj.assign(bloodhoundOptions.remote, remoteOptions);\n\n  return new Bloodhound(bloodhoundOptions);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSearchCreategeojsonbloodhound', []);\n\nexports.module.value(\n  'ngeoSearchCreateGeoJSONBloodhound',\n  exports);\n\n\n/**\n * Provides a function that creates a Bloodhound engine\n * expecting GeoJSON responses from the search web service, which creates\n * `ol.Feature` objects as suggestions.\n *\n * Example:\n *\n *     let bloodhound = createGeoJSONBloodhound(\n *       'http://example.com/fulltextsearch?query=%QUERY',\n *       aFilterFunction,\n *       ol.proj.get('EPSG:3857'));\n *     bloodhound.initialize();\n *\n *     let bloodhound = createGeoJSONBloodhound(\n *       '',\n *       undefined,\n *       ol.proj.get('EPSG:3857'),\n *       ol.proj.get('EPSG:21781'),\n *       {\n *         remote: {\n *           url: mySearchEngineUrl,\n *           replace: function(url, query) {\n *             return url +\n *                 '?qtext=' + encodeURIComponent(query) +\n *                 '&lang=' + gettextCatalog.currentLanguage;\n *           }\n *         }\n *       }\n *     );\n *     bloodhound.initialize();\n *\n * @typedef {function(string, (function(GeoJSONFeature): boolean)=,\n * ol.proj.Projection=, ol.proj.Projection=, BloodhoundOptions=,\n * BloodhoundRemoteOptions=):Bloodhound}\n * @ngdoc service\n * @ngname search.createGeoJSONBloodhound\n */\nexports.Function;\n\n\nexport default exports;\n","/**\n * @module ngeo.search.createLocationSearchBloodhound\n */\nimport * as olObj from 'ol/obj.js';\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olFeature from 'ol/Feature.js';\n\nimport 'corejs-typeahead';\n\n\n/**\n * @param {ngeox.search.LocationSearchOptions=} opt_options Options.\n * @return {Bloodhound} The Bloodhound object.\n */\nconst exports = function(opt_options) {\n  const options = opt_options || {};\n\n  const sourceProjection = olProj.get(ngeoProjEPSG21781);\n  const targetProjection = options.targetProjection;\n\n  /**\n   * @param {string} bbox Bbox string.\n   * @return {?ol.Extent} Parsed extent.\n   */\n  const parseBbox = (bbox) => {\n    const regex = /BOX\\((.*?) (.*?),(.*?) (.*?)\\)/g;\n    const match = regex.exec(bbox);\n    if (match !== null) {\n      return [\n        parseFloat(match[1]),\n        parseFloat(match[2]),\n        parseFloat(match[3]),\n        parseFloat(match[4])\n      ];\n    } else {\n      return null;\n    }\n  };\n\n  const removeHtmlTags = label => label.replace(/<\\/?[ib]>/g, '');\n\n  const extractName = (label) => {\n    const regex = /<b>(.*?)<\\/b>/g;\n    const match = regex.exec(label);\n    if (match !== null) {\n      return match[1];\n    } else {\n      return label;\n    }\n  };\n\n  const bloodhoundOptions = /** @type {BloodhoundOptions} */ ({\n    remote: {\n      url: 'https://api3.geo.admin.ch/rest/services/api/SearchServer?type=locations&searchText=%QUERY',\n      prepare: (query, settings) => {\n        settings.url = settings.url.replace('%QUERY', query);\n        if (options.limit !== undefined) {\n          settings.url += `&limit=${options.limit}`;\n        }\n        if (options.origins !== undefined) {\n          settings.url += `&origins=${options.origins}`;\n        }\n\n        return (options.prepare !== undefined) ?\n          options.prepare(query, settings) : settings;\n      },\n      transform: (/** @type {geoAdminx.SearchLocationResponse} */ parsedResponse) => {\n        const features = parsedResponse.results.map((/** @type {geoAdminx.SearchLocationResult} */ result) => {\n          const attrs = result.attrs;\n\n          // note that x and y are switched!\n          const point = new olGeomPoint([attrs.y, attrs.x]);\n          let bbox = parseBbox(attrs.geom_st_box2d);\n          if (targetProjection !== undefined) {\n            point.transform(sourceProjection, targetProjection);\n            if (bbox !== null) {\n              bbox = olProj.transformExtent(bbox, sourceProjection, targetProjection);\n            }\n          }\n\n          attrs['geometry'] = point;\n          attrs['bbox'] = bbox;\n\n          // create a label without HTML tags\n          const label = attrs.label;\n          attrs['label_no_html'] = removeHtmlTags(label);\n          attrs['label_simple'] = extractName(label);\n\n          const feature = new olFeature(attrs);\n          feature.setId(attrs.featureId);\n\n          return feature;\n        });\n\n        return features;\n      }\n    },\n    // datumTokenizer is required by the Bloodhound constructor but it\n    // is not used when only a remote is passsed to Bloodhound.\n    datumTokenizer: () => {},\n    queryTokenizer: Bloodhound.tokenizers.whitespace\n  });\n\n  // the options objects are cloned to avoid updating the passed object\n  const bhOptions = olObj.assign({}, options.options || {});\n  const remoteOptions = olObj.assign({}, options.remoteOptions || {});\n\n  if (bhOptions.remote) {\n    // move the remote options to opt_remoteOptions\n    olObj.assign(remoteOptions, bhOptions.remote);\n    delete bhOptions.remote;\n  }\n\n  olObj.assign(bloodhoundOptions, bhOptions);\n  olObj.assign(bloodhoundOptions.remote, remoteOptions);\n\n  return new Bloodhound(bloodhoundOptions);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoCreateLocationSearchBloodhound', []);\n\nexports.module.value(\n  'ngeoCreateLocationSearchBloodhound',\n  exports);\n\n\n/**\n * Provides a function that creates a Bloodhound engine\n * for the GeoAdmin Location Search API, which creates `ol.Feature` objects\n * as suggestions.\n *\n * See: http://api3.geo.admin.ch/services/sdiservices.html#search\n *\n * Example:\n *\n *     let bloodhound = ngeoCreateLocationSearchBloodhound({\n *       targetProjection: ol.proj.get('EPSG:3857'),\n *       limit: 10\n *     });\n *     bloodhound.initialize();\n *\n * @typedef {function(ngeox.search.LocationSearchOptions=):Bloodhound}\n * @ngdoc service\n * @ngname search.createLocationSearchBloodhound\n */\nexports.Function;\n\n\nexport default exports;\n","/**\n * @module ngeo.search.module\n */\nimport ngeoSearchSearchDirective from 'ngeo/search/searchDirective.js';\nimport ngeoSearchCreateGeoJSONBloodhound from 'ngeo/search/createGeoJSONBloodhound.js';\nimport ngeoSearchCreateLocationSearchBloodhound from 'ngeo/search/createLocationSearchBloodhound.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoSearchModule', [\n  ngeoSearchSearchDirective.module.name,\n  ngeoSearchCreateGeoJSONBloodhound.module.name,\n  ngeoSearchCreateLocationSearchBloodhound.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.profile.d3Elevation\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olObj from 'ol/obj.js';\n\nimport 'd3-transition';\nimport {bisector, extent} from 'd3-array';\nimport {axisBottom, axisLeft} from 'd3-axis';\nimport {scaleLinear} from 'd3-scale';\nimport {mouse, select, selectAll} from 'd3-selection';\nimport {area, line} from 'd3-shape';\nconst d3 = {\n  bisector,\n  extent,\n  axisBottom,\n  axisLeft,\n  scaleLinear,\n  mouse,\n  select,\n  selectAll,\n  area,\n  line,\n};\n\n\n/**\n * Provides a D3js component to be used to draw an elevation\n * profile chart.\n *\n *     let selection = d3.select('#element_id');\n *     let profile = ngeo.profile.d3Elevation({\n *       distanceExtractor: function (item) {return item['dist'];},\n *       linesConfiguration: {\n *         'lineZ1': {\n *           zExtractor: function (item) {return item['values']['z1'];}\n *         },\n *         'lineZ2': {\n *           color: '#00F',\n *           zExtractor: function (item) {return item['values']['z2'];}\n *         }\n *       },\n *       hoverCallback: function(point, dist, xUnits, elevations, yUnits) {\n *         console.log(point.x, point.y);\n *       },\n *       outCallback: function() {\n *         console.log(\"out\");\n *       }\n *     });\n *     selection.datum(data).call(profile);\n *\n * The selection data must be an array.\n * The layout for the items of this array is unconstrained: the distance values\n * is extracted using the distanceExtractor config option and multiples z values\n * can be displayed by providing multiple linesConfiguration with its specific\n * zExtractor.\n * Optionally you can provide a color in your linesConfiguration. A line without\n * color will be red. Each linesConfiguration name is used as class for its\n * respective line. So you can pass a styleDefs config option (inline css) to\n * customize the line or all the chart.\n * Optionally, POIs can be displayed and depend on a poiExtractor\n * config option.\n *\n * The data below will work for the above example:\n *\n *     [\n *         {\n *             \"y\": 199340,\n *             \"values\": {\"z1\": 788.7, \"z2\": 774.2},\n *             \"dist\": 0.0,\n *             \"x\": 541620\n *         }, ...\n *     ]\n *\n * @return {Object} D3js component.\n * @param {ngeox.profile.ProfileOptions} options Profile options.\n * @export\n */\nconst exports = function(options) {\n  /**\n   * Whether the simplified profile should be shown.\n   * @type {boolean}\n   */\n  const light = options.light !== undefined ? options.light : false;\n\n\n  /**\n   * The values for margins around the chart defined in pixels.\n   */\n  const margin = light ? {top: 0, right: 0, bottom: 0, left: 0} :\n    {top: 10, right: 20, bottom: 30, left: 40};\n\n  /**\n   * Hover callback function.\n   * @type {function(Object, number, string, Object.<string, number>, string)}\n   */\n  const hoverCallback = options.hoverCallback !== undefined ?\n    options.hoverCallback : () => {};\n\n  /**\n   * Out callback function.\n   * @type {function()}\n   */\n  const outCallback = options.outCallback !== undefined ?\n    options.outCallback : () => {};\n\n  /**\n   * Distance data extractor used to get the dist values.\n   */\n  const distanceExtractor = options.distanceExtractor;\n\n  /**\n   * Line configuration object.\n   */\n  const linesConfiguration = options.linesConfiguration;\n\n  /**\n   * Number of different configurations for the line.\n   */\n  const numberOfLines = Object.keys(linesConfiguration).length;\n\n  /**\n   * Method to get the coordinate in pixels from a distance.\n   */\n  const bisectDistance = d3.bisector(d => distanceExtractor(d)).left;\n\n  /**\n   * POI data extractor.\n   */\n  const poiExtractor = options.poiExtractor;\n\n  /**\n   * Optional SVG inline style.\n   */\n  const styleDefs = options.styleDefs;\n\n  /**\n   * @type {number}\n   */\n  const poiLabelAngle = options.poiLabelAngle !== undefined ?\n    options.poiLabelAngle : -60;\n\n  /**\n   * @type {Object.<string, string>}\n   */\n  const i18n = options.i18n || {};\n\n  /**\n   * @type {string}\n   */\n  const xAxisLabel = (i18n.xAxis || 'Distance');\n\n  /**\n   * @type {string}\n   */\n  const yAxisLabel = (i18n.yAxis || 'Elevation');\n\n  /**\n   * @type {ngeox.profile.ProfileFormatter}\n   */\n  const formatter = {\n    /**\n     * @param {number} dist Distance.\n     * @param {string} units Units.\n     * @return {string} Distance.\n     */\n    xhover(dist, units) {\n      return `${parseFloat(dist.toPrecision(3))} ${units}`;\n    },\n    /**\n     * @param {number} ele Elevation.\n     * @param {string} units Units.\n     * @return {string} Elevation.\n     */\n    yhover(ele, units) {\n      return `${Math.round(ele)} m`;\n    },\n    /**\n     * @param {number} dist Distance.\n     * @param {string} units Units.\n     * @return {string|number} Distance.\n     */\n    xtick(dist, units) {\n      return dist;\n    },\n    /**\n     * @param {number} ele Elevation.\n     * @param {string} units Units.\n     * @return {string|number} Elevation.\n     */\n    ytick(ele, units) {\n      return ele;\n    }\n  };\n\n  if (options.formatter !== undefined) {\n    olObj.assign(formatter, options.formatter);\n  }\n\n  /**\n   * @type {boolean}\n   */\n  const lightXAxis = options.lightXAxis !== undefined ? options.lightXAxis : false;\n\n  // Objects shared with the showPois function\n  /**\n   * @type {Object}\n   */\n  let svg;\n\n  /**\n   * D3 x scale.\n   */\n  let x;\n\n  /**\n   * D3 y scale.\n   */\n  let y;\n\n  /**\n   * Scale modifier to allow customizing the x and y scales.\n   */\n  const scaleModifier = options.scaleModifier;\n\n  let g;\n\n  /**\n   * Height of the chart in pixels\n   */\n  let height;\n\n  /**\n   * Width of the chart in pixels\n   */\n  let width;\n\n  /**\n  * Factor to determine whether to use 'm' or 'km'.\n  */\n  let xFactor;\n\n  /**\n  * Distance units. Either 'm' or 'km'.\n  */\n  let xUnits;\n\n  /**\n   * D3 extent of the distance.\n   */\n  let xDomain;\n\n\n  const profile = function(selection) {\n    selection.each(function(data) {\n      d3.select(this).selectAll('svg').remove();\n      if (data === undefined) {\n        return;\n      }\n\n      width = Math.max(this.clientWidth - margin.right - margin.left, 0);\n      x = d3.scaleLinear().range([0, width]);\n\n      height = Math.max(this.clientHeight - margin.top - margin.bottom, 0);\n      y = d3.scaleLinear().range([height, 0]);\n\n      const xAxis = d3.axisBottom(x);\n      const yAxis = d3.axisLeft(y);\n\n      let area;\n      if (numberOfLines === 1) {\n        area = d3.area()\n          .x(d => x(distanceExtractor(d)))\n          .y0(height)\n          .y1((d) => {\n            const firstLineName =  Object.keys(linesConfiguration)[0];\n            return y(linesConfiguration[firstLineName].zExtractor(d));\n          });\n      }\n\n      // Select the svg element, if it exists.\n      svg = d3.select(this).selectAll('svg').data([data]);\n      // Otherwise, create the skeletal chart.\n      const svgEnter = svg.enter().append('svg');\n      // Then select it again to get the complete object.\n      svg = d3.select(this).selectAll('svg').data([data]);\n\n      if (styleDefs !== undefined) {\n        svgEnter.append('defs').append('style')\n          .attr('type', 'text/css')\n          .text(styleDefs);\n      }\n      const gEnter = svgEnter.append('g');\n\n      clearPois();\n\n      gEnter.style('font', '11px Arial');\n\n      if (numberOfLines === 1) {\n        gEnter.append('path').attr('class', 'area')\n          .style('fill', 'rgba(222, 222, 222, 0.5)');\n      }\n\n      gEnter.insert('g', ':first-child')\n        .attr('class', 'grid-y');\n\n      if (!light) {\n        gEnter.append('g')\n          .attr('class', 'x axis')\n          .attr('transform', `translate(0,${height})`);\n\n        gEnter.append('text')\n          .attr('class', 'x label')\n          .attr('text-anchor', 'end')\n          .attr('x', width - 4)\n          .attr('y', height - 4);\n\n        gEnter.append('g')\n          .attr('class', 'y axis');\n\n        gEnter.append('text')\n          .attr('class', 'y label')\n          .attr('text-anchor', 'end')\n          .attr('y', 6)\n          .attr('dy', '.75em')\n          .attr('transform', 'rotate(-90)')\n          .style('fill', 'grey')\n          .text(`${yAxisLabel} [m]`);\n\n        gEnter.append('g')\n          .attr('class', 'metas')\n          .attr('transform', `translate(${width + 3}, 0)`);\n      }\n\n      gEnter.append('g').attr('class', 'pois');\n\n      const xHover = gEnter.append('g').attr('class', 'x grid-hover');\n      xHover.append('svg:line').attr('stroke-dasharray', '5,5');\n      xHover.append('text');\n\n      gEnter.append('rect')\n        .attr('class', 'overlay')\n        .attr('width', width)\n        .attr('height', height)\n        .style('fill', 'none')\n        .style('pointer-events', 'all');\n\n      // Update the outer dimensions.\n      svg.attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom);\n\n      // Update the inner dimensions.\n      g = svg.select('g')\n        .attr('transform', `translate(${margin.left},${\n          margin.top})`);\n\n      xDomain = d3.extent(data, d => distanceExtractor(d));\n      x.domain(xDomain);\n\n      // Return an array with the min and max value of the min/max values of\n      // each lines.\n      const yDomain = function() {\n        let elevationsValues = [];\n        let extent, name;\n        // Get min/max values (extent) of each lines.\n        for (name in linesConfiguration) {\n          extent = d3.extent(data, d => linesConfiguration[name].zExtractor(d));\n          elevationsValues = elevationsValues.concat(extent);\n        }\n        return [\n          Math.min.apply(null, elevationsValues),\n          Math.max.apply(null, elevationsValues)\n        ];\n      }();\n\n      y.domain(yDomain);\n\n      // set the ratio according to the horizontal distance\n      if (scaleModifier !== undefined) {\n        scaleModifier(x, y, width, height);\n      } else {\n        // By default, add a small padding so that it looks nicer\n        const padding = (yDomain[1] - yDomain[0]) * 0.1;\n        y.domain([yDomain[0] - padding, yDomain[1] + padding]);\n      }\n\n      // Update the area path.\n      if (numberOfLines === 1) {\n        g.select('.area')\n          .transition()\n          .attr('d', area);\n      }\n\n      // Set style and update the lines paths and y hover guides for each lines.\n      let line, name, yHover;\n      for (name in linesConfiguration) {\n        // Set style of each line and add a class with its respective name.\n        gEnter.append('path').attr('class', `line ${name}`)\n          .style('stroke', linesConfiguration[name].color || '#F00')\n          .style('fill', 'none');\n\n        // Set y hover guides\n        yHover = gEnter.append('g').attr('class', `y grid-hover ${name}`);\n        yHover.append('svg:line').attr('stroke-dasharray', '5,5');\n        yHover.append('text');\n\n        // Configure the d3 line.\n        line = d3.line()\n          .x(d => x(distanceExtractor(d)))\n          .y(d => y(linesConfiguration[name].zExtractor(d)));\n\n        // Update path for the line.\n        g.select(`.line.${name}`)\n          .transition()\n          .attr('d', line);\n      }\n\n      if (xDomain[1] > 2000) {\n        xFactor = 1000;\n        xUnits = 'km';\n      } else {\n        xFactor = 1;\n        xUnits = 'm';\n      }\n\n      if (!light) {\n        xAxis.tickFormat(d => formatter.xtick(d / xFactor, xUnits));\n        if (lightXAxis) {\n          xAxis.tickValues([0, x.domain()[1]]);\n        }\n\n        yAxis.tickFormat(d => formatter.ytick(d, 'm'));\n\n        g.select('.x.axis')\n          .transition()\n          .call(xAxis);\n\n        g.select('.x.label')\n          .text(`${xAxisLabel} [${xUnits}]`)\n          .style('fill', 'grey')\n          .style('shape-rendering', 'crispEdges');\n\n        // Avoid too much lines with overlapping labels in small profiles\n        if (height / 15 < 10) {\n          yAxis.ticks(height / 15);\n        }\n\n        g.select('.y.axis')\n          .transition()\n          .call(yAxis);\n      }\n\n      g.select('.grid-y')\n        .transition()\n        .call(yAxis.tickSize(-width, 0).tickFormat(''))\n        .selectAll('.tick line')\n        .style('stroke', '#ccc')\n        .style('opacity', 0.7);\n\n      g.selectAll('.axis').selectAll('path, line')\n        .style('fill', 'none')\n        .style('stroke', '#000')\n        .style('shape-rendering', 'crispEdges');\n\n      g.select('.grid-y').select('path')\n        .style('stroke', 'none');\n\n      g.selectAll('.grid-hover line')\n        .style('stroke', '#222')\n        .style('opacity', 0.8);\n\n      g.select('.overlay')\n        .on('mouseout', mouseout)\n        .on('mousemove', mousemove);\n\n      function mousemove() {\n        const mouseX = d3.mouse(this)[0];\n        const x0 = x.invert(mouseX);\n\n        profile.highlight(x0);\n      }\n\n      function mouseout() {\n        profile.clearHighlight();\n      }\n    });\n  };\n\n  /**\n   * Remove any highlight.\n   * Fire the outCallback callback.\n   */\n  profile.clearHighlight = function() {\n    g.selectAll('.grid-hover')\n      .style('display', 'none');\n    outCallback.call(null);\n  };\n\n  /**\n   * Highlight the given distance and corresponding elevation on chart.\n   * Fire the hoverCallback callback with corresponding point.\n   * @param {number} distance Distance.\n   */\n  profile.highlight = function(distance) {\n    const data = svg.datum();\n    const i = bisectDistance(data, distance);\n    if (i >= data.length) {\n      return;\n    }\n\n    const point = data[i];\n    const dist = distanceExtractor(point);\n    let elevation;\n    const elevations = [];\n    const elevationsRef = {};\n    let lineName;\n\n    for (lineName in linesConfiguration) {\n      elevation = linesConfiguration[lineName].zExtractor(point);\n      elevations.push(elevation);\n      elevationsRef[lineName] = elevation;\n      g.select(`.y.grid-hover.${lineName}`)\n        .style('display', 'inline')\n        .select('line')\n        .attr('x1', x(0))\n        .attr('y1', y(elevation))\n        .attr('x2', width)\n        .attr('y2', y(elevation));\n    }\n\n    g.select('.x.grid-hover')\n      .style('display', 'inline')\n      .select('line')\n      .attr('x1', x(dist))\n      .attr('y1', height)\n      .attr('x2', x(dist))\n      .attr('y2', y(Math.max.apply(null, elevations)));\n\n    const right = dist > xDomain[1] / 2;\n    let xtranslate = x(dist);\n    xtranslate += right ? -10 : 10;\n\n    g.select('.x.grid-hover text')\n      .text(formatter.xhover(dist / xFactor, xUnits))\n      .style('text-anchor', right ? 'end' : 'start')\n      .attr('transform', `translate(${xtranslate},${\n        height - 10})`);\n\n    const yUnits = 'm';\n    // Display altitude on guides only if there is one line.\n    if (numberOfLines === 1) {\n      g.select('.y.grid-hover text')\n        .text(formatter.yhover(elevations[0], 'm'))\n        .style('text-anchor', right ? 'end' : 'start')\n        .attr('transform', `translate(${xtranslate},${\n          y(elevations[0]) - 10})`);\n    }\n    hoverCallback.call(null, point, dist / xFactor, xUnits, elevationsRef,\n      yUnits);\n  };\n\n\n  profile.showPois = function(pois) {\n    pois = pois !== undefined ? pois : [];\n    googAsserts.assert(pois.length === 0 || poiExtractor !== undefined);\n\n    const pe = poiExtractor;\n    const g = svg.select('g');\n    const profileData = svg.datum();\n    const ps = g.select('.pois');\n\n    const p = ps.selectAll('.poi').data(pois, (d) => {\n      const i = bisectDistance(profileData, Math.round(pe.dist(d) * 10) / 10, 1);\n      const point = profileData[i];\n      if (point) {\n        let lineName;\n        const elevations = [];\n        for (lineName in linesConfiguration) {\n          elevations.push(linesConfiguration[lineName].zExtractor(point));\n        }\n        const z = Math.max.apply(null, elevations);\n        pe.z(d, z);\n      }\n      return pe.id(d);\n    });\n\n    const poiEnterG = p.enter()\n      .append('g')\n      .attr('class', 'poi');\n\n    poiEnterG.append('text')\n      .attr('x', light ? 0 : 9)\n      .attr('dy', '.35em')\n      .attr('text-anchor', light ? 'middle' : 'start');\n\n    poiEnterG.append('line')\n      .style('shape-rendering', 'crispEdges');\n\n    poiEnterG.style('opacity', 0)\n      .transition()\n      .duration(1000)\n      .delay(100)\n      .style('opacity', 1);\n\n    poiEnterG.selectAll('text')\n      .attr('transform', (d) => {\n        if (light) {\n          return ['translate(',\n            x(pe.dist(d)), ',',\n            y(pe.z(d)) - 10, ')'\n          ].join('');\n        } else {\n          return ['translate(',\n            x(pe.dist(d)), ',',\n            y(pe.z(d)) - 20, ') rotate(', poiLabelAngle, ')'\n          ].join('');\n        }\n      })\n      .text(d => pe.sort(d) + (light ? '' : (` - ${pe.title(d)}`)));\n\n    poiEnterG.selectAll('line')\n      .style('stroke', 'grey')\n      .attr('x1', d => x(pe.dist(d)))\n      .attr('y1', d => y(y.domain()[0]))\n      .attr('x2', d => x(pe.dist(d)))\n      .attr('y2', d => y(pe.z(d)));\n\n    // remove unused pois\n    poiEnterG.exit().remove();\n  };\n\n  function clearPois() {\n    profile.showPois([]);\n  }\n\n\n  return profile;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.profile.elevationComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoProfileD3Elevation from 'ngeo/profile/d3Elevation.js';\n\nimport {select} from 'd3-selection';\nconst d3 = {\n  select,\n};\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoProfile', [\n  ngeoMiscDebounce.name\n]);\n\n\n/**\n * Provides a directive used to insert an elevation profile chart\n * in the DOM.\n *\n * Example:\n *\n *      <div ngeo-profile=\"ctrl.profileData\"\n *        ngeo-profile-options=\"ctrl.profileOptions\"\n *        ngeo-profile-pois=\"ctrl.profilePois\">\n *      </div>\n *\n * Where \"ctrl.profileOptions\" is of type {@link ngeox.profile.ProfileOptions};\n * \"ctrl.profileData\" and \"ctrl.profilePois\" are arrays which will be\n * processed by {@link ngeox.profile.ElevationExtractor} and\n * {@link ngeox.profile.PoiExtractor}.\n *\n * See our live example: [../examples/profile.html](../examples/profile.html)\n *\n * @htmlAttribute {?Object} ngeo-profile The profile data.\n * @htmlAttribute {ngeox.profile.ProfileOptions} ngeo-profile-options The options.\n * @htmlAttribute {?Array} ngeo-profile-pois The data for POIs.\n * @htmlAttribute {*} ngeo-profile-highlight Any property on the scope which\n * evaluated value may correspond to distance from origin.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoProfile\n */\nexports.directive_ = function(ngeoDebounce) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const optionsAttr = attrs['ngeoProfileOptions'];\n      googAsserts.assert(optionsAttr !== undefined);\n\n      const selection = d3.select(element[0]);\n      let profile, elevationData, poiData;\n\n      scope.$watchCollection(optionsAttr, (newVal) => {\n\n        const options = /** @type {ngeox.profile.ProfileOptions} */\n                (olObj.assign({}, newVal));\n\n        if (options !== undefined) {\n\n          // proxy the hoverCallback and outCallbackin order to be able to\n          // call $applyAsync\n          //\n          // We're using $applyAsync here because the callback may be\n          // called inside the Angular context. For example, it's the case\n          // when the user hover's the line geometry on the map and the\n          // profileHighlight property is changed.\n          //\n          // For that reason we use $applyAsync instead of $apply here.\n          if (options.hoverCallback !== undefined) {\n            const origHoverCallback = options.hoverCallback;\n            options.hoverCallback = function(...args) {\n              origHoverCallback(...args);\n              scope.$applyAsync();\n            };\n          }\n\n          if (options.outCallback !== undefined) {\n            const origOutCallback = options.outCallback;\n            options.outCallback = function() {\n              origOutCallback();\n              scope.$applyAsync();\n            };\n          }\n\n          profile = ngeoProfileD3Elevation(options);\n          refreshData();\n        }\n      });\n\n      scope.$watch(attrs['ngeoProfile'], (newVal, oldVal) => {\n        elevationData = newVal;\n        refreshData();\n      });\n\n      scope.$watch(attrs['ngeoProfilePois'], (newVal, oldVal) => {\n        poiData = newVal;\n        refreshData();\n      });\n\n      scope.$watch(attrs['ngeoProfileHighlight'],\n        (newVal, oldVal) => {\n          if (newVal === undefined) {\n            return;\n          }\n          if (newVal > 0) {\n            profile.highlight(newVal);\n          } else {\n            profile.clearHighlight();\n          }\n        });\n\n      olEvents.listen(window, 'resize', ngeoDebounce(refreshData, 50, true));\n\n      function refreshData() {\n        if (profile !== undefined) {\n          selection.datum(elevationData).call(profile);\n          if (elevationData !== undefined) {\n            profile.showPois(poiData);\n          }\n        }\n      }\n    }\n  };\n};\n\nexports.directive('ngeoProfile', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.profile.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olOverlay from 'ol/Overlay.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olObj from 'ol/obj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadCsv from 'ngeo/download/Csv.js';\n\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProfileElevationComponent from 'ngeo/profile/elevationComponent.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfProfile', [\n  ngeoDownloadCsv.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoProfileElevationComponent.name,\n]);\n\n\nexports.value('gmfProfileTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfProfileTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/profile';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/profile', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfProfileTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfProfileTemplateUrl($element, $attrs, gmfProfileTemplateUrl) {\n  return gmfProfileTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component that display a profile panel. This profile use the given\n * LineString geometry to request the c2cgeoportal profile.json service. The\n * raster used in the request are the keys of the 'linesconfiguration' object.\n * The 'map' attribute is optional and are only used to display on the map the\n * information that concern the hovered point (in the profile and on the map)\n * of the line.\n * This profile relies on the ngeo.profile (d3) and ngeo.ProfileComponent.\n *\n * Example:\n *\n *      <gmf-profile\n *        gmf-profile-active=\"ctrl.profileActive\"\n *        gmf-profile-line=\"ctrl.profileLine\"\n *        gmf-profile-map=\"::ctrl.map\"\n *        gmf-profile-linesconfiguration=\"::ctrl.profileLinesconfiguration\">\n *      </gmf-profile>\n *\n *\n * @htmlAttribute {boolean} gmf-profile-active Active the component.\n * @htmlAttribute {ol.geom.LineString} gmf-profile-line The linestring geometry\n *     to use to draw the profile.\n * @htmlAttribute {ol.Map?} gmf-profile-map An optional map.\n * @htmlAttribute {Object.<string, gmfx.ProfileLineConfiguration>}\n *     gmf-profile-linesconfiguration The configuration of the lines. Each keys\n *     will be used to request elevation layers.\n * @htmlAttribute {ol.style.Style?} gmf-profile-hoverpointstyle Optional style\n *     for the 'on Hover' point on the line.\n * @htmlAttribute {number?} gmf-profile-numberofpoints Optional maximum limit of\n *     points to request. Default to 100.\n * @htmlAttribute {Object.<string, *>?} gmf-profile-options Optional options\n *     object like {@link ngeox.profile.ProfileOptions} but without any\n *     mandatory value. Will be passed to the ngeo profile component. Providing\n *     'linesConfiguration', 'distanceExtractor', hoverCallback, outCallback\n *     or i18n will override native gmf profile values.\n *\n * @ngdoc component\n * @ngname gmfProfile\n */\nexports.component_ = {\n  controller: 'GmfProfileController as ctrl',\n  bindings: {\n    'active': '=gmfProfileActive',\n    'line': '=gmfProfileLine',\n    'getMapFn': '&?gmfProfileMap',\n    'getLinesConfigurationFn': '&gmfProfileLinesconfiguration',\n    'getHoverPointStyleFn': '&?gmfProfileHoverpointstyle',\n    'getNbPointsFn': '&?gmfProfileNumberofpoints',\n    'getOptionsFn': '&?gmfProfileOptions'\n  },\n  templateUrl: gmfProfileTemplateUrl\n};\n\nexports.component('gmfProfile', exports.component_);\n\n\n/**\n * @param {angular.Scope} $scope Angular scope.\n * @param {angular.$http} $http Angular http service.\n * @param {angular.JQLite} $element Element.\n * @param {angular.$filter} $filter Angular filter\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Feature overlay\n *     manager.\n * @param {string} gmfProfileJsonUrl URL of GMF service JSON profile.\n * @param {ngeo.download.Csv} ngeoCsvDownload CSV Download service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfProfileController\n */\nexports.Controller_ = function($scope, $http, $element, $filter,\n  gettextCatalog, ngeoFeatureOverlayMgr, gmfProfileJsonUrl,\n  ngeoCsvDownload) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {angular.$filter}\n   * @export\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.pointHoverOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.gmfProfileJsonUrl_ = gmfProfileJsonUrl;\n\n  /**\n   * @type {ngeo.download.Csv}\n   * @private\n   */\n  this.ngeoCsvDownload_ = ngeoCsvDownload;\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?Object<string, !gmfx.ProfileLineConfiguration>}\n   * @private\n   */\n  this.linesConfiguration_ = null;\n\n  /**\n   * @type {!Array.<string>}\n   * @private\n   */\n  this.layersNames_ = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.nbPoints_ = 100;\n\n  /**\n   * @type {ol.geom.LineString}\n   * @export\n   */\n  this.line;\n\n  /**\n   * @type {Array.<Object>}\n   * @export\n   */\n  this.profileData = [];\n\n  /**\n   * @type {gmfx.ProfileHoverPointInformations}\n   * @export\n   */\n  this.currentPoint = {\n    coordinate: undefined,\n    distance: undefined,\n    elevations: {},\n    xUnits: undefined,\n    yUnits: undefined\n  };\n\n  /**\n   * Distance to highlight on the profile. (Property used in ngeo.Profile.)\n   * @type {number}\n   * @export\n   */\n  this.profileHighlight = -1;\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltip_ = null;\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n  /**\n   * @type {ol.Feature}\n   * @private\n   */\n  this.snappedPoint_ = new olFeature();\n  this.pointHoverOverlay_.addFeature(this.snappedPoint_);\n\n  /**\n   * @type {ngeox.profile.I18n}\n   * @private\n   */\n  this.profileLabels_ = {\n    xAxis: gettextCatalog.getString('Distance'),\n    yAxis: gettextCatalog.getString('Elevation')\n  };\n\n\n  /**\n   * @type {?ngeox.profile.ProfileOptions}\n   * @export\n   */\n  this.profileOptions = null;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = false;\n\n  /**\n   * @type {ol.EventsKey}\n   * @private\n   */\n  this.pointerMoveKey_;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isErrored = false;\n\n\n  // Watch the active value to activate/deactive events listening.\n  $scope.$watch(\n    () => this.active,\n    (newValue, oldValue) => {\n      if (oldValue !== newValue) {\n        this.updateEventsListening_();\n      }\n    });\n\n  // Watch the line to update the profileData (data for the chart).\n  $scope.$watch(\n    () => this.line,\n    (newLine, oldLine) => {\n      if (oldLine !== newLine) {\n        this.update_();\n      }\n    });\n\n  this.updateEventsListening_();\n};\n\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.map_ = this['getMapFn'] ? this['getMapFn']() : null;\n  this.nbPoints_ = this['getNbPointsFn'] ? this['getNbPointsFn']() : 100;\n\n  let hoverPointStyle;\n  const hoverPointStyleFn = this['getHoverPointStyleFn'];\n  if (hoverPointStyleFn) {\n    hoverPointStyle = hoverPointStyleFn();\n    googAsserts.assertInstanceof(hoverPointStyle, olStyleStyle);\n  } else {\n    hoverPointStyle = new olStyleStyle({\n      image: new olStyleCircle({\n        fill: new olStyleFill({color: '#ffffff'}),\n        radius: 3\n      })\n    });\n  }\n  this.pointHoverOverlay_.setStyle(hoverPointStyle);\n\n  const linesConfiguration = this['getLinesConfigurationFn']();\n  googAsserts.assertInstanceof(linesConfiguration, Object);\n\n  this.linesConfiguration_ = linesConfiguration;\n\n  for (const name in this.linesConfiguration_) {\n    // Keep an array of all layer names.\n    this.layersNames_.push(name);\n    // Add generic zExtractor to lineConfiguration object that doesn't have one.\n    const lineConfig = this.linesConfiguration_[name];\n    if (!lineConfig.zExtractor) {\n      this.linesConfiguration_[name].zExtractor = this.getZFactory_(name);\n    }\n  }\n\n  this.profileOptions = /** @type {ngeox.profile.ProfileOptions} */ ({\n    linesConfiguration: this.linesConfiguration_,\n    distanceExtractor: this.getDist_,\n    hoverCallback: this.hoverCallback_.bind(this),\n    outCallback: this.outCallback_.bind(this),\n    i18n: this.profileLabels_\n  });\n\n  const optionsFn = this['getOptionsFn'];\n  if (optionsFn) {\n    const options = optionsFn();\n    googAsserts.assertObject(options);\n    olObj.assign(this.profileOptions, options);\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.update_ = function() {\n  this.isErrored = false;\n  if (this.line) {\n    this.getJsonProfile_();\n  } else {\n    this.profileData = [];\n  }\n  this.active = !!this.line;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateEventsListening_ = function() {\n  if (this.active && this.map_ !== null) {\n    this.pointerMoveKey_ = olEvents.listen(this.map_, 'pointermove',\n      this.onPointerMove_.bind(this));\n  } else {\n    olEvents.unlistenByKey(this.pointerMoveKey_);\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n * @private\n */\nexports.Controller_.prototype.onPointerMove_ = function(e) {\n  if (e.dragging || !this.line) {\n    return;\n  }\n  const coordinate = this.map_.getEventCoordinate(e.originalEvent);\n  const closestPoint = this.line.getClosestPoint(coordinate);\n  // compute distance to line in pixels\n  const eventToLine = new olGeomLineString([closestPoint, coordinate]);\n  const pixelDist = eventToLine.getLength() / this.map_.getView().getResolution();\n\n  if (pixelDist < 16) {\n    this.profileHighlight = this.getDistanceOnALine_(closestPoint, this.line);\n  } else {\n    this.profileHighlight = -1;\n  }\n  this.$scope_.$apply();\n};\n\n\n/**\n * Return the distance between the beginning of the line and the given point.\n * The point must be on the line. If not, this function will return the total\n * length of the line.\n * @param {ol.Coordinate} pointOnLine A point on the given line.\n * @param {ol.geom.LineString} line A line.\n * @return {number} A distance.\n * @private\n */\nexports.Controller_.prototype.getDistanceOnALine_ = function(pointOnLine,\n  line) {\n  let segment;\n  let distOnLine = 0;\n  const fakeExtent = [\n    pointOnLine[0] - 0.5,\n    pointOnLine[1] - 0.5,\n    pointOnLine[0] + 0.5,\n    pointOnLine[1] + 0.5\n  ];\n  this.line.forEachSegment((firstPoint, lastPoint) => {\n    segment = new olGeomLineString([firstPoint, lastPoint]);\n    // Is the pointOnLine on this swegement ?\n    if (segment.intersectsExtent(fakeExtent)) {\n      // If the closestPoint is on the line, add the distance between the first\n      // point of this segment and the pointOnLine.\n      segment.setCoordinates([firstPoint, pointOnLine]);\n      return distOnLine += segment.getLength(); // Assign value and break;\n    } else {\n      // Do the sum of the length of each eventual previous segment.\n      distOnLine += segment.getLength();\n    }\n  });\n  return distOnLine;\n};\n\n\n/**\n * @param {Object} point Point.\n * @param {number} dist distance on the line.\n * @param {string} xUnits X units label.\n * @param {Object.<string, number>} elevationsRef Elevations references.\n *  @param {string} yUnits Y units label.\n * @private\n */\nexports.Controller_.prototype.hoverCallback_ = function(point, dist, xUnits,\n  elevationsRef, yUnits) {\n  // Update information point.\n  let ref;\n  const coordinate = [point.x, point.y];\n  for (ref in elevationsRef) {\n    this.currentPoint.elevations[ref] = elevationsRef[ref];\n  }\n  this.currentPoint.distance = dist;\n  this.currentPoint.xUnits = xUnits;\n  this.currentPoint.yUnits = yUnits;\n  this.currentPoint.coordinate = coordinate;\n\n  // Update hover.\n  const geom = new olGeomPoint(coordinate);\n  this.createMeasureTooltip_();\n  this.measureTooltipElement_.innerHTML = this.getTooltipHTML_();\n  this.measureTooltip_.setPosition(coordinate);\n  this.snappedPoint_.setGeometry(geom);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.outCallback_ = function() {\n  // Reset information point.\n  this.currentPoint.coordinate = undefined;\n  this.currentPoint.distance = undefined;\n  this.currentPoint.elevations = {};\n  this.currentPoint.xUnits = undefined;\n  this.currentPoint.yUnits = undefined;\n\n  // Reset hover.\n  this.removeMeasureTooltip_();\n  this.snappedPoint_.setGeometry(null);\n};\n\n\n/**\n * @return {string} A texte formatted to a tooltip.\n * @private\n */\nexports.Controller_.prototype.getTooltipHTML_ = function() {\n  const separator = ' : ';\n  let elevationName, translatedElevationName;\n  const innerHTML = [];\n  const number = this.$filter_('number');\n  const DistDecimal = this.currentPoint.xUnits === 'm' ? 0 : 2;\n  innerHTML.push(\n    `${this.profileLabels_.xAxis +\n      separator +\n      number(this.currentPoint.distance, DistDecimal)\n    } ${\n      this.currentPoint.xUnits}`\n  );\n  for (elevationName in this.currentPoint.elevations) {\n    translatedElevationName = this.gettextCatalog_.getString(elevationName);\n    innerHTML.push(\n      `${translatedElevationName +\n        separator +\n        number(this.currentPoint.elevations[elevationName], 0)\n      } ${this.currentPoint.yUnits}`\n    );\n  }\n  return innerHTML.join('</br>');\n};\n\n\n/**\n * Creates a new 'hover' tooltip\n * @private\n */\nexports.Controller_.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.className += 'tooltip ngeo-tooltip-measure';\n  this.measureTooltip_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center'\n  });\n  this.map_.addOverlay(this.measureTooltip_);\n};\n\n\n/**\n * Destroy the 'hover' tooltip\n * @private\n */\nexports.Controller_.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(\n      this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.map_.removeOverlay(this.measureTooltip_);\n  }\n};\n\n\n/**\n * Return the color value of a gmfx.ProfileLineConfiguration.\n * @param {string} layerName name of the elevation layer.\n * @return {string|undefined} A HEX color or undefined is nothing is found.\n * @export\n */\nexports.Controller_.prototype.getColor = function(layerName) {\n  const lineConfiguration = this.linesConfiguration_[layerName];\n  if (!lineConfiguration) {\n    return undefined;\n  }\n  return lineConfiguration.color;\n};\n\n\n/**\n * Return a copy of the existing layer names.\n * @return {Array.<string>} The names of layers.\n * @export\n */\nexports.Controller_.prototype.getLayersNames = function() {\n  return this.layersNames_.slice(0);\n};\n\n\n/**\n * @param {string} layerName name of the elevation layer.\n * @return {function(Object):number} Z extractor function.\n * @private\n */\nexports.Controller_.prototype.getZFactory_ = function(layerName) {\n  /**\n   * Generic GMF extractor for the 'given' value in 'values' in profileData.\n   * @param {Object} item The item.\n   * @return {number} The elevation.\n   * @private\n   */\n  const getZFn = function(item) {\n    if ('values' in item && layerName in item['values']) {\n      return parseFloat(item['values'][layerName]);\n    }\n    return 0;\n  };\n  return getZFn;\n};\n\n\n/**\n * Extractor for the 'dist' value in profileData.\n * @param {Object} item The item.\n * @return {number} The distance.\n * @private\n */\nexports.Controller_.prototype.getDist_ = function(item) {\n  if ('dist' in item) {\n    return item['dist'];\n  }\n  return 0;\n};\n\n\n/**\n * Request the profile.\n * @private\n */\nexports.Controller_.prototype.getJsonProfile_ = function() {\n  const geom = {\n    'type': 'LineString',\n    'coordinates': this.line.getCoordinates()\n  };\n\n  const params = {\n    'layers': this.layersNames_.join(','),\n    'geom': JSON.stringify(geom),\n    'nbPoints': this.nbPoints_\n  };\n\n  /** @type {Function} */ (this.$http_)({\n    url: this.gmfProfileJsonUrl_,\n    method: 'POST',\n    params: params,\n    paramSerializer: '$httpParamSerializerJQLike',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n  }).then(\n    this.getProfileDataSuccess_.bind(this),\n    this.getProfileDataError_.bind(this)\n  );\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\nexports.Controller_.prototype.getProfileDataSuccess_ = function(resp) {\n  const profileData = resp.data['profile'];\n  if (profileData instanceof Array) {\n    this.profileData = profileData;\n  }\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\nexports.Controller_.prototype.getProfileDataError_ = function(resp) {\n  this.isErrored = true;\n  console.error('Can not get JSON profile.');\n};\n\n\n/**\n * Request the csv profile with the current profile data.\n * @export\n */\nexports.Controller_.prototype.downloadCsv = function() {\n  if (this.profileData.length === 0) {\n    return;\n  }\n\n  /** @type {Array.<ngeox.GridColumnDef>} */\n  const headers = [];\n  let hasDistance = false;\n  const firstPoint = this.profileData[0];\n  if ('dist' in firstPoint) {\n    headers.push({name: 'distance'});\n    hasDistance = true;\n  }\n  const layers = [];\n  for (const layer in firstPoint['values']) {\n    headers.push({'name': layer});\n    layers.push(layer);\n  }\n  headers.push({name: 'x'});\n  headers.push({name: 'y'});\n\n  const rows = this.profileData.map((point) => {\n    const row = {};\n    if (hasDistance) {\n      row['distance'] = point['dist'];\n    }\n\n    layers.forEach((layer) => {\n      row[layer] = point['values'][layer];\n    });\n\n    row['x'] = point['x'];\n    row['y'] = point['y'];\n\n    return row;\n  });\n\n  this.ngeoCsvDownload_.startDownload(rows, headers, 'profile.csv');\n};\n\n\nexports.controller('GmfProfileController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.profile.drawLineComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport olCollection from 'ol/Collection.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olMap from 'ol/Map.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawProfileLine', [\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\n\n/**\n * Simple directive that can be put on any element. The directive listen on\n * clicks events to allow/disallow to draw one line (and only one) on the\n * map. Typically used to draw the line that will serve the gmf.Profile.\n *\n * Example:\n *\n *      <gmf-drawprofileline\n *        gmf-drawprofileline-active=\"mainCtrl.drawProfileActive\"\n *        gmf-drawprofileline-map=\"mainCtrl.map\"\n *        gmf-drawprofileline-line=\"mainCtrl.line\"\n *      </gmf-drawprofileline>\n *\n *\n * @htmlAttribute {ol.Map} gmf-drawprofileline-map The map.\n * @htmlAttribute {ol.geom.LineString} gmf-drawprofileline-line The variable to\n *     connect with the drawed line.\n * @htmlAttribute {boolean=} gmf-drawprofileline-active Active the component.\n * @htmlAttribute {ol.style.Style=} gmf-drawprofileline-style Optional style\n *     for the drawed line.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname gmfDrawprofileline\n */\nexports.directive_ = function() {\n  return {\n    scope: true,\n    controller: 'GmfDrawprofilelineController as ctrl',\n    restrict: 'A',\n    bindToController: {\n      'getMapFn': '&gmfDrawprofilelineMap',\n      'line': '=gmfDrawprofilelineLine',\n      'active': '=gmfDrawprofilelineActive',\n      'getStyleFn': '&?gmfDrawprofilelineStyle'\n    }\n  };\n};\n\n\nexports.directive('gmfDrawprofileline',\n  exports.directive_);\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Feature overlay\n *     manager.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfDrawprofilelineController\n */\nexports.Controller_ = function($scope, $element, $timeout,\n  ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {?ol.geom.LineString}\n   * @export\n   */\n  this.line;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  const overlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n  overlay.setFeatures(this.features_);\n\n  let style;\n  const styleFn = this['getStyleFn'];\n  if (styleFn) {\n    style = styleFn();\n    googAsserts.assertInstanceof(style, olStyleStyle);\n  } else {\n    style = new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 2\n      })\n    });\n  }\n  overlay.setStyle(style);\n\n  /**\n   * @type {!ol.interaction.Draw}\n   * @export\n   */\n  this.interaction = new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    features: this.features_\n  });\n\n  ngeoMiscDecorate.interaction(this.interaction);\n\n  // Clear the line as soon as the interaction is activated.\n  this.interaction.on('change:active', () => {\n    if (this.interaction.getActive()) {\n      this.clear_();\n    }\n  });\n\n  // Update the profile with the new geometry.\n  this.interaction.on('drawend', (event) => {\n    this.line = event.feature.getGeometry();\n    // using timeout to prevent double click to zoom the map\n    $timeout(() => {\n      this.interaction.setActive(false);\n    }, 0);\n  });\n\n  // Line may be removed from an other component\n  // for example closing the chart panel\n  $scope.$watch(\n    () => this.line,\n    (newLine, oldLine) => {\n      if (newLine === null) {\n        this.clear_();\n      }\n    });\n\n  $scope.$watch(\n    () => this.active,\n    (newValue) => {\n      if (newValue === false) {\n        this.clear_();\n      }\n      // Will activate the interaction automatically the first time\n      this.interaction.setActive(this.active);\n    }\n  );\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const map = this['getMapFn']();\n  googAsserts.assertInstanceof(map, olMap);\n  this.map_ = map;\n  this.map_.addInteraction(this.interaction);\n};\n\n\n/**\n * Clear the overlay and profile line.\n * @private\n */\nexports.Controller_.prototype.clear_ = function() {\n  this.features_.clear();\n  this.line = null;\n};\n\n\nexports.controller('GmfDrawprofilelineController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.profile.module\n */\nimport gmfProfileComponent from 'gmf/profile/component.js';\nimport gmfProfileDrawLineComponent from 'gmf/profile/drawLineComponent.js';\n\nimport './profile.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfProfileModule', [\n  gmfProfileComponent.name,\n  gmfProfileDrawLineComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.query.bboxQueryComponent\n */\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olInteractionDragBox from 'ol/interaction/DragBox.js';\nimport * as olEventsCondition from 'ol/events/condition.js';\n\nconst exports = angular.module('ngeoBboxQuery', [\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\n/**\n * Provides a \"bbox query\" directive.\n *\n * This directive is responsible of binding a map and the ngeo query service\n * together. While active, drawing a bbox while CTRL or the 'meta' key is pressed\n * issues a request to the query service.\n *\n * This directive doesn't require to be rendered in a visible DOM element, but\n * it could be used with a ngeo-btn to manage the activation of the directive.\n * See below an example without any use of UI:\n *\n * Example:\n *\n *      <span\n *        ngeo-bbox-query=\"\"\n *        ngeo-bbox-query-map=\"::ctrl.map\"\n *        ngeo-bbox-query-limit=\"50\"\n *        ngeo-bbox-query-active=\"ctrl.queryActive\">\n *        ngeo-bbox-query-autoclear=\"ctrl.queryAutoClear\">\n *      </span>\n *\n * See the live example: [../examples/bboxquery.html](../examples/bboxquery.html)\n *\n * @param {ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBboxQuery\n */\nexports.directive_ = function(ngeoMapQuerent) {\n  return {\n    restrict: 'A',\n    scope: false,\n    link: (scope, elem, attrs) => {\n      /**\n       * @type {ol.Map}\n       */\n      const map = scope.$eval(attrs['ngeoBboxQueryMap']);\n\n      const interaction = new olInteractionDragBox({\n        condition: olEventsCondition.platformModifierKeyOnly\n      });\n\n      /**\n       * Called when a bbox is drawn while this controller is active. Issue\n       * a request to the query service using the extent that was drawn.\n       * @param {ol.interaction.DragBox.Event} evt Event.\n       */\n      const handleBoxEnd = function(evt) {\n        const extent = interaction.getGeometry().getExtent();\n        ngeoMapQuerent.issue({\n          limit: scope.$eval(attrs['ngeoBboxQueryLimit']),\n          extent: extent,\n          map: map\n        });\n      };\n      interaction.on('boxend', handleBoxEnd);\n\n      // watch 'active' property -> activate/deactivate accordingly\n      scope.$watch(attrs['ngeoBboxQueryActive'],\n        (newVal, oldVal) => {\n          if (newVal) {\n            // activate\n            map.addInteraction(interaction);\n          } else {\n            // deactivate\n            map.removeInteraction(interaction);\n            if (scope.$eval(attrs['ngeoBboxQueryAutoclear']) !== false) {\n              ngeoMapQuerent.clear();\n            }\n          }\n        }\n      );\n    }\n  };\n};\n\nexports.directive('ngeoBboxQuery', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.raster.component\n */\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport * as olEvents from 'ol/events.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfRasterComponent', [\n  gmfRasterRasterService.module.name,\n  ngeoMiscDebounce.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/raster/widgetComponent', require('./widgetComponent.html'));\n});\n\n\nexports.value('gmfElevationwidgetTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfElevationwidgetTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/raster/widgetComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfElevationwidgetTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfElevationwidgetTemplateUrl($attrs, gmfElevationwidgetTemplateUrl) {\n  return gmfElevationwidgetTemplateUrl($attrs);\n}\n\n\n/**\n * Provide a directive that set a value each 500ms with the elevation under the\n * mouse cursor position on the map. The value must come from the elevation\n * service of a c2cgeoportal server. The server's URL must be defined as\n * config value of the application.\n *\n * Example:\n *\n *      <span gmf-elevation\n *            gmf-elevation-active=\"elevationActive\"\n *            gmf-elevation-elevation=\"elevationValue\"\n *            gmf-elevation-layer=\"mainCtrl.elevationLayer\"\n *            gmf-elevation-map=\"::mainCtrl.map\">\n *            {{elevationValue | number:2}}m\n *      </span>\n *\n *\n * @htmlAttribute {boolean} gmf-elevation-active A boolean to set active or\n *     deactive the component.\n * @htmlAttribute {number} gmf-elevation-elevation The value to set with the\n *     elevation value.\n * @htmlAttribute {string} gmf-elevation-layer Elevation layer to use.\n * @htmlAttribute {ol.Map} gmf-elevation-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname gmfElevation\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    controller: 'GmfElevationController as ctrl',\n    bindToController: true,\n    scope: {\n      'active': '<gmfElevationActive',\n      'elevation': '=gmfElevationElevation',\n      'loading': '=?gmfElevationLoading',\n      'layer': '<gmfElevationLayer',\n      'map': '=gmfElevationMap'\n    },\n    link: (scope, element, attr) => {\n      const ctrl = scope['ctrl'];\n\n      // Watch active or not.\n      scope.$watch(() => ctrl.active, function(active) {\n        this.toggleActive_(active);\n      }.bind(ctrl));\n\n      // Watch current layer.\n      scope.$watch(() => ctrl.layer, function(layer) {\n        this.layer = layer;\n        this.elevation = null;\n      }.bind(ctrl));\n    }\n  };\n};\n\n\nexports.directive('gmfElevation', exports.component_);\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {ngeox.miscDebounce} ngeoDebounce Ngeo debounce factory\n * @param {gmf.raster.RasterService} gmfRaster Gmf Raster service\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfElevationController\n */\nexports.Controller_ = function($scope, ngeoDebounce, gmfRaster) {\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  /**\n   * @type {boolean}\n   */\n  this.active;\n\n  /**\n   * @type {!number|undefined}\n   * @export\n   */\n  this.elevation;\n\n  /**\n   * @type {string}\n   */\n  this.layer;\n\n  /**\n   * @type {ol.Map}\n   */\n  this.map;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.inViewport_ = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.loading = false;\n};\n\n/**\n * Active or deactive the request of the raster each 500 ms on pointermove.\n * @param {boolean} active true to make requests.\n * @private\n */\nexports.Controller_.prototype.toggleActive_ = function(active) {\n  this.elevation = undefined;\n  if (active) {\n    googAsserts.assert(this.listenerKeys_.length === 0);\n\n    // Moving the mouse clears previously displayed elevation\n    this.listenerKeys_.push(olEvents.listen(this.map, 'pointermove',\n      function(e) {\n        this.scope_.$apply(() => {\n          this.inViewport_ = true;\n          this.elevation = undefined;\n          this.loading = false;\n        });\n      }, this));\n\n    // Launch the elevation service request when the user stops moving the\n    // mouse for less short delay\n    this.listenerKeys_.push(olEvents.listen(this.map, 'pointermove',\n      this.ngeoDebounce_(this.pointerStop_.bind(this), 500, true)\n    ));\n\n    this.listenerKeys_.push(olEvents.listen(this.map.getViewport(), 'mouseout', () => {\n      this.scope_.$apply(() => {\n        this.elevation = undefined;\n        this.inViewport_ = false;\n        this.loading = false;\n      });\n    }));\n  } else {\n    this.elevation = undefined;\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n};\n\n\n/**\n * Request data from a raster from a MapBrowserPointerEvent's coordinates.\n * Called when the user stopped moving the mouse for 500ms.\n * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n * @private\n */\nexports.Controller_.prototype.pointerStop_ = function(e) {\n  if (this.inViewport_) {\n    this.loading = true;\n    const params = {\n      'layers': this.layer\n    };\n    this.gmfRaster_.getRaster(e.coordinate, params).then(\n      this.getRasterSuccess_.bind(this),\n      this.getRasterError_.bind(this)\n    );\n  }\n};\n\n\n/**\n * @param {Object.<string, number>} resp Response of the get Raster service.\n * @private\n */\nexports.Controller_.prototype.getRasterSuccess_ = function(resp) {\n  googAsserts.assert(this.layer, 'A layer should be selected');\n  this.elevation = resp[this.layer];\n  this.loading = false;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.getRasterError_ = function() {\n  console.error('Error on getting the raster.');\n  this.elevation = undefined;\n  this.loading = false;\n};\n\n\nexports.controller('GmfElevationController', exports.Controller_);\n\n\n/**\n * Provides a component which encapsulates the elevation component (see above)\n * in a button with dropdown menu to be included in a application directly.\n *\n * Example:\n *  <gmf-elevationwidget\n *      gmf-elevationwidget-map=\"::mainCtrl.map\"\n *      gmf-elevationwidget-layers=\"::mainCtrl.elevationLayers\"\n *      gmf-elevationwidget-active=\"mainCtrl.showInfobar\">\n *  </gmf-elevationwidget>\n *\n * @htmlAttribute {ol.Map} gmf-elevationwidget-map The map.\n * @htmlAttribute {Array.<string>} gmf-elevationwidget-layers The list of\n *     layers.\n * @htmlAttribute {boolean} gmf-elevationwidget-active Whether to activate the\n *     elevation component.\n *\n * @ngdoc component\n * @ngname gmfElevationwidget\n */\nexports.widgetComponent_ = {\n  controller: 'gmfElevationwidgetController as ctrl',\n  bindings: {\n    'map': '<gmfElevationwidgetMap',\n    'layers': '<gmfElevationwidgetLayers',\n    'active': '<gmfElevationwidgetActive'\n  },\n  templateUrl: gmfElevationwidgetTemplateUrl\n};\nexports.component('gmfElevationwidget', exports.widgetComponent_);\n\n\n/**\n * @constructor\n * @private\n * @ngdoc controller\n */\nexports.WidgetController_ = function() {\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!Array.<string>}\n   * @export\n   */\n  this.layers;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.selectedElevationLayer;\n};\n\n\nexports.WidgetController_.prototype.$onInit = function() {\n  this.selectedElevationLayer = this.layers[0];\n};\n\n\nexports.controller('gmfElevationwidgetController',\n  exports.WidgetController_);\n\n\nexport default exports;\n","/**\n * @module ngeo.print.Utils\n */\nimport * as olHas from 'ol/has.js';\nimport * as olMath from 'ol/math.js';\n\n/**\n * Provides a service with print utility functions.\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoPrintUtils\n */\nconst exports = function() {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.extentHalfHorizontalDistance_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.extentHalfVerticalDistance_;\n\n};\n\n\n/**\n * @const\n * @private\n */\nexports.INCHES_PER_METER_ = 39.37;\n\n\n/**\n * @const\n * @private\n */\nexports.DOTS_PER_INCH_ = 72;\n\n\n/**\n * Return a function to use as map postcompose listener for drawing a print\n * mask on the map.\n * @param {function():ol.Size} getSize User-defined function returning the\n *     size in dots of the map to print.\n * @param {function(olx.FrameState):number} getScale User-defined function\n *     returning the scale of the map to print.\n * @param {function():number=} opt_rotation User defined function returning the\n *     inclination of the canvas in degree (-180 to 180).\n * returning the scale of the map to print.\n * @return {function(ol.render.Event)} Function to use as a map postcompose\n * listener.\n * @export\n */\nexports.prototype.createPrintMaskPostcompose = function(getSize, getScale, opt_rotation) {\n  const self = this;\n\n  return (\n  /**\n        * @param {ol.render.Event} evt Postcompose event.\n        */\n    function(evt) {\n      const context = evt.context;\n      const frameState = evt.frameState;\n\n      const resolution = frameState.viewState.resolution;\n\n      const viewportWidth = frameState.size[0] * frameState.pixelRatio;\n      const viewportHeight = frameState.size[1] * frameState.pixelRatio;\n\n      const center = [viewportWidth / 2, viewportHeight / 2];\n\n      const size = getSize();\n      const height = size[1] * olHas.DEVICE_PIXEL_RATIO;\n      const width = size[0] * olHas.DEVICE_PIXEL_RATIO;\n      const scale = getScale(frameState);\n\n      const ppi = exports.DOTS_PER_INCH_;\n      const ipm = exports.INCHES_PER_METER_;\n\n      const extentHalfWidth =\n           (((width / ppi) / ipm) * scale / resolution) / 2;\n      self.extentHalfHorizontalDistance_ =\n           (((size[0] / ppi) / ipm) * scale) / 2;\n\n      const extentHalfHeight =\n           (((height / ppi) / ipm) * scale / resolution) / 2;\n      self.extentHalfVerticalDistance_ =\n           (((size[1] / ppi) / ipm) * scale) / 2;\n\n      // Draw a mask on the whole map.\n      context.beginPath();\n      context.moveTo(0, 0);\n      context.lineTo(viewportWidth, 0);\n      context.lineTo(viewportWidth, viewportHeight);\n      context.lineTo(0, viewportHeight);\n      context.lineTo(0, 0);\n      context.closePath();\n\n      // Draw the print zone\n      if (!opt_rotation) {\n        self.drawPrintZone_(context, center, extentHalfWidth,\n          extentHalfHeight);\n      } else {\n        const rotation = olMath.toRadians(opt_rotation());\n        self.drawPrintZoneWithRotation_(context, center, extentHalfWidth,\n          extentHalfHeight, rotation);\n      }\n\n      // Fill the mask\n      context.fillStyle = 'rgba(0, 5, 25, 0.5)';\n      context.fill();\n    }\n  );\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context of the Postcompose event.\n * @param {Array.<number>} center Center of the viewport (x; y).\n * @param {number} extentHalfWidth Extent half width.\n * @param {number} extentHalfHeight Extent half height.\n * @private\n */\nexports.prototype.drawPrintZone_ = function(context, center,\n  extentHalfWidth, extentHalfHeight) {\n  const minx = center[0] - extentHalfWidth;\n  const miny = center[1] - extentHalfHeight;\n  const maxx = center[0] + extentHalfWidth;\n  const maxy = center[1] + extentHalfHeight;\n\n  context.moveTo(minx, miny);\n  context.lineTo(minx, maxy);\n  context.lineTo(maxx, maxy);\n  context.lineTo(maxx, miny);\n  context.lineTo(minx, miny);\n  context.closePath();\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context of the Postcompose event.\n * @param {Array.<number>} center Center of the viewport (x; y).\n * @param {number} extentHalfWidth Extent half width.\n * @param {number} extentHalfHeight Extent half height.\n * @param {number} rotation Rotation value in radians.\n * @private\n */\nexports.prototype.drawPrintZoneWithRotation_ = function(context, center,\n  extentHalfWidth, extentHalfHeight, rotation) {\n  // diagonal = distance p1 to center.\n  const diagonal = Math.sqrt(Math.pow(extentHalfWidth, 2) +\n      Math.pow(extentHalfHeight, 2));\n  // gamma = angle between horizontal and diagonal (with rotation).\n  const gamma = Math.atan(extentHalfHeight / extentHalfWidth) - rotation;\n  // omega = angle between diagonal and vertical (with rotation).\n  const omega = Math.atan(extentHalfWidth / extentHalfHeight) - rotation;\n  // Calculation of each corner.\n  const x1 = center[0] - Math.cos(gamma) * diagonal;\n  const y1 = center[1] + Math.sin(gamma) * diagonal;\n  const x2 = center[0] + Math.sin(omega) * diagonal;\n  const y2 = center[1] + Math.cos(omega) * diagonal;\n  const x3 = center[0] + Math.cos(gamma) * diagonal;\n  const y3 = center[1] - Math.sin(gamma) * diagonal;\n  const x4 = center[0] - Math.sin(omega) * diagonal;\n  const y4 = center[1] - Math.cos(omega) * diagonal;\n\n  context.moveTo(x1, y1);\n  context.lineTo(x2, y2);\n  context.lineTo(x3, y3);\n  context.lineTo(x4, y4);\n  context.lineTo(x1, y1);\n  context.closePath();\n};\n\n\n/**\n * Get the optimal print scale for a map, the map being defined by its\n * size (in pixels) and resolution (in map units per pixel).\n * @param {ol.Size} mapSize Size of the map on the screen (px).\n * @param {number} mapResolution Resolution of the map on the screen.\n * @param {ol.Size} printMapSize Size of the map on the paper (dots).\n * @param {Array.<number>} printMapScales Supported map scales on the paper.\n * The scales are provided as scale denominators, sorted in ascending order.\n * E.g. `[500, 1000, 2000, 4000]`.\n * @return {number} The best scale. `-1` is returned if there is no optimal\n * scale, that is the optimal scale is lower than or equal to the first value\n * in `printMapScales`.\n * @export\n */\nexports.prototype.getOptimalScale = function(\n  mapSize, mapResolution, printMapSize, printMapScales) {\n\n  const mapWidth = mapSize[0] * mapResolution;\n  const mapHeight = mapSize[1] * mapResolution;\n\n  const scaleWidth = mapWidth * exports.INCHES_PER_METER_ *\n      exports.DOTS_PER_INCH_ / printMapSize[0];\n  const scaleHeight = mapHeight * exports.INCHES_PER_METER_ *\n      exports.DOTS_PER_INCH_ / printMapSize[1];\n\n  const scale = Math.min(scaleWidth, scaleHeight);\n\n  let optimal = -1;\n  for (let i = 0, ii = printMapScales.length; i < ii; ++i) {\n    if (scale > printMapScales[i]) {\n      optimal = printMapScales[i];\n    }\n  }\n\n  return optimal;\n};\n\n\n/**\n * Get the optimal map resolution for a print scale and a map size.\n * @param {ol.Size} mapSize Size of the map on the screen (px).\n * @param {ol.Size} printMapSize Size of the map on the paper (dots).\n * @param {number} printMapScale Map scale on the paper.\n * @return {number} The optimal map resolution.\n * @export\n */\nexports.prototype.getOptimalResolution = function(\n  mapSize, printMapSize, printMapScale) {\n\n  const dotsPerMeter =\n      exports.DOTS_PER_INCH_ * exports.INCHES_PER_METER_;\n\n  const resolutionX = (printMapSize[0] * printMapScale) /\n      (dotsPerMeter * mapSize[0]);\n  const resolutionY = (printMapSize[1] * printMapScale) /\n      (dotsPerMeter * mapSize[1]);\n\n  const optimalResolution = Math.max(resolutionX, resolutionY);\n\n  return optimalResolution;\n};\n\n\n/**\n * Get the coordinates of the bottom left corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the bottom left corner.\n */\nexports.prototype.getBottomLeftCorner = function(mapCenter) {\n  return [mapCenter[0] - this.extentHalfHorizontalDistance_,\n    mapCenter[1] - this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the bottom right corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.ç\n * @return {ol.Coordinate} The coordinates of the bottom right corner.\n */\nexports.prototype.getBottomRightCorner = function(mapCenter) {\n  return [mapCenter[0] + this.extentHalfHorizontalDistance_,\n    mapCenter[1] - this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the up left corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the up left corner.\n */\nexports.prototype.getUpLeftCorner = function(mapCenter) {\n  return [mapCenter[0] - this.extentHalfHorizontalDistance_,\n    mapCenter[1] + this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the up right corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the up right corner.\n */\nexports.prototype.getUpRightCorner = function(mapCenter) {\n  return [mapCenter[0] + this.extentHalfHorizontalDistance_,\n    mapCenter[1] + this.extentHalfVerticalDistance_];\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoPrintUtils', []);\nexports.module.service('ngeoPrintUtils', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.print.component\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoPrintService from 'ngeo/print/Service.js';\nimport ngeoPrintUtils from 'ngeo/print/Utils.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olMap from 'ol/Map.js';\nimport * as olMath from 'ol/math.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfPrintComponent', [\n  gmfAuthenticationService.module.name,\n  gmfThemeThemes.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoPrintService.module.name,\n  ngeoPrintUtils.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.value('gmfPrintTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['gmfPrintTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/print';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/print', require('./component.html'));\n});\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.PrintStateEnum = {\n\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT_IN_USE: 'notInUse',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  PRINTING: 'printing',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR_ON_REPORT: 'errorOnReport',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  CAPABILITIES_NOT_LOADED: 'capabilitiesNotLoaded',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR_ON_GETCAPABILITIES: 'errorOnGetCapabilities'\n};\n\n\nexports.value('gmfPrintState', {\n  'state': exports.PrintStateEnum.CAPABILITIES_NOT_LOADED\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfPrintTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfPrintTemplateUrl($element, $attrs, gmfPrintTemplateUrl) {\n  return gmfPrintTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component that display a print panel. This panel is populated with\n * a form corresponding to the capabilities delivered by a GMF print v3 server.\n * If you want to use another template for your print panel, you can see the\n * available layout information in the 'gmfx.PrintLayoutInfo' classes.\n *\n * Simple example:\n *\n *      <gmf-print\n *        gmf-print-map=\"::mainCtrl.map\"\n *        gmf-print-active=\"printActive\"\n *        gmf-print-rotatemask=\"::true\">\n *      </gmf-print>\n *\n * Example with user defined attribute:\n *\n *      <gmf-print\n *        gmf-print-map=\"::mainCtrl.map\"\n *        gmf-print-active=\"printActive\"\n *        gmf-print-rotatemask=\"::true\"\n *        gmf-print-hiddenattributes=\"::['name']\"\n *        gmf-print-attributes-out=\"::attributes\">\n *        <div ng-repeat=\"attribute in ::attributes\">\n *          <div ng-if=\"attribute.name == 'name'\">\n *            <input ng-model=\"attribute.value\" placeholder=\"name\" />\n *          </div>\n *        </div>\n *      </gmf-print>\n *\n * Note: The 'print' and 'cancel' functions can also be called via globals\n * events 'gmfStartPrint' and 'gmfCancelPrint'.\n *\n * @htmlAttribute {ol.Map} gmf-print-map The map.\n * @htmlAttribute {boolean} gmf-print-active A boolean that informs if the\n *     panel is open or not.\n * @htmlAttribute {boolean} gmf-print-rotatemask Optional. True to apply\n *     rotation on the mask instead of the map. By default, the map rotates.\n * @htmlAttribute {Object.<string, string|number|boolean>}\n *     gmf-print-fieldvalues optional. Key, value object to define default\n *     value in each of your print panel field. The key refers to the\n *     property's name of the field.\n *     Example: {'comments': 'demo', 'legend': false}. Doesn't work for the dpi\n *     and the scale. Server's values are used in priority.\n * @htmlAttribute {Array.<string>} gmf-print-hiddenattributes The list of attributes that should be hidden.\n * @ngdoc component\n * @ngname gmfPrint\n */\nexports.component_ = {\n  bindings: {\n    'map': '<gmfPrintMap',\n    'active': '=gmfPrintActive',\n    'rotateMask': '<?gmfPrintRotatemask',\n    'fieldValues': '<?gmfPrintFieldvalues',\n    'hiddenAttributeNames': '<?gmfPrintHiddenattributes',\n    'attributesOut': '=?gmfPrintAttributesOut'\n  },\n  controller: 'GmfPrintController',\n  templateUrl: gmfPrintTemplateUrl,\n  transclude: true\n};\n\n\nexports.component('gmfPrint', exports.component_);\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {angular.JQLite} $element Element.\n   * @param {angular.Scope} $rootScope Angular root scope.\n   * @param {angular.Scope} $scope Angular scope.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {ngeo.map.LayerHelper} ngeoLayerHelper The ngeo Layer Helper service.\n   * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo Feature Overlay\n   *     Manager service.\n   * @param {ngeo.print.Utils} ngeoPrintUtils The ngeo PrintUtils service.\n   * @param {ngeox.CreatePrint} ngeoCreatePrint The ngeo Create Print function.\n   * @param {string} gmfPrintUrl A MapFishPrint url.\n   * @param {gmf.authentication.Service} gmfAuthenticationService The authentication service.\n   * @param {ngeox.QueryResult} ngeoQueryResult ngeo query result.\n   * @param {angular.$filter} $filter Angular $filter service.\n   * @param {gmf.print.component.PrintStateEnum} gmfPrintState GMF print state.\n   * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n   * @private\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfPrintController\n   */\n  constructor($element, $rootScope, $scope, $timeout, $q, $injector,\n    gettextCatalog, ngeoLayerHelper, ngeoFeatureOverlayMgr,  ngeoPrintUtils,\n    ngeoCreatePrint, gmfPrintUrl, gmfAuthenticationService, ngeoQueryResult,\n    $filter, gmfPrintState, gmfThemes) {\n\n    /**\n     * @type {gmf.print.component.PrintStateEnum}\n     * @private\n     */\n    this.gmfPrintState_ = gmfPrintState;\n\n    /**\n     * @type {function(string): string}\n     * @private\n     */\n    this.translate_ = $filter('translate');\n\n    /**\n     * @type {ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.active;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.rotateMask = false;\n\n    /**\n     * @type {Object.<string, string|number|boolean>!}\n     * @export\n     */\n    this.fieldValues = {};\n\n    /**\n     * @type {Array.<string>}\n     * @export\n     */\n    this.attributesOut;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$rootScope_ = $rootScope;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.$timeout_ = $timeout;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.$q_ = $q;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {ol.layer.Vector}\n     * @private\n     */\n    this.featureOverlayLayer_ = ngeoFeatureOverlayMgr.getLayer();\n\n    /**\n     * @type {ngeo.print.Utils}\n     * @private\n     */\n    this.ngeoPrintUtils_ = ngeoPrintUtils;\n\n    /**\n     * @type {ngeo.print.Service}\n     * @private\n     */\n    this.ngeoPrint_ = ngeoCreatePrint(gmfPrintUrl);\n\n    /**\n     * @type {ngeox.QueryResult}\n     * @private\n     */\n    this.ngeoQueryResult_ = ngeoQueryResult;\n\n    /**\n     * @type {gmf.authentication.Service}\n     * @private\n     */\n    this.gmfAuthenticationService_ = gmfAuthenticationService;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    this.cacheVersion_ = '0';\n    if ($injector.has('cacheVersion')) {\n      this.cacheVersion_ = $injector.get('cacheVersion');\n    }\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.scaleInput = false;\n\n    if ($injector.has('gmfPrintOptions')) {\n      this.scaleInput = $injector.get('gmfPrintOptions')['scaleInput'];\n    }\n\n    /**\n     * @type {?angular.$q.Deferred}\n     * @private\n     */\n    this.requestCanceler_ = null;\n\n    /**\n     * @type {?angular.$q.Promise}\n     * @private\n     */\n    this.statusTimeoutPromise_ = null;\n\n    /**\n     * @type {Array.<number>|null}\n     * @private\n     */\n    this.onDragPreviousMousePosition_ = null;\n\n    /**\n     * @type {?angular.$q.Promise|null}\n     * @private\n     */\n    this.rotationTimeoutPromise_ = null;\n\n    /**\n     * @type {ol.EventsKey}\n     * @private\n     */\n    this.postComposeListenerKey_;\n\n    /**\n     * @type {ol.EventsKey}\n     * @private\n     */\n    this.pointerDragListenerKey_;\n\n    /**\n     * @type {ol.EventsKey}\n     * @private\n     */\n    this.mapViewResolutionChangeKey_;\n\n    /**\n     * Current report reference id.\n     * @type {string}\n     * @private\n     */\n    this.curRef_ = '';\n\n    /**\n     * Formats availables in capabilities.\n     * @type {Array.<string>}\n     * @private\n     */\n    this.formats_ = [];\n\n    /**\n     * An array of attributes objects from capabilities.\n     * @type {Array.<Object>}\n     * @private\n     */\n    this.layouts_ = [];\n\n    /**\n     * An attributes object from capabilities.\n     * @type {Object}\n     * @private\n     */\n    this.layout_ = {};\n\n    /**\n     * @type {Array.<number>}\n     * @private\n     */\n    this.paperSize_ = [];\n\n    /**\n     * @type {gmfx.PrintLayoutInfo}\n     * @export\n     */\n    this.layoutInfo = {};\n\n    /**\n     * @type {number}\n     * @export\n     */\n    this.rotation = 0;\n\n    /**\n     * @type {Array.<string>}\n     * @export\n     */\n    this.hiddenAttributeNames;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.scaleManuallySelected_ = false;\n\n    /**\n     * @type {angular.JQLite}\n     * @export\n     */\n    this.rotationInput_ = $element.find('.gmf-print-rotation-input');\n\n    this.rotationInput_.on('input', (event) => {\n      const rotation = $(event.target).val();\n      if (rotation !== '') {\n        this.setRotation(/** @type {number} */ (rotation));\n      }\n    });\n\n    /**\n     * @type {function(ol.render.Event)}\n     */\n    this.postcomposeListener_;\n\n    /**\n     * @type {angular.$http.HttpPromise}\n     * @private\n     */\n    this.capabilities_;\n\n    /**\n     * @type {gmfThemes.GmfOgcServers}\n     * @private\n     */\n    this.ogcServers_;\n\n    /**\n     * @type {Array.<gmfThemes.GmfTheme>}\n     * @private\n     */\n    this.currentThemes_;\n  }\n\n\n  /**\n   * Init the controller\n   */\n  $onInit() {\n    // Clear the capabilities if the roleId changes\n    this.$scope_.$watch(() => this.gmfAuthenticationService_.getRoleId(), () => {\n      this.gmfPrintState_.state = exports.PrintStateEnum.CAPABILITIES_NOT_LOADED;\n      this.capabilities_ = null;\n    });\n\n    this.$scope_.$watch(() => this.active, (active) => {\n      this.togglePrintPanel_(active);\n    });\n\n    // Print on event.\n    this.$rootScope_.$on('gmfStartPrint', (event, format) => {\n      this.print(`${format}`);\n    });\n\n    // Cancel print task on event.\n    this.$rootScope_.$on('gmfCancelPrint', () => {\n      this.cancel();\n    });\n\n    this.gmfThemes_.getOgcServersObject().then((ogcServersObject) => {\n      this.ogcServers_ = ogcServersObject;\n    });\n\n    this.gmfThemes_.getThemesObject().then((currentThemes) => {\n      this.currentThemes_ = currentThemes;\n    });\n\n    /**\n     * @return {ol.Size} Size in dots of the map to print.\n     */\n    const getSizeFn = () => this.paperSize_;\n\n    let getRotationFn;\n    if (this.rotateMask) {\n      /**\n       * @return {number} rotation to apply.\n       */\n      getRotationFn = () => this.rotation;\n    }\n\n    this.postcomposeListener_ = this.ngeoPrintUtils_.createPrintMaskPostcompose(\n      getSizeFn, this.getScaleFn.bind(this), getRotationFn);\n  }\n\n\n  /**\n   * @param {olx.FrameState} frameState Frame state.\n   * @return {number} Scale of the map to print.\n   */\n  getScaleFn(frameState) {\n    // Don't compute an optimal scale if the user manually choose a value not in\n    // the pre-defined scales. (`scaleInput` in `gmfPrintOptions`).\n    googAsserts.assert(this.layoutInfo.scales);\n    googAsserts.assert(this.layoutInfo.scale !== undefined);\n    if (!this.scaleManuallySelected_ &&\n        (this.layoutInfo.scale === -1 || olArray.includes(this.layoutInfo.scales, this.layoutInfo.scale))) {\n      const mapSize = frameState.size;\n      const viewResolution = frameState.viewState.resolution;\n      this.layoutInfo.scale = this.getOptimalScale_(mapSize, viewResolution);\n    }\n    return this.layoutInfo.scale;\n  }\n\n\n  /**\n   * @param {boolean} active True to listen events related to the print and get\n   *     capabilities. False to stop listen them and set rotation to 0.\n   * @private\n   */\n  togglePrintPanel_(active) {\n    if (active) {\n      if (!this.capabilities_) {\n        this.getCapabilities_();\n      }\n      this.capabilities_.then((resp) => {\n        // make sure the panel is still open\n        if (!this.active) {\n          return;\n        }\n        this.gmfPrintState_.state = exports.PrintStateEnum.NOT_IN_USE;\n        // Get capabilities - On success\n        this.parseCapabilities_(resp);\n        this.postComposeListenerKey_ = olEvents.listen(this.map, 'postcompose', this.postcomposeListener_);\n        this.pointerDragListenerKey_ = olEvents.listen(this.map, 'pointerdrag', this.onPointerDrag_, this);\n        this.mapViewResolutionChangeKey_ = olEvents.listen(this.map.getView(), 'change:resolution', () => {\n          this.scaleManuallySelected_ = false;\n        });\n        this.map.render();\n      }, (resp) => {\n        // Get capabilities - On error\n        this.gmfPrintState_.state = exports.PrintStateEnum.ERROR_ON_GETCAPABILITIES;\n        this.capabilities_ = null;\n      });\n    } else {\n      olEvents.unlistenByKey(this.postComposeListenerKey_);\n      olEvents.unlistenByKey(this.pointerDragListenerKey_);\n      olEvents.unlistenByKey(this.mapViewResolutionChangeKey_);\n      this.setRotation(0);\n      this.map.render(); // Redraw (remove) post compose mask;\n    }\n  }\n\n\n  /**\n   * Gets the print capabilities.\n   * @param {number|null=} opt_roleId The role id.\n   * @private\n   */\n  getCapabilities_(opt_roleId) {\n    this.capabilities_ = this.ngeoPrint_.getCapabilities(\n      /** @type {angular.$http.Config} */ ({\n        withCredentials: true,\n        params: opt_roleId ? {\n          'role': opt_roleId,\n          'cache_version': this.cacheVersion_\n        } : {\n          'cache_version': this.cacheVersion_\n        }\n      }));\n  }\n\n\n  /**\n   * Create the list of layouts, get the formats, get the first layout in\n   * gmf print v3 capabilities and then update the print panel layout information.\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  parseCapabilities_(resp) {\n    const data = resp['data'];\n    this.formats_ = data['formats'] || [];\n    this.layouts_ = data['layouts'];\n    this.layout_ = data['layouts'][0];\n\n    this.layoutInfo.layouts = [];\n    this.layouts_.forEach((layout) => {\n      this.layoutInfo.layouts.push(layout.name);\n    });\n\n    this.updateFields_();\n  }\n\n\n  /**\n   * Update layout information with the user values if there are always available in the\n   * current layout otherwise use the defaults values of the layout.\n   * If a field doesn't exist in the current layout, set it to undefined so the\n   * view can hide it. Update also the paper size.\n   * custom print templates).\n   * @private\n   */\n  updateFields_() {\n    this.layoutInfo.layout = this.layout_.name;\n\n    const mapInfo = this.isAttributeInCurrentLayout_('map');\n    googAsserts.assertObject(mapInfo);\n    const clientInfo = mapInfo['clientInfo'];\n    googAsserts.assertObject(clientInfo);\n    this.paperSize_ = [clientInfo['width'], clientInfo['height']];\n\n    this.updateCustomFields_();\n\n    const legend = this.isAttributeInCurrentLayout_('legend');\n    if (this.layoutInfo.legend === undefined) {\n      this.layoutInfo.legend = !!(legend !== undefined ?\n        legend : this.fieldValues['legend']);\n    }\n\n    this.layoutInfo.scales = clientInfo['scales'] || [];\n    this.layoutInfo.dpis = clientInfo['dpiSuggestions'] || [];\n\n    const mapSize = this.map.getSize();\n    const viewResolution = this.map.getView().getResolution();\n    this.layoutInfo.scale = this.getOptimalScale_(mapSize, viewResolution);\n\n    this.layoutInfo.dpi =\n        (this.layoutInfo.dpi && this.layoutInfo.dpis.indexOf(this.layoutInfo.dpi) > 0) ?\n          this.layoutInfo.dpi : this.layoutInfo.dpis[0];\n\n    this.layoutInfo.formats = {};\n    this.formats_.forEach((format) => {\n      this.layoutInfo.formats[format] = true;\n    });\n\n    this.attributesOut = this.layoutInfo['simpleAttributes'];\n\n    // Force the update of the mask\n    this.map.render();\n  }\n\n\n  /**\n   * Update simple attributes information with gmfx.Customfield to be able to generate a form\n   * from a custom GMF print v3 configuration.\n   * @private\n   */\n  updateCustomFields_() {\n    let name, rawType, value, type;\n    if (!this.layoutInfo.simpleAttributes) {\n      this.layoutInfo.simpleAttributes = [];\n    }\n    const simpleAttributes = this.layoutInfo.simpleAttributes;\n    const previousAttributes = simpleAttributes.splice(0, simpleAttributes.length);\n\n    // The attributes without 'clientParams' are the custom layout information (defined by end user).\n    this.layout_.attributes.forEach((attribute) => {\n      if (!attribute['clientParams']) {\n        name = `${attribute.name}`;\n        const defaultValue = attribute.default;\n        value = (defaultValue !== undefined && defaultValue !== '') ?\n          defaultValue : this.fieldValues[name];\n\n        // Try to use existing form field type\n        rawType = `${attribute.type}`;\n        switch (rawType) {\n          case 'String':\n            type = (name === 'comments') ? 'textarea' : 'text';\n            break;\n          case 'Boolean':\n            type = 'checkbox';\n            break;\n          case 'Number':\n            type = 'number';\n            value = parseFloat(value);\n            value = isNaN(value) ? 0 : value;\n            break;\n          default:\n            type = rawType;\n        }\n\n        // If it exists use the value of previous same field.\n        previousAttributes.forEach((c) => {\n          if (c.name === name && c.type === type) {\n            return value = c.value;\n          }\n        });\n\n        this.layoutInfo.simpleAttributes.push(/** gmfx.PrintSimpleAttributes */ ({\n          name,\n          type,\n          value\n        }));\n      }\n    });\n  }\n\n\n  /**\n   * Return a capabilities 'attribute' object corresponding to the given name.\n   * @param {string} name Name of the attribute to get.\n   * @return {Object|null} corresponding attribute or null.\n   * @private\n   */\n  isAttributeInCurrentLayout_(name) {\n    let attr = null;\n    this.layout_.attributes.forEach((attribute) => {\n      if (attribute.name === name) {\n        return attr = attribute;\n      }\n    });\n    return attr;\n  }\n\n\n  /**\n   * Set the current rotation value.\n   * Updating the rotation will redraw the mask or rotate the map (depending on the configuration).\n   * @param {number} rotation The optional new rotation value in degrees.\n   */\n  setRotation(rotation) {\n    this.rotation = olMath.clamp(rotation, -180, 180);\n\n    // sync all the inputs\n    this.rotationInput_.val(this.rotation.toString());\n\n    // Render the map to update the postcompose mask or rotate the map.\n    if (this.rotateMask) {\n      this.map.render();\n    } else {\n      this.map.getView().setRotation(olMath.toRadians(this.rotation));\n    }\n  }\n\n\n  /**\n   * Calculate the angle and the sense of rotation between two lines. One from the\n   * center of the map and the point of the last call to this function and one\n   * from the same center and the point of the current call.\n   * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n   * @private\n   */\n  onPointerDrag_(e) {\n    const originalEvent = e.originalEvent;\n    const mapCenter = this.map.getView().getCenter();\n    if (this.active && originalEvent.altKey && originalEvent.shiftKey && mapCenter) {\n      const center = this.map.getPixelFromCoordinate(mapCenter);\n      const pixel = e.pixel;\n      // Reset previous position between two different sessions of drags events.\n      if (this.rotationTimeoutPromise_ === null) {\n        this.onDragPreviousMousePosition_ = null;\n      } else {\n        // Cancel the timeout to keep this session of drags event\n        this.$timeout_.cancel(this.rotationTimeoutPromise_);\n        // Calculate angle and sense of rotation.\n        const p0x = this.onDragPreviousMousePosition_[0] - center[0];\n        const p0y = this.onDragPreviousMousePosition_[1] - center[1];\n        const p1x = pixel[0] - center[0];\n        const p1y = pixel[1] - center[1];\n        const centerToP0 = Math.sqrt(Math.pow(p0x, 2) + Math.pow(p0y, 2));\n        const centerToP1 = Math.sqrt(Math.pow(p1x, 2) + Math.pow(p1y, 2));\n        const sense = (p0x * p1y - p0y * p1x) > 0 ? 1 : -1;\n        let angle = (p0x * p1x + p0y * p1y) / (centerToP0 * centerToP1);\n        angle = angle <= 1 ? sense * Math.acos(angle) : 0;\n        const boost = centerToP1 / 200;\n        const increment = Math.round(olMath.toDegrees(angle) * boost);\n\n        // Set rotation then update the view.\n        this.setRotation(this.rotation + increment);\n        this.$scope_.$digest();\n      }\n      // Prepare the removal of this session of drags events\n      this.rotationTimeoutPromise_ = this.$timeout_(() => {\n        this.rotationTimeoutPromise_ = null;\n      }, 500);\n      // Keep the current position for the next calculation.\n      this.onDragPreviousMousePosition_ = pixel;\n    }\n  }\n\n\n  /**\n   * Create a print report based on the values of the 'layoutInfo' values.\n   * @param {string} format An output format corresponding to one format in the\n   *     capabilities document ('pdf', 'png', etc).\n   * @export\n   */\n  print(format) {\n    // Do not print if a print task is already processing.\n    if (this.gmfPrintState_.state === exports.PrintStateEnum.PRINTING) {\n      return;\n    }\n    this.requestCanceler_ = this.$q_.defer();\n    this.gmfPrintState_.state = exports.PrintStateEnum.PRINTING;\n\n    const mapSize = this.map.getSize();\n    const viewResolution = this.map.getView().getResolution() || 0;\n    const scale = this.layoutInfo.scale || this.getOptimalScale_(mapSize, viewResolution);\n    const datasource = this.getDataSource_();\n\n    const customAttributes = {\n      'datasource': datasource\n    };\n\n    if (this.layoutInfo.simpleAttributes) {\n      this.layoutInfo.simpleAttributes.forEach((field) => {\n        customAttributes[field.name] = field.value;\n      });\n    }\n\n    if (this.layoutInfo.legend) {\n      const legend = this.getLegend_(scale);\n      if (legend !== null) {\n        customAttributes['legend'] = this.getLegend_(scale);\n      }\n    }\n\n    googAsserts.assertNumber(this.layoutInfo.dpi);\n    googAsserts.assertString(this.layoutInfo.layout);\n\n    // convert the WMTS layers to WMS\n    const map = new olMap({});\n    map.setView(this.map.getView());\n    const ol_layers = this.ngeoLayerHelper_.getFlatLayers(this.map.getLayerGroup());\n    const new_ol_layers = [];\n    let print_native_angle = true;\n    for (let i = 0, ii = ol_layers.length; i < ii; i++) {\n      let layer = ol_layers[i];\n      const metadata = layer.get('metadata');\n      if (metadata) {\n        const server_name = metadata.ogcServer;\n        const layer_names = metadata.printLayers || metadata.layers;\n        if (server_name && layer_names) {\n          const server = this.ogcServers_[server_name];\n          if (server) {\n            layer = this.ngeoLayerHelper_.createBasicWMSLayer(\n              server.url,\n              layer_names,\n              server.imageType,\n              server.type\n            );\n          } else {\n            console.error('Missing ogcServer:', server_name);\n          }\n        }\n      }\n\n      // Get the print native angle parameter for WMS layers when set to not use default value\n      // Is applied only once when the value is overridden with a metadata from administration\n      if (layer instanceof olLayerImage && layer.get('printNativeAngle') === false) {\n        print_native_angle = false;\n      }\n\n      new_ol_layers.push(layer);\n    }\n    map.setLayerGroup(new olLayerGroup({\n      layers: new_ol_layers,\n      'printNativeAngle': print_native_angle\n    }));\n\n    const spec = this.ngeoPrint_.createSpec(map, scale, this.layoutInfo.dpi,\n      this.layoutInfo.layout, format, customAttributes);\n\n    // Add feature overlay layer to print spec.\n    const layers = [];\n    this.ngeoPrint_.encodeLayer(layers, this.featureOverlayLayer_,\n      viewResolution);\n    if (layers.length > 0) {\n      spec.attributes.map.layers.unshift(layers[0]);\n    }\n\n    this.ngeoPrint_.createReport(spec, /** @type {angular.$http.Config} */ ({\n      timeout: this.requestCanceler_.promise\n    })).then(\n      this.handleCreateReportSuccess_.bind(this),\n      this.handleCreateReportError_.bind(this)\n    );\n\n    // remove temporary map\n    map.setTarget(null);\n  }\n\n\n  /**\n   * Cancel the current print and reset its state.\n   * @export\n   */\n  cancel() {\n    // Cancel the latest request, if it's not finished yet.\n    if (this.requestCanceler_ !== null) {\n      this.requestCanceler_.resolve();\n    }\n\n    // Cancel the status timeout if there's one set, to make sure no other\n    // status request is sent.\n    if (this.statusTimeoutPromise_ !== null) {\n      this.$timeout_.cancel(this.statusTimeoutPromise_);\n    }\n\n    if (this.curRef_.length > 0) {\n      this.ngeoPrint_.cancel(this.curRef_);\n    }\n\n    this.resetPrintStates_();\n  }\n\n\n  /**\n   * @param {gmf.print.component.PrintStateEnum=} opt_printState the print state.\n   * @private\n   */\n  resetPrintStates_(opt_printState) {\n    this.gmfPrintState_.state = opt_printState || exports.PrintStateEnum.NOT_IN_USE;\n    this.curRef_ = '';\n  }\n\n\n  /**\n   * Get datasource object for print report\n   * @private\n   * @return {Array.<gmfx.datasource.DataSourcePrintReportObject>} the data\n   *     source objet for the print report\n   */\n  getDataSource_() {\n    let datasourceObj, data, columns;\n    const datasourceArr = [];\n    const sources = this.ngeoQueryResult_.sources;\n    sources.forEach(function(source) {\n      data = [];\n      columns = [];\n      source.features.forEach(function(feature, i) {\n        googAsserts.assert(feature);\n        const properties = ngeoMiscFeatureHelper.getFilteredFeatureValues(feature);\n        if (i === 0) {\n          columns = Object.keys(properties).map(function tanslateColumns(prop) {\n            return this.translate_(prop);\n          }, this);\n        }\n        data.push(Object.keys(properties).map(key => properties[key]));\n      }, this);\n      if (columns.length) {\n        datasourceObj =\n          /** @type {gmfx.datasource.DataSourcePrintReportObject} */({\n            title: this.translate_(source.label),\n            table: {\n              columns,\n              data\n            }\n          });\n        datasourceArr.push(datasourceObj);\n      }\n    }, this);\n    return datasourceArr;\n  }\n\n\n  /**\n   * Get the optimal scale to display the print mask. Return the first scale if\n   * no scale matches.\n   * @param {ol.Size|undefined} mapSize Size of the map on the screen (px).\n   * @param {number|undefined} viewResolution Resolution of the map on the screen.\n   * @return {number} The best scale. -1 is returned if there is no optimal\n   *     scale, that is the optimal scale is lower than or equal to the first\n   *     value in printMapScales.\n   * @private\n   */\n  getOptimalScale_(mapSize, viewResolution) {\n    const scales = this.layoutInfo.scales.slice();\n    if (mapSize !== undefined && viewResolution !== undefined) {\n      return this.ngeoPrintUtils_.getOptimalScale(mapSize, viewResolution,\n        this.paperSize_, scales.reverse());\n    }\n    return this.layoutInfo.scales[0];\n  }\n\n\n  /**\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  handleCreateReportSuccess_(resp) {\n    const mfResp = /** @type {MapFishPrintReportResponse} */ (resp.data);\n    const ref = mfResp.ref;\n    googAsserts.assert(ref.length > 0);\n    this.curRef_ = ref;\n    this.getStatus_(ref);\n  }\n\n\n  /**\n   * @param {string} ref Ref.\n   * @private\n   */\n  getStatus_(ref) {\n    this.requestCanceler_ = this.$q_.defer();\n    this.ngeoPrint_.getStatus(ref, /** @type {angular.$http.Config} */ ({\n      timeout: this.requestCanceler_.promise\n    })).then(\n      this.handleGetStatusSuccess_.bind(this, ref),\n      this.handleCreateReportError_.bind(this)\n    );\n  }\n\n\n  /**\n   * @param {string} ref Ref.\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  handleGetStatusSuccess_(ref, resp) {\n    const mfResp = /** @type {MapFishPrintStatusResponse} */ (resp.data);\n    const done = mfResp.done;\n    if (done) {\n      if (mfResp.status != 'error') {\n        // The report is ready. Open it by changing the window location.\n        window.location.href = this.ngeoPrint_.getReportUrl(ref);\n        this.resetPrintStates_();\n      } else {\n        console.error(mfResp.error);\n        this.handleCreateReportError_();\n      }\n    } else {\n      // The report is not ready yet. Check again in 1s.\n      this.statusTimeoutPromise_ = this.$timeout_(() => {\n        this.getStatus_(ref);\n      }, 1000, false);\n    }\n  }\n\n\n  /**\n   * @private\n   */\n  handleCreateReportError_() {\n    this.resetPrintStates_(exports.PrintStateEnum.ERROR_ON_REPORT);\n  }\n\n\n  /**\n   * @param {number} scale The scale to get the legend (for wms layers only).\n   * @return {Object?} Legend object for print report or null.\n   * @private\n   */\n  getLegend_(scale) {\n    const legend = {'classes': []};\n    let classes, layerNames, layerName, icons;\n    const gettextCatalog = this.gettextCatalog_;\n\n    // Get layers from layertree only.\n    const dataLayerGroup = this.ngeoLayerHelper_.getGroupFromMap(this.map,\n      gmfBase.DATALAYERGROUP_NAME);\n    const layers = this.ngeoLayerHelper_.getFlatLayers(dataLayerGroup);\n\n    // For each visible layer in reverse order, get the legend url.\n    layers.reverse().forEach((layer) => {\n      classes = [];\n      if (layer.getVisible() && layer.getSource()) {\n        // For WMTS layers.\n        if (layer instanceof olLayerTile) {\n          layerName = `${layer.get('layerNodeName')}`;\n          icons = this.getMetadataLegendImage_(layerName);\n          if (!icons) {\n            icons = this.ngeoLayerHelper_.getWMTSLegendURL(layer);\n          }\n          // Don't add classes without legend url.\n          if (icons) {\n            classes.push({\n              'name': gettextCatalog.getString(layerName),\n              'icons': [icons]\n            });\n          }\n        } else {\n          const source = /** @type ol.source.ImageWMS */ (layer.getSource());\n          // For each name in a WMS layer.\n          layerNames = source.getParams()['LAYERS'].split(',');\n          layerNames.forEach((name) => {\n            icons = this.getMetadataLegendImage_(name);\n            if (!icons) {\n              icons = this.ngeoLayerHelper_.getWMSLegendURL(source.getUrl(), name,\n                scale);\n            }\n            // Don't add classes without legend url or from layers without any\n            // active name.\n            if (icons && name.length !== 0) {\n              classes.push({\n                'name': gettextCatalog.getString(name),\n                'icons': [icons]\n              });\n            }\n          });\n        }\n      }\n\n      // Add classes object only if it contains something.\n      if (classes.length > 0) {\n        legend['classes'].push({'classes': classes});\n      }\n\n    });\n\n    return legend['classes'].length > 0 ?  legend : null;\n  }\n\n\n  /**\n   * Return the metadata legendImage of a layer from the found corresponding node\n   * or undefined.\n   * @param {string} layerName a layer name.\n   * @return {string|undefined} The legendImage or undefined.\n   * @private\n   */\n  getMetadataLegendImage_(layerName) {\n    const groupNode = gmfThemeThemes.findGroupByLayerNodeName(this.currentThemes_, layerName);\n    let node;\n    if (groupNode && groupNode.children) {\n      node = gmfThemeThemes.findObjectByName(groupNode.children, layerName);\n    }\n    let legendImage;\n    if (node && node.metadata) {\n      legendImage = node.metadata.legendImage;\n    }\n    return legendImage;\n  }\n\n\n  /**\n   * Set the current layout and update all layout information with this new layout parameters.\n   * @param {string!} layoutName A layout name as existing in the list of\n   *     existing layouts.\n   * @export\n   */\n  setLayout(layoutName) {\n    let layout;\n    this.layouts_.forEach((l) => {\n      if (l.name === layoutName) {\n        layout = l;\n        return true; // break;\n      }\n    });\n    this.layout_ = layout;\n    this.updateFields_();\n  }\n\n\n  /**\n   * Get or set the print scale value and adapt the zoom to match with this new scale.\n   * @param {number=} opt_scale A scale value as existing in the scales list field.\n   * @return {number|undefined} New scale.\n   * @export\n   */\n  getSetScale(opt_scale) {\n    if (opt_scale !== undefined) {\n      const mapSize = this.map.getSize() || [0, 0];\n      this.layoutInfo.scale = opt_scale;\n      const res = this.ngeoPrintUtils_.getOptimalResolution(mapSize, this.paperSize_, opt_scale);\n      const contrainRes = this.map.getView().constrainResolution(res, 0, 1);\n      this.map.getView().setResolution(contrainRes);\n      // Render the map to update the postcompose mask manually\n      this.map.render();\n      this.scaleManuallySelected_ = true;\n    }\n    return this.layoutInfo.scale;\n  }\n\n\n  /**\n   * Set the print dpi value.\n   * @param {number} dpi A dpi value as existing in the dpis list field.\n   * @export\n   */\n  setDpi(dpi) {\n    this.layoutInfo.dpi = dpi;\n  }\n\n\n  /**\n   * Check the current state of the print.\n   * @param {string} stateEnumKey An enum key from gmf.print.component.PrintStateEnum.\n   * @return {boolean} True if the given state matches with the current print\n   *     state. False otherwise.\n   * @export\n   */\n  isState(stateEnumKey) {\n    return this.gmfPrintState_.state === exports.PrintStateEnum[stateEnumKey];\n  }\n};\n\nexports.controller('GmfPrintController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.datetimepickerComponent\n */\nimport DateFormatter from 'ngeo/misc/php-date-formatter.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.css';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDateTimePicker', ['gettext']);\n\n/**\n * A directive used to display a date or time picker\n *\n * Example:\n *\n *      <input ngeo-datetimepicker\n *          ngeo-datetimepicker-options=\"{timepicker: false}\"\n *\n * @htmlAttribute {Object} ngeo-datetimepicker-options The options.\n *\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname ngeoDatetimepicker\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    controller: exports.Controller_,\n    bindToController: true,\n    scope: {\n      'options': '<ngeoDatetimepickerOptions'\n    }\n  };\n};\n\nexports.directive('ngeoDatetimepicker', exports.component_);\n\n\n/**\n * @param {!jQuery} $element Element.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDatetimepickerController\n */\nexports.Controller_ = function($element, gettextCatalog) {\n  /**\n   * @const {!jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * The gettext catalog\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * The options\n   * @type {Object|String}\n   * @private\n   */\n  this.options;\n};\n\n\n/**\n * Initialize the directive.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const lang = this.gettextCatalog_.getCurrentLanguage();\n  $.datetimepicker.setLocale(lang);\n  $.datetimepicker.setDateFormatter(new DateFormatter());\n  if (typeof this.options === 'string') {\n    this.options = angular.fromJson(this.options);\n  }\n  this.element_.datetimepicker(this.options);\n};\n\nexports.controller('ngeoDateTimePickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.attributesComponent\n */\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscDatetimepickerComponent from 'ngeo/misc/datetimepickerComponent.js';\n\nconst exports = angular.module('ngeoAttributes', [\n  ngeoMiscDatetimepickerComponent.name,\n  ngeoMiscEventHelper.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/editing/attributescomponent', require('./attributescomponent.html'));\n});\n\n\nexports.value('ngeoAttributesTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoAttributesTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/editing/attributescomponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoAttributesTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoAttributesTemplateUrl($attrs, ngeoAttributesTemplateUrl) {\n  return ngeoAttributesTemplateUrl($attrs);\n}\n\n\n/**\n * Component used to render the attributes of a feature into a form.\n * Example:\n *\n *     <ngeo-attributes\n *       ngeo-attributes-attributes=\"::ctrl.attributes\"\n *       ngeo-attributes-disabled=\"ctrl.attributesDisabled\"\n *       ngeo-attributes-feature=\"::ctrl.feature\">\n *     </ngeo-attributes>\n *\n * @htmlAttribute {Array.<ngeox.Attribute>} ngeo-attributes-attributes The\n *     list of attributes to use.\n * @htmlAttribute {boolean} ngeo-attributes-disabled Whether the fieldset should\n *     be disabled or not.\n * @htmlAttribute {ol.Feature} ngeo-attributes-feature The feature.\n *\n * @ngdoc component\n * @ngname ngeoAttributes\n */\nexports.component_ = {\n  controller: 'ngeoAttributesController as attrCtrl',\n  bindings: {\n    'attributes': '=ngeoAttributesAttributes',\n    'disabled': '<ngeoAttributesDisabled',\n    'feature': '=ngeoAttributesFeature'\n  },\n  require: {\n    'form': '^'\n  },\n  templateUrl: ngeoAttributesTemplateUrl\n};\n\nexports.component('ngeoAttributes', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoAttributesController\n */\nexports.Controller_ = function($scope, ngeoEventHelper) {\n\n  /**\n   * The list of attributes to create the form with.\n   * @type {Array.<ngeox.Attribute>}\n   * @export\n   */\n  this.attributes;\n\n  /**\n   * Whether the fieldset should be disabled or not.\n   * @type {boolean}\n   * @export\n   */\n  this.disabled = false;\n\n  /**\n   * The feature containing the values.\n   * @type {ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * The properties bound to the form, initialized with the inner properties\n   * of the feature.\n   * @type {?Object.<string, *>}\n   * @export\n   */\n  this.properties;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * While changes happen from the form (from the template), they are applied\n   * to the feature inner properties. The 'propertychange' event registered\n   * above does the opposite, i.e. it listens to the feature inner properties\n   * changes and apply them to the form. To prevent circular issues, while\n   * applying changes coming from the form, this flag is set. While set, changes\n   * from the feature inner properties are ignored.\n   * @type {boolean}\n   * @private\n   */\n  this.updating_ = false;\n};\n\n\n/**\n * Initialise the component.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.properties = this.feature.getProperties();\n\n  // Listen to the feature inner properties change and apply them to the form\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(this.feature, 'propertychange', this.handleFeaturePropertyChange_, this)\n  );\n};\n\n\n/**\n * Called when an input node value changes\n * @param {string} name Attribute name\n * @export\n */\nexports.Controller_.prototype.handleInputChange = function(name) {\n  this.updating_ = true;\n  const value = this.properties[name];\n  this.feature.set(name, value);\n  this.updating_ = false;\n};\n\n\n/**\n * Cleanup event listeners.\n */\nexports.Controller_.prototype.$onDestroy = function() {\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n};\n\n\n/**\n * @param {ol.Object.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturePropertyChange_ = function(evt) {\n  if (this.updating_) {\n    return;\n  }\n  this.properties[evt.key] = evt.target.get(evt.key);\n  this.scope_.$apply();\n};\n\n\nexports.controller('ngeoAttributesController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.exportfeaturesComponent\n */\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\n\nconst exports = angular.module('ngeoExportfeatures', [\n  ngeoMiscFeatureHelper.module.name\n]);\n\n/**\n * Directive used to export vector features in different types of format.\n * To configure which formats to use, define the `ngeoExportFeatureFormats`\n * value, as such:\n *\n *     app.module.value('ngeoExportFeatureFormats', [\n *         ngeo.misc.FeatureHelper.FormatType.KML,\n *         ngeo.misc.FeatureHelper.FormatType.GPX\n *     ]);\n *\n * Example:\n *\n *     <button\n *       ngeo-exportfeatures\n *       ngeo-exportfeatures-features=\"ctrl.features\"\n *       class=\"btn btn-link\">Export</button>\n *\n * @htmlAttribute {ol.Collection.<ol.Feature>} ngeo-exportfeatures-features The\n *     features to export\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoExportfeatures\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoExportfeaturesController as efCtrl',\n    scope: true,\n    bindToController: {\n      'features': '=ngeoExportfeaturesFeatures'\n    }\n  };\n};\n\n\nexports.directive('ngeoExportfeatures', exports.directive_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoExportfeaturesController\n */\nexports.Controller_ = function($element, $injector, $scope,\n  ngeoFeatureHelper) {\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  const uid = olBase.getUid(this);\n  const id = ['ngeo-exportfeature', uid].join('-');\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.id_ = id;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  let formats;\n  if ($injector.has('ngeoExportFeatureFormats')) {\n    formats = $injector.get('ngeoExportFeatureFormats');\n  } else {\n    formats = [ngeoMiscFeatureHelper.FormatType.KML];\n  }\n\n  /**\n   * @type {?jQuery}\n   * @private\n   */\n  this.menu_ = null;\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.items_ = [];\n\n  // build the drop-down menu and items if there's more than one format\n  if (formats.length > 1) {\n    $element.attr('id', id);\n    const $menu = $('<ul />', {\n      'class': 'dropdown-menu',\n      'aria-labelledby': id\n    }).appendTo($element.parent()[0]);\n\n    this.menu_ = $menu;\n    let $item;\n\n    formats.forEach((format) => {\n      $item = $('<li />')\n        .appendTo($menu)\n        .append($('<a />', {\n          'href': '#',\n          'text': format\n        })\n          .on(\n            ['click', id].join('.'),\n            this.handleMenuItemClick_.bind(this, format)\n          )\n        );\n      this.items_.push($item);\n    });\n  }\n\n  /**\n   * @type {Array.<string>}\n   * @private\n   */\n  this.formats_ = formats;\n\n  $element.on(['click', id].join('.'), this.handleElementClick_.bind(this));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Called when the element bound to this directive is clicked. Use the feature\n * helper to export the feature(s) depending on the format(s) available(s).\n * If there's only one, the call to the export method is direct, otherwise\n * a drop-down menu is show to let the user choose the format of the export.\n * Finally, if there's only one feature in the collection to export and there's\n * more than one format set, some formats may not support the type of geometry.\n * If that's the case, then disable each format item in the drop-down menu\n * that doesn't support the type of geometry.\n * @private\n */\nexports.Controller_.prototype.handleElementClick_ = function() {\n\n  const features = this.features.getArray();\n\n  if (this.formats_.length === 1) {\n    this.featureHelper_.export(features, this.formats_[0]);\n  } else if (features.length === 1) {\n    const feature = features[0];\n    const geom = feature.getGeometry();\n    let $item;\n    this.formats_.forEach((format, i) => {\n      $item = this.items_[i];\n      if (format === ngeoMiscFeatureHelper.FormatType.GPX) {\n        if (geom instanceof olGeomPoint ||\n            geom instanceof olGeomLineString) {\n          $item.removeClass('disabled');\n        } else {\n          $item.addClass('disabled');\n        }\n      }\n    });\n  }\n};\n\n\n/**\n * Called when a menu item is clicked. Export the features to the selected\n * format.\n * @param {string} format Format.\n * @param {jQuery.Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuItemClick_ = function(format, event) {\n  if (!$(event.target.parentElement).hasClass('disabled')) {\n    const features = this.features.getArray();\n    this.featureHelper_.export(features, format);\n  }\n};\n\n\n/**\n * Cleanup event listeners and remove the menu from DOM, if any.\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  const id = this.id_;\n\n  this.element_.off(['click', id].join('.'));\n\n  if (this.menu_) {\n    this.menu_.remove();\n    this.items_.forEach(($item) => {\n      $item.off(['click', id].join('.'));\n    });\n    this.items_.length = 0;\n    this.menu_ = null;\n  }\n};\n\n\nexports.controller(\n  'ngeoExportfeaturesController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.sortableComponent\n */\nimport 'jquery-ui/ui/widgets/sortable.js';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoSortable', []);\n\n\n/**\n * Provides a directive that allows drag-and-dropping DOM items between them.\n * It also changes the order of elements in the given array.\n *\n * It is typically used together with `ng-repeat`, for example for re-ordering\n * layers in a map.\n *\n * Example:\n *\n *     <ul ngeo-sortable=\"ctrl.layers\"\n *         ngeo-sortable-options=\"{handleClassName: 'ngeo-sortable-handle'}\">\n *       <li ng-repeat=\"layer in ctrl.layers\">\n *         <span class=\"ngeo-sortable-handle\">handle</span>{{layer.get('name')}}\n *       </li>\n *     </ul>\n *\n * The value of the \"ngeo-sortable\" attribute is an expression which evaluates\n * to an array (an array of layers in the above example). This is the array\n * that is re-ordered after a drag-and-drop.\n *\n * The element with the class \"ngeo-sortable-handle\" is the \"drag handle\".\n * It is required.\n *\n * This directives uses `$watchCollection` to watch the \"sortable\" array. So\n * if some outside code adds/removes elements to/from the \"sortable\" array,\n * the \"ngeoSortable\" directive will pick it up.\n *\n * See our live example: [../examples/layerorder.html](../examples/layerorder.html)\n *\n * @htmlAttribute {Array.<ol.layer.Base>} ngeo-sortable The layers to sort.\n * @htmlAttribute {!ngeox.miscSortableOptions} ngeo-sortable-options The options.\n * @htmlAttribute {Function(angular.JQLite, Array)?} ngeo-sortable-callback\n *     Callback function called after the move end. The Function will be called\n *     with the element and the sort array as arguments.\n * @htmlAttribute {Object?} ngeo-sortable-callback-ctx Context to apply at\n *     the call of the callback function.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoSortable\n */\nexports.component_ = function($timeout) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const sortable = /** @type {Array} */\n              (scope.$eval(attrs['ngeoSortable'])) || [];\n      googAsserts.assert(Array.isArray(sortable));\n\n      scope.$watchCollection(() => sortable, () => {\n        sortable.length && $timeout(resetUpDragDrop, 0);\n      });\n\n      const optionsObject = scope.$eval(attrs['ngeoSortableOptions']);\n      const options = getOptions(optionsObject);\n\n      const callbackFn = scope.$eval(attrs['ngeoSortableCallback']);\n      const callbackCtx = scope.$eval(attrs['ngeoSortableCallbackCtx']);\n\n      /**\n       * This function resets drag&drop for the list. It is called each\n       * time the sortable array changes (see $watchCollection above).\n       */\n      function resetUpDragDrop() {\n        // Add an index to the sortable to allow sorting of the\n        // underlying data.\n        const children = element.children();\n        for (let i = 0; i < children.length; ++i) {\n          angular.element(children[i]).data('idx', i);\n        }\n\n        const sortableElement = $(element);\n\n        // the element is already sortable; reset it.\n        if (sortableElement.data('ui-sortable')) {\n          sortableElement.off('sortupdate');\n          sortableElement.sortable('destroy');\n        }\n\n        const sortableOptions = {\n          'axis': 'y',\n          'classes': {\n            'ui-sortable-helper': options['draggerClassName']\n          }\n        };\n\n        // CSS class of the handle\n        if (options['handleClassName']) {\n          sortableOptions['handle'] = `.${options['handleClassName']}`;\n        }\n\n        // Placeholder for the item being dragged in the sortable list\n        if (options['placeholderClassName']) {\n          sortableOptions['placeholder'] = options['placeholderClassName'];\n          sortableOptions['forcePlaceholderSize'] = true;\n        }\n\n        sortableElement.sortable(sortableOptions);\n\n        // This event is triggered when the user stopped sorting and\n        // the DOM position (i.e. order in the sortable list) has changed.\n        sortableElement.on('sortupdate', (event, ui) => {\n          const oldIndex = $(ui.item[0]).data('idx');\n          const newIndex = ui.item.index();\n\n          // Update (data)-index on dom element to its new position\n          $(ui.item[0]).data('idx', newIndex);\n\n          // Move dragged item to new position\n          scope.$apply(() => {\n            sortable.splice(newIndex, 0, sortable.splice(oldIndex, 1)[0]);\n          });\n\n          // Call the callback function if it exists.\n          if (callbackFn instanceof Function) {\n            callbackFn.apply(callbackCtx, [element, sortable]);\n          }\n        });\n      }\n\n      /**\n       * @param {?} options Options after expression evaluation.\n       * @return {!ngeox.miscSortableOptions} Options object.\n       * @private\n       */\n      function getOptions(options) {\n        let ret;\n        const defaultHandleClassName = 'ngeo-sortable-handle';\n        if (options === undefined) {\n          ret = {'handleClassName': defaultHandleClassName};\n        } else {\n          if (options['handleClassName'] === undefined) {\n            options['handleClassName'] = defaultHandleClassName;\n          }\n          ret = /** @type {ngeox.miscSortableOptions} */ (options);\n        }\n        return ret;\n      }\n\n    }\n  };\n};\n\nexports.directive('ngeoSortable', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.popoverComponent\n */\nimport 'bootstrap/js/tooltip.js';\nimport 'bootstrap/js/popover.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoPopover', []);\n\n\n/**\n * Provides a directive used to display a Bootstrap popover.\n *\n *<div ngeo-popover>\n *  <a ngeo-popover-anchor class=\"btn btn-info\">anchor 1</a>\n *  <div ngeo-popover-content>\n *    <ul>\n *      <li>action 1:\n *        <input type=\"range\"/>\n *      </li>\n *    </ul>\n *  </div>\n *</div>\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopover\n * @return {angular.Directive} The Directive Definition Object.\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoPopoverController as popoverCtrl',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.anchorElm.on('hidden.bs.popover', () => {\n        /**\n         * @type {{inState : Object}}\n         */\n        const popover = ngeoPopoverCtrl.anchorElm.data('bs.popover');\n        popover['inState'].click = false;\n      });\n\n      ngeoPopoverCtrl.anchorElm.on('inserted.bs.popover', () => {\n        ngeoPopoverCtrl.bodyElm.show();\n        ngeoPopoverCtrl.shown = true;\n      });\n\n      ngeoPopoverCtrl.anchorElm.popover({\n        container: 'body',\n        html: true,\n        content: ngeoPopoverCtrl.bodyElm,\n        placement: attrs['ngeoPopoverPlacement'] || 'right'\n      });\n\n      if (attrs['ngeoPopoverDismiss']) {\n        $(attrs['ngeoPopoverDismiss']).on('scroll', () => {\n          ngeoPopoverCtrl.dismissPopover();\n        });\n      }\n\n      scope.$on('$destroy', () => {\n        ngeoPopoverCtrl.anchorElm.popover('destroy');\n        ngeoPopoverCtrl.anchorElm.unbind('inserted.bs.popover');\n        ngeoPopoverCtrl.anchorElm.unbind('hidden.bs.popover');\n      });\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopoverAnchor\n * @return {angular.Directive} The Directive Definition Object\n */\nexports.anchorComponent = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoPopover',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.anchorElm = elem;\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopoverContent\n * @return {angular.Directive} The Directive Definition Object\n */\nexports.contentComponent = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoPopover',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.bodyElm = elem;\n      elem.hide();\n    }\n  };\n};\n\n/**\n * The controller for the 'popover' directive.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoPopoverController\n * @param {angular.Scope} $scope Scope.\n */\nexports.PopoverController_ = function($scope) {\n  /**\n   * The state of the popover (displayed or not)\n   * @type {boolean}\n   * @export\n   */\n  this.shown = false;\n\n  /**\n   * @type {angular.JQLite|undefined}\n   * @export\n   */\n  this.anchorElm = undefined;\n\n  /**\n   * @type {angular.JQLite|undefined}\n   * @export\n   */\n  this.bodyElm = undefined;\n\n  function onMouseDown(clickEvent) {\n    if (this.anchorElm[0] !== clickEvent.target &&\n      this.bodyElm.parent()[0] !== clickEvent.target &\n      this.bodyElm.parent().find(clickEvent.target).length === 0 && this.shown) {\n      this.dismissPopover();\n    }\n  }\n\n  angular.element('body').on('mousedown', onMouseDown.bind(this));\n\n  $scope.$on('$destroy', () => {\n    angular.element('body').off('mousedown', onMouseDown);\n  });\n};\n\n\n/**\n * Dissmiss popover function\n * @export\n */\nexports.PopoverController_.prototype.dismissPopover = function() {\n  this.shown = false;\n  this.anchorElm.popover('hide');\n};\n\n\nexports.controller('NgeoPopoverController', exports.PopoverController_);\nexports.directive('ngeoPopover', exports.component_);\nexports.directive('ngeoPopoverAnchor', exports.anchorComponent);\nexports.directive('ngeoPopoverContent', exports.contentComponent);\n\n\nexport default exports;\n","/**\n * @module gmf.search.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfSearchFulltextSearch from 'gmf/search/FulltextSearch.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscAutoProjection from 'ngeo/misc/AutoProjection.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopoverComponent from 'ngeo/message/popoverComponent.js';\n\nimport ngeoSearchModule from 'ngeo/search/module.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olObj from 'ol/obj.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfSearch', [\n  gmfLayertreeTreeManager.module.name,\n  gmfSearchFulltextSearch.module.name,\n  gmfThemeThemes.module.name,\n  ngeoMiscAutoProjection.module.name,\n  ngeoMiscColorpickerComponent.name,\n  ngeoSearchModule.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessagePopoverComponent.name,\n]);\n\n\n/**\n * @param {angular.JQLite} element Element.\n * @param {angular.Attributes} attrs Attributes.\n * @return {string} Template URL.\n */\nexports.gmfSearchTemplateUrl_ = (element, attrs) => {\n  const templateUrl = attrs['gmfSearchTemplateurl'];\n  return templateUrl !== undefined ? templateUrl :\n    'gmf/search';\n};\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/search', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfSearchTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfSearchTemplateUrl($element, $attrs, gmfSearchTemplateUrl) {\n  return gmfSearchTemplateUrl($element, $attrs);\n}\n\n\n/**\n * A component that allows to search and recenter on a selected\n * result's feature.\n * It can search in multiple GeoJSON datasources.\n * It can filter and group results by a feature's property.\n *\n * This component uses the {@link ngeo.map.FeatureOverlayMgr} to create a\n * feature overlay for drawing features on the map. The application\n * is responsible to initialize the {@link ngeo.map.FeatureOverlayMgr}\n * with the map.\n *\n * Example flat results:\n *\n *      <gmf-search gmf-search-map=\"::ctrl.map\"\n *        gmf-search-options=\"::ctrl.searchOptions\"\n *        gmf-search-styles=\"::ctrl.searchStyles\"\n *        gmf-search-datasources=\"::ctrl.searchDatasources\"\n *        gmf-search-coordinatesprojections=\"::ctrl.searchCoordinatesProjections\">\n *      </gmf-search>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('fulltextsearchUrl', '${request.route_url('fulltextsearch', _query={\"limit\": 20}) | n}');\n *          module.value('gmfSearchGroups', []);\n *          module.constant('gmfSearchActions', [\n *                {action: 'add_theme', title: 'Add a theme'},\n *                {action: 'add_group', title: 'Add a sub theme'},\n *                {action: 'add_layer', title: 'Add a layer'}\n *          ]);\n *        })();\n *      </script>\n *\n * Example with categories:\n *\n *      <gmf-search gmf-search-map=\"::ctrl.map\"\n *        gmf-search-options=\"::ctrl.searchOptions\"\n *        gmf-search-styles=\"::ctrl.searchStyles\"\n *        gmf-search-datasources=\"::ctrl.searchDatasources\"\n *        gmf-search-coordinatesprojections=\"::ctrl.searchCoordinatesProjections\">\n *      </gmf-search>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('fulltextsearchUrl', '${request.route_url('fulltextsearch', _query={\"limit\": 30, \"partitionlimit\": 5}) | n}');\n *          module.value('gmfSearchGroups', ${dumps(fulltextsearch_groups) | n});\n *          module.value('gmfSearchActions', []);\n *        })();\n *     </scriptrchUrl' value in the examples above set three \"_query\" parameters: \"limit\",\n *\n * The 'fulltextsearchUrl' value in the examples above set three \"_query\" parameters: \"limit\",\n * \"partitionlimit\" and \"ranksystem\". For this last one \"ts_rank_cd\" is the only effective value. It's used to\n * order your search results with the \"ts_rank_cd\" ranking system from PostgreSQL module pg_trgm. Without\n * this value, the PostgreSQL function \"similarity\" (module pg_trgm) is used for the ranking. Read the\n * full-text search c2cgeoportal documentation to know more.\n * You can also add these parameters to the \"url\" variable of one (or more) of the\n * gmfx.SearchDirectiveDatasource given to this component (here within the \"ctrl.searchDatasources\"). That\n * allows you to have multiples configurations on one search component.\n *\n * @htmlAttribute {string} gmf-search-input-value The input value (read only).\n * @htmlAttribute {ol.Map} gmf-search-map The map.\n * @htmlAttribute {TypeaheadOptions|undefined} gmf-search-options Addition Typeahead options.\n * @htmlAttribute {gmfx.SearchComponentDatasource} gmf-search-datasource\n *      The datasources.\n * @htmlAttribute {Object.<string, ol.style.Style>}\n *      gmf-search-styles A map of styles to apply on searched features. Keys\n *      must be the 'layer_name' property of features except for coordinates\n *      where the key ifor its style is the value of the constant\n *      'gmf.COORDINATES_LAYER_NAME'. The 'default' key is used to apply the\n *      default style.\n * @htmlAttribute {Array.<string>} gmf-search-coordinatesprojections codes\n *      of supported projections for coordinates search (projections must be\n *      defined in ol3). If not provided, only the map's view projection\n *      format will be supported.\n * @htmlAttribute {ngeox.SearchComponentListeners} gmf-search-listeners\n *      The listeners.\n * @htmlAttribute {boolean=} gmf-search-clearbutton Optional clear button in the input search. Default to true.\n * @htmlAttribute {number=} gmf-search-delay Optional bloodhound request delay in ms. Default to 50 ms.\n * @htmlAttribute {boolean=} gmf-search-colorchooser Optional. Whether to let the user\n *      change the style of the feature on the map. Default is false.\n * @htmlAttribute {number=} gmf-search-maxzoom Optional maximum zoom we will zoom on result, default is 16.\n * @htmlAttribute {function=} gmf-search-on-init Optional function called when the component is initialized.\n * @ngdoc component\n * @ngname gmfSearch\n */\nexports.component_ = {\n  bindings: {\n    'inputValue': '=?gmfSearchInputValue',\n    'placeholder': '@?gmfSearchPlaceholder',\n    'map': '<gmfSearchMap',\n    'datasources': '<gmfSearchDatasources',\n    'typeaheadOptions': '<?gmfSearchOptions',\n    'featuresStyles': '<?gmfSearchStyles',\n    'clearButton': '=?gmfSearchClearbutton',\n    'colorChooser': '<?gmfSearchColorchooser',\n    'coordinatesProjections': '<?gmfSearchCoordinatesprojections',\n    'additionalListeners': '<gmfSearchListeners',\n    'maxZoom': '<?gmfSearchMaxzoom',\n    'delay': '<?gmfSearchDelay',\n    'onInitCallback': '<?gmfSearchOnInit'\n  },\n  controller: 'gmfSearchController',\n  templateUrl: gmfSearchTemplateUrl\n};\n\n\nexports.value('gmfSearchTemplateUrl', exports.gmfSearchTemplateUrl_);\n\n\n// Register the controller in the module\nexports.component('gmfSearch', exports.component_);\n\n\n/**\n * @private\n */\nexports.SearchController_ = class {\n\n  /**\n   * @private\n   * @param {jQuery} $element Element.\n   * @param {angular.Scope} $scope The component's scope.\n   * @param {angular.$compile} $compile Angular compile service.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {ngeo.misc.AutoProjection} ngeoAutoProjection The ngeo coordinates service.\n   * @param {ngeo.search.createGeoJSONBloodhound.Function} ngeoSearchCreateGeoJSONBloodhound The ngeo\n   *     create GeoJSON Bloodhound service.\n   * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n   *     overlay manager service.\n   * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n   * @param {gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n   * @param {gmf.search.FulltextSearch} gmfSearchFulltextSearch gmf Full text search service.\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfSearchController\n   */\n  constructor($element, $scope, $compile, $timeout, $injector,\n    gettextCatalog, ngeoAutoProjection, ngeoSearchCreateGeoJSONBloodhound,\n    ngeoFeatureOverlayMgr, gmfThemes, gmfTreeManager, gmfSearchFulltextSearch) {\n\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {angular.$compile}\n     * @private\n     */\n    this.compile_ = $compile;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    /**\n     * @type {gmf.layertree.TreeManager}\n     * @private\n     */\n    this.gmfTreeManager_ = gmfTreeManager;\n\n    /**\n     * @type {gmf.search.FulltextSearch}\n     * @private\n     */\n    this.fullTextSearch_ = gmfSearchFulltextSearch;\n\n    /**\n     * @type {ngeo.search.createGeoJSONBloodhound.Function}\n     * @private\n     */\n    this.ngeoSearchCreateGeoJSONBloodhound_ = ngeoSearchCreateGeoJSONBloodhound;\n\n    /**\n     * @type {ngeo.map.FeatureOverlayMgr}\n     * @private\n     */\n    this.ngeoFeatureOverlayMgr = ngeoFeatureOverlayMgr;\n\n    /**\n     * @type {ngeo.statemanager.Location|undefined}\n     * @private\n     */\n    this.ngeoLocation_;\n\n    if ($injector.has('ngeoLocation')) {\n      this.ngeoLocation_ = $injector.get('ngeoLocation');\n    }\n\n    /**\n     * @type {ngeo.misc.AutoProjection}\n     * @private\n     */\n    this.ngeoAutoProjection_ = ngeoAutoProjection;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {Object}\n     * @private\n     */\n    this.styles_ = {};\n\n    /**\n     * @type {function()}\n     * @export\n     */\n    this.onInitCallback;\n\n    /**\n     * Whether or not to show a button to clear the search text.\n     * Default to true.\n     * @type {boolean}\n     * @export\n     */\n    this.clearButton;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.colorChooser;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.placeholder;\n\n    /**\n     * @type {number}\n     * @export\n     */\n    this.delay;\n\n    /**\n     * The maximum zoom we will zoom on result.\n     * @type {number}\n     * @export\n     */\n    this.maxZoom = 16;\n\n    /**\n     * Supported projections for coordinates search.\n     * @type {Array.<ol.proj.Projection>}\n     * @export\n     */\n    this.coordinatesProjections;\n\n    /**\n     * @type {ngeo.map.FeatureOverlay}\n     * @private\n     */\n    this.featureOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n    /**\n     * @type {Array.<gmfx.SearchComponentDatasource>}\n     * @export\n     */\n    this.datasources = [];\n\n    /**\n     * @type {TypeaheadOptions}\n     * @export\n     */\n    this.typeaheadOptions;\n\n    /**\n     * @type {TypeaheadOptions}\n     * @export\n     */\n    this.options = /** @type {TypeaheadOptions} */ ({\n      highlight: true\n    });\n\n    /**\n     * @type {Object.<string, ol.style.Style>}\n     * @export\n     */\n    this.featuresStyles;\n\n    /**\n     * @type {Array.<TypeaheadDataset>}\n     * @export\n     */\n    this.datasets = [];\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.inputValue = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.color;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.displayColorPicker = false;\n\n    /**\n     * @type {ngeox.SearchDirectiveListeners}\n     * @export\n     */\n    this.listeners;\n\n    /**\n     * @type {ngeox.SearchDirectiveListeners}\n     * @export\n     */\n    this.additionalListeners;\n  }\n\n\n  /**\n   * Called on initialization of the controller.\n   */\n  $onInit() {\n    const gettextCatalog = this.gettextCatalog_;\n    this.clearButton = this.clearButton !== false;\n    this.colorChooser = this.colorChooser === true;\n    if (this.delay === undefined) {\n      this.delay = 50;\n    }\n    this.placeholder = this.placeholder !== undefined ? this.placeholder :\n      gettextCatalog.getString('Search…');\n\n    // Init coordinates projections\n    let coordProj = this.coordinatesProjections;\n    if (coordProj === undefined) {\n      coordProj = [this.map.getView().getProjection()];\n    } else {\n      coordProj = this.ngeoAutoProjection_.getProjectionList(\n        /** @type {Array.<string>} */ (coordProj)\n      );\n    }\n    this.coordinatesProjections = coordProj;\n\n    if (!this.clearButton) {\n      // Empty the search field on focus and blur.\n      this.element_.find('input').on('focus blur', () => {\n        this.clear();\n      });\n    }\n\n    if (this.onInitCallback) {\n      this.onInitCallback();\n    }\n\n    this.initStyles_();\n\n    this.featureOverlay_.setStyle(this.getSearchStyle_.bind(this));\n\n    if (this.typeaheadOptions) {\n      olObj.assign(this.options, this.typeaheadOptions);\n    }\n\n    this.initDatasets_();\n\n    this.scope_.$watch(\n      () => this.color,\n      this.setStyleColor.bind(this)\n    );\n\n    this.listeners = this.mergeListeners_(\n      this.additionalListeners,\n      /** @type {ngeox.SearchDirectiveListeners} */ ({\n        select: this.select_.bind(this),\n        close: this.close_.bind(this),\n        datasetsempty: this.datasetsempty_.bind(this)\n      })\n    );\n\n    if (this.ngeoLocation_) {\n      const searchQuery = this.ngeoLocation_.getParam('search');\n      if (searchQuery) {\n        let resultIndex = 1;\n        if (this.ngeoLocation_.getParam('search-select-index')) {\n          resultIndex = parseInt(this.ngeoLocation_.getParam('search-select-index'), 10);\n        }\n        let mapZoom;\n        if (this.ngeoLocation_.getParam('search-maxzoom')) {\n          mapZoom = parseInt(this.ngeoLocation_.getParam('search-maxzoom'), 10);\n        } else if (this.ngeoLocation_.getParam('map_zoom')) {\n          mapZoom = parseInt(this.ngeoLocation_.getParam('map_zoom'), 10);\n        }\n        this.fulltextsearch_(searchQuery, resultIndex, mapZoom);\n      }\n    }\n  }\n\n\n  /**\n   * Merges the custom listeners received via the component attributes and the\n   * listeners that are needed for this controller to function (close and select).\n   * @param {ngeox.SearchDirectiveListeners} additionalListeners Custom provided\n   *    listeners.\n   * @param {ngeox.SearchDirectiveListeners} listeners Default listeners.\n   * @return {ngeox.SearchDirectiveListeners} Merged listeners.\n   * @private\n   */\n  mergeListeners_(additionalListeners, listeners) {\n    if (additionalListeners === undefined) {\n      return listeners;\n    }\n    return {\n      open: additionalListeners.open,\n      close: additionalListeners.close === undefined ?\n        listeners.close : function() {\n          listeners.close();\n          additionalListeners.close();\n        },\n      cursorchange: additionalListeners.cursorchange,\n      datasetsempty: additionalListeners.datasetsempty,\n      select: additionalListeners.select === undefined ?\n        listeners.select : function(evt, obj, dataset) {\n          listeners.select(evt, obj, dataset);\n          additionalListeners.select(evt, obj, dataset);\n        },\n      autocomplete: additionalListeners.autocomplete\n    };\n  }\n\n\n  /**\n   * Initialize datasets for the search\n   * @private\n   */\n  initDatasets_() {\n    const gettextCatalog = this.gettextCatalog_;\n    for (let i = 0; i < this.datasources.length; i++) {\n      const datasource = this.datasources[i];\n\n      /** @type {Array.<string>} */\n      const groupValues = datasource.groupValues !== undefined ? datasource.groupValues : [];\n      /** @type {Array.<string>} */\n      const groupActions = datasource.groupActions ? datasource.groupActions : [];\n      const filters = [];\n\n      if (groupValues.length === 0) {\n        filters.push({\n          'title': '',\n          'filter': this.filterLayername_()\n        });\n      } else {\n        groupValues.forEach(function(layerName) {\n          filters.push({\n            'title': layerName,\n            'filter': this.filterLayername_(layerName)\n          });\n        }, this);\n      }\n\n      groupActions.forEach(function(action) {\n        filters.push({\n          'title': gettextCatalog.getString(action['title']),\n          'filter': this.filterAction_(action['action'])\n        });\n      }, this);\n\n      filters.forEach(function(filter) {\n        this.datasets.push(this.createDataset_({\n          bloodhoundOptions: datasource.bloodhoundOptions,\n          datasetTitle: filter['title'],\n          groupsKey: 'layer_name',\n          labelKey: datasource.labelKey,\n          projection: datasource.projection,\n          typeaheadDatasetOptions: datasource.typeaheadDatasetOptions,\n          url: datasource.url\n        }, filter['filter']));\n      }, this);\n    }\n\n    // For searching coordinates\n    this.datasets.push({\n      source: this.createSearchCoordinates_(this.map.getView()),\n      name: 'coordinates',\n      display: 'label',\n      templates: {\n        header: () => {\n          const header = gettextCatalog.getString('Recenter to');\n          return `<div class=\"gmf-search-header\" translate>${header}</div>`;\n        },\n        suggestion: (suggestion) => {\n          const coordinates = suggestion['label'];\n\n          let html = `<p class=\"gmf-search-label\">${coordinates}</p>`;\n          html = `<div class=\"gmf-search-datum\">${html}</div>`;\n          return html;\n        }\n      }\n    });\n  }\n\n\n  /**\n   * @param {gmfx.SearchComponentDatasource} config The config of the dataset.\n   * @param {(function(GeoJSONFeature): boolean)=} opt_filter A filter function\n   *     based on a GeoJSONFeaturesCollection's array.\n   * @return {TypeaheadDataset} A typeahead dataset.\n   * @private\n   */\n  createDataset_(config, opt_filter) {\n    const gettextCatalog = this.gettextCatalog_;\n    const componentScope = this.scope_;\n    const compile = this.compile_;\n    const bloodhoundEngine = this.createAndInitBloodhound_(config, opt_filter);\n    const typeaheadDataset = /** @type {TypeaheadDataset} */ ({\n      limit: Infinity,\n      source: bloodhoundEngine.ttAdapter(),\n      display: (suggestion) => {\n        const feature = /** @type {ol.Feature} */ (suggestion);\n        return feature.get(config.labelKey);\n      },\n      templates: /* TypeaheadTemplates */ ({\n        header: () => {\n          if (config.datasetTitle === undefined) {\n            return '';\n          } else {\n            const header = gettextCatalog.getString(config.datasetTitle);\n            return `<div class=\"gmf-search-header\">${header}</div>`;\n          }\n        },\n        suggestion: (suggestion) => {\n          const feature = /** @type {ol.Feature} */ (suggestion);\n\n          const scope = componentScope.$new(true);\n          scope['feature'] = feature;\n\n          let html = `<p class=\"gmf-search-label\" translate>${\n            feature.get(config.labelKey)}</p>`;\n          html += `<p class=\"gmf-search-group\" translate>${feature.get('layer_name') ||\n                  config.datasetTitle}</p>`;\n          html = `<div class=\"gmf-search-datum\">${html}</div>`;\n          return compile(html)(scope);\n        }\n      })\n    });\n    if (config.typeaheadDatasetOptions) {\n      olObj.assign(typeaheadDataset, config.typeaheadDatasetOptions);\n    }\n    return typeaheadDataset;\n  }\n\n\n  /**\n   * @param {string} action The action to keep.\n   * @return {(function(GeoJSONFeature): boolean)} A filter function based on a\n   *     GeoJSONFeaturesCollection's array.\n   * @private\n   */\n  filterAction_(action) {\n    return (\n    /**\n         * @param {GeoJSONFeature} feature\n         * @return {boolean}\n         */\n      function(feature) {\n        const properties = feature['properties'];\n        if (properties['actions']) {\n          // result is an action (add_theme, add_group, ...)\n          // add it to the corresponding group\n          return !properties['layer_name'] && properties['actions'].some(act => act.action === action);\n        } else {\n          return false;\n        }\n      }\n    );\n  }\n\n\n  /**\n   * @param {string=} opt_layerName The layerName to keep. If null, keep all layers\n   *     (In all cases, except actions layers).\n   * @return {(function(GeoJSONFeature): boolean)} A filter function based on a\n   *     GeoJSONFeaturesCollection's array.\n   * @private\n   */\n  filterLayername_(opt_layerName) {\n    return (\n    /**\n         * @param {GeoJSONFeature} feature\n         * @return {boolean}\n         */\n      function(feature) {\n        const featureLayerName = feature['properties']['layer_name'];\n        // Keep only layers with layer_name (don't keep action layers).\n        if (featureLayerName === undefined) {\n          return false;\n        }\n        if (opt_layerName === undefined) {\n          return true;\n        }\n        return featureLayerName === opt_layerName;\n      }\n    );\n  }\n\n\n  /**\n   * @param {gmfx.SearchComponentDatasource} config The config of the dataset.\n   * @param {(function(GeoJSONFeature): boolean)=} opt_filter Afilter function\n   *     based on a GeoJSONFeaturesCollection's array.\n   * @return {Bloodhound} The bloodhound engine.\n   * @private\n   */\n  createAndInitBloodhound_(config, opt_filter) {\n    const mapProjectionCode = this.map.getView().getProjection().getCode();\n    const remoteOptions = this.getBloodhoudRemoteOptions_();\n    const bloodhound = this.ngeoSearchCreateGeoJSONBloodhound_(config.url, opt_filter,\n      olProj.get(mapProjectionCode), olProj.get(config.projection),\n      config.bloodhoundOptions, remoteOptions);\n    bloodhound.initialize();\n    return bloodhound;\n  }\n\n\n  /**\n   * @return {BloodhoundRemoteOptions} Options.\n   * @private\n   */\n  getBloodhoudRemoteOptions_() {\n    const gettextCatalog = this.gettextCatalog_;\n    return {\n      rateLimitWait: this.delay,\n      prepare: (query, settings) => {\n        const url = settings.url;\n        const lang = gettextCatalog.currentLanguage;\n        const interfaceName = 'mobile'; // FIXME dynamic interfaces\n        settings.xhrFields = {\n          withCredentials: true\n        };\n        settings.url = olUri.appendParams(url, {\n          'query': query,\n          'lang': lang,\n          'interface': interfaceName\n        });\n        return settings;\n      }\n    };\n  }\n\n\n  /**\n   * @param {ol.View} view View.\n   * @return {function(string, function(Object))} function defining parameters for the search suggestions.\n   * @private\n   */\n  createSearchCoordinates_(view) {\n    const viewProjection = view.getProjection();\n    const extent = viewProjection.getExtent();\n    return function(query, callback) {\n      const suggestions = [];\n      const coordinates = this.ngeoAutoProjection_.stringToCoordinates(query);\n      if (coordinates === null) {\n        return;\n      }\n      const position = this.ngeoAutoProjection_.tryProjectionsWithInversion(coordinates,\n        extent, viewProjection, this.coordinatesProjections);\n      if (position === null) {\n        return;\n      }\n      suggestions.push({\n        label: coordinates.join(' '),\n        position: position,\n        'tt_source': 'coordinates'\n      });\n      callback(suggestions);\n    }.bind(this);\n  }\n\n\n  /**\n   * Init the style object for the search results. It set defaults for the\n   * coordinates and the polygon styles, and both can be overloaded from component\n   * attributes. The styles from component attributes can specify custom styles\n   * for each search group.\n   * @private\n   */\n  initStyles_() {\n    this.styles_[gmfBase.COORDINATES_LAYER_NAME] = new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({color: [0, 0, 0, 0.7], width: 2}),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    });\n    const fill = new olStyleFill({\n      color: [65, 134, 240, 0.5]\n    });\n    const stroke = new olStyleStroke({\n      color: [65, 134, 240, 1],\n      width: 2\n    });\n    this.styles_['default'] = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke\n    });\n    const customStyles = this.featuresStyles || {};\n    olObj.assign(this.styles_, customStyles);\n  }\n\n  /**\n   * Style for search results.\n   * @param {null|ol.Feature|ol.render.Feature} feature The searched feature.\n   * @param {number} resolution The current resolution of the map.\n   * @return {ol.style.Style} A style for this kind of features.\n   * @private\n   */\n  getSearchStyle_(feature, resolution) {\n    googAsserts.assert(feature);\n    const style = this.styles_[feature.get('layer_name')] || this.styles_['default'];\n    if (this.color) {\n      const color = olColor.asArray(this.color);\n\n      const strokeColor = color.slice();\n      // 100% opacity for the stroke color\n      strokeColor[3] = 1;\n\n      const fillColor = color.slice();\n      // 50% opacity for the fill color\n      fillColor[3] = 0.5;\n\n      const strokeStyle = style.getStroke();\n      if (strokeStyle) {\n        strokeStyle.setColor(strokeColor);\n      }\n      const fillStyle = style.getFill();\n      if (fillStyle) {\n        fillStyle.setColor(fillColor);\n      }\n      const image = style.getImage();\n      if (image) {\n        style.setImage(new olStyleCircle({\n          fill: new olStyleFill({color: fillColor}),\n          radius: 5,\n          stroke: new olStyleStroke({color: strokeColor})\n        }));\n      }\n    }\n    return style;\n  }\n\n  /**\n   * Set a new color for the search feature style.\n   * @param {string} color The color to set.\n   * @export\n   */\n  setStyleColor(color) {\n    if (color) {\n      this.color = color;\n      this.ngeoFeatureOverlayMgr.getLayer().changed();\n    }\n  }\n\n  /**\n   * @private\n   */\n  setTTDropdownVisibility_() {\n    if (this.clearButton) {\n      const ttDropdown = this.element_.find('.twitter-typeahead .tt-menu');\n      (this.inputValue) ? ttDropdown.show() : ttDropdown.hide();\n    }\n  }\n\n\n  /**\n   * @export\n   */\n  onClearButton() {\n    this.featureOverlay_.clear();\n    this.clear();\n  }\n\n\n  /**\n   * @export\n   */\n  clear() {\n    const typeahead = this.element_.find('.twitter-typeahead');\n    const ttmenu = typeahead.children('.tt-menu');\n    const inputs = typeahead.children('input');\n    // clear model value, the 'real' input value and tt's suggestions\n    this.inputValue = '';\n    $(inputs[1]).typeahead('val', '');\n    ttmenu.children('.tt-dataset').empty();\n    this.setTTDropdownVisibility_();\n    this.displayColorPicker = false;\n  }\n\n\n  /**\n   * @export\n   */\n  blur() {\n    const typeahead = this.element_.find('.twitter-typeahead');\n    const inputs = typeahead.children('input');\n    // Blur as soon as possible in digest loops\n    this.timeout_(() => {\n      $(inputs[1]).blur();\n    });\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {Object|ol.Feature} suggestion Suggestion.\n   * @param {TypeaheadDataset} dataset Dataset.\n   * @private\n   */\n  select_(event, suggestion, dataset) {\n    if (suggestion['tt_source'] === 'coordinates') {\n      const geom = new olGeomPoint(suggestion['position']);\n\n      this.featureOverlay_.clear();\n      this.featureOverlay_.addFeature(new olFeature({\n        geometry: geom,\n        'layer_name': gmfBase.COORDINATES_LAYER_NAME\n      }));\n      this.map.getView().setCenter(suggestion['position']);\n      this.leaveSearch_();\n    } else {\n      googAsserts.assertInstanceof(suggestion, olFeature);\n      this.selectFromGMF_(event, suggestion, dataset);\n    }\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {ol.Feature} feature Feature.\n   * @param {TypeaheadDataset} dataset Dataset.\n   * @private\n   */\n  selectFromGMF_(event, feature, dataset) {\n    const actions = feature.get('actions');\n    const featureGeometry = /** @type {ol.geom.SimpleGeometry} */\n        (feature.getGeometry());\n    if (actions) {\n      for (let i = 0, ii = actions.length; i < ii; i++) {\n        const action = actions[i];\n        const actionName = action['action'];\n        const actionData = action['data'];\n        if (actionName == 'add_theme') {\n          this.gmfThemes_.getThemesObject().then((themes) => {\n            const theme = gmfThemeThemes.findThemeByName(themes, actionData);\n            if (theme) {\n              this.gmfTreeManager_.addFirstLevelGroups(theme.children);\n            }\n          });\n        } else if (actionName == 'add_group') {\n          this.gmfTreeManager_.addGroupByName(actionData, true);\n        } else if (actionName == 'add_layer') {\n          const groupActions = /** @type {Array.<string>} */ (\n            this.datasources[0].groupActions);\n          let datasourcesActionsHaveAddLayer;\n          groupActions.forEach((groupAction) => {\n            if (groupAction['action'] === 'add_layer') {\n              return datasourcesActionsHaveAddLayer = true;\n            }\n          });\n          if (datasourcesActionsHaveAddLayer) {\n            const silent = !!featureGeometry;\n            this.gmfTreeManager_.addGroupByLayerName(actionData, true, silent);\n          }\n        }\n      }\n    }\n\n    const size = this.map.getSize();\n    if (featureGeometry && size) {\n      const view = this.map.getView();\n      this.featureOverlay_.clear();\n      this.featureOverlay_.addFeature(feature);\n      this.displayColorPicker = true;\n      const fitArray = featureGeometry.getType() === 'GeometryCollection' ?\n        featureGeometry.getExtent() : featureGeometry;\n      view.fit(fitArray, {\n        size: size,\n        maxZoom: this.maxZoom\n      });\n    }\n    this.leaveSearch_();\n  }\n\n\n  /**\n   * @private\n   */\n  leaveSearch_() {\n    if (!this.clearButton) {\n      this.clear();\n    }\n    this.blur();\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @private\n   */\n  close_(event) {\n    if (!this.clearButton) {\n      this.setTTDropdownVisibility_();\n    }\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {string} query Query.\n   * @param {boolean} empty Empty.\n   * @private\n   */\n  datasetsempty_(event, query, empty) {\n    // workaround to display a 'no result found' in the search result when all of\n    // the datasets are empty.\n    // based on https://github.com/twitter/typeahead.js/issues/780#issuecomment-251554452\n    // FIXME: remove this workaround when https://github.com/corejavascript/typeahead.js/issues/60 is fixed\n\n    const menu = this.element_.find('.twitter-typeahead .tt-menu');\n    const message = menu.children('.gmf-search-no-results');\n    if (message.length == 0) {\n      const div = $('<div class=\"gmf-search-no-results\" translate>No result found</div>');\n      menu.append(div);\n    }\n    if (empty) {\n      message.show();\n      menu.addClass('gmf-search-no-results');\n    } else {\n      menu.removeClass('gmf-search-no-results');\n      message.hide();\n    }\n  }\n\n\n  /**\n   * Performs a full-text search and centers the map on the first search result.\n   * @param {string} query Search query.\n   * @param {number} resultIndex Return nth result instead.\n   * @param {number=} opt_zoom Optional zoom level.\n   * @private\n   */\n  fulltextsearch_(query, resultIndex, opt_zoom) {\n    if (resultIndex < 1) { // can't be lower than one\n      resultIndex = 1;\n    }\n    this.fullTextSearch_.search(query, {'limit': resultIndex})\n      .then((data) => {\n        if (data && data.features[resultIndex - 1]) {\n          const format = new olFormatGeoJSON();\n          const feature = format.readFeature(data.features[resultIndex - 1]);\n          this.featureOverlay_.addFeature(feature);\n          const fitOptions = /** @type {olx.view.FitOptions} */ ({});\n          if (opt_zoom !== undefined) {\n            fitOptions.maxZoom = opt_zoom;\n            fitOptions.size = this.map.getSize();\n          }\n          this.map.getView().fit(feature.getGeometry().getExtent(), fitOptions);\n          this.inputValue = /** @type {string} */ (feature.get('label'));\n        }\n      });\n  }\n};\n\n\n// Register the controller in the module\nexports.controller('gmfSearchController', exports.SearchController_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.recenter\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.syncArrays\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * Provides a function that synchronizes two arrays, arr1 and\n * arr2. arr2 is a subset of arr1, it includes the elements of arr1 that passes\n * the filter. When elements are added to/removed from arr1, arr2 is updated to\n * include the elements of arr1 that pass the filter. When the order of\n * elements in arr2 changes, arr1 is reordered to have the same order as arr2.\n *\n * This can for example be used to synchronize the array of layers in the map\n * with the array of selected layers, where layers may be added to/removed from\n * the map, and the order of selected layers may change.\n *\n *     let dereg = ngeoSyncArrays(map.getLayers().getArray(), selectedLayers,\n *         true, scope, function(layer) {\n *           // exclude the layer at index 0 in the map\n *           return map.getLayers().indexOf(layer) !== 0;\n *         });\n *\n * This will return a function that can be called to cancel synchronization.\n *\n * @param {Array.<T>} arr1 Array 1.\n * @param {Array.<T>} arr2 Array 2.\n * @param {boolean} reverse `true` if arr2 is in reverse order, `false`\n *     otherwise.\n * @param {angular.Scope} scope Angular scope. Used to watch arr1 and arr2\n *     using $watchCollection.\n * @param {function(T):boolean} filter Filter function.\n * @return {function()} Function to call to stop synchronization\n * @template T\n */\nconst exports = function(arr1, arr2, reverse, scope, filter) {\n\n\n  // Update arr2 when elements are added to, or removed from, arr1.\n\n  const dereg1 = scope.$watchCollection(() => arr1, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = arr1.length - 1, j = 0; i >= 0; --i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    }\n    arr2.length = j;\n  });\n\n\n  // Update arr1 when the order of elements changes in arr2.\n\n  const dereg2 = scope.$watchCollection(() => arr2, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = 0, ii = arr1.length, j = arr2.length - 1; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j--];\n        }\n      }\n      googAsserts.assert(j == -1);\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j++];\n        }\n      }\n      googAsserts.assert(j == arr2.length);\n    }\n  });\n\n  return function() {\n    dereg1();\n    dereg2();\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.layertree.component\n */\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\n\nimport 'bootstrap/js/collapse.js'; // needed to collapse a layertree\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoLayertree', [\n  ngeoLayertreeController.module.name\n]);\n\n\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoLayertreeTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/layertree';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/layertree', require('./component.html'));\n});\n\n\n/**\n * Provides the \"ngeoLayertree\" directive, a directive for\n * creating layer trees in application.\n *\n * The directive assumes that tree nodes that are not leaves have a \"children\"\n * property referencing an array of child nodes.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\">\n *      </div>\n *\n * The \"ngeo-layertree\", \"ngeo-layertree-map\" and\n * \"ngeo-layertree-nodelayer\" attributes are mandatory attributes.\n *\n * - \"ngeo-layertree\" specifies an expression providing the tree. The\n *   directive watches that expression, making it possible to retrieve\n *   the tree data through Ajax.\n *\n * - \"ngeo-layertree-map\" specifies an expression providing the OpenLayers\n *   map. The directive doesn't watch that expression.\n *\n * - The \"ngeo-layertree-nodelayer\" specifies an expression providing the\n *   layer for a given node. In most cases that expression will be function\n *   call with \"node\" as the argument to the function call. E.g.\n *   \"ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\".\n *\n * - The \"ngeo-layertree-listeners\" specifies an expression providing a function\n *   to bind scope events to customs functions. You'll must set the listener on\n *   the \"treeScope\" and probably use \"treeCtrl\" as context. E.g.\n *   \"ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\".\n *\n * The directive comes with a default template. That template assumes that\n * tree nodes that are not leaves have a \"children\" property referencing an\n * array of child nodes. It also assumes that nodes have a \"name\" property.\n *\n * By default the directive uses \"layertree.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoLayertreeTemplateUrl\" value (using\n * app.module.value('ngeoLayertreeTemplateUrl', 'path/layertree.html'), or\n * by adding an \"ngeo-layertree-templateurl\" attribute to the element.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-templateurl=\"path/to/layertree.html\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\"\n *      </div>\n *\n * The directive has its own scope, but it is not an isolate scope. That scope\n * has a \"layertreeCtrl\" property which is a reference to the directive's\n * controller: \"layertreeCtrl\". You can refer to that property in a custom\n * template for example.\n *\n * See our live example: [../examples/layertree.html](../examples/layertree.html)\n *\n * @htmlAttribute {Object} ngeo-layertree One theme (JSON).\n * @htmlAttribute {string} ngeo-layertree-templateurl The template URL.\n * @htmlAttribute {ol.Map} ngeo-layertree-map The map.\n * @htmlAttribute {string} ngeo-layertree-nodelayer Expression that will be parsed\n *      to be a {@link Function} that return a {@link ol.layer.Layer}\n *      with the argument:\n *      {\n *          'node': {@link Object}|undefined,\n *          'depth': {@link number}\n *      }\n * @htmlAttribute {string} ngeo-layertree-nodelayerexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-nodelayer}.\n * @htmlAttribute {string} ngeo-layertree-listeners Expression that will be parsed\n *      to be a {@link Function} with the argument:\n *      {\n *          'treeScope': !{@link angular.Scope},\n *          'treeCtrl': {@link ngeo.layertree.Controller}\n *      }\n * @htmlAttribute {string} ngeo-layertree-listenersexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-listeners}.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoLayertreeTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoLayertree\n */\nexports.directive_ = function(ngeoLayertreeTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: ngeoLayertreeTemplateUrl,\n    controller: ngeoLayertreeController\n  };\n};\n\n\nexports.directive('ngeoLayertree', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\n\n/** @suppress {extraRequire} */\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\n\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoLayertreeComponent from 'ngeo/layertree/component.js';\n\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscSyncArrays from 'ngeo/misc/syncArrays.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\nimport 'bootstrap/js/collapse.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeComponent', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfPermalinkPermalink.module.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeComponent.name,\n  ngeoLayertreeController.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\n\n// Overrides the path to the layertree template (used by each node, except\n// the root node that path is defined by the gmfLayertreeTemplate value.\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => 'gmf/layertree');\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree', require('./component.html'));\n});\n\n\nexports.value('gmfLayertreeTemplate',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const subTemplateUrl = 'gmf/layertree';\n    return '<div ngeo-layertree=\"gmfLayertreeCtrl.root\" ' +\n          'ngeo-layertree-map=\"gmfLayertreeCtrl.map\" ' +\n          'ngeo-layertree-nodelayer=\"gmfLayertreeCtrl.getLayer(treeCtrl)\" ' +\n          'ngeo-layertree-listeners=\"gmfLayertreeCtrl.listeners(treeScope, treeCtrl)\" ' +\n          `ngeo-layertree-templateurl=\"${subTemplateUrl}\">` +\n          '</div>';\n  }\n);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfLayertreeTemplate Template function.\n * @return {string} Template.\n * @ngInject\n */\nfunction gmfLayertreeTemplate($element, $attrs, gmfLayertreeTemplate) {\n  return gmfLayertreeTemplate($element, $attrs);\n}\n\n\n/**\n * This component creates a layertree based on the c2cgeoportal JSON themes\n * source and a {@link ngeo.layertreeComponent}. The controller used by this\n * component defines some functions for each node that are created by a default\n * template. This default template can be overridden by setting the value\n * 'gmf.layertreeTemplateUrl' but you will have to adapt the\n * ngeoLayertreeTemplateUrl value too (to define the children's nodes template\n * path).\n *\n * Example:\n *\n *      <gmf-layertree\n *        gmf-layertree-dimensions=\"ctrl.dimensions\"\n *        gmf-layertree-map=\"ctrl.map\">\n *      </gmf-layertree>\n *\n * You can add an attribute 'gmf-layertree-openlinksinnewwindow=\"::true\"' to open\n * metadata URLs in a new window. By default, and in the default template,\n * links will be opened in a popup (The window.gmfx.openIframePopup function must be available !)\n *\n * Used UI metadata:\n *\n *  * isChecked: if 'false' the layer visibility will be set to false.\n *  * iconUrl: layer icon full URL.\n *  * legendRule: WMS rule used to get a layer icon.\n *  * isLegendExpanded: if 'true' the legend is expanded by default.\n *  * metadataUrl: Display a popup with the content of the given URL if\n *    possible also open a new window.\n *\n * @htmlAttribute {ol.Map} gmf-layertree-map The map.\n * @htmlAttribute {Object<string, string>|undefined} gmf-layertree-dimensions Global dimensions object.\n * @htmlAttribute {boolean|undefined} gmf-layertree-openlinksinnewwindow if true, open\n *     metadataURLs in a new window. Otherwise open them in a popup.\n *\n * @ngdoc component\n * @ngname gmfLayertreeComponent\n */\nexports.component_ = {\n  controller: 'GmfLayertreeController as gmfLayertreeCtrl',\n  bindings: {\n    'map': '=gmfLayertreeMap',\n    'dimensions': '=?gmfLayertreeDimensions',\n    'openLinksInNewWindow': '<?gmfLayertreeOpenlinksinnewwindow',\n  },\n  template: gmfLayertreeTemplate\n};\n\nexports.component('gmfLayertree', exports.component_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n *     The Gmf value service that determines the data source currently being\n *     filtered.\n * @param {!gmf.datasource.ExternalDataSourcesManager}\n *     gmfExternalDataSourcesManager The Gmf external data sources manager\n *     service. Used here to fetch the external WMS groups.\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n * @param {!gmf.layertree.SyncLayertreeMap} gmfSyncLayertreeMap gmfSyncLayertreeMap service.\n * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {!gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname gmfLayertreeController\n */\nexports.Controller_ = function($element, $scope, ngeoLayerHelper, gmfDataSourceBeingFiltered,\n  gmfExternalDataSourcesManager, gmfPermalink, gmfTreeManager, gmfSyncLayertreeMap, ngeoWMSTime, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {?Object<string, string>}\n   * @export\n   */\n  this.dimensions;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {gmfx.datasource.DataSourceBeingFiltered}\n   * @export\n   */\n  this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n  /**\n   * @type {!gmf.datasource.ExternalDataSourcesManager}\n   * @export\n   */\n  this.gmfExternalDataSourcesManager = gmfExternalDataSourcesManager;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  const root = gmfTreeManager.root;\n  googAsserts.assert(root);\n\n  /**\n   * @type {!gmfThemes.GmfRootNode}\n   * @export\n   */\n  this.root = root;\n\n  /**\n   * @type {!gmf.layertree.SyncLayertreeMap}\n   * @private\n   */\n  this.gmfSyncLayertreeMap_ = gmfSyncLayertreeMap;\n\n  /**\n   * @type {!ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {!Object.<number, !Array.<string>>}\n   * @private\n   */\n  this.groupNodeStates_ = {};\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.openLinksInNewWindow;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n\n  /**\n   * @type {!Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.layers = [];\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  // enter digest cycle on node collapse\n  $element.on('shown.bs.collapse', () => {\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * Init the controller,\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.openLinksInNewWindow = this.openLinksInNewWindow === true;\n  this.dataLayerGroup_ = this.layerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n\n  ngeoMiscSyncArrays(this.dataLayerGroup_.getLayers().getArray(), this.layers, true, this.scope_, () => true);\n\n  // watch any change on layers array to refresh the map\n  this.scope_.$watchCollection(() => this.layers,\n    () => {\n      this.map.render();\n    });\n\n  // watch any change on dimensions object to refresh the layers\n  this.scope_.$watchCollection(() => {\n    if (this.gmfTreeManager_.rootCtrl) {\n      return this.dimensions;\n    }\n  }, (dimensions) => {\n    if (dimensions) {\n      this.updateDimensions_(this.gmfTreeManager_.rootCtrl);\n    }\n  });\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl Layer tree controller.\n * @private\n */\nexports.Controller_.prototype.updateDimensions_ = function(treeCtrl) {\n  treeCtrl.traverseDepthFirst((ctrl) => {\n    if (ctrl.node.dimensions) {\n      const layer = ctrl.layer;\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      this.updateLayerDimensions_(layer, /** @type gmfThemes.GmfGroup|gmfThemes.GmfLayer */ (ctrl.node));\n    }\n  });\n};\n\n\n/**\n * @param {ol.layer.Layer} layer Layer to update.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layer tree node.\n * @private\n */\nexports.Controller_.prototype.updateLayerDimensions_ = function(layer, node) {\n  if (this.dimensions && node.dimensions) {\n    const dimensions = {};\n    for (const key in node.dimensions) {\n      if (node.dimensions[key] === null) {\n        const value = this.dimensions[key];\n        if (value !== undefined) {\n          dimensions[key] = value;\n        }\n      } else {\n        dimensions[key] = node.dimensions[key];\n      }\n    }\n    if (!olObj.isEmpty(dimensions)) {\n      const source = layer.getSource();\n      if (source instanceof olSourceWMTS) {\n        source.updateDimensions(dimensions);\n      } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n        source.updateParams(dimensions);\n      } else {\n        // the source is not ready yet\n        layer.once('change:source', () => {\n          googAsserts.assertInstanceof(layer, olLayerLayer);\n          this.updateLayerDimensions_(layer, node);\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Use the gmfSyncLayertreeMap_ to create and get layer corresponding to this\n * treeCtrl. The layer will be inserted into the map. The layer can be null\n * if the treeCtrl is based on a node inside a mixed node. It this case, the\n * layer will be in the first parent declared as a mixed node.\n * @param {ngeo.layertree.Controller} treeCtrl tree controller of the node\n * @return {ol.layer.Base|ol.layer.Group|null} The OpenLayers layer or group\n *     for the node.\n * @export\n */\nexports.Controller_.prototype.getLayer = function(treeCtrl) {\n  let opt_position;\n  if (treeCtrl.parent.isRoot) {\n    this.gmfTreeManager_.rootCtrl = treeCtrl.parent;\n    // Precise the index to add first level groups.\n    opt_position = this.gmfTreeManager_.root.children.length -\n        this.gmfTreeManager_.numberOfGroupsToAddInThisDigestLoop || 0;\n  }\n\n  const layer = this.gmfSyncLayertreeMap_.createLayer(treeCtrl, this.map,\n    this.dataLayerGroup_, opt_position);\n\n  if (layer instanceof olLayerLayer) {\n    const node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n    this.updateLayerDimensions_(layer, node);\n  }\n\n  return layer;\n};\n\n\n/**\n * Remove layer from this component's layergroup (and then, from the map) on\n * a ngeo layertree destroy event.\n * @param {angular.Scope} scope treeCtrl scope.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.listeners = function(scope, treeCtrl) {\n  const dataLayerGroup = this.dataLayerGroup_;\n  scope.$on('$destroy', () => {\n    // Remove the layer from the map.\n    dataLayerGroup.getLayers().remove(treeCtrl.layer);\n  });\n};\n\n/**\n * Toggle the state of treeCtrl's node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.toggleActive = function(treeCtrl) {\n  treeCtrl.setState(treeCtrl.getState() === 'on' ? 'off' : 'on');\n};\n\n\n/**\n * Return the current state of the given treeCtrl's node.\n * Return a class name that match with the current node activation state.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string} 'on' or 'off' or 'indeterminate'.\n * @export\n */\nexports.Controller_.prototype.getNodeState = function(treeCtrl) {\n  return treeCtrl.getState();\n};\n\n\n/**\n * Update the `timeRangeValue` property of the data source bound to the\n * given tree controller using the given time. If the tree controller has\n * no data source, it means that it has children and they might have\n * data sources.\n *\n * The setting of the TIME parameter on the layer occurs in the\n * `gmf.datasource.Manager` service\n *\n * LayertreeController.prototype.updateWMSTimeLayerState - description\n * @param {ngeo.layertree.Controller} layertreeCtrl ngeo layertree controller\n * @param {{start : number, end : number}} time The start\n * and optionally the end datetime (for time range selection) selected by user\n * @export\n */\nexports.Controller_.prototype.updateWMSTimeLayerState = function(\n  layertreeCtrl, time) {\n  if (!time) {\n    return;\n  }\n  const dataSource = layertreeCtrl.getDataSource();\n  if (dataSource) {\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    dataSource.timeRangeValue = time;\n  } else if (layertreeCtrl.children) {\n    for (let i = 0, ii = layertreeCtrl.children.length; i < ii; i++) {\n      this.updateWMSTimeLayerState(layertreeCtrl.children[i], time);\n    }\n  }\n};\n\n\n/**\n * Get the icon image URL for the given treeCtrl's layer. It can only return a\n * string for internal WMS layers without multiple childlayers in the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string|undefined} The icon legend URL or undefined.\n * @export\n */\nexports.Controller_.prototype.getLegendIconURL = function(treeCtrl) {\n  const iconUrl = treeCtrl.node.metadata.iconUrl;\n\n  if (iconUrl !== undefined) {\n    return iconUrl;\n  }\n\n  if (treeCtrl.node.children !== undefined) {\n    return undefined;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (gmfLayer.type !== 'WMS') {\n    return undefined;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  const legendRule = gmfLayerWMS.metadata.legendRule;\n\n  if (legendRule === undefined) {\n    return undefined;\n  }\n\n  //In case of multiple layers for a gmfLayerWMS, always take the first layer\n  //name to get the icon\n  const layerName = gmfLayerWMS.layers.split(',')[0];\n  const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n  return this.layerHelper_.getWMSLegendURL(\n    gmfOgcServer.url, layerName, undefined, legendRule\n  );\n};\n\n\n/**\n * Get the legends object (<LayerName: url> for each layer) for the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {Object.<string, string>} A <layerName: url> object that provides a\n *     layer for each layer.\n * @export\n */\nexports.Controller_.prototype.getLegendsObject = function(treeCtrl) {\n  const legendsObject = {};\n  if (/** @type gmfThemes.GmfGroup */ (treeCtrl.node).children !== undefined) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const gmfLayerDefaultName = gmfLayer.name;\n  if (gmfLayer.metadata.legendImage) {\n    legendsObject[gmfLayerDefaultName] = gmfLayer.metadata.legendImage;\n    return legendsObject;\n  }\n\n  const layer = treeCtrl.layer;\n  if (gmfLayer.type === 'WMTS') {\n    googAsserts.assertInstanceof(layer, olLayerTile);\n    const wmtsLegendURL = this.layerHelper_.getWMTSLegendURL(layer);\n    legendsObject[gmfLayerDefaultName] = wmtsLegendURL;\n    return wmtsLegendURL ? legendsObject : null;\n  } else {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n    let layersNames = gmfLayerWMS.layers;\n    const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n    const scale = this.getScale_();\n    // QGIS can handle multiple layers natively. Use Multiple URLs for other map\n    // servers\n    if (gmfOgcServer.type === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      layersNames = [layersNames];\n    } else {\n      layersNames = layersNames.split(',');\n    }\n    layersNames.forEach((layerName) => {\n      legendsObject[layerName] = this.layerHelper_.getWMSLegendURL(gmfOgcServer.url, layerName, scale);\n    });\n    return legendsObject;\n  }\n};\n\n\n/**\n * Get the number of legends object for this layertree controller.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {number} The number of Legends object.\n * @export\n */\nexports.Controller_.prototype.getNumberOfLegendsObject = function(treeCtrl) {\n  const legendsObject = this.getLegendsObject(treeCtrl);\n  return legendsObject ? Object.keys(legendsObject).length : 0;\n};\n\n\n/**\n * Return the current scale of the map.\n * @return {number} Scale.\n * @private\n */\nexports.Controller_.prototype.getScale_ = function() {\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const mpu = view.getProjection().getMetersPerUnit();\n  const dpi = 25.4 / 0.28;\n  return resolution * mpu * 39.37 * dpi;\n};\n\n\n/**\n * Opens a gmfx.openIframePopup with the content of the metadata url of a node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.displayMetadata = function(treeCtrl) {\n  const node = treeCtrl.node;\n  const metadataURL = node.metadata['metadataUrl'];\n  if (metadataURL !== undefined) {\n    // FIXME layertree should not rely on a window function.\n    const gmfx = window.gmfx;\n    if (gmfx.openIframePopup) {\n      gmfx.openIframePopup(metadataURL, node.name, undefined, undefined, false);\n    }\n  }\n};\n\n\n/**\n * Update the layers order in the map and the treeCtrl in the treeManager after\n * a reorder of the first-level groups. Then update the permalink.\n * @export\n */\nexports.Controller_.prototype.afterReorder = function() {\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const currentTreeCtrls = this.gmfTreeManager_.rootCtrl.children;\n  const treeCtrls = [];\n\n  // Get order of first-level groups for treectrl and layers;\n  groupNodes.forEach((node) => {\n    currentTreeCtrls.some((treeCtrl) => {\n      if (treeCtrl.node === node) {\n        treeCtrls.push(treeCtrl);\n        return;\n      }\n    });\n  });\n\n  // Update gmfTreeManager rootctrl children order\n  this.gmfTreeManager_.rootCtrl.children = treeCtrls;\n\n  // Update map 'data' groupe layers order\n  this.layers.length = 0;\n  this.gmfTreeManager_.rootCtrl.children.forEach((child) => {\n    this.layers.push(child.layer);\n  });\n\n  // Update the permalink order\n  this.gmfPermalink_.refreshFirstLevelGroups();\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup} node Layer tree node to remove.\n * @export\n */\nexports.Controller_.prototype.removeNode = function(node) {\n  this.gmfTreeManager_.removeGroup(node);\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.removeAllNodes = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @return {number} first level node count.\n * @export\n */\nexports.Controller_.prototype.nodesCount = function() {\n  return this.gmfTreeManager_.root.children.length;\n};\n\n/**\n * Return 'out-of-resolution' if the current resolution of the map is out of\n * the min/max resolution in the node.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {string|undefined} 'out-of-resolution' or undefined.\n * @export\n */\nexports.Controller_.prototype.getResolutionStyle = function(gmfLayer) {\n  const resolution = this.map.getView().getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    return 'out-of-resolution';\n  }\n  const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n  if (maxResolution !== undefined && resolution > maxResolution) {\n    return 'out-of-resolution';\n  }\n  return undefined;\n};\n\n\n/**\n * Set the resolution of the map with the max or min resolution of the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.zoomToResolution = function(treeCtrl) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    view.setResolution(view.constrainResolution(minResolution, 0, 1));\n  } else {\n    const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n    if (maxResolution !== undefined && resolution > maxResolution) {\n      view.setResolution(view.constrainResolution(maxResolution, 0, -1));\n    }\n  }\n};\n\n\n/**\n * Toggle the legend for a node\n * @param {string} legendNodeId The DOM node legend id to toggle\n * @export\n */\nexports.Controller_.prototype.toggleNodeLegend = function(legendNodeId) {\n  $(legendNodeId).toggle({\n    toggle: true\n  });\n};\n\n\n/**\n * @param {gmf.datasource.OGC} ds Data source to filter.\n * @export\n */\nexports.Controller_.prototype.toggleFiltrableDataSource = function(ds) {\n  this.gmfDataSourceBeingFiltered.dataSource = ds;\n};\n\n\n/**\n * @param {string} legendNodeId The DOM node legend id\n * @return {boolean} Whenever the legend is currently displayed.\n * @export\n */\nexports.Controller_.prototype.isNodeLegendVisible = function(legendNodeId) {\n  return $(legendNodeId).is(':visible');\n};\n\n\n/**\n * Determines whether the layer tree controller supports being customized.\n * For example, having its layer opacity changed, displaying its legend, etc.\n *\n * If any requirement is met, then the treeCtrl is considered supporting\n * \"customization\", regardless of what it actually is.\n *\n * The requirements are:\n *\n * - must not be the root controller, any of the following:\n *   - it supports legend\n *   - it supports having the layer opacity being changed\n *\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports being\n *     \"customized\" or not.\n * @export\n */\nexports.Controller_.prototype.supportsCustomization = function(treeCtrl) {\n  return !treeCtrl.isRoot &&\n    (\n      this.supportsLegend(treeCtrl) ||\n      this.supportsOpacityChange(treeCtrl)\n    );\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having a\n *     legend being shown.\n * @export\n */\nexports.Controller_.prototype.supportsLegend = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  return !!node.metadata &&\n    !!node.metadata.legend &&\n    !!this.getLegendsObject(treeCtrl);\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having its\n *     layer opacity being changed or not.\n * @export\n */\nexports.Controller_.prototype.supportsOpacityChange = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  const parentNode = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  return !!treeCtrl.layer &&\n    (\n      (\n        treeCtrl.depth === 1 && !node.mixed\n      ) ||\n      (\n        treeCtrl.depth > 1 && parentNode.mixed\n      )\n    );\n};\n\nexports.controller('GmfLayertreeController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module app\n */\nconst exports = {};\n\n/**\n * This file provides the \"app\" namespace, which is the\n * application's main namespace. And it defines the application's Angular\n * module.\n */\n\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('app', []);\n\nexports.module.config(['$compileProvider', function($compileProvider) {\n  if (!('debug' in ngeoUtils.decodeQueryString(window.location.search))) {\n    // Disable the debug info\n    $compileProvider.debugInfoEnabled(false);\n  }\n}]);\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.coordinate\n */\nconst exports = {};\n\n\n/**\n * Convert a given coordinate or list of coordinates of any 'nesting' level\n * to XY, i.e. remove any extra dimensions to the coordinates and keep only 2.\n *\n * @param {Array.<ol.Coordinate>|ol.Coordinate} coordinates Coordinates\n * @param {number} nesting Nesting level.\n * @return {Array.<ol.Coordinate>|ol.Coordinate} Converted coordinates.\n */\nexports.toXY = function(coordinates, nesting) {\n  if (nesting === 0) {\n    if (coordinates.length > 2) {\n      coordinates = [coordinates[0], coordinates[1]];\n    }\n  } else {\n    for (let i = 0, ii = coordinates.length; i < ii; i++) {\n      coordinates[i] = exports.toXY(coordinates[i], nesting - 1);\n    }\n  }\n  return coordinates;\n};\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.geom\n */\nconst exports = {};\nimport gmfObjecteditingCoordinate from 'gmf/objectediting/coordinate.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomSimpleGeometry from 'ol/geom/SimpleGeometry.js';\n\n\n/**\n * Determines whether a given geometry is empty or not. A null or undefined\n * value can be given for convenience, i.e. when using methods than can\n * return a geometry or not, for example:\n * `gmf.objectediting.geom.isEmpty(feature.getGeometry())`.\n *\n * @param {?ol.geom.Geometry|undefined} geom Geometry.\n * @return {boolean} Whether the given geometry is empty or not. A null or\n *     undefined geometry is considered empty.\n */\nexports.isEmpty = function(geom) {\n  let isEmpty = true;\n  if (geom && geom instanceof olGeomSimpleGeometry) {\n    isEmpty = geom.getFlatCoordinates().length === 0;\n  }\n  return isEmpty;\n};\n\n\n/**\n * Convert all coordinates within a geometry object to XY, i.e. remove any\n * extra dimension other than X and Y to the coordinates of a geometry.\n *\n * @param {ol.geom.Geometry} geom Geometry\n */\nexports.toXY = function(geom) {\n  if (geom instanceof olGeomPoint) {\n    geom.setCoordinates(\n      gmfObjecteditingCoordinate.toXY(geom.getCoordinates(), 0)\n    );\n  } else if (geom instanceof olGeomMultiPoint ||\n             geom instanceof olGeomLineString\n  ) {\n    geom.setCoordinates(\n      gmfObjecteditingCoordinate.toXY(geom.getCoordinates(), 1)\n    );\n  } else if (geom instanceof olGeomMultiLineString ||\n             geom instanceof olGeomPolygon\n  ) {\n    geom.setCoordinates(\n      gmfObjecteditingCoordinate.toXY(geom.getCoordinates(), 2)\n    );\n  } else if (geom instanceof olGeomMultiPolygon) {\n    geom.setCoordinates(\n      gmfObjecteditingCoordinate.toXY(geom.getCoordinates(), 3)\n    );\n  } else {\n    throw 'gmf.objectediting.geom.toXY - unsupported geometry type';\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.Query\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\n\n/**\n * A service that collects all queryable layer nodes from all themes, stores\n * them and use them to make WMS GetFeatureInfo queries. Queries can be made\n * regardless of the associated layer visibility. The layer nodes are also\n * loaded only once.\n *\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q Angular $q service.\n * @param {gmf.theme.Themes} gmfThemes The gmf themes service.\n * @constructor\n * @struct\n * @ngInject\n */\nconst exports = function($http, $q, gmfThemes) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {?angular.$q.Deferred}\n   * @private\n   */\n  this.getQueryableLayerNodesDefered_ = null;\n\n};\n\n\n/**\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getQueryableLayersInfo = function() {\n\n  if (!this.getQueryableLayerNodesDefered_) {\n    this.getQueryableLayerNodesDefered_ = this.q_.defer();\n    this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n      this.gmfThemes_.getThemesObject().then((themes) => {\n        if (!themes) {\n          return;\n        }\n\n        // Get all queryable nodes\n        const allQueryableLayersInfo =\n            exports.getQueryableLayersInfoFromThemes(\n              themes,\n              ogcServers\n            );\n\n        // Narrow down to only those that have the 'copyable' metadata set\n        const queryableLayersInfo = [];\n        for (let i = 0, ii = allQueryableLayersInfo.length; i < ii; i++) {\n          if (allQueryableLayersInfo[i].layerNode.metadata.copyable) {\n            queryableLayersInfo.push(allQueryableLayersInfo[i]);\n          }\n        }\n\n        this.getQueryableLayerNodesDefered_.resolve(queryableLayersInfo);\n      });\n    });\n  }\n\n  return this.getQueryableLayerNodesDefered_.promise;\n\n};\n\n\n/**\n * From a list of theme nodes, collect all WMS layer nodes that are queryable.\n * A list of OGC servers is given in order to bind each queryable layer node\n * to its associated server and be able to build requests.\n *\n * @param {Array.<gmfThemes.GmfTheme>} themes List of theme nodes.\n * @param {gmfThemes.GmfOgcServers} ogcServers List of ogc servers\n * @return {Array.<gmfx.ObjectEditingQueryableLayerInfo>} List of\n *     queryable layers information.\n * @export\n */\nexports.getQueryableLayersInfoFromThemes = function(\n  themes, ogcServers\n) {\n  const queryableLayersInfo = [];\n  let theme;\n  let group;\n  let nodes;\n  let node;\n\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    theme = /** @type {gmfThemes.GmfTheme} */ (themes[i]);\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      group = /** @type {gmfThemes.GmfGroup} */ (theme.children[j]);\n\n      // Skip groups that don't have an ogcServer set\n      if (!group.ogcServer) {\n        continue;\n      }\n\n      nodes = [];\n      gmfThemeThemes.getFlatNodes(group, nodes);\n\n      for (let k = 0, kk = nodes.length; k < kk; k++) {\n        node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayerWMS} */ (\n          nodes[k]);\n\n        // Skip groups within groups\n        if (node.children && node.children.length) {\n          continue;\n        }\n\n        if (node.childLayers &&\n          node.childLayers[0] &&\n          node.childLayers[0].queryable\n        ) {\n          queryableLayersInfo.push({\n            layerNode: node,\n            ogcServer: ogcServers[group.ogcServer]\n          });\n        }\n      }\n    }\n  }\n\n  return queryableLayersInfo;\n};\n\n\n/**\n * From a queryable layer (WMS layer node), use its associated OGC server\n * to issue a single WMS GetFeatureInfo request at a specific location on a\n * specific map to fetch a single feature. If no feature is found, a `null`\n * value is returned.\n *\n * @param {gmfx.ObjectEditingQueryableLayerInfo} layerInfo Queryable layer\n *     information.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {ol.Map} map Map.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getFeatureInfo = function(layerInfo, coordinate, map) {\n  const view = map.getView();\n  const projCode = view.getProjection().getCode();\n  const resolution = /** @type {number} */(view.getResolution());\n  const infoFormat = ngeoDatasourceOGC.WMSInfoFormat.GML;\n  const layerNode = layerInfo.layerNode;\n  const layersParam = layerNode.layers.split(',');\n  const ogcServer = layerInfo.ogcServer;\n\n  const format = new olFormatWMSGetFeatureInfo({\n    layers: layersParam\n  });\n\n  const wmsSource = new olSourceImageWMS({\n    url: ogcServer.url,\n    params: {\n      layers: layersParam\n    }\n  });\n\n  const url = /** @type {string} */ (\n    wmsSource.getGetFeatureInfoUrl(coordinate, resolution, projCode, {\n      'INFO_FORMAT': infoFormat,\n      'FEATURE_COUNT': 1,\n      'QUERY_LAYERS': layersParam\n    })\n  );\n\n  return this.http_.get(url).then(\n    (response) => {\n      const features = format.readFeatures(response.data);\n      return (features && features[0]) ? features[0] : null;\n    }\n  );\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfObjectEditingQuery', [\n  gmfThemeThemes.module.name,\n]);\nexports.module.service('gmfObjectEditingQuery', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.getWMSFeatureComponent\n */\nimport gmfObjecteditingQuery from 'gmf/objectediting/Query.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfObjecteditingGetWMSFeatureComponent', [\n  gmfObjecteditingQuery.module.name,\n]);\n\n\n/**\n * When activated, this directive registers clicks on an OL3 map and use the\n * clicked coordinate to fetch a feature using the ObjectEditing query service.\n * A feature returned is pushed to a collection.\n *\n * Example:\n *\n *     <gmf-objecteditinggetwmsfeature\n *         gmf-objecteditinggetwmsfeature-active=\"ctrl.active\"\n *         gmf-objecteditinggetwmsfeature-features=\"ctrl.features\"\n *         gmf-objecteditinggetwmsfeature-layerinfo=\"ctrl.layerInfo\"\n *         gmf-objecteditinggetwmsfeature-map=\"::ctrl.map\">\n *     </gmf-objecteditinggetwmsfeature>\n *\n * @htmlAttribute {boolean} gmf-objecteditinggetwmsfeature-active Whether the\n *     directive is active or not.\n * @htmlAttribute {ol.Collection} gmf-objecteditinggetwmsfeature-features\n *     The collection of features where to add those created by this directive.\n * @htmlAttribute {gmfx.ObjectEditingQueryableLayerInfo} gmf-objecteditinggetwmsfeature-layerinfo Queryable layer info.\n * @htmlAttribute {ol.Map} gmf-objecteditinggetwmsfeature-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfObjecteditinggetwmsfeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'gmfObjecteditinggetwmsfeatureController',\n    scope: {\n      'active': '=gmfObjecteditinggetwmsfeatureActive',\n      'features': '<gmfObjecteditinggetwmsfeatureFeatures',\n      'layerInfo': '=gmfObjecteditinggetwmsfeatureLayerinfo',\n      'map': '<gmfObjecteditinggetwmsfeatureMap'\n    },\n    bindToController: true\n  };\n};\n\nexports.directive('gmfObjecteditinggetwmsfeature',\n  exports.directive_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {gmf.objectediting.Query} gmfObjectEditingQuery GMF ObjectEditing\n *     query service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfObjecteditinggetwmsfeatureController\n */\nexports.Controller_ = function($scope,\n  gmfObjectEditingQuery) {\n\n  // Scope properties\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  $scope.$watch(\n    () => this.active,\n    this.handleActiveChange_.bind(this)\n  );\n\n  /**\n   * @type {ol.Collection}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {gmfx.ObjectEditingQueryableLayerInfo}\n   * @export\n   */\n  this.layerInfo;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n\n  // Injected properties\n\n  /**\n   * @type {gmf.objectediting.Query}\n   * @private\n   */\n  this.gmfObjectEditingQuery_ = gmfObjectEditingQuery;\n\n};\n\n\n/**\n * @param {boolean} active Active.\n * @private\n */\nexports.Controller_.prototype.handleActiveChange_ = function(active) {\n  if (active) {\n    olEvents.listen(\n      this.map,\n      'click',\n      this.handleMapClick_,\n      this\n    );\n  } else {\n    olEvents.unlisten(\n      this.map,\n      'click',\n      this.handleMapClick_,\n      this\n    );\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapClick_ = function(evt) {\n  this.gmfObjectEditingQuery_.getFeatureInfo(\n    this.layerInfo,\n    evt.coordinate,\n    this.map\n  ).then((feature) => {\n    if (feature) {\n      this.features.push(feature);\n    }\n  });\n};\n\nexports.controller('gmfObjecteditinggetwmsfeatureController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.DrawRegularPolygonFromClick\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\n\n/**\n * @classdesc\n * This interactions allows drawing regular polygons of a pre-determined number\n * of sides and size a a clicked location on the map.\n *\n * @constructor\n * @struct\n * @fires ngeox.DrawEvent\n * @extends {ol.interaction.Interaction}\n * @param {ngeox.interaction.DrawRegularPolygonFromClickOptions} options Options\n */\nconst exports = function(options) {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.radius_ = options.radius;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.sides_ = options.sides !== undefined ? options.sides : 3;\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n};\n\nolBase.inherits(\n  exports, olInteractionInteraction);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionInteraction.prototype.setActive.call(this, active);\n\n  if (this.getMap()) {\n    if (active) {\n      this.enable_();\n    } else {\n      this.disable_();\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  const active = this.getActive();\n\n  const currentMap = this.getMap();\n  if (currentMap && active) {\n    this.disable_();\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map && active) {\n    this.enable_();\n  }\n\n};\n\n\n/**\n * Enable the interaction. Called when added to a map AND active.\n * @private\n */\nexports.prototype.enable_ = function() {\n  const map = this.getMap();\n  googAsserts.assert(map, 'Map should be set.');\n  this.listenerKeys_.push(\n    olEvents.listen(map, 'click', this.handleMapClick_, this)\n  );\n};\n\n\n/**\n * Disable the interaction. Called when removed from a map or deactivated.\n * @private\n */\nexports.prototype.disable_ = function() {\n  const map = this.getMap();\n  googAsserts.assert(map, 'Map should be set.');\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\n/**\n * Called the the map is clicked. Create a regular polygon at the clicked\n * location using the configuration\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @private\n */\nexports.prototype.handleMapClick_ = function(evt) {\n  const center = evt.coordinate;\n  const geometry = olGeomPolygon.fromCircle(\n    new olGeomCircle(center), this.sides_\n  );\n\n  olGeomPolygon.makeRegular(geometry, center, this.radius_, this.angle_);\n\n  /** @type {ngeox.DrawEvent} */\n  const event = new ngeoCustomEvent('drawend', {feature: new olFeature(geometry)});\n  this.dispatchEvent(event);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.createregularpolygonfromclickComponent\n */\nimport ngeoInteractionDrawRegularPolygonFromClick from 'ngeo/interaction/DrawRegularPolygonFromClick.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\n\nconst exports = angular.module('ngeoCreateregularpolygonfromclick', [\n]);\n\n\n/**\n * A directive used to draw vector features of a single geometry type using\n * either a 'draw' or 'measure' interaction. Once a feature is finished being\n * drawn, it is added to a collection of features.\n *\n * The geometry types supported are:\n *  - Point\n *  - LineString\n *  - Polygon\n *\n * Example:\n *\n *     <a\n *       href\n *       translate\n *       ngeo-btn\n *       ngeo-createregularpolygonfromclick\n *       ngeo-createregularpolygonfromclick-active=\"ctrl.active\"\n *       ngeo-createregularpolygonfromclick-angle=\"::ctrl.angle\"\n *       ngeo-createregularpolygonfromclick-features=\"ctrl.features\"\n *       ngeo-createregularpolygonfromclick-map=\"::ctrl.map\"\n *       ngeo-createregularpolygonfromclick-radius=\"::ctrl.radius\"\n *       ngeo-createregularpolygonfromclick-sides=\"::ctrl.sides\"\n *       class=\"btn btn-default ngeo-createregularpolygonfromclick\"\n *       ng-class=\"{active: ctrl.active}\"\n *       ng-model=\"ctrl.active\">\n *     </a>\n *\n * @htmlAttribute {boolean} ngeo-createregularpolygonfromclick-active Whether\n *     the directive is active or not.\n * @htmlAttribute {number|undefined} ngeo-createregularpolygonfromclick-angle\n *     Angle in radians. A value of 0 will have one of the shape's point\n *     facing up. Default value is 0.\n * @htmlAttribute {ol.Collection} ngeo-createregularpolygonfromclick-features\n *     The collection of features where to add those created by this directive.\n * @htmlAttribute {ol.Map} ngeo-createregularpolygonfromclick-map The map.\n * @htmlAttribute {number} ngeo-createregularpolygonfromclick-radius Radius\n *     size in map units.\n * @htmlAttribute {number|undefined} ngeo-createregularpolygonfromclick-sides\n *     The number of sides for the regular polygon. Default value is 3.\n *\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname ngeoCreateregularpolygonfromclick\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoCreateregularpolygonfromclickController',\n    bindToController: true,\n    scope: {\n      'active': '=ngeoCreateregularpolygonfromclickActive',\n      'angle': '<?ngeoCreateregularpolygonfromclickAngle',\n      'features': '=ngeoCreateregularpolygonfromclickFeatures',\n      'map': '=ngeoCreateregularpolygonfromclickMap',\n      'radius': '<ngeoCreateregularpolygonfromclickRadius',\n      'sides': '<?ngeoCreateregularpolygonfromclickSides'\n    }\n  };\n};\n\nexports.directive(\n  'ngeoCreateregularpolygonfromclick',\n  exports.directive_\n);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoCreateregularpolygonfromclickController\n */\nexports.Controller_ = function($scope) {\n\n  // == Scope properties ==\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = false;\n\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      this.interaction_.setActive(newVal);\n    }\n  );\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.angle;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.radius;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.sides;\n\n\n  // == Other properties ==\n\n  /**\n   * @type {ngeo.interaction.DrawRegularPolygonFromClick}\n   * @private\n   */\n  this.interaction_;\n\n  /**\n   * @type {ol.EventsKey}\n   * @private\n   */\n  this.interactionListenerKey_;\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Initialize the directive.\n */\nexports.Controller_.prototype.$onInit = function() {\n\n  this.interaction_ = new ngeoInteractionDrawRegularPolygonFromClick({\n    angle: this.angle,\n    radius: this.radius,\n    sides: this.sides\n  });\n  this.interaction_.setActive(this.active);\n\n  this.interactionListenerKey_ = olEvents.listen(\n    this.interaction_,\n    'drawend',\n    this.handleDrawEnd_,\n    this\n  );\n\n  this.map.addInteraction(this.interaction_);\n};\n\n\n/**\n * Called when a feature is finished being drawn. Add the feature to the\n * collection.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleDrawEnd_ = function(evt) {\n  const feature = new olFeature(evt.feature.getGeometry());\n  this.features.push(feature);\n};\n\n\n/**\n * Cleanup event listeners and remove the interaction from the map.\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  olEvents.unlistenByKey(this.interactionListenerKey_);\n  this.interaction_.setActive(false);\n  this.map.removeInteraction(this.interaction_);\n};\n\n\nexports.controller(\n  'ngeoCreateregularpolygonfromclickController',\n  exports.Controller_\n);\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.toolsComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfObjecteditingGetWMSFeatureComponent from 'gmf/objectediting/getWMSFeatureComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingCreatefeatureComponent from 'ngeo/editing/createfeatureComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingCreateregularpolygonfromclickComponent from 'ngeo/editing/createregularpolygonfromclickComponent.js';\n\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfObjecteditingToolsComponent', [\n  gmfObjecteditingGetWMSFeatureComponent.name,\n  ngeoEditingCreatefeatureComponent.name,\n  ngeoEditingCreateregularpolygonfromclickComponent.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/objectediting/toolsComponent', require('./toolsComponent.html'));\n});\n\n\n/**\n * A list of additional options for this directive that are not defined as\n * html attributes. All keys of this hash are optional. For the complete list\n * of keys and their possible values, see in gmfx.js, under:\n * `gmfx.ObjectEditingToolsOptions`.\n */\nexports.value('gmfObjectEditingToolsOptions', {});\n\n\n/**\n * Directive used to edit the geometry of a single feature using advanced\n * tools.\n *\n * Example:\n *\n *     <gmf-objecteditingtools\n *         gmf-objecteditingtools-active=\"ctrl.objectEditingActive\"\n *         gmf-objecteditingtools-copyfromactive=\"ctrl.objectEditingCopyFromActive\"\n *         gmf-objecteditingtools-deletefromactive=\"ctrl.objectEditingDeleteFromActive\"\n *         gmf-objecteditingtools-feature=\"ctrl.objectEditingFeature\"\n *         gmf-objecteditingtools-geomtype=\"ctrl.objectEditingGeomType\"\n *         gmf-objecteditingtools-map=\"::ctrl.map\"\n *         gmf-objecteditingtools-process=\"::ctrl.process\"\n *         gmf-objecteditingtools-queryablelayerinfo=\"::ctrl.queryableLayerInfo\"\n *         gmf-objecteditingtools-requireslayer=\"ctrl.requiresLayer\"\n *         gmf-objecteditingtools-sketchfeatures=\"::ctrl.sketchFeatures\">\n *     </gmf-objecteditingtools>\n *\n * @htmlAttribute {boolean} gmf-objecteditingtools-active Whether the\n *     directive is active or not.\n * @htmlAttribute {boolean} gmf-objecteditingtools-copyfromactive Whether the\n *     'Copy from' tool is active or not.\n * @htmlAttribute {boolean} gmf-objecteditingtools-deletefromactive Whether the\n *     'Delete from' tool is active or not.\n * @htmlAttribute {ol.Feature} gmf-objecteditingtools-feature The feature to\n *     edit.\n * @htmlAttribute {string} gmf-objecteditingtools-geomtype The geometry type.\n * @htmlAttribute {ol.Map} gmf-objecteditingtools-map The map.\n * @htmlAttribute {string} gmf-objectediting-process Determines the\n *     behavior to adopt when sketch features are added.\n * @htmlAttribute {gmfx.ObjectEditingQueryableLayerInfo} gmf-objectediting-queryablelayerinfo\n *     Queryable layer information.\n * @htmlAttribute {boolean} gmf-objectediting-requireslayer Flag that determines\n *     if the currently active tool requires a queryable layer or not.\n * @htmlAttribute {ol.Collection.<ol.Feature>} gmf-objectediting-sketchfeatures\n *     Collection of temporary features being drawn by the tools.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfObjecteditingtools\n */\nexports.directive_ = function() {\n  return {\n    controller: 'GmfObjecteditingtoolsController as oetCtrl',\n    scope: {\n      'active': '=gmfObjecteditingtoolsActive',\n      'copyFromActive': '=gmfObjecteditingtoolsCopyfromactive',\n      'deleteFromActive': '=gmfObjecteditingtoolsDeletefromactive',\n      'feature': '<gmfObjecteditingtoolsFeature',\n      'geomType': '<gmfObjecteditingtoolsGeomtype',\n      'map': '<gmfObjecteditingtoolsMap',\n      'process': '=gmfObjecteditingtoolsProcess',\n      'queryableLayerInfo': '=gmfObjecteditingtoolsQueryablelayerinfo',\n      'requiresLayer': '=gmfObjecteditingtoolsRequireslayer',\n      'sketchFeatures': '<gmfObjecteditingtoolsSketchfeatures'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/objectediting/toolsComponent'\n  };\n};\n\nexports.directive('gmfObjecteditingtools',\n  exports.directive_);\n\n\n/**\n * @param {angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Scope.\n * @param {ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfObjecteditingtoolsController\n */\nexports.Controller_ = function($injector, $scope, ngeoToolActivateMgr) {\n\n  // == Scope properties ==\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.copyFromActive;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.deleteFromActive;\n\n  /**\n   * @type {ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {gmfx.ObjectEditingQueryableLayerInfo}\n   * @export\n   */\n  this.queryableLayerInfo;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.process;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.requiresLayer;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @export\n   */\n  this.sketchFeatures;\n\n\n  // == Injected properties ==\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n  // == Other properties ==\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.geomTypePolygon = ngeoGeometryType.POLYGON;\n\n  /**\n   * @type {Array.<string>}\n   * @private\n   */\n  this.toolActiveNames_ = [];\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawActive = false;\n\n  this.registerTool_('drawActive',\n    exports.ProcessType.ADD);\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.eraseActive = false;\n\n  this.registerTool_('eraseActive',\n    exports.ProcessType.DELETE);\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawTriangleActive = false;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.triangleAngle = Math.PI / 180 * 90; // 90 degrees\n\n  const oeToolsOptions = /** @type {gmfx.ObjectEditingToolsOptions} */ (\n    $injector.get('gmfObjectEditingToolsOptions'));\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.triangleRadius = oeToolsOptions.regularPolygonRadius !== undefined ?\n    oeToolsOptions.regularPolygonRadius : 100;\n\n  this.registerTool_('drawTriangleActive',\n    exports.ProcessType.ADD);\n\n  this.registerTool_('copyFromActive',\n    exports.ProcessType.ADD, true);\n\n  this.registerTool_('deleteFromActive',\n    exports.ProcessType.DELETE, true);\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Register a tool using its `active` property name and what behavior it should\n * have when it is active and a sketch feature is added\n *\n * This method:\n *  - registers a watcher on the tool active property to manage this directive\n *    main active property, i.e the directive is considered active when one\n *    of the tools is active,  otherwise it's not active.\n *\n *  - creates a `ngeo.misc.ToolActivate` object and registers it in a group so\n *    that only one tool can be active at a time\n *\n * @param {string} toolActiveName The name of the active property for the tool.\n * @param {string} process The behavior the tool should use when active\n *     and when sketch features are added.\n * @param {boolean=} opt_requiresLayer Whether the tool requires the queryable\n *     layer or not. Defaults to `false`.\n * @private\n */\nexports.Controller_.prototype.registerTool_ = function(\n  toolActiveName, process, opt_requiresLayer\n) {\n\n  const requiresLayer = opt_requiresLayer === true;\n\n  this.scope_.$watch(\n    () => this[toolActiveName],\n    this.handleToolActiveChange_.bind(this, process, requiresLayer)\n  );\n\n  const group = `${exports.Controller_.NAMESPACE_}-${olBase.getUid(this)}`;\n  const toolActivate = new ngeoMiscToolActivate(this, toolActiveName);\n  this.ngeoToolActivateMgr_.registerTool(group, toolActivate, false);\n\n  this.toolActiveNames_.push(toolActiveName);\n\n};\n\n\n/**\n * Called when any of the tool 'active' property changes.\n * @param {string} process The behavior the tool should use when active.\n * @param {boolean} requiresLayer Whether the tool requires the queryable\n *     layer or not.\n * @param {boolean|undefined} newVal New value.\n * @private\n */\nexports.Controller_.prototype.handleToolActiveChange_ = function(\n  process, requiresLayer, newVal\n) {\n\n  // Update process if a tool was activated.\n  if (newVal) {\n    this.process = process;\n    this.requiresLayer = requiresLayer;\n  }\n\n  // Update active property\n  let active = false;\n  for (let i = 0, ii = this.toolActiveNames_.length; i < ii; i++) {\n    active = active || this[this.toolActiveNames_[i]];\n    if (active) {\n      break;\n    }\n  }\n  this.active = active;\n\n  if (!this.active) {\n    this.requiresLayer = false;\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {};\n\n\nexports.controller('GmfObjecteditingtoolsController',\n  exports.Controller_);\n\n\n/**\n * @const\n * @private\n */\nexports.Controller_.NAMESPACE_ = 'oet';\n\n\n/**\n * @enum {string}\n */\nexports.ProcessType = {\n  ADD: 'add',\n  DELETE: 'delete'\n};\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.component\n */\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfObjecteditingGeom from 'gmf/objectediting/geom.js';\nimport gmfObjecteditingQuery from 'gmf/objectediting/Query.js';\n\n/** @suppress {extraRequire} */\nimport gmfObjecteditingToolsComponent from 'gmf/objectediting/toolsComponent.js';\n\nimport googAsserts from 'goog/asserts.js';\n\n\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\n\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport {OL3Parser} from 'jsts/io';\nconst jsts = {\n  io: {\n    OL3Parser,\n  },\n};\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfObjectEditingComponent', [\n  gmfEditingEditFeature.module.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfObjecteditingQuery.module.name,\n  gmfObjecteditingToolsComponent.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/objectediting', require('./component.html'));\n});\n\n\nexports.value('gmfObjecteditingTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfObjecteditingTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/objectediting';\n  }\n);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfObjecteditingTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfObjecteditingTemplateUrl($element, $attrs, gmfObjecteditingTemplateUrl) {\n  return gmfObjecteditingTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Component used to edit the geometry of a single feature using advanced\n * tools. The geometry must be Multi.\n *\n * Example:\n *\n *     <gmf-objectediting\n *         gmf-objectediting-active=\"ctrl.objectEditingActive\"\n *         gmf-objectediting-feature=\"ctrl.objectEditingFeature\"\n *         gmf-objectediting-geomtype=\"ctrl.objectEditingGeomType\"\n *         gmf-objectediting-layernodeid=\"ctrl.objectEditingLayerNodeId\"\n *         gmf-objectediting-map=\"::ctrl.map\"\n *         gmf-objectediting-sketchfeatures=\"::ctrl.sketchFeatures\">\n *     </gmf-objectediting>\n *\n * @htmlAttribute {boolean} gmf-objectediting-active Whether the component is\n *     active or not.\n * @htmlAttribute {ol.Feature} gmf-objectediting-feature The feature to edit.\n * @htmlAttribute {string} gmf-objectediting-geomtype The geometry type.\n * @htmlAttribute {number} gmf-objectediting-layernodeid The GMF layer node id.\n * @htmlAttribute {ol.Map} gmf-objectediting-map The map.\n * @htmlAttribute {ol.Collection.<ol.Feature>} gmf-objectediting-sketchfeatures\n *     Collection of temporary features being drawn by the tools.\n * @ngdoc component\n * @ngname gmfObjectediting\n */\nexports.component_ = {\n  controller: 'GmfObjecteditingController as oeCtrl',\n  bindings: {\n    'active': '=gmfObjecteditingActive',\n    'feature': '<gmfObjecteditingFeature',\n    'geomType': '<gmfObjecteditingGeomtype',\n    'layerNodeId': '<gmfObjecteditingLayernodeid',\n    'map': '<gmfObjecteditingMap',\n    'sketchFeatures': '<gmfObjecteditingSketchfeatures'\n  },\n  templateUrl: gmfObjecteditingTemplateUrl\n};\n\nexports.component('gmfObjectediting', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!gmf.editing.EditFeature} gmfEditFeature Gmf edit feature service.\n * @param {!gmf.objectediting.Query} gmfObjectEditingQuery Gmf ObjectEditing\n *     query service.\n * @param {!gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\ngoog.require('ngeo.map.LayerHelper');\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfObjecteditingController\n */\nexports.Controller = function($scope, $timeout, gettextCatalog,\n  gmfEditFeature, gmfObjectEditingQuery, gmfTreeManager,\n  ngeoFeatureHelper, ngeoLayerHelper, ngeoToolActivateMgr) {\n\n  // == Scope properties ==\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.layerNodeId;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @export\n   */\n  this.sketchFeatures;\n\n\n  // == Injected properties ==\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {!gmf.editing.EditFeature}\n   * @private\n   */\n  this.gmfEditFeature_ = gmfEditFeature;\n\n  /**\n   * @type {!gmf.objectediting.Query}\n   * @private\n   */\n  this.gmfObjectEditingQuery_ = gmfObjectEditingQuery;\n\n  /**\n   * @type {Array.<!gmfx.ObjectEditingQueryableLayerInfo>}\n   * @export\n   */\n  this.queryableLayersInfo;\n\n  /**\n   * @type {gmfx.ObjectEditingQueryableLayerInfo}\n   * @export\n   */\n  this.selectedQueryableLayerInfo;\n\n  /**\n   * Whether to show or hide the queryable list of layers. It is shown only\n   * when a tool requires it, which is managed in the `gmf-objecteditingtools`\n   * component.\n   * @type {boolean}\n   * @export\n   */\n  this.queryableLayerListShown = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.copyFromActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.deleteFromActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.featureHasGeom;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {!gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {!ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {!ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n\n  // == Other properties ==\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.skipGeometryChange_ = false;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.process = gmfObjecteditingToolsComponent.ProcessType.ADD;\n\n  /**\n   * @type {?ol.layer.Image|ol.layer.Tile}\n   * @private\n   */\n  this.editableWMSLayer_ = null;\n\n  /**\n   * @type {!jsts.io.OL3Parser}\n   * @private\n   */\n  this.jstsOL3Parser_ = new jsts.io.OL3Parser();\n\n  /**\n   * The state of the feature determines whether the next 'save' request\n   * should be an 'insert' or 'update' one.\n   * @type {string|undefined}\n   * @private\n   */\n  this.state_;\n\n  /**\n   * @type {!Array.<?ol.geom.Geometry>}\n   * @private\n   */\n  this.geometryChanges_ = [];\n\n  /**\n   * @type {!gmfx.StylesObject}\n   * @private\n   */\n  this.defaultStyles_ = {};\n\n  /**\n   * @type {!gmfx.StylesObject}\n   * @private\n   */\n  this.defaultStylesWoVertice_ = {};\n\n  /**\n   * @type {!gmfx.StylesObject}\n   * @private\n   */\n  this.dirtyStyles_ = {};\n\n  /**\n   * @type {!gmfx.StylesObject}\n   * @private\n   */\n  this.dirtyStylesWoVertice_ = {};\n\n  /**\n   * Flag that is toggled while a request is pending.\n   * @type {boolean}\n   * @export\n   */\n  this.pending = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.dirty = false;\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.interactions_ = new olCollection();\n\n  /**\n   * @type {!ol.interaction.Modify}\n   * @private\n   */\n  this.modify_ = new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.features_,\n    style: ngeoFeatureHelper.getVertexStyle(false)\n  });\n  this.interactions_.push(this.modify_);\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @private\n   */\n  this.modifyToolActivate_ = new ngeoMiscToolActivate(this.modify_, 'active');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.toolsActive = false;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @private\n   */\n  this.toolsToolActivate_ = new ngeoMiscToolActivate(this, 'toolsActive');\n};\n\n/**\n * Init the controller\n */\nexports.Controller.prototype.$onInit = function() {\n  this.gmfObjectEditingQuery_.getQueryableLayersInfo().then(\n    this.handleGetQueryableLayersInfo_.bind(this)\n  );\n\n  this.scope_.$watchCollection(\n    () => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    },\n    (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(\n            this.registerTreeCtrl_.bind(this)\n          );\n        }\n      });\n    }\n  );\n\n  const geometry = this.feature.getGeometry();\n  this.state_ = geometry ? exports.Controller.State.UPDATE :\n    exports.Controller.State.INSERT;\n\n  this.scope_.$watchCollection(\n    () => this.geometryChanges_,\n    (newVal, oldVal) => {\n      if (newVal.length) {\n        if (newVal.length === 1) {\n          this.dirty = false;\n        } else {\n          this.dirty = true;\n        }\n      }\n    }\n  );\n\n  const defaultColor = [39, 155, 145];\n  const dirtyColor = [153, 51, 51];\n  this.initializeStyles_(this.defaultStyles_, defaultColor);\n  this.initializeStyles_(this.defaultStylesWoVertice_, defaultColor, false);\n  this.initializeStyles_(this.dirtyStyles_, dirtyColor);\n  this.initializeStyles_(this.dirtyStylesWoVertice_, dirtyColor, false);\n\n  this.scope_.$watch(\n    () => this.dirty,\n    this.setFeatureStyle_.bind(this)\n  );\n\n  this.features_.push(this.feature);\n\n  this.featureHasGeom = !gmfObjecteditingGeom.isEmpty(geometry);\n\n  // Toggle on\n  this.initializeInteractions_();\n  this.registerInteractions_();\n  this.toggle_(true);\n  this.resetGeometryChanges_();\n\n  this.scope_.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n// == API methods ==\n\n\n/**\n * Delete the feature after asking for a confirmation.\n * @export\n */\nexports.Controller.prototype.delete = function() {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete the feature?');\n  // Confirm deletion first\n  if (confirm(msg)) {\n    this.dirty = false;\n    this.pending = true;\n\n    this.gmfEditFeature_.deleteFeature(\n      this.layerNodeId,\n      this.feature\n    ).then(\n      this.handleDeleteFeature_.bind(this)\n    );\n  }\n\n};\n\n\n/**\n * Save the current modifications.\n * @export\n */\nexports.Controller.prototype.save = function() {\n\n  this.pending = true;\n\n  // The geometry of the feature may contain Z in its coordinates, which\n  // GMF doesn't support.  This section ensures that the geometry gets purged\n  // of all Z from the coordinates before saving.\n  //\n  // Also, this is only done before saving on a clone of the feature. Doing\n  // it directly on the feature makes JSTS complain.\n  const feature = this.feature.clone();\n  feature.setId(this.feature.getId());\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    gmfObjecteditingGeom.toXY(geometry);\n  }\n\n  if (this.state_ === exports.Controller.State.INSERT) {\n    this.gmfEditFeature_.insertFeatures(\n      this.layerNodeId,\n      [feature]\n    ).then(\n      this.handleEditFeature_.bind(this)\n    );\n  } else if (this.state_ === exports.Controller.State.UPDATE) {\n    this.gmfEditFeature_.updateFeature(\n      this.layerNodeId,\n      feature\n    ).then(\n      this.handleEditFeature_.bind(this)\n    );\n  }\n};\n\n\n/**\n * Undo the latest modifications.\n * @export\n */\nexports.Controller.prototype.undo = function() {\n\n  if (this.geometryChanges_.length <= 1) {\n    return;\n  }\n\n  this.skipGeometryChange_ = true;\n\n  this.geometryChanges_.pop();\n  const clone = exports.Controller.cloneGeometry_(\n    this.geometryChanges_[this.geometryChanges_.length - 1]);\n\n  this.feature.setGeometry(clone);\n\n  this.skipGeometryChange_ = false;\n};\n\n\n/**\n * Undo the latest modifications.\n * @return {boolean} Whether the state is INSERT or not.\n * @export\n */\nexports.Controller.prototype.isStateInsert = function() {\n  return this.state_ === exports.Controller.State.INSERT;\n};\n\n\n// == Private methods ==\n\n\n/**\n * Called after a delete request.\n * @param {angular.$http.Response} resp Ajax response.\n * @private\n */\nexports.Controller.prototype.handleDeleteFeature_ = function(resp) {\n  this.feature.setGeometry(null);\n  this.resetGeometryChanges_();\n  this.state_ = exports.Controller.State.INSERT;\n  this.pending = false;\n  this.refreshWMSLayer_();\n};\n\n\n/**\n * Called after an 'insert' or 'update' request.\n * @param {angular.$http.Response} resp Ajax response.\n * @private\n */\nexports.Controller.prototype.handleEditFeature_ = function(resp) {\n  // (1) Update the id\n  const features = new olFormatGeoJSON().readFeatures(resp.data);\n  if (features.length) {\n    this.feature.setId(features[0].getId());\n  }\n  // (2) Reset geometry changes\n  this.resetGeometryChanges_();\n  // (3) Update state\n  if (this.feature.getGeometry()) {\n    this.state_ = exports.Controller.State.UPDATE;\n  } else {\n    this.state_ = exports.Controller.State.INSERT;\n  }\n  // (4) No longer pending\n  this.pending = false;\n  // (5) Refresh WMS layer\n  this.refreshWMSLayer_();\n};\n\n\n/**\n * Initialize interactions by setting them inactive and decorating them\n * @private\n */\nexports.Controller.prototype.initializeInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    interaction.setActive(false);\n    ngeoMiscDecorate.interaction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by adding them to the map\n * @private\n */\nexports.Controller.prototype.registerInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.addInteraction(interaction);\n  });\n};\n\n\n/**\n * Unregister interactions, i.e. remove them from the map\n * @private\n */\nexports.Controller.prototype.unregisterInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.removeInteraction(interaction);\n  });\n};\n\n\n/**\n * Activate or deactivate this component.\n * @param {boolean} active Whether to activate this component or not.\n * @private\n */\nexports.Controller.prototype.toggle_ = function(active) {\n\n  const keys = this.listenerKeys_;\n  const uid = `${exports.Controller.NAMESPACE_}-${olBase.getUid(this)}`;\n  const toolMgr = this.ngeoToolActivateMgr_;\n\n  if (active) {\n\n    keys.push(\n      olEvents.listen(\n        this.feature,\n        `change:${this.feature.getGeometryName()}`,\n        this.handleFeatureGeometryChange_,\n        this\n      )\n    );\n\n    keys.push(\n      olEvents.listen(\n        this.modify_,\n        'change:active',\n        this.setFeatureStyle_,\n        this\n      )\n    );\n\n    keys.push(\n      olEvents.listen(\n        this.modify_,\n        'modifyend',\n        this.handleModifyInteractionModifyEnd_,\n        this\n      )\n    );\n\n    keys.push(\n      olEvents.listen(\n        window,\n        'beforeunload',\n        this.handleWindowBeforeUnload_,\n        this\n      )\n    );\n\n    keys.push(\n      olEvents.listen(\n        this.sketchFeatures,\n        'add',\n        this.handleSketchFeaturesAdd_,\n        this\n      )\n    );\n\n    toolMgr.registerTool(uid, this.modifyToolActivate_, true);\n    toolMgr.registerTool(uid, this.toolsToolActivate_, false);\n\n  } else {\n\n    this.undoAllChanges_();\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n\n    toolMgr.unregisterTool(uid, this.modifyToolActivate_);\n    toolMgr.unregisterTool(uid, this.toolsToolActivate_);\n\n  }\n\n  this.modify_.setActive(active);\n};\n\n\n/**\n * Undo all current changes.\n * @private\n */\nexports.Controller.prototype.undoAllChanges_ = function() {\n  const clone = exports.Controller.cloneGeometry_(\n    this.geometryChanges_[0]);\n  this.feature.setGeometry(clone);\n\n  this.resetGeometryChanges_();\n  this.dirty = false;\n  this.setFeatureStyle_();\n};\n\n\n/**\n * Reset the array of geometry changes.  If there are more than one changes,\n * reset them entirely. Then, if there's no changes, clone the current geometry\n * as the first entry. One entry means that there's no changes.\n * @private\n */\nexports.Controller.prototype.resetGeometryChanges_ = function() {\n  if (this.geometryChanges_.length > 1) {\n    this.geometryChanges_.length = 0;\n  }\n  if (this.geometryChanges_.length === 0) {\n    const geometry = this.feature.getGeometry();\n    const clone = exports.Controller.cloneGeometry_(geometry);\n    this.geometryChanges_.push(clone);\n  }\n};\n\n\n/**\n * Called after the modification interaction has completed modifying the\n * existing geometry. The new geometry is pushed in the changes array.\n * If the geometry type is `MultiPolygon`, we check if any of the inner\n * geometries intersects with one an other first. Those that does are merged\n * before being pushed to the changes.\n *\n * @param {ol.interaction.Modify.Event} evt Event.\n * @private\n */\nexports.Controller.prototype.handleModifyInteractionModifyEnd_ = function(\n  evt\n) {\n  let geometry = this.feature.getGeometry();\n\n  if (geometry instanceof olGeomMultiPolygon) {\n    const jstsGeom = this.jstsOL3Parser_.read(geometry);\n    const jstsBuffered = jstsGeom.buffer(0);\n    geometry = ngeoUtils.toMulti(this.jstsOL3Parser_.write(jstsBuffered));\n    this.skipGeometryChange_ = true;\n    this.feature.setGeometry(geometry.clone());\n    this.skipGeometryChange_ = false;\n  }\n\n  const clone = exports.Controller.cloneGeometry_(geometry);\n  googAsserts.assert(clone);\n  this.geometryChanges_.push(clone);\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {gmfx.StylesObject} styles Hash of style.\n * @param {ol.Color} color Color.\n * @param {boolean=} opt_incVertice Whether to include vertice or not. Defaults\n *     to `true`.\n * @private\n */\nexports.Controller.prototype.initializeStyles_ = function(\n  styles, color, opt_incVertice\n) {\n\n  const incVertice = opt_incVertice !== false;\n  const rgbaColor = color.slice();\n  rgbaColor.push(0.3);\n\n  const image = new olStyleCircle({\n    radius: 8,\n    stroke: new olStyleStroke({\n      color: color,\n      width: 1\n    }),\n    fill: new olStyleFill({color: rgbaColor})\n  });\n\n  styles['Point'] = new olStyleStyle({\n    image\n  });\n  styles['MultiPoint'] = new olStyleStyle({\n    image\n  });\n\n  styles['LineString'] = [\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: color,\n        width: 3\n      })\n    })\n  ];\n  if (incVertice) {\n    styles['LineString'].push(\n      this.ngeoFeatureHelper_.getVertexStyle(true)\n    );\n  }\n  styles['MultiLineString'] = [\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: color,\n        width: 3\n      })\n    })\n  ];\n  if (incVertice) {\n    styles['MultiLineString'].push(\n      this.ngeoFeatureHelper_.getVertexStyle(true)\n    );\n  }\n\n  styles['Polygon'] = [\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: color,\n        width: 2\n      }),\n      fill: new olStyleFill({\n        color: rgbaColor\n      })\n    })\n  ];\n  if (incVertice) {\n    styles['Polygon'].push(\n      this.ngeoFeatureHelper_.getVertexStyle(true)\n    );\n  }\n  styles['MultiPolygon'] = [\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: color,\n        width: 2\n      }),\n      fill: new olStyleFill({\n        color: rgbaColor\n      })\n    })\n  ];\n  if (incVertice) {\n    styles['MultiPolygon'].push(\n      this.ngeoFeatureHelper_.getVertexStyle(true)\n    );\n  }\n\n};\n\n\n/**\n * Set the style of the feature depending on:\n *  - the geometry type\n *  - the dirty state of the component\n *  - whether the modify control is active or not\n *\n * @private\n */\nexports.Controller.prototype.setFeatureStyle_ = function() {\n  const geometry = this.feature.getGeometry();\n  if (geometry) {\n    const geomType = geometry.getType();\n    const modifyActive = this.modify_.getActive();\n    let style;\n    if (this.dirty) {\n      if (modifyActive) {\n        style = this.dirtyStyles_[geomType];\n      } else {\n        style = this.dirtyStylesWoVertice_[geomType];\n      }\n    } else {\n      if (modifyActive) {\n        style = this.defaultStyles_[geomType];\n      } else {\n        style = this.defaultStylesWoVertice_[geomType];\n      }\n    }\n    this.feature.setStyle(style);\n  }\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf', i.e. groups are\n * excluded.\n *\n * If the Layertree controller node id is equal to the `layerNodeId` configured\n * with this component, then find the WMS layer associated with it for\n * for refresh purpose.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.Controller.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  const node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (\n    treeCtrl.node);\n  if (node.children && node.children.length) {\n    return;\n  }\n\n  // Set editable WMS layer for refresh purpose\n  if (node.id === this.layerNodeId) {\n    const layer = gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl);\n    googAsserts.assert(\n      layer instanceof olLayerImage || layer instanceof olLayerTile);\n    this.editableWMSLayer_ = layer;\n  }\n\n};\n\n\n/**\n * Unregisters all currently registered Layertree controllers.\n *\n * Unset the WMS layer associated with the `layerNodeId` configured with\n * this component.\n *\n * @private\n */\nexports.Controller.prototype.unregisterAllTreeCtrl_ = function() {\n  this.editableWMSLayer_ = null;\n};\n\n\n/**\n * Refresh the WMS layer, if set.\n * @private\n */\nexports.Controller.prototype.refreshWMSLayer_ = function() {\n  if (this.editableWMSLayer_) {\n    this.ngeoLayerHelper_.refreshWMSLayer(this.editableWMSLayer_);\n  }\n};\n\n\n/**\n * Called before the window unloads. Show a confirmation message if there are\n * unsaved modifications.\n * @param {Event} e Event.\n * @return {string} Message\n * @private\n */\nexports.Controller.prototype.handleWindowBeforeUnload_ = function(e) {\n  const gettextCatalog = this.gettextCatalog_;\n  if (this.dirty) {\n    const msg = gettextCatalog.getString('There are unsaved changes.');\n    (e || window.event).returnValue = msg;\n    return msg;\n  }\n  return '';\n};\n\n\n/**\n * Called when a feature is added to the collection of sketch features.\n * Depending on the current behaviour, use the added sketch feature to process\n * the existing geometry.\n *\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller.prototype.handleSketchFeaturesAdd_ = function(evt) {\n  const sketchFeature = /** @type {ol.Feature} */ (evt.element);\n  const sketchGeom = /** @type {ol.geom.Geometry} */ (\n    sketchFeature.getGeometry());\n\n  const geom = this.feature.getGeometry();\n\n  if (geom) {\n    const jstsGeom = this.jstsOL3Parser_.read(geom);\n    const jstsSketchGeom = this.jstsOL3Parser_.read(sketchGeom);\n    let jstsProcessedGeom;\n\n    if (this.process === gmfObjecteditingToolsComponent.ProcessType.ADD) {\n      jstsProcessedGeom = jstsGeom.union(jstsSketchGeom);\n    } else {\n      if (jstsGeom.intersects(jstsSketchGeom)) {\n        jstsProcessedGeom = jstsGeom.difference(jstsSketchGeom);\n      }\n    }\n\n    if (jstsProcessedGeom) {\n      const processedGeom = this.jstsOL3Parser_.write(jstsProcessedGeom);\n      const multiGeom = ngeoUtils.toMulti(processedGeom);\n      this.feature.setGeometry(multiGeom.clone());\n    }\n\n  } else if (this.process === gmfObjecteditingToolsComponent.ProcessType.ADD) {\n    this.feature.setGeometry(ngeoUtils.toMulti(sketchGeom.clone()));\n  }\n\n  this.sketchFeatures.clear();\n};\n\n\n/**\n * Called when the geometry property of the feature changes, i.e. not when the\n * geometry itself changes but when a new geometry is set to the feature.\n *\n * This happens either when resetting the geometry to null, in which case\n * there's nothing to do here. Otherwise, it happens after the combinaison\n * of a sketch geometry with the existing feature geometry. This new geom\n * is pushed in the `geometryChanges_` array.\n *\n * @private\n */\nexports.Controller.prototype.handleFeatureGeometryChange_ = function() {\n  const geom = this.feature.getGeometry();\n  this.timeout_(() => {\n    this.featureHasGeom = !gmfObjecteditingGeom.isEmpty(geom);\n  });\n\n  if (this.skipGeometryChange_) {\n    return;\n  }\n\n  if (geom) {\n    // Use a timeout here, because there can be a scope digest already in\n    // progress. For example, with tools that requires the user to draw\n    // features on the map, we would need to manually call:\n    // this.scope_.$apply();\n    // For tools that use promises instead, such as the \"copy/delete\" from,\n    // a scope is already in progress so we must not invoke it again.\n    this.timeout_(() => {\n      this.geometryChanges_.push(geom.clone());\n    });\n  }\n};\n\n\n/**\n * @param {Array.<gmfx.ObjectEditingQueryableLayerInfo>} layersInfo List\n *     of queryable layers information, which contains the node and ogcServer.\n * @private\n */\nexports.Controller.prototype.handleGetQueryableLayersInfo_ = function(layersInfo) {\n  this.queryableLayersInfo = layersInfo;\n  if (this.queryableLayersInfo.length) {\n    this.selectedQueryableLayerInfo = this.queryableLayersInfo[0];\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller.prototype.handleDestroy_ = function() {\n  this.features_.clear();\n  this.toggle_(false);\n  this.unregisterInteractions_();\n};\n\n\n// == Static methods and type definitions ==\n\n\n/**\n * Utility method that gets the clone of a geometry, which can be null or\n * undefined. In the latter case, a null value is returned instead of a\n * geometry.\n * @param {?ol.geom.Geometry|undefined} geometry A geometry, undefined or\n *     null value.\n * @return {?ol.geom.Geometry} A geometry clone or null value.\n * @private\n */\nexports.Controller.cloneGeometry_ = function(geometry) {\n  let clone = null;\n  if (geometry) {\n    clone = geometry.clone();\n  }\n  return clone;\n};\n\n\n/**\n * @const\n * @private\n */\nexports.Controller.NAMESPACE_ = 'oe';\n\n\n/**\n * @enum {string}\n */\nexports.Controller.State = {\n  INSERT: 'insert',\n  UPDATE: 'update'\n};\n\n\nexports.controller('GmfObjecteditingController',\n  exports.Controller);\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.Manager\n */\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * A service that looks for certain parameters in the url and use them to fetch\n * a feature using the GMF protocol.\n *\n * @param {angular.$q} $q Angular $q service.\n * @param {gmf.editing.EditFeature} gmfEditFeature Gmf edit feature service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @constructor\n * @struct\n * @ngInject\n */\nconst exports = function($q, gmfEditFeature, ngeoLocation) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {gmf.editing.EditFeature}\n   * @private\n   */\n  this.gmfEditFeature_ = gmfEditFeature;\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {angular.$q.Deferred|null}\n   * @private\n   */\n  this.getFeatureDefered_ = null;\n\n};\n\n\n/**\n * Use the EditFeature service to fetch a single feature using parameters in\n * the url. The method returns a promise that has the feature as argument in\n * the callback method. If any parameter in the url is missing, `null` is\n * returned, otherwise the query is made. If the query returns a feature, it\n * is returned, otherwise one is created with empty geometry and with the\n * property set.\n *\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getFeature = function() {\n\n  if (!this.getFeatureDefered_) {\n    this.getFeatureDefered_ = this.q_.defer();\n\n    const geomType = this.ngeoLocation_.getParam(\n      exports.Param.GEOM_TYPE);\n    const id = this.ngeoLocation_.getParam(\n      exports.Param.ID);\n    const layer = this.ngeoLocation_.getParam(\n      exports.Param.LAYER);\n    const property = this.ngeoLocation_.getParam(\n      exports.Param.PROPERTY);\n    const theme = this.ngeoLocation_.getParam(\n      exports.Param.THEME);\n\n    if (geomType && id && layer && property && theme) {\n      this.gmfEditFeature_.getFeaturesWithComparisonFilters(\n        [layer],\n        [{\n          operator: 'eq',\n          property: property,\n          value: id\n        }]\n      ).then(this.handleGetFeatures_.bind(this, property, id));\n    } else {\n      this.getFeatureDefered_.resolve(null);\n    }\n  }\n\n  return this.getFeatureDefered_.promise;\n\n};\n\n\n/**\n * @return {string|undefined} The geometry type.\n * @export\n */\nexports.prototype.getGeomType = function() {\n  return this.ngeoLocation_.getParam(\n    exports.Param.GEOM_TYPE);\n};\n\n\n/**\n * @return {number|undefined} The gmf layer node id.\n * @export\n */\nexports.prototype.getLayerNodeId = function() {\n  return this.ngeoLocation_.getParamAsInt(\n    exports.Param.LAYER);\n};\n\n\n/**\n * Called after getting features with comparison filters. Resolve the deferred\n * promise with the first returned feature (if any), otherwise resolve it\n * with a feature created with an empty geometry and the property key + value\n * that was used in the attempt to fetch it.\n *\n * @param {string} key Property key.\n * @param {string} value Property value.\n * @param {Array.<ol.Feature>} features List of features.\n * @private\n */\nexports.prototype.handleGetFeatures_ = function(key, value, features) {\n  let feature;\n\n  if (features.length) {\n    feature = features[0];\n  } else {\n    const featureProperties = {};\n    featureProperties[key] = value;\n    featureProperties['geometry'] = null;\n    feature = new olFeature(featureProperties);\n  }\n\n  this.getFeatureDefered_.resolve(feature);\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Param = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GEOM_TYPE: 'objectediting_geomtype',\n  /**\n   * @type {string}\n   * @export\n   */\n  ID: 'objectediting_id',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAYER: 'objectediting_layer',\n  /**\n   * @type {string}\n   * @export\n   */\n  PROPERTY: 'objectediting_property',\n  /**\n   * @type {string}\n   * @export\n   */\n  THEME: 'objectediting_theme'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfObjectEditingManager', [\n  gmfEditingEditFeature.module.name,\n  ngeoStatemanagerLocation.module.name,\n]);\nexports.module.service('gmfObjectEditingManager', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.module\n */\nimport gmfObjecteditingComponent from 'gmf/objectediting/component.js';\nimport gmfObjecteditingGetWMSFeatureComponent from 'gmf/objectediting/getWMSFeatureComponent.js';\nimport gmfObjecteditingManager from 'gmf/objectediting/Manager.js';\nimport gmfObjecteditingQuery from 'gmf/objectediting/Query.js';\nimport gmfObjecteditingToolsComponent from 'gmf/objectediting/toolsComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfObjecteditingModule', [\n  gmfObjecteditingComponent.name,\n  gmfObjecteditingGetWMSFeatureComponent.name,\n  gmfObjecteditingManager.module.name,\n  gmfObjecteditingQuery.module.name,\n  gmfObjecteditingToolsComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.EPSG2056\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\nimport somerc from 'ngeo/proj/somerc.js';\nimport proj4 from 'proj4';\n\nconst epsg2056def = [\n  `+proj=${somerc}`,\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=2600000',\n  '+y_0=1200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg2056extent = [2420000, 1030000, 2900000, 1350000];\n\nproj4.defs('EPSG:2056', epsg2056def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:2056').setExtent(epsg2056extent);\n\nconst exports = 'EPSG:2056';\n\n\nexport default exports;\n","/**\n * @module app.oeedit.Controller\n */\n/**\n * Application entry point.\n *\n * This file includes `goog.require`'s for all the components/directives used\n * by the HTML page and the controller to provide the configuration.\n */\n\nimport gmfControllersAbstractDesktopController from 'gmf/controllers/AbstractDesktopController.js';\nimport './less/main.less';\nimport appBase from '../appmodule.js';\nimport gmfObjecteditingModule from 'gmf/objectediting/module.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoProjEPSG2056 from 'ngeo/proj/EPSG2056.js';\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport Raven from 'raven-js/src/raven.js';\nimport RavenPluginsAngular from 'raven-js/plugins/angular.js';\n\nif (!window.requestAnimationFrame) {\n  alert('Your browser is not supported, please update it or use another one. You will be redirected.\\n\\n'\n    + 'Votre navigateur n\\'est pas supporté, veuillez le mettre à jour ou en utiliser un autre. Vous allez être redirigé.\\n\\n'\n    + 'Ihr Browser wird nicht unterstützt, bitte aktualisieren Sie ihn oder verwenden Sie einen anderen. Sie werden weitergeleitet.');\n  window.location = 'http://geomapfish.org/';\n}\n\n/**\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @constructor\n * @extends {gmf.controllers.AbstractDesktopController}\n * @ngInject\n * @export\n */\nconst exports = function($scope, $injector, $timeout) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.oeEditActive = false;\n\n  gmfControllersAbstractDesktopController.call(this, {\n    srid: 21781,\n    mapViewConfig: {\n      center: [632464, 185457],\n      zoom: 3,\n      resolutions: [250, 100, 50, 20, 10, 5, 2, 1, 0.5, 0.25, 0.1, 0.05]\n    }\n  }, $scope, $injector);\n\n  /**\n   * The ngeo ToolActivate manager service.\n   * @type {ngeo.misc.ToolActivateMgr}\n   */\n  const ngeoToolActivateMgr = $injector.get('ngeoToolActivateMgr');\n\n  ngeoToolActivateMgr.unregisterGroup('mapTools');\n\n  const oeEditToolActivate = new ngeoMiscToolActivate(this, 'oeEditActive');\n  ngeoToolActivateMgr.registerTool('mapTools', oeEditToolActivate, true);\n\n  const queryToolActivate = new ngeoMiscToolActivate(this, 'queryActive');\n  ngeoToolActivateMgr.registerTool('mapTools', queryToolActivate, false);\n\n  // Set edit tool as default active one\n  $timeout(() => {\n    this.oeEditActive = true;\n  });\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.vectorSource_ = new olSourceVector({\n    wrapX: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: this.vectorSource_\n  });\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @export\n   */\n  this.sketchFeatures = new olCollection();\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      features: this.sketchFeatures,\n      wrapX: false\n    })\n  });\n\n  /**\n   * @type {gmf.theme.Themes} gmfObjectEditingManager The gmf theme service\n   */\n  const gmfThemes = $injector.get('gmfThemes');\n\n  gmfThemes.getThemesObject().then((themes) => {\n    if (themes) {\n      // Add layer vector after\n      this.map.addLayer(this.vectorLayer_);\n      this.map.addLayer(this.sketchLayer_);\n    }\n  });\n\n  /**\n   * @type {gmf.objectediting.Manager} gmfObjectEditingManager The gmf\n   *     ObjectEditing manager service.\n   */\n  const gmfObjectEditingManager = $injector.get('gmfObjectEditingManager');\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.oeGeomType = gmfObjectEditingManager.getGeomType();\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.oeLayerNodeId = gmfObjectEditingManager.getLayerNodeId();\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.oeFeature = null;\n\n  gmfObjectEditingManager.getFeature().then((feature) => {\n    this.oeFeature = feature;\n    if (feature) {\n      this.vectorSource_.addFeature(feature);\n    }\n  });\n\n  /**\n   * @type {Array.<string>}\n   * @export\n   */\n  this.searchCoordinatesProjections = [ngeoProjEPSG21781, ngeoProjEPSG2056, 'EPSG:4326'];\n\n  /**\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scaleSelectorValues = [250000, 100000, 50000, 20000, 10000, 5000, 2000, 1000, 500, 250, 100, 50];\n\n  /**\n   * @type {Array.<string>}\n   * @export\n   */\n  this.elevationLayers = ['aster', 'srtm'];\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.selectedElevationLayer = this.elevationLayers[0];\n\n  /**\n   * @type {Object.<string, gmfx.ProfileLineConfiguration>}\n   * @export\n   */\n  this.profileLinesconfiguration = {\n    'aster': {color: '#0000A0'},\n    'srtm': {color: '#00A000'}\n  };\n\n  /**\n   * @type {Array.<gmfx.MousePositionProjection>}\n   * @export\n   */\n  this.mousePositionProjections = [{\n    code: ngeoProjEPSG2056,\n    label: 'CH1903+ / LV95',\n    filter: 'ngeoNumberCoordinates::{x}, {y} m'\n  }, {\n    code: ngeoProjEPSG21781,\n    label: 'CH1903 / LV03',\n    filter: 'ngeoNumberCoordinates::{x}, {y} m'\n  }, {\n    code: 'EPSG:4326',\n    label: 'WGS84',\n    filter: 'ngeoDMSCoordinates:2'\n  }];\n\n  // Allow angular-gettext-tools to collect the strings to translate\n  /** @type {angularGettext.Catalog} */\n  const gettextCatalog = $injector.get('gettextCatalog');\n  gettextCatalog.getString('Add a theme');\n  gettextCatalog.getString('Add a sub theme');\n  gettextCatalog.getString('Add a layer');\n\n  if ($injector.has('sentryUrl')) {\n    const options = $injector.has('sentryOptions') ? $injector.get('sentryOptions') : undefined;\n    const raven = new Raven();\n    raven.config($injector.get('sentryUrl'), options)\n      .addPlugin(RavenPluginsAngular)\n      .install();\n  }\n};\n\nolBase.inherits(exports, gmfControllersAbstractDesktopController);\n\nexports.module = angular.module('Appoeedit', [\n  appBase.module.name,\n  gmfControllersAbstractDesktopController.module.name,\n  gmfObjecteditingModule.name,\n]);\n\nexports.module.value('gmfContextualdatacontentTemplateUrl', 'gmf/contextualdata');\nexports.module.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/contextualdata', require('./contextualdata.html'));\n});\n\nexports.module.controller('OEEditController', exports);\n\nexport default exports;\n","module.exports = \"<table> <tr> <td translate> Swiss grid (LV03) </td> <td> {{coord_21781|ngeoNumberCoordinates:0:'{x} / {y}'}} </td> </tr> <tr> <td translate> Wgs Coord. </td> <td> {{coord_4326|ngeoNumberCoordinates:2:'{y} / {x}'}} </td> </tr> <tr> <td translate> Wgs Coord. DMS </td> <td> {{coord_4326|ngeoDMSCoordinates:0:'{y} {x}'}} </td> </tr> <tr> <td translate> Elevation (SRTM) </td> <td> {{srtm | number}} [m] </td> </tr> <tr> <td translate> Elevation (Aster) </td> <td> {{aster | number}} [m] </td> </tr> </table> <a ng-href=\\\"https://maps.google.ch/?ie=UTF8&ll={{coord_4326_northern}},{{coord_4326_eastern}}&layer=c&cbll={{coord_4326_northern}},{{coord_4326_eastern}}&cbp=12,57.78,,0,8.1\\\" target=_blank>Google StreetView</a> \";","module.exports = \"<gmf-objecteditingtools gmf-objecteditingtools-active=oeCtrl.toolsActive gmf-objecteditingtools-copyfromactive=oeCtrl.copyFromActive gmf-objecteditingtools-deletefromactive=oeCtrl.deleteFromActive gmf-objecteditingtools-feature=oeCtrl.feature gmf-objecteditingtools-geomtype=::oeCtrl.geomType gmf-objecteditingtools-map=::oeCtrl.map gmf-objecteditingtools-process=oeCtrl.process gmf-objecteditingtools-queryablelayerinfo=oeCtrl.selectedQueryableLayerInfo gmf-objecteditingtools-requireslayer=oeCtrl.queryableLayerListShown gmf-objecteditingtools-sketchfeatures=::oeCtrl.sketchFeatures> </gmf-objecteditingtools> <div class=form-group ng-show=oeCtrl.queryableLayerListShown> <label ng-show=\\\"oeCtrl.copyFromActive === true\\\" class=control-label>{{'Copy from:' | translate}}</label> <label ng-show=\\\"oeCtrl.deleteFromActive === true\\\" class=control-label>{{'Cut from:' | translate}}</label> <select class=form-control ng-model=oeCtrl.selectedQueryableLayerInfo ng-options=\\\"layerInfo.layerNode.name | translate for layerInfo in oeCtrl.queryableLayersInfo\\\"> </select> </div> <form novalidate name=form class=\\\"form gmf-objectediting-form\\\"> <input type=submit value=\\\"{{'Save' | translate}}\\\" class=\\\"btn btn-sm btn-default gmf-objectediting-btn-save\\\" ng-click=\\\"form.$valid && oeCtrl.save()\\\" ng-disabled=\\\"!oeCtrl.dirty || oeCtrl.pending || !oeCtrl.featureHasGeom\\\" title=\\\"{{'Save modifications' | translate}}\\\"> <a class=\\\"btn btn-sm btn-link gmf-objectediting-btn-undo\\\" ng-click=oeCtrl.undo() ng-disabled=\\\"!oeCtrl.dirty || oeCtrl.pending\\\" title=\\\"{{'Undo latest modifications' | translate}}\\\" href>{{'Undo' | translate}}</a> <a class=\\\"btn btn-sm btn-link gmf-objectediting-btn-delete\\\" ng-click=oeCtrl.delete() ng-disabled=\\\"oeCtrl.isStateInsert() || oeCtrl.pending\\\" title=\\\"{{'Delete the feature' | translate}}\\\" href>{{'Delete' | translate}}</a> </form> \";","module.exports = \"<div class=btn-group role=group aria-label=\\\"\\\"> <a href ngeo-btn ngeo-createfeature ngeo-createfeature-active=oetCtrl.drawActive ngeo-createfeature-features=::oetCtrl.sketchFeatures ngeo-createfeature-geom-type=::oetCtrl.geomType ngeo-createfeature-map=::oetCtrl.map class=\\\"btn btn-sm btn-default\\\" ng-class=\\\"{active: oetCtrl.drawActive}\\\" ng-if=\\\"::(oetCtrl.geomType === 'MultiPoint')\\\" ng-model=oetCtrl.drawActive title=\\\"{{'Add a point to the geometry' | translate}}\\\"> <span class=\\\"fa fa-plus-square-o gmf-icon-oe-draw\\\"> </span> </a> <a href ngeo-btn ngeo-createfeature ngeo-createfeature-active=oetCtrl.drawActive ngeo-createfeature-features=::oetCtrl.sketchFeatures ngeo-createfeature-geom-type=::oetCtrl.geomType ngeo-createfeature-map=::oetCtrl.map class=\\\"btn btn-sm btn-default\\\" ng-class=\\\"{active: oetCtrl.drawActive}\\\" ng-if=\\\"::(oetCtrl.geomType === 'MultiLineString')\\\" ng-model=oetCtrl.drawActive title=\\\"{{'Add a linestring to the geometry' | translate}}\\\"> <span class=\\\"fa fa-plus-square-o gmf-icon-oe-draw\\\"> </span> </a> <a href ngeo-btn ngeo-createfeature ngeo-createfeature-active=oetCtrl.drawActive ngeo-createfeature-features=::oetCtrl.sketchFeatures ngeo-createfeature-geom-type=::oetCtrl.geomType ngeo-createfeature-map=::oetCtrl.map class=\\\"btn btn-sm btn-default\\\" ng-class=\\\"{active: oetCtrl.drawActive}\\\" ng-if=\\\"::(oetCtrl.geomType === 'MultiPolygon')\\\" ng-model=oetCtrl.drawActive title=\\\"{{'Add a polygon to the geometry' | translate}}\\\"> <span class=\\\"fa fa-plus-square-o gmf-icon-oe-draw\\\"> </span> </a> <a href ngeo-btn ngeo-createfeature ngeo-createfeature-active=oetCtrl.eraseActive ngeo-createfeature-features=::oetCtrl.sketchFeatures ngeo-createfeature-geom-type=::oetCtrl.geomTypePolygon ngeo-createfeature-map=::oetCtrl.map class=\\\"btn btn-sm btn-default\\\" ng-class=\\\"{active: oetCtrl.eraseActive}\\\" ng-model=oetCtrl.eraseActive title=\\\"{{'Erase geometry' | translate}}\\\"> <span class=\\\"fa fa-minus-square-o gmf-icon-oe-erase\\\"> </span> </a> <a href ng-if=\\\"::oetCtrl.geomType === 'MultiPolygon'\\\" ngeo-btn ngeo-createregularpolygonfromclick ngeo-createregularpolygonfromclick-active=oetCtrl.drawTriangleActive ngeo-createregularpolygonfromclick-angle=oetCtrl.triangleAngle ngeo-createregularpolygonfromclick-features=::oetCtrl.sketchFeatures ngeo-createregularpolygonfromclick-map=::oetCtrl.map ngeo-createregularpolygonfromclick-radius=::oetCtrl.triangleRadius class=\\\"btn btn-sm btn-default ngeo-createregularpolygonfromclick\\\" ng-class=\\\"{active: oetCtrl.drawTriangleActive}\\\" ng-model=oetCtrl.drawTriangleActive title=\\\"{{'Draw a triangle' | translate}}\\\"> <span class=\\\"fa fa-play fa-rotate-270 gmf-icon-oe-triangle\\\"> </span> </a> <a href ngeo-btn gmf-objecteditinggetwmsfeature gmf-objecteditinggetwmsfeature-active=oetCtrl.copyFromActive gmf-objecteditinggetwmsfeature-features=::oetCtrl.sketchFeatures gmf-objecteditinggetwmsfeature-layerinfo=oetCtrl.queryableLayerInfo gmf-objecteditinggetwmsfeature-map=::oetCtrl.map class=\\\"btn btn-sm btn-default gmf-objecteditinggetwmsfeature-add\\\" ng-class=\\\"{active: oetCtrl.copyFromActive}\\\" ng-model=oetCtrl.copyFromActive title=\\\"{{'Copy from external WMS feature' | translate}}\\\"> <span class=\\\"fa fa-clone gmf-icon-oe-copyfrom\\\"> </span> </a> <a href ngeo-btn gmf-objecteditinggetwmsfeature gmf-objecteditinggetwmsfeature-active=oetCtrl.deleteFromActive gmf-objecteditinggetwmsfeature-features=::oetCtrl.sketchFeatures gmf-objecteditinggetwmsfeature-layerinfo=oetCtrl.queryableLayerInfo gmf-objecteditinggetwmsfeature-map=::oetCtrl.map class=\\\"btn btn-sm btn-default gmf-objecteditinggetwmsfeature-delete\\\" ng-class=\\\"{active: oetCtrl.deleteFromActive}\\\" ng-model=oetCtrl.deleteFromActive title=\\\"{{'Cut from external WMS feature' | translate}}\\\"> <span class=\\\"fa fa-scissors gmf-icon-oe-deletefrom\\\"> </span> </a> </div> \";","module.exports = \"<div class=form-group> <select class=form-control ng-model=$ctrl.mode ng-options=\\\"mode | translate for mode in $ctrl.modes\\\"> </select> </div> <div> <form name=idsl_form novalidate ng-show=\\\"$ctrl.mode === 'Local'\\\"> <div class=form-group> <div class=\\\"input-group input-group-sm\\\"> <input name=file type=file required/> <input class=form-control placeholder=\\\"{{'No file' | translate}}\\\" readonly=readonly type=text value={{$ctrl.fileNameAndSize}} ng-click=$ctrl.browse() /> <span class=input-group-btn> <button class=\\\"btn btn-default\\\" type=button ng-click=$ctrl.browse() translate>Browse</button> </span> </div> </div> <div class=form-group> <button class=\\\"btn btn-sm btn-default form-control\\\" title=\\\"{{'Load a file from local' | translate}}\\\" type=submit ng-click=\\\"idsl_form.$valid && $ctrl.load()\\\" ng-disabled=\\\"$ctrl.file === undefined\\\"> <span>{{'Load local file' | translate}}</span> </button> </div> </form> <form name=idsc_form novalidate ng-show=\\\"$ctrl.mode === 'Online'\\\"> <div class=\\\"form-group gmf-importdatasource-url-form-group\\\"> <input autocomplete=off class=form-control name=url placeholder=\\\"{{'Choose or enter online resource URL' | translate}}\\\" required type=url ng-disabled=$ctrl.pending ng-model=$ctrl.url /> </div> <div class=form-group> <button class=\\\"btn btn-sm btn-default form-control gmf-importdatasource-connect-btn\\\" title=\\\"{{'Connect to online resource' | translate}}\\\" type=submit ng-click=\\\"idsc_form.$valid && $ctrl.connect()\\\" ng-disabled=\\\"idsc_form.$invalid || $ctrl.pending\\\"> <span ng-if=$ctrl.pending>{{'Connecting, please wait...' | translate}}</span> <span ng-if=\\\"!$ctrl.pending && $ctrl.hasError\\\">{{'Failed to connect' | translate}}</span> <span ng-if=\\\"!$ctrl.pending && !$ctrl.hasError\\\">{{'Connect' | translate}}</span> </button> </div> </form> </div> <div class=gmf-importdatasource-layers ng-if=\\\"$ctrl.wmsCapabilities !== null || $ctrl.wmtsCapabilities !== null\\\"> <hr/> <gmf-wmscapabilitylayertreenode capabilities=::$ctrl.wmsCapabilities layer=::$ctrl.wmsCapabilities.Capability.Layer url=::$ctrl.url ng-if=\\\"$ctrl.wmsCapabilities !== null\\\"> </gmf-wmscapabilitylayertreenode> <gmf-wmtscapabilitylayertree capabilities=::$ctrl.wmtsCapabilities layers=::$ctrl.wmtsCapabilities.Contents.Layer url=::$ctrl.url ng-if=\\\"$ctrl.wmtsCapabilities !== null\\\"> </gmf-wmtscapabilitylayertree> </div> \";","module.exports = \"<ul> <li ng-repeat=\\\"layer in ::$ctrl.layers\\\"> <div class=gmf-wmscapabilitylayertreenode-header> <span class=gmf-wmscapabilitylayertreenode-popover-container ngeo-popover ngeo-popover-dismiss=.content ngeo-popover-placement=left> <span ngeo-popover-anchor class=\\\"fa fa-cog gmf-wmscapabilitylayertreenode-actions\\\"> </span> <div class=gmf-wmscapabilitylayertreenode-popover-content ngeo-popover-content> <ul> <li> <i class=\\\"fa fa-plus fa-fw\\\"></i> <a href=\\\"\\\" ng-click=\\\"$ctrl.createAndAddDataSource(layer); popoverCtrl.dismissPopover()\\\"> <span translate>Add layer</span> </a> </li> <li ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a aria-expanded=false data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-click=popoverCtrl.dismissPopover()> <span translate>Open/Close description</span> </a> </li> </ul> </div> </span> <a class=\\\"fa fa-circle-thin gmf-wmscapabilitylayertreenode-no-icon fa-fw\\\"></a> <span class=gmf-wmscapabilitylayertreenode-title>{{ ::layer.Title }}</span> <div class=\\\"collapse gmf-wmscapabilitylayertreenode-description\\\" id=gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <a aria-expanded=false class=gmf-wmscapabilitylayertreenode-description-toggle data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}}> <span translate>Hide description</span> </a> <span class=gmf-wmscapabilitylayertreenode-description-content>{{ ::layer.Abstract }}</span> </div> </div> </li> </ul> \";","module.exports = \"<ul> <li ng-repeat=\\\"layer in ::$ctrl.layer.Layer\\\"> <div class=gmf-wmscapabilitylayertreenode-header> <span class=gmf-wmscapabilitylayertreenode-popover-container ng-if=\\\"::(layer.Name !== undefined || layer.Abstract !== undefined)\\\" ngeo-popover ngeo-popover-dismiss=.content ngeo-popover-placement=left> <span ngeo-popover-anchor class=\\\"fa fa-cog gmf-wmscapabilitylayertreenode-actions\\\"> </span> <div class=gmf-wmscapabilitylayertreenode-popover-content ngeo-popover-content> <ul> <li ng-if=\\\"::(layer.Name !== undefined)\\\"> <i class=\\\"fa fa-plus fa-fw\\\"></i> <a href=\\\"\\\" ng-click=\\\"$ctrl.createAndAddDataSource(layer); popoverCtrl.dismissPopover()\\\"> <span translate>Add layer</span> </a> </li> <li ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a aria-expanded=false data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-click=popoverCtrl.dismissPopover()> <span translate>Open/Close description</span> </a> </li> </ul> </div> </span> <a aria-expanded=false class=\\\"fa gmf-wmscapabilitylayertreenode-expand-node fa-fw\\\" data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-children-{{::$ctrl.getUid(layer)}} ng-if=\\\"::(layer.Layer !== undefined && layer.Layer.length)\\\"></a> <span ng-if=\\\"::(layer.Layer !== undefined && layer.Layer.length)\\\" class=\\\"fa fa-fw gmf-wmscapabilitylayertreenode-group\\\"> </span> <a class=\\\"fa fa-circle-thin gmf-wmscapabilitylayertreenode-no-icon fa-fw\\\" ng-if=\\\"::(layer.Layer === undefined || layer.Layer.length === 0)\\\"></a> <span class=gmf-wmscapabilitylayertreenode-title>{{ ::layer.Title }}</span> <div class=\\\"collapse gmf-wmscapabilitylayertreenode-description\\\" id=gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <a aria-expanded=false class=gmf-wmscapabilitylayertreenode-description-toggle data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}}> <span translate>Hide description</span> </a> <span class=gmf-wmscapabilitylayertreenode-description-content>{{ ::layer.Abstract }}</span> </div> </div> <gmf-wmscapabilitylayertreenode class=collapse id=gmf-wmscapabilitylayertreenode-children-{{::$ctrl.getUid(layer)}} capabilities=::$ctrl.capabilities layer=::layer ng-if=\\\"::(layer.Layer !== undefined)\\\"> </gmf-wmscapabilitylayertreenode> </li> </ul> \";","module.exports = \"<div class=\\\"text-center btn-group dropup\\\" gmf-elevation gmf-elevation-active=ctrl.active gmf-elevation-elevation=ctrl.elevationValue gmf-elevation-loading=ctrl.elevationLoading gmf-elevation-layer=ctrl.selectedElevationLayer gmf-elevation-map=::ctrl.map> <a type=button class=\\\"btn btn-default\\\" aria-expanded=false ng-class=\\\"::{'dropdown-toggle': ctrl.layers.length > 1}\\\" ng-attr-data-toggle=\\\"{{::(ctrl.layers.length > 1) ? 'dropdown' : ''}}\\\"> <span class=gmf-elevationwidget-value> {{ctrl.elevationValue | number}}<span ng-show=ctrl.elevationValue> m</span> <span ng-show=ctrl.elevationLoading class=\\\"fa fa-spinner\\\"></span> <span ng-show=\\\"!ctrl.elevationValue && !ctrl.elevationLoading\\\" translate>Elevation…</span> </span><span class=caret ng-if=\\\"::ctrl.layers.length > 1\\\"></span> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu ng-if=\\\"::ctrl.layers.length > 1\\\"> <li class=dropdown-header translate>Elevation data sources</li> <li ng-repeat=\\\"elevationItem in ::ctrl.layers\\\"> <a href ng-click=\\\"ctrl.selectedElevationLayer = elevationItem\\\"> <span class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedElevationLayer === elevationItem}\\\"></span> {{::elevationItem | translate}} </a> </li> </ul> </div> \";","module.exports = \"<div class=\\\"gmf-profile-container panel\\\" ng-show=ctrl.active> <div class=ngeo-profile ng-show=!ctrl.isErrored ngeo-profile=ctrl.profileData ngeo-profile-highlight=ctrl.profileHighlight ngeo-profile-options=::ctrl.profileOptions> </div> <ul class=gmf-profile-legend ng-show=!ctrl.isErrored> <li ng-repeat=\\\"name in ::ctrl.getLayersNames()\\\"> <i class=\\\"fa fa-minus\\\" style=color:{};></i> &nbsp;{{name | translate}}&nbsp;{{ctrl.currentPoint.elevations[name]}}&nbsp;{{ctrl.currentPoint.yUnits}} </li> </ul> <div class=\\\"gmf-profile-export btn-group dropup\\\" ng-show=!ctrl.isErrored> <a class=dropdown-toggle href=\\\"\\\" ng-show=\\\"ctrl.profileData.length !== 0\\\" data-toggle=dropdown aria-expanded=false> {{'Export' | translate}}&nbsp;<i class=\\\"fa fa-caret-up\\\"></i> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li> <a href=\\\"\\\" ng-click=::ctrl.downloadCsv()> <i class=\\\"fa fa-table\\\"></i>&nbsp;{{'Download CSV' | translate}}</a> </li> </ul> </div> <div class=gmf-profile-error ng-show=ctrl.isErrored> <p>{{'The profile service does not respond, please try later.' | translate}}</p> </div> <div class=close ng-click=\\\"ctrl.line = null\\\">&times;</div> </div> \";","module.exports = \"<div class=gmf-print> <div ng-show=\\\"$ctrl.isState('CAPABILITIES_NOT_LOADED') !== true && $ctrl.isState('ERROR_ON_GETCAPABILITIES') !== true\\\"> <div class=\\\"gmf-print-layout-selector form-horizontal\\\"><ng-transclude/></div> <div ng-repeat=\\\"attribute in $ctrl.layoutInfo.simpleAttributes\\\" class=\\\"gmf-print-layoutinfo form-group\\\"> <div ng-if=\\\"$ctrl.hiddenAttributeNames === undefined || $ctrl.hiddenAttributeNames.indexOf(attribute.name) < 0\\\"> <input ng-if=\\\"attribute.type === 'number'\\\" ng-model=attribute.value class=form-control type=number ng-attr-placeholder=\\\"{{attribute.name | translate}}\\\"> <input ng-if=\\\"attribute.type === 'text'\\\" ng-model=attribute.value class=form-control type=text ng-attr-placeholder=\\\"{{attribute.name | translate}}\\\"> <textarea ng-if=\\\"attribute.type === 'textarea'\\\" ng-model=attribute.value class=form-control row=3 ng-attr-placeholder=\\\"{{attribute.name | translate}}\\\"></textarea> <div ng-if=\\\"attribute.type === 'checkbox'\\\" class=checkbox> <label> <input ng-model=attribute.value type=checkbox> <span>{{attribute.name | translate}}</span> </label> </div> </div> </div> <div ng-show=\\\"$ctrl.layoutInfo.legend !== undefined\\\" class=\\\"gmf-print-legend checkbox\\\"> <label> <input ng-model=$ctrl.layoutInfo.legend type=checkbox> <span translate>Legend</span> </label> </div> <div class=\\\"gmf-print-layout-selector form-horizontal\\\"> <div ng-show=\\\"$ctrl.layoutInfo.layouts.length !== 1\\\" class=form-group> <label class=\\\"control-label col-md-5\\\" translate>Layout</label> <div class=col-md-7> <div class=\\\"btn-group btn-block\\\"> <button type=button class=\\\"btn btn-default form-control\\\" data-toggle=dropdown> <span>{{$ctrl.layoutInfo.layout | translate}}&nbsp;</span> <i class=\\\"fa fa-caret-down\\\"></i> </button> <ul class=\\\"dropdown-menu dropdown-menu-right btn-block\\\" role=menu> <li ng-repeat=\\\"layout in $ctrl.layoutInfo.layouts\\\"> <a ng-click=$ctrl.setLayout(layout) href=\\\"\\\">{{layout | translate}}</a> </li> </ul> </div> </div> </div> <div ng-show=\\\"$ctrl.layoutInfo.scales.length !== 1\\\" class=\\\"gmf-print-scale-selector form-group\\\"> <label class=\\\"control-label col-md-5\\\" translate>Scale</label> <div class=col-md-7> <div class=\\\"btn-group btn-block\\\"> <button type=button class=\\\"btn btn-default form-control\\\" data-toggle=dropdown aria-expanded=false> <span>{{$ctrl.layoutInfo.scale | ngeoScalify}}&nbsp;</span> <i class=\\\"fa fa-caret-down\\\"></i> </button> <ul class=\\\"dropdown-menu dropdown-menu-right btn-block\\\" role=menu> <li ng-repeat=\\\"scale in $ctrl.layoutInfo.scales\\\"> <a ng-click=$ctrl.getSetScale(scale) href=\\\"\\\">{{scale | ngeoScalify}}</a> </li> <span ng-if=$ctrl.scaleInput> <li class=dropdown-header translate>Manual entry</li> <li> <div class=gmf-print-custom-scale> 1 : <input class=gmf-print-custom-scale-input type=number min=1 ng-model=$ctrl.getSetScale ng-model-options=\\\"{getterSetter: true}\\\"> </div> </li> </span> </ul> </div> </div> </div> <div ng-show=\\\"$ctrl.layoutInfo.dpis.length !== 1\\\" class=\\\"gmf-print-dpi-selector form-group\\\"> <label class=\\\"control-label col-md-3\\\" translate>DPI</label> <div class=col-md-5> <div class=\\\"btn-group btn-block\\\"> <button type=button class=\\\"btn btn-default form-control\\\" data-toggle=dropdown aria-expanded=false> <span>{{$ctrl.layoutInfo.dpi}}&nbsp;</span> <i class=\\\"fa fa-caret-down\\\"></i> </button> <ul class=\\\"dropdown-menu dropdown-menu-right btn-block\\\" role=menu> <li ng-repeat=\\\"dpi in $ctrl.layoutInfo.dpis\\\"> <a href=\\\"\\\" ng-click=$ctrl.setDpi(dpi)>{{dpi}}</a> </li> </ul> </div> </div> </div> <div class=\\\"gmf-print-rotation-selector form-group\\\"> <label class=\\\"control-label col-md-3\\\" translate>Rotation</label> <div class=col-md-5> <input class=\\\"form-control gmf-print-rotation-input\\\" type=range value=0 min=-180 max=180 data-toggle=tooltip title=\\\"{{'You can also use Alt+Shift on the map' | translate}}\\\"> </div> <div class=col-md-4> <input class=\\\"form-control gmf-print-rotation-input\\\" type=number min=-180 max=180 value=0> </div> </div> </div> <div class=\\\"gmf-print-actions form-group pull-right\\\"> <span ng-show=\\\"$ctrl.isState('PRINTING')\\\"> <i class=\\\"fa fa-refresh fa-spin\\\"></i> </span> <a ng-show=\\\"$ctrl.isState('PRINTING')\\\" class=\\\"gmf-print-cancel btn btn-link\\\" href=\\\"\\\" ng-click=$ctrl.cancel() translate>Abort</a> <button ng-show=$ctrl.layoutInfo.formats.png class=\\\"gmf-print-image btn btn-primary\\\" ng-disabled=\\\"$ctrl.isState('PRINTING')\\\" ng-click=\\\"$ctrl.print('png')\\\" translate>Image</button> <button ng-show=$ctrl.layoutInfo.formats.pdf class=\\\"gmf-print-pdf btn btn-primary\\\" ng-disabled=\\\"$ctrl.isState('PRINTING')\\\" ng-click=\\\"$ctrl.print('pdf')\\\" translate>PDF</button> </div> <div ng-show=\\\"$ctrl.isState('ERROR_ON_REPORT')\\\" class=\\\"gmf-print-error-report form-group pull-left text-danger\\\"> <p>{{'Error during the print, please try again.' | translate}}</p> </div> </div> <div ng-show=\\\"$ctrl.isState('CAPABILITIES_NOT_LOADED')\\\" class=\\\"gmf-print-wait form-group pull-left\\\"> <p>{{'Connecting to the print server, please wait.' | translate}}</p> </div> <div ng-show=\\\"$ctrl.isState('ERROR_ON_GETCAPABILITIES')\\\" class=\\\"gmf-print-error-capabilities form-group pull-left text-danger\\\"> <p>{{'The print server is unavailable. Please, try later.' | translate}}</p> </div> </div> \";","module.exports = \"<div ng-switch=efsCtrl.selectedEditableTreeCtrl> <div ng-switch-when=null> <select class=form-control ng-model=efsCtrl.selectedEditableTreeCtrl ng-show=\\\"efsCtrl.editableTreeCtrls.length > 0\\\" ng-options=\\\"treeCtrl.node.name | translate for treeCtrl in efsCtrl.editableTreeCtrls\\\"> <option value=\\\"\\\" translate>-- Choose a layer --</option> </select> <span ng-show=\\\"efsCtrl.editableTreeCtrls.length == 0\\\" translate>No editable layer available!</span> </div> <div ng-switch-default> <div class=row> <div class=col-sm-12> <span translate>Currently editing: </span> <b>{{ efsCtrl.selectedEditableTreeCtrl.node.name | translate }}</b> <span class=\\\"fa fa-pencil\\\"></span> <br> <button ng-click=efsCtrl.stopEditing() class=\\\"btn btn-link btn-xs pull-right\\\"> <span class=\\\"fa fa-times\\\"></span> {{'Stop editing' | translate}} </button> </div> </div> <gmf-editfeature gmf-editfeature-dirty=efsCtrl.dirty gmf-editfeature-editabletreectrl=::efsCtrl.selectedEditableTreeCtrl gmf-editfeature-map=::efsCtrl.map gmf-editfeature-state=efsCtrl.state gmf-editfeature-tolerance=::efsCtrl.tolerance gmf-editfeature-vector=::efsCtrl.vectorLayer> </gmf-editfeature> </div> </div> \";","module.exports = \"<div> <div ng-switch=efCtrl.feature> <a ng-switch-when=null ng-if=efCtrl.geomType href ngeo-btn ngeo-createfeature ngeo-createfeature-active=efCtrl.createActive ngeo-createfeature-features=::efCtrl.features ngeo-createfeature-geom-type=::efCtrl.geomType ngeo-createfeature-map=::efCtrl.map class=\\\"btn btn-default\\\" ng-class=\\\"{active: efCtrl.createActive}\\\" ng-model=efCtrl.createActive> <span ng-switch=::efCtrl.geomType> <span ng-switch-when=Point> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> {{'Draw new point' | translate}} </span> <span ng-switch-when=MultiPoint> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> {{'Draw new point' | translate}} </span> <span ng-switch-when=LineString> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> {{'Draw new linestring' | translate}} </span> <span ng-switch-when=MultiLineString> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> {{'Draw new linestring' | translate}} </span> <span ng-switch-when=Polygon> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> {{'Draw new polygon' | translate}} </span> <span ng-switch-when=MultiPolygon> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> {{'Draw new polygon' | translate}} </span> </span> </a> <div ng-switch-default> <form novalidate name=form class=\\\"form gmf-editfeature-attributes-container\\\" ng-if=efCtrl.attributes> <div class=row> <div class=col-sm-12> <a class=close ng-click=efCtrl.cancel() ng-disabled=efCtrl.pending title=\\\"{{'Cancel modifications' | translate}}\\\" href>&times;</a> </div> </div> <ngeo-attributes ngeo-attributes-attributes=::efCtrl.attributes ngeo-attributes-disabled=efCtrl.pending ngeo-attributes-feature=::efCtrl.feature> </ngeo-attributes> <input type=submit value=\\\"{{'Save' | translate}}\\\" class=\\\"btn btn-sm btn-default gmf-editfeature-btn-save\\\" ng-click=\\\"form.$valid && efCtrl.save()\\\" ng-disabled=\\\"!efCtrl.dirty || efCtrl.pending\\\" title=\\\"{{'Save modifications' | translate}}\\\"> <a class=\\\"btn btn-sm btn-default gmf-editfeature-btn-cancel\\\" ng-click=efCtrl.confirmCancel() ng-disabled=efCtrl.pending title=\\\"{{'Cancel modifications' | translate}}\\\" href>{{'Cancel' | translate}}</a> <button class=\\\"btn btn-sm btn-link gmf-editfeature-btn-delete\\\" ng-click=efCtrl.delete() ng-disabled=efCtrl.pending ng-show=efCtrl.featureId title=\\\"{{'Delete this feature' | translate}}\\\"> <span class=\\\"fa fa-trash\\\"></span> {{'Delete' | translate}} </button> </form> </div> </div> <ngeo-modal ng-model=efCtrl.unsavedModificationsModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Unsaved modifications!' | translate}} </h4> </div> <div class=modal-body> {{'There are unsaved changes.' | translate}} </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal ng-click=efCtrl.continueWithoutSaving()> {{'Continue without saving' | translate}} </button> <button type=button class=\\\"btn btn-primary\\\" data-dismiss=modal> {{'Cancel' | translate}} </button> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal ng-click=efCtrl.submit()> {{'Save' | translate}} </button> </div> </ngeo-modal> <ngeo-modal ng-model=efCtrl.showServerError> <div class=modal-header>{{'Server error.' | translate}}</div> <div class=modal-body>{{$parent.efCtrl.serverErrorType}}<br> {{$parent.efCtrl.serverErrorMessage || ('Unexpected server error.' | translate)}}</div> </ngeo-modal> </div> \";","module.exports = \"<fieldset ng-disabled=attrCtrl.disabled> <div class=form-group ng-repeat=\\\"attribute in ::attrCtrl.attributes\\\"> <div ng-if=\\\"attribute.type !== 'geometry'\\\"> <label ng-if=\\\"::attribute.type !== 'boolean'\\\" class=control-label>{{ ::attribute.name | translate }} <span class=text-muted>{{::attribute.required ? \\\"*\\\" : \\\"\\\"}}</span> </label> <div ng-switch=::attribute.type> <div ng-switch-when=boolean class=checkbox> <label> <input name={{::attribute.name}} ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); type=checkbox>  <span> {{ ::attribute.name | translate }} <span class=text-muted>{{::attribute.required ? \\\"*\\\" : \\\"\\\"}}</span></span> </label> </div> <select name={{::attribute.name}} ng-required=attribute.required ng-switch-when=select ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control type=text> <option ng-repeat=\\\"attribute in ::attribute.choices\\\" value=\\\"{{ ::attribute }}\\\"> {{ ::attribute }} </option> </select> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-when=date ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ngeo-datetimepicker ngeo-datetimepicker-options=\\\"'{&quot;timepicker&quot;: false, &quot;format&quot;: &quot;' + attribute.format + '&quot;, &quot;allowBlank&quot;: true, &quot;todayButton&quot;: false, &quot;mask&quot;: &quot;' + attribute.mask + '&quot;}'\\\" class=form-control type=text>  <input name={{::attribute.name}} id=time ng-required=attribute.required ng-switch-when=time ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ngeo-datetimepicker ngeo-datetimepicker-options=\\\"'{&quot;datepicker&quot;: false, &quot;format&quot;: &quot;' + attribute.format + '&quot;, &quot;todayButton&quot;: false, &quot;mask&quot;: &quot;' + attribute.mask + '&quot;, &quot;defaultTime&quot;: &quot;00:00&quot;}'\\\" class=form-control type=text>  <input name={{::attribute.name}} ng-required=attribute.required ng-switch-when=datetime ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ngeo-datetimepicker ngeo-datetimepicker-options=\\\"'{&quot;scrollTime&quot;: false, &quot;format&quot;: &quot;' + attribute.format + '&quot;, &quot;allowBlank&quot;: true, &quot;todayButton&quot;: false, &quot;mask&quot;: &quot;' + attribute.mask + '&quot;, &quot;defaultTime&quot;: &quot;00:00&quot;}'\\\" class=form-control type=text>  <div ng-switch-when=number ng-switch=::attribute.numType> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-when=integer ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control step=1 type=number>  <input name={{::attribute.name}} ng-required=attribute.required ng-switch-default ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control type=number>  </div> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-default ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ng-maxlength=attribute.maxLength class=form-control type=text>  <div ng-show=\\\"attrCtrl.form.$submitted || attrCtrl.form[attribute.name].$touched\\\"> <p class=text-danger ng-show=attrCtrl.form[attribute.name].$error.required> {{'This field is required' | translate}} </p> </div> </div> </div> </div> </fieldset> \";","module.exports = \"<ngeo-drawfeature ngeo-btn-group class=btn-group ngeo-drawfeature-active=efCtrl.drawActive ngeo-drawfeature-map=efCtrl.map ngeo-drawfeature-showmeasure=efCtrl.showMeasure> <a data-toggle=tooltip title=\\\"{{'Draw a point on the map' | translate}}\\\" href ngeo-btn ngeo-drawpoint class=\\\"btn btn-default ngeo-drawfeature-point\\\" ng-class=\\\"{active: dfCtrl.drawPoint.active}\\\" ng-model=dfCtrl.drawPoint.active> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a line on the map' | translate}}\\\" href ngeo-btn ngeo-measurelength class=\\\"btn btn-default ngeo-drawfeature-linestring\\\" ng-class=\\\"{active: dfCtrl.measureLength.active}\\\" ng-model=dfCtrl.measureLength.active> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a polygon on the map' | translate}}\\\" href ngeo-btn ngeo-measurearea class=\\\"btn btn-default ngeo-drawfeature-polygon\\\" ng-class=\\\"{active: dfCtrl.measureArea.active}\\\" ng-model=dfCtrl.measureArea.active> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a circle on the map' | translate}}\\\" href ngeo-btn ngeo-measureazimut class=\\\"btn btn-default ngeo-drawfeature-circle\\\" ng-class=\\\"{active: dfCtrl.measureAzimut.active}\\\" ng-model=dfCtrl.measureAzimut.active> <span class=\\\"gmf-icon gmf-icon-circle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a rectangle on the map' | translate}}\\\" href ngeo-btn ngeo-drawrectangle class=\\\"btn btn-default ngeo-drawfeature-rectangle\\\" ng-class=\\\"{active: dfCtrl.drawRectangle.active}\\\" ng-model=dfCtrl.drawRectangle.active> <span class=\\\"gmf-icon gmf-icon-rectangle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a text label on the map' | translate}}\\\" href ngeo-btn ngeo-drawtext class=\\\"btn btn-default ngeo-drawfeature-text\\\" ng-class=\\\"{active: dfCtrl.drawText.active}\\\" ng-model=dfCtrl.drawText.active> <span class=\\\"gmf-icon gmf-icon-text\\\"></span> </a> </ngeo-drawfeature> <div ng-switch=efCtrl.selectedFeature> <hr class=gmf-drawfeature-separator ng-show=\\\"efCtrl.getFeaturesArray().length > 0\\\"> <div ng-switch-when=null> <div ng-show=\\\"efCtrl.getFeaturesArray().length > 0\\\"> <div class=ngeo-drawfeature-actionbuttons> <button type=button data-toggle=dropdown aria-haspopup=true aria-expanded=false ngeo-exportfeatures ngeo-exportfeatures-features=efCtrl.features class=\\\"btn btn-link btn-sm\\\"> <span class=\\\"fa fa-mail-forward\\\"></span> {{'Export' | translate}} <span class=caret></span> </button> <button ng-click=efCtrl.clearFeatures() class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-trash\\\"></span> {{'Delete All' | translate}} </button> </div> <div class=gmf-eol></div> <div class=\\\"gmf-drawfeature-featurelist list-group list-group-sm\\\"> <button role=button class=list-group-item ng-repeat=\\\"feature in efCtrl.getFeaturesArray()\\\" ng-click=efCtrl.selectFeatureFromList(feature);> {{ feature.get(efCtrl.nameProperty) }} </button> </div> </div> </div> <div ng-switch-default> <button ng-click=\\\"efCtrl.selectedFeature = null;\\\" class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-arrow-left\\\"></span> {{'List' | translate}} </button> <div class=ngeo-drawfeature-actionbuttons> <button type=button data-toggle=dropdown aria-haspopup=true aria-expanded=false ngeo-exportfeatures ngeo-exportfeatures-features=efCtrl.selectedFeatures class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-mail-forward\\\"></span> {{'Export' | translate}} <span class=caret></span> </button> <button ng-click=efCtrl.removeFeature(efCtrl.selectedFeature); class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-trash\\\"></span> {{'Delete' | translate}} </button> </div> <div class=gmf-eol></div> <gmf-featurestyle gmf-featurestyle-feature=efCtrl.selectedFeature> </gmf-featurestyle> </div> </div> \";","module.exports = \"<div ng-if=\\\"fsCtrl.feature && fsCtrl.type\\\"> <div class=form-group> <input ng-model=fsCtrl.getSetName ng-model-options=\\\"{getterSetter: true}\\\" ng-attr-placeholder=\\\"{{'Name' | translate}}\\\" class=form-control /> </div> <div ng-if=\\\"fsCtrl.type !== 'Text'\\\" class=form-group> <input id=gmf-featurestyle-showlabel type=checkbox ng-model=fsCtrl.getSetShowLabel ng-model-options=\\\"{getterSetter: true}\\\"/> <label ng-switch=fsCtrl.type for=gmf-featurestyle-showlabel class=control-label> {{'Display label' | translate}} </label> </div> <div ng-if=\\\"fsCtrl.type !== 'Text'\\\" class=form-group> <input id=gmf-featurestyle-showmeasure type=checkbox ng-model=fsCtrl.getSetShowMeasure ng-model-options=\\\"{getterSetter: true}\\\"/> <label ng-switch=fsCtrl.type for=gmf-featurestyle-showmeasure class=control-label> <span ng-switch-when=Circle> {{'Display azimuth and radius' | translate}} </span> <span ng-switch-when=Polygon> {{'Display surface' | translate}} </span> <span ng-switch-when=Rectangle> {{'Display surface' | translate}} </span> <span ng-switch-when=LineString> {{'Display length' | translate}} </span> <span ng-switch-when=Point> {{'Display coordinates' | translate}} </span> </label> <em class=text-muted> ({{ fsCtrl.measure }}) </em> </div> </div> <div ng-if=\\\"fsCtrl.feature && fsCtrl.type\\\" class=form-horizontal> <div class=form-group> <div ngeo-colorpicker=\\\"\\\" ngeo-colorpicker-color=fsCtrl.color class=col-md-12> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Point'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Size' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=3 max=20 step=1 ng-model=fsCtrl.getSetSize ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Text'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Size' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=8 max=30 step=1 ng-model=fsCtrl.getSetSize ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Circle' || fsCtrl.type === 'LineString' || fsCtrl.type === 'Polygon' || fsCtrl.type === 'Rectangle'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Stroke' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=0.5 max=5 step=0.5 ng-model=fsCtrl.getSetStroke ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Circle' || fsCtrl.type === 'Polygon' || fsCtrl.type === 'Rectangle'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Opacity' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=0 max=1 step=0.05 ng-model=fsCtrl.getSetOpacity ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Text'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Angle' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=-180 max=180 step=22.5 ng-model=fsCtrl.getSetAngle ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> </div> \";","module.exports = \"<div class=ngeo-displaywindow ng-show=$ctrl.open ng-style=$ctrl.style> <div class=windowcontainer> <button type=button class=\\\"btn fa-close close\\\" ng-click=$ctrl.close()> </button> <div class=animation-container> <div class=slide-animation> <div class=\\\"header ui-draggable-handle\\\" ng-if=\\\"$ctrl.title !== null\\\"> <p class=title>{{ $ctrl.title }}</p> </div> <div class=details ng-if=$ctrl.content ng-bind-html=$ctrl.content> </div> <div class=details ng-if=\\\"$ctrl.url !== null\\\"> <iframe frameborder=0 type=text/html height=100% width=100% ng-src=\\\"{{ $ctrl.urlTrusted }}\\\"></iframe> </div> </div> </div> </div> </div> \";","module.exports = \"<ul class=gmf-theme-selector> <li ng-repeat=\\\"theme in $ctrl.themes\\\" ng-click=$ctrl.setTheme(theme) ng-class=\\\"{'gmf-theme-selector-active': $ctrl.gmfThemeManager.getThemeName() == theme.name}\\\"> <img class=gmf-thumb ng-src={{::theme.icon}} /> <span class=gmf-text>{{theme.name | translate}}</span> </li> </ul> \";","module.exports = \"<div class=gmf-search> <input type=text ng-attr-placeholder={{$ctrl.placeholder|translate}} class=form-control ng-model=$ctrl.inputValue ngeo-search=$ctrl.options ngeo-search-datasets=$ctrl.datasets ngeo-search-listeners=$ctrl.listeners> <span class=\\\"gmf-clear-button ng-hide\\\" ng-hide=\\\"!$ctrl.clearButton || $ctrl.inputValue == ''\\\" ng-click=$ctrl.onClearButton()> </span> </div> <span ng-if=$ctrl.colorChooser> <span ng-show=$ctrl.displayColorPicker ngeo-popover ngeo-popover-placement=bottom> <button class=\\\"gmf-color-button fa fa-tint\\\" ngeo-popover-anchor data-original-title=\\\"{{'Change the color of the search result'|translate}}\\\"></button> <div ngeo-popover-content> <div ngeo-colorpicker ngeo-colorpicker-color=$ctrl.color></div> </div> </span> </span> \";","module.exports = \"<table class=ngeo-colorpicker-palette> <tr ng-repeat=\\\"colors in ::ctrl.colors\\\"> <td ng-repeat=\\\"color in ::colors\\\" ng-click=ctrl.setColor(color) ng-class=\\\"{'ngeo-colorpicker-selected': color == ctrl.color}\\\"> <div ng-style=\\\"::{'background-color': color}\\\"></div> </td> </tr> </table> \";","module.exports = \"<div class=gmf-displayquerywindow ng-class=\\\"{'desktop': ctrl.desktop, 'mobile': !ctrl.desktop}\\\" ng-show=ctrl.open ngeo-swipe-up=\\\"ctrl.collapsed = false\\\" ngeo-swipe-down=\\\"ctrl.collapsed = true\\\" ngeo-swipe-disable-mouse ng-swipe-disable-mouse ng-swipe-left=ctrl.next() ng-swipe-right=ctrl.previous()> <button class=collapse-button type=button ng-show=::!ctrl.desktop ng-click=\\\"ctrl.collapsed = !ctrl.collapsed\\\" ng-class=\\\"[ctrl.collapsed ? 'collapse-button-up' : 'collapse-button-down']\\\"> </button> <div class=windowcontainer> <button type=button class=\\\"btn fa-close close\\\" ng-click=ctrl.close()> </button> <div class=animation-container ng-class=\\\"[ctrl.collapsed ? '' : 'animation-container-detailed', ctrl.isNext ? 'next' : 'previous']\\\"> <div ng-animate-swap=ctrl.animate class=\\\"slide-animation gmf-animatable\\\"> <div class=header> <p class=title>{{ctrl.source.label | translate}}</p> <p class=subtitle>{{ctrl.getFeatureValues()[ctrl.source.identifierAttributeField]}}</p> </div> <div class=details> <table> <tr ng-repeat=\\\"(key, value) in ctrl.getFeatureValues()\\\" ng-if=\\\"value !== undefined\\\"> <td class=details-key ng-bind-html=\\\"key | translate | ngeoTrustHtml\\\"></td> <td class=details-value ng-bind-html=\\\"value | ngeoTrustHtml\\\"></td> </tr> </table> </div> </div> </div> <div class=navigate> <div class=placeholder> <button type=button class=\\\"previous btn\\\" ng-disabled=ctrl.isFirst() ng-show=\\\"ctrl.getResultLength() > 1\\\" ng-click=ctrl.previous()> <span ng-show=::ctrl.desktop>{{'Prev.' | translate}}</span> </button> </div> <div class=results> <span ng-show=::!ctrl.desktop>{{'Result' | translate}}</span> <span>{{ctrl.currentResult + 1}}</span> <span>/</span> <span>{{ctrl.getResultLength()}}</span> <div ng-show=::ctrl.desktop class=dropup> <button type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span class=\\\"fa fa-filter\\\"></span> <span class=\\\"fa fa-caret-up\\\"></span> </button> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li> <a href=# ng-click=ctrl.setSelectedSource(null)> <i class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedSource === null}\\\"> </i> <span>{{'All layers' | translate}} ({{ctrl.ngeoQueryResult.total}})</span> </a> </li> <li role=separator class=divider> </li> <li ng-repeat-start=\\\"source in ctrl.ngeoQueryResult.sources | filter: ctrl.sourcesFilter\\\" ng-repeat-end ng-class=\\\"{'disabled': source.features.length <= 0}\\\"> <a href=# ng-click=ctrl.setSelectedSource(source)> <i class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedSource === source}\\\"> </i> <span>{{source.label | translate}} ({{source.features.length}})</span> </a> </li> </ul> </div> </div> <div class=placeholder> <button type=button class=\\\"next btn\\\" ng-disabled=ctrl.isLast() ng-show=\\\"ctrl.getResultLength() > 1\\\" ng-click=ctrl.next()> <span ng-show=::ctrl.desktop>{{'Next' | translate}}</span> </button> </div> </div> </div> </div> \";","module.exports = \"<div class=\\\"gmf-displayquerygrid panel\\\" ng-show=ctrl.active> <div class=close ng-click=ctrl.clear()> &times; </div> <ul class=\\\"nav nav-pills\\\" role=tablist> <li ng-repeat=\\\"gridSource in ctrl.getGridSources() track by gridSource.source.label\\\" role=presentation ng-class=\\\"{'active' : ctrl.isSelected(gridSource)}\\\" ng-click=ctrl.selectTab(gridSource)> <a href=#{{ctrl.escapeValue(gridSource.source.label)}} data-target=#{{ctrl.escapeValue(gridSource.source.label)}} aria-controls={{ctrl.escapeValue(gridSource.source.label)}} role=tab data-toggle=tab> <span ng-if=\\\"gridSource.source.tooManyResults !== true\\\"> {{gridSource.source.label | translate}} ({{gridSource.source.features.length}}) </span> <span ng-if=\\\"gridSource.source.tooManyResults === true\\\"> {{gridSource.source.label | translate}} ({{gridSource.source.totalFeatureCount}}*) </span> </a> </li> </ul> <div class=tab-content> <div ng-repeat=\\\"gridSource in ctrl.getGridSources() track by gridSource.source.label\\\" role=tabpanel class=tab-pane ng-class=\\\"{'active' : ctrl.isSelected(gridSource)}\\\" id={{ctrl.escapeValue(gridSource.source.label)}}> <ngeo-grid ngeo-grid-configuration=gridSource.configuration ng-if=\\\"gridSource.source.tooManyResults !== true\\\"> </ngeo-grid> <div ng-if=\\\"gridSource.source.tooManyResults === true\\\"> <div class=\\\"gmf-displayquerygrid-message alert alert-warning\\\"> <p><span translate>The results can not be displayed because the maximum number has been reached</span> ({{gridSource.source.limit}}).</p> <p translate>Please refine your query.</p> </div> </div> </div> </div> <div class=navbar ng-show=\\\"!ctrl.pending && ctrl.getActiveGridSource() && ctrl.getActiveGridSource().configuration !== null\\\"> <ul class=\\\"nav navbar-nav navbar-right\\\"> <li class=ng-hide ng-show=ctrl.isOneSelected()> <p class=\\\"navbar-text ng-binding\\\"> {{ctrl.getSelectedRowCount()}} <span translate>selected element(s)</span> </p> </li> <li ng-show=ctrl.isOneSelected() class=ng-hide> <button class=\\\"btn btn-link btn-xs\\\" title=\\\"{{'Zoom to selection' | translate}}\\\" ng-click=ctrl.zoomToSelection()> <i class=\\\"fa fa-search-plus\\\"></i> <span translate>Zoom to</span> </button> </li> <li ng-show=ctrl.isOneSelected() class=ng-hide> <button class=\\\"btn btn-link btn-xs\\\" title=\\\"{{'Export selection as CSV' | translate}}\\\" ng-click=ctrl.downloadCsv()> <i class=\\\"fa fa-download\\\"></i> <span translate>Export as CSV</span> </button> </li> <li class=\\\"dropdown navbar-link dropup\\\"> <button type=button class=\\\"dropup btn btn-default btn-xs\\\" data-toggle=dropdown aria-haspopup=true aria-expanded=false> <span translate>Select</span> <span class=caret></span> </button> <ul class=dropdown-menu aria-labelledby=dLabel> <li> <a href=\\\"\\\" ng-click=ctrl.selectAll() translate>All</a> </li> <li> <a href=\\\"\\\" ng-click=ctrl.unselectAll() translate>None</a> </li> <li> <a href=\\\"\\\" ng-click=ctrl.invertSelection() translate>Reverse selection</a> </li> </ul> </li> </ul> </div> <div ng-show=ctrl.pending class=gmf-displayquerygrid-pending> <span class=\\\"fa fa-spinner fa-spin\\\"></span> </div> </div> \";","module.exports = \"<div class=ngeo-grid-table-container> <table float-thead=ctrl.floatTheadConfig ng-model=ctrl.configuration.data class=\\\"table table-bordered table-striped table-hover\\\"> <thead class=table-header> <tr> <th ng-repeat=\\\"columnDefs in ctrl.configuration.columnDefs\\\" ng-click=ctrl.sort(columnDefs.name) ng-bind-html=\\\"columnDefs.name | ngeoTrustHtml | translate\\\"> <i ng-show=\\\"ctrl.sortedBy !== columnDefs.name\\\" class=\\\"fa fa-fw\\\"></i> <i ng-show=\\\"ctrl.sortedBy === columnDefs.name && ctrl.sortAscending === true\\\" class=\\\"fa fa-caret-up\\\"></i> <i ng-show=\\\"ctrl.sortedBy === columnDefs.name && ctrl.sortAscending === false\\\" class=\\\"fa fa-caret-down\\\"></i> </th> </tr> </thead> <tbody> <tr ng-repeat=\\\"attributes in ctrl.configuration.data\\\" ng-class=\\\"['row-' + ctrl.configuration.getRowUid(attributes), ctrl.configuration.isRowSelected(attributes) ? 'ngeo-grid-active': '']\\\" ng-click=\\\"ctrl.clickRow(attributes, $event)\\\" ng-mousedown=ctrl.preventTextSelection($event)> <td ng-repeat=\\\"columnDefs in ctrl.configuration.columnDefs\\\" ng-bind-html=\\\"attributes[columnDefs.name] | ngeoTrustHtml\\\"></td> </tr> </tbody> </table> </div> \";","module.exports = \"<div class=\\\"btn-group dropup\\\"> <a type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span class=gmf-mouseposition-control-target></span> <span class=caret></span> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li class=dropdown-header translate>Coordinate systems</li> <li ng-repeat=\\\"projitem in ::ctrl.projections\\\"> <a href ng-click=ctrl.setProjection(projitem)> <span class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.projection == projitem}\\\"></span> {{::projitem.label}} </a> </li> </ul> </div> \";","module.exports = \"<div ngeo-map=ctrl.map ngeo-map-manage-resize=ctrl.manageResize ngeo-map-resize-transition=ctrl.resizeTransition> </div> \";","module.exports = \"<div class=\\\"btn-group btn-block\\\" ng-class=\\\"::{'dropup': scaleselectorCtrl.options.dropup}\\\"> <button type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span ng-bind-html=\\\"scaleselectorCtrl.currentScale | ngeoScalify | ngeoTrustHtml\\\"></span>&nbsp;<i class=caret></i> </button> <ul class=\\\"dropdown-menu btn-block\\\" role=menu> <li ng-repeat=\\\"zoomLevel in ::scaleselectorCtrl.zoomLevels\\\"> <a href ng-click=scaleselectorCtrl.changeZoom(zoomLevel) ng-bind-html=\\\"scaleselectorCtrl.getScale(zoomLevel) | ngeoScalify | ngeoTrustHtml\\\"> </a> </li> </ul> </div> \";","module.exports = \"<div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=Close><span aria-hidden=true>&times;</span></button> <h4 class=modal-title translate>Share this map</h4> </div> <div class=modal-body> <form role=form name=gmfShareForm novalidate> <div class=form-group> <label for=gmfShareInputShortLink translate>Permalink</label> <input type=text class=form-control id=gmfShareInputShortLink onclick=this.select() ng-model=$ctrl.shortLink readonly=True> <p class=help-block translate>Copy this link to share it.</p> <p class=text-danger ng-if=$ctrl.showLengthWarning> <span class=\\\"fa fa-exclamation-triangle\\\"></span> {{'You have a lot of drawn elements in this map. The above link may not be correctly supported by some browsers.' | translate}} </p> <p class=text-danger ng-if=$ctrl.errorOnGetShortUrl> <span class=\\\"fa fa-exclamation\\\"></span> {{'Error, cannot get the shortened URL.' | translate}} </p> </div> <hr> <div class=gmf-share-email ng-if=::$ctrl.enableEmail> <div class=form-group> <label for=gmfShareInputEmail translate>Send this link to</label> <input type=email class=form-control name=inputEmail id=gmfShareInputEmail placeholder=E-mail ng-model=$ctrl.email required> <span ng-show=\\\"gmfShareForm.$submitted || gmfShareForm.inputEmail.$touched\\\"> <span class=text-danger ng-show=\\\"gmfShareForm.inputEmail.$error.email || gmfShareForm.inputEmail.$error.required\\\"> <i class=\\\"fa fa-exclamation-triangle\\\" aria-hidden=true></i> {{'Invalid email.' | translate}}</span> </span> </div> <div class=form-group> <textarea class=form-control ng-attr-placeholder=\\\"{{'Message (optional)' | translate }}\\\" ng-model=$ctrl.message></textarea> </div> <span class=text-success ng-if=$ctrl.successfullySent> <i class=\\\"fa fa-check\\\" aria-hidden=true></i> {{ 'Link successfully sent.' | translate }} </span> <span class=text-danger ng-if=$ctrl.errorOnsend> <i class=\\\"fa fa-exclamation\\\" aria-hidden=true></i> {{ 'Error, the link has not been sent.' | translate }} </span> </div> <div class=text-right> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal translate>Close</button> <button ng-if=::$ctrl.enableEmail type=submit class=\\\"btn btn-default btn-primary\\\" ng-click=$ctrl.sendShortUrl() ng-disabled=!gmfShareForm.$valid translate>Send </button> </div> </form> </div> \";","module.exports = \"<div class=gmf-time-slider> <div ui-slider=sliderCtrl.sliderOptions ng-model=sliderCtrl.dates> <span class=\\\"ui-slider-handle ui-state-default ui-corner-all\\\" tabindex=0 data-toggle=tooltip title=\\\"\\\"> </span> </div> <div class=gmf-time-slider-displayed-dates> <div class=gmf-time-slider-start-date ng-if=\\\"::sliderCtrl.time.mode === 'range'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates[0])}}</span> </div> <div class=gmf-time-slider-start-date ng-if=\\\"::sliderCtrl.time.mode === 'value'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates)}}</span> </div> <div class=gmf-time-slider-end-date ng-if=\\\"::sliderCtrl.time.mode === 'range'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates[1])}}</span> </div> </div> </div> \";","module.exports = \"<div class=gmf-layertree-root-tools ng-if=layertreeCtrl.isRoot> <a href ng-if=\\\"gmfLayertreeCtrl.nodesCount() > 0\\\" ng-click=gmfLayertreeCtrl.removeAllNodes()> <span class=\\\"fa fa-trash\\\"></span> {{'Clear all' | translate}} </a> </div> <div ng-if=::!layertreeCtrl.isRoot id=gmf-layertree-node-{{::layertreeCtrl.uid}} ng-class=\\\"[layertreeCtrl.node.children ? 'gmf-layertree-group' : 'gmf-layertree-leaf', 'gmf-layertree-depth-' + layertreeCtrl.depth, gmfLayertreeCtrl.getResolutionStyle(layertreeCtrl.node), gmfLayertreeCtrl.getNodeState(layertreeCtrl)]\\\"> <div class=ngeo-sortable-handle ng-show=\\\"layertreeCtrl.depth === 1 && layertreeCtrl.parent.children.length > 1\\\"> <i class=\\\"gmf-layertree-sortable-handle-icon fa fa-ellipsis-v\\\"></i> </div> <a ng-if=::layertreeCtrl.node.children data-toggle=collapse href=#gmf-layertree-layer-group-{{::layertreeCtrl.uid}} aria-expanded={{::layertreeCtrl.node.metadata.isExpanded}} class=\\\"fa gmf-layertree-expand-node fa-fw\\\"> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) ng-if=::!layertreeCtrl.node.children ng-class=\\\"::{'gmf-layertree-no-layer-icon' : !gmfLayertreeCtrl.getLegendIconURL(layertreeCtrl)}\\\" class=gmf-layertree-layer-icon> <img ng-if=\\\"::(legendIconUrl=gmfLayertreeCtrl.getLegendIconURL(layertreeCtrl))\\\" ng-src={{::legendIconUrl}}>  </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) ng-if=::layertreeCtrl.node.children ng-class=\\\"['fa fa-fw', layertreeCtrl.node.children && !layertreeCtrl.layer.loading ? 'gmf-layertree-state' : 'fa-refresh fa-spin']\\\"> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) class=gmf-layertree-name data-toggle=tooltip data-placement=top title=\\\"{{layertreeCtrl.node.name | translate}}\\\"> {{layertreeCtrl.node.name | translate}} <i class=\\\"gmf-icon gmf-icon-search-go gmf-layertree-zoom\\\" data-toggle=tooltip data-placement=bottom data-title=\\\"{{'Not visible at current scale. Click to zoom.'|translate}}\\\" ng-click=\\\"::gmfLayertreeCtrl.zoomToResolution(layertreeCtrl); $event.preventDefault(); $event.stopPropagation();\\\" ng-if=\\\"gmfLayertreeCtrl.getNodeState(layertreeCtrl) == 'on'\\\"> </i> <span ngeo-popover ngeo-popover-dismiss=.content ng-if=\\\"gmfLayertreeCtrl.getNodeState(layertreeCtrl) !== 'off' && layertreeCtrl.node.time && layertreeCtrl.node.time.mode !== 'disabled'\\\"> <span ngeo-popover-anchor class=\\\"fa fa-clock-o\\\" ng-click=\\\"$event.preventDefault(); $event.stopPropagation()\\\"> </span> <div ngeo-popover-content> <ngeo-date-picker ng-if=\\\"::layertreeCtrl.node.time.widget === 'datepicker'\\\" time=layertreeCtrl.node.time on-date-selected=\\\"gmfLayertreeCtrl.updateWMSTimeLayerState(layertreeCtrl, time)\\\"> </ngeo-date-picker> <gmf-time-slider ng-if=\\\"::layertreeCtrl.node.time.widget === 'slider'\\\" gmf-time-slider-time=layertreeCtrl.node.time gmf-time-slider-on-date-selected=\\\"gmfLayertreeCtrl.updateWMSTimeLayerState(layertreeCtrl, time)\\\"> </gmf-time-slider> </div> </span> <span class=\\\"fa fa-pencil\\\" data-toggle=tooltip data-placement=right title=\\\"{{'Currently editing this layer'|translate}}\\\" ng-if=layertreeCtrl.properties.editing> </span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-if=\\\"::layertreeCtrl.depth == 1\\\" ng-click=gmfLayertreeCtrl.removeNode(layertreeCtrl.node)> <span class=\\\"fa fa-trash\\\"></span> </a> <a class=gmf-layertree-node-menu-btn href=\\\"\\\" ng-if=::gmfLayertreeCtrl.supportsCustomization(layertreeCtrl) ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-menu-' + layertreeCtrl.uid)\\\"> <span class=\\\"fa fa-cog\\\"></span> </a> <span ngeo-popover ng-if=\\\"::(layertreeCtrl.depth === 1 && !layertreeCtrl.node.mixed) || (layertreeCtrl.depth > 1 && layertreeCtrl.parent.node.mixed && !layertreeCtrl.node.children) || (gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend) || layertreeCtrl.getDataSource().filtrable\\\" ngeo-popover-dismiss=.content> <span ngeo-popover-anchor class=\\\"extra-actions fa fa-cog\\\"> </span> <div ngeo-popover-content> <ul> <li ng-if=\\\"::(layertreeCtrl.depth === 1 && !layertreeCtrl.node.mixed) || (layertreeCtrl.depth > 1 && layertreeCtrl.parent.node.mixed)\\\"> <i class=\\\"fa fa-tint fa-fw\\\"></i> <span for=layer-opactity>{{'Opacity'|translate}}</span> <input class=input-action name=layer-opactity type=range min=0 max=1 step=0.01 ng-model=layertreeCtrl.layer.opacity /> </li> <li ng-if=\\\"::gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend'); popoverCtrl.dismissPopover()\\\" data-toggle=collapse href=\\\"\\\"> {{'Show/hide legend'|translate}} </a> </li> <li ng-if=\\\"layertreeCtrl.getDataSource() && layertreeCtrl.getDataSource().filtrable\\\"> <i class=\\\"fa fa-filter fa-fw\\\"></i> <a ng-click=gmfLayertreeCtrl.toggleFiltrableDataSource(layertreeCtrl.getDataSource()) href=\\\"\\\"> {{'Filter'|translate}} </a> </li> </ul> </div> </span> <span class=gmf-layertree-metadata ng-if=::layertreeCtrl.node.metadata.metadataUrl> <span ng-if=\\\"::gmfLayertreeCtrl.openLinksInNewWindow === true\\\"> <a title=\\\"{{'More informations'|translate}}\\\" href={{::layertreeCtrl.node.metadata.metadataUrl}} target=blank_> </a> </span> <span ng-if=\\\"::gmfLayertreeCtrl.openLinksInNewWindow !== true\\\"> <a title=\\\"{{'More informations'|translate}}\\\" href=\\\"\\\" ng-click=gmfLayertreeCtrl.displayMetadata(layertreeCtrl)> </a> </span> </span> </span> </div> <div class=gmf-layertree-node-menu id=gmf-layertree-node-menu-{{::layertreeCtrl.uid}} style=display:none ng-if=::gmfLayertreeCtrl.supportsCustomization(layertreeCtrl)> <div ng-if=::gmfLayertreeCtrl.supportsOpacityChange(layertreeCtrl)> <i class=\\\"fa fa-tint fa-fw\\\"></i> <span for=layer-opactity>{{'Opacity'|translate}}</span> <input class=input-action name=layer-opactity type=range min=0 max=1 step=0.01 ng-model=layertreeCtrl.layer.opacity /> </div> <a class=gmf-layertree-node-menu-togglelegend ng-if=::gmfLayertreeCtrl.supportsLegend(layertreeCtrl) data-toggle=collapse ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\" href=\\\"\\\"> <span class=\\\"fa fa-th-list\\\"> </span> {{'Show/hide legend'|translate}} </a> </div> <div ng-if=\\\"::!layertreeCtrl.isRoot && gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend\\\" id=gmf-layertree-node-{{::layertreeCtrl.uid}}-legend class=\\\"collapse gmf-layertree-legend\\\" ng-class=\\\"::[layertreeCtrl.node.metadata.isLegendExpanded ? 'in' : '']\\\"> <a title=\\\"{{'Hide legend'|translate}}\\\" data-toggle=collapse ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\" href=\\\"\\\"> {{'Hide legend'|translate}} </a> <div ng-if=\\\"gmfLayertreeCtrl.isNodeLegendVisible('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\"> <div ng-repeat=\\\"(title, url) in ::gmfLayertreeCtrl.getLegendsObject(layertreeCtrl)\\\"> <p ng-if=\\\"::gmfLayertreeCtrl.getNumberOfLegendsObject(layertreeCtrl) > 1\\\">{{title|translate}}</p> <img ng-src={{url}}> </div> </div> </div> <ul class=gmf-layertree-root-external-datasources ng-if=\\\"layertreeCtrl.isRoot && (gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmsGroups.length || gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmtsGroups.length || gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup.dataSources.length)\\\"> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-repeat=\\\"wmtsGroup in gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmtsGroups\\\" group=wmtsGroup> </gmf-datasourcegrouptree> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-repeat=\\\"wmsGroup in gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmsGroups\\\" group=wmsGroup> </gmf-datasourcegrouptree> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-if=gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup.dataSources.length group=gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup> </gmf-datasourcegrouptree> </ul> <ul id=gmf-layertree-layer-group-{{::layertreeCtrl.uid}} ng-if=::layertreeCtrl.node.children ng-class=\\\"{collapse: !layertreeCtrl.isRoot, in : layertreeCtrl.node.metadata.isExpanded}\\\" ngeo-sortable=\\\"::layertreeCtrl.isRoot && layertreeCtrl.node.children\\\" ngeo-sortable-options=\\\"{handleClassName: 'ngeo-sortable-handle', draggerClassName: 'gmf-layertree-dragger', placeholderClassName : 'gmf-layertree-curr-drag-item'}\\\" ngeo-sortable-callback=::gmfLayertreeCtrl.afterReorder ngeo-sortable-callback-ctx=::gmfLayertreeCtrl> <li class=gmf-layertree-node ng-repeat=\\\"node in layertreeCtrl.node.children\\\" ng-class=\\\"'gmf-layertree-depth-' + layertreeCtrl.depth\\\" ngeo-layertree=node ngeo-layertree-notroot ngeo-layertree-map=layertreeCtrl.map ngeo-layertree-nodelayerexpr=layertreeCtrl.nodelayerExpr ngeo-layertree-listenersexpr=layertreeCtrl.listenersExpr> </li> </ul> \";","module.exports = \"<span ng-if=::!layertreeCtrl.isRoot>{{::layertreeCtrl.node.name}}</span> <input type=checkbox ng-if=\\\"::layertreeCtrl.node && !layertreeCtrl.node.children\\\" ng-model=layertreeCtrl.getSetActive ng-model-options=\\\"{getterSetter: true}\\\"/> <ul ng-if=::layertreeCtrl.node.children> <li ng-repeat=\\\"node in ::layertreeCtrl.node.children\\\" ngeo-layertree=::node ngeo-layertree-notroot ngeo-layertree-map=layertreeCtrl.map ngeo-layertree-nodelayerexpr=layertreeCtrl.nodelayerExpr ngeo-layertree-listenersexpr=layertreeCtrl.listenersExpr> </li> </ul> \";","module.exports = \"<div class=\\\"gmf-layertree-group gmf-layertree-depth-1 {{$ctrl.group.visibilityState}}\\\"> <a data-toggle=collapse href=#gmf-layertree-layer-group-{{::$ctrl.getGroupUid()}} aria-expanded=true class=\\\"fa gmf-layertree-expand-node fa-fw\\\"> </a> <a class=\\\"fa fa-fw gmf-layertree-state\\\" href ng-click=$ctrl.toggle()> </a> <a class=gmf-layertree-name href ng-click=$ctrl.toggle()> <span>{{$ctrl.group.title | translate}}</span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-click=$ctrl.remove()> <span class=\\\"fa fa-trash\\\"></span> </a> </span> </div> <ul id=gmf-layertree-layer-group-{{::$ctrl.getGroupUid()}} class=\\\"collapse in\\\"> <li class=\\\"gmf-layertree-node gmf-layertree-depth-2\\\" ng-class=\\\"[dataSource.visible ? 'on' : 'off']\\\" ng-repeat=\\\"dataSource in $ctrl.group.dataSources\\\"> <div class=gmf-layertree-leaf> <a href ng-click=$ctrl.toggleDataSource(dataSource) class=\\\"gmf-layertree-layer-icon gmf-layertree-no-layer-icon\\\"> </a> <a class=gmf-layertree-name href ng-click=$ctrl.toggleDataSource(dataSource)> <span>{{dataSource.name | translate}}</span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-click=$ctrl.removeDataSource(dataSource)> <span class=\\\"fa fa-trash\\\"></span> </a> </span> </div> </li> </ul> \";","module.exports = \"<div class=form-group ng-switch=$ctrl.filtrableDataSources.length> <span ng-switch-when=0 translate>No filtrable layer available!</span> <select class=form-control ng-disabled=$ctrl.aRuleIsActive ng-switch-default ng-model=$ctrl.gmfDataSourceBeingFiltered.dataSource ng-options=\\\"dataSource.name | translate for dataSource in $ctrl.filtrableDataSources\\\"> <option value=\\\"\\\" translate>-- Layer to filter --</option> </select> <div ng-if=\\\"$ctrl.customRules && $ctrl.directedRules && $ctrl.readyDataSource\\\"> <hr class=gmf-filterselector-separator /> <div class=\\\"dropdown gmf-filterselector-savedfilters\\\"> <a class=\\\"btn btn-link dropdown-toggle ngeo-filter-condition-button\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive || $ctrl.gmfSavedFilters.currentDataSourceItems.length === 0}\\\" type=button data-toggle=dropdown ng-disabled=\\\"$ctrl.aRuleIsActive || $ctrl.gmfSavedFilters.currentDataSourceItems.length === 0\\\"> <span translate>Saved</span> <span class=caret></span> </a> <ul class=dropdown-menu> <li ng-repeat=\\\"item in $ctrl.gmfSavedFilters.currentDataSourceItems\\\"> <a href ng-click=$ctrl.saveFilterLoadItem(item)> <span>{{::item.name}}</span> </a> </li> <li role=separator class=divider></li> <li> <a href ng-click=$ctrl.saveFilterManage()> <span translate>Manage saved filters</span> </a> </li> </ul> </div> <ngeo-filter a-rule-is-active=$ctrl.aRuleIsActive custom-rules=$ctrl.customRules datasource=$ctrl.readyDataSource directed-rules=$ctrl.directedRules feature-overlay=$ctrl.featureOverlay map=$ctrl.map tool-group=$ctrl.toolGroup> </ngeo-filter> <div> <a class=\\\"btn btn-link gmf-filterselector-savebtn\\\" type=button data-toggle=dropdown ng-click=\\\"!$ctrl.aRuleIsActive && $ctrl.saveFilterShowModal()\\\" ng-disabled=$ctrl.aRuleIsActive> <span class=\\\"fa fa-save\\\"></span> <span translate>Save</span> </a> </div> </div> <ngeo-modal ng-model=$ctrl.saveFilterSaveModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title>{{'Save filter' | translate}}</h4> </div> <div class=modal-body> <p class=gmf-filterselector-savefilter-desc translate> You can save the filter that you created to re-load it later. </p> <input type=text class=form-control name=name ng-model=$ctrl.saveFilterName placeholder=\\\"{{'Filter name' | translate}}\\\"/> </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'Cancel' | translate}}</button> <button type=button ng-click=$ctrl.saveFilterSave() ng-disabled=\\\"$ctrl.saveFilterName === ''\\\" class=\\\"btn btn-primary\\\">{{'Save' | translate}}</button> </div> </ngeo-modal> <ngeo-modal ng-model=$ctrl.saveFilterManageModalShown> <div class=gmf-filterselector-managefilter-modal> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title>{{'Manage filters' | translate}}</h4> </div> <div class=modal-body> <ul> <li ng-repeat=\\\"item in $ctrl.gmfSavedFilters.currentDataSourceItems\\\"> <span>{{::item.name}}</span> <a href ng-click=$ctrl.saveFilterRemoveItem(item)> {{ 'Delete' | translate }} </a> <div class=gmf-eol></div> </li> </ul> </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'Close' | translate}}</button> </div> </div> </ngeo-modal> </div> \";","module.exports = \"<div class=dropdown> <a class=\\\"btn btn-link dropdown-toggle ngeo-filter-condition-button\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive}\\\" type=button data-toggle=dropdown ng-disabled=$ctrl.aRuleIsActive> <span class=\\\"fa fa-cog\\\"></span> <span class=caret></span> </a> <ul class=dropdown-menu> <li class=ngeo-filter-condition-criteria-header translate>Criteria taken into account</li> <li ng-repeat=\\\"condition in ::$ctrl.conditions\\\"> <a href ng-click=$ctrl.setCondition(condition)> <span ng-class=\\\"{'ngeo-filter-condition-criteria-active': condition.value == $ctrl.datasource.filterCondition}\\\" class=\\\"fa fa-check ngeo-filter-condition-criteria\\\"> </span> <span>{{::condition.text | translate}}</span> </a> </li> </ul> </div> <ngeo-rule ng-repeat=\\\"rule in $ctrl.directedRules\\\" feature-overlay=::$ctrl.featureOverlay class=ngeo-filter-rule-directed map=$ctrl.map rule=rule tool-group=$ctrl.toolGroup> </ngeo-rule> <hr class=ngeo-filter-separator-rules /> <div ng-repeat=\\\"rule in $ctrl.customRules\\\"> <a class=\\\"btn btn-xs btn-link ngeo-filter-rule-custom-rm-btn\\\" ng-click=\\\"!$ctrl.aRuleIsActive && $ctrl.removeCustomRule(rule)\\\" ng-disabled=$ctrl.aRuleIsActive href> <span class=\\\"fa fa-remove\\\"></span> </a> <ngeo-rule feature-overlay=::$ctrl.featureOverlay class=ngeo-filter-rule-custom map=$ctrl.map rule=rule tool-group=$ctrl.toolGroup> </ngeo-rule> </div> <div class=dropdown> <a class=\\\"btn btn-link dropdown-toggle\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive}\\\" type=button data-toggle=dropdown ng-disabled=$ctrl.aRuleIsActive> <span translate>+ Add a new criteria</span> <span class=caret></span> </a> <ul class=dropdown-menu> <li ng-repeat=\\\"attribute in ::$ctrl.geometryAttributes\\\"> <a href ng-click=$ctrl.createAndAddCustomRule(attribute)> <span translate>Spatial filter</span> </a> </li> <li role=presentation class=divider></li> <li ng-repeat=\\\"attribute in ::$ctrl.otherAttributes\\\"> <a href ng-click=$ctrl.createAndAddCustomRule(attribute)> <span>{{::attribute.name | translate}}</span> </a> </li> </ul> </div> <hr class=ngeo-filter-separator-criteria /> <a class=\\\"btn btn-link\\\" type=button ng-click=$ctrl.apply() ng-disabled=\\\"$ctrl.hasARule() === false || $ctrl.datasource.visible === false\\\"> <span class=\\\"fa fa-check\\\"></span> <span translate>Apply filter</span> </a> <a class=\\\"btn btn-link\\\" type=button ng-click=$ctrl.getData() ng-disabled=\\\"$ctrl.hasARule() === false || $ctrl.datasource.visible === false\\\"> <span class=\\\"fa fa-chevron-right\\\"></span> <span translate>Get data</span> </a> \";","module.exports = \"<div class=dropdown ng-class=\\\"{open: $ctrl.rule.active}\\\"> <a class=\\\"btn btn-default btn-sm dropdown-toggle\\\" type=button ng-click=$ctrl.toggle()> <span>{{ ::$ctrl.clone.name | translate }}</span> <span class=caret></span> </a> <div class=\\\"dropdown-menu form-group\\\"> <select class=\\\"form-control ngeo-rule-operators-list\\\" ng-disabled=$ctrl.drawActive ng-if=::$ctrl.clone.operators ng-model=$ctrl.clone.operator ng-options=\\\"$ctrl.operators[operator] | translate for operator in ::$ctrl.clone.operators track by operator\\\"> </select> <div ng-switch=::$ctrl.clone.type> <div class=\\\"ngeo-rule-type-date form-group\\\" ng-if=$ctrl.rule.active ng-switch-when=date|datetime ng-switch-when-separator=|> <div ng-switch=$ctrl.clone.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <ngeo-date-picker time=$ctrl.timeRangeMode on-date-selected=$ctrl.onDateRangeSelected(time)> </ngeo-date-picker> </div> <div ng-switch-default> <ngeo-date-picker time=$ctrl.timeValueMode on-date-selected=$ctrl.onDateSelected(time)> </ngeo-date-picker> </div> </div> </div> <div class=\\\"ngeo-rule-type-geometry form-group\\\" ng-switch-when=geometry> <div ng-switch=$ctrl.geomType> <span class=\\\"gmf-icon gmf-icon-point\\\" ng-switch-when=Point> </span> <span class=\\\"gmf-icon gmf-icon-line\\\" ng-switch-when=LineString> </span> <span class=\\\"gmf-icon gmf-icon-polygon\\\" ng-switch-when=Polygon> </span> <span class=\\\"gmf-icon gmf-icon-circle\\\" ng-switch-when=Circle> </span> <span class=\\\"gmf-icon gmf-icon-rectangle\\\" ng-switch-when=Rectangle> </span> </div> <ngeo-drawfeature ngeo-drawfeature-active=$ctrl.drawActive ngeo-drawfeature-features=$ctrl.drawnFeatures ngeo-drawfeature-map=$ctrl.map> <div ngeo-btn-group class=btn-group> <a data-toggle=tooltip title=\\\"{{'Draw a point on the map' | translate}}\\\" href ngeo-btn ngeo-drawpoint class=\\\"btn btn-sm btn-default ngeo-drawfeature-point\\\" ng-show=\\\"['intersects', 'within'].indexOf($ctrl.clone.operator) !== -1\\\" ng-class=\\\"{active: dfCtrl.drawPoint.active}\\\" ng-model=dfCtrl.drawPoint.active> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a line on the map' | translate}}\\\" href ngeo-btn ngeo-measurelength class=\\\"btn btn-sm btn-default ngeo-drawfeature-linestring\\\" ng-show=\\\"['intersects', 'within'].indexOf($ctrl.clone.operator) !== -1\\\" ng-class=\\\"{active: dfCtrl.measureLength.active}\\\" ng-model=dfCtrl.measureLength.active> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a polygon on the map' | translate}}\\\" href ngeo-btn ngeo-measurearea class=\\\"btn btn-sm btn-default ngeo-drawfeature-polygon\\\" ng-class=\\\"{active: dfCtrl.measureArea.active}\\\" ng-model=dfCtrl.measureArea.active> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a circle on the map' | translate}}\\\" href ngeo-btn ngeo-measureazimut class=\\\"btn btn-sm btn-default ngeo-drawfeature-circle\\\" ng-class=\\\"{active: dfCtrl.measureAzimut.active}\\\" ng-model=dfCtrl.measureAzimut.active> <span class=\\\"gmf-icon gmf-icon-circle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a rectangle on the map' | translate}}\\\" href ngeo-btn ngeo-drawrectangle class=\\\"btn btn-sm btn-default ngeo-drawfeature-rectangle\\\" ng-class=\\\"{active: dfCtrl.drawRectangle.active}\\\" ng-model=dfCtrl.drawRectangle.active> <span class=\\\"gmf-icon gmf-icon-rectangle\\\"></span> </a> </div> <div class=ngeo-rule-type-geometry-instructions ng-if=$ctrl.drawActive> <span ng-if=dfCtrl.drawPoint.active> {{ 'Draw a point on the map.' | translate }} </span> <span ng-if=dfCtrl.measureLength.active> {{ 'Draw a line string on the map.' | translate }} </span> <span ng-if=dfCtrl.measureArea.active> {{ 'Draw a polygon on the map.' | translate }} </span> <span ng-if=dfCtrl.measureAzimut.active> {{ 'Draw a circle on the map.' | translate }} </span> <span ng-if=dfCtrl.drawRectangle.active> {{ 'Draw a rectangle on the map.' | translate }} </span> </div> </ngeo-drawfeature> </div> <div class=\\\"checkbox ngeo-rule-type-select\\\" ng-switch-when=select> <a ng-click=$ctrl.selectAllChoices() href>{{ All | translate}} </a> <label class=\\\"form-group ol-unselectable\\\" ng-repeat=\\\"choice in ::$ctrl.clone.choices\\\"> <input ng-checked=\\\"$ctrl.clone.getExpression() && $ctrl.clone.getExpression().split(',').indexOf(choice) > -1\\\" ng-click=$ctrl.toggleChoiceSelection(choice) type=checkbox value=choice /> <span>{{ choice | translate }}</span> </label> </div> <div class=\\\"form-group ngeo-rule-type-text\\\" ng-switch-default> <div ng-switch=$ctrl.clone.operator> <div ng-switch-when=..> <input type=number class=form-control ng-model=$ctrl.clone.lowerBoundary /> <input type=number class=form-control ng-model=$ctrl.clone.upperBoundary /> </div> <div ng-switch-default> <input type=number class=form-control ng-if=\\\"$ctrl.clone.type === 'number'\\\" ng-model=$ctrl.clone.expression /> <input type=text class=form-control ng-if=\\\"$ctrl.clone.type !== 'number'\\\" ng-model=$ctrl.clone.expression /> </div> </div> </div> <div class=ngeo-rule-btns> <button class=\\\"btn btn-xs btn-default\\\" ng-click=$ctrl.apply() type=button>{{'Apply' | translate}}</button> <button class=\\\"btn btn-xs btn-default\\\" ng-click=$ctrl.cancel() type=button>{{'Cancel' | translate}}</button> </div> </div> </div> </div> <div class=ngeo-rule-value ng-if=\\\"$ctrl.rule.value !== null\\\"> <a class=\\\"btn btn-xs btn-link\\\" ng-click=\\\"!$ctrl.rule.active && $ctrl.reset()\\\" ng-disabled=$ctrl.rule.active href> <span class=\\\"fa fa-remove\\\"></span> </a> <div ng-switch=::$ctrl.rule.type> <div ng-switch-when=date|datetime ng-switch-when-separator=|> <div ng-switch=$ctrl.rule.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <span translate>From </span> <span>{{ $ctrl.timeToDate($ctrl.rule.lowerBoundary) }}</span> <span translate> to </span> <span>{{ $ctrl.timeToDate($ctrl.rule.upperBoundary) }}</span> </div> <div ng-switch-default> <span>{{ $ctrl.operatorsShortFormat[$ctrl.rule.operator] }}</span> <span>{{ $ctrl.timeToDate($ctrl.rule.getExpression()) }}</span> </div> </div> </div> <div ng-switch-when=geometry> <span>{{ $ctrl.operators[$ctrl.rule.operator] }}</span> <span ng-switch=$ctrl.getRuleGeometryType()> <span class=\\\"gmf-icon gmf-icon-point\\\" ng-switch-when=Point> </span> <span class=\\\"gmf-icon gmf-icon-line\\\" ng-switch-when=LineString> </span> <span class=\\\"gmf-icon gmf-icon-polygon\\\" ng-switch-when=Polygon> </span> <span class=\\\"gmf-icon gmf-icon-circle\\\" ng-switch-when=Circle> </span> <span class=\\\"gmf-icon gmf-icon-rectangle\\\" ng-switch-when=Rectangle> </span> </span> </div> <div ng-switch-when=select> <span ng-repeat=\\\"choice in $ctrl.rule.getExpression().split(',')\\\"> {{ choice | translate }}{{ $last ? '' : ', ' }} </span> </div> <div ng-switch-default> <div ng-switch=$ctrl.rule.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <span translate>Between </span> <span>{{ $ctrl.rule.lowerBoundary }}</span> <span translate> and </span> <span>{{ $ctrl.rule.upperBoundary }}</span> </div> <div ng-switch-default> <span>{{ $ctrl.operatorsShortFormat[$ctrl.rule.operator] }}</span> <span>{{ $ctrl.rule.getExpression() }}</span> </div> </div> </div> </div> </div> \";","module.exports = \"<div class=ngeo-datepicker> <form name=dateForm class=ngeo-datepicker-form novalidate> <div ng-if=\\\"::datepickerCtrl.time.widget === 'datepicker'\\\"> <div class=ngeo-datepicker-start-date> <span ng-if=\\\"::datepickerCtrl.time.mode === 'range'\\\" translate>From:</span> <span ng-if=\\\"::datepickerCtrl.time.mode !== 'range'\\\" translate>Date:</span> <input name=sdate ui-date=datepickerCtrl.sdateOptions ng-model=datepickerCtrl.sdate required=\\\"\\\"/> </div> <div class=ngeo-datepicker-end-date ng-if=\\\"::datepickerCtrl.time.mode === 'range'\\\"> <span translate>To:</span> <input name=edate ui-date=datepickerCtrl.edateOptions ng-model=datepickerCtrl.edate required=\\\"\\\"/> </div> </div> </form> </div> \";","module.exports = \"<h4 class=\\\"popover-title ngeo-popup-title\\\"> <span ng-bind-html=title></span> <button type=button class=close ng-click=\\\"open = false\\\"> &times;</button> </h4> <div class=popover-content ng-bind-html=content></div> \";","module.exports = \"<ul class=gmf-backgroundlayerselector> <li ng-repeat=\\\"layer in ctrl.bgLayers\\\" ng-click=ctrl.setLayer(layer) ng-class=\\\"{'gmf-backgroundlayerselector-active': ctrl.bgLayer == layer, 'gmf-backgroundlayerselector-disabled': ctrl.opacityLayer == layer}\\\"> <img class=gmf-thumb ng-src=\\\"{{::layer.get('metadata')['thumbnail']}}\\\"/> <span class=gmf-text>{{layer.get(\\\"label\\\") | translate}}</span> <span ng-class=\\\"{'gmf-backgroundlayerselector-opacity-check': ctrl.opacityLayer == layer}\\\"></span> </li> <input ng-if=ctrl.opacityLayer class=\\\"input-action gmf-backgroundlayerselector-opacity-slider\\\" name=bg-layer-opacity type=range min=0 max=1 step=0.01 ng-model=ctrl.getSetBgLayerOpacity ng-model-options=\\\"{getterSetter: true}\\\"> </ul> \";","module.exports = \"<div ng-if=$ctrl.gmfUser.username> <div class=form-group> <span>{{'Logged in as' | translate}}</span> <strong>{{ ::$ctrl.gmfUser.username }}</strong>. </div> <form name=logoutForm role=form ng-submit=$ctrl.logout() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\" ng-if=!$ctrl.changingPassword> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Logout' | translate}}\\\"/> </div> <div class=form-group> <input ng-show=$ctrl.allowPasswordChange type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Change password' | translate}}\\\" ng-click=\\\"$ctrl.changingPassword = true\\\"/> </div> </form> <form name=changePasswordForm role=form ng-submit=$ctrl.changePassword() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\" ng-if=$ctrl.changingPassword> <div class=form-group> <input type=password class=form-control name=oldpassword ng-model=$ctrl.oldPwdVal ng-attr-placeholder=\\\"{{'Old password' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=newpassword ng-model=$ctrl.newPwdVal ng-attr-placeholder=\\\"{{'New password' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=newpasswordconfirm ng-model=$ctrl.newPwdConfVal ng-attr-placeholder=\\\"{{'Confirm new password' | translate}}\\\"/> </div> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Change password' | translate}}\\\"/> </div> <div class=form-group> <input type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Cancel' | translate}}\\\" ng-if=!$ctrl.userMustChangeItsPassword() ng-click=$ctrl.changePasswordReset() /> <input type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Logout' | translate}}\\\" ng-if=$ctrl.userMustChangeItsPassword() ng-click=$ctrl.logout() /> </div> </form> <div ng-show=$ctrl.error class=\\\"gmf-authentication-error help-block\\\"></div> <ngeo-modal ng-model=$ctrl.changePasswordModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Password Changed' | translate}} </h4> </div> <div class=modal-body> {{'Your password has successfully been changed.' | translate}} </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'OK' | translate}}</button> </div> </ngeo-modal> </div> <div ng-if=!$ctrl.gmfUser.username> <form name=loginForm role=form ng-submit=$ctrl.login() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\"> <div class=form-group> <input type=text class=form-control name=login ng-model=$ctrl.loginVal ng-attr-placeholder=\\\"{{'Username' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=password ng-model=$ctrl.pwdVal ng-attr-placeholder=\\\"{{'Password' | translate}}\\\"/> </div> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Connect' | translate}}\\\"/> </div> <div ng-show=$ctrl.allowPasswordReset class=form-group> <a ng-click=$ctrl.resetPassword() href=\\\"\\\">{{'Password forgotten?' | translate}}</a> </div> </form> <div ng-show=$ctrl.error class=\\\"gmf-authentication-error help-block\\\"></div> <ngeo-modal ng-model=$ctrl.resetPasswordModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Password forgotten?' | translate}} </h4> </div> <div class=modal-body translate> A new password has just been sent to you by e-mail. </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'OK' | translate}}</button> </div> </ngeo-modal> </div> \";"],"sourceRoot":""}