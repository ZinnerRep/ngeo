{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/goog.asserts.prod.js","webpack:///./src/GeometryType.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/format/AttributeType.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/rule/Rule.js","webpack:///./src/datasource/OGC.js","webpack:///./contribs/gmf/src/index.js","webpack:///./src/misc/FeatureHelper.js","webpack:///./src/misc/ToolActivate.js","webpack:///./src/utils.js","webpack:///./src/message/Message.js","webpack:///./src/CustomEvent.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/rule/Geometry.js","webpack:///./src/map/LayerHelper.js","webpack:///./src/layertree/Controller.js","webpack:///./src/interaction/Measure.js","webpack:///./src/misc/filters.js","webpack:///./src/query/MapQuerent.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/misc/WMSTime.js","webpack:///./src/misc/decorate.js","webpack:///./src/misc/debounce.js","webpack:///./src/misc/EventHelper.js","webpack:///./contribs/gmf/src/layertree/SyncLayertreeMap.js","webpack:///./src/filter/Condition.js","webpack:///./src/rule/Date.js","webpack:///./src/rule/Text.js","webpack:///./src/filter/RuleHelper.js","webpack:///./src/datasource/File.js","webpack:///./src/datasource/FileGroup.js","webpack:///./src/datasource/OGCGroup.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./contribs/gmf/src/datasource/ExternalDataSourcesManager.js","webpack:///./src/datasource/DataSources.js","webpack:///./contribs/gmf/src/editing/editFeatureComponent.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/rule/Select.js","webpack:///./src/misc/ToolActivateMgr.js","webpack:///./src/misc/btnComponent.js","webpack:///./src/statemanager/Service.js","webpack:///./src/interaction/common.js","webpack:///./contribs/gmf/src/authentication/Service.js","webpack:///./src/misc/Time.js","webpack:///./src/message/popupComponent.js","webpack:///./src/message/Popup.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/format/XSDAttribute.js","webpack:///./src/datasource/Group.js","webpack:///./src/WFSDescribeFeatureType.js","webpack:///./src/query/Querent.js","webpack:///./src/format/WFSAttribute.js","webpack:///./src/datasource/Helper.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./src/interaction/Translate.js","webpack:///./src/interaction/Rotate.js","webpack:///./src/draw/features.js","webpack:///./src/Menu.js","webpack:///./src/statemanager/Location.js","webpack:///./src/download/service.js","webpack:///./contribs/gmf/src/datasource/DataSourceBeingFiltered.js","webpack:///./src/message/modalComponent.js","webpack:///./src/message/Notification.js","webpack:///./src/misc/php-date-formatter.js","webpack:///./contribs/gmf/src/permalink/ShareService.js","webpack:///./src/interaction/MeasureLength.js","webpack:///./src/interaction/MeasureArea.js","webpack:///./contribs/gmf/src/authentication/component.js","webpack:///./contribs/gmf/src/authentication/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./contribs/gmf/src/backgroundlayerselector/component.js","webpack:///./contribs/gmf/src/datasource/Helper.js","webpack:///./contribs/gmf/src/datasource/OGC.js","webpack:///./contribs/gmf/src/datasource/WFSAliases.js","webpack:///./contribs/gmf/src/datasource/Manager.js","webpack:///./contribs/gmf/src/datasource/module.js","webpack:///./src/message/Disclaimer.js","webpack:///./contribs/gmf/src/disclaimer/component.js","webpack:///./contribs/gmf/src/filters/SavedFilters.js","webpack:///./src/filter/ruleComponent.js","webpack:///./src/filter/component.js","webpack:///./contribs/gmf/src/filters/filterselectorComponent.js","webpack:///./contribs/gmf/src/filters/module.js","webpack:///./contribs/gmf/src/layertree/timeSliderComponent.js","webpack:///./contribs/gmf/src/layertree/module.js","webpack:///./contribs/gmf/src/permalink/module.js","webpack:///./src/map/component.js","webpack:///./src/map/scaleselector.js","webpack:///./src/map/module.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./contribs/gmf/src/map/mousepositionComponent.js","webpack:///./contribs/gmf/src/map/module.js","webpack:///./src/grid/Config.js","webpack:///./src/grid/component.js","webpack:///./contribs/gmf/src/query/gridComponent.js","webpack:///./src/misc/swipe.js","webpack:///./contribs/gmf/src/query/windowComponent.js","webpack:///./contribs/gmf/src/query/extraModule.js","webpack:///./contribs/gmf/src/search/module.js","webpack:///./contribs/gmf/src/theme/selectorComponent.js","webpack:///./contribs/gmf/src/theme/module.js","webpack:///./src/message/displaywindowComponent.js","webpack:///./src/misc/controlComponent.js","webpack:///./src/misc/filereaderComponent.js","webpack:///./src/misc/getBrowserLanguage.js","webpack:///./src/misc/extraModule.js","webpack:///./src/query/mapQueryComponent.js","webpack:///./src/statemanager/WfsPermalink.js","webpack:///./contribs/gmf/src/controllers/AbstractAppController.js","webpack:///./src/interaction/ModifyCircle.js","webpack:///./src/interaction/ModifyRectangle.js","webpack:///./src/interaction/Modify.js","webpack:///./contribs/gmf/src/import/wmsCapabilityLayertreeComponent.js","webpack:///./contribs/gmf/src/import/wmtsCapabilityLayertreeComponent.js","webpack:///./contribs/gmf/src/import/importdatasourceComponent.js","webpack:///./contribs/gmf/src/import/module.js","webpack:///./src/draw/Controller.js","webpack:///./src/draw/point.js","webpack:///./src/draw/rectangle.js","webpack:///./src/draw/text.js","webpack:///./src/measure/area.js","webpack:///./src/measure/azimut.js","webpack:///./src/measure/length.js","webpack:///./src/draw/component.js","webpack:///./contribs/gmf/src/editing/XSDAttributes.js","webpack:///./contribs/gmf/src/editing/EditFeature.js","webpack:///./contribs/gmf/src/raster/RasterService.js","webpack:///./src/proj/somerc.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/search/searchDirective.js","webpack:///./src/misc/colorpickerComponent.js","webpack:///./src/misc/AutoProjection.js","webpack:///./contribs/gmf/src/search/FulltextSearch.js","webpack:///./src/download/Csv.js","webpack:///./src/map/resizemap.js","webpack:///./contribs/gmf/src/permalink/shareComponent.js","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.js","webpack:///./src/statemanager/module.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/misc/datepickerComponent.js","webpack:///./src/format/Attribute.js","webpack:///./contribs/gmf/src/editing/EnumerateAttribute.js","webpack:///./src/misc/File.js","webpack:///./contribs/gmf/src/controllers/AbstractDesktopController.js","webpack:///./contribs/gmf/src/editing/editFeatureSelectorComponent.js","webpack:///./contribs/gmf/src/editing/module.js","webpack:///./contribs/gmf/src/contextualdata/component.js","webpack:///./contribs/gmf/src/contextualdata/module.js","webpack:///./src/print/VectorEncoder.js","webpack:///./src/print/Service.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/search/createGeoJSONBloodhound.js","webpack:///./src/search/createLocationSearchBloodhound.js","webpack:///./src/search/module.js","webpack:///./contribs/gmf/src/drawing/featureStyleComponent.js","webpack:///./contribs/gmf/src/drawing/drawFeatureComponent.js","webpack:///./contribs/gmf/src/drawing/module.js","webpack:///./src/profile/d3Elevation.js","webpack:///./src/profile/elevationComponent.js","webpack:///./contribs/gmf/src/profile/component.js","webpack:///./contribs/gmf/src/profile/drawLineComponent.js","webpack:///./contribs/gmf/src/profile/module.js","webpack:///./src/query/bboxQueryComponent.js","webpack:///./contribs/gmf/src/raster/component.js","webpack:///./src/print/Utils.js","webpack:///./contribs/gmf/src/print/component.js","webpack:///./src/editing/createfeatureComponent.js","webpack:///./src/misc/datetimepickerComponent.js","webpack:///./src/editing/attributesComponent.js","webpack:///./src/editing/exportfeaturesComponent.js","webpack:///./src/misc/sortableComponent.js","webpack:///./src/message/popoverComponent.js","webpack:///./contribs/gmf/src/search/component.js","webpack:///./src/map/recenter.js","webpack:///./src/misc/syncArrays.js","webpack:///./src/layertree/component.js","webpack:///./src/olcs/constants.js","webpack:///./src/Popover.js","webpack:///./contribs/gmf/src/layertree/component.js","webpack:///./contribs/gmf/apps/appmodule.js","webpack:///./src/googlestreetview/component.js","webpack:///./src/googlestreetview/module.js","webpack:///./src/routing/NominatimService.js","webpack:///./src/routing/RoutingService.js","webpack:///./src/routing/NominatimInputComponent.js","webpack:///./src/routing/RoutingFeatureComponent.js","webpack:///./src/routing/RoutingComponent.js","webpack:///./src/routing/module.js","webpack:///./src/proj/EPSG2056.js","webpack:///./contribs/gmf/apps/desktop_alt/Controller.js","webpack:///./src/routing/routing.html","webpack:///./src/routing/routingfeature.html","webpack:///./src/routing/nominatiminput.html","webpack:///./src/googlestreetview/component.html","webpack:///./contribs/gmf/src/import/importdatasourceComponent.html","webpack:///./contribs/gmf/src/import/wmtsCapabilityLayertreeComponent.html","webpack:///./contribs/gmf/src/import/wmsCapabilityLayertreeComponent.html","webpack:///./contribs/gmf/src/raster/widgetComponent.html","webpack:///./contribs/gmf/src/profile/component.html","webpack:///./contribs/gmf/src/print/component.html","webpack:///./contribs/gmf/src/editing/editFeatureSelectorComponent.html","webpack:///./contribs/gmf/src/editing/editFeatureComponent.html","webpack:///./src/editing/attributescomponent.html","webpack:///./contribs/gmf/src/drawing/drawFeatureComponent.html","webpack:///./contribs/gmf/src/drawing/featureStyleComponent.html","webpack:///./src/message/displaywindowComponent.html","webpack:///./contribs/gmf/src/theme/selectorComponent.html","webpack:///./contribs/gmf/src/search/component.html","webpack:///./src/misc/colorpickerComponent.html","webpack:///./contribs/gmf/src/query/windowComponent.html","webpack:///./contribs/gmf/src/query/gridComponent.html","webpack:///./src/grid/component.html","webpack:///./contribs/gmf/src/map/mousepositionComponent.html","webpack:///./contribs/gmf/src/map/component.html","webpack:///./src/map/scaleselector.html","webpack:///./contribs/gmf/src/permalink/shareComponent.html","webpack:///./contribs/gmf/src/layertree/timesliderComponent.html","webpack:///./contribs/gmf/src/layertree/component.html","webpack:///./src/layertree/component.html","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.html","webpack:///./contribs/gmf/src/filters/filterselectorcomponent.html","webpack:///./src/filter/component.html","webpack:///./src/filter/rulecomponent.html","webpack:///./src/misc/datepickerComponent.html","webpack:///./src/message/popupcomponent.html","webpack:///./contribs/gmf/src/backgroundlayerselector/component.html","webpack:///./contribs/gmf/src/authentication/component.html"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","condition","opt_message","var_args","type","__webpack_exports__","CIRCLE","LINE_STRING","MULTI_LINE_STRING","MULTI_POINT","MULTI_POLYGON","POINT","POLYGON","RECTANGLE","TEXT","ANGLE","COLOR","IS_CIRCLE","IS_RECTANGLE","IS_TEXT","NAME","SHOW_LABEL","OPACITY","AZIMUT","SHOW_MEASURE","SIZE","STROKE","BOOLEAN","DATE","DATETIME","TIME","GEOMETRY","NUMBER","SELECT","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_6__","$http","$injector","$q","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","ol_events_EventTarget_js__WEBPACK_IMPORTED_MODULE_5__","this","addBlankBackgroundLayer_","undefined","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","defer","promise_","promise","loaded","bgLayerPromise_","ol_index_js__WEBPACK_IMPORTED_MODULE_2__","findGroupByLayerNodeName","themes","ii","theme","jj","children","group","childNodes","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","ol_array_js__WEBPACK_IMPORTED_MODULE_3__","findThemeByName","themeName","node","nodes","getBgLayers","_this","layerHelper","callback","item","layer","set","metadata","dimensions","ids","getIds","array","forEach","child","layerLayerCreationFn","ogcServers","gmfLayer","gmfLayerWMTS","goog_asserts_js__WEBPACK_IMPORTED_MODULE_0__","assert","url","createWMTSLayerFromCapabilitites","matrixSet","then","response","message","console","error","resolve","gmfLayerWMS","ogcServer","server","imageType","createBasicWMSLayer","layers","credential","fail","promiseSuccessFn","promises","background_layers","map","itemType","x","reverse","all","collection","filter","ol_Collection_js__WEBPACK_IMPORTED_MODULE_4__","createBasicGroup","layerGroupCreationFn","values","getString","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","getOgcServersObject","hasEditableLayers","hasEditableLayers_","_this2","some","hasNodeEditableLayers_","editable","getSnappingConfig","snappingConfig","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","params","role","cache_version","cache","withCredentials","errors","join","hasParam","alert","dispatchEvent","reject","NodeType","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","WMS","angular","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_1__","service","options","_classCallCheck","active_","active","expression","lowerBoundary_","lowerBoundary","operator_","operator","upperBoundary_","upperBoundary","isCustom_","isCustom","name_","operators_","operators","propertyName_","propertyName","type_","listenerKeys","getExpression","setExpression","reset","destroy","ol_events_js__WEBPACK_IMPORTED_MODULE_1__","_createClass","OperatorType","BETWEEN","TemporalOperatorType","DURING","EQUAL_TO","GREATER_THAN","GREATER_THAN_OR_EQUAL_TO","LESSER_THAN","LESSER_THAN_OR_EQUAL_TO","LIKE","NOT_EQUAL_TO","SpatialOperatorType","CONTAINS","INTERSECTS","WITHIN","BEGINS","ENDS","EQUALS","_possibleConstructorReturn","_ngeoDatasourceDataSo","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","ngeo_filter_Condition_js__WEBPACK_IMPORTED_MODULE_2__","AND","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","geometryName","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","queryable","_iterator","_isArray","Array","isArray","_i","iterator","_ref","next","done","ogcLayer","wfsFormat","supportsWFS","format","ol_format_GML3_js__WEBPACK_IMPORTED_MODULE_5__","GML2","ol_format_GML2_js__WEBPACK_IMPORTED_MODULE_4__","ol_format_WFS_js__WEBPACK_IMPORTED_MODULE_6__","featureNS","featureType","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","ol_format_WMSGetFeatureInfo_js__WEBPACK_IMPORTED_MODULE_7__","wmsFormat_","_inherits","getAttributes","attributes","setAttributes","updateGeometryNameFromAttributes_","combinableWithDataSourceForWFS","dataSource","combinableForWFS","haveTheSameActiveDimensions","combinableWithDataSourceForWMS","combinableForWMS","isAnyOGCLayerInRange","res","queryableOnly","arguments","getInRangeOGCLayerNames","layerNames","_iterator2","_isArray2","_i2","_ref2","maxRes","minRes","getOGCLayerNames","_iterator3","_isArray3","_i3","_ref3","getFiltrableOGCLayerName","_iterator4","_isArray4","_i4","_ref4","attribute","ngeo_format_AttributeType_js__WEBPACK_IMPORTED_MODULE_3__","share","myActive","activeDimensions","itsActive","time","range","lower","upper","end","start","config","timeRangeValue","_iterator5","_isArray5","_i5","_ref5","ngeo_datasource_DataSource_js__WEBPACK_IMPORTED_MODULE_1__","guessServiceTypeByUrl","test","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BG_LAYER","EXTERNAL_DATASOURCES_NAMES","EXTERNAL_DATASOURCES_URLS","FEATURES","MAP_CROSSHAIR","MAP_TOOLTIP","MAP_X","MAP_Y","MAP_Z","TREE_GROUPS","WFS_LAYER","WFS_NGROUPS","WFS_SHOW_FEATURES","ol_style_Text_js__WEBPACK_IMPORTED_MODULE_24__","$filter","$filter_","decimals_","precision_","numberFormat_","unitPrefixFormat_","ngeoNumberCoordinates_","pointFilterFn_","pointFilterArgs_","filterElements","split","filterName","assertFunction","projection_","download_","setProjection","projection","setStyle","feature","opt_select","styles","getStyle","supportsVertex_","getVertexStyle","unshift","getHaloStyle_","style","getType","ngeo_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__","getLineStringStyle_","getPointStyle_","getPolygonStyle_","getTextStyle_","constructor","strokeWidth","getStrokeProperty","showLabel","getShowLabelProperty","showMeasure","getShowMeasureProperty","color","getRGBAColorProperty","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_23__","stroke","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_22__","width","textLabelValues","getMeasure","getNameProperty","textLabelValue","text","createTextStyle_","size","getSizeProperty","image","ol_style_Circle_js__WEBPACK_IMPORTED_MODULE_19__","radius","fill","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_20__","offsetY","font_size","optNumber","attrib","assertNumber","getNumber","opacity","getOpacityProperty","fillColor","azimut","ngeo_format_FeatureProperties_js__WEBPACK_IMPORTED_MODULE_3__","line","getRadiusLine","ngeo_interaction_Measure_js__WEBPACK_IMPORTED_MODULE_5__","getFormattedLength","geometry","angle","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_14__","getLastCoordinate","offsetX","Math","cos","PI","sin","exceedLength","getAngleProperty","createEditingStyles","white","blue","geom","getGeometry","zIndex","Infinity","opt_incGeomFunc","incGeomFunc","ol_style_RegularShape_js__WEBPACK_IMPORTED_MODULE_21__","points","innerMultiCoordinates","multiCoordinates","coordinates","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_11__","getCoordinates","ol_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_12__","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_15__","ol_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_16__","concat","ol_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_13__","supported","ol_array_js__WEBPACK_IMPORTED_MODULE_7__","haloSize","getFilteredFeatureValues","properties","getProperties","getGeometryName","getColorProperty","assertString","ol_color_js__WEBPACK_IMPORTED_MODULE_8__","assertBoolean","export","features","formatType","FormatType","GPX","exportGPX","KML","exportKML","ol_format_GPX_js__WEBPACK_IMPORTED_MODULE_17__","export_","ol_format_KML_js__WEBPACK_IMPORTED_MODULE_18__","fileName","opt_mimeType","mimeType","clones","clone","ol_Feature_js__WEBPACK_IMPORTED_MODULE_10__","writeOptions","dataProjection","featureProjection","writeFeatures","rotation","font","measure","ngeo_interaction_MeasureAzimut_js__WEBPACK_IMPORTED_MODULE_6__","getFormattedAzimutRadius","getFormattedArea","getFormattedPoint","args","panMapToFeature","opt_panDuration","panDuration","getSize","assertArray","view","getView","extent","calculateExtent","intersectsExtent","mapCenter","getCenter","featureCenter","getCoordinateAt","getInteriorPoint","ol_extent_js__WEBPACK_IMPORTED_MODULE_9__","getExtent","animate","center","duration","y","endPoint","getNonSpatialProperties","nonSpatialProperties","clearNonSpatialProperties","ngeo_download_service_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_misc_filters_js__WEBPACK_IMPORTED_MODULE_1__","toolContext","activePropertyName","getActive","setActive","newVal","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_6__","multiGeom","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_5__","ol_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_2__","appendPoint","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_1__","ol_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_3__","appendLineString","ol_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_4__","appendPolygon","navigator","userAgent","indexOf","hex","rgb","g","b","Error","colorZeroPadding","toString","queryString","queryData","substring","pair","indexOfEquals","decodeURIComponent","queryItem","encodeURIComponent","event","ol_events_condition_js__WEBPACK_IMPORTED_MODULE_0__","showMessage","show","getMessageObjects","ERROR","info","INFORMATION","success","SUCCESS","warn","WARNING","opt_type","msgObjects","msgObject","defaultType","msg","ol_events_Event_js__WEBPACK_IMPORTED_MODULE_1__","detail","ol_index_js__WEBPACK_IMPORTED_MODULE_0__","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_6__","featureUidToGroupIndex_","groups_","source_","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_5__","useSpatialIndex","layer_","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_3__","source","styleFunction_","updateWhileAnimating","updateWhileInteracting","addFeature","groupIndex","featureUid","removeFeature","clear","ol_obj_js__WEBPACK_IMPORTED_MODULE_4__","getLayer","getFeatureOverlay","styleFunction","ngeo_map_FeatureOverlay_js__WEBPACK_IMPORTED_MODULE_1__","init","setMap","defaultFunction","resolution","ngeo_format_AttributeType_js__WEBPACK_IMPORTED_MODULE_1__","_ngeoRuleRule","featureProperties","feature_","ol_Feature_js__WEBPACK_IMPORTED_MODULE_4__","format_","ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_5__","updatingExpression_","updatingGeometry_","geometryChangeListenerKey_","ol_events_js__WEBPACK_IMPORTED_MODULE_3__","handleFeatureGeometryChange_","setGeometryFromExpression_","registerGeometryChange_","writeGeometry","handleGeometryChange_","evt","assertInstanceof","target","ol_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_6__","readGeometry","setGeometry","ngeo_rule_Rule_js__WEBPACK_IMPORTED_MODULE_2__","ol_uri_js__WEBPACK_IMPORTED_MODULE_10__","ngeoTilesPreloadingLimit","tilesPreloadingLimit_","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","LAYERS","olServerType","replace","ol_source_ImageWMS_js__WEBPACK_IMPORTED_MODULE_7__","serverType","crossOrigin","updateParams","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_4__","createBasicWMSLayerFromDataSource","setVisible","visible","id","capabilitiesURL","layerName","opt_matrixSet","opt_dimensions","parser","ol_format_WMTSCapabilities_js__WEBPACK_IMPORTED_MODULE_2__","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_5__","preload","read","ol_source_WMTS_js__WEBPACK_IMPORTED_MODULE_9__","ol_obj_js__WEBPACK_IMPORTED_MODULE_6__","updateDimensions","setSource","ol_array_js__WEBPACK_IMPORTED_MODULE_1__","elt","index","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_3__","setLayers","getGroupFromMap","groupName","getLayerGroup","getLayers","getArray","existingGroup","addLayer","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","isLayerVisible","getVisible","currentResolution","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","getSource","ol_source_TileWMS_js__WEBPACK_IMPORTED_MODULE_8__","getParams","random","setZIndexToFirstLevelChildren","element","ZIndex","innerLayer","setZIndex","updateWMSLayerState","names","getQuerySourceIds","ol_layer_Layer_js__WEBPACK_IMPORTED_MODULE_5__","$scope","$rootScope","$attrs","isRoot","nodeExpr","rootScope_","state_","$watch","oldVal","$eval","mapExpr","parent","$parent","$on","uid","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","treeCtrl","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_4__","dataSource_","ngeo_misc_decorate_js__WEBPACK_IMPORTED_MODULE_1__","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","getState","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","getFirstParentTree","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","val","removeLayer","getDataSource","setDataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","traverseDepthFirst","visitor","controller","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_13__","ol_interaction_Interaction_js__WEBPACK_IMPORTED_MODULE_8__","handleEvent","handleEvent_","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","sketchFeature","continueMsg","decimals","precision","displayHelpTooltip_","displayHelpTooltip","startMsg","document","createElement","textContent","changeEventKey_","postcomposeEventKey_","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_11__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_12__","vectorLayer_","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_9__","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_10__","drawInteraction_","createDrawInteraction","sketchStyle","shouldHandleDrawInteractionActiveChange_","ol_events_js__WEBPACK_IMPORTED_MODULE_7__","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","updateState_","polygon","transform","abs","ol_sphere_js__WEBPACK_IMPORTED_MODULE_6__","getFormattedCircleArea","circle","pow","getRadius","lineString","c1","ol_proj_js__WEBPACK_IMPORTED_MODULE_4__","c2","point","opt_template","dragging","helpMsg","ol_dom_js__WEBPACK_IMPORTED_MODULE_3__","appendChild","setPosition","coordinate","getDrawInteraction","prevMap","getMap","removeInteraction","addInteraction","createMeasureTooltip_","handleMeasure","coord","innerHTML","classList","add","setOffset","ngeo_CustomEvent_js__WEBPACK_IMPORTED_MODULE_1__","unlistenerEvent_","createHelpTooltip_","removeHelpTooltip_","ol_Overlay_js__WEBPACK_IMPORTED_MODULE_5__","offset","positioning","addOverlay","removeOverlay","parentNode","removeChild","removeMeasureTooltip_","stopEvent","getTooltipElement","ol_string_js__WEBPACK_IMPORTED_MODULE_1__","Scalify","numberFilter","filterFn","scale","Number","$locale","formats","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","sign","nb_decimal","floor","log","factor","round","decimal","unit","str_number","groups","str_unit","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","divisor","prefix","index_max","postfix","space","NumberCoordinates","opt_fractionDigits","template","fractionDigits","parseInt","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","ol_math_js__WEBPACK_IMPORTED_MODULE_0__","dms","charAt","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","Duration","TimeUnits","freeze","SECONDS","MINUTES","HOURS","DAYS","pluralize","amount","formattedUnit","getPlural","output","remainder","ngeoDataSources","ngeoDataSourcesHelper","ngeoQuerent","ngeoQueryResult","dataSources_","ngeoDataSourcesHelper_","ngeoQuerent_","result_","limit_","limit","queryCountFirst_","queryCountFirst","tolerancePx_","tolerance","dataSourceNames_","$inject","issue","queryableDataSources","dataSources","getQueryableDataSources","tolerancePx","wfsCount","pending","handleResult_","total","sources","queried","tooManyResults","totalFeatureCount","_loop","idStr","querentResultItem","tooManyFeatures","typeSeparatedFeatures","filteredProperties","alias","unset","setProperties","featuresByType","ngeo_datasource_DataSources_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_datasource_Helper_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_query_Querent_js__WEBPACK_IMPORTED_MODULE_1__","ol_obj_js__WEBPACK_IMPORTED_MODULE_9__","$timeout","ngeoNotification","gmfThemes","ngeoStateManager","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","gmfThemes_","root","rootCtrl","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","ngeoStateManager_","ogcServers_","ol_events_js__WEBPACK_IMPORTED_MODULE_8__","handleThemesChange_","refreshFirstLevelGroups_","setFirstLevelGroups","firstLevelGroups","deleteParam","gmf_index_js__WEBPACK_IMPORTED_MODULE_0__","PermalinkParam","addFirstLevelGroups","opt_add","opt_silent","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","treeGroupsParam","updateState","cleanParams","alreadyAdded","groupID","rootChild","grp","cancel","addGroupByName","_this4","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_1__","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_3__","removeGroup","removeAll","cloneGroupNode_","toggleNodeCheck_","_this6","childNode","isChecked","notify","ngeo_message_Message_js__WEBPACK_IMPORTED_MODULE_4__","correspondingTreeCtrl","getOgcServer","mixed","goog_asserts_js__WEBPACK_IMPORTED_MODULE_2__","firstLevelGroupCtrl","gmfGroup","_this7","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this8","isExpanded","isLegendExpanded","nodeElement","$","hasClass","legendElement","is","_this9","ngeo_message_Notification_js__WEBPACK_IMPORTED_MODULE_5__","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_6__","ngeo_misc_Time_js__WEBPACK_IMPORTED_MODULE_1__","formatTimeValue","opt_useISOFormat","opt_toUTC","date","Date","utc","yearResolution","monthResolution","dayResolution","toISOString","formatWMSTimeParam","wmsTimeProperty","times","ol_source_Tile_js__WEBPACK_IMPORTED_MODULE_6__","interaction","ol_interaction_Interaction_js__WEBPACK_IMPORTED_MODULE_1__","ol_layer_Base_js__WEBPACK_IMPORTED_MODULE_2__","configurable","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","on","olEvent","ol_layer_Layer_js__WEBPACK_IMPORTED_MODULE_4__","ol_source_Image_js__WEBPACK_IMPORTED_MODULE_5__","$applyAsync","factory_","func","wait","invokeApply","timeout","_len","_key","context","factory","ol_events_js__WEBPACK_IMPORTED_MODULE_0__","listenerKeys_","addListenerKey","initListenerKey_","clearListenerKey","ngeoWMSTime","ngeoWMSTime_","ogcServersObject_","ogcServersObject","sync_","createLayer","dataLayerGroup","opt_position","createGroup_","createLeafInAMixedGroup_","initGmfLayerInANotMixedGroup_","updateLayerState_","goog_asserts_js__WEBPACK_IMPORTED_MODULE_1__","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_5__","groupNode","isFirstLevelGroup","printNativeAngle","createLayerFromGroup_","position","insertAt","isOneParentNotMixed_","timeParam","getTimeParam_","hasActiveChildren","ctrl","updateLayerReferences_","createWMTSLayer_","checked","leafNode","firstLevelGroup","getFirstLevelGroupCtrl_","newLayer","ol_index_js__WEBPACK_IMPORTED_MODULE_4__","querySourceIds","disclaimer","disclaimers","wmsTime","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_2__","timeValues","getOptions","isOneParentNotMix","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_0__","ngeo_misc_WMSTime_js__WEBPACK_IMPORTED_MODULE_3__","NOT","OR","rule_Date","AttributeType","Rule","Text","Text_classCallCheck","Text_possibleConstructorReturn","Text_inherits","RuleHelper_exports","ngeoFeatureHelper","RuleHelper_classCallCheck","ngeoFeatureHelper_","createRulesFromAttributes","opt_isCustom","rules","createRuleFromAttribute","rule","Geometry","Select","choices","goog_asserts_prod","createRules","optionsList","createRule","selectOptions","cloneRule","extendRule","sourceRule","destRule","serializeRules","serializeRule","obj","createFilter","mainFilter","conditions","createFilterFromRule_","srsName","Condition","format_filter","incTime","timeFilter","createTimeFilterFromDataSource_","createFilterString","filterString","filterNode","WFS","XMLSerializer","serializeToString","opt_srsName","rot","rsot","rtot","spatialTypes","numericTypes","beginValue","endValue","moment","subtract","selectedChoices","selectedChoice","numericExpression","stringExpression","String","momentEnd","startValue","FeatureHelper","WMSTime","datasource_File","featuresCollection_","Collection","source_Vector","wrapX","Vector","DataSource","FileGroup","FileGroup_classCallCheck","FileGroup_possibleConstructorReturn","_ngeoDatasourceGroup","injector","unregister_","FileGroup_inherits","addDataSource","registerDataSource_","handleDataSourceVisibleChange_","oldValue","removeDataSource","unregisterDataSource_","Group","OGCGroup","OGCGroup_classCallCheck","OGCGroup_possibleConstructorReturn","url_","OGCGroup_inherits","OGCGroup_createClass","WMSGroup","WMSGroup_classCallCheck","WMSGroup_possibleConstructorReturn","_ngeoDatasourceOGCGro","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","WMSGroup_inherits","OGC","updateLayer_","unregister","WMSGroup_createClass","ExternalDataSourcesManager_exports","ngeoFile","ExternalDataSourcesManager_classCallCheck","injector_","q_","ngeoFile_","extDataSources_","files_","map_","fileGroup_","title","wmsGroupsCollection_","wmtsGroupsCollection_","wmtsCache_","events","handleDataSourcesRemove_","addWMSGroup_","wmsGroup","wmsGroupsCollection","removeWMSGroup_","remove","getWMSGroup","wmsGroups","addWMTSGroup_","wmtsGroup","wmtsGroupsCollection","removeWMTSGroup_","getWMTSGroup","wmtsGroups","isExternalDataSource","addLayer_","layerGroup","removeLayer_","createAndAddDataSourceFromWMSCapability","getId","req","includes","createAndAddDataSourceFromWMTSCapability","layerObj","handleWMTSDataSourceVisibleChange_","createAndAddDataSourceFromFile","file","getFileDataSource_","fileGroup","fit","rejections","content","readOptions","getProjection","isKml","readFeatures","isGpx","removeFileDataSource_","removeOGCDataSource_","ExternalDataSourcesManager_createClass","src","EXTERNALLAYERGROUP_NAME","ol","LayerHelper","File","DataSources","collection_","ol_Collection_js__WEBPACK_IMPORTED_MODULE_2__","handleDataSourcesAdd_","bindMap_","handleViewResolutionChange_","syncDataSourcesToResolution_","unbindMap_","ol_View_js__WEBPACK_IMPORTED_MODULE_4__","syncDataSourceToResolution_","supportsDynamicInRange","inRange","ol_style_Text_js__WEBPACK_IMPORTED_MODULE_36__","gmf_editing_EditFeature_js__WEBPACK_IMPORTED_MODULE_0__","gmf_editing_Snapping_js__WEBPACK_IMPORTED_MODULE_1__","gmf_editing_XSDAttributes_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_editing_attributesComponent_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_editing_createfeatureComponent_js__WEBPACK_IMPORTED_MODULE_9__","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_15__","ngeo_message_modalComponent_js__WEBPACK_IMPORTED_MODULE_17__","ngeo_misc_btnComponent_js__WEBPACK_IMPORTED_MODULE_18__","ngeo_misc_EventHelper_js__WEBPACK_IMPORTED_MODULE_20__","ngeo_misc_FeatureHelper_js__WEBPACK_IMPORTED_MODULE_21__","ngeo_misc_ToolActivateMgr_js__WEBPACK_IMPORTED_MODULE_23__","run","$templateCache","put","component_","scope","dirty","editableTreeCtrl","vectorLayer","bindToController","templateUrl","directive","Controller_","$element","gmfEditFeature","gmfSnapping","gmfXSDAttributes","ngeoEventHelper","ngeoToolActivateMgr","element_","scope_","timeout_","gmfEditFeature_","gmfSnapping_","gmfXSDAttributes_","ngeoEventHelper_","ngeoToolActivateMgr_","editableNode_","editableWMSLayer_","confirmDeferred_","unsavedModificationsModalShown","createActive","createToolActivate","ngeo_misc_ToolActivate_js__WEBPACK_IMPORTED_MODULE_22__","mapSelectActive","mapSelectToolActivate","handleFeatureChange_","featureId","interactions_","ol_Collection_js__WEBPACK_IMPORTED_MODULE_26__","modify_","modifyToolActivate","menu_","ngeo_Menu_js__WEBPACK_IMPORTED_MODULE_16__","actions","cls","translate_","rotate_","rotateToolActivate","translateToolActivate","geomType","showServerError","serverErrorMessage","serverErrorType","$onInit","lang","getCurrentLanguage","datetimepicker","setLocale","setDateFormatter","ngeo_misc_php_date_formatter_js__WEBPACK_IMPORTED_MODULE_5__","getFeaturesCollection","gmf_layertree_SyncLayertreeMap_js__WEBPACK_IMPORTED_MODULE_3__","goog_asserts_js__WEBPACK_IMPORTED_MODULE_4__","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_32__","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_33__","ol_interaction_Modify_js__WEBPACK_IMPORTED_MODULE_31__","deleteCondition","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_10__","ngeo_interaction_Rotate_js__WEBPACK_IMPORTED_MODULE_13__","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_35__","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_34__","ngeo_interaction_Translate_js__WEBPACK_IMPORTED_MODULE_14__","initializeInteractions_","ensureSnapInteractionsOnTop","handleDestroy_","ol_index_js__WEBPACK_IMPORTED_MODULE_24__","ol_events_js__WEBPACK_IMPORTED_MODULE_27__","handleFeatureAdd_","handleMapSelectActiveChange_","newValue","State","STOP_EDITING_PENDING","confirmCancel","STOP_EDITING_EXECUTE","DEACTIVATE_PENDING","DEACTIVATE_EXECUTE","IDLE","setAttributes_","toggle_","save","setId","dateFormatter","parseDate","jsonFormat","setMinutes","getMinutes","getTimezoneOffset","formatDate","updateFeature","insertFeatures","handleEditFeature_","close","checkForModifications_","scopeApply","$apply","continueWithoutSaving","delete","confirm","deleteFeature","submit","find","click","resp","ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_30__","mask","geomAttr","ngeo_format_XSDAttribute_js__WEBPACK_IMPORTED_MODULE_11__","getGeometryAttribute","ol_Feature_js__WEBPACK_IMPORTED_MODULE_29__","keys","createUid","otherUid","toolMgr","handleMenuActionClick_","handleTranslateEnd_","handleRotateEnd_","registerTool","unregisterTool","mapDiv","getViewport","assertElement","handleMapClick_","handleMapContextMenu_","pixel","forEachFeatureAtPixel","ret","ol_array_js__WEBPACK_IMPORTED_MODULE_25__","hitTolerance","buffer","ol_extent_js__WEBPACK_IMPORTED_MODULE_28__","getFeaturesInExtent","handleGetFeatures_","getEventPixel","getCoordinateFromPixel","ngeo_GeometryType_js__WEBPACK_IMPORTED_MODULE_12__","open","preventDefault","stopPropagation","_this10","ngeo_misc_decorate_js__WEBPACK_IMPORTED_MODULE_19__","registerInteractions_","_this11","unregisterInteractions_","_this12","newFeature","oldFeature","_this13","handleFeaturePropertyChange_","action","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_2__","gmfTreeManagerModeFlush","gmfTreeManager","$rootScope_","modeFlush","gmfTreeManager_","themeName_","addTheme","setThemeName","getThemeName","isLoading","$emit","EventType","THEME_NAME_SET","gmf_layertree_TreeManager_js__WEBPACK_IMPORTED_MODULE_0__","inRange_","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","ngeo_rule_Rule_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_format_AttributeType_js__WEBPACK_IMPORTED_MODULE_0__","choices_","tool","opt_defaultActivate","entries","unlisten","deactivateTools_","activateDefault_","defaultTool","ENABLE_ASSERTS","defaultTools","entry","unregisterGroup","activateTool","deactivateTool","hasActiveTool","btnGroupComponent_","$parse","restrict","link","attrs","assign","buttons_","buttonModel","BtnGroupController","activate","expressionFn","addButton","btnComponent_","require","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","$setViewValue","$viewValue","$render","toggleClass","ngeo_statemanager_Location_js__WEBPACK_IMPORTED_MODULE_1__","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","keyRegexp","match","localStorage","getParam","err","getInitialValue","getInitialStringValue","getInitialNumberValue","parseFloat","getInitialBooleanValue","RegExp","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_0__","authenticationBaseUrl","gmfUser","_olEventsEventTarget","baseUrl_","user_","noReloadRole_","load_","RouteSuffix","IS_LOGGED_IN","handleLogin_","changePassword","oldPwd","newPwd","confPwd","CHANGE_PASSWORD","post","param","oldPassword","newPassword","confirmNewPassword","headers","Content-Type","is_password_changed","$digest","login","pwd","LOGIN","password","logout","noReload","LOGOUT","resetUser_","resetPassword","RESET_PASSWORD","successFn","getFunctionalities","functionalities","getRoleId","role_id","checkingLoginStatus","respData","setUser_","ngeo_CustomEvent_js__WEBPACK_IMPORTED_MODULE_0__","user","emitEvent","username","role_name","createDate","defaultValue","getTime","minDate","minValue","maxDate","maxValue","minDefaultDate","minDefValue","maxDefaultDate","maxDefValue","defaultValues","getUTCDate","localDate","getUTCFullYear","getUTCMonth","popupComponent_exports","directive_","ngeoPopupTemplateUrl","addClass","css","popupComponent","Popup_exports","$compile","$new","autoDestroy_","sce_","body","append","getOpen","setOpen","$destroy","setTitle","trustedTitle","setContent","opt_trusted","setUrl","setWidth","setHeight","height","setSize","setAutoDestroy","autoDestroy","Factory","DrawAzimut_exports","Pointer","handleDownEvent","handleDownEvent_","handleUpEvent","handleUpEvent_","downPx_","started_","sketchFeature_","sketchPoint_","squaredClickTolerance_","sketchLayer_","common","getDefaultDrawStyleFunction","downPx","clickPx","dx","dy","pass","handlePointerMove_","finishDrawing_","startDrawing_","mapBrowserEvent","modifyDrawing_","createOrUpdateSketchPoint_","Feature","Point","updateSketchFeatures_","sketchPointGeom","setCoordinates","sketchFeatures","addFeatures","LineString","Circle","GeometryCollection","CustomEvent","geometries","getGeometriesArray","last","setRadius","getLength","abortDrawing_","shouldStopEvent","functions","DrawAzimut","MeasureAzimut_exports","unitPrefixFormat","numberFormat","Measure","getGeometries","Projection","formatLength","formatAzimut","getFormattedAzimut","getAzimut","coords","rad","acos","sqrt","manager","manager_","features_","index_","setFeatures","handleFeatureRemove_","ol_format_XML_js__WEBPACK_IMPORTED_MODULE_4__","ol_index_js__WEBPACK_IMPORTED_MODULE_3__","readFromDocument","doc","nodeType","Node","DOCUMENT_NODE","firstChild","nextSibling","ELEMENT_NODE","readFromNode","localName","elements","getElementsByTagName","readFromElementNode_","getAttribute","nillable","required","ngeo_format_Attribute_js__WEBPACK_IMPORTED_MODULE_1__","setGeometryType","setAttributeByXsdType_","enumerations","ngeo_format_AttributeType_js__WEBPACK_IMPORTED_MODULE_2__","restrictions","restrictionNode","maxLengths","maxLength","numType","NumberType","FLOAT","INTEGER","geomAttribute","dataSourcesCollection_","ol_Collection_js__WEBPACK_IMPORTED_MODULE_1__","title_","getDataSourceState","VisibilityState","ON","OFF","toggleVisibilityState","visibleToSet","visibilityState","INDETERMINATE","WFSDescribeFeatureType_exports","XML","xml","PARSERS_","readElement_","objectStack","len","pop","readComplexType_","COMPLEX_TYPE_PARSERS_","readComplexContent_","COMPLEX_CONTENT_PARSERS_","readExtension_","EXTENSION_PARSERS_","readSequence_","SEQUENCE_PARSERS_","NAMESPACE_URIS_","complexType","complexContent","extension","sequence","WFSDescribeFeatureType","Querent_exports","ngeoRuleHelper","http_","ngeoRuleHelper_","requestCancelers_","wmsGetCapabilitiesPromises_","wmtsGetCapabilitiesPromises_","cancelStillRunningRequests_","combinedWFSDataSources","getCombinableWFSDataSources_","wfs","issueCombinedWFS_","combinedWMSDataSources","getCombinableWMSDataSources_","wms","issueCombinedWMS_","handleCombinedQueryResult_","isDataSourceQueryable_","wfsDescribeFeatureType","supportsAttributes","ogcLayerNames","uri","TYPENAME","wmsFindLayerCapability","layerCapabilities","layerCapability","wmsGetCapabilities","baseUrl","opt_cache","WMSCapabilities","wmtsFindLayerCapability","wmtsGetCapabilities","WMTSCapabilities","combinedHash","hash","dataSourceIdStr","dataSourceId","handleQueryResult_","readAndTypeFeatures_","setUniqueIds_","featureTypes","getSetOlFormatTypes_","opt_types","types","setFeatureType","getFeatureType","combinedDataSources","maxFeatures","getCode","bbox","xmlSerializer","getFeatureCommonOptions","_iterator7","_isArray7","_i7","_ref7","featurePrefix","outputFormat","getFeatureDefer","countPromise","getCountOptions","resultType","featureCountXml","writeGetFeature","featureCountRequest","canceler","registerCanceler_","readFeatureCollectionMetadata","numberOfFeatures","getFeatureOptions","featureRequestXml","featureRequest","_iterator6","_isArray6","_i6","_ref6","FEATURE_COUNT","projCode","_iterator8","_isArray8","_i8","_ref8","INFO_FORMAT","activeDimensionsSet","filtrableLayerName","_iterator9","_isArray9","_i9","_ref9","filterParamValue","filterParamValues","wmsSource","ImageWMS","wmsGetFeatureInfoUrl","getGetFeatureInfoUrl","combinableDataSources","notCombinableDataSources","_iterator10","_isArray10","_i10","_ref10","combined","_iterator11","_isArray11","_i11","_ref11","combinableDataSource","_iterator12","_isArray12","_i12","_ref12","_iterator13","_isArray13","_i13","_ref13","ds","_iterator14","_isArray14","_i14","_ref14","CombinedDataSources","RuleHelper","WFSAttribute","complexTypeElements","readFromComplexTypeElement_","Attribute","XSDAttribute","Helper_exports","Helper_classCallCheck","cache_","getDataSourceAttributes","wfsDescribeFeatureTypeDefer","ogcLayerName","Querent","ol_interaction_Snap_js__WEBPACK_IMPORTED_MODULE_8__","mapViewChangePromise_","treeCtrlsUnregister_","unregisterAllTreeCtrl_","ol_events_js__WEBPACK_IMPORTED_MODULE_5__","$watchCollection","registerTreeCtrl_","handleMapMoveEnd_","wfsConfig","getWFSConfig_","stateWatcherUnregister","handleTreeCtrlStateChange_","ol_Collection_js__WEBPACK_IMPORTED_MODULE_6__","requestDeferred","deactivateItem_","childLayers","ogcServerName","wfsSupport","urlWfs","activateItem_","edge","pixelTolerance","vertex","loadItemFeatures_","loadAllItems_","ol_format_WFS_js__WEBPACK_IMPORTED_MODULE_7__","extend","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_11__","featureListenerKeys_","keyPressListenerKey_","myFeatures_","vectorSource_","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_10__","centerFeatures_","ol_interaction_Translate_js__WEBPACK_IMPORTED_MODULE_9__","ol_index_js__WEBPACK_IMPORTED_MODULE_1__","ol_events_js__WEBPACK_IMPORTED_MODULE_4__","handleKeyUp_","setState_","addFeature_","handleFeaturesAdd_","handleFeaturesRemove_","getTargetElement","cursor","removeFeature_","ol_Feature_js__WEBPACK_IMPORTED_MODULE_3__","ol_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_5__","getGeometryCenterPoint_","centerFeature","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_8__","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_6__","ol_extent_js__WEBPACK_IMPORTED_MODULE_2__","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_7__","keyCode","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_13__","modified_","changingFeature_","pixelTolerance_","coordinate_","centerCoordinate_","overlay_","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_12__","ngeo_interaction_common_js__WEBPACK_IMPORTED_MODULE_1__","getDefaultModifyStyleFunction","ol_interaction_Pointer_js__WEBPACK_IMPORTED_MODULE_7__","handleDown_","handleDragEvent","handleDrag_","handleUp_","ol_events_js__WEBPACK_IMPORTED_MODULE_6__","ol_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_8__","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_9__","getCenterCoordinate_","ol_Feature_js__WEBPACK_IMPORTED_MODULE_5__","willModifyFeatures_","ngeo_CustomEvent_js__WEBPACK_IMPORTED_MODULE_2__","f","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_10__","getFlatMidpoint","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_11__","getFlatInteriorPoint","ol_extent_js__WEBPACK_IMPORTED_MODULE_4__","oldX","oldY","centerX","centerY","dx1","dy1","dx0","dy0","a0","atan2","rotate","ol_Collection_js__WEBPACK_IMPORTED_MODULE_0__","ol_OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_5__","menuOptions","opt_overlayOptions","TOP_LEFT","clickOutListenerKey_","contentEl","class","autoClose_","autoClose","headerEl","appendTo","actionsEl","actions_","data-name","prepend","ol_Overlay_js__WEBPACK_IMPORTED_MODULE_4__","handleActionClick_","handleMapPointerMove_","documentElement","handleClickOut_","getElement","closest","originalEvent","Element","contains","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_1__","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","isNaN","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","$window","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","file_saver__WEBPACK_IMPORTED_MODULE_1__","opt_fileType","fileType","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_0__","isSafari","blob","Blob","ngModel","transclude","bindings","resizable","closable","component","_class","$element_","$scope_","modal_","attr","dialog","draggable","modal","e","$onDestroy","ngeo_message_Message_js__WEBPACK_IMPORTED_MODULE_2__","container","container_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","el","html","delay","_compare","str1","str2","toLowerCase","_lpad","chr","_indexOf","arr","defaultSettings","dateSettings","days","daysShort","months","monthsShort","meridiem","ordinal","suffixes","2","3","separators","validParts","intParts","tzParts","tzClip","DateFormatter","_extend","_typeof","getMonth","vDate","vFormat","vSettings","year","month","day","hour","min","sec","vDateFlag","vTimeFlag","vFormatParts","vDateParts","vDatePart","iDatePart","vMonth","vMeriIndex","mer","vMeriOffset","guessDate","vDateStr","vParts","vDigit","iPart","iSec","substr","setMonth","setDate","vYear","getFullYear","setFullYear","setHours","setSeconds","parseFormat","vChar","fmt","self","backslash","doFormat","D","w","getDate","N","getDay","z","a","Y","W","F","M","L","A","G","B","H","getUTCHours","getUTCMinutes","getUTCSeconds","getHours","h","getSeconds","u","getMilliseconds","exec","I","UTC","O","tzo","P","T","Z","U","str","gmfShortenerCreateUrl","gmfShortenerCreateUrl_","getShortUrl","postShortUrl_","short_url","status","sendShortUrl","shortUrl","email","URL_MAX_LEN","URL_PATH_MAX_LEN","ol_interaction_Draw_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_interaction_Measure_js__WEBPACK_IMPORTED_MODULE_1__","br","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_3__","proj","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_3__","component_exports","Service","Notification","modalComponent","gmfAuthenticationTemplateUrl","gmfAuthenticationTemplateUrl_","allowPasswordReset","allowPasswordChange","passwordValidator","forcePasswordChange","AuthenticationController_","gmfAuthenticationService","gmfAuthenticationService_","notification_","changingPassword","changePasswordModalShown","resetPasswordModalShown","loginVal","pwdVal","oldPwdVal","newPwdVal","newPwdConfVal","setError_","isPasswordValid","notValidMessage","changePasswordReset","resetError_","resetPasswordSuccessFn","userMustChangeItsPassword","Message","authentication_module","BackgroundLayerMgr_exports","Observable","mapUids_","BACKGROUNDLAYERGROUP_NAME","mapUid","previous","bgGroup","setAt","removeAt","current","getOpacityBgLayer","setOpacityBgLayer","baseBgLayer","Layer","hasUpdates","updatedDimensions","TileWMS","BackgroundLayerMgr","backgroundlayerselector_component_exports","Themes","gmfBackgroundlayerselectorTemplateUrl","opacityOptions","select","ngeoBackgroundLayerMgr","bgLayer","bgLayers","opacityLayer","backgroundLayerMgr_","indexOpa","findIndex","getSetBgLayerOpacity","setLayer","backgroundlayerselector_component","gmfEnumerateAttribute","gmfEnumerateAttribute_","prepareFiltrableDataSource","prepareFiltrableDataSourceDefer","enumAttributes","enumeratedAttributes","getAttributeValues","choice","Helper","EnumerateAttribute","datasource_Helper","datasource_OGC","OGC_classCallCheck","_ngeoDatasourceOGC","gmfLayer_","OGC_createClass","WFSAliases_exports","WFSAliases_classCallCheck","describe","WFSAliases","Manager_exports","gmfWFSAliases","Manager_classCallCheck","ngeoBackgroundLayerMgr_","ngeoDataSources_","gmfWFSAliases_","dataSourcesCache_","treeCtrlCache_","handleNgeoBackgroundLayerChange_","setDatasourceMap","setDimensions","clearDataSources_","clearTreeCtrlCache_","promiseThemes","createDataSource_","promiseBgLayers","backgroundLayers","backgroundLayer","handleTreeManagerRootChildrenChange_","newTreeCtrls","treeCtrls","newTreeCtrl","getTreeCtrlCacheItem_","addTreeCtrlToCache_","removeTreeCtrlCacheItem_","ol_obj","meta","queryLayers","wmsLayers","childLayer","isSingleTile","identifierAttributeField","timeAttribute","filterRulesWatcherUnregister","hasFilters","isVisible","handleDataSourceFilterRulesChange_","timeLowerValueWatcherUnregister","timeUpperValueWatcherUnregister","wmsLayer","handleDataSourceTimeValueChange_","SyncLayertreeMap","Image","treeDataSource","siblingDataSourceIds","_source$updateParams","Tile","layersList","previousBackgroundLayer","currentBackgroundLayer","TreeManager","Manager","datasource_module","DataSourceBeingFiltered","ExternalDataSourcesManager","Disclaimer_exports","ngeoCreatePopup","createPopup_","messages_","closeMessage_","getMessageUid_","popup","button","Popup","Disclaimer","disclaimer_component_exports","EventHelper","ngeoDisclaimer","external","visibility","msgs_","disclaimer_","eventHelper_","dataLayerGroup_","DATALAYERGROUP_NAME","registerLayer_","handleLayersAdd_","Base","handleLayersRemove_","unregisterLayer_","layerUid","showDisclaimerMessage_","closeDisclaimerMessage_","disclaimer_component","SavedFilters_exports","SavedFilters_classCallCheck","currentDataSourceId_","currentDataSourceItems_","localStorageKey_","items_","items","rePopulateCurrentDataSourceItems_","loadItemsFromLocalStorage_","JSON","parse","indexOfItem","idx","saveItemsInLocalStorage_","stringify","SavedFilters_createClass","Item","customRules","directedRules","SavedFilters","ruleComponent_exports","draw_component","FeatureOverlay","datepickerComponent","ToolActivateMgr","ngeoRuleTemplateUrl","RuleController_","_operators","_operatorsShortFormat","ruleComponent_classCallCheck","featureOverlay","toolGroup","operatorType","spatialOperatorType","temporalOperatorType","operatorsShortFormat","timeRangeMode","widget","createDate_","createWeekAgoDate_","interval","timeValueMode","toolActivate_","unlisteners_","drawActive","drawToolActivate","ToolActivate","drawnFeatures","selectedFeatures","Modify","Rotate","Style","Fill","Translate","handleActiveChange_","supportedTypes","GeometryType","hasExpression","isActive","editToolIsActive","toggle","toggleChoiceSelection","onDateSelected","onDateRangeSelected","opt_timeDelta","setTime","timeToDate","toLocaleDateString","oldActive","ruleFeature","cloneFeature","decorate","drawnFeature","geom_Geometry","getRuleGeometryType","removeMenu_","Menu","ruleComponent","filter_component_exports","MapQuerent","ngeoFilterTemplateUrl","aRuleIsActive","datasource","FilterController_","ngeoMapQuerent","component_classCallCheck","ngeoMapQuerent_","geometryAttributes","otherAttributes","ruleUnlisteners_","handleARuleIsActiveChange_","registerRule_","hasARule","getRulesWithValue_","getData","createAndAddCustomRule","setCondition","removeCustomRule","unregisterRule_","handleRuleActiveChange_","unlistener","filter_component","filterselectorComponent_exports","FeatureOverlayMgr","gmfFilterselectorTemplateUrl","gmfDataSourceBeingFiltered","gmfDataSourcesHelper","gmfSavedFilters","ngeoFeatureOverlayMgr","filterselectorComponent_classCallCheck","handleSelectedDataSourceChange_","gmfDataSourcesHelper_","currentDataSourceItems","saveFilterManageModalShown","gmfUser_","handleGmfUserFunctionalitiesChange_","filtrableDataSources","filtrableLayerNodeNames_","gmfDataSources_","readyDataSource","ruleCache_","saveFilterSaveModalShown","saveFilterName","enableDataSourceRegistration_","handleEnableDataSourceRegistrationChange_","defaultFiltrableDataSourceName_","toggleDataSourceRegistration_","usrFunc","newDataSourceRegistration","register","isDataSourceFiltrable_","opt_notify","gettext","msgs","p1","p2","p3","currentDataSourceId","getRuleCacheItem_","setRuleCacheItem_","directedFilterAttributes","directedAttributes","saveFilterShowModal","saveFilterSave","alreadyExist","saveFilterLoadItem","filterItem","cacheItem","saveFilterManage","saveFilterRemoveItem","RuleCache","RuleCacheItem","filterselectorComponent","filters_module","timeSliderComponent_exports","pre","computeDates_","sliderUi","sDate","eDate","wmstime","getClosestValue_","dates","sliderOptions","isModeRange","timeValueList","getTimeValueList_","initialOptions_","max","endDate","nextDate","timestamp","leftIndex","rightIndex","leftDistance","rightDistance","targetDate","startDate","bestDate","bestDistance","distance","getLocalizedDate","timeSliderComponent","layertree_module","layertree_component","datasourceGroupTreeComponent","permalink_module","Permalink","ShareService","shareComponent","map_component_exports","prop","Map","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","map_component","scaleselector_exports","ngeoScaleselectorTemplateUrl","scaleselector_ScaleselectorController","ScaleselectorController","scalesExpr","scales","zoomLevels","newLength","sort","optionsExpr","getOptions_","resolutionChangeKey_","currentScale","currentZoom","getZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","zoom","changeZoom","setZoom","handleResolutionChange_","scaleselector","map_module","recenter","resizemap","src_map_component_exports","Snapping","manageResize","gmfPermalink","ngeoFeatureOverlayMgr_","gmfPermalink_","src_map_component","mousepositionComponent_exports","misc_filters","gmfMapMousepositionTemplateUrl","projections","control_","initOlControl_","removeControl","MousePosition","className","coordinateFormat","filterAndArgs","undefinedHTML","addControl","code","mousepositionComponent","src_map_module","Config_exports","columnDefs","selectedRows","getRowUid","isRowSelected","getSelectedCount","getSelectedRows","row","selectRow","toggleRow","selectAll","unselectAll","rowId","invertSelection","Config","grid_component_exports","ngeoGridTemplateUrl","configuration","sortedBy","sortAscending","floatTheadConfig","scrollContainer","$table","columnName","asc","attributes1","attributes2","clickRow","shiftKey","isShiftKeyOnly_","platformModifierKey","isPlatformModifierKeyOnly_","clickRow_","selectRange_","isSelected","targetUid","posClickedRow","posSelectedRows","currentRow","posClosestRow","currentPos","currentDistance","rangeEnd","preventTextSelection","altKey","metaKey","ctrlKey","grid_component","gridComponent_exports","Csv","gmfDisplayquerygridTemplateUrl","featuresStyleFn","selectedFeatureStyleFn","getMapFn","removeEmptyColumnsFn","maxResultsFn","maxRecenterZoomFn","mergeTabs","ngeoCsvDownload","queryOptions","ngeoCsvDownload_","maxResults","gridSources","loadedGridSources","selectedTab","removeEmptyColumns_","maxRecenterZoom","featuresForSources_","highlightFeatures_","filename_","newQueryResult","oldQueryResult","updateData_","unregisterSelectWatcher_","featuresOverlay","featuresStyle","highlightFeaturesOverlay","highlightFeatureStyle","Stroke","mapFn","getGridSources","sourceLabel","hasOneWithTooManyResults_","getMergedSources_","makeGrid_","escapeValue","collectData_","firstSourceId","selectTab","isInteger","toEscape","gridSource","allSources","mergedSources","mergedSourceId","getMergedSource_","mergeSourceId","currentMergeSourceId","mergeSource","allProperties","featureGeometriesNames","featuresForSource","featureGeometryName","cleanProperties_","removeEmptyColumnsFn_","keysToKeep","keyToRemove","gridConfig","getGridConfiguration_","ol_uid","column","newSelected","oldSelectedRows","onSelectionChanged_","updateFeatures_","reflowGrid_","activePane","removeClass","getActiveGridSource","isOneSelected","getSelectedRowCount","zoomToSelection","ol_extent","maxZoom","downloadCsv","startDownload","gridComponent","swipe_exports","POINTER_EVENTS","mouse","move","touch","pointer","touches","changedTouches","clientX","clientY","getEvents","pointerTypes","eventType","pointerType","eventName","eventHandlers","totalX","totalY","startCoords","lastPos","makeSwipeDirective_","directiveName","direction","$verticalSwipe","MAX_HORIZONTAL_DISTANCE","MAX_HORIZONTAL_RATIO","MIN_VERTICAL_DISTANCE","swipeHandler","valid","isDefined","deltaY","deltaX","validSwipe","triggerHandler","$event","swipe","windowComponent_exports","gmfDisplayquerywindowTemplateUrl","$animateProvider","classNameFilter","draggableContainment","defaultCollapsedFn","desktop","showUnqueriedLayers","collapsed","showUnqueriedLayers_","sourcesFilter","selectedSource","currentResult","isNext","updateQueryResult_","containment","minHeight","minWidth","setCurrentResult_","collectFeatures_","highlightCurrentFeature_","setHighlight","hasChanged","lastFeature","getResultLength","animate_","queryResult","isFirst","isLast","getFeatureValues","opt_lastFeature","setSelectedSource","windowComponent","extraModule","search_module","search_component","FulltextSearch","selectorComponent_exports","theme_Manager","gmfThemeSelectorTemplateUrl","gmfThemeManager","setThemes_","setTheme","selectorComponent","theme_module","displaywindowComponent_exports","ngeoMessageDisplaywindowTemplateUrl","displaywindowComponent_classCallCheck","clearOnClose","contentTemplate","contentScope","compile_","handle","compiled","clear_","displaywindowComponent_createClass","trustAsResourceUrl","displaywindowComponent","controlComponent_exports","control","Control","controlComponent","filereaderComponent_exports","fileContent","changeEvent","fileReader","FileReader","onload","readAsText","files","filereaderComponent","getBrowserLanguage_exports","availableLanguages","nav","browserLanguages","languages","language","browserLanguage","systemLanguage","userLanguage","getBrowserLanguage","misc_extraModule","AutoProjection","btnComponent","debounce","sortableComponent","Time","mapQueryComponent_exports","elem","clickEventKey_","pointerMoveEventKey_","hit","forEachLayerAtPixel","sourceids","cursorHover","mapQueryComponent","WfsPermalink_WfsPermalinkService","ngeoWfsPermalinkOptions","maxFeatures_","wfsTypes_","wfsTypes","wfsType","defaultFeatureNS_","defaultFeatureNS","defaultFeaturePrefix_","defaultFeaturePrefix","pointRecenterZoom_","pointRecenterZoom","clearResult_","typeName","filters","createFilters_","filterGroups","issueRequest_","showFeatures","getExtent_","padding","resultSource","reduce","or_","filterGroup","filterDef","cond","equalTo","and_","joinFilters_","joinFn","combinedFilters","currentFilter","WfsPermalink","AbstractAppController_exports","permalink_","gmfAuthentication","updateHasEditableLayers_","userChange","roleId","open_panel","filterSelectorActive","previousThemeName","updateCurrentTheme_","searchDatasources","labelKey","groupValues","groupActions","srid","gmfDataSourcesManager","defaultDimensions","dim","leftNavVisible","rightNavVisible","queryFill","queryStroke","queryFeatureStyle","queryActive","queryAutoClear","printPanelActive","printActive","measurePointActive","measureLengthActive","drawFeatureActive","drawProfilePanelActive","stateManager","tmhDynamicLocale","defaultLang","langUrls","initLanguage","mapToolsGroup","queryToolActivate","measurePointActivate","measureLengthActivate","drawFeatureActivate","drawProfilePanelActivate","printPanelActivate","$root","setDefaultBackground_","updateCurrentBackgroundLayer_","skipPermalink","background","getBackgroundLayer","defaultBasemapArray","default_basemap","defaultBasemapLabel","gmfx","openIframePopup","opt_width","opt_height","opt_apply","displaywindowUrl","openPopup_","openTextPopup","displaywindowContent","displaywindowTitle","displaywindowOpen","displaywindowWidth","displaywindowHeight","cgxp","tools","openInfoWindow","displaywindowDraggableContainment","getLayerByLabels","labels","switchLanguage","setCurrentLanguage","loadRemote","urlLanguage","fallbackThemeName","defaultThemeNameFromFunctionalities","getLocationIcon","arrow","arrowWrapper","statemanager_module","tmhDynamicLocaleProvider","angularLocaleScript","localeLocationPattern","ModifyCircle_exports","handleDragEvent_","vertexFeature_","lastPixel_","rBush_","RBush","snappedToVertex_","dragSegments_","FeatureProperties","writeCircleGeometry_","handlePointerAtPixel_","removeFeatureSegmentData_","rBush","nodesToRemove","rings","segment","segmentData","insert","createOrUpdateVertexFeature_","vertexFeature","compareIndexes_","vertexExtent","segmentDataMatches","getInExtent","componentSegments","segmentDataMatch","Polygon","setGeometryCoordinates_","MeasureAzimut","MapBrowserPointerEvent","getInteracting","handlingDownUpSequence","pixelCoordinate","lowerLeft","upperRight","box","closestSegment","vertexPixel","getPixelFromCoordinate","pixel1","pixel2","squaredDist1","squaredDist2","dist","vertexSegments","ModifyCircle","ModifyRectangle_exports","vectorPoints_","params_","featureGeom","pointSource","corners","pointFeatures","cornerPoint","cornerFeature","corner","siblingX","siblingY","boxFeature","previousFeature","nextFeature","initializeParams_","origin","originPoint","originCoordinate","originPixel","siblingXPoint","siblingXCoordinate","siblingXPixel","vectorX","vectorXMagnitude","siblingYPoint","siblingYCoordinate","siblingYPixel","vectorY","vectorYMagnitude","destinationPixel","b2Pixel","calculateNewPixel_","b2Coordinate","c2Pixel","c2Coordinate","destination","vector","aVector","abScalarProduct","deltaVector","ModifyRectangle","Modify_exports","otherFeatures_","utils","circleFeatures_","rectangleFeatures_","Interaction","interactions","currentMap","getFeatureCollection_","isCircle","isRectangle","wmsCapabilityLayertreeComponent_exports","gmfWmscapabilitylayertreenodeTemplateUrl","gmfExternalDataSourcesManager","gmfExternalDataSourcesManager_","createAndAddDataSource","getUid","wmsCapabilityLayertreeComponent","wmtsCapabilityLayertreeComponent_exports","gmfWmtscapabilitylayertreTemplateUrl","wmtsCapabilityLayertreeComponent_classCallCheck","wmtsCapabilityLayertreeComponent","importdatasourceComponent_exports","gmfImportdatasourceTemplateUrl","importdatasourceComponent_classCallCheck","fileInput_","hasError","hasErrorPromise_","Mode","ONLINE","modes","LOCAL","wmsCapabilities","wmtsCapabilities","serversEngine_","servers","serverUrls","Bloodhound","datumTokenizer","datum","originalDatumTokenizers","tokenizers","whitespace","datumTokenizers","originalDatumTokenizer","queryTokenizer","identify","local","$urlInput","$connectBtn","typeahead","hint","highlight","minLength","ttAdapter","ev","suggestion","focus","browse","connect","serviceType","startWorking_","stopWorking_","load","opt_hasError","nameAndSize","fileSize","importdatasourceComponent","module_exports","Controller_exports","ngeoFeatures","featureHelper_","ngeoFeatures_","drawPoint","measureLength","measureArea","measureAzimut","drawRectangle","drawText","registerInteraction","handleActiveChange","handleDrawEnd","sketch","draw_features","Controller","point_exports","drawFeatureCtrl","Draw","rectangle_exports","geometryFunction","maxPoints","rectangle","text_exports","draw_text","area_exports","contMsg","MeasureArea","measure_area","azimut_exports","measure_azimut","length_exports","MeasureLength","measure_length","ngeo_format_XSDAttribute_js__WEBPACK_IMPORTED_MODULE_0__","gmfLayersUrl","promises_","handleGetAttributes_","ol_uri_js__WEBPACK_IMPORTED_MODULE_1__","layerIds","getFeaturesWithComparisonFilters","ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_0__","layerId","geoJSON","writeFeature","gmfRasterUrl","getRaster","Param","X","handleGetRaster_","proj4_projections_somerc_js__WEBPACK_IMPORTED_MODULE_1__","proj4__WEBPACK_IMPORTED_MODULE_0__","Proj","proj4__WEBPACK_IMPORTED_MODULE_3__","epsg21781def","ngeo_proj_somerc_js__WEBPACK_IMPORTED_MODULE_2__","defs","ol_proj_proj4_js__WEBPACK_IMPORTED_MODULE_1__","ol_proj_js__WEBPACK_IMPORTED_MODULE_0__","setExtent","typeaheadOptionsExpr","typeaheadOptions","typeaheadDatasetsExpr","typeaheadListenersExpr","typeaheadListeners_","typeaheadListeners","adaptListeners_","dataset","cursorchange","autocomplete","query","empty","datasetsempty","ngeoColorpickerTemplateUrl","colors","DEFAULT_COLORS","setColor","ol_extent_js__WEBPACK_IMPORTED_MODULE_1__","stringToCoordinates","getProjectionList","projectionsCodes","toUpperCase","tryProjections","viewProjection","opt_projections","tryProjectionsWithInversion","defaultParams_","queryParams","Promise","catch","ngeo_download_service_js__WEBPACK_IMPORTED_MODULE_0__","encoding_","extension_","includeHeader_","quote_","separator_","generateCsv","translatedColumnHeaders","columnHeader","header","getRow_","dataRows","rowValues","matchAllQuotesRegex","doubleQuote","ol_Map_js__WEBPACK_IMPORTED_MODULE_1__","stateExpr","animationDelayKey","animationDelay","cancelAnimationFrame","gmf_permalink_ShareService_js__WEBPACK_IMPORTED_MODULE_0__","gmfPermalinkShareTemplateUrl","enableEmail","ShareComponentController","gmfShareService","gmfShareService_","shortLink","showLengthWarning","successfullySent","errorOnsend","errorOnGetShortUrl","when","permalink","$valid","ngeo_datasource_DataSources_js__WEBPACK_IMPORTED_MODULE_0__","gmfLayertreeDatasourceGroupTreeTemplateUrl","getGroupUid","toggleDataSource","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_statemanager_Location_js__WEBPACK_IMPORTED_MODULE_0__","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_24__","ngeoDebounce","mapViewPropertyChangeEventKey_","ngeoDebounce_","featureOverlay_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","ngeoAutoProjection_","sourceProjections_","projectionCodes","crosshairFeature_","crosshairStyle_","crosshairStyle","ol_style_RegularShape_js__WEBPACK_IMPORTED_MODULE_22__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_21__","radius2","mapTooltip_","featureHashFormat_","ngeo_format_FeatureHash_js__WEBPACK_IMPORTED_MODULE_8__","encodeStyles","propertiesType","ngeo_format_FeatureProperties_js__WEBPACK_IMPORTED_MODULE_9__","fillOpacity","fontColor","fontSize","isBox","isLabel","pointRadius","strokeColor","ol_events_js__WEBPACK_IMPORTED_MODULE_18__","handleBackgroundLayerManagerChange_","goog_asserts_js__WEBPACK_IMPORTED_MODULE_15__","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","TREE_OPACITY","TREE_GROUP_OPACITY","getFeatures","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","gmf_theme_Manager_js__WEBPACK_IMPORTED_MODULE_1__","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","registerExternalDSGroup_","initLayers_","getMapCenter","targetProjection","reprojectedCenter","getMapZoom","getMapCrosshair","crosshair","setMapCrosshair","opt_center","crosshairCoordinate","ol_Feature_js__WEBPACK_IMPORTED_MODULE_19__","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_20__","getMapTooltip","setMapTooltip","tooltipText","tooltipPosition","div","ngeo_Popover_js__WEBPACK_IMPORTED_MODULE_3__","DIMENSIONS","unregisterMap_","getFeature","registerMap_","oeFeature","ngeo_olcs_constants_js__WEBPACK_IMPORTED_MODULE_7__","Permalink3dParam","ENABLED","setCenter","wfsPermalinkData","getWfsPermalinkData_","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","default_theme","groupsNames","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_2__","enable","groupLayers","groupLayersArray","ol_array_js__WEBPACK_IMPORTED_MODULE_17__","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_14__","removeNgeoFeature_","ol_index_js__WEBPACK_IMPORTED_MODULE_16__","handleNgeoFeaturesChange_","wfsLayer","numGroups","createFilterGroup_","showFeaturesParam","paramKey","gmfExtDSManager","layerNamesString","urlsString","ExtDSSeparator","LIST","urls","groupLayerNamesString","groupLayerNames","NAMES","ngeo_datasource_OGC_js__WEBPACK_IMPORTED_MODULE_6__","getCapabilitiesDefer","responses","ngeo_datasource_Group_js__WEBPACK_IMPORTED_MODULE_5__","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","unregisterExternalDSGroup_","_this8$ngeoStateManag","wmsGroupLayerNames","wmsDataSource","wmtsGroupLayerNames","wmtsDataSource","startsWith","_iterator15","_isArray15","_i15","_ref15","ngeo_draw_features_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_misc_debounce_js__WEBPACK_IMPORTED_MODULE_10__","ngeo_misc_EventHelper_js__WEBPACK_IMPORTED_MODULE_11__","ngeo_statemanager_module_js__WEBPACK_IMPORTED_MODULE_12__","OpenLayersLayerProperties","regexp","key1","key2","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_13__","ngeoDatePickerTemplateUrl","sdateOptions","initialMinDate","initialMaxDate","onClose","selectedDate","datepicker","edateOptions","dp","ngeoTime","ngeoTime_","changeMonth","changeYear","sdate","edate","$watchGroup","newDates","oldDates","isDate","promiseId","handleGetAttributeValues_","isValidFileSize","isWmsGetCap","isWmtsGetCap","readyState","LOADING","abort","onerror","reason","onprogress","opt_cancelP","ol_style_Text_js__WEBPACK_IMPORTED_MODULE_28__","viewConfig","ol_proj_js__WEBPACK_IMPORTED_MODULE_14__","ol_obj_js__WEBPACK_IMPORTED_MODULE_15__","mapViewConfig","gmf_controllers_AbstractAppController_js__WEBPACK_IMPORTED_MODULE_0__","ol_Map_js__WEBPACK_IMPORTED_MODULE_17__","pixelRatio","mapPixelRatio","ol_View_js__WEBPACK_IMPORTED_MODULE_18__","controls","mapControls","ol_control_ScaleLine_js__WEBPACK_IMPORTED_MODULE_19__","getElementById","ol_control_Zoom_js__WEBPACK_IMPORTED_MODULE_20__","zoomInTipLabel","zoomOutTipLabel","ol_control_Rotate_js__WEBPACK_IMPORTED_MODULE_21__","tipLabel","mapInteractions","ol_interaction_js__WEBPACK_IMPORTED_MODULE_22__","pinchRotate","altShiftDragRotate","loadTilesWhileAnimating","loadTilesWhileInteracting","loginActive","toolsActive","modalShareShown","editFeatureActive","routingfeatureActive","googleStreetViewActive","googleStreetViewStyle","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_27__","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_25__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_26__","importDataSourceActive","tooltip","trigger","selector","off","drawFeatureLayer","editFeatureVectorLayer","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_23__","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_24__","ol_Collection_js__WEBPACK_IMPORTED_MODULE_16__","editFeatureActivate","ngeo_misc_ToolActivate_js__WEBPACK_IMPORTED_MODULE_10__","googleStreetViewActivate","scaleSelectorOptions","profileLine","ol_index_js__WEBPACK_IMPORTED_MODULE_13__","gmf_contextualdata_module_js__WEBPACK_IMPORTED_MODULE_1__","gmf_drawing_module_js__WEBPACK_IMPORTED_MODULE_2__","gmf_editing_module_js__WEBPACK_IMPORTED_MODULE_3__","gmf_permalink_shareComponent_js__WEBPACK_IMPORTED_MODULE_4__","gmf_print_component_js__WEBPACK_IMPORTED_MODULE_5__","gmf_profile_module_js__WEBPACK_IMPORTED_MODULE_6__","gmf_raster_component_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_draw_features_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_map_resizemap_js__WEBPACK_IMPORTED_MODULE_9__","ngeo_query_bboxQueryComponent_js__WEBPACK_IMPORTED_MODULE_11__","gmf_import_module_js__WEBPACK_IMPORTED_MODULE_12__","editFeatureSelectorComponent_exports","editFeatureComponent","treeCtrlsWatcherUnregister_","editables","editableTreeCtrls","selectedEditableTreeCtrl","stopEditing","editFeatureSelectorComponent","EditFeature","XSDAttributes","RasterService","gmfRaster","$compile_","gmfRaster_","hidePopover","preparePopover_","setContent_","showPopover","content_","mapProjection","ol_proj","getRasterSuccess","setAttribute","Overlay","autoPan","autoPanAnimation","contentDirective_","gmfContextualdatacontentTemplateUrl","VectorEncoder_exports","geojsonFormat","GeoJSON","PrintStyleTypes_","PrintStyleType","MultiLineString","MultiPoint","MultiPolygon","encodeVectorLayer","geojsonFeatures","mapfishStyleObject","version","originalFeature","styleData","getStyleFunction","origGeojsonFeature","writeFeatureObject","isOriginalFeatureAdded","styleId","geojsonFeature","styledFeature","geometryType","featureStyleProp","encodeVectorStyle","geoJson","styleType","styleObject","symbolizers","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeVectorStylePolygon","encodeVectorStyleLine","encodeVectorStylePoint","encodeTextStyle","encodeVectorStyleFill","symbolizer","getColor","rgbArrayToHex","encodeVectorStyleStroke","Icon","getSrc","externalGraphic","graphicOpacity","graphicWidth","graphicHeight","getRotation","math","RegularShape","getPoints","graphicName","sizeShape","rotationShape","opacityShape","strokeShape","fillShape","strokeColorRgba","strokeOpacity","strokeDashstyle","getLineDash","getWidth","getLineCap","strokeLinecap","xAlign","yAlign","olTextAlign","getTextAlign","olTextBaseline","getTextBaseline","labelAlign","labelRotation","fontStyle","getFont","fontWeight","fontFamily","haloColor","haloOpacity","haloRadius","fillColorRgba","labelXOffset","getOffsetX","labelYOffset","getOffsetY","VectorEncoder","Service_exports","vectorEncoder_","printNativeAngle_","ref","opt_httpConfig","httpConfig","createSpec","dpi","layout","customAttributes","specMap","encodeMap_","currentLanguage","viewCenter","viewResolution","viewRotation","mapLayerGroup","layer_a","layer_b","getZIndex","encodeLayer","encodeImageLayer_","encodeTileLayer_","layer_Vector","encodeImageWmsLayer_","getUrl","encodeWmsLayer_","url_url","URL","customParams","searchParams","baseURL","getAbsoluteUrl_","imageFormat","useNativeAngle","href","encodeURI","decodeURI","encodeTileWmtsLayer_","encodeTileWmsLayer_","tileGrid","getTileGrid","tilegrid_WMTS","matrixIds","getMatrixIds","matrices","tileRange","getFullTileRange","identifier","scaleDenominator","getMetersPerUnit","tileSize","ol_size","getTileSize","topLeftCorner","getOrigin","matrixSize","maxX","minX","maxY","minY","getDimensions","dimensionKeys","getWmtsUrl_","dimensionParams","getFormat","getMatrixSet","requestEncoding","getRequestEncoding","getVersion","getUrls","createReport","printSpec","getStatus","getReportUrl","getCapabilities","createPrintServiceFactory","FeatureHashStyleType","FeatureHash_exports","opt_options","TextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","propertiesFunction_","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","StyleTypes_","readFeature","CHAR64_","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","encodedStyles","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","encodeStyleFill_","opt_propertyName","fillColorHex","strokeColorHex","readLineStringGeometry_","flatCoordinates","decodeCoordinates_","setFlatCoordinates","GeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","readPointGeometry_","readMultiPointGeometry_","multiPoint","readPolygonGeometry_","readMultiPolygonGeometry_","endss","polygons","multipolygon","setStyleInFeature_","getStyleProperties_","setStyleProperties_","castValue_","numProperties","boolProperties","parts","keyVal","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","GEOMETRY_WRITERS_","opt_flatCoordinates","encodedCoordinates","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","attributesAndStylesText","attributesText","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","encoded","writeFeaturesText","geometryWriter","transformedGeometry","format_Feature","createGeoJSONBloodhound_exports","opt_filter","opt_featureProjection","opt_dataProjection","opt_remoteOptions","bloodhoundOptions","remote","prepare","settings","parsedResponse","featureCollection","remoteOptions","createGeoJSONBloodhound","createLocationSearchBloodhound_exports","sourceProjection","EPSG21781","origins","results","parseBbox","geom_st_box2d","removeHtmlTags","extractName","bhOptions","createLocationSearchBloodhound","searchDirective","featureStyleComponent_exports","colorpickerComponent","handleColorSet_","handleFeatureSet_","propName","newColor","getSetAngle","getSetProperty_","getSetName","getSetShowLabel","getSetOpacity","getSetShowMeasure","getSetSize","getSetStroke","featureStyleComponent","drawFeatureComponent_exports","exportfeaturesComponent","longPressTimeout_","selectedFeature","listSelectionInProgress_","nameProperty","drawUid","selectFeatureFromList","getFeaturesArray","clearFeatures","handleMapTouchStart_","handleMapTouchEnd_","setTimeout","clearTimeout","drawFeatureComponent","d3","bisector","d3_array","axisBottom","d3_axis","axisLeft","scaleLinear","d3_scale","d3_selection","area","d3_shape","d3Elevation","light","margin","top","right","bottom","left","hoverCallback","outCallback","distanceExtractor","linesConfiguration","numberOfLines","bisectDistance","poiExtractor","styleDefs","poiLabelAngle","i18n","xAxisLabel","xAxis","yAxisLabel","yAxis","formatter","xhover","units","toPrecision","yhover","ele","xtick","ytick","lightXAxis","svg","scaleModifier","xFactor","xUnits","xDomain","profile","selection","each","clientWidth","clientHeight","y0","y1","firstLineName","zExtractor","svgEnter","enter","gEnter","clearPois","xHover","domain","yDomain","elevationsValues","transition","yHover","tickFormat","tickValues","ticks","tickSize","clearHighlight","mouseX","x0","invert","showPois","elevation","elevations","elevationsRef","lineName","xtranslate","pois","pe","profileData","poiEnterG","exit","elevationComponent_d3","elevationComponent_exports","optionsAttr","elevationData","poiData","refreshData","origHoverCallback","origOutCallback","elevationComponent","gmfProfileTemplateUrl","getLinesConfigurationFn","getHoverPointStyleFn","getNbPointsFn","getOptionsFn","gmfProfileJsonUrl","pointHoverOverlay_","gmfProfileJsonUrl_","linesConfiguration_","layersNames_","nbPoints_","currentPoint","yUnits","profileHighlight","measureTooltip_","snappedPoint_","profileLabels_","profileOptions","pointerMoveKey_","isErrored","updateEventsListening_","newLine","oldLine","update_","hoverPointStyle","hoverPointStyleFn","getZFactory_","getDist_","hoverCallback_","outCallback_","optionsFn","assertObject","getJsonProfile_","onPointerMove_","getEventCoordinate","closestPoint","getClosestPoint","pixelDist","getDistanceOnALine_","pointOnLine","distOnLine","fakeExtent","forEachSegment","firstPoint","lastPoint","getTooltipHTML_","elevationName","translatedElevationName","DistDecimal","lineConfiguration","getLayersNames","nbPoints","method","paramSerializer","getProfileDataSuccess_","getProfileDataError_","hasDistance","rows","drawLineComponent_exports","getStyleFn","overlay","styleFn","drawLineComponent","ol_events_condition_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_query_MapQuerent_js__WEBPACK_IMPORTED_MODULE_0__","ol_interaction_DragBox_js__WEBPACK_IMPORTED_MODULE_1__","gmf_raster_RasterService_js__WEBPACK_IMPORTED_MODULE_0__","ngeo_misc_debounce_js__WEBPACK_IMPORTED_MODULE_2__","gmfElevationwidgetTemplateUrl","loading","toggleActive_","inViewport_","pointerStop_","getRasterSuccess_","getRasterError_","widgetComponent_","WidgetController_","selectedElevationLayer","ol_math_js__WEBPACK_IMPORTED_MODULE_1__","extentHalfHorizontalDistance_","extentHalfVerticalDistance_","INCHES_PER_METER_","DOTS_PER_INCH_","createPrintMaskPostcompose","opt_rotation","frameState","viewState","viewportWidth","viewportHeight","ol_has_js__WEBPACK_IMPORTED_MODULE_0__","ppi","ipm","extentHalfWidth","extentHalfHeight","beginPath","moveTo","lineTo","closePath","drawPrintZoneWithRotation_","drawPrintZone_","minx","miny","maxx","maxy","diagonal","gamma","atan","omega","x1","x2","y2","x3","y3","x4","y4","getOptimalScale","mapSize","mapResolution","printMapSize","printMapScales","mapWidth","mapHeight","scaleWidth","scaleHeight","optimal","getOptimalResolution","printMapScale","dotsPerMeter","resolutionX","resolutionY","getBottomLeftCorner","getBottomRightCorner","getUpLeftCorner","getUpRightCorner","gmf_authentication_Service_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_map_FeatureOverlayMgr_js__WEBPACK_IMPORTED_MODULE_5__","ngeo_misc_FeatureHelper_js__WEBPACK_IMPORTED_MODULE_6__","ngeo_print_Service_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_print_Utils_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_query_MapQuerent_js__WEBPACK_IMPORTED_MODULE_9__","gmfPrintTemplateUrl","PrintStateEnum","NOT_IN_USE","PRINTING","ERROR_ON_REPORT","CAPABILITIES_NOT_LOADED","ERROR_ON_GETCAPABILITIES","rotateMask","fieldValues","hiddenAttributeNames","attributesOut","ngeoPrintUtils","ngeoCreatePrint","gmfPrintUrl","gmfPrintState","gmfPrintState_","featureOverlayLayer_","ngeoPrintUtils_","ngeoPrint_","ngeoQueryResult_","scaleInput","requestCanceler_","statusTimeoutPromise_","onDragPreviousMousePosition_","rotationTimeoutPromise_","postComposeListenerKey_","pointerDragListenerKey_","mapViewResolutionChangeKey_","curRef_","formats_","layouts_","layout_","paperSize_","layoutInfo","scaleManuallySelected_","rotationInput_","setRotation","postcomposeListener_","capabilities_","currentThemes_","togglePrintPanel_","print","currentThemes","getRotationFn","getScaleFn","goog_asserts_js__WEBPACK_IMPORTED_MODULE_3__","ol_array_js__WEBPACK_IMPORTED_MODULE_10__","getOptimalScale_","getCapabilities_","parseCapabilities_","ol_events_js__WEBPACK_IMPORTED_MODULE_11__","onPointerDrag_","render","layouts","updateFields_","mapInfo","isAttributeInCurrentLayout_","clientInfo","updateCustomFields_","legend","dpis","rawType","simpleAttributes","previousAttributes","default","ol_math_js__WEBPACK_IMPORTED_MODULE_16__","p0x","p0y","p1x","p1y","centerToP0","centerToP1","boost","increment","getDataSource_","field","getLegend_","ol_Map_js__WEBPACK_IMPORTED_MODULE_15__","setView","ol_layers","new_ol_layers","print_native_angle","server_name","layer_names","printLayers","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_12__","setLayerGroup","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_14__","spec","handleCreateReportSuccess_","handleCreateReportError_","resetPrintStates_","opt_printState","datasourceObj","columns","datasourceArr","table","getStatus_","handleGetStatusSuccess_","mfResp","classes","icons","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_13__","getMetadataLegendImage_","legendImage","setLayout","layoutName","getSetScale","contrainRes","constrainResolution","setResolution","setDpi","isState","stateEnumKey","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_12__","ngeo_misc_EventHelper_js__WEBPACK_IMPORTED_MODULE_5__","filter_","interaction_","ngeo_GeometryType_js__WEBPACK_IMPORTED_MODULE_2__","ol_interaction_Draw_js__WEBPACK_IMPORTED_MODULE_11__","ngeo_interaction_MeasureLength_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_interaction_MeasureArea_js__WEBPACK_IMPORTED_MODULE_3__","ol_index_js__WEBPACK_IMPORTED_MODULE_7__","ol_events_js__WEBPACK_IMPORTED_MODULE_9__","handleDrawEnd_","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_6__","toMulti","ol_Collection_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_misc_php_date_formatter_js__WEBPACK_IMPORTED_MODULE_0__","fromJson","ngeo_misc_datetimepickerComponent_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_misc_EventHelper_js__WEBPACK_IMPORTED_MODULE_2__","ngeoAttributesTemplateUrl","disabled","form","updating_","handleInputChange","ngeo_misc_FeatureHelper_js__WEBPACK_IMPORTED_MODULE_0__","$menu","aria-labelledby","$item","handleMenuItemClick_","handleElementClick_","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_2__","parentElement","sortable","resetUpDragDrop","handleClassName","callbackFn","callbackCtx","sortableElement","sortableOptions","axis","ui-sortable-helper","ui","oldIndex","newIndex","Function","ngeoPopoverCtrl","anchorElm","bodyElm","shown","popover","placement","dismissPopover","unbind","anchorComponent","contentComponent","hide","PopoverController_","onMouseDown","clickEvent","gmf_layertree_TreeManager_js__WEBPACK_IMPORTED_MODULE_1__","gmf_search_FulltextSearch_js__WEBPACK_IMPORTED_MODULE_2__","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_misc_AutoProjection_js__WEBPACK_IMPORTED_MODULE_6__","ngeo_misc_colorpickerComponent_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_search_module_js__WEBPACK_IMPORTED_MODULE_9__","ngeo_message_popoverComponent_js__WEBPACK_IMPORTED_MODULE_8__","gmfSearchTemplateUrl","gmfSearchTemplateUrl_","inputValue","placeholder","datasources","featuresStyles","clearButton","colorChooser","coordinatesProjections","additionalListeners","onInitCallback","SearchController_","ngeoAutoProjection","ngeoSearchCreateGeoJSONBloodhound","gmfSearchFulltextSearch","fullTextSearch_","ngeoSearchCreateGeoJSONBloodhound_","styles_","datasets","displayColorPicker","listeners","coordProj","initStyles_","getSearchStyle_","ol_obj_js__WEBPACK_IMPORTED_MODULE_13__","initDatasets_","setStyleColor","mergeListeners_","select_","close_","datasetsempty_","searchQuery","resultIndex","mapZoom","fulltextsearch_","filterLayername_","filterAction_","createDataset_","datasetTitle","groupsKey","typeaheadDatasetOptions","createSearchCoordinates_","display","templates","componentScope","compile","typeaheadDataset","createAndInitBloodhound_","act","opt_layerName","featureLayerName","mapProjectionCode","getBloodhoudRemoteOptions_","bloodhound","ol_proj_js__WEBPACK_IMPORTED_MODULE_15__","initialize","rateLimitWait","xhrFields","ol_uri_js__WEBPACK_IMPORTED_MODULE_21__","interface","suggestions","tt_source","COORDINATES_LAYER_NAME","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_20__","ol_style_RegularShape_js__WEBPACK_IMPORTED_MODULE_18__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_19__","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_17__","ol_style_Circle_js__WEBPACK_IMPORTED_MODULE_16__","customStyles","ol_color_js__WEBPACK_IMPORTED_MODULE_11__","setImage","changed","setTTDropdownVisibility_","ttDropdown","onClearButton","ttmenu","inputs","blur","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_12__","layer_name","leaveSearch_","selectFromGMF_","featureGeometry","_loop2","actionName","actionData","datasourcesActionsHaveAddLayer","groupAction","silent","fitArray","menu","opt_zoom","ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_14__","fitOptions","selected","selectedIndex","arr1","arr2","dereg1","dereg2","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_0__","ngeoLayertreeTemplateUrl","ol_Overlay_js__WEBPACK_IMPORTED_MODULE_1__","originalEl","closeEl_","contentEl_","one","gmf_datasource_DataSourceBeingFiltered_js__WEBPACK_IMPORTED_MODULE_1__","gmf_datasource_ExternalDataSourcesManager_js__WEBPACK_IMPORTED_MODULE_2__","gmf_permalink_Permalink_js__WEBPACK_IMPORTED_MODULE_3__","gmf_layertree_datasourceGroupTreeComponent_js__WEBPACK_IMPORTED_MODULE_4__","gmf_layertree_SyncLayertreeMap_js__WEBPACK_IMPORTED_MODULE_5__","gmf_layertree_TreeManager_js__WEBPACK_IMPORTED_MODULE_6__","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_layertree_component_js__WEBPACK_IMPORTED_MODULE_10__","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_11__","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_12__","ngeo_misc_WMSTime_js__WEBPACK_IMPORTED_MODULE_14__","gmfLayertreeTemplate","openLinksInNewWindow","gmfSyncLayertreeMap","goog_asserts_js__WEBPACK_IMPORTED_MODULE_8__","gmfSyncLayertreeMap_","groupNodeStates_","ngeo_misc_syncArrays_js__WEBPACK_IMPORTED_MODULE_13__","updateDimensions_","ol_layer_Layer_js__WEBPACK_IMPORTED_MODULE_16__","updateLayerDimensions_","ol_obj_js__WEBPACK_IMPORTED_MODULE_17__","ol_source_WMTS_js__WEBPACK_IMPORTED_MODULE_20__","ol_source_TileWMS_js__WEBPACK_IMPORTED_MODULE_19__","ol_source_ImageWMS_js__WEBPACK_IMPORTED_MODULE_18__","once","toggleActive","getNodeState","updateWMSTimeLayerState","layertreeCtrl","ngeo_datasource_OGC_js__WEBPACK_IMPORTED_MODULE_9__","getLegendIconURL","iconUrl","legendRule","gmfOgcServer","getLegendsObject","legendsObject","gmfLayerDefaultName","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_15__","wmtsLegendURL","layersNames","getScale_","getNumberOfLegendsObject","displayMetadata","metadataURL","afterReorder","groupNodes","currentTreeCtrls","removeNode","removeAllNodes","nodesCount","getResolutionStyle","zoomToResolution","toggleNodeLegend","legendNodeId","toggleFiltrableDataSource","isNodeLegendVisible","supportsCustomization","supportsLegend","supportsOpacityChange","appmodule_exports","$compileProvider","debugInfoEnabled","appmodule","ngeoGooglestreetviewTemplateUrl","featureStyle","noDataAtLocation","panorama_","google","maps","StreetViewPanorama","pov","heading","pitch","panoramaListener_","point_","streetViewService_","StreetViewService","panoramaPositionChanging_","handleLocationChange_","hasLocation","handleReadyChange_","hasData","oldShow","addListener","handlePanoramaPositionChange_","removeListener","oldLocation","lonLat","toLonLat_","getPanorama","lat","lng","handleStreetViewServiceGetPanorama_","ready","oldReady","panorama","StreetViewStatus","OK","latLng","getPosition","fromLonLat_","googlestreetview_module","NominatimService_exports","nominatimUrl_","searchDefaultParams_","typeaheadDebounceDelay_","typeaheadSourceDebounced","typeaheadSource_","option","syncResults","asyncResults","lon","display_name","NominatimService","RoutingService_exports","routingOptions_","ngeoOsrmBackendUrl_","backendUrl","protocolVersion_","getRoute","getNearest","RoutingService","NominatimInputComponent_exports","ngeoRoutingNominatimInputComponentTemplateUrl","ngeoNominatimService","onSelect","NominatimInputComponent_component","NominatimInputComponent","RoutingFeatureComponent_exports","ngeoRoutingFeatureTemplateUrl","ngeoNominatimService_","featureLabel","onChange","vectorFeatures_","modifyFeature_","draw_","onSelect_","errorMessage","snapFeature_","onFeatureChange_","setFeature_","transformedCoordinate","newCoordinates","getLonLatFromPoint_","onSuccess","onError","RoutingFeatureComponent","RoutingComponent_exports","ngeoRoutingTemplateUrl","ngeoRoutingService","ngeoRoutingService_","routingProfiles","profiles","selectedRoutingProfile","calculateRoute","startFeature_","targetFeature_","viaArray","start.fill","start.stroke","destination.fill","destination.stroke","via.fill","via.stroke","routeSource_","routeLayer_","routeDistance","routeDuration","regexIsFormattedCoord","handleChange","clearRoute","reverseRoute","tmpFeature","parseRoute_","route","parsedRoutes","formatConfig","legs","leg","steps","step","coordFrom","coordTo","vias","via","onSuccess_","routes","startRoute","endRoute","startToRoute","routeToEnd","routeConnections","onError_","addVia","deleteVia","RoutingComponent","routing_module","epsg2056def","somerc","lib","proj4","AbstractDesktopController","resolutions","searchCoordinatesProjections","searchDelay","showInfobar","scaleSelectorValues","elevationLayers","profileLinesconfiguration","srtm","mousePositionProjections","gridMergeTabs","OSM_time_merged","transport (merged)","Learning [merged]","bgOpacityOptions","raven_default","addPlugin","angular_default","install","onKeydown","import_module"],"mappings":"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","file":"desktop_alt.28bc2c.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([355,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","const exports = {};\n\nexports.assert = function(condition, opt_message, var_args) {\n  return condition;\n};\n\nexports.assertNumber = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertString = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertFunction = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertObject = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertArray = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertBoolean = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertElement = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertInstanceof = function(value, type, opt_message, var_args) {\n  return value;\n};\n\nexports.assertObjectPrototypeIsIntact = function() {};\n\nexport default exports;\n","/**\n * @module ngeo.GeometryType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  CIRCLE: 'Circle',\n  /**\n   * @type {string}\n   * @export\n   */\n  LINE_STRING: 'LineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_LINE_STRING: 'MultiLineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POINT: 'MultiPoint',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POLYGON: 'MultiPolygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  POINT: 'Point',\n  /**\n   * @type {string}\n   * @export\n   */\n  POLYGON: 'Polygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  RECTANGLE: 'Rectangle',\n  /**\n   * @type {string}\n   * @export\n   */\n  TEXT: 'Text'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function() {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayerWMTS.matrixSet,\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Rule\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @implements {ngeox.rule.Rule}\n */\nconst exports = class {\n\n  /**\n   * The abstract class for all filter rules.\n   *\n   * Rules are used to define filters that can be applied on data sources.\n   * A rule is usually a combination of 3 things:\n   *\n   * - a property name, for example 'city_name'\n   * - an operator, for example 'is equal to'\n   * - and an expression, for example 'Chicoutimi'.\n   *\n   * A rule is useful to hold those properties and change them on the fly.\n   * For example, changing an operator from 'is equal to' to 'like'.\n   *\n   * Also, a rule is especially useful for its `value` getter, which returns\n   * the combination of properties described above or `null` if there are some\n   * missing.  The `value` getter can be watched and used when the value is\n   * not null.\n   *\n   * When the operator is `between`, the `lowerBoundary` and `upperBoundary`\n   * properties are used instead of `expression`.\n   *\n   * @struct\n   * @param {!ngeox.rule.RuleOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * Whether the rule is active or not. Used by the `ngeo-rule` component.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.active_ = options.active === true;\n\n    /**\n     * The expression of the rule. The expression and boundaries are mutually\n     * exclusives.\n     *\n     * Note: exported (instead of private) due to the problem with the\n     * compiler. See the getter/setter methods below...  As a setter, the\n     * `expression` property would support being bond to an `ng-model`. Without\n     * it, it can't unless we expose the property directly.\n     *\n     * @type {?number|string}\n     * @export\n     */\n    this.expression = options.expression !== undefined ?\n      options.expression : null;\n\n    /**\n     * The lower boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.lowerBoundary_ = options. lowerBoundary !== undefined ?\n      options.lowerBoundary : null;\n\n    /**\n     * The rule operator.\n     * @type {?string}\n     * @private\n     */\n    this.operator_ = options.operator || null;\n\n    /**\n     * The upper boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.upperBoundary_ = options. upperBoundary !== undefined ?\n      options.upperBoundary : null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the rule is a custom one or not.\n     * @type {boolean}\n     * @private\n     */\n    this.isCustom_ = options.isCustom !== false;\n\n    /**\n     * The human-readable name of the rule.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n\n    /**\n     * A list of rule operators.\n     * @type {?Array.<string>}\n     * @private\n     */\n    this.operators_ = options.operators || null;\n\n    /**\n     * The property name (a.k.a. the attribute name).\n     * @type {string}\n     * @private\n     */\n    this.propertyName_ = options.propertyName;\n\n    /**\n     * The type of rule.\n     * @type {string}\n     * @private\n     */\n    this.type_ = googAsserts.assert(options.type);\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Array.<!ol.EventsKey>}\n     * @protected\n     */\n    this.listenerKeys = [];\n\n  }\n\n  // === Dynamic property getters/setters ===\n\n  /**\n   * @return {boolean} Active\n   * @export\n   */\n  get active() {\n    return this.active_;\n  }\n\n  /**\n   * @param {boolean} active Active\n   * @export\n   */\n  set active(active) {\n    this.active_ = active;\n  }\n\n  /**\n   * The `expression` property does not have conventionnal getter/setters\n   * method because of a limitation of the compiler. It doesn't support\n   * yet having such methods being extended in child classes.\n   *\n   * See: https://github.com/google/closure-compiler/issues/1089\n   *\n   * @return {?number|string} Expression\n   * @export\n   */\n  getExpression() {\n    return this.expression;\n  }\n\n  /**\n   * @param {?number|string} expression Expression\n   * @export\n   */\n  setExpression(expression) {\n    this.expression = expression;\n  }\n\n  /**\n   * @return {?number} Lower boundary\n   * @export\n   */\n  get lowerBoundary() {\n    return this.lowerBoundary_;\n  }\n\n  /**\n   * @param {?number} lowerBoundary Lower boundary\n   * @export\n   */\n  set lowerBoundary(lowerBoundary) {\n    this.lowerBoundary_ = lowerBoundary;\n  }\n\n  /**\n   * @return {?string} Operator\n   * @export\n   */\n  get operator() {\n    return this.operator_;\n  }\n\n  /**\n   * @param {?string} operator Operator\n   * @export\n   */\n  set operator(operator) {\n    this.operator_ = operator;\n  }\n\n  /**\n   * @return {?number} Upper boundary\n   * @export\n   */\n  get upperBoundary() {\n    return this.upperBoundary_;\n  }\n\n  /**\n   * @param {?number} upperBoundary Upper boundary\n   * @export\n   */\n  set upperBoundary(upperBoundary) {\n    this.upperBoundary_ = upperBoundary;\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {boolean} Is custom.\n   * @export\n   */\n  get isCustom() {\n    return this.isCustom_;\n  }\n\n  /**\n   * @return {string} name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n  /**\n   * @return {?Array.<string>} Operators\n   * @export\n   */\n  get operators() {\n    return this.operators_;\n  }\n\n  /**\n   * @return {string} Property name\n   * @export\n   */\n  get propertyName() {\n    return this.propertyName_;\n  }\n\n  /**\n   * @return {string} Type\n   * @export\n   */\n  get type() {\n    return this.type_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {?ngeox.rule.RuleSimpleValue|ngeox.rule.RuleRangeValue} Value.\n   * @export\n   */\n  get value() {\n    let value = null;\n\n    const expression = this.getExpression();\n    const lowerBoundary = this.lowerBoundary;\n    const operator = this.operator;\n    const propertyName = this.propertyName;\n    const upperBoundary = this.upperBoundary;\n\n    if (operator) {\n      if (operator === exports.OperatorType.BETWEEN ||\n          operator === exports.TemporalOperatorType.DURING) {\n        if (lowerBoundary !== null && upperBoundary !== null) {\n          value = {\n            operator,\n            lowerBoundary,\n            propertyName,\n            upperBoundary\n          };\n        }\n      } else {\n        if (expression !== null) {\n          value = {\n            expression,\n            operator,\n            propertyName\n          };\n        }\n      }\n    }\n\n    return value;\n  }\n\n  // === Other utility methods ===\n\n  /**\n   * Reset the following properties to `null`: expression, lowerBoundary,\n   * upperBoundary.\n   * @export\n   */\n  reset() {\n    if (this.getExpression() !== null) {\n      this.setExpression(null);\n    }\n    if (this.lowerBoundary !== null) {\n      this.lowerBoundary = null;\n    }\n    if (this.upperBoundary !== null) {\n      this.upperBoundary = null;\n    }\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.listenerKeys.forEach(olEvents.unlistenByKey);\n    this.listenerKeys.length = 0;\n  }\n\n};\n\n\n/**\n * @enum {string}\n */\nexports.OperatorType = {\n  BETWEEN: '..',\n  EQUAL_TO: '=',\n  GREATER_THAN: '>',\n  GREATER_THAN_OR_EQUAL_TO: '>=',\n  LESSER_THAN: '<',\n  LESSER_THAN_OR_EQUAL_TO: '<=',\n  LIKE: '~',\n  NOT_EQUAL_TO: '!='\n};\n\n\n/**\n * @enum {string}\n */\nexports.SpatialOperatorType = {\n  CONTAINS: 'contains',\n  INTERSECTS: 'intersects',\n  WITHIN: 'within'\n};\n\n\n/**\n * @enum {string}\n */\nexports.TemporalOperatorType = {\n  BEGINS: 'time_start',\n  DURING: 'time_during',\n  ENDS: 'time_end',\n  EQUALS: 'time_equal'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Several OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n","/**\n * @module gmf\n */\nconst exports = {};\n\n/**\n * The default template base URL for modules, used as-is by the template cache.\n * @type {string}\n */\n\n/**\n * @const\n * @export\n */\nexports.DATALAYERGROUP_NAME = 'data';\n\n/**\n * @const\n * @export\n */\nexports.EXTERNALLAYERGROUP_NAME = 'external';\n\n/**\n * @const\n * @export\n */\nexports.COORDINATES_LAYER_NAME = 'gmfCoordinatesLayerName';\n\n\n/**\n * @enum {string}\n */\nexports.PermalinkParam = {\n  BG_LAYER: 'baselayer_ref',\n  EXTERNAL_DATASOURCES_NAMES: 'eds_n',\n  EXTERNAL_DATASOURCES_URLS: 'eds_u',\n  FEATURES: 'rl_features',\n  MAP_CROSSHAIR: 'map_crosshair',\n  MAP_TOOLTIP: 'map_tooltip',\n  MAP_X: 'map_x',\n  MAP_Y: 'map_y',\n  MAP_Z: 'map_zoom',\n  TREE_GROUPS: 'tree_groups',\n  WFS_LAYER: 'wfs_layer',\n  WFS_NGROUPS: 'wfs_ngroups',\n  WFS_SHOW_FEATURES: 'wfs_showFeatures'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.FeatureHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olArray from 'ol/array.js';\nimport * as olColor from 'ol/color.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Provides methods for features, such as:\n *  - style setting / getting\n *  - measurement\n *  - export\n *\n * @constructor\n * @struct\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.$filter} $filter Angular filter.\n * @ngdoc service\n * @ngname ngeoFeatureHelper\n * @ngInject\n */\nconst exports = function($injector, $filter) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.decimals_ = undefined;\n  if ($injector.has('ngeoMeasureDecimals')) {\n    this.decimals_ = $injector.get('ngeoMeasureDecimals');\n  }\n\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.precision_ = undefined;\n  if ($injector.has('ngeoMeasurePrecision')) {\n    this.precision_ = $injector.get('ngeoMeasurePrecision');\n  }\n\n  /**\n   * @type {!ngeox.number}\n   */\n  this.numberFormat_ = /** @type {ngeox.number} */ ($filter('number'));\n\n  /**\n   * @type {!ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ ($filter('ngeoUnitPrefix'));\n\n  /**\n   * @type {!ngeox.numberCoordinates}\n   */\n  this.ngeoNumberCoordinates_ = /** @type {ngeox.numberCoordinates} */ ($filter('ngeoNumberCoordinates'));\n\n  /**\n   * Filter function to display point coordinates or null to don't use any filter.\n   * @type {function(*):string|null}\n   * @private\n   */\n  this.pointFilterFn_ = null;\n\n  /**\n   * Arguments to apply to the point filter function.\n   * @type {Array.<*>}\n   * @private\n   */\n  this.pointFilterArgs_ = [];\n\n  if ($injector.has('ngeoPointfilter')) {\n    const filterElements = $injector.get('ngeoPointfilter').split(':');\n    const filterName = filterElements.shift();\n    const filter = this.$filter_(filterName);\n    googAsserts.assertFunction(filter);\n    this.pointFilterFn_ = filter;\n    this.pointFilterArgs_ = filterElements;\n  } else {\n    this.pointFilterFn_ = null;\n  }\n\n  /**\n   * @type {!ol.proj.Projection}\n   * @private\n   */\n  this.projection_;\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n\n};\n\n\n/**\n * @param {!ol.proj.Projection} projection Projection.\n * @export\n */\nexports.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n// === STYLE METHODS ===\n\n\n/**\n * Set the style of a feature using its inner properties and depending on\n * its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @param {boolean=} opt_select Whether the feature should be rendered as\n *     selected, which includes additional vertex and halo styles.\n * @export\n */\nexports.prototype.setStyle = function(feature, opt_select) {\n  const styles = this.getStyle(feature);\n  if (opt_select) {\n    if (this.supportsVertex_(feature)) {\n      styles.push(this.getVertexStyle());\n    }\n    styles.unshift(this.getHaloStyle_(feature));\n  }\n  feature.setStyle(styles);\n};\n\n\n/**\n * Create and return a style object from a given feature using its inner\n * properties and depending on its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @return {!Array.<!ol.style.Style>} The style object.\n * @export\n */\nexports.prototype.getStyle = function(feature) {\n  const type = this.getType(feature);\n  let style;\n\n  switch (type) {\n    case ngeoGeometryType.LINE_STRING:\n      style = this.getLineStringStyle_(feature);\n      break;\n    case ngeoGeometryType.POINT:\n      style = this.getPointStyle_(feature);\n      break;\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      style = this.getPolygonStyle_(feature);\n      break;\n    case ngeoGeometryType.TEXT:\n      style = this.getTextStyle_(feature);\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  let styles;\n  if (style.constructor === Array) {\n    styles = /** @type {!Array.<!ol.style.Style>}*/ (style);\n  } else {\n    styles = [style];\n  }\n\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with linestring geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getLineStringStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n\n  const styles = [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPointStyle_ = function(feature) {\n  const size = this.getSizeProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const styles = [new olStyleStyle({\n    image: new olStyleCircle({\n      radius: size,\n      fill: new olStyleFill({\n        color: color\n      })\n    })\n  })];\n  // Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    const font_size = 10;\n    // https://reeddesign.co.uk/test/points-pixels.html\n    const point_to_px = 1.3;\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue,\n        size: font_size,\n        offsetY: -(size + (font_size / 2) * textLabelValues.length * point_to_px + 4)\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * Get an optional number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number|undefined}, The attribute value\n */\nexports.prototype.optNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (value !== undefined) {\n    if (typeof value == 'string') {\n      return +value;\n    } else {\n      return googAsserts.assertNumber(value);\n    }\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Get a number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number}, The attribute value\n */\nexports.prototype.getNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (typeof value == 'string') {\n    return +value;\n  } else {\n    return googAsserts.assertNumber(value);\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with polygon geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPolygonStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const opacity = this.getOpacityProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n\n  // fill color with opacity\n  const fillColor = color.slice();\n  fillColor[3] = opacity;\n\n  const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n\n  const styles = [new olStyleStyle({\n    fill: new olStyleFill({\n      color: fillColor\n    }),\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  if (showMeasure || showLabel) {\n    if (showMeasure && azimut !== undefined) {\n      // Radius style:\n      const line = this.getRadiusLine(feature, azimut);\n      const length = ngeoInteractionMeasure.getFormattedLength(\n        line, this.projection_, this.precision_, this.unitPrefixFormat_);\n\n      styles.push(new olStyleStyle({\n        geometry: line,\n        fill: new olStyleFill({\n          color: fillColor\n        }),\n        stroke: new olStyleStroke({\n          color: color,\n          width: strokeWidth\n        }),\n        text: this.createTextStyle_({\n          text: length,\n          angle: ((azimut % 180) + 180) % 180 - 90\n        })\n      }));\n\n      // Azimut style\n      styles.push(new olStyleStyle({\n        geometry: new olGeomPoint(line.getLastCoordinate()),\n        text: this.createTextStyle_({\n          text: `${this.numberFormat_(azimut, this.decimals_)}°`,\n          size: 10,\n          offsetX: Math.cos((azimut - 90) * Math.PI / 180) * 20,\n          offsetY: Math.sin((azimut - 90) * Math.PI / 180) * 20\n        })\n      }));\n\n      //Label Style\n      if (showLabel) {\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: this.getNameProperty(feature),\n            offsetY: -8,\n            exceedLength: true\n          })\n        }));\n      }\n    } else {\n      //Label Style\n      const textLabelValues = [];\n      if (showMeasure) {\n        textLabelValues.push(this.getMeasure(feature));\n      }\n      if (showLabel) {\n        textLabelValues.push(this.getNameProperty(feature));\n      }\n      if (showLabel ||  showMeasure) {\n        // display both label using  \\n\n        const textLabelValue = textLabelValues.join('\\n');\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: textLabelValue,\n            exceedLength: true\n          })\n        }));\n      }\n    }\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry, rendered as text.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getTextStyle_ = function(feature) {\n\n  return new olStyleStyle({\n    text: this.createTextStyle_({\n      text: this.getNameProperty(feature),\n      size: this.getSizeProperty(feature),\n      angle: this.getAngleProperty(feature),\n      color: this.getRGBAColorProperty(feature),\n      width: this.getStrokeProperty(feature)\n    })\n  });\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature to create the editing styles with.\n * @return {!Array.<!ol.style.Style>} List of style.\n * @export\n */\nexports.prototype.createEditingStyles = function(feature) {\n  // (1) Style definition depends on geometry type\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  const styles = [];\n\n  const geom = feature.getGeometry();\n  console.assert(geom);\n  const type = geom.getType();\n\n  if (type === 'Point') {\n    styles.push(\n      new olStyleStyle({\n        image: new olStyleCircle({\n          radius: width * 2,\n          fill: new olStyleFill({\n            color: blue\n          }),\n          stroke: new olStyleStroke({\n            color: white,\n            width: width / 2\n          })\n        }),\n        zIndex: Infinity\n      })\n    );\n  } else {\n    if (type === 'LineString') {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: white,\n            width: width + 2\n          })\n        })\n      );\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width\n          })\n        })\n      );\n    } else {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width / 2\n          }),\n          fill: new olStyleFill({\n            color: [255, 255, 255, 0.5]\n          })\n        })\n      );\n    }\n\n    // (2) Anything else than 'Point' requires the vertex style as well\n    styles.push(this.getVertexStyle(true));\n  }\n\n  return styles;\n};\n\n\n/**\n * Create and return a style object to be used for vertex.\n * @param {boolean=} opt_incGeomFunc Whether to include the geometry function\n *     or not. One wants to use the geometry function when you want to draw\n *     the vertex of features that don't have point geometries. One doesn't\n *     want to include the geometry function if you just want to have the\n *     style object itself to be used to draw features that have point\n *     geometries. Defaults to `true`.\n * @return {!ol.style.Style} Style.\n * @export\n */\nexports.prototype.getVertexStyle = function(opt_incGeomFunc) {\n  const incGeomFunc = opt_incGeomFunc !== undefined ? opt_incGeomFunc : true;\n\n  const options = {\n    image: new olStyleRegularShape({\n      radius: 6,\n      points: 4,\n      angle: Math.PI / 4,\n      fill: new olStyleFill({\n        color: [255, 255, 255, 0.5]\n      }),\n      stroke: new olStyleStroke({\n        color: [0, 0, 0, 1]\n      })\n    })\n  };\n\n  if (incGeomFunc) {\n    options.geometry = function(feature) {\n      const geom = feature.getGeometry();\n\n      if (geom.getType() == 'Point') {\n        return;\n      }\n\n      let innerMultiCoordinates;\n      let multiCoordinates = [];\n      let coordinates = [];\n      let i, ii;\n      if (geom instanceof olGeomLineString) {\n        coordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomMultiLineString) {\n        multiCoordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomPolygon) {\n        coordinates = geom.getCoordinates()[0];\n      } else if (geom instanceof olGeomMultiPolygon) {\n        innerMultiCoordinates = geom.getCoordinates();\n      }\n\n      if (innerMultiCoordinates) {\n        for (i = 0, ii = innerMultiCoordinates.length; i < ii; i++) {\n          multiCoordinates = multiCoordinates.concat(innerMultiCoordinates[i]);\n        }\n      }\n      for (i = 0, ii = multiCoordinates.length; i < ii; i++) {\n        coordinates = coordinates.concat(multiCoordinates[i]);\n      }\n\n      if (coordinates.length) {\n        return new olGeomMultiPoint(coordinates);\n      } else {\n        return geom;\n      }\n    };\n  }\n\n  return new olStyleStyle(options);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Whether the feature supports vertex or not.\n * @private\n */\nexports.prototype.supportsVertex_ = function(feature) {\n  const supported = [\n    ngeoGeometryType.LINE_STRING,\n    ngeoGeometryType.POLYGON,\n    ngeoGeometryType.RECTANGLE\n  ];\n  const type = this.getType(feature);\n  return olArray.includes(supported, type);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getHaloStyle_ = function(feature) {\n  const type = this.getType(feature);\n  let style;\n  const haloSize = 3;\n\n  switch (type) {\n    case ngeoGeometryType.POINT:\n      const size = this.getSizeProperty(feature);\n      style = new olStyleStyle({\n        image: new olStyleCircle({\n          radius: size + haloSize,\n          fill: new olStyleFill({\n            color: [255, 255, 255, 1]\n          })\n        })\n      });\n      break;\n    case ngeoGeometryType.LINE_STRING:\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      const strokeWidth = this.getStrokeProperty(feature);\n      style = new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: strokeWidth + haloSize * 2\n        })\n      });\n      break;\n    case ngeoGeometryType.TEXT:\n      style = new olStyleStyle({\n        text: this.createTextStyle_({\n          text: this.getNameProperty(feature),\n          size: this.getSizeProperty(feature),\n          angle: this.getAngleProperty(feature),\n          width: haloSize * 3\n        })\n      });\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  return style;\n};\n\n\n// === PROPERTY GETTERS ===\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * Also delete the 'ngeo_feature_type_' from the ngeo query system.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Filtered properties of the current feature.\n * @export\n */\nexports.getFilteredFeatureValues = function(feature) {\n  const properties = feature.getProperties();\n  delete properties['boundedBy'];\n  delete properties[feature.getGeometryName()];\n  delete properties['ngeo_feature_type_'];\n  return properties;\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {number} Angle.\n * @export\n */\nexports.prototype.getAngleProperty = function(feature) {\n  const angle = +(/** @type {string} */ (\n    feature.get(ngeoFormatFeatureProperties.ANGLE)));\n  googAsserts.assertNumber(angle);\n  return angle;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Color.\n * @export\n */\nexports.prototype.getColorProperty = function(feature) {\n\n  const color = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.COLOR));\n\n  googAsserts.assertString(color);\n\n  return color;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {ol.Color} Color.\n * @export\n */\nexports.prototype.getRGBAColorProperty = function(feature) {\n  return olColor.fromString(this.getColorProperty(feature));\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Name.\n * @export\n */\nexports.prototype.getNameProperty = function(feature) {\n  const name = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.NAME));\n  googAsserts.assertString(name);\n  return name;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Opacity.\n * @export\n */\nexports.prototype.getOpacityProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.OPACITY);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show measure.\n * @export\n */\nexports.prototype.getShowMeasureProperty = function(feature) {\n  let showMeasure = feature.get(ngeoFormatFeatureProperties.SHOW_MEASURE);\n  if (showMeasure === undefined) {\n    showMeasure = false;\n  } else if (typeof showMeasure === 'string') {\n    showMeasure = (showMeasure === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showMeasure);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show feature label.\n * @export\n */\nexports.prototype.getShowLabelProperty = function(feature) {\n  let showLabel = feature.get(ngeoFormatFeatureProperties.SHOW_LABEL);\n  if (showLabel === undefined) {\n    showLabel = false;\n  } else if (typeof showLabel === 'string') {\n    showLabel = (showLabel === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showLabel);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Size.\n * @export\n */\nexports.prototype.getSizeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.SIZE);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Stroke.\n * @export\n */\nexports.prototype.getStrokeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.STROKE);\n};\n\n\n// === EXPORT ===\n\n\n/**\n * Export features in the given format. The projection of the exported features\n * is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {string} formatType Format type to export the features.\n * @export\n */\nexports.prototype.export = function(features, formatType) {\n  switch (formatType) {\n    case exports.FormatType.GPX:\n      this.exportGPX(features);\n      break;\n    case exports.FormatType.KML:\n      this.exportKML(features);\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * Export features in GPX and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportGPX = function(features) {\n  const format = new olFormatGPX();\n  const mimeType = 'application/gpx+xml';\n  const fileName = 'export.gpx';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features in KML and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportKML = function(features) {\n  const format = new olFormatKML();\n  const mimeType = 'application/vnd.google-earth.kml+xml';\n  const fileName = 'export.kml';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features using a given format to a specific filename and download\n * the result to the browser. The projection of the exported features is:\n * `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {!ol.format.Feature} format Format\n * @param {string} fileName Name of the file.\n * @param {string=} opt_mimeType Mime type. Defaults to 'text/plain'.\n * @private\n */\nexports.prototype.export_ = function(features, format, fileName, opt_mimeType) {\n  const mimeType = opt_mimeType !== undefined ? opt_mimeType : 'text/plain';\n\n  // clone the features to apply the original style to the clone\n  // (the original may have select style active)\n  const clones = [];\n  let clone;\n  features.forEach((feature) => {\n    clone = new olFeature(feature.getProperties());\n    this.setStyle(clone, false);\n    clones.push(clone);\n  });\n\n  const writeOptions = this.projection_ ? {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.projection_\n  } : {};\n\n  const data = format.writeFeatures(clones, writeOptions);\n  this.download_(\n    data, fileName, `${mimeType};charset=utf-8`);\n};\n\n\n// === OTHER UTILITY METHODS ===\n\n\n/**\n * @param {!ngeox.style.TextOptions} options Options.\n * @return {!ol.style.Text} Style.\n * @private\n */\nexports.prototype.createTextStyle_ = function(options) {\n  if (options.angle) {\n    const angle = options.angle !== undefined ? options.angle : 0;\n    const rotation = angle * Math.PI / 180;\n    options.rotation = rotation;\n    delete options.angle;\n  }\n\n  options.font = ['normal', `${options.size || 10}pt`, 'Arial'].join(' ');\n\n  if (options.color) {\n    options.fill = new olStyleFill({color: options.color || [0, 0, 0, 1]});\n    delete options.color;\n  }\n\n  options.stroke = new olStyleStroke({\n    color: [255, 255, 255, 1],\n    width: options.width || 3\n  });\n  delete options.width;\n\n  return new olStyleText(options);\n};\n\n\n/**\n * Get the measure of the given feature as a string. For points, you can format\n * the result by setting a filter to apply on the coordinate with the function\n * {@link ngeo.misc.FeatureHelper.prototype.setPointFilterFn}.\n * @param {!ol.Feature} feature Feature.\n * @return {string} Measure.\n * @export\n */\nexports.prototype.getMeasure = function(feature) {\n\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be truthy');\n\n  let measure = '';\n\n  if (geometry instanceof olGeomPolygon) {\n    if (this.getType(feature) === ngeoGeometryType.CIRCLE) {\n      const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n      googAsserts.assertNumber(azimut);\n      const line = this.getRadiusLine(feature, azimut);\n\n      measure = ngeoInteractionMeasureAzimut.getFormattedAzimutRadius(\n        line, this.projection_, this.decimals_, this.precision_, this.unitPrefixFormat_, this.numberFormat_);\n    } else {\n      measure = ngeoInteractionMeasure.getFormattedArea(\n        geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n    }\n  } else if (geometry instanceof olGeomLineString) {\n    measure = ngeoInteractionMeasure.getFormattedLength(\n      geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n  } else if (geometry instanceof olGeomPoint) {\n    if (this.pointFilterFn_ === null) {\n      measure = ngeoInteractionMeasure.getFormattedPoint(\n        geometry, this.decimals_, this.ngeoNumberCoordinates_);\n    } else {\n      const coordinates = geometry.getCoordinates();\n      const args = this.pointFilterArgs_.slice(0);\n      args.unshift(coordinates);\n      measure = this.pointFilterFn_(...args);\n    }\n  }\n\n  return measure;\n};\n\n\n/**\n * Return the type of geometry of a feature using its geometry property and\n * some inner properties.\n * @param {!ol.Feature} feature Feature.\n * @return {string} The type of geometry.\n * @export\n */\nexports.prototype.getType = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n  let type;\n\n  if (geometry instanceof olGeomPoint) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_TEXT)) {\n      type = ngeoGeometryType.TEXT;\n    } else {\n      type = ngeoGeometryType.POINT;\n    }\n  } else if (geometry instanceof olGeomMultiPoint) {\n    type = ngeoGeometryType.MULTI_POINT;\n  } else if (geometry instanceof olGeomPolygon) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n      type = ngeoGeometryType.CIRCLE;\n    } else if (feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE)) {\n      type = ngeoGeometryType.RECTANGLE;\n    } else {\n      type = ngeoGeometryType.POLYGON;\n    }\n  } else if (geometry instanceof olGeomMultiPolygon) {\n    type = ngeoGeometryType.MULTI_POLYGON;\n  } else if (geometry instanceof olGeomLineString) {\n    type = ngeoGeometryType.LINE_STRING;\n  } else if (geometry instanceof olGeomMultiLineString) {\n    type = ngeoGeometryType.MULTI_LINE_STRING;\n  }\n\n  googAsserts.assert(type, 'Type should be thruthy');\n\n  return type;\n};\n\n\n/**\n * This method first checks if a feature's extent intersects with the map view\n * extent. If it doesn't, then the view gets recentered with an animation to\n * the center of the feature.\n * @param {!ol.Feature} feature Feature.\n * @param {!ol.Map} map Map.\n * @param {number=} opt_panDuration Pan animation duration. Defaults to `250`.\n * @export\n */\nexports.prototype.panMapToFeature = function(feature, map,\n  opt_panDuration) {\n\n  const panDuration = opt_panDuration !== undefined ? opt_panDuration : 250;\n  const size = map.getSize();\n  googAsserts.assertArray(size);\n  const view = map.getView();\n  const extent = view.calculateExtent(size);\n  const geometry = feature.getGeometry();\n\n  if (!geometry.intersectsExtent(extent)) {\n    const mapCenter = view.getCenter();\n    googAsserts.assertArray(mapCenter);\n\n    let featureCenter;\n    if (geometry instanceof olGeomLineString) {\n      featureCenter = geometry.getCoordinateAt(0.5);\n    } else if (geometry instanceof olGeomPolygon) {\n      featureCenter = geometry.getInteriorPoint().getCoordinates();\n    } else if (geometry instanceof olGeomPoint) {\n      featureCenter = geometry.getCoordinates();\n    } else {\n      featureCenter = olExtent.getCenter(geometry.getExtent());\n    }\n\n    view.animate({\n      center: mapCenter,\n      duration: panDuration\n    }, {\n      center: featureCenter,\n      duration: panDuration\n    });\n  }\n};\n\n\n/**\n * This method generates a line string geometry that represents the radius for\n * a given azimut. It expects the input geometry to be a circle.\n * @param {!ol.Feature} feature Feature.\n * @param {number} azimut Azimut in degrees.\n * @return {!ol.geom.LineString} The line geometry.\n */\nexports.prototype.getRadiusLine = function(feature, azimut) {\n  const geometry = feature.getGeometry();\n  // Determine the radius for the circle\n  const extent = geometry.getExtent();\n  const radius = (extent[3] - extent[1]) / 2;\n\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const x = Math.cos((azimut - 90) * Math.PI / 180) * radius;\n  const y = -Math.sin((azimut - 90) * Math.PI / 180) * radius;\n  const endPoint = [x + center[0], y + center[1]];\n  return new olGeomLineString([center, endPoint]);\n};\n\n\n/**\n * Return the properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Object.\n * @export\n */\nexports.prototype.getNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const nonSpatialProperties = {};\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      nonSpatialProperties[key] = properties[key];\n    }\n  }\n  return nonSpatialProperties;\n};\n\n\n/**\n * Clear all properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @export\n */\nexports.prototype.clearNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      feature.set(key, undefined);\n    }\n  }\n};\n\n\n// === FORMAT TYPES ===\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.FormatType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GPX: 'GPX',\n  /**\n   * @type {string}\n   * @export\n   */\n  KML: 'KML'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureHelper', [\n  ngeoDownloadService.name,\n  ngeoMiscFilters.name,\n]);\nexports.module.service('ngeoFeatureHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.ToolActivate\n */\n/**\n * A simple object that can be managed by `ngeo.misc.ToolActivateMgr`.\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {Object} toolContext An object which acts as the context for the tool.\n * @param {string} activePropertyName The name of a boolean property on\n *      `toolContext` which represents the active state of the tool.\n * @constructor\n * @struct\n * @ngname ngeoToolActivate\n * @export\n */\nconst exports = function(toolContext, activePropertyName) {\n\n  /**\n   * A getter function to get the active state of the tool.\n   * @return {boolean} Is active.\n   * @export\n   */\n  this.getActive = function() {\n    return toolContext[activePropertyName];\n  };\n\n  /**\n   * A setter function to set the active state of the tool.\n   * @param {boolean} newVal New active state.\n   * @export\n   */\n  this.setActive = function(newVal) {\n    toolContext[activePropertyName] = newVal;\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport * as olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.CustomEvent\n */\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle, {toFunction as toStyleFunction, createDefaultStyle as olStyleDefaultFunction} from 'ol/style/Style.js';\n\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleDefaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : toStyleFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Geometry\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A rule bound to the geometry of a `ol.Feature` object. Changes made\n   * to the geometry are applied to the `expression` property of the rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.GeometryOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = ngeoFormatAttributeType.GEOMETRY;\n\n    super(options);\n\n    // === STATIC properties ===\n\n    const properties = options.featureProperties || {};\n\n    /**\n     * @type {!ol.Feature}\n     * @private\n     */\n    this.feature_ = new olFeature(properties);\n\n    /**\n     * @type {!ol.format.GeoJSON}\n     * @private\n     */\n    this.format_ = new olFormatGeoJSON();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingExpression_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingGeometry_ = false;\n\n    /**\n     * @type {?ol.EventsKey}\n     * @private\n     */\n    this.geometryChangeListenerKey_ = null;\n\n    this.listenerKeys.push(\n      olEvents.listen(\n        this.feature_,\n        `change:${this.feature.getGeometryName()}`,\n        this.handleFeatureGeometryChange_,\n        this\n      )\n    );\n\n    this.setGeometryFromExpression_();\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {!ol.Feature} Feature.\n   * @export\n   */\n  get feature() {\n    return this.feature_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setExpression(expression) {\n    this.updatingExpression_ = true;\n    super.setExpression(expression);\n\n    if (!this.updatingGeometry_) {\n      this.setGeometryFromExpression_();\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingExpression_ = false;\n  }\n\n  // === Calculated property getters/setters ===\n\n  /**\n   * @return {?ol.geom.Geometry} Geometry\n   * @export\n   */\n  get geometry() {\n    return this.feature_.getGeometry() || null;\n  }\n\n  /**\n   * @param {?ol.geom.Geometry} geometry Geometry\n   * @export\n   */\n  set geometry(geometry) {\n    this.feature_.setGeometry(geometry);\n  }\n\n  // === Other methods ===\n\n  /**\n   * Called when the geometry property in the feature changes. Update the\n   * expression accordingly.\n   * @private\n   */\n  handleFeatureGeometryChange_() {\n    if (this.updatingExpression_) {\n      return;\n    }\n\n    this.updatingGeometry_ = true;\n\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.expression = this.format_.writeGeometry(geometry);\n    } else {\n      this.expression = null;\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Called when the geometry of the features changes. Update the expression\n   * accordingly.\n   * @param {ol.Object.Event} evt Event\n   * @private\n   */\n  handleGeometryChange_(evt) {\n    const geometry = googAsserts.assertInstanceof(\n      evt.target, olGeomGeometry\n    );\n    this.updatingGeometry_ = true;\n    this.expression = this.format_.writeGeometry(geometry);\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Set geometry property using the expression property.\n   * @private\n   */\n  setGeometryFromExpression_() {\n    let geometry = null;\n    if (this.expression) {\n      // An expression can only have a string value with a geometry rule.\n      const expression = googAsserts.assertString(this.expression);\n      geometry = this.format_.readGeometry(expression);\n    }\n    this.geometry = geometry;\n  }\n\n  /**\n   * Unlisten the feature geometry change event, then listen to it if the\n   * feature has a geometry.\n   * @private\n   */\n  registerGeometryChange_() {\n\n    // (1) Unlisten\n    if (this.geometryChangeListenerKey_ !== null) {\n      olEvents.unlistenByKey(this.geometryChangeListenerKey_);\n      this.geometryChangeListenerKey_ = null;\n    }\n\n    // (2) Listen, if geom\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.geometryChangeListenerKey_ = olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      );\n    }\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS, {optionsFromCapabilities} from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @param {number} ngeoTilesPreloadingLimit Load tiles up to preload levels. By default preload is Infinity,\n *     which means load all tiles on the top of the visible level. See also preload value\n *     in documentation for ol.Layer.Tile.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http, ngeoTilesPreloadingLimit) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * The Tiles Preloading Limit value\n   * @type {number}\n   * @private\n   */\n  this.tilesPreloadingLimit_ = ngeoTilesPreloadingLimit;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {string=} opt_matrixSet Optional WMTS matrix set.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_matrixSet, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: this.tilesPreloadingLimit_\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = optionsFromCapabilities(result, {\n        matrixSet: opt_matrixSet,\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach((l) => {\n      this.getFlatLayers_(l, array);\n    });\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some((layer) => {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  });\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Set ZIndex property to first level children elements\n * @param {ol.layer.Group|ol.layer.Base} element The group of layer with first level children layers.\n * @param {number} ZIndex The ZIndex for children element.\n */\nexports.prototype.setZIndexToFirstLevelChildren = function(element, ZIndex) {\n  if (!(element instanceof olLayerGroup)) {\n    return;\n  }\n  const innerGroupLayers = element.getLayers();\n  innerGroupLayers.forEach(innerLayer => innerLayer.setZIndex(ZIndex));\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', [])\n  .service('ngeoLayerHelper', exports)\n  .value('ngeoTilesPreloadingLimit', Infinity);\n\n\nexport default exports;\n","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach((child) => {\n    child.setStateInternal_(this.state_);\n  });\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Measure\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olDom from 'ol/dom.js';\nimport * as olProj from 'ol/proj.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olSphere from 'ol/sphere.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} options Options\n */\nconst exports = function(options = /** @type {ngeo.interaction.MeasureBaseOptions} */ ({})) {\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ? options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (polygon.clone().transform(projection, 'EPSG:4326'));\n  const area = Math.abs(olSphere.getArea(geom, {'projection': 'EPSG:4326'}));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection, precision, format) {\n  let length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = olProj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = olProj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n    length += olSphere.getDistance(c1, c2);\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  const helpMsg = this.sketchFeature === null ? this.startMsg : this.continueMsg;\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event|ngeox.DrawEvent} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature || evt.detail.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event|ngeox.DrawEvent} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  this.unlistenerEvent_();\n};\n\n/**\n * Handle unlistener events for 'end of drawing' interaction\n * @private\n */\nexports.prototype.unlistenerEvent_ = function() {\n  if (this.changeEventKey_ !== null && this.postcomposeEventKey_ !== null) {\n    olEvents.unlistenByKey(this.changeEventKey_);\n    olEvents.unlistenByKey(this.postcomposeEventKey_);\n    this.changeEventKey_ = null;\n    this.postcomposeEventKey_ = null;\n  }\n};\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n    this.unlistenerEvent_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.filters\n */\nimport * as olMath from 'ol/math.js';\nimport * as olString from 'ol/string.js';\nconst exports = angular.module('ngeoAngularFilters', []);\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nexports.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nexports.filter('ngeoScalify', exports.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nexports.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nexports.filter('ngeoNumber', exports.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nexports.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nexports.filter('ngeoUnitPrefix', exports.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nexports.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nexports.filter('ngeoNumberCoordinates', exports.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nexports.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nexports.filter('ngeoDMSCoordinates', exports.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * If you use it, you don't require the \"ngSanitize\".\n * @return {function(?):string} The filter function.\n * @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nexports.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nexports.filter('ngeoTrustHtml', exports.trustHtmlFilter);\n\n\n/**\n * A filter used to format a time duration in seconds into a more\n * readable form.\n * Only the two largest units will be shown.\n *\n * Examples:\n *      {{42 | ngeoDuration}} => 42 seconds\n *      {{132 | ngeoDuration}} => 2 minutes 12 seconds\n *      {{3910 | ngeoDuration}} => 1 hour 5 minutes\n *        -> Note: the remaining 10 seconds will be dropped\n *\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @return {ngeox.duration} Function used to format a time duration in seconds into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDuration\n */\nexports.Duration = function(gettextCatalog) {\n  // time unit enum\n  const TimeUnits = Object.freeze({\n    SECONDS: Symbol('seconds'),\n    MINUTES: Symbol('minutes'),\n    HOURS: Symbol('hours'),\n    DAYS: Symbol('days')\n  });\n\n  /**\n   * @param {number} amount Amount of time.\n   * @param {symbol} unit Unit of time.\n   * @return {string} formatted and translated string\n   */\n  const pluralize = function(amount, unit) {\n    let formattedUnit = '';\n    switch (unit) {\n      case TimeUnits.SECONDS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'second', 'seconds');\n        break;\n      case TimeUnits.MINUTES:\n        formattedUnit = gettextCatalog.getPlural(amount, 'minute', 'minutes');\n        break;\n      case TimeUnits.HOURS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'hour', 'hours');\n        break;\n      case TimeUnits.DAYS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'day', 'days');\n        break;\n      default:\n        break;\n    }\n    return `${amount} ${formattedUnit}`;\n  };\n\n  /**\n   * @param {number} duration The duration in seconds.\n   * @return {string} The formatted string.\n   */\n  const result = function(duration) {\n    // round to next integer\n    duration = Math.round(duration);\n\n    // just seconds\n    let output;\n    if (duration < 60) {\n      return pluralize(duration, TimeUnits.SECONDS);\n    }\n\n    // minutes (+ seconds)\n    let remainder = duration % 60; // seconds\n    duration = Math.floor(duration / 60); // minutes\n    if (duration < 60) { // less than an hour\n      output = pluralize(duration, TimeUnits.MINUTES);\n      if (remainder > 0) {\n        output += ` ${pluralize(remainder, TimeUnits.SECONDS)}`;\n      }\n      return output;\n    }\n\n    // hours (+ minutes)\n    remainder = duration % 60; // minutes\n    duration = Math.floor(duration / 60); // hours\n    if (duration < 24) { // less than a day\n      output = pluralize(duration, TimeUnits.HOURS);\n      if (remainder > 0) {\n        output += ` ${pluralize(remainder, TimeUnits.MINUTES)}`;\n      }\n      return output;\n    }\n\n    // days (+ hours)\n    remainder = duration % 24; // hours\n    duration = Math.floor(duration / 24); // days\n    output = pluralize(duration, TimeUnits.DAYS);\n    if (remainder > 0) {\n      output += ` ${pluralize(remainder, TimeUnits.HOURS)}`;\n    }\n    return output;\n  };\n\n  return result;\n};\n\nexports.filter('ngeoDuration', exports.Duration);\n\n\nexport default exports;\n","/**\n * @module ngeo.query.MapQuerent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport * as olObj from 'ol/obj.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Map Querent is the service bound to a map that issues\n   * queries using the Querent service. The result is stored inside this\n   * service.\n   *\n   * @struct\n   * @param {angular.$injector} $injector Main injector.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     sources helper service.\n   * @param {ngeo.query.Querent} ngeoQuerent The ngeo querent service.\n   * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($injector, ngeoDataSources, ngeoDataSourcesHelper, ngeoQuerent,\n    ngeoQueryResult) {\n\n    const options = /** @type {ngeox.QueryOptions} */ (\n      $injector.has('ngeoQueryOptions') ?\n        $injector.get('ngeoQueryOptions') : {});\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n    /**\n     * @type {ngeox.QueryResult}\n     * @private\n     */\n    this.result_ = ngeoQueryResult;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.limit_ = options.limit !== undefined ? options.limit : 50;\n\n    /**\n     * When set, before making WFS GetFeature requests to fetch features,\n     * WFS GetFeature requests with `resultType = 'hits'` are made first. If\n     * the number of records for the request would exceed the limit, then\n     * no features are returned.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.queryCountFirst_ = options.queryCountFirst !== undefined ?\n      options.queryCountFirst : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.tolerancePx_ = options.tolerance !== undefined ?\n      options.tolerance : 3;\n\n    /**\n     * A hash of data source names classified by ids.\n     * @type {Object.<number, string>}\n     * @private\n     */\n    this.dataSourceNames_ = {};\n  }\n\n  /**\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @export\n   */\n  issue(options) {\n    // (1) Clear previous result\n    this.clear();\n\n    // (2) Get queryable data sources, unless they are already set\n    let queryableDataSources;\n    if (options.dataSources === undefined &&\n        options.queryableDataSources === undefined\n    ) {\n      queryableDataSources = this.ngeoQuerent_.getQueryableDataSources(\n        this.dataSources_.getArray(),\n        options.map\n      );\n    }\n\n    // (3) Update query options, update the pending property and issue the\n    //     request.\n    const limit = options.limit !== undefined ? options.limit : this.limit_;\n    olObj.assign(options, {\n      queryableDataSources: queryableDataSources,\n      limit: limit,\n      tolerancePx: this.tolerancePx_,\n      wfsCount: this.queryCountFirst_\n    });\n    this.result_.pending = true;\n    this.ngeoQuerent_.issue(options).then(this.handleResult_.bind(this));\n  }\n\n  /**\n   * Clear result, i.e. clear all 'result source' from their features and other\n   * information.\n   * @export\n   */\n  clear() {\n    this.result_.total = 0;\n    for (const source of this.result_.sources) {\n      source.features.length = 0;\n      source.pending = false;\n      source.queried = false;\n      source.tooManyResults = false;\n      source.totalFeatureCount = undefined;\n    }\n    this.result_.sources.length = 0; // Clear previous result sources\n    this.result_.pending = false;\n  }\n\n  /**\n   * Called after a request to the querent service. Update the result.\n   *\n   * @param {ngeox.QuerentResult} response Response\n   * @private\n   */\n  handleResult_(response) {\n    let total = 0;\n\n    // (1) Update result sources, i.e. add them\n    for (const idStr in response) {\n      const id = Number(idStr);\n      const dataSource = this.ngeoDataSourcesHelper_.getDataSource(id);\n      let label = dataSource.name;\n      googAsserts.assert(dataSource);\n\n      const querentResultItem = response[id];\n      const features = querentResultItem.features;\n      const limit = querentResultItem.limit;\n      const tooManyResults = querentResultItem.tooManyFeatures === true;\n      const totalFeatureCount = querentResultItem.totalFeatureCount;\n\n      const typeSeparatedFeatures = {};\n      features.forEach((feature) => {\n        const type = googAsserts.assertString(feature.get('ngeo_feature_type_'));\n        if (!typeSeparatedFeatures[type]) {\n          typeSeparatedFeatures[type] = [];\n        }\n        // Use properties aliases if any\n        if (dataSource.attributes && dataSource.attributes.length) {\n          const properties = feature.getProperties();\n          const filteredProperties = {};\n          dataSource.attributes.forEach((attribute) => {\n            if (attribute.alias) {\n              filteredProperties[attribute.alias] = properties[attribute.name];\n              feature.unset(attribute.name, /* silent */ true);\n            } else {\n              // No alias is available => use the attribute as is.\n              filteredProperties[attribute.name] = properties[attribute.name];\n            }\n          });\n          feature.setProperties(filteredProperties, /* silent */ true);\n        }\n        typeSeparatedFeatures[type].push(feature);\n      });\n\n      for (const type in typeSeparatedFeatures) {\n        label = type ? type : label;\n        const featuresByType = typeSeparatedFeatures[type];\n        this.result_.sources.push({\n          features: featuresByType,\n          id: id,\n          label: label,\n          limit: limit,\n          pending: false,\n          queried: true,\n          tooManyResults: tooManyResults,\n          totalFeatureCount: totalFeatureCount\n        });\n        total += features.length;\n      }\n    }\n\n    // (2) Update total & pending\n    this.result_.total = total;\n    this.result_.pending = false;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoMapQuerent', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoDatasourceHelper.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoMapQuerent', exports);\n\n\n/**\n * The `ngeoQueryResult` is the value service where the features of the query\n * result are added.\n */\nexports.module.value('ngeoQueryResult', /** @type {ngeox.QueryResult} */ ({\n  sources: [],\n  total: 0,\n  pending: false\n}));\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is available through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach((grp) => {\n      this.root.children.unshift(grp);\n    });\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach((childNode) => {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  });\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object information.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.WMSTime\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * ngeo - WMS time service\n * @extends {ngeo.misc.Time}\n * @param {angular.$filter} $filter angular filter service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoWMSTime\n */\nconst exports = function($filter, gettextCatalog) {\n\n  /**\n   * @private\n   * @type {angular.$filter}\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  ngeoMiscTime.call(this);\n};\n\nolBase.inherits(exports, ngeoMiscTime);\n\n\n/**\n * Format time regarding a resolution\n * @param  {number} time (in ms format) timestamp to format\n * @param  {(ngeox.TimePropertyResolutionEnum|undefined)} resolution resolution to use\n * @param  {boolean=} opt_useISOFormat True to a ISO-8601 date string that can be used\n *     as a WMS-T Parameter. Otherwise, use a localized date format.\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} Date string regarding the resolution.\n */\nexports.prototype.formatTimeValue = function(time, resolution, opt_useISOFormat, opt_toUTC) {\n  const date = new Date(time);\n  const utc = opt_toUTC ? 'UTC' : undefined;\n\n  // ISO-8601 format to use date as a WMS-T Parameter.\n  let yearResolution = 'yyyy';\n  let monthResolution = 'yyyy-MM';\n  let dayResolution = 'yyyy-MM-dd';\n\n  // Localized format.\n  if (!opt_useISOFormat) {\n    const gettextCatalog = this.gettextCatalog_;\n    yearResolution = gettextCatalog.getString('yyyy');\n    monthResolution = gettextCatalog.getString('M/yyyy');\n    dayResolution = gettextCatalog.getString('M/d/yyyy');\n  }\n\n  switch (resolution) {\n    case 'year':\n      return this.$filter_('date')(date, yearResolution, utc);\n    case 'month':\n      return this.$filter_('date')(date, monthResolution, utc);\n    case 'day':\n      return this.$filter_('date')(date, dayResolution, utc);\n    default:\n      //case \"second\":\n      return date.toISOString().replace(/\\.\\d{3}/, '');\n  }\n};\n\n\n/**\n * Format time to be used as a WMS Time query parameter\n * @param  {ngeox.TimeProperty} wmsTimeProperty a wmstime property from a node\n * @param  {{start : number, end : (number|undefined)}} times start & end time selected (in ms format)\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} ISO-8601 date string ready to be used as a query parameter for a\n * WMS request\n * @export\n */\nexports.prototype.formatWMSTimeParam = function(wmsTimeProperty, times, opt_toUTC) {\n  googAsserts.assert(wmsTimeProperty.resolution !== undefined);\n  if (wmsTimeProperty.mode === 'range') {\n    googAsserts.assert(times.end !== undefined);\n    return (\n      `${this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC)}/${\n        this.formatTimeValue(times.end, wmsTimeProperty.resolution, true, opt_toUTC)}`\n    );\n  } else {\n    return this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC);\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoWMSTime', [\n  ngeoMiscTime.module.name,\n]);\nexports.module.service('ngeoWMSTime', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.debounce\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.EventHelper\n */\nimport * as olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.SyncLayertreeMap\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * Service to create layer based on a ngeo.layertree.Controller with a\n * GMFThemesGroup or a GMFThemesLeaf as node object.\n * This layer is also used to synchronise a state of ngeo.layertree.Controller\n * and its corresponding layer in the map.\n *\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSyncLayertreeMap\n */\nconst exports = function($rootScope, ngeoLayerHelper, ngeoWMSTime,\n  gmfThemes) {\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {gmfThemes.GmfOgcServers}\n   * @private\n   */\n  this.ogcServersObject_;\n\n  gmfThemes.getOgcServersObject().then((ogcServersObject) => {\n    this.ogcServersObject_ = ogcServersObject;\n  });\n\n  $rootScope.$on('ngeo-layertree-state', (map, treeCtrl, firstParent) => {\n    this.sync_(/** @type ol.Map */ (map), firstParent);\n  });\n};\n\n\n/**\n * Create, insert (or update) and return a layer from the GmfGroup or the\n * GmfLayer of the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Base|ol.layer.Group} a new layer.\n * @public\n */\nexports.prototype.createLayer = function(treeCtrl, map, dataLayerGroup, opt_position) {\n  /**\n   * @type {ol.layer.Base|ol.layer.Group}\n   */\n  let layer = null;\n  if (treeCtrl.node.children !== undefined && treeCtrl.node.mixed) {\n    // Mixed groups\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  } else if (treeCtrl.node.children === undefined && treeCtrl.parent.node.mixed) {\n    // Layers in a mixed group\n    layer = this.createLeafInAMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.node.children === undefined) {\n    // Layers in a non mixed group\n    this.initGmfLayerInANotMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.depth === 1 && !treeCtrl.node.mixed) {\n    // First level group non mix\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  }\n\n  if (layer && treeCtrl.node.metadata.opacity) {\n    layer.setOpacity(treeCtrl.node.metadata.opacity);\n  }\n\n  return layer;\n};\n\n\n/**\n * Synchronise the state of each layers corresponding to the given tree and\n * all its children.\n * @param {ol.Map} map A map that contains the layers.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.sync_ = function(map, treeCtrl) {\n  treeCtrl.traverseDepthFirst((treeCtrl) => {\n    if (treeCtrl.layer && !treeCtrl.node.mixed) {\n      this.updateLayerState_(/** @type ol.layer.Image|ol.layer.Tile */ (treeCtrl.layer), treeCtrl);\n    }\n  });\n};\n\n\n/**\n * Set the active state of a layer based on its treeCtrl state.\n * @param {ol.layer.Tile|ol.layer.Image} layer A layer.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.updateLayerState_ = function(layer, treeCtrl) {\n  const active = treeCtrl.getState() === 'on';\n  if (treeCtrl.node.type === 'WMTS') {\n    layer.setVisible(active);\n  } else if (!treeCtrl.node.mixed && treeCtrl.depth === 1) {\n    // First level non mixed group\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    const names = [];\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.getState() === 'on') {\n        names.push(treeCtrl.node.layers);\n      }\n    });\n    if (names.length === 0) {\n      layer.setVisible(false);\n    }\n    /** @type {ol.source.ImageWMS} */ (layer.getSource()).updateParams({\n      'LAYERS': names.reverse().join(',')\n    });\n    if (names.length !== 0) {\n      layer.setVisible(true);\n    }\n  } else {\n    // WMS mixed layer\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    layer.setVisible(active);\n  }\n};\n\n\n/**\n * Create insert and return a layer group (for not mixed case) or a wmsLayer (for\n * mixed case). Take care about the insertion order in the map in case of first\n * level group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createGroup_ = function(treeCtrl, map,\n  dataLayerGroup, opt_position) {\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  let layer = null;\n  const isFirstLevelGroup = treeCtrl.parent.isRoot;\n\n  let printNativeAngle = true;\n  if (groupNode.metadata.printNativeAngle !== undefined) {\n    printNativeAngle = groupNode.metadata.printNativeAngle;\n  }\n\n  if (isFirstLevelGroup) { // First level group\n    layer = this.createLayerFromGroup_(treeCtrl, !!groupNode.mixed);\n    // Insert the layer at the right place\n    const position = opt_position | 0;\n    dataLayerGroup.getLayers().insertAt(position, layer);\n\n  } else { // Other Groups, create a group layer only in mixed groups\n    const inAMixedGroup = !this.isOneParentNotMixed_(treeCtrl);\n    if (inAMixedGroup) {\n      layer = this.createLayerFromGroup_(treeCtrl, true);\n      const layerGroup = /** @type {ol.layer.Group} */ (\n        exports.getLayer(treeCtrl.parent));\n      layerGroup.getLayers().insertAt(0, layer);\n    }\n  }\n\n  layer.set('printNativeAngle', printNativeAngle);\n  return layer;\n};\n\n\n/**\n * Create, insert and return a layer group (for not mixed case) or a wmsLayer\n * for mixed case).\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {boolean} mixed True for a group layer, false for a WMS layer.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createLayerFromGroup_ = function(treeCtrl,\n  mixed) {\n  let layer;\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  if (mixed) { // Will be one ol.layer per each node.\n    layer = this.layerHelper_.createBasicGroup();\n  } else { // Will be one ol.layer for multiple WMS nodes.\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[groupNode.ogcServer || ''];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      '',\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n    let hasActiveChildren = false;\n    treeCtrl.traverseDepthFirst((ctrl) => {\n      // Update layer information and tree state.\n      this.updateLayerReferences_(/** @type gmfThemes.GmfLayer */ (ctrl.node), layer);\n      if (ctrl.node.metadata.isChecked) {\n        ctrl.setState('on', false);\n        this.updateLayerState_(/** @type {ol.layer.Image} */ (layer), ctrl);\n        hasActiveChildren = true;\n      }\n    });\n    layer.setVisible(hasActiveChildren);\n    layer.set('layerNodeName', groupNode.name); //Really useful ?\n  }\n  return layer;\n};\n\n\n/**\n * Create and insert a layer from a leaf in a mixed group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the layer.\n * @return {ol.layer.Tile|ol.layer.Image} a new layer.\n * @private\n */\nexports.prototype.createLeafInAMixedGroup_ = function(treeCtrl, map) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  let layer;\n  // Make layer.\n  if (gmfLayer.type === 'WMTS') {\n    layer = this.createWMTSLayer_(/** @type gmfThemes.GmfLayerWMTS */ (gmfLayer));\n  } else {\n    const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[/** @type string */ (gmfLayerWMS.ogcServer)];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(gmfLayerWMS.layers);\n    googAsserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      gmfLayerWMS.layers,\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n  }\n  // Update layer information and tree state.\n  layer.set('layerNodeName', gmfLayer.name); // Really useful ?\n  this.updateLayerReferences_(gmfLayer, layer);\n  const checked = gmfLayer.metadata.isChecked === true;\n  if (checked) {\n    treeCtrl.setState('on', false);\n  }\n  layer.setVisible(checked);\n  // Insert layer in the map.\n  const layerGroup = /** @type {ol.layer.Group} */ (\n    exports.getLayer(treeCtrl.parent));\n  layerGroup.getLayers().insertAt(0, layer);\n  return layer;\n};\n\n\n/**\n * Update a WMS layer with the given treeCtrl node information. Assumes that\n * the first parent with ogcServer information is linked to the layer to update\n * and that this treeCtrl node is a leafNode.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the layer to update.\n * @private\n */\nexports.prototype.initGmfLayerInANotMixedGroup_ = function(treeCtrl, map) {\n  const leafNode = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const firstLevelGroup = this.getFirstLevelGroupCtrl_(treeCtrl);\n  googAsserts.assert(firstLevelGroup);\n  const layer = /** @type {ol.layer.Image} */ (firstLevelGroup.layer);\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  // Update layer information and tree state.\n  this.updateLayerReferences_(leafNode, layer);\n  if (leafNode.metadata.isChecked) {\n    treeCtrl.setState('on', false);\n    this.updateLayerState_(layer, firstLevelGroup);\n  } else {\n    treeCtrl.parent.refreshState();\n  }\n};\n\n\n/**\n * Create and return a Tile layer.\n * @param {gmfThemes.GmfLayerWMTS} gmfLayerWMTS A leaf node.\n * @return {ol.layer.Tile} a Tile WMTS layer. (Source and capabilities can come\n *     later).\n * @private\n */\nexports.prototype.createWMTSLayer_ = function(gmfLayerWMTS) {\n  const newLayer = new olLayerTile();\n  googAsserts.assert(gmfLayerWMTS.url);\n  googAsserts.assert(gmfLayerWMTS.layer);\n  this.layerHelper_.createWMTSLayerFromCapabilitites(gmfLayerWMTS.url,\n    gmfLayerWMTS.layer, gmfLayerWMTS.matrixSet, gmfLayerWMTS.dimensions).then((layer) => {\n    newLayer.setSource(layer.getSource());\n    newLayer.set('capabilitiesStyles', layer.get('capabilitiesStyles'));\n  });\n  return newLayer;\n};\n\n\n/**\n * Update properties of a layer with the node of a given leafNode.\n * @param {gmfThemes.GmfLayer} leafNode a leaf node.\n * @param {ol.layer.Base} layer A layer.\n * @private\n */\nexports.prototype.updateLayerReferences_ = function(leafNode, layer) {\n  const id = olBase.getUid(leafNode);\n  const querySourceIds = layer.get('querySourceIds') || [];\n  querySourceIds.push(id);\n  layer.set('querySourceIds', querySourceIds);\n\n  const disclaimer = leafNode.metadata.disclaimer;\n  if (disclaimer) {\n    const disclaimers = layer.get('disclaimers') || [];\n    disclaimers.push(leafNode.metadata.disclaimer);\n    layer.set('disclaimers', disclaimers);\n  }\n};\n\n\n/**\n * Get the time parameter for a WMS Layer. If it's a group and it doesn't have\n * time, get the first time parameter available in any child.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {string|undefined} A wms time param.\n * @private\n */\nexports.prototype.getTimeParam_ = function(treeCtrl) {\n  let wmsTime;\n  let timeParam;\n  const node = treeCtrl.node;\n  if (node.time) {\n    wmsTime = node.time;\n  } else if (node.children) {\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.node.time) {\n        wmsTime = treeCtrl.node.time;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  if (wmsTime) {\n    const timeValues = this.ngeoWMSTime_.getOptions(wmsTime)['values'];\n    timeParam = this.ngeoWMSTime_.formatWMSTimeParam(wmsTime, {\n      start: timeValues[0] || timeValues,\n      end: timeValues[1]\n    });\n  }\n  return timeParam;\n};\n\n\n/**\n * Return true if a parent tree is mixed, based on its node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {boolean} True is any parent is mixed. False Otherwise.\n * @private\n */\nexports.prototype.isOneParentNotMixed_ = function(treeCtrl) {\n  let tree = treeCtrl.parent;\n  let isOneParentNotMix = false;\n  do {\n    isOneParentNotMix = tree.node.mixed === false;\n    tree = tree.parent;\n  }\n  while (tree.parent && !isOneParentNotMix);\n  return isOneParentNotMix;\n};\n\n\n/**\n * Return the first parent, from the root parent, that is not mixed.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} The first not mixed parent.\n * @private\n */\nexports.prototype.getFirstLevelGroupCtrl_ = function(\n  treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * Return the layer used by the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ol.layer.Base} The layer.\n * @public\n */\nexports.getLayer = function(treeCtrl) {\n  let tree = treeCtrl;\n  let layer = null;\n  while (!tree.isRoot && layer === null) {\n    if (tree.layer) {\n      layer = tree.layer;\n    }\n    tree = tree.parent;\n  }\n  return layer;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSyncLayertreeMap', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfSyncLayertreeMap', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Date\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A date rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.DateOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = options.type || ngeoFormatAttributeType.DATE;\n\n    super(options);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Text\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A text rule, which always compares the value with the LIKE operator, by\n   * default.\n   *\n   * @struct\n   * @param {!ngeox.rule.TextOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = options.operator || ngeoRuleRule.OperatorType.LIKE;\n    options.type = ngeoFormatAttributeType.TEXT;\n\n    super(options);\n\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.RuleHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport ngeoRuleDate from 'ngeo/rule/Date.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport ngeoRuleText from 'ngeo/rule/Text.js';\nimport {writeFilter} from 'ol/format/WFS.js';\nimport * as olFormatFilter from 'ol/format/filter.js';\nimport * as olArray from 'ol/array.js';\n\nimport moment from 'moment';\n\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to create `ngeo.rule.Rule`\n   * objects.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoRuleHelper\n   * @ngInject\n   */\n  constructor(gettextCatalog, ngeoFeatureHelper, ngeoWMSTime) {\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.Attribute>} attributes Attributes.\n   * @param {boolean=} opt_isCustom Whether the created rules should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRulesFromAttributes(attributes, opt_isCustom) {\n    const rules = [];\n    for (const attribute of attributes) {\n      rules.push(this.createRuleFromAttribute(attribute, opt_isCustom));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.Attribute} attribute Attribute.\n   * @param {boolean=} opt_isCustom Whether the created rule should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRuleFromAttribute(attribute, opt_isCustom) {\n\n    let rule;\n    const isCustom = opt_isCustom === true;\n\n    /**\n     * @type {string}\n     */\n    const name = this.gettextCatalog_.getString(attribute.name);\n\n    // Todo: support geometry\n\n    switch (attribute.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        if (isCustom) {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.EQUALS,\n            operators: [\n              ngeoRuleRule.TemporalOperatorType.EQUALS,\n              ngeoRuleRule.TemporalOperatorType.BEGINS,\n              ngeoRuleRule.TemporalOperatorType.ENDS\n            ],\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        } else {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.DURING,\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry({\n          name: name,\n          operator: ngeoRuleRule.SpatialOperatorType.WITHIN,\n          operators: [\n            ngeoRuleRule.SpatialOperatorType.CONTAINS,\n            ngeoRuleRule.SpatialOperatorType.INTERSECTS,\n            ngeoRuleRule.SpatialOperatorType.WITHIN\n          ],\n          propertyName: attribute.name,\n          type: attribute.type\n        });\n        break;\n      case ngeoFormatAttributeType.NUMBER:\n        if (isCustom) {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.EQUAL_TO,\n            operators: [\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.GREATER_THAN,\n              ngeoRuleRule.OperatorType.GREATER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.LESSER_THAN,\n              ngeoRuleRule.OperatorType.LESSER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        } else {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.BETWEEN,\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        rule = new ngeoRuleSelect({\n          choices: googAsserts.assert(attribute.choices),\n          name: name,\n          propertyName: attribute.name\n        });\n        break;\n      default:\n        if (isCustom) {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            operators: [\n              ngeoRuleRule.OperatorType.LIKE,\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name\n          });\n        } else {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            propertyName: attribute.name\n          });\n        }\n        break;\n    }\n\n    return rule;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions>} optionsList List of options\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRules(optionsList) {\n    const rules = [];\n    for (const options of optionsList) {\n      rules.push(this.createRule(options));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions} options Options\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRule(options) {\n    let rule;\n    switch (options.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        rule = new ngeoRuleDate(options);\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry(options);\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        const selectOptions = /** @type {!ngeox.rule.SelectOptions} */ (\n          options);\n        googAsserts.assert(selectOptions.choices);\n        rule = new ngeoRuleSelect(selectOptions);\n        break;\n      default:\n        rule = new ngeoRuleText(options);\n        break;\n    }\n    return rule;\n  }\n\n  /**\n   * Create a new `ngeo.rule.Rule` object using an other given rule.\n   *\n   * @param {!ngeo.rule.Rule} rule Original rule to clone.\n   * @return {!ngeo.rule.Rule} A clone rule.\n   * @export\n   */\n  cloneRule(rule) {\n\n    let clone;\n\n    let expression = rule.getExpression();\n    if (expression === null) {\n      expression = undefined;\n    }\n    const isCustom = rule.isCustom;\n    const lowerBoundary = rule.lowerBoundary !== null ? rule.lowerBoundary :\n      undefined;\n    const name = rule.name;\n    const operator = rule.operator !== null ? rule.operator : undefined;\n    const operators = rule.operators ? rule.operators.slice(0) : undefined;\n    const propertyName = rule.propertyName;\n    const type = rule.type !== null ? rule.type : undefined;\n    const upperBoundary = rule.upperBoundary !== null ? rule.upperBoundary :\n      undefined;\n\n    const options = {\n      expression,\n      isCustom,\n      lowerBoundary,\n      name,\n      operator,\n      operators,\n      propertyName,\n      type,\n      upperBoundary\n    };\n\n    if (rule instanceof ngeoRuleDate) {\n      clone = new ngeoRuleDate(options);\n    } else if (rule instanceof ngeoRuleGeometry) {\n      clone = new ngeoRuleGeometry(options);\n      clone.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(rule.feature)\n      );\n    } else if (rule instanceof ngeoRuleSelect) {\n      options.choices = rule.choices.slice(0);\n      clone = new ngeoRuleSelect(options);\n    } else if (rule instanceof ngeoRuleText) {\n      clone = new ngeoRuleText(options);\n    } else {\n      clone = new ngeoRuleRule(options);\n    }\n\n    return clone;\n  }\n\n  /**\n   * Extend the dynamic properties from a source rule to destination rule.\n   * The source rule remains unchanged, while the destination rule changes.\n   *\n   * @param {!ngeo.rule.Rule} sourceRule Source rule to collect the dynamic\n   *     properties from.\n   * @param {!ngeo.rule.Rule} destRule Destination rule where the dynamic\n   *     properties are set.\n   * @export\n   */\n  extendRule(sourceRule, destRule) {\n\n    if (destRule.getExpression() !== sourceRule.getExpression()) {\n      destRule.setExpression(sourceRule.getExpression());\n    }\n\n    if (destRule.lowerBoundary !== sourceRule.lowerBoundary) {\n      destRule.lowerBoundary = sourceRule.lowerBoundary;\n    }\n\n    if (destRule.operator !== sourceRule.operator) {\n      destRule.operator = sourceRule.operator;\n    }\n\n    if (destRule.upperBoundary !== sourceRule.upperBoundary) {\n      destRule.upperBoundary = sourceRule.upperBoundary;\n    }\n\n    if (sourceRule instanceof ngeoRuleGeometry &&\n       destRule instanceof ngeoRuleGeometry\n    ) {\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(destRule.feature);\n      destRule.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(sourceRule.feature)\n      );\n    }\n  }\n\n  /**\n   * @param {!Array.<!ngeo.rule.Rule>} rules Rules\n   * @return {!Array.<!ngeox.rule.AnyOptions>} List of serialized rule options.\n   * @export\n   */\n  serializeRules(rules) {\n    return rules.map((rule) => {\n      const serializedRule = this.serializeRule(rule);\n      return serializedRule;\n    });\n  }\n\n  /**\n   * Selialize a rule into options to re-create it later.\n   * @param {!ngeo.rule.Rule} rule Rule to serialize.\n   * @return {!ngeox.rule.AnyOptions} Serialized rule options.\n   * @export\n   */\n  serializeRule(rule) {\n    const obj = {\n      name: rule.name,\n      propertyName: rule.propertyName,\n      type: rule.type\n    };\n\n    if (rule.expression !== null) {\n      obj.expression = rule.expression;\n    }\n\n    if (rule.lowerBoundary !== null) {\n      obj.lowerBoundary = rule.lowerBoundary;\n    }\n\n    if (rule.operator !== null) {\n      obj.operator = rule.operator;\n    }\n\n    if (rule.operators !== null) {\n      obj.operators = rule.operators.slice(0);\n    }\n\n    if (rule.upperBoundary !== null) {\n      obj.upperBoundary = rule.upperBoundary;\n    }\n\n    if (rule instanceof ngeoRuleGeometry) {\n      obj.featureProperties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        rule.feature);\n    }\n\n    if (rule instanceof ngeoRuleSelect) {\n      obj.choices = rule.choices;\n    }\n\n    return obj;\n  }\n\n  /**\n   * Create a `ol.format.filter.Filter` object for a given data source.\n   * See the `ngeox.CreateFilterOptions` to learn more.\n   *\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?ol.format.filter.Filter} Filter.\n   * @export\n   */\n  createFilter(options) {\n\n    const dataSource = /** @type {ngeo.datasource.OGC} */ (options.dataSource);\n    let mainFilter = null;\n\n    if (options.filter) {\n      mainFilter = options.filter;\n    } else {\n      const rules = options.filterRules || dataSource.filterRules;\n      const conditions = [];\n\n      if (rules && rules.length) {\n        for (const rule of rules) {\n          const filter = this.createFilterFromRule_(\n            rule,\n            dataSource,\n            options.srsName\n          );\n          if (filter) {\n            conditions.push(filter);\n          }\n        }\n      }\n\n      const condition = dataSource.filterCondition;\n      if (conditions.length === 1) {\n        mainFilter = conditions[0];\n      } else if (conditions.length >= 2) {\n        if (condition === ngeoFilterCondition.AND) {\n          mainFilter = olFormatFilter.and.apply(null, conditions);\n        } else if (condition === ngeoFilterCondition.OR ||\n                   condition === ngeoFilterCondition.NOT\n        ) {\n          mainFilter = olFormatFilter.or.apply(null, conditions);\n        }\n      }\n      if (mainFilter && condition === ngeoFilterCondition.NOT) {\n        mainFilter = olFormatFilter.not(mainFilter);\n      }\n    }\n\n    if (options.incTime) {\n      const timeFilter = this.createTimeFilterFromDataSource_(dataSource);\n      if (timeFilter) {\n        if (mainFilter) {\n          mainFilter = olFormatFilter.and.apply(\n            null,\n            [\n              mainFilter,\n              timeFilter\n            ]\n          );\n        } else {\n          mainFilter = timeFilter;\n        }\n      }\n    }\n\n    return mainFilter;\n  }\n\n  /**\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?string} Filter string.\n   * @export\n   */\n  createFilterString(options) {\n    let filterString = null;\n    const filter = this.createFilter(options);\n    if (filter) {\n      const filterNode = writeFilter(filter);\n      const xmlSerializer = new XMLSerializer();\n      filterString = xmlSerializer.serializeToString(filterNode);\n    }\n    return filterString;\n  }\n\n  /**\n   * @param {ngeo.rule.Rule} rule Rule.\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @param {string=} opt_srsName SRS name. No srsName attribute will be\n   *     set on geometries when this is not provided.\n   * @return {?ol.format.filter.Filter} filter Filter;\n   * @private\n   */\n  createFilterFromRule_(rule, dataSource, opt_srsName) {\n\n    let filter = null;\n\n    const value = rule.value;\n    if (!value) {\n      return null;\n    }\n\n    const expression = value.expression;\n    const lowerBoundary = value.lowerBoundary;\n    const operator = value.operator;\n    const propertyName = value.propertyName;\n    const upperBoundary = value.upperBoundary;\n\n    const rot =  ngeoRuleRule.OperatorType;\n    const rsot = ngeoRuleRule.SpatialOperatorType;\n    const rtot = ngeoRuleRule.TemporalOperatorType;\n\n    const spatialTypes = [\n      rsot.CONTAINS,\n      rsot.INTERSECTS,\n      rsot.WITHIN\n    ];\n\n    const numericTypes = [\n      rot.GREATER_THAN,\n      rot.GREATER_THAN_OR_EQUAL_TO,\n      rot.LESSER_THAN,\n      rot.LESSER_THAN_OR_EQUAL_TO\n    ];\n\n    if (rule instanceof ngeoRuleDate) {\n      let beginValue;\n      let endValue;\n\n      if (operator === rtot.DURING) {\n        beginValue = moment(lowerBoundary).format('YYYY-MM-DD');\n        endValue = moment(upperBoundary).format('YYYY-MM-DD');\n      } else if (operator === rtot.EQUALS) {\n        beginValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD HH:mm:ss'\n        );\n        endValue = moment(\n          expression\n        ).add(\n          1, 'days'\n        ).subtract(\n          1, 'seconds'\n        ).format(\n          'YYYY-MM-DD HH:mm:ss'\n        );\n      } else if (operator === rtot.BEGINS) {\n        beginValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD'\n        );\n        // NOTE: end value is CURRENT + 30 years\n        endValue = moment(\n          expression\n        ).add(\n          30, 'years'\n        ).format(\n          'YYYY-MM-DD'\n        );\n      } else if (operator === rtot.ENDS) {\n        // NOTE: begin value is hardcoded to 1970-01-01\n        beginValue = '1970-01-01';\n        endValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD'\n        );\n      }\n      if (beginValue && endValue) {\n        filter = olFormatFilter.during(\n          propertyName,\n          beginValue,\n          endValue\n        );\n      }\n    } else if (rule instanceof ngeoRuleSelect) {\n      const selectedChoices = rule.selectedChoices;\n      if (selectedChoices.length === 1) {\n        filter = olFormatFilter.equalTo(\n          propertyName,\n          selectedChoices[0]\n        );\n      } else if (selectedChoices.length >= 2) {\n        const conditions = [];\n        for (const selectedChoice of selectedChoices) {\n          conditions.push(\n            olFormatFilter.equalTo(\n              propertyName,\n              selectedChoice\n            )\n          );\n        }\n        filter = olFormatFilter.or.apply(null, conditions);\n      }\n    } else if (olArray.includes(spatialTypes, operator)) {\n      const geometryName = dataSource.geometryName;\n      googAsserts.assertInstanceof(rule, ngeoRuleGeometry);\n      const geometry = googAsserts.assert(rule.geometry);\n      if (operator === rsot.CONTAINS) {\n        filter = olFormatFilter.contains(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.INTERSECTS) {\n        filter = olFormatFilter.intersects(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.WITHIN) {\n        filter = olFormatFilter.within(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      }\n    } else if (olArray.includes(numericTypes, operator)) {\n      const numericExpression = googAsserts.assertNumber(expression);\n      if (operator === rot.GREATER_THAN) {\n        filter = olFormatFilter.greaterThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.GREATER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.greaterThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN) {\n        filter = olFormatFilter.lessThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.lessThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      }\n    } else if (operator === rot.BETWEEN) {\n      filter = olFormatFilter.between(\n        propertyName,\n        lowerBoundary,\n        upperBoundary\n      );\n    } else if (operator === rot.EQUAL_TO) {\n      filter = olFormatFilter.equalTo(\n        propertyName,\n        expression\n      );\n    } else if (operator === rot.LIKE) {\n      const stringExpression = String(expression)\n        .replace(/!/g, '!!')\n        .replace(/\\./g, '!.')\n        .replace(/\\*/g, '!*');\n      filter = olFormatFilter.like(\n        propertyName,\n        `*${stringExpression}*`,\n        '*', /* wildCard */\n        '.', /* singleChar */\n        '!', /* escapeChar */\n        false /* matchCase */\n      );\n    } else if (operator === rot.NOT_EQUAL_TO) {\n      filter = olFormatFilter.notEqualTo(\n        propertyName,\n        expression\n      );\n    }\n\n    return filter;\n  }\n\n  /**\n   * Create and return an OpenLayers filter object using the available\n   * time properties within the data source.\n   * @param {ngeo.datasource.OGC} dataSource Data source from which to\n   *     create the filter.\n   * @return {?ol.format.filter.Filter} Filter\n   * @private\n   */\n  createTimeFilterFromDataSource_(dataSource) {\n    let filter = null;\n    const range = dataSource.timeRangeValue;\n    const timeProperty = dataSource.timeProperty;\n    const name = dataSource.timeAttributeName;\n\n    if (range && timeProperty && name) {\n\n      if (range.end !== undefined) {\n        // Case 1: the range has both 'start' and 'end' values.  Use them to\n        //         create a During filter.\n\n        const values = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        ).split('/');\n\n        filter = olFormatFilter.during(name, values[0], values[1]);\n      } else {\n\n        // Case 2: we only have a 'start' value. We need to calculate the 'end'\n        //         using the resolution of the time property.\n\n        const resolution = timeProperty.resolution || 'seconds';\n        const value = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        );\n        let momentEnd;\n\n        switch (resolution) {\n          case 'year':\n            momentEnd = moment(value).add(1, 'years').subtract(1, 'seconds');\n            break;\n          case 'month':\n            momentEnd = moment(value).add(1, 'months').subtract(1, 'seconds');\n            break;\n          case 'day':\n            momentEnd = moment(value).add(1, 'days').subtract(1, 'seconds');\n            break;\n          default:\n            //case \"second\":\n            // This would require a TContains filter, which neither OpenLayers\n            // and MapServer support. Skip...\n        }\n\n        if (momentEnd) {\n          const startValue = moment(value).format('YYYY-MM-DD HH:mm:ss');\n          const endValue = momentEnd.format('YYYY-MM-DD HH:mm:ss');\n          filter = olFormatFilter.during(name, startValue, endValue);\n        }\n      }\n    }\n\n    return filter;\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRuleHelper', [\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoRuleHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.File\n */\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source that contains vector features that were loaded from a file.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @private\n     */\n    this.featuresCollection_ = options.features || new olCollection();\n\n    /**\n     * @type {!ol.source.Vector}\n     * @private\n     */\n    this.source_ = new olSourceVector({\n      features: this.featuresCollection_,\n      wrapX: false\n    });\n\n    /**\n     * @type {!ol.layer.Vector}\n     * @private\n     */\n    this.layer_ = new olLayerVector({\n      source: this.source_\n    });\n  }\n\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ol.Feature>} Features\n   * @export\n   */\n  get features() {\n    return this.featuresCollection_.getArray();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {!ol.Collection.<!ol.Feature>} Features collection\n   * @export\n   */\n  get featuresCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * @return {!ol.layer.Vector} Vector layer.\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {ol.Extent} Extent.\n   * @export\n   */\n  get extent() {\n    return this.source_.getExtent();\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.FileGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A FileGroup data source combines multiple `ngeo.datasource.File` objects.\n   * Its main goal is to synchronize the added data source 'visible' properties\n   * with the visibility of their layer 'visible' property.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.unregister_ = {};\n  }\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    this.unregister_[dataSource.id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this, dataSource)\n    );\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source.\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(dataSource, value, oldValue) {\n    if (value !== undefined) {\n      dataSource.layer.setVisible(value);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    this.unregister_[dataSource.id]();\n    delete this.unregister_[dataSource.id];\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper the ngeo map LayerHelper service.\n   */\n  constructor(options, ngeoLayerHelper) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.ExternalDataSourcesManager\n */\n// TODO - MaxScaleDenominator\n// TODO - MinScaleDenominator\n\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceFileGroup from 'ngeo/datasource/FileGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\n\nconst exports = class {\n\n  /**\n   * External data sources come remote online resources, such as WMS/WMTS\n   * servers, and also files such as KML/GXP. This service is responsible of\n   * creating, storing and managing them.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog service.\n   * @param {!angular.$injector} $injector Main injector.\n   * @param {!angular.$q} $q The Angular $q service.\n   * @param {!angular.Scope} $rootScope The rootScope provider.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {!ngeo.misc.File} ngeoFile Ngeo file.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo layer helper service\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfExternalDataSourcesManager\n   */\n  constructor(gettextCatalog, $injector, $q, $rootScope, ngeoDataSources,\n    ngeoFile, ngeoLayerHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angular.$injector}\n     * @private\n     */\n    this.injector_ = $injector;\n\n    /**\n     * @type {!angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * The collection of DataSources from ngeo. When this service creates\n     * a data source, its gets added to that collection.\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.misc.File}\n     * @private\n     */\n    this.ngeoFile_ = ngeoFile;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * All external data sources that are created are stored here. The key\n     * is the data source id.\n     *\n     * Note: This cache is never cleaned and elements are never removed from it.\n     * If a data source with an id already exists in this cache, it is used\n     * instead of being re-created.\n     *\n     * @type {Object.<number, !ngeo.datasource.OGC|!ngeo.datasource.File>}\n     * @private\n     */\n    this.extDataSources_ = {};\n\n    /**\n     * File external data sources, with the key being the file name.\n     * @type {Object.<string, !ngeo.datasource.File>}\n     * @private\n     */\n    this.files_ = {};\n\n    /**\n     * @type {?ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * Group that contains file data sources.\n     * @type {!ngeo.datasource.FileGroup}\n     * @private\n     */\n    this.fileGroup_ = new ngeoDatasourceFileGroup({\n      dataSources: [],\n      injector: this.injector_,\n      title: gettextCatalog.getString('Local files')\n    });\n\n    /**\n     * Collection of WMS groups.\n     * @type {!ol.Collection.<!ngeo.datasource.WMSGroup>}\n     * @private\n     */\n    this.wmsGroupsCollection_ = new olCollection();\n\n    /**\n     * Collection of groups for WMTS data sources.\n     * @type {!ol.Collection.<!ngeo.datasource.OGCGroup>}\n     * @private\n     */\n    this.wmtsGroupsCollection_ = new olCollection();\n\n    /**\n     * Cache that stores the information of a WMTS data source. The key is the\n     * data source id.\n     * @type {!Object.<number, gmfx.datasource.ExternalDataSourcesManagerWMTSCacheItem>}\n     * @private\n     */\n    this.wmtsCache_ = {};\n\n    olEvents.listen(this.dataSources_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n\n  // === File Group ===\n\n  /**\n   * @return {!ngeo.datasource.FileGroup} File group.\n   * @export\n   */\n  get fileGroup() {\n    return this.fileGroup_;\n  }\n\n\n  // === WMS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  addWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.push(wmsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  removeWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.remove(wmsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.WMSGroup} WMS group.\n   */\n  getWMSGroup(url) {\n    let found = null;\n    for (const wmsGroup of this.wmsGroups) {\n      if (wmsGroup.url === url) {\n        found = wmsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.WMSGroup>} List of WMS groups.\n   * @export\n   */\n  get wmsGroups() {\n    return this.wmsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.WMSGroup>} Collection of WMS\n   *     groups.\n   * @export\n   */\n  get wmsGroupsCollection() {\n    return this.wmsGroupsCollection_;\n  }\n\n\n  // === WMTS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  addWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.push(wmtsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  removeWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.remove(wmtsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.OGCGroup} WMTS group.\n   */\n  getWMTSGroup(url) {\n    let found = null;\n    for (const wmtsGroup of this.wmtsGroups) {\n      if (wmtsGroup.url === url) {\n        found = wmtsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.OGCGroup>} List of groups for WMTS data\n   *     sources.\n   * @export\n   */\n  get wmtsGroups() {\n    return this.wmtsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.OGCGroup>} Collection of groups\n   *     for WMTS data sources.\n   * @export\n   */\n  get wmtsGroupsCollection() {\n    return this.wmtsGroupsCollection_;\n  }\n\n\n  // === Other methods ===\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source\n   * @return {boolean} Whether the given data source is external or not. To\n   *     be considered external, it needs to be in the external data source\n   *     hash (cache).\n   */\n  isExternalDataSource(dataSource) {\n    return !!this.extDataSources_[dataSource.id];\n  }\n\n  /**\n   * @return {ol.layer.Group} Layer group where to push layers created by\n   *     this service.\n   */\n  get layerGroup() {\n    const map = this.map_;\n    googAsserts.assert(map);\n    return this.ngeoLayerHelper_.getGroupFromMap(\n      map,\n      gmfBase.EXTERNALLAYERGROUP_NAME\n    );\n  }\n\n  /**\n   * @param {?ol.Map} map Map\n   */\n  set map(map) {\n    this.map_ = map;\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  addLayer_(layer) {\n    this.layerGroup.getLayers().push(layer);\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  removeLayer_(layer) {\n    this.layerGroup.getLayers().remove(layer);\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object.\n   * @param {!Object} capabilities  WMS Capabilities definition\n   * @param {string} url The WMS service url.\n   * @export\n   */\n  createAndAddDataSourceFromWMSCapability(layer, capabilities, url) {\n\n    const id = exports.getId(layer);\n    const service = capabilities['Service'];\n\n    let dataSource;\n\n    // (1) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n      const req = capabilities['Capability']['Request'];\n\n      // ogcImageType\n      const formats = req['GetMap']['Format'];\n      const imagePngType = 'image/png';\n      const ogcImageType = formats.includes(imagePngType) ?\n        imagePngType : formats[0];\n\n      // wmsInfoFormat\n      const infoFormats = req['GetFeatureInfo']['Format'];\n      const wmsInfoFormat = infoFormats.includes(\n        ngeoDatasourceOGC.WMSInfoFormat.GML\n      ) ? ngeoDatasourceOGC.WMSInfoFormat.GML : undefined;\n\n      // queryable\n      const queryable = layer['queryable'] === true &&\n          wmsInfoFormat !== undefined;\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: layer['Title'],\n        ogcImageType: ogcImageType,\n        ogcLayers: [{\n          name: layer['Name'],\n          queryable: queryable\n        }],\n        ogcType: ngeoDatasourceOGC.Type.WMS,\n        visible: true,\n        wmsInfoFormat: wmsInfoFormat,\n        wmsUrl: url\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n\n    // (2) Add data source in WMS group, unless it's already in there.\n    //     Will also add the data source to the `ngeo.DataSources` collection.\n    //     If the group is created, its inner OL layer is also added to the map.\n    let wmsGroup = this.getWMSGroup(url);\n    if (wmsGroup) {\n      if (!wmsGroup.dataSources.includes(dataSource)) {\n        wmsGroup.addDataSource(dataSource);\n        this.dataSources_.push(dataSource);\n      }\n    } else {\n      wmsGroup = new ngeoDatasourceWMSGroup({\n        dataSources: [dataSource],\n        injector: this.injector_,\n        title: service['Title'],\n        url: url\n      }, this.ngeoLayerHelper_);\n      this.addLayer_(wmsGroup.layer);\n      this.addWMSGroup_(wmsGroup);\n      this.dataSources_.push(dataSource);\n    }\n  }\n\n  /**\n   * @param {!Object} layer WTMS Capability Layer object.\n   * @param {!Object} capabilities  WMTS Capabilities definition\n   * @param {string} wmtsUrl The WMTS capabilities url\n   * @export\n   */\n  createAndAddDataSourceFromWMTSCapability(layer, capabilities, wmtsUrl) {\n    const id = exports.getId(layer);\n\n    // (1) No need to do anything if there's already a WMTS data source (and its\n    // layer in the map)\n    if (this.wmtsCache_[id]) {\n      return;\n    }\n\n    let dataSource;\n\n    // (2) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n\n      const name = googAsserts.assertString(layer['Title']);\n      const wmtsLayer = googAsserts.assertString(layer['Identifier']);\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: name,\n        ogcType: ngeoDatasourceOGC.Type.WMTS,\n        visible: true,\n        wmtsLayer: wmtsLayer,\n        wmtsUrl: wmtsUrl\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n    // (3) Get/Create group, then add data source to group\n    let wmtsGroup = this.getWMTSGroup(wmtsUrl);\n    if (!wmtsGroup) {\n      wmtsGroup = new ngeoDatasourceOGCGroup({\n        dataSources: [],\n        title: capabilities['ServiceIdentification']['Title'],\n        url: wmtsUrl\n      });\n      this.addWMTSGroup_(wmtsGroup);\n    }\n    wmtsGroup.addDataSource(dataSource);\n\n    // (4) Create and add the OL layer\n    const layerObj = this.ngeoLayerHelper_.createWMTSLayerFromCapabilititesObj(\n      capabilities,\n      layer\n    );\n    this.addLayer_(layerObj);\n\n    // (5) Add data source to ngeo collection\n    this.dataSources_.push(dataSource);\n\n    // (6) Create and set WMTS cache item\n    this.wmtsCache_[id] = {\n      layerObj: layerObj,\n      // This watcher synchronizes the data source visible property to\n      // the OL layer object visible property\n      unregister: this.rootScope_.$watch(\n        () => dataSource.visible,\n        this.handleWMTSDataSourceVisibleChange_.bind(this, layerObj)\n      )\n    };\n  }\n\n  /**\n   * @param {!File} file File.\n   * @export\n   */\n  createAndAddDataSourceFromFile(file) {\n    this.getFileDataSource_(file).then(\n      (dataSource) => {\n        const fileGroup = this.fileGroup_;\n\n        // (1) No need to do anything if the file has already been added...\n        if (fileGroup.dataSources.includes(dataSource)) {\n          return;\n        }\n\n        // (2) Okay, we need to add this data source. First, add its layer\n        //     to the map.\n        this.addLayer_(dataSource.layer);\n\n        // (3) Add it to the file group\n        fileGroup.addDataSource(dataSource);\n\n        // (4) Recenter the map view onto its extent\n        this.map_.getView().fit(dataSource.extent);\n\n        // (5) Finally, add it to the ngeo collection\n        this.dataSources_.push(dataSource);\n      },\n      (rejections) => {\n        googAsserts.fail(`Failed to load file: ${file.name}`);\n      }\n    );\n  }\n\n  /**\n   * Get file data source from cache, else create, store and return a new one.\n   * @param {!File} file File.\n   * @return {!angular.$q.Promise} Promise\n   * @private\n   */\n  getFileDataSource_(file) {\n\n    const defer = this.q_.defer();\n\n    if (this.files_[file.name]) {\n      defer.resolve(this.files_[file.name]);\n    } else {\n      const ngeoFile = this.ngeoFile_;\n      ngeoFile.read(file).then((content) => {\n        let features;\n        const readOptions = {\n          featureProjection: this.map_.getView().getProjection()\n        };\n\n        if (ngeoFile.isKml(content)) {\n          features = new olFormatKML().readFeatures(content, readOptions);\n        } else if (ngeoFile.isGpx(content)) {\n          features = new olFormatGPX().readFeatures(content, readOptions);\n        }\n\n        if (features) {\n          const id = exports.getId(file);\n\n          const dataSource = new ngeoDatasourceFile({\n            features: new olCollection(features),\n            id: id,\n            name: file.name,\n            visible: true\n          });\n\n          // Keep a reference if both caches\n          this.files_[file.name] = dataSource;\n          this.extDataSources_[id] = dataSource;\n\n          defer.resolve(dataSource);\n        } else {\n          defer.reject();\n        }\n      });\n    }\n\n    return defer.promise;\n  }\n\n  /**\n   * @param {!ol.layer.Tile} layer WMTS layer\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleWMTSDataSourceVisibleChange_(layer, value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      layer.setVisible(value);\n    }\n  }\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If it's an external data source, remove it from its WMS Group\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (this.extDataSources_[dataSource.id] === dataSource) {\n      if (dataSource instanceof ngeoDatasourceFile) {\n        this.removeFileDataSource_(dataSource);\n      } else if (dataSource instanceof ngeoDatasourceOGC) {\n        this.removeOGCDataSource_(dataSource);\n      }\n    }\n  }\n\n  /**\n   * Remove a data source from its group. Remove its layer from the map as well.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.File} dataSource External File data source.\n   * @private\n   */\n  removeFileDataSource_(dataSource) {\n    this.removeLayer_(dataSource.layer);\n    this.fileGroup_.removeDataSource(dataSource);\n  }\n\n  /**\n   * Remove the data source from its group. If the group no longer has\n   * any data source in it, it is removed then destroyed and its layer is\n   * removed from the map.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.OGC} dataSource External OGC data source.\n   * @private\n   */\n  removeOGCDataSource_(dataSource) {\n    if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMS) {\n      // WMS data source\n      const url = dataSource.wmsUrl;\n      googAsserts.assert(url);\n\n      const wmsGroup = this.getWMSGroup(url);\n      if (wmsGroup && wmsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmsGroup.removeDataSource(dataSource);\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the group, and remove the layer from the map as well.\n        if (!wmsGroup.dataSources.length) {\n          this.removeLayer_(wmsGroup.layer);\n          wmsGroup.destroy();\n          this.removeWMSGroup_(wmsGroup);\n        }\n      }\n    } else if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMTS) {\n      // WMTS data source\n      const url = dataSource.wmtsUrl;\n      googAsserts.assert(url);\n\n      const wmtsGroup = this.getWMTSGroup(url);\n      if (wmtsGroup && wmtsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmtsGroup.removeDataSource(dataSource);\n\n        // Remove the cache item, in addition to removing the layer from the\n        // map and unregister the watcher\n        const id = dataSource.id;\n        this.removeLayer_(this.wmtsCache_[id].layerObj);\n        this.wmtsCache_[id].unregister();\n        delete this.wmtsCache_[id];\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the groug.\n        if (!wmtsGroup.dataSources.length) {\n          wmtsGroup.destroy();\n          this.removeWMTSGroup_(wmtsGroup);\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * Get the data source id from a WMS or WMTS Capability Layer object, or\n * from a File object.\n *\n * Please, note that this is used to generate a unique id for the created\n * external data sources and since a WMS/WMTS Capability Layer objects don't\n * natively contains an id by themselves, then it is programmatically generated\n * using the `ol.getUid` method, plus a million.\n *\n * @param {!Object} layer WMS/WMTS Capability Layer object.\n * @return {number} Data source id.\n * @export\n */\nexports.getId = function(layer) {\n  return olBase.getUid(layer) + 1000000;\n};\n\n\nexports.module = angular.module('gmfExternalDataSourcesManager', [\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscFile.module.name,\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('gmfExternalDataSourcesManager',\n  exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.DataSources\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport olView from 'ol/View.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoDataSources\n   * @ngInject\n   */\n  constructor() {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = new olCollection();\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_ === map) {\n      return;\n    }\n\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.collection_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.service('ngeoDataSources', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.editFeatureComponent\n */\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\n\n/** @suppress {extraRequire} */\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\n\nimport gmfEditingXSDAttributes from 'gmf/editing/XSDAttributes.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport googAsserts from 'goog/asserts.js';\nimport DateFormatter from 'ngeo/misc/php-date-formatter.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.css';\n\n\n/** @suppress {extraRequire} */\nimport ngeoEditingAttributesComponent from 'ngeo/editing/attributesComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingCreatefeatureComponent from 'ngeo/editing/createfeatureComponent.js';\n\nimport ngeoUtils from 'ngeo/utils.js';\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMenu from 'ngeo/Menu.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\n\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfEditingFeatureComponent', [\n  gmfEditingEditFeature.module.name,\n  gmfEditingSnapping.module.name,\n  gmfEditingXSDAttributes.module.name,\n  ngeoEditingAttributesComponent.name,\n  ngeoEditingCreatefeatureComponent.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMessageModalComponent.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/editing/editFeatureComponent', require('./editFeatureComponent.html'));\n});\n\n\n/**\n * Directive used to insert, modify and delete features from a single layer.\n * It allows you to modify the geometry of the feature in addition to its\n * attributes.\n *\n * In order to modify or delete a feature, you must click on the map at the\n * location of the feature to select it first.\n *\n * In order to create a new feature, you use the \"Draw\" button and digitize\n * the feature on the map.\n *\n * Example:\n *\n *     <gmf-editfeature\n *         gmf-editfeature-dirty=\"ctrl.dirty\"\n *         gmf-editfeature-editabletreectrl=\"::ctrl.treeCtrl\"\n *         gmf-editfeature-map=\"::ctrl.map\"\n *         gmf-editfeature-state=\"efsCtrl.state\"\n *         gmf-editfeature-tolerance=\"::ctrl.tolerance\"\n *         gmf-editfeature-vector=\"::ctrl.vectorLayer\">\n *     </gmf-editfeature>\n *\n * @htmlAttribute {boolean} gmf-editfeature-dirty Flag that is toggled as soon\n *     as the feature changes, i.e. if any of its properties change, which\n *     includes the geometry.\n * @htmlAttribute {ngeo.layertree.Controller} gmf-editfeature-editabletreectrl\n *     A reference to the editable Layertree controller, which contains a\n *     a reference to the node and WMS layer.\n * @htmlAttribute {ol.Map} gmf-editfeature-map The map.\n * @htmlAttribute {string} gmf-editfeature-state The state property shared\n *     with the `gmf-editfeatureselector` directive. For more info, see in\n *     that directive.\n * @htmlAttribute {number|undefined} gmf-editfeatureselector-tolerance The\n *     buffer in pixels to use when making queries to get the features.\n * @htmlAttribute {ol.layer.Vector} gmf-editfeature-vector The vector layer in\n *     which to draw the vector features.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfEditfeature\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfEditfeatureController as efCtrl',\n    scope: {\n      'dirty': '=gmfEditfeatureDirty',\n      'editableTreeCtrl': '=gmfEditfeatureEditabletreectrl',\n      'map': '<gmfEditfeatureMap',\n      'state': '=gmfEditfeatureState',\n      'tolerance': '<?gmfEditfeatureTolerance',\n      'vectorLayer': '<gmfEditfeatureVector'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/editing/editFeatureComponent'\n  };\n};\n\n\nexports.directive('gmfEditfeature',\n  exports.component_);\n\n\n/**\n * @param {jQuery} $element Element.\n * @param {angular.$q} $q Angular $q service.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmf.editing.EditFeature} gmfEditFeature Gmf edit feature service.\n * @param {gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @param {gmf.editing.XSDAttributes} gmfXSDAttributes The gmf XSDAttributes service.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo Event Helper.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfEditfeatureController\n */\nexports.Controller_ = function($element, $q, $scope, $timeout,\n  gettextCatalog, gmfEditFeature, gmfSnapping, gmfXSDAttributes,\n  ngeoEventHelper, ngeoFeatureHelper, ngeoLayerHelper, ngeoToolActivateMgr) {\n\n\n  // === Binding properties ===\n\n  /**\n   * Flag that is toggled as soon as the feature changes, i.e. if any of its\n   * properties change, which includes the geometry.\n   * @type {boolean}\n   * @export\n   */\n  this.dirty;\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.editableTreeCtrl;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * The state property shared with the `gmf-editfeatureselector` directive.\n   * For more info, see in that directive.\n   * @type {string}\n   * @export\n   */\n  this.state;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.tolerance;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.vectorLayer;\n\n\n  // === Injected properties ===\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {gmf.editing.EditFeature}\n   * @private\n   */\n  this.gmfEditFeature_ = gmfEditFeature;\n\n  /**\n   * @type {gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n\n  /**\n   * @type {gmf.editing.XSDAttributes}\n   * @private\n   */\n  this.gmfXSDAttributes_ = gmfXSDAttributes;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n\n  // === Private properties ===\n\n  /**\n   * @type {gmfThemes.GmfLayer}\n   * @private\n   */\n  this.editableNode_;\n\n  /**\n   * @type {ol.layer.Image|ol.layer.Tile}\n   * @private\n   */\n  this.editableWMSLayer_;\n\n  /**\n   * A deferred object resolved after the confirm modal \"continue w/o saving\" or\n   * \"save\" buttons are clicked.\n   * @type {angular.$q.Deferred|null}\n   * @private\n   */\n  this.confirmDeferred_ = null;\n\n  /**\n   * Flag that controls the visibility of the modal that manages unsaved\n   * modifications.\n   * @type {boolean}\n   * @export\n   */\n  this.unsavedModificationsModalShown = false;\n\n  /**\n   * Flag that is toggled while a request is pending, either one to get\n   * features when a map is clicked or when saving\n   * @private\n   */\n  this.pending = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = true;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.createActive = false;\n\n  /**\n   * @type {ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.createToolActivate = new ngeoMiscToolActivate(this, 'createActive');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.mapSelectActive = true;\n\n  /**\n   * @type {ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.mapSelectToolActivate = new ngeoMiscToolActivate(this, 'mapSelectActive');\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature = null;\n\n  this.scope_.$watch(\n    () => this.feature,\n    this.handleFeatureChange_.bind(this)\n  );\n\n  /**\n   * @type {number|string|undefined}\n   * @export\n   */\n  this.featureId = undefined;\n\n  /**\n   * @type {ol.Collection}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Collection}\n   * @private\n   */\n  this.interactions_ = new olCollection();\n\n  /**\n   * @type {ol.interaction.Modify}\n   * @private\n   */\n  this.modify_;\n\n  /**\n   * @type {ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.modifyToolActivate;\n\n  /**\n   * @type {ngeo.Menu}\n   * @private\n   */\n  this.menu_ = new ngeoMenu({\n    actions: [{\n      cls: 'fa fa-arrows',\n      label: gettextCatalog.getString('Move'),\n      name: 'move'\n    }, {\n      cls: 'fa fa-rotate-right',\n      label: gettextCatalog.getString('Rotate'),\n      name: 'rotate'\n    }]\n  });\n\n  /**\n   * @type {ngeo.interaction.Translate}\n   * @private\n   */\n  this.translate_;\n\n  /**\n   * @type {ngeo.interaction.Rotate}\n   * @private\n   */\n  this.rotate_;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.rotateToolActivate;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.translateToolActivate;\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?Array.<!ngeox.Attribute>}\n   * @export\n   */\n  this.attributes = null;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showServerError = false;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.serverErrorMessage = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.serverErrorType = null;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const lang = this.gettextCatalog_.getCurrentLanguage();\n  $.datetimepicker.setLocale(lang);\n  $.datetimepicker.setDateFormatter(new DateFormatter());\n\n  // (1) Set default values and other properties\n  this.dirty = this.dirty === true;\n  this.editableNode_ = /** @type {gmfThemes.GmfLayer} */ (\n    this.editableTreeCtrl.node);\n  this.features = this.vectorLayer.getSource().getFeaturesCollection();\n  this.tolerance = this.tolerance !== undefined ? this.tolerance : 10;\n\n  // (1.1) Set editable WMS layer\n  const layer = gmfLayertreeSyncLayertreeMap.getLayer(this.editableTreeCtrl);\n  googAsserts.assert(\n    layer instanceof olLayerImage || layer instanceof olLayerTile);\n  this.editableWMSLayer_ = layer;\n\n  // (1.2) Create, set and initialize interactions\n  this.modify_ = new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.features,\n    style: this.ngeoFeatureHelper_.getVertexStyle(false)\n  });\n  this.interactions_.push(this.modify_);\n\n  this.rotate_ = new ngeoInteractionRotate({\n    features: this.features,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf01e',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.rotate_);\n\n  this.translate_ = new ngeoInteractionTranslate({\n    features: this.features,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf047',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.translate_);\n\n  this.initializeInteractions_();\n\n  this.modifyToolActivate = new ngeoMiscToolActivate(this.modify_, 'active');\n  this.rotateToolActivate = new ngeoMiscToolActivate(this.rotate_, 'active');\n  this.translateToolActivate = new ngeoMiscToolActivate(this.translate_, 'active');\n\n  // (1.3) Add menu to map\n  this.map.addOverlay(this.menu_);\n\n\n  // (2) Watchers and event listeners\n  this.scope_.$watch(\n    () => this.createActive,\n    (newVal, oldVal) => {\n      if (newVal) {\n        this.gmfSnapping_.ensureSnapInteractionsOnTop();\n      }\n    }\n  );\n\n  this.scope_.$on('$destroy', this.handleDestroy_.bind(this));\n\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(\n      this.features,\n      'add',\n      this.handleFeatureAdd_,\n      this\n    )\n  );\n\n  this.scope_.$watch(\n    () => this.mapSelectActive,\n    this.handleMapSelectActiveChange_.bind(this)\n  );\n\n  this.scope_.$watch(\n    () => this.state,\n    (newValue, oldValue) => {\n      const state = exports.State;\n      if (newValue === state.STOP_EDITING_PENDING) {\n        this.confirmCancel().then(() => {\n          this.state = state.STOP_EDITING_EXECUTE;\n        });\n      } else if (newValue === state.DEACTIVATE_PENDING) {\n        this.confirmCancel().then(() => {\n          this.state = state.DEACTIVATE_EXECUTE;\n        });\n      }\n    }\n  );\n\n  this.scope_.$watch(\n    () => this.unsavedModificationsModalShown,\n    (newValue, oldValue) => {\n      // Reset stop request when closing the confirmation modal\n      if (oldValue && !newValue) {\n        this.state = exports.State.IDLE;\n      }\n    }\n  );\n\n\n  // (3) Get attributes\n  this.gmfXSDAttributes_.getAttributes(this.editableNode_.id).then(\n    this.setAttributes_.bind(this));\n\n\n  // (4) Toggle\n  this.toggle_(true);\n\n};\n\n\n/**\n * Save the currently selected feature modifications.\n * @export\n */\nexports.Controller_.prototype.save = function() {\n  googAsserts.assert(this.attributes);\n\n  const feature = this.feature.clone();\n  feature.setId(this.feature.getId());\n  const id = this.featureId;\n\n  this.pending = true;\n\n  const dateFormatter = new DateFormatter();\n  for (const attribute of this.attributes) {\n    if (attribute.format) {\n      if (this.feature.get(attribute.name)) {\n        const name = this.feature.get(attribute.name);\n        googAsserts.assertString(name);\n        const value = dateFormatter.parseDate(name, attribute.format);\n        let jsonFormat = 'Y-m-d\\\\TH:i:s';\n        if (attribute.type === 'date') {\n          jsonFormat = 'Y-m-d';\n        } else if (attribute.type === 'time') {\n          jsonFormat = 'H:i:s';\n        } else if (attribute.type === 'datetime') {\n          // Time zone correction\n          value.setMinutes(value.getMinutes() + value.getTimezoneOffset());\n        }\n        feature.set(attribute.name, dateFormatter.formatDate(value, jsonFormat));\n      } else {\n        // Shouldn't be set to an empty string\n        feature.set(attribute.name, null);\n      }\n    }\n  }\n\n  const promise = id ?\n    this.gmfEditFeature_.updateFeature(\n      this.editableNode_.id,\n      feature\n    ) :\n    this.gmfEditFeature_.insertFeatures(\n      this.editableNode_.id,\n      [feature]\n    );\n  promise.then(\n    (response) => {\n      this.dirty = false;\n      this.pending = false;\n      this.handleEditFeature_(response);\n    },\n    (response) => {\n      this.showServerError = true;\n      this.pending = false;\n      this.serverErrorType =  `error type : ${response.data['error_type']}`;\n      this.serverErrorMessage = `error message : ${response.data['message']}`;\n    }\n  );\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.cancel = function() {\n  this.dirty = false;\n  this.feature = null;\n  this.features.clear();\n  this.menu_.close();\n  this.unsavedModificationsModalShown = false;\n};\n\n\n/**\n * Check if there are unsaved modifications. If there aren't, then cancel.\n * Used by the 'cancel' button in the template.\n * @return {angular.$q.Promise} The promise attached to the confirm deferred\n *     object.\n * @export\n */\nexports.Controller_.prototype.confirmCancel = function() {\n  return this.checkForModifications_().then(() => {\n    this.cancel();\n  });\n};\n\n\n/**\n * Check if there's a feature selected and if it contains modifications\n * (a.k.a. is dirty), then the confirmation modal is shown.\n * @param {boolean=} scopeApply Whether to force scope to refresh or not.\n *     when the confirm modal is not dismissed.\n * @return {angular.$q.Promise} The promise attached to the confirm deferred\n *     object.\n * @private\n */\nexports.Controller_.prototype.checkForModifications_ = function(\n  scopeApply) {\n  this.confirmDeferred_ = this.q_.defer();\n  if (this.feature && this.dirty) {\n    this.unsavedModificationsModalShown = true;\n    if (scopeApply) {\n      this.scope_.$apply();\n    }\n  } else {\n    this.confirmDeferred_.resolve();\n  }\n\n  return this.confirmDeferred_.promise;\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.continueWithoutSaving = function() {\n  this.cancel();\n  this.confirmDeferred_.resolve();\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.delete = function() {\n  const msg = this.gettextCatalog_.getString(\n    'Do you really want to delete the selected feature?');\n  // Confirm deletion first\n  if (confirm(msg)) {\n    this.pending = true;\n\n    // (1) Launch request\n    this.gmfEditFeature_.deleteFeature(\n      this.editableNode_.id,\n      this.feature\n    ).then(\n      (response) => {\n        this.dirty = false;\n        this.pending = false;\n        this.ngeoLayerHelper_.refreshWMSLayer(this.editableWMSLayer_);\n\n        // (2) Reset selected feature\n        this.cancel();\n      },\n      (response) => {\n        this.showServerError = true;\n        this.pending = false;\n        this.serverErrorType =  `error type : ${response.data['error_type']}`;\n        this.serverErrorMessage = `error message : ${response.data['message']}`;\n      }\n    );\n\n  }\n};\n\n\n/**\n * Called when the modal 'save' button is clicked. Do as if the user had\n * clicked on the 'save' input button in the form, which allows the form\n * to be validated.\n * @export\n */\nexports.Controller_.prototype.submit = function() {\n  // Use timeout to prevent the digest already in progress\n  // due to clicking on the modal button to throw an error.\n  this.timeout_(() => {\n    this.element_.find('input[type=\"submit\"]').click();\n  }, 0);\n};\n\n/**\n * Called after an insert, update or delete request.\n * @param {angular.$http.Response} resp Ajax response.\n * @private\n */\nexports.Controller_.prototype.handleEditFeature_ = function(resp) {\n  const features = new olFormatGeoJSON().readFeatures(resp.data);\n  if (features.length) {\n    this.feature.setId(features[0].getId());\n    this.ngeoLayerHelper_.refreshWMSLayer(this.editableWMSLayer_);\n  }\n  if (this.confirmDeferred_) {\n    this.confirmDeferred_.resolve();\n  }\n};\n\n\n/**\n * @param {!Array.<ngeox.Attribute>} attributes Attributes.\n * @private\n */\nexports.Controller_.prototype.setAttributes_ = function(attributes) {\n  // Set attributes\n  this.attributes = attributes;\n  for (const attribute of attributes) {\n    if (attribute.type == 'date') {\n      attribute.format = 'Y-m-d';\n      attribute.mask = '9999-19-39';\n    } else if (attribute.type == 'time') {\n      attribute.format = 'H:i';\n      attribute.mask = '29:59';\n    } else if (attribute.type == 'datetime') {\n      attribute.format = 'Y-m-d H:i';\n      attribute.mask = '9999-19-39 29:59';\n    }\n  }\n\n  // Get geom type from attributes and set\n  const geomAttr = ngeoFormatXSDAttribute.getGeometryAttribute(\n    this.attributes\n  );\n  if (geomAttr && geomAttr.geomType) {\n    this.geomType = geomAttr.geomType;\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeatureAdd_ = function(evt) {\n  this.feature = null;\n  this.timeout_(() => {\n    googAsserts.assert(this.attributes);\n    const feature = evt.element;\n    googAsserts.assertInstanceof(feature, olFeature);\n    const dateFormatter = new DateFormatter();\n    for (const attribute of this.attributes) {\n      if (attribute.format) {\n        if (feature.get(attribute.name)) {\n          let value;\n          if (attribute.type === 'datetime') {\n            value = new Date(feature.get(attribute.name));\n            // Time zone correction\n            value.setMinutes(value.getMinutes() - value.getTimezoneOffset());\n          } else {\n            let jsonFormat = '';\n            if (attribute.type === 'date') {\n              jsonFormat = 'Y-m-d';\n            } else if (attribute.type === 'time') {\n              jsonFormat = 'H:i:s';\n            }\n            const name = feature.get(attribute.name);\n            googAsserts.assertString(name);\n            value = dateFormatter.parseDate(name, jsonFormat);\n          }\n          feature.set(attribute.name, dateFormatter.formatDate(value, attribute.format));\n        } else {\n          // Shouldn't be set to an empty string\n          feature.set(attribute.name, null);\n        }\n      }\n    }\n    this.feature = feature;\n    this.createActive = false;\n    if (!feature.getId()) {\n      this.dirty = true;\n    }\n    this.scope_.$apply();\n  }, 0);\n};\n\n\n/**\n * Activate or deactivate this directive.\n * @param {boolean} active Whether to activate this directive or not.\n * @private\n */\nexports.Controller_.prototype.toggle_ = function(active) {\n\n  const keys = this.listenerKeys_;\n  const createUid = ['create-', olBase.getUid(this)].join('-');\n  const otherUid = ['other-', olBase.getUid(this)].join('-');\n  const toolMgr = this.ngeoToolActivateMgr_;\n\n  if (active) {\n\n    // FIXME\n    //this.registerInteractions_();\n\n    keys.push(olEvents.listen(this.menu_, 'actionclick',\n      this.handleMenuActionClick_, this));\n\n    keys.push(olEvents.listen(this.translate_,\n      'translateend',\n      this.handleTranslateEnd_, this));\n\n    keys.push(olEvents.listen(this.rotate_, 'rotateend', this.handleRotateEnd_, this));\n\n    toolMgr.registerTool(createUid, this.createToolActivate, false);\n    toolMgr.registerTool(createUid, this.mapSelectToolActivate, true);\n\n    toolMgr.registerTool(otherUid, this.createToolActivate, false);\n    toolMgr.registerTool(otherUid, this.modifyToolActivate, true);\n    toolMgr.registerTool(otherUid, this.translateToolActivate, false);\n    toolMgr.registerTool(otherUid, this.rotateToolActivate, false);\n\n  } else {\n\n    // FIXME\n    //this.unregisterInteractions_();\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n\n    toolMgr.unregisterTool(createUid, this.createToolActivate);\n    toolMgr.unregisterTool(createUid, this.mapSelectToolActivate);\n\n    toolMgr.unregisterTool(otherUid, this.createToolActivate);\n    toolMgr.unregisterTool(otherUid, this.modifyToolActivate);\n    toolMgr.unregisterTool(otherUid, this.translateToolActivate);\n    toolMgr.unregisterTool(otherUid, this.rotateToolActivate);\n\n    this.createActive = false;\n    this.cancel();\n  }\n\n  this.modify_.setActive(active);\n  this.mapSelectActive = active;\n  this.editableTreeCtrl.properties['editing'] = active;\n\n};\n\n\n/**\n * Called when the mapSelectActive property changes.\n * @param {boolean} active Whether the map select is active or not.\n * @private\n */\nexports.Controller_.prototype.handleMapSelectActiveChange_ = function(\n  active) {\n\n  const mapDiv = this.map.getViewport();\n  googAsserts.assertElement(mapDiv);\n\n  if (active) {\n    olEvents.listen(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.listen(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n  } else {\n    olEvents.unlisten(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.unlisten(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n  }\n};\n\n\n/**\n * Called when the map is clicked.\n *\n * (1) If a vector feature was clicked, don't do anything (i.e. allow the\n *     interactions to do their bidings without selecting a new feature).\n *\n * (2) Otherwise, if there is a feature being edited and has unsaved\n *     modifications, show the confirmation modal asking the user what to do\n *     about it.\n *\n * (3) If there's no feature selected or we have one without unsaved\n *     modifications or with modifications that were canceled, launch a query\n *     to fetch the features at the clicked location.\n *\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapClick_ = function(evt) {\n  const coordinate = evt.coordinate;\n  const pixel = evt.pixel;\n\n  // (1) Check if we clicked on an existing vector feature, i.e the one\n  //     selected. In that case, no need to do any further action.\n  const feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 5\n    }\n  );\n\n  if (feature) {\n    return;\n  }\n\n  // (2) If a feature is being edited and has unsaved changes, show modal\n  //     to let the user decide what to do\n  this.checkForModifications_(true).then(() => {\n\n    const map = this.map;\n    const view = map.getView();\n    const resolution = view.getResolution();\n    const buffer = resolution * this.tolerance;\n    const extent = olExtent.buffer(\n      [coordinate[0], coordinate[1], coordinate[0], coordinate[1]],\n      buffer\n    );\n\n    // (3) Launch query to fetch features\n    this.gmfEditFeature_.getFeaturesInExtent(\n      [this.editableNode_.id],\n      extent\n    ).then(this.handleGetFeatures_.bind(this));\n\n    // (4) Clear any previously selected feature\n    this.cancel();\n\n    // (5) Pending\n    this.pending = true;\n  });\n};\n\n\n/**\n * @param {Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(evt) {\n  const pixel = this.map.getEventPixel(evt);\n  const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 7\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // show contextual menu when clicking on certain types of features\n  if (feature) {\n    const type = this.ngeoFeatureHelper_.getType(feature);\n    if (type === ngeoGeometryType.POLYGON || type === ngeoGeometryType.MULTI_POLYGON ||\n        type === ngeoGeometryType.LINE_STRING || type === ngeoGeometryType.MULTI_LINE_STRING) {\n      this.menu_.open(coordinate);\n    }\n    evt.preventDefault();\n    evt.stopPropagation();\n  }\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @private\n */\nexports.Controller_.prototype.handleGetFeatures_ = function(features) {\n  this.pending = false;\n\n  this.timeout_(() => {\n    if (features.length) {\n      const feature = features[0];\n      this.feature = feature;\n      this.features.push(feature);\n    }\n  }, 0);\n};\n\n\n/**\n * Initialize interactions by setting them inactive and decorating them\n * @private\n */\nexports.Controller_.prototype.initializeInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    interaction.setActive(false);\n    ngeoMiscDecorate.interaction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by adding them to the map\n * @private\n */\nexports.Controller_.prototype.registerInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.addInteraction(interaction);\n  });\n};\n\n\n/**\n * Unregister interactions, i.e. set them inactive and remove them from the map\n * @private\n */\nexports.Controller_.prototype.unregisterInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.removeInteraction(interaction);\n  });\n};\n\n\n/**\n * @param {?ol.Feature} newFeature The new feature.\n * @param {?ol.Feature} oldFeature The old feature.\n * @private\n */\nexports.Controller_.prototype.handleFeatureChange_ = function(\n  newFeature, oldFeature\n) {\n\n  let geom;\n  if (oldFeature) {\n    olEvents.unlisten(oldFeature, 'propertychange', this.handleFeaturePropertyChange_, this);\n    geom = oldFeature.getGeometry();\n    googAsserts.assert(geom);\n    olEvents.unlisten(\n      geom,\n      'change',\n      this.handleFeatureGeometryChange_,\n      this\n    );\n    this.unregisterInteractions_();\n  }\n\n  if (newFeature) {\n    this.featureId = newFeature.getId();\n    olEvents.listen(newFeature, 'propertychange', this.handleFeaturePropertyChange_, this);\n    geom = newFeature.getGeometry();\n    googAsserts.assert(geom);\n    olEvents.listen(\n      geom,\n      'change',\n      this.handleFeatureGeometryChange_,\n      this\n    );\n    this.registerInteractions_();\n\n    this.gmfSnapping_.ensureSnapInteractionsOnTop();\n\n    // The `ui-date` triggers an unwanted change, i.e. it converts the text\n    // to Date, which makes the directive dirty when it shouldn't... to\n    // bypass this, we reset the dirty state here. We do so only if we're\n    // editing an existing feature\n    if (this.featureId) {\n      this.timeout_(() => {\n        this.dirty = false;\n        this.scope_.$apply();\n      }, 0);\n    }\n  } else {\n    this.featureId = undefined;\n  }\n\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeaturePropertyChange_ = function() {\n  this.dirty = true;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeatureGeometryChange_ = function() {\n  this.dirty = true;\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {ngeox.MenuEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuActionClick_ = function(evt) {\n  const action = evt.detail.action;\n\n  switch (action) {\n    case 'move':\n      this.translate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    case 'rotate':\n      this.rotate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * @param {ol.interaction.Translate.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleTranslateEnd_ = function(evt) {\n  this.translate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.RotateEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleRotateEnd_ = function(evt) {\n  this.rotate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.features.clear();\n  this.handleFeatureChange_(null, this.feature);\n  this.feature = null;\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.toggle_(false);\n  this.handleMapSelectActiveChange_(false);\n  this.unregisterInteractions_();\n};\n\n\nexports.controller('GmfEditfeatureController',\n  exports.Controller_);\n\n\n/**\n * The different possible values of the `state` inner property.\n * @enum {string}\n */\nexports.State = {\n  /**\n   * The default state. While idle, nothing happens.\n   * @type {string}\n   */\n  IDLE: 'idle',\n  /**\n   * The state active after the deactivation of the editing tools and the\n   * unsaved modifications were saved or discarded.\n   * @type {string}\n   */\n  DEACTIVATE_EXECUTE: 'deactivate_execute',\n  /**\n   * The state active when the deactivation of the editing tools is in\n   * progress while there are unsaved modifications.\n   * @type {string}\n   */\n  DEACTIVATE_PENDING: 'deactivate_pending',\n  /**\n   * Final state set after the \"stop editing\" button has been clicked while\n   * no unsaved modifications were made or if the user saved them or confirmed\n   * to continue without saving.\n   * @type {string}\n   */\n  STOP_EDITING_EXECUTE: 'stop_editing_execute',\n  /**\n   * The state that is active while when the \"stop editing\" button has been\n   * clicked but before any confirmation has been made to continue.\n   * @type {string}\n   */\n  STOP_EDITING_PENDING: 'stop_editing_pending'\n};\n\n\nexport default exports;\n","/**\n * @module gmf.theme.Manager\n */\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.DataSource\n */\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Select\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A select rule, which allows the selection of multiple values among a list\n   * of choices.\n   *\n   * The expression property holds the list of selected choices, which is\n   * comma-separated.\n   *\n   * @struct\n   * @param {!ngeox.rule.SelectOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = ngeoRuleRule.OperatorType.EQUAL_TO;\n    options.type = ngeoFormatAttributeType.SELECT;\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.choices_ = options.choices;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {Array.<string>} Choices\n   * @export\n   */\n  get choices() {\n    return this.choices_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {Array.<string>} Selected choices\n   * @export\n   */\n  get selectedChoices() {\n    let selectedChoices;\n    if (this.expression) {\n      const stringExpression = String(this.expression);\n      selectedChoices = stringExpression.split(',');\n    } else {\n      selectedChoices = [];\n    }\n    return selectedChoices;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.ToolActivateMgr\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * Provides a service to manage the activation of `ngeo.misc.ToolActivate` objects.\n *\n * Example:\n *\n * Each tool must be registered before using it.\n *\n *     let tool = new ngeo.misc.ToolActivate(interaction, 'active');\n *     ngeoToolActivateMgr.registerTool('mapTools', tool);\n *\n * A tool will be registered in a group identified by a group name.\n * Once registered a tool can be activated and deactivated. When activating a\n * tool, all others tools in the same group will be deactivated.\n *\n *     ngeoToolActivateMgr.activateTool(tool);\n *     ngeoToolActivateMgr.deactivateTool(tool);\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoToolActivateMgr\n * @ngInject\n */\nconst exports = function($rootScope) {\n\n  /**\n   * @type {!Object.<string, Array.<ngeox.miscToolActivateMgrEntry>>}\n   * @private\n   */\n  this.groups_ = {};\n\n  /**\n   * The scope.\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $rootScope;\n};\n\n\n/**\n * Register a tool.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to register.\n * @param {boolean=} opt_defaultActivate If true, this tool will be activated\n *     when all other tools in the group are deactivated.\n * @export\n */\nexports.prototype.registerTool = function(groupName, tool,\n  opt_defaultActivate) {\n  let entries = this.groups_[groupName];\n  if (!entries) {\n    entries = this.groups_[groupName] = [];\n  }\n\n  const unlisten = this.scope_.$watch(\n    tool.getActive,\n    (newVal, oldVal) => {\n      if (newVal === oldVal) {\n        return;\n      }\n      if (newVal) {\n        this.deactivateTools_(groupName, tool);\n      } else {\n        this.activateDefault_(groupName);\n      }\n    });\n\n  entries.push({\n    tool: tool,\n    defaultTool: opt_defaultActivate || false,\n    unlisten: unlisten\n  });\n\n  if (googAsserts.ENABLE_ASSERTS) {\n    // check that only one default tool per group exists\n    let defaultTools = 0;\n    entries.forEach((entry) => {\n      if (entry.defaultTool) {\n        defaultTools++;\n      }\n    });\n    googAsserts.assert(\n      defaultTools <= 1, `more than one default tool in group ${groupName}`);\n  }\n};\n\n\n/**\n * Unregister a tool from a group.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to unregister.\n * @export\n */\nexports.prototype.unregisterTool = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      if (entries[i].tool == tool) {\n        entries[i].unlisten();\n        entries.splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * Unregister each tool from a group.\n * @param {string} groupName Name of the group of tools to unregister.\n * @export\n */\nexports.prototype.unregisterGroup = function(groupName) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      entries[i].unlisten();\n    }\n    delete this.groups_[groupName];\n  }\n};\n\n\n/**\n * Activate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @export\n */\nexports.prototype.activateTool = function(tool) {\n  tool.setActive(true);\n};\n\n\n/**\n * Deactivate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to deactivate.\n * @export\n */\nexports.prototype.deactivateTool = function(tool) {\n  tool.setActive(false);\n};\n\n\n/**\n * Deactivate all tools except the given one.\n *\n * @param {string} groupName Name of the group.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @private\n */\nexports.prototype.deactivateTools_ = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  for (let i = 0; i < entries.length; i++) {\n    if (tool != entries[i].tool) {\n      entries[i].tool.setActive(false);\n    }\n  }\n};\n\n\n/**\n * Activate the default tool in the given group if no other tool is active.\n *\n * @param {string} groupName Name of the group.\n * @private\n */\nexports.prototype.activateDefault_ = function(groupName) {\n  const entries = this.groups_[groupName];\n  let defaultTool = null;\n  let hasActiveTool = false;\n\n  for (let i = 0; i < entries.length; i++) {\n    hasActiveTool = hasActiveTool || entries[i].tool.getActive();\n\n    if (entries[i].defaultTool) {\n      defaultTool = entries[i].tool;\n    }\n  }\n\n  if (!hasActiveTool && defaultTool !== null) {\n    defaultTool.setActive(true);\n  }\n};\n\n\nexports.module = angular.module('ngeoToolActivateMgr', []);\nexports.module.service('ngeoToolActivateMgr', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.btnComponent\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Attributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach((expressionFn, i) => {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  });\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Attributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.common\n */\nconst exports = {};\nimport {createEditingStyle} from 'ol/style/Style.js';\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultDrawStyleFunction = function() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultModifyStyleFunction = function() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[/**@type {ol.geom.GeometryType} */ ('Point')];\n  };\n};\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.Service\n */\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\n\n/**\n * An \"authentication\" service for a GeoMapFish application. Upon loading, it\n * launches a request to determine whether a user is currently logged in or\n * not.\n *\n * The possible API requests it supports, which are all self-explanatory, are:\n *\n * - changePassword\n * - login\n * - logout\n * - resetPassword\n *\n * @extends {ol.events.EventTarget}\n */\nconst exports = class extends olEventsEventTarget {\n\n  /**\n   * @param {angular.$http} $http Angular http service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angular.Scope} $rootScope The directive's scope.\n   * @param {string} authenticationBaseUrl URL to \"authentication\" web service.\n   * @param {gmfx.User} gmfUser User.\n   * @ngInject\n   */\n  constructor($http, $injector, $rootScope, authenticationBaseUrl, gmfUser) {\n\n    super();\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.$http_ = $http;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$rootScope_ = $rootScope;\n\n    /**\n     * The authentication url without trailing slash\n     * @type {string}\n     * @private\n     */\n    this.baseUrl_ = authenticationBaseUrl.replace(/\\/$/, '');\n\n    /**\n     * @type {gmfx.User}\n     * @private\n     */\n    this.user_ = gmfUser;\n\n    /**\n      * Don't request a new user object from the back-end after\n      * logging out if the logged-in user's role has this role.\n      * @type {?string}\n      * @private\n      */\n    this.noReloadRole_ =  $injector.has('gmfAuthenticationNoReloadRole')\n      ? $injector.get('gmfAuthenticationNoReloadRole')\n      : null;\n\n    this.load_();\n  }\n\n  /**\n   * Load the authentication service, which sends an asynch request to\n   * determine whether the user is currently connected or not.\n   * @private\n   */\n  load_() {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.IS_LOGGED_IN}`;\n    this.$http_.get(url, {withCredentials: true}).then(\n      this.handleLogin_.bind(this, true)\n    );\n  }\n\n  /**\n   * @param {string} oldPwd Old password.\n   * @param {string} newPwd New password.\n   * @param {string} confPwd New password confirmation.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  changePassword(oldPwd, newPwd, confPwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.CHANGE_PASSWORD}`;\n\n    return this.$http_.post(url, $.param({\n      'oldPassword': oldPwd,\n      'newPassword': newPwd,\n      'confirmNewPassword': confPwd\n    }), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    }).then(((response) => {\n      this.user_.is_password_changed = true;\n      this.$rootScope_.$digest();\n    }).bind(this));\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @param {string} pwd Password.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  login(login, pwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGIN}`;\n\n    return this.$http_.post(url, $.param({'login': login, 'password': pwd}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    }).then(\n      this.handleLogin_.bind(this, false));\n  }\n\n  /**\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  logout() {\n    const noReload = this.user_['role_name'] === this.noReloadRole_;\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGOUT}`;\n    return this.$http_.get(url, {withCredentials: true}).then(() => {\n      this.resetUser_(noReload);\n    });\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  resetPassword(login) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.RESET_PASSWORD}`;\n\n    /**\n     * @param {angular.$http.Response} resp Ajax response.\n     * @return {gmfx.AuthenticationDefaultResponse} Response.\n     */\n    const successFn = function(resp) {\n      const respData = /** @type gmfx.AuthenticationDefaultResponse} */ (\n        resp.data);\n      return respData;\n    }.bind(this);\n\n    return this.$http_.post(url, $.param({'login': login}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n    }).then(successFn);\n  }\n\n  /**\n   * @return {?gmfx.AuthenticationFunctionalities} The role functionalities.\n   */\n  getFunctionalities() {\n    return this.user_.functionalities;\n  }\n\n  /**\n   * @return {number|null} The role ID.\n   */\n  getRoleId() {\n    return this.user_.role_id;\n  }\n\n  /**\n   * @param {boolean} checkingLoginStatus Checking the login status?\n   * @param {angular.$http.Response} resp Ajax response.\n   * @return {angular.$http.Response} Response.\n   * @private\n   */\n  handleLogin_(checkingLoginStatus, resp) {\n    const respData = /** @type {gmfx.AuthenticationLoginResponse} */ (resp.data);\n    this.setUser_(respData, !checkingLoginStatus);\n    if (checkingLoginStatus) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('ready', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n    return resp;\n  }\n\n  /**\n   * @param {gmfx.AuthenticationLoginResponse} respData Response.\n   * @param {boolean} emitEvent Emit a login event?\n   * @private\n   */\n  setUser_(respData, emitEvent) {\n    for (const key in respData) {\n      this.user_[key] = respData[key];\n    }\n    if (emitEvent && respData.username !== undefined) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('login', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @private\n   * @param {boolean} noReload Don't request a new user object from\n   * the back-end after logging out, defaults to false.\n   */\n  resetUser_(noReload) {\n    noReload = noReload || false;\n    for (const key in this.user_) {\n      this.user_[key] = null;\n    }\n    /** @type {gmfx.AuthenticationEvent} */\n    const event = new ngeoCustomEvent('logout', {user: this.user_});\n    this.dispatchEvent(event);\n    if (!noReload) {\n      this.load_();\n    }\n  }\n};\n\n/**\n * @enum {string}\n */\nexports.RouteSuffix = {\n  CHANGE_PASSWORD: 'loginchange',\n  IS_LOGGED_IN: 'loginuser',\n  LOGIN: 'login',\n  LOGOUT: 'logout',\n  RESET_PASSWORD: 'loginresetpassword'\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfAuthenticationService', []);\nexports.module.service('gmfAuthenticationService', exports);\n\nexports.module.value('gmfUser', {\n  'functionalities': null,\n  'is_password_changed': null,\n  'role_id': null,\n  'role_name': null,\n  'username': null\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.Time\n */\n/**\n * ngeo - Time service\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoTime\n */\nconst exports = function() {};\n\n/**\n * @param {number|string|null} value The value\n * @param {Date} defaultValue The default value\n * @return {Date} the date\n */\nexports.prototype.createDate = function(value, defaultValue = null) {\n  return value !== null ? new Date(value) : defaultValue;\n};\n\n/**\n * @param {Date} date The date\n * @param {number|null=} defaultValue The default value\n * @return {number|null} the time\n */\nexports.prototype.getTime = function(date, defaultValue = null) {\n  return date ? date.getTime() : defaultValue;\n};\n\n/**\n * Get options regarding the time property of a node;\n *\n * @param {ngeox.TimeProperty} time the time property of a node\n * @return {{\n *  minDate : number,\n *  maxDate : number,\n *  values : (Array<number>|number)\n * }} - Configuration for the UI components\n * @export\n */\nexports.prototype.getOptions = function(time) {\n\n  const minDate = this.createDate(time.minValue);\n  const maxDate = this.createDate(time.maxValue);\n\n  const minDefaultDate = this.createDate(time.minDefValue, minDate);\n  const maxDefaultDate = this.createDate(time.maxDefValue, maxDate);\n\n  const defaultValues = (time.mode === 'range') ?\n    [this.getTime(minDefaultDate), this.getTime(maxDefaultDate)] :\n    this.getTime(minDefaultDate);\n\n  return {\n    minDate: this.getTime(minDate),\n    maxDate: this.getTime(maxDate),\n    values: defaultValues\n  };\n};\n\n\n/**\n * Time.prototype.getUTCDate - Get UTC date from a local date object\n *\n * @param  {Object} localDate loacl date object in\n * @return {Object} UTC date\n * @export\n */\nexports.prototype.getUTCDate = function(localDate) {\n  return new Date(\n    localDate.getUTCFullYear(),\n    localDate.getUTCMonth(),\n    localDate.getUTCDate());\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoTime', []);\nexports.module.service('ngeoTime', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.popupComponent\n */\n\nimport 'angular-sanitize';\n\n\nconst exports = angular.module('ngeoPopup', [\n  'ngSanitize',\n]);\n\n\nexports.value('ngeoPopupTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoPopupTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/message/popupcomponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/message/popupcomponent', require('./popupcomponent.html'));\n});\n\n\n/**\n * Provides a directive used to show a popup over the page with\n * a title and content.\n *\n *\n * Things to know about this directive:\n *\n * - This directive is intended to be used along with the popup service.\n *\n * - By default the directive uses \"popup.html\" as its templateUrl. This can be\n *   changed by redefining the \"ngeoPopupTemplateUrl\" value.\n *\n * - The directive doesn't create any scope but relies on its parent scope.\n *   Properties like 'content', 'title' or 'open' come from the parent scope.\n *\n * @private\n * @param {string} ngeoPopupTemplateUrl URL to popup template.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoPopup\n */\nexports.directive_ = function(ngeoPopupTemplateUrl) {\n  return {\n    restrict: 'A',\n    templateUrl: ngeoPopupTemplateUrl,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      element.addClass('popover');\n\n      /**\n       * @param {jQuery.Event} evt Event.\n       */\n      scope.close = function(evt) {\n        if (evt) {\n          evt.stopPropagation();\n          evt.preventDefault();\n        }\n        element.addClass('hidden');\n      };\n\n      // Watch the open property\n      scope.$watch('open', (newVal, oldVal) => {\n        element.css('display', newVal ? 'block' : 'none');\n      });\n    }\n  };\n};\n\nexports.directive('ngeoPopup', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Popup\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * This goog.require is needed because of 'ngeo-popup' used in\n * the template.\n * @suppress {extraRequire}\n */\nimport ngeoMessagePopupComponent from 'ngeo/message/popupComponent.js';\n\n/**\n * Provides a factory to create a popup in the page.\n * The factory returns a ngeo.message.Popup object.\n *\n * Example:\n *\n *     let popup = ngeoCreatePopup();\n *     popup.setTitle(\"A title\");\n *     popup.setContent(\"Some content\");\n *     popup.setOpen(true);\n *\n * @constructor\n * @struct\n * @param {angular.$compile} $compile The compile provider.\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoCreatePopup\n */\nconst exports = function($compile, $rootScope, $sce, $timeout) {\n\n  /**\n   * The scope the compiled element is link to.\n   * @type {angular.Scope}\n   * @export\n   */\n  this.scope = $rootScope.$new(true);\n\n  // manage the auto destruction of the popup\n  this.scope.$watch(\n    () => this.scope['open'],\n    (open) => {\n      if (!open && this.autoDestroy_) {\n        this.timeout_(() => {\n          this.destroy();\n        });\n      }\n    }\n  );\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * The element.\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = angular.element('<div ngeo-popup></div>');\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoDestroy_ = false;\n\n\n  // Compile the element, link it to the scope and add it to the document.\n  $compile(this.element_)(this.scope);\n  angular.element(document.body).append(this.element_);\n};\n\n\n/**\n * Get the current popup state.\n * @return {boolean} `true` if the popup is currently, otherwise `false`.\n * @export\n */\nexports.prototype.getOpen = function() {\n  return this.scope['open'];\n};\n\n\n/**\n * Show/hide the popup.\n * @param {boolean} open `true` to show the popup, `false` to hide it.\n * @export\n */\nexports.prototype.setOpen = function(open) {\n  this.scope['open'] = open;\n};\n\n\n/**\n * Destroy the popup.\n * @export\n */\nexports.prototype.destroy = function() {\n  this.scope.$destroy();\n  this.element_.remove();\n};\n\n\n/**\n * Set the popup's title.\n * @param {string} title The title.\n * @export\n */\nexports.prototype.setTitle = function(title) {\n  const trustedTitle = this.sce_.trustAsHtml(title);\n  this.scope['title'] = trustedTitle;\n};\n\n\n/**\n * Set the popup's content.\n * Note: the type of the `content` param is `*` instead of `string`, this\n * is because the content may be trusted using `$sce.trustAsHtml`.\n * @param {*} content The content.\n * @param {boolean=} opt_trusted Whether the content can be trusted.\n *     Default is false.\n * @export\n */\nexports.prototype.setContent = function(content, opt_trusted) {\n  this.scope['content'] = opt_trusted ? this.sce_.trustAsHtml(/** @type {string} */ (content)) : content;\n};\n\n\n/**\n * Set the popup's content with an iframe using the given url.\n * @param {string} url The url of the page.\n * @export\n */\nexports.prototype.setUrl = function(url) {\n  const content = this.sce_.trustAsHtml(\n    `<iframe src=\"${url}\" width=\"100%\" height=\"100%\"></iframe>`\n  );\n  this.setContent(content);\n};\n\n\n/**\n * Set the popup's width.\n * @param {string} width Width the popup should have.\n * @export\n */\nexports.prototype.setWidth = function(width) {\n  this.element_.width(width);\n};\n\n\n/**\n * Set the popup's height.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setHeight = function(height) {\n  this.element_.height(height);\n};\n\n\n/**\n * Set the popup's width and height.\n * @param {string} width Width the popup should have.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setSize = function(width, height) {\n  this.setWidth(width);\n  this.setHeight(height);\n};\n\n\n/**\n * Set the popup's autoDestroy property.\n * @param {boolean} autoDestroy Whether to automatically destroy the popup when\n *     being closed or not.\n * @export\n */\nexports.prototype.setAutoDestroy = function(autoDestroy) {\n  this.autoDestroy_ = autoDestroy;\n};\n\n\n/**\n * Add an extra CSS class name to the popup.\n * @param {string} cls Class name to add to the popup element.\n * @export\n */\nexports.prototype.addClass = function(cls) {\n  this.element_.addClass(cls);\n};\n\n\n/**\n * Open a popup with the given properties.\n * @param {ngeox.PopupOptions} options Options.\n * @export\n */\nexports.prototype.open = function(options) {\n\n  if (options.url) {\n    this.setUrl(options.url);\n  } else if (options.content) {\n    this.setContent(options.content);\n  } else {\n    googAsserts.fail('ngeo.message.Popup options requirest \"url\" or \"content\".');\n  }\n\n  if (options.autoDestroy !== undefined) {\n    this.setAutoDestroy(options.autoDestroy);\n  }\n\n  if (options.cls !== undefined) {\n    this.addClass(options.cls);\n  }\n\n  if (options.height !== undefined) {\n    this.setHeight(options.height);\n  }\n\n  if (options.title !== undefined) {\n    this.setTitle(options.title);\n  }\n\n  if (options.width !== undefined) {\n    this.setWidth(options.width);\n  }\n\n  this.setOpen(true);\n};\n\n\n/**\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.Scope} $rootScope Angular rootScope service.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.PopupFactory} The function to create a popup.\n * @ngInject\n */\nexports.Factory = function($compile, $rootScope, $sce, $timeout) {\n  return (\n    /**\n     * @return {!ngeo.message.Popup} The popup instance.\n     */\n    function() {\n      return new exports($compile, $rootScope, $sce, $timeout);\n    }\n  );\n};\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoCreatePopup', [\n  ngeoMessagePopupComponent.name,\n]);\nexports.module.factory('ngeoCreatePopup', exports.Factory);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.DrawAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionPointer, {handleEvent as pointerHandleEvent} from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultDrawStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return pointerHandleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  /** @type {ngeox.DrawEvent} */\n  const evt = new ngeoCustomEvent('drawstart', {feature: this.sketchFeature_});\n  this.dispatchEvent(evt);\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  /** @type {ngeox.DrawEvent} */\n  const event = new ngeoCustomEvent('drawend', {feature: this.sketchFeature_});\n  this.dispatchEvent(event);\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olProjProjection from 'ol/proj/Projection.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ngeox.MeasureEvent\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, options = /** @type {ngeox.interaction.MeasureOptions} */({})) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), olProjProjection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach((feature) => {\n      this.addFeature(feature);\n    });\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.XSDAttribute\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttribute from 'ngeo/format/Attribute.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\n\n/**\n * @classdesc\n * Reads attributes that are defined in XSD format and return them as a list.\n *\n * @constructor\n * @struct\n * @extends {ol.format.XML}\n */\nconst exports = function() {\n  olFormatXML.call(this);\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Array.<ngeox.Attribute>} The parsed result.\n * @override\n */\nexports.prototype.read = function(source) {\n  return (\n    /** @type {Array.<ngeox.Attribute>} */ olFormatXML.prototype.read.call(this, source)\n  );\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromDocument = function(doc) {\n  googAsserts.assert(doc.nodeType == Node.DOCUMENT_NODE,\n    'doc.nodeType should be DOCUMENT');\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromNode = function(node) {\n  googAsserts.assert(node.nodeType == Node.ELEMENT_NODE,\n    'node.nodeType should be ELEMENT');\n  googAsserts.assert(node.localName == 'schema',\n    'localName should be schema');\n\n  let elements = node.getElementsByTagName('element');\n  if (!elements.length) {\n    elements = node.getElementsByTagName('xsd:element');\n  }\n  const attributes = [];\n\n  let attribute;\n  for (let i = 0, ii = elements.length; i < ii; i++) {\n    attribute = this.readFromElementNode_(elements[i]);\n    if (attribute) {\n      attributes.push(attribute);\n    }\n  }\n\n  return attributes;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {?ngeox.Attribute} An attribute object.\n * @private\n */\nexports.prototype.readFromElementNode_ = function(node) {\n\n  const name = node.getAttribute('name');\n  googAsserts.assertString(name, 'name should be defined in element node.');\n\n  const alias = node.getAttribute('alias');\n  const nillable = node.getAttribute('nillable');\n  const required = !(nillable === true || nillable === 'true');\n\n  const attribute = {\n    name,\n    alias,\n    required\n  };\n\n  const type = node.getAttribute('type');\n  if (type) {\n    if (!ngeoFormatAttribute.setGeometryType(attribute, type)) {\n      this.setAttributeByXsdType_(attribute, type);\n    }\n  } else {\n\n    // Attribute has no type defined on 'element' node.  Try:\n\n    // (1) Enumerations\n    let enumerations = node.getElementsByTagName('enumeration');\n    if (!enumerations.length) {\n      enumerations = node.getElementsByTagName('xsd:enumeration');\n    }\n    if (enumerations.length) {\n      attribute.type = ngeoFormatAttributeType.SELECT;\n      const choices = [];\n      for (let i = 0, ii = enumerations.length; i < ii; i++) {\n        choices.push(enumerations[i].getAttribute('value'));\n      }\n      attribute.choices = choices;\n    } else {\n      // (2) Other types with restrictions\n      let restrictions = node.getElementsByTagName('restriction');\n      if (!restrictions.length) {\n        restrictions = node.getElementsByTagName('xsd:restriction');\n      }\n      if (restrictions.length && restrictions[0]) {\n        const restrictionNode = restrictions[0];\n        this.setAttributeByXsdType_(\n          attribute,\n          restrictionNode.getAttribute('base')\n        );\n        // MaxLength\n        let maxLengths = node.getElementsByTagName('maxLength');\n        if (!maxLengths.length) {\n          maxLengths = node.getElementsByTagName('xsd:maxLength');\n        }\n        if (maxLengths.length && maxLengths[0]) {\n          attribute.maxLength = Number(maxLengths[0].getAttribute('value'));\n        }\n      }\n    }\n  }\n\n  if (!attribute.type) {\n    return null;\n  }\n\n  googAsserts.assert(attribute.type);\n\n  return attribute;\n};\n\n\n/**\n * Set the `type` and `numType` properties of an attribute depending on the\n * given xsdType.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type The xsd type.\n * @private\n */\nexports.prototype.setAttributeByXsdType_ = function(\n  attribute, type\n) {\n  if (type === 'xsd:boolean') {\n    attribute.type = ngeoFormatAttributeType.BOOLEAN;\n  } else if (type === 'xsd:date') {\n    attribute.type = ngeoFormatAttributeType.DATE;\n  } else if (type === 'xsd:dateTime') {\n    attribute.type = ngeoFormatAttributeType.DATETIME;\n  } else if (type === 'xsd:time') {\n    attribute.type = ngeoFormatAttributeType.TIME;\n  } else if (type === 'xsd:decimal' || type === 'xsd:double') {\n    attribute.type = ngeoFormatAttributeType.NUMBER;\n    attribute.numType = exports.NumberType.FLOAT;\n  } else if (type === 'xsd:integer') {\n    attribute.type = ngeoFormatAttributeType.NUMBER;\n    attribute.numType = exports.NumberType.INTEGER;\n  } else if (type === 'xsd:string') {\n    attribute.type = ngeoFormatAttributeType.TEXT;\n  }\n};\n\n\n/**\n * Returns the first geometry attribute among a given list of attributes.\n * @param {Array.<ngeox.Attribute>} attributes The list of attributes.\n * @return {?ngeox.Attribute} A geometry attribute object.\n */\nexports.getGeometryAttribute = function(attributes) {\n  let geomAttribute = null;\n  for (let i = 0, ii = attributes.length; i < ii; i++) {\n    if (attributes[i].type === ngeoFormatAttributeType.GEOMETRY) {\n      geomAttribute = attributes[i];\n      break;\n    }\n  }\n  return geomAttribute;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.NumberType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  FLOAT: 'float',\n  /**\n   * @type {string}\n   * @export\n   */\n  INTEGER: 'integer'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.WFSDescribeFeatureType\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\nimport * as olXml from 'ol/xml.js';\n\n/**\n * @classdesc\n * Format for reading WFS DescribeFeatureType data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst exports = function() {\n\n  olFormatXML.call(this);\n\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * Read a WFS DescribeFeatureType document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WFS DescribeFeatureType.\n * @api\n */\nexports.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromNode = function(node) {\n  let result = {};\n  result = olXml.pushParseAndPop(\n    result,\n    exports.PARSERS_,\n    node,\n    []\n  );\n  return result;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Attributes.\n */\nexports.readElement_ = function(node, objectStack) {\n  const attributes = {};\n  for (let i = 0, len = node.attributes.length; i < len; i++) {\n    const attribute = node.attributes.item(i);\n    attributes[attribute.name] = attribute.value;\n  }\n  if (objectStack.length === 1) {\n    // remove namespace from type\n    attributes['type'] = attributes['type'].split(':').pop();\n  }\n  return attributes;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexType_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const object = olXml.pushParseAndPop(\n    {'name': name},\n    exports.COMPLEX_TYPE_PARSERS_,\n    node, objectStack\n  );\n  // flatten\n  object['complexContent'] =\n    object['complexContent']['extension']['sequence']['element'];\n  return object;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexContent_ = function(\n  node, objectStack\n) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.COMPLEX_CONTENT_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readExtension_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.EXTENSION_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readSequence_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.SEQUENCE_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nexports.NAMESPACE_URIS_ = [\n  null,\n  'http://www.w3.org/2001/XMLSchema'\n];\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    ),\n    'complexType': olXml.makeObjectPropertyPusher(\n      exports.readComplexType_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_TYPE_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'complexContent': olXml.makeObjectPropertySetter(\n      exports.readComplexContent_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_CONTENT_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'extension': olXml.makeObjectPropertySetter(\n      exports.readExtension_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.EXTENSION_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'sequence': olXml.makeObjectPropertySetter(\n      exports.readSequence_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.SEQUENCE_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    )\n  }));\n\n\nexport default exports;\n","/**\n * @module ngeo.query.Querent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport ngeoWFSDescribeFeatureType from 'ngeo/WFSDescribeFeatureType.js';\nimport olFormatWMSCapabilities from 'ol/format/WMSCapabilities.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport * as olObj from 'ol/obj.js';\nimport * as olUri from 'ol/uri.js';\nimport * as olExtent from 'ol/extent.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Querent is a service that issues all sorts of queries using\n   * ngeo data sources. It does not store the result. Instead, it returns it\n   * using promises. Any component that inject this service can use it to\n   * make it issue its own queries and do whatever it wants with the result.\n   *\n   * It supports sending OGC requests and parse the response, such as:\n   * - WFS DescribeFeatureType\n   * - WFS GetFeature\n   * - WMS GetCapabilites\n   * - WMS GetFeatureInfo\n   * - WMTS GetCapabilities\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($http, $q, ngeoRuleHelper, ngeoWMSTime) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n\n    // === Other properties ===\n\n    /**\n     * Promises that can be resolved to cancel started requests.\n     * @type {!Array.<angular.$q.Deferred>}\n     * @private\n     */\n    this.requestCancelers_ = [];\n\n    /**\n     * Cache of promises for WMS GetCapabilities requests. They key is the\n     * online resource base url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmsGetCapabilitiesPromises_ = {};\n\n    /**\n     * Cache of promises for WMST GetCapabilities requests. They key is the\n     * url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmtsGetCapabilitiesPromises_ = {};\n  }\n\n\n  // === PUBLIC methods ===\n\n  /**\n   * Issue WMS GetFeatureInfo and/or WFS GetFeature requests using the given\n   * data sources, map and optional filters.\n   *\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  issue(options) {\n\n    const promises = [];\n    const map = options.map;\n\n    // (1) Cancel requests that are still running\n    this.cancelStillRunningRequests_();\n\n    // (2) Get queryable data sources\n    let queryableDataSources;\n    if (options.queryableDataSources) {\n      queryableDataSources = options.queryableDataSources;\n    } else {\n      const dataSources = options.dataSources;\n      googAsserts.assert(dataSources, 'DataSources should be set');\n      queryableDataSources = this.getQueryableDataSources(dataSources, map);\n    }\n\n    // (3) Combine data sources that support WFS and issue WFS queries.\n    //     The 'bbox' ('extent' option) is not required for WFS requests to\n    //     be issued.\n    const combinedWFSDataSources = this.getCombinableWFSDataSources_(\n      queryableDataSources.wfs);\n    promises.push(this.issueCombinedWFS_(combinedWFSDataSources, options));\n\n    // (4) Combine data sources that support WMS and issue WMS queries.\n    //     Only occurs if the `coordinate` option is set, because it's required\n    //     by WMS GetFeatureInfo requests.\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const combinedWMSDataSources = this.getCombinableWMSDataSources_(\n        queryableDataSources.wms);\n      promises.push(this.issueCombinedWMS_(combinedWMSDataSources, options));\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Browse a given list of data sources. Return 2 lists of data sources that\n   * are queryable, the first one being those that support WFS and the other\n   * WMS only. This means that WFS is always favored first, then WMS.\n   *\n   * The map view resolution determines if the inner ogc layers are in range.\n   *\n   * @param {!Array.<!ngeo.datasource.DataSource>} dataSources Data sources\n   * @param {ol.Map} map Map.\n   * @return {!ngeox.QueryableDataSources} Queryable data sources.\n   * @export\n   */\n  getQueryableDataSources(dataSources, map) {\n\n    const queryableDataSources = {\n      wfs: [],\n      wms: []\n    };\n    const resolution = googAsserts.assertNumber(map.getView().getResolution());\n\n    for (const dataSource of dataSources) {\n\n      // (1) Skip data source that can't be queried\n      if (!this.isDataSourceQueryable_(dataSource, resolution)) {\n        continue;\n      }\n\n      if (dataSource instanceof ngeoDatasourceOGC) {\n        // (2) Split data sources\n        if (dataSource.supportsWFS) {\n          queryableDataSources.wfs.push(dataSource);\n        } else {\n          queryableDataSources.wms.push(dataSource);\n        }\n      }\n    }\n\n    return queryableDataSources;\n  }\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  wfsDescribeFeatureType(dataSource) {\n\n    googAsserts.assert(\n      dataSource.supportsAttributes,\n      `The data source must support WFS, have a single OGCLayer that\n      is queryable in order to issue WFS DescribeFeatureType requests`\n    );\n\n    const ogcLayerNames = dataSource.getOGCLayerNames();\n\n    const url = olUri.appendParams(\n      googAsserts.assertString(dataSource.wfsUrl),\n      {\n        'REQUEST': 'DescribeFeatureType',\n        'SERVICE': 'WFS',\n        'VERSION': '2.0.0',\n        'TYPENAME': ogcLayerNames\n      }\n    );\n\n    return this.http_.get(url).then((response) => {\n      const format = new ngeoWFSDescribeFeatureType();\n      return format.read(response.data);\n    });\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMS layer capabilities\n   * @param {string} layerName Name of the WMS layer\n   * @return {?Object} Found WMS layer capability\n   * @export\n   */\n  wmsFindLayerCapability(layerCapabilities, layerName) {\n\n    let found = null;\n\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Name'] === layerName) {\n        found = layerCapability;\n        break;\n      } else if (layerCapability['Layer']) {\n        found = this.wmsFindLayerCapability(\n          layerCapability['Layer'], layerName);\n        if (found) {\n          break;\n        }\n      }\n    }\n\n    return found;\n  }\n\n  /**\n   * @param {string} baseUrl Base url of the WMS server.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmsGetCapabilities(baseUrl, opt_cache) {\n\n    const cache = opt_cache !== false;\n\n    const params = {\n      'REQUEST': 'GetCapabilities',\n      'SERVICE': 'WMS',\n      'VERSION': '1.3.0'\n    };\n\n    const url = olUri.appendParams(baseUrl, params);\n    let promise;\n\n    if (!cache || !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.wmsGetCapabilitiesPromises_[baseUrl];\n    }\n\n    googAsserts.assert(promise);\n\n    if (cache && !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      this.wmsGetCapabilitiesPromises_[baseUrl] = promise;\n    }\n\n    return promise;\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMTS layer capabilities\n   * @param {string} layerName Name of the WMTS layer, a.k.a. the identifier.\n   * @return {?Object} Found WTMS layer capability\n   * @export\n   */\n  wmtsFindLayerCapability(layerCapabilities, layerName) {\n    let found = null;\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Identifier'] === layerName) {\n        found = layerCapability;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @param {string} url Url of the WMTS server. Note that it must contain\n   *     all required arguments.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmtsGetCapabilities(url, opt_cache) {\n\n    const cache = opt_cache !== false;\n    let promise;\n\n    if (!cache || !this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMTSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.wmtsGetCapabilitiesPromises_[url];\n    }\n\n    googAsserts.assert(promise);\n\n    if (cache && !this.wmtsGetCapabilitiesPromises_[url]) {\n      this.wmtsGetCapabilitiesPromises_[url] = promise;\n    }\n\n    return promise;\n  }\n\n\n  // === PRIVATE methods ===\n\n  /**\n   * Handles the response of multiple promises that did either\n   * WMS GetFeatureInfo or WFS GetFeature requests, in which the result is\n   * a hash with key being the data source id and value the array of features.\n   *\n   * The response object itself is an array, one item being one result per\n   * promise. The idea is to return a single hash by combining the result\n   * objects.\n   *\n   * The keys are always unique, i.e. there can be multiple result objects for\n   * the same data source id.\n   *\n   * @param {!Array.<ngeox.QuerentResult>} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleCombinedQueryResult_(response) {\n    const combinedHash = {};\n    for (const hash of response) {\n      for (const dataSourceIdStr in hash) {\n        const dataSourceId = Number(dataSourceIdStr);\n        combinedHash[dataSourceId] = hash[dataSourceId];\n      }\n    }\n    return combinedHash;\n  }\n\n\n  /**\n   * Handles the result of a single WMS GetFeatureInfo or WFS GetFeature\n   * request. Read features from the response and return them.\n   *\n   * @param {!Array.<!ngeo.datasource.OGC>} dataSources List of\n   *     queryable data sources that were used to do the query.\n   * @param {number} limit The maximum number of features to get with the query.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {angular.$http.Response|number} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleQueryResult_(dataSources, limit, wfs, response) {\n    const hash = {};\n\n    for (const dataSource of dataSources) {\n      let features;\n      let tooManyFeatures;\n      let totalFeatureCount;\n\n      if (typeof response === 'number') {\n        features = [];\n        tooManyFeatures = true;\n        totalFeatureCount = response;\n      } else {\n        if (dataSource instanceof ngeoDatasourceOGC) {\n          features = this.readAndTypeFeatures_(dataSource, response.data, wfs);\n        } else {\n          features = [];\n        }\n      }\n      const dataSourceId = dataSource.id;\n      this.setUniqueIds_(features, dataSource.id);\n      hash[dataSourceId] = {\n        features,\n        limit,\n        tooManyFeatures,\n        totalFeatureCount\n      };\n    }\n\n    return hash;\n  }\n\n  /**\n   * Read and assign the type of the feature to each feature in the data.\n   * The type will be stocked in the properties of the features as\n   * \"ngeo_feature_type_\".\n   * @param {ngeo.datasource.OGC} dataSource used to read the features.\n   * @param {Document | Node | Object | string} data the response data.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @return {Array.<ol.Feature>} returned features with a type in each features.\n   * @private\n   */\n  readAndTypeFeatures_(dataSource, data, wfs) {\n    const features = [];\n    let readFeatures;\n    // Copy the types to be able to set it AND iterate on it.\n    const featureTypes = this.getSetOlFormatTypes_(dataSource, wfs).slice();\n    featureTypes.forEach((type) => {\n      // Assign temporarily a single feature type to read features separately.\n      this.getSetOlFormatTypes_(dataSource, wfs, [type]);\n      if (wfs) {\n        readFeatures = dataSource.wfsFormat.readFeatures(data);\n      } else {\n        readFeatures = dataSource.wmsFormat.readFeatures(data);\n      }\n      if (readFeatures.length > 0) {\n        readFeatures.forEach((feature) => {\n          feature.set('ngeo_feature_type_', type);\n          features.push(feature);\n        });\n      }\n    });\n    // Re-set the value to the datasource.xxxFormat to be able to re-use\n    // it later (in another query);\n    this.getSetOlFormatTypes_(dataSource, wfs, featureTypes);\n    return features;\n  }\n\n  /**\n   * Return the types defined in the format of the datasource. Can set the\n   * types if one is given.\n   * @param {ngeo.datasource.OGC} dataSource that contains the format object.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {Array.<string>=} opt_types An array of type if you want to set the\n   *     type of the format object.\n   * @return {Array.<string>} The types defined in the format.\n   * @private\n   */\n  getSetOlFormatTypes_(dataSource, wfs, opt_types) {\n    let types;\n    if (wfs) {\n      if (opt_types) {\n        dataSource.wfsFormat.setFeatureType(opt_types);\n      }\n      types = dataSource.wfsFormat.getFeatureType();\n    } else {\n      if (opt_types) {\n        dataSource.wmsFormat.setLayers(opt_types);\n      }\n      types = dataSource.wmsFormat.getLayers();\n    }\n    if (!types) {\n      return [];\n    }\n    return (Array.isArray(types)) ? types : [types];\n  }\n\n  /**\n   * Issue WFS GetFeature requests using the given combined data sources, map\n   * and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWFS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const maxFeatures = googAsserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = googAsserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const srsName = projection.getCode();\n    const wfsCount = options.wfsCount === true;\n\n    // (1) Extent (bbox), which is optional, i.e. its value can stay undefined\n    let bbox;\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const tolerancePx = options.tolerancePx;\n      googAsserts.assert(tolerancePx);\n      const tolerance = tolerancePx * resolution;\n      bbox = olExtent.buffer(\n        olExtent.createOrUpdateFromCoordinate(coordinate),\n        tolerance\n      );\n    } else {\n      bbox = options.extent;\n    }\n\n    // (2) Launch one request per combinaison of data sources\n    const wfsFormat = new olFormatWFS();\n    const xmlSerializer = new XMLSerializer();\n    for (const dataSources of combinedDataSources) {\n\n      let getFeatureCommonOptions;\n      let featureNS;\n      let featureTypes = [];\n      let url;\n      const params = {};\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!getFeatureCommonOptions) {\n          featureNS = dataSource.wfsFeatureNS;\n          const featurePrefix = dataSource.wfsFeaturePrefix;\n          const geometryName = dataSource.geometryName;\n          const outputFormat = dataSource.wfsOutputFormat;\n\n          getFeatureCommonOptions = {\n            bbox,\n            featureNS,\n            featurePrefix,\n            geometryName,\n            outputFormat,\n            srsName\n          };\n\n          url = dataSource.wfsUrl;\n\n          // All data sources combined share the same active dimensions\n          olObj.assign(params, dataSource.activeDimensions);\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        featureTypes = featureTypes.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Add filter, if any. If the case, then only one data source\n        //     is expected to be used for this request.\n        let filter;\n        if (options.filter) {\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            filter: options.filter,\n            incTime: true\n          });\n        } else if ((dataSource.filterRules && dataSource.filterRules.length) ||\n            dataSource.timeRangeValue) {\n\n          googAsserts.assert(\n            dataSources.length === 1,\n            `A data source having filterRules or timeRangeValue should issue\n            a single query, alone.`\n          );\n\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            incTime: true,\n            srsName: srsName\n          });\n        }\n\n        if (filter) {\n          getFeatureCommonOptions['filter'] = filter;\n        }\n      }\n\n      googAsserts.assert(getFeatureCommonOptions);\n      getFeatureCommonOptions.featureTypes = featureTypes;\n      googAsserts.assert(url);\n\n      // (4) Build query then launch\n      //\n      //     If we require to do a WFS GetFeature request with\n      //     `resultType: 'hits'` first, do so. In that case, if there would\n      //     be too many features returned, no GetFeature is done thereafter\n      //     and the data sources will return empty arrays in the returned\n      //     response.\n      //\n      //     If we do not need to count features first, then proceed with\n      //     an normal WFS GetFeature request.\n      const getFeatureDefer = this.q_.defer();\n      promises.push(\n        getFeatureDefer.promise.then(\n          this.handleQueryResult_.bind(this, dataSources, maxFeatures, true)\n        )\n      );\n\n      // (4.1) Count, if required\n      let countPromise;\n      if (wfsCount) {\n        const getCountOptions = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n          olObj.assign(\n            {\n              resultType: 'hits'\n            },\n            getFeatureCommonOptions\n          )\n        );\n        const featureCountXml = wfsFormat.writeGetFeature(getCountOptions);\n        const featureCountRequest = xmlSerializer.serializeToString(\n          featureCountXml);\n        const canceler = this.registerCanceler_();\n        countPromise = this.http_.post(\n          url,\n          featureCountRequest,\n          {\n            params: params,\n            headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n            timeout: canceler.promise\n          }\n        ).then(((response) => {\n          const meta = dataSources[0].wfsFormat.readFeatureCollectionMetadata(\n            response.data\n          );\n          return meta['numberOfFeatures'];\n        }).bind(this));\n      } else {\n        countPromise = this.q_.resolve();\n      }\n\n      // (4.2) After count, do GetFeature (if required)\n      countPromise.then((numberOfFeatures) => {\n        // `true` is returned if a count request was made AND there would\n        // be too many features.\n        if (numberOfFeatures === undefined || numberOfFeatures < maxFeatures) {\n\n          const getFeatureOptions = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n            olObj.assign(\n              {\n                maxFeatures\n              },\n              getFeatureCommonOptions\n            )\n          );\n          const featureRequestXml = wfsFormat.writeGetFeature(\n            getFeatureOptions);\n          const featureRequest = xmlSerializer.serializeToString(\n            featureRequestXml);\n          googAsserts.assertString(url);\n          const canceler = this.registerCanceler_();\n          this.http_.post(\n            url,\n            featureRequest,\n            {\n              params: params,\n              headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n              timeout: canceler.promise\n            }\n          ).then((response) => {\n            getFeatureDefer.resolve(response);\n          });\n\n        } else {\n          getFeatureDefer.resolve(numberOfFeatures);\n        }\n      });\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Issue WMS GetFeatureInfo requests using the given combined data sources,\n   * map and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWMS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const FEATURE_COUNT = googAsserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = googAsserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const projCode = projection.getCode();\n\n    // (1) Coordinate, which is required to issue WMS GetFeatureInfo requests\n    const coordinate = options.coordinate;\n    googAsserts.assert(coordinate);\n\n    // (2) Launch one request per combinaison of data sources\n    for (const dataSources of combinedDataSources) {\n\n      let url;\n      let LAYERS = [];\n      let INFO_FORMAT;\n      let activeDimensionsSet = false;\n      const params = {};\n      let filterString = null;\n      let filtrableLayerName = null;\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!INFO_FORMAT) {\n          INFO_FORMAT = dataSource.wmsInfoFormat;\n          url = dataSource.wmsUrl;\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        LAYERS = LAYERS.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Manage active dimensions, which are added directly to the\n        //     query parameters. Note that this occurs only ONCE, i.e.\n        //     for the first data source, because all data sources here have\n        //     been combined together, therefore they share the same active\n        //     dimensions.\n        if (!activeDimensionsSet) {\n          olObj.assign(params, dataSource.activeDimensions);\n          activeDimensionsSet = true;\n        }\n\n        // (d) Add filter, if any. If there is a filter on the data source,\n        //     then it is expected that one request will be sent for this\n        //     data source only.\n        if (dataSource.filterRules && dataSource.filterRules.length) {\n          googAsserts.assert(dataSources.length === 1);\n          filtrableLayerName = dataSource.getFiltrableOGCLayerName();\n          filterString = this.ngeoRuleHelper_.createFilterString({\n            dataSource: dataSource,\n            srsName: projCode\n          });\n        }\n\n        // (e) Add TIME parameter if the data source has a time range value.\n        //     If that's the case, then it is expected that one request will be\n        //     sent for this data source only.\n        if (dataSource.timeRangeValue !== null && dataSource.timeProperty) {\n          googAsserts.assert(dataSources.length === 1);\n          params['TIME'] = this.ngeoWMSTime_.formatWMSTimeParam(\n            dataSource.timeProperty,\n            dataSource.timeRangeValue\n          );\n        }\n      }\n\n      params['LAYERS'] = LAYERS;\n      params['QUERY_LAYERS'] = LAYERS;\n\n      // Manage 'FILTER' parameter\n      if (filterString && filtrableLayerName) {\n        let filterParamValue = null;\n        if (LAYERS.length === 1) {\n          // When there's only one layer in the `LAYERS` parameters, then\n          // the filter string is given as-is.\n          filterParamValue = filterString;\n        } else {\n          // When there's more then one layer, then each filter must be wrapped\n          // between parenthesis and the order must also match the `LAYERS`\n          // parameter as well.\n          const filterParamValues = [];\n          for (let i = 0, ii = LAYERS.length; i < ii; i++) {\n            if (LAYERS[i] === filtrableLayerName) {\n              filterParamValues.push(`(${filterString})`);\n            } else {\n              filterParamValues.push('()');\n            }\n          }\n          filterParamValue = filterParamValues.join('');\n        }\n        params['FILTER'] = filterParamValue;\n      }\n\n      googAsserts.assert(url);\n      const wmsSource = new olSourceImageWMS({\n        params,\n        url\n      });\n\n      // (4) Build query url, then launch\n      const wmsGetFeatureInfoUrl = googAsserts.assertString(\n        wmsSource.getGetFeatureInfoUrl(\n          coordinate, resolution, projCode, {\n            // Without extern, quoting is necessary\n            'FEATURE_COUNT': FEATURE_COUNT,\n            'INFO_FORMAT': INFO_FORMAT\n          }\n        )\n      );\n\n      const canceler = this.registerCanceler_();\n      promises.push(\n        this.http_.get(\n          wmsGetFeatureInfoUrl,\n          {\n            timeout: canceler.promise\n          }\n        ).then(\n          this.handleQueryResult_.bind(this, dataSources, FEATURE_COUNT, false)\n        )\n      );\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WFS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWFSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWFS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWFS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WMS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWMSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWMS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWMS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * Checks if a data source can be queried, which requires it to be:\n   * - visible\n   * - in range\n   * - queryable (using the native getter)\n   * - have at least one OGC layer in range of current map view resolution.\n   *\n   * @param {ngeo.datasource.DataSource} ds Data source\n   * @param {number} res Resolution.\n   * @return {boolean} Whether the data source is queryable\n   * @private\n   */\n  isDataSourceQueryable_(ds, res) {\n    let queryable = ds.visible && ds.inRange && ds.queryable;\n    if (queryable && ds instanceof ngeoDatasourceOGC) {\n      const ogcDS = /** @type {!ngeo.datasource.OGC} */ (ds);\n      queryable = ogcDS.isAnyOGCLayerInRange(res, true);\n    }\n    return queryable;\n  }\n\n  /**\n   * Make sure that feature ids are unique, because the same features might\n   * be returned for different layers.\n   * @param {Array.<ol.Feature>} features Features\n   * @param {number} dataSourceId Data source id.\n   * @private\n   */\n  setUniqueIds_(features, dataSourceId) {\n    features.forEach((feature) => {\n      if (feature.getId() !== undefined) {\n        const id = `${dataSourceId}_${feature.getId()}`;\n        feature.setId(id);\n      }\n    });\n  }\n\n  /**\n   * @return {angular.$q.Deferred} A deferred that can be resolved to cancel a\n   *    HTTP request.\n   * @private\n   */\n  registerCanceler_() {\n    const canceler = this.q_.defer();\n    this.requestCancelers_.push(canceler);\n    return canceler;\n  }\n\n  /**\n   * @private\n   */\n  cancelStillRunningRequests_() {\n    for (const canceler of this.requestCancelers_) {\n      canceler.resolve();\n    }\n    this.requestCancelers_.length = 0;\n  }\n};\n\n\n/**\n * @typedef {!Array.<!Array.<!ngeo.datasource.OGC>>}\n */\nexports.CombinedDataSources;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoQuerent', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoQuerent', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.WFSAttribute\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttribute from 'ngeo/format/Attribute.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\n\nconst exports = class {\n\n\n  /**\n   * A format that reads the complexType from a WFS DescribeFeatureType\n   * response for a single set of attributes and return an array of\n   * `ngeox.Attribute`.\n   */\n\n\n  /**\n   * @param {Array.<Object>} complexTypeElements Complex type element\n   * @return {Array.<ngeox.Attribute>} Attributes\n   */\n  read(complexTypeElements) {\n    return complexTypeElements.map(this.readFromComplexTypeElement_);\n  }\n\n\n  /**\n   * @param {Object} object Complex type element\n   * @return {ngeox.Attribute} Attribute\n   * @private\n   */\n  readFromComplexTypeElement_(object) {\n\n    const name = googAsserts.assertString(object['name']);\n    const alias = 'alias' in object ?\n      googAsserts.assertString(object['alias']) : null;\n    const required = object['minOccurs'] != '0';\n\n    const attribute = {\n      name,\n      alias,\n      required\n    };\n\n    const type = googAsserts.assertString(object['type']);\n\n    if (!ngeoFormatAttribute.setGeometryType(attribute, type)) {\n      if (type === 'gml:TimeInstantType' || type === 'dateTime') {\n        attribute.type = ngeoFormatAttributeType.DATETIME;\n      } else if (type === 'date') {\n        attribute.type = ngeoFormatAttributeType.DATE;\n      } else if (type === 'time') {\n        attribute.type = ngeoFormatAttributeType.TIME;\n      } else if (type === 'decimal' || type === 'double') {\n        attribute.type = ngeoFormatAttributeType.NUMBER;\n        attribute.numType = ngeoFormatXSDAttribute.NumberType.FLOAT;\n      } else if (type === 'integer' || type === 'long') {\n        attribute.type = ngeoFormatAttributeType.NUMBER;\n        attribute.numType = ngeoFormatXSDAttribute.NumberType.INTEGER;\n      } else if (type === 'boolean') {\n        attribute.type = ngeoFormatAttributeType.BOOLEAN;\n      } else {\n        attribute.type = ngeoFormatAttributeType.TEXT;\n      }\n    }\n\n    return attribute;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.Helper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoFormatWFSAttribute from 'ngeo/format/WFSAttribute.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport * as olEvents from 'ol/events.js';\n\nconst exports = class {\n  /**\n   * A service that provides utility methods to manipulate or get data sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data source\n   *     service.\n   * @param {ngeo.query.Querent} ngeoQuerent Ngeo querent service.\n   * @ngdoc service\n   * @ngname ngeoDataSourcesHelper\n   * @ngInject\n   */\n  constructor($q, ngeoDataSources, ngeoQuerent) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Object.<number, ngeo.datasource.DataSource>}\n     * @private\n     */\n    this.cache_ = {};\n\n    // Events\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n    olEvents.listen(this.collection_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n  /**\n   * @return {ngeox.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?ngeo.datasource.DataSource} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return this.cache_[id] || null;\n  }\n\n  /**\n   * Get the attributes of a data source. If they are not set, they are obtained\n   * from the querent service using a WFS DescribeFeatureType request, then set\n   * in the data source.\n   *\n   * Please, note that in order to be dynamically set, the data source must\n   * only have 1 ogcLayer set and be queryable.\n   *\n   * @param {ngeo.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  getDataSourceAttributes(dataSource) {\n\n    const wfsDescribeFeatureTypeDefer = this.q_.defer();\n\n    if (dataSource.attributes) {\n      wfsDescribeFeatureTypeDefer.resolve(dataSource.attributes);\n    } else {\n      this.ngeoQuerent_.wfsDescribeFeatureType(\n        dataSource\n      ).then((featureType) => {\n        // We know, at this point, that there's only one definition that\n        // was returned.  Just to be sure, let's do a bunch of assertions.\n        const ogcLayerName = dataSource.getOGCLayerNames()[0];\n        googAsserts.assertString(\n          ogcLayerName, 'The data source should have only one ogcLayer.');\n        const element = featureType.element[0];\n        googAsserts.assert(element.name === ogcLayerName);\n        googAsserts.assert(\n          featureType.complexType[0].name === element.type);\n\n        const complexContent = featureType['complexType'][0]['complexContent'];\n        const attributes = new ngeoFormatWFSAttribute().read(complexContent);\n\n        // Set the attributes in the data source\n        dataSource.setAttributes(attributes);\n\n        wfsDescribeFeatureTypeDefer.resolve(attributes);\n      });\n    }\n\n    return wfsDescribeFeatureTypeDefer.promise;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. Add it\n   * to the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = googAsserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    this.cache_[dataSource.id] = dataSource;\n  }\n\n  /**\n   * Called when a data source is removed from the ngeo collection. Remove it\n   * from the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = googAsserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    delete this.cache_[dataSource.id];\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSourcesHelper', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoDataSourcesHelper', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.Snapping\n */\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Translate\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionTranslate from 'ol/interaction/Translate.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * An extension of the OpenLayers Translate interaction that adds the following\n * features to it:\n *\n * - show a small arrow icon in the middle of the features allowing a visual\n *   aspect that tells the user \"this feature can be moved\"\n * - pressing the ESC key automatically deactivate the interaction.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Translate}\n * @param {ngeox.interaction.TranslateOptions} options Options.\n */\nconst exports = function(options) {\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {!Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = {};\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.myFeatures_ = options.features !== undefined ? options.features : null;\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.vectorSource_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: this.vectorSource_,\n    style: options.style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionTranslate.call(\n    this, /** @type {olx.interaction.TranslateOptions} */ (options));\n};\n\nolBase.inherits(exports, olInteractionTranslate);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionTranslate.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.vectorLayer_.setMap(null);\n  }\n\n  olInteractionTranslate.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.vectorLayer_.setMap(map);\n  }\n\n  this.setState_();\n};\n\n\n/**\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const features = this.myFeatures_;\n  const keys = this.listenerKeys_;\n\n  if (map && active && features) {\n    features.forEach(feature => this.addFeature_(feature));\n    keys.push(\n      olEvents.listen(features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(features, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n\n    if (map) {\n      const elem = map.getTargetElement();\n      elem.style.cursor = 'default';\n    }\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    features.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  this.featureListenerKeys_[uid] = olEvents.listen(\n    geometry,\n    'change',\n    this.handleGeometryChange_.bind(this, feature),\n    this\n  );\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.vectorSource_.addFeature(centerFeature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  if (this.featureListenerKeys_[uid]) {\n    olEvents.unlistenByKey(this.featureListenerKeys_[uid]);\n    delete this.featureListenerKeys_[uid];\n\n    this.vectorSource_.removeFeature(this.centerFeatures_[uid]);\n    delete this.centerFeatures_[uid];\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature being moved.\n * @param {ol.events.Event} evt Event.\n * @private\n */\nexports.prototype.handleGeometryChange_ = function(feature,\n  evt) {\n  const geometry = evt.target;\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const uid = olBase.getUid(feature);\n  this.centerFeatures_[uid].setGeometry(point);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.geom.Point} The center point of the geometry.\n * @private\n */\nexports.prototype.getGeometryCenterPoint_ = function(\n  geometry) {\n\n  let center;\n  let point;\n\n  if (geometry instanceof olGeomPolygon) {\n    point = geometry.getInteriorPoint();\n  } else if (geometry instanceof olGeomLineString) {\n    center = geometry.getCoordinateAt(0.5);\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  if (!point && center) {\n    point = new olGeomPoint(center);\n  }\n\n  googAsserts.assert(point, 'Point should be thruthy');\n\n  return point;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Rotate\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction to rotate features.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.coordinate_ = null;\n\n  /**\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.centerCoordinate_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionPointer.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n    this.features_.forEach(feature => this.addFeature_(feature));\n    this.listenerKeys_.push(\n      olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this)\n    );\n\n  } else {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n    this.features_.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  feature.set('angle', 0);\n\n  // Add the center icon to the overlay\n  const uid = olBase.getUid(feature);\n  const point = new olGeomPoint(this.getCenterCoordinate_(geometry));\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.overlay_.getSource().addFeature(centerFeature);\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.feature_ = null;\n  //this.overlay_.getSource().removeFeature(feature);\n\n  if (feature) {\n    const uid = olBase.getUid(feature);\n\n    if (this.centerFeatures_[uid]) {\n      this.overlay_.getSource().removeFeature(this.centerFeatures_[uid]);\n      delete this.centerFeatures_[uid];\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  let feature = map.forEachFeatureAtPixel(evt.pixel,\n    (feature, layer) => feature, undefined);\n\n  if (feature) {\n    let found = false;\n    this.features_.forEach((f) => {\n      if (olBase.getUid(f) == olBase.getUid(feature)) {\n        found = true;\n      }\n    });\n    if (!found) {\n      feature = null;\n    }\n  }\n\n  if (feature) {\n    this.coordinate_ = evt.coordinate;\n    this.feature_ = feature;\n    const geometry = (this.feature_.getGeometry());\n    if (geometry !== undefined) {\n      this.centerCoordinate_ = this.getCenterCoordinate_(geometry);\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.Coordinate} The center coordinate of the geometry.\n * @private\n */\nexports.prototype.getCenterCoordinate_ = function(\n  geometry) {\n\n  let center;\n\n  if (geometry instanceof olGeomLineString) {\n    center = geometry.getFlatMidpoint();\n  } else if (geometry instanceof olGeomPolygon) {\n    center = geometry.getFlatInteriorPoint();\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  return center;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (this.feature_.getGeometry());\n\n  const oldX = this.coordinate_[0];\n  const oldY = this.coordinate_[1];\n\n  const centerX = this.centerCoordinate_[0];\n  const centerY = this.centerCoordinate_[1];\n\n  const dx1 = oldX - centerX;\n  const dy1 = oldY - centerY;\n  const dx0 = evt.coordinate[0] - centerX;\n  const dy0 = evt.coordinate[1] - centerY;\n\n  this.coordinate_[0] = evt.coordinate[0];\n  this.coordinate_[1] = evt.coordinate[1];\n\n  const a0 = Math.atan2(dy0, dx0);\n  const a1 = Math.atan2(dy1, dx1);\n  const angle = a1 - a0;\n\n  geometry.rotate(-angle, [centerX, centerY]);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.RotateEvent} */\n    const event = new ngeoCustomEvent('rotateend', {feature: this.feature_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n    this.setActive(false);\n  }\n  return false;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.features\n */\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n","/**\n * @module ngeo.Menu\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olOverlay from 'ol/Overlay.js';\nimport olOverlayPositioning from 'ol/OverlayPositioning.js';\n\n/**\n * @classdesc\n * An OpenLayers overlay that shows a contextual menu with configurable actions\n * anchored from its top left to a specific location. An event is fired when\n * any of the action is clicked.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {ngeox.MenuOptions=} menuOptions Menu options.\n * @param {olx.OverlayOptions=} opt_overlayOptions Overlay options.\n */\nconst exports = function(menuOptions, opt_overlayOptions) {\n\n  const options = opt_overlayOptions !== undefined ? opt_overlayOptions : {};\n\n  options.positioning = olOverlayPositioning.TOP_LEFT;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.clickOutListenerKey_ = null;\n\n  const contentEl = $('<div/>', {\n    'class': 'panel panel-default'\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoClose_ = menuOptions.autoClose !== undefined ?\n    menuOptions.autoClose : true;\n\n  // titleEl\n  if (menuOptions.title) {\n    const headerEl = $('<div>', {\n      'class': 'panel-heading'\n    }).appendTo(contentEl);\n\n    $('<span>', {\n      text: menuOptions.title\n    }).appendTo(headerEl);\n  }\n\n  // actionsEl\n  const actionsEl = $('<div>', {\n    'class': 'list-group'\n  }).appendTo(contentEl);\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.actions_ = [];\n\n  menuOptions.actions.forEach((action) => {\n    this.actions_.push(\n      $('<button>', {\n        'class': 'list-group-item',\n        'data-name': action.name,\n        'text': [\n          ' ',\n          (action.label) !== undefined ? action.label : action.name\n        ].join('')\n      })\n        .appendTo(actionsEl)\n        .prepend($('<span>', {\n          'class': action.cls !== undefined ? action.cls : ''\n        }))\n    );\n  });\n\n  options.element = contentEl[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @param {ol.PluggableMap|undefined} map Map.\n * @export\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.actions_.forEach((action) => {\n      const data = action.data();\n      this.listenerKeys_.push(\n        olEvents.listen(\n          action[0],\n          'click',\n          this.handleActionClick_.bind(this, data.name)\n        )\n      );\n    });\n\n    // Autoclose the menu when clicking anywhere else than the menu\n    this.listenerKeys_.push(\n      olEvents.listen(\n        map,\n        'pointermove',\n        this.handleMapPointerMove_,\n        this\n      )\n    );\n  }\n\n};\n\n\n/**\n * Opens the menu at the desited coordinate. Also starts listening for the\n * clickout if autoClose is enabled.\n * @param {ol.Coordinate} coordinate Where to open the menu.\n * @export\n */\nexports.prototype.open = function(coordinate) {\n  this.setPosition(coordinate);\n  if (this.autoClose_) {\n    this.clickOutListenerKey_ = olEvents.listen(\n      document.documentElement,\n      'mousedown',\n      this.handleClickOut_,\n      this\n    );\n  }\n\n};\n\n\n/**\n * @export\n */\nexports.prototype.close = function() {\n  this.setPosition(undefined);\n\n  if (this.clickOutListenerKey_ !== null) {\n    olEvents.unlistenByKey(this.clickOutListenerKey_);\n  }\n};\n\n\n/**\n * @param {string} action The action name that was clicked.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleActionClick_ = function(action, evt) {\n\n  this.dispatchEvent(new ngeoCustomEvent('actionclick', {\n    action: action\n  }));\n\n  if (this.autoClose_) {\n    this.close();\n  }\n\n  evt.stopPropagation();\n};\n\n\n/**\n * Handles clicks out of the menu. If the menu is visible, close it.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleClickOut_ = function(evt) {\n  const element = this.getElement();\n  if (element && $(evt.target).closest(element).length === 0) {\n    this.close();\n  }\n};\n\n\n/**\n * When the mouse is hovering the menu, set the event coordinate and pixel\n * values to Infinity to do as if the mouse had been move out of range of the\n * map. This prevents behaviours such as vertex still appearing while mouse\n * hovering edges of features bound to an active modify control while the\n * cursor is on top of the menu.\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handleMapPointerMove_ = function(evt) {\n  const target = evt.originalEvent.target;\n  googAsserts.assertInstanceof(target, Element);\n\n  const element = this.getElement();\n  googAsserts.assertInstanceof(element, Element);\n\n  if (element.contains(target)) {\n    evt.coordinate = [Infinity, Infinity];\n    evt.pixel = [Infinity, Infinity];\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\n\n\nexport default exports;\n","/**\n * @module ngeo.download.service\n */\nimport ngeoUtils from 'ngeo/utils.js';\n\nimport {saveAs} from 'file-saver';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDownload', []);\n\n/**\n * A service to start a download for a file.\n *\n * @return {ngeox.Download} The download function.\n * @ngdoc service\n * @ngname ngeoDownload\n */\nexports.factory_ = function() {\n  /**\n   * @param {string} content The file content.\n   * @param {string} fileName The file name.\n   * @param {string=} opt_fileType The file type. If not given,\n   *    `text/plain;charset=utf-8` is used.\n   */\n  function download(content, fileName, opt_fileType) {\n    // Safari does not properly work with FileSaver. Using the the type 'text/plain'\n    // makes it a least possible to show the file content so that users can\n    // do a manual download with \"Save as\".\n    // See also: https://github.com/eligrey/FileSaver.js/issues/12\n    /** @type {string} */\n    const fileType = opt_fileType !== undefined && !ngeoUtils.isSafari() ?\n      opt_fileType : 'text/plain;charset=utf-8';\n\n    const blob = new Blob([content], {type: fileType});\n    saveAs(blob, fileName);\n  }\n\n  return download;\n};\n\nexports.factory('ngeoDownload', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.DataSourceBeingFiltered\n */\nconst exports = {};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourceBeingFiltered', []);\n// type gmfx.datasource.DataSourceBeingFiltered\nexports.module.value('gmfDataSourceBeingFiltered', {\n  dataSource: null\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.message.modalComponent\n */\nimport 'jquery-ui/ui/widgets/draggable.js';\nimport 'bootstrap/js/modal.js';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoModal', []);\n\n/**\n * Provides the \"ngeoModal\" component.\n *\n * This component shows a Bootstrap modal when the `ngModel` expression\n * evaluates to `true`, and it hides it when the `ngModel` expression\n * evaluates to `false`.\n *\n * The components also changes the `ngModel` value when the user manually\n * closes the modal.\n *\n * This component is based on Bootstrap's `modal` classes and associated\n * jQuery plugin.\n *\n *     <ngeo-modal ng-model=\"modalShown\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *         <h4 class=\"modal-title\">The Title</h4>\n *       </div>\n *       <div class=\"modal-body\">Some content</div>\n *     </ngeo-modal>\n *\n * Note: for z-indexing purpose, the modal DOM element is automatically moved\n * to document body element.\n *\n * See our live example: [../examples/modal.html](../examples/modal.html)\n *\n * @htmlAttribute {boolean} ngeo-modal-resizable Whether the modal can be\n *     resized or not. Defaults to `false`.\n * @htmlAttribute {boolean} ngeo-modal-closable Whether the modal can be\n *     closed by clicking outside it or by hiting the `escape` keyboard key. Defaults to `true`.\n * @ngdoc component\n * @ngname ngeoModal\n * @type {!angular.Component}\n */\nexports.component_ = {\n  template: `<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <ng-transclude></ng-transclude>\n      </div>\n    </div>\n  </div>`,\n  require: {\n    'ngModel': 'ngModel'\n  },\n  transclude: true,\n  controller: 'ngeoModalController',\n  bindings: {\n    'resizable': '<ngeoModalResizable',\n    'closable': '<ngeoModalClosable'\n  }\n};\n\nexports.component('ngeoModal', exports.component_);\n\nexports.Controller_ = class {\n  /**\n   * @ngInject\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!jQuery} $element Element.\n   */\n  constructor($scope, $element) {\n    /**\n     * @private\n     * @type {!jQuery}\n     */\n    this.$element_ = $element;\n\n    /**\n     * @private\n     * @type {!angular.Scope}\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @private\n     * @type {jQuery}\n     */\n    this.modal_;\n\n    /**\n     * @export\n     * @type {boolean}\n     */\n    this.closable;\n\n    /**\n     * @export\n     * @type {boolean}\n     */\n    this.resizable;\n\n    /**\n     * @export\n     * @type {angular.NgModelController|null}\n     */\n    this.ngModel;\n  }\n\n  $onInit() {\n    this.closable = this.closable !== false;\n\n    this.modal_ = this.$element_.children();\n\n    if (!this.closable) {\n      this.modal_.attr('data-keyboard', false);\n      this.modal_.attr('data-backdrop', 'static');\n    }\n\n    this.resizable = !!this.resizable;\n\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable();\n    if (this.resizable) {\n      dialog.resizable();\n    }\n\n    this.ngModel.$render = () => {\n      this.modal_.modal(this.ngModel.$viewValue ? 'show' : 'hide');\n    };\n\n    this.modal_.on('shown.bs.modal hidden.bs.modal', (e) => {\n      const type = e.type;\n      googAsserts.assert(type == 'shown' || type == 'hidden');\n      this.ngModel.$setViewValue(type == 'shown');\n    });\n  }\n\n  $onDestroy() {\n    // Force close the modal.\n    this.modal_.modal('hide');\n    this.modal_.modal('removeBackdrop');\n    // Destroy the children's plugins.\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable('destroy');\n    if (this.resizable) {\n      dialog.resizable('destroy');\n    }\n  }\n};\n\nexports.controller('ngeoModalController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Notification\n */\nimport 'bootstrap/js/alert.js';\nimport googAsserts from 'goog/asserts.js';\n\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\n\nexport default exports;\n","/*!\n * @copyright Copyright &copy; Kartik Visweswaran, Krajee.com, 2014 - 2017\n * @version 1.3.4\n *\n * Date formatter utility library that allows formatting date/time variables or Date objects using PHP DateTime format.\n * This library is a standalone javascript library and does not depend on other libraries or plugins like jQuery.\n *\n * @see http://php.net/manual/en/function.date.php\n *\n * For more JQuery plugins visit http://plugins.krajee.com\n * For more Yii related demos visit http://demos.krajee.com\n */\n\n/*eslint valid-jsdoc: 0 */\n/*eslint quotes: 0 */\n/*eslint indent: 0 */\n/*eslint default-case: 0 */\n/*eslint prefer-rest-params: 0 */\n/*eslint prefer-template: 0 */\n\n\"use strict\";\n\nconst DAY = 1000 * 60 * 60 * 24;\nconst HOUR = 3600;\n\nfunction _compare(str1, str2) {\n    return typeof str1 === 'string' && typeof str2 === 'string' && str1.toLowerCase() === str2.toLowerCase();\n}\nfunction _lpad(value, length, chr) {\n    const val = value.toString();\n    chr = chr || '0';\n    return val.length < length ? _lpad(chr + val, length) : val;\n}\nfunction _extend(out) {\n    out = out || {};\n    for (let i = 1; i < arguments.length; i++) {\n        const obj = arguments[i];\n        if (!obj) {\n            continue;\n        }\n        for (const key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                if (typeof obj[key] === 'object') {\n                    _extend(out[key], obj[key]);\n                } else {\n                    out[key] = obj[key];\n                }\n            }\n        }\n    }\n    return out;\n}\nfunction _indexOf(val, arr) {\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i].toLowerCase() === val.toLowerCase()) {\n            return i;\n        }\n    }\n    return -1;\n}\nconst defaultSettings = {\n    dateSettings: {\n        days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        daysShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        months: [\n            'January', 'February', 'March', 'April', 'May', 'June', 'July',\n            'August', 'September', 'October', 'November', 'December'\n        ],\n        monthsShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        meridiem: ['AM', 'PM'],\n        ordinal: function(number) {\n            const n = number % 10, suffixes = {1: 'st', 2: 'nd', 3: 'rd'};\n            return Math.floor(number % 100 / 10) === 1 || !suffixes[n] ? 'th' : suffixes[n];\n        }\n    },\n    separators: /[ \\-+/.T:@]/g,\n    validParts: /[dDjlNSwzWFmMntLoYyaABgGhHisueTIOPZcrU]/g,\n    intParts: /[djwNzmnyYhHgGis]/g,\n    tzParts: /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g,\n    tzClip: /[^-+\\dA-Z]/g\n};\n\nexport default class DateFormatter {\n    constructor(options) {\n        const self = this, config = _extend(defaultSettings, options);\n        self.dateSettings = config.dateSettings;\n        self.separators = config.separators;\n        self.validParts = config.validParts;\n        self.intParts = config.intParts;\n        self.tzParts = config.tzParts;\n        self.tzClip = config.tzClip;\n    }\n\n    getMonth(val) {\n        const self = this;\n        let i = _indexOf(val, self.dateSettings.monthsShort) + 1;\n        if (i === 0) {\n            i = _indexOf(val, self.dateSettings.months) + 1;\n        }\n        return i;\n    }\n    parseDate(vDate, vFormat) {\n        const self = this, vSettings = self.dateSettings,\n            out = {date: null, year: null, month: null, day: null, hour: 0, min: 0, sec: 0};\n        let vDateFlag = false, vTimeFlag = false, i;\n        if (!vDate) {\n            return null;\n        }\n        if (vDate instanceof Date) {\n            return vDate;\n        }\n        if (vFormat === 'U') {\n            i = parseInt(vDate);\n            return i ? new Date(i * 1000) : vDate;\n        }\n        switch (typeof vDate) {\n            case 'number':\n                return new Date(vDate);\n            case 'string':\n                break;\n            default:\n                return null;\n        }\n        const vFormatParts = vFormat.match(self.validParts);\n        if (!vFormatParts || vFormatParts.length === 0) {\n            throw new Error(\"Invalid date format definition.\");\n        }\n        const vDateParts = vDate.replace(self.separators, '\\0').split('\\0');\n        for (i = 0; i < vDateParts.length; i++) {\n            const vDatePart = vDateParts[i];\n            const iDatePart = parseInt(vDatePart);\n            switch (vFormatParts[i]) {\n                case 'y':\n                case 'Y':\n                    if (iDatePart) {\n                        const len = vDatePart.length;\n                        out.year = len === 2 ? parseInt((iDatePart < 70 ? '20' : '19') + vDatePart) : iDatePart;\n                    } else {\n                        return null;\n                    }\n                    vDateFlag = true;\n                    break;\n                case 'm':\n                case 'n':\n                case 'M':\n                case 'F':\n                    if (isNaN(iDatePart)) {\n                        const vMonth = self.getMonth(vDatePart);\n                        if (vMonth > 0) {\n                            out.month = vMonth;\n                        } else {\n                            return null;\n                        }\n                    } else {\n                        if (iDatePart >= 1 && iDatePart <= 12) {\n                            out.month = iDatePart;\n                        } else {\n                            return null;\n                        }\n                    }\n                    vDateFlag = true;\n                    break;\n                case 'd':\n                case 'j':\n                    if (iDatePart >= 1 && iDatePart <= 31) {\n                        out.day = iDatePart;\n                    } else {\n                        return null;\n                    }\n                    vDateFlag = true;\n                    break;\n                case 'g':\n                case 'h':\n                    const vMeriIndex = (vFormatParts.indexOf('a') > -1) ? vFormatParts.indexOf('a') :\n                        (vFormatParts.indexOf('A') > -1) ? vFormatParts.indexOf('A') : -1;\n                    const mer = vDateParts[vMeriIndex];\n                    if (vMeriIndex !== -1) {\n                        const vMeriOffset = _compare(mer, vSettings.meridiem[0]) ? 0 :\n                            (_compare(mer, vSettings.meridiem[1]) ? 12 : -1);\n                        if (iDatePart >= 1 && iDatePart <= 12 && vMeriOffset !== -1) {\n                            out.hour = iDatePart % 12 === 0 ? vMeriOffset : iDatePart + vMeriOffset;\n                        } else {\n                            if (iDatePart >= 0 && iDatePart <= 23) {\n                                out.hour = iDatePart;\n                            }\n                        }\n                    } else {\n                        if (iDatePart >= 0 && iDatePart <= 23) {\n                            out.hour = iDatePart;\n                        } else {\n                            return null;\n                        }\n                    }\n                    vTimeFlag = true;\n                    break;\n                case 'G':\n                case 'H':\n                    if (iDatePart >= 0 && iDatePart <= 23) {\n                        out.hour = iDatePart;\n                    } else {\n                        return null;\n                    }\n                    vTimeFlag = true;\n                    break;\n                case 'i':\n                    if (iDatePart >= 0 && iDatePart <= 59) {\n                        out.min = iDatePart;\n                    } else {\n                        return null;\n                    }\n                    vTimeFlag = true;\n                    break;\n                case 's':\n                    if (iDatePart >= 0 && iDatePart <= 59) {\n                        out.sec = iDatePart;\n                    } else {\n                        return null;\n                    }\n                    vTimeFlag = true;\n                    break;\n            }\n        }\n        if (vDateFlag === true && out.year && out.month && out.day) {\n            out.date = new Date(out.year, out.month - 1, out.day, out.hour, out.min, out.sec, 0);\n        } else {\n            if (vTimeFlag !== true) {\n                return null;\n            }\n            out.date = new Date(0, 0, 0, out.hour, out.min, out.sec, 0);\n        }\n        return out.date;\n    }\n    guessDate(vDateStr, vFormat) {\n        if (typeof vDateStr !== 'string') {\n            return vDateStr;\n        }\n        const self = this, vParts = vDateStr.replace(self.separators, '\\0').split('\\0'), vPattern = /^[djmn]/g,\n            vFormatParts = vFormat.match(self.validParts), vDate = new Date();\n\n        if (!vPattern.test(vFormatParts[0])) {\n            return vDateStr;\n        }\n\n        for (let i = 0; i < vParts.length; i++) {\n            let vDigit = 2;\n            const iPart = vParts[i];\n            const iSec = parseInt(iPart.substr(0, 2));\n            if (isNaN(iSec)) {\n                return null;\n            }\n            switch (i) {\n                case 0:\n                    if (vFormatParts[0] === 'm' || vFormatParts[0] === 'n') {\n                        vDate.setMonth(iSec - 1);\n                    } else {\n                        vDate.setDate(iSec);\n                    }\n                    break;\n                case 1:\n                    if (vFormatParts[0] === 'm' || vFormatParts[0] === 'n') {\n                        vDate.setDate(iSec);\n                    } else {\n                        vDate.setMonth(iSec - 1);\n                    }\n                    break;\n                case 2:\n                    let vYear = vDate.getFullYear();\n                    const len = iPart.length;\n                    vDigit = len < 4 ? len : 4;\n                    vYear = parseInt(len < 4 ? vYear.toString().substr(0, 4 - len) + iPart : iPart.substr(0, 4));\n                    if (!vYear) {\n                        return null;\n                    }\n                    vDate.setFullYear(vYear);\n                    break;\n                case 3:\n                    vDate.setHours(iSec);\n                    break;\n                case 4:\n                    vDate.setMinutes(iSec);\n                    break;\n                case 5:\n                    vDate.setSeconds(iSec);\n                    break;\n            }\n            const n = iPart.substr(vDigit);\n            if (n.length > 0) {\n                vParts.splice(i + 1, 0, n);\n            }\n        }\n        return vDate;\n    }\n    parseFormat(vChar, vDate) {\n        let fmt = null;\n        const self = this, vSettings = self.dateSettings, backslash = /\\\\?(.?)/gi, doFormat = function(t, s) {\n            return fmt[t] ? fmt[t]() : s;\n        };\n        fmt = {\n            /////////\n            // DAY //\n            /////////\n            /**\n             * Day of month with leading 0: `01..31`\n             * @return {string}\n             */\n            d() {\n                return _lpad(fmt.j(), 2);\n            },\n            /**\n             * Shorthand day name: `Mon...Sun`\n             * @return {string}\n             */\n            D() {\n                return vSettings.daysShort[fmt.w()];\n            },\n            /**\n             * Day of month: `1..31`\n             * @return {number}\n             */\n            j() {\n                return vDate.getDate();\n            },\n            /**\n             * Full day name: `Monday...Sunday`\n             * @return {number}\n             */\n            l() {\n                return vSettings.days[fmt.w()];\n            },\n            /**\n             * ISO-8601 day of week: `1[Mon]..7[Sun]`\n             * @return {number}\n             */\n            N() {\n                return fmt.w() || 7;\n            },\n            /**\n             * Day of week: `0[Sun]..6[Sat]`\n             * @return {number}\n             */\n            w() {\n                return vDate.getDay();\n            },\n            /**\n             * Day of year: `0..365`\n             * @return {number}\n             */\n            z() {\n                const a = new Date(fmt.Y(), fmt.n() - 1, fmt.j()), b = new Date(fmt.Y(), 0, 1);\n                return Math.round((a - b) / DAY);\n            },\n\n            //////////\n            // WEEK //\n            //////////\n            /**\n             * ISO-8601 week number\n             * @return {number}\n             */\n            W() {\n                const a = new Date(fmt.Y(), fmt.n() - 1, fmt.j() - fmt.N() + 3), b = new Date(a.getFullYear(), 0, 4);\n                return _lpad(1 + Math.round((a - b) / DAY / 7), 2);\n            },\n\n            ///////////\n            // MONTH //\n            ///////////\n            /**\n             * Full month name: `January...December`\n             * @return {string}\n             */\n            F() {\n                return vSettings.months[vDate.getMonth()];\n            },\n            /**\n             * Month w/leading 0: `01..12`\n             * @return {string}\n             */\n            m() {\n                return _lpad(fmt.n(), 2);\n            },\n            /**\n             * Shorthand month name; `Jan...Dec`\n             * @return {string}\n             */\n            M() {\n                return vSettings.monthsShort[vDate.getMonth()];\n            },\n            /**\n             * Month: `1...12`\n             * @return {number}\n             */\n            n() {\n                return vDate.getMonth() + 1;\n            },\n            /**\n             * Days in month: `28...31`\n             * @return {number}\n             */\n            t() {\n                return (new Date(fmt.Y(), fmt.n(), 0)).getDate();\n            },\n\n            //////////\n            // YEAR //\n            //////////\n            /**\n             * Is leap year? `0 or 1`\n             * @return {number}\n             */\n            L() {\n                const Y = fmt.Y();\n                return (Y % 4 === 0 && Y % 100 !== 0 || Y % 400 === 0) ? 1 : 0;\n            },\n            /**\n             * ISO-8601 year\n             * @return {number}\n             */\n            o() {\n                const n = fmt.n(), W = fmt.W(), Y = fmt.Y();\n                return Y + (n === 12 && W < 9 ? 1 : n === 1 && W > 9 ? -1 : 0);\n            },\n            /**\n             * Full year: `e.g. 1980...2010`\n             * @return {number}\n             */\n            Y() {\n                return vDate.getFullYear();\n            },\n            /**\n             * Last two digits of year: `00...99`\n             * @return {string}\n             */\n            y() {\n                return fmt.Y().toString().slice(-2);\n            },\n\n            //////////\n            // TIME //\n            //////////\n            /**\n             * Meridian lower: `am or pm`\n             * @return {string}\n             */\n            a() {\n                return fmt.A().toLowerCase();\n            },\n            /**\n             * Meridian upper: `AM or PM`\n             * @return {string}\n             */\n            A() {\n                const n = fmt.G() < 12 ? 0 : 1;\n                return vSettings.meridiem[n];\n            },\n            /**\n             * Swatch Internet time: `000..999`\n             * @return {string}\n             */\n            B() {\n                const H = vDate.getUTCHours() * HOUR, i = vDate.getUTCMinutes() * 60, s = vDate.getUTCSeconds();\n                return _lpad(Math.floor((H + i + s + HOUR) / 86.4) % 1000, 3);\n            },\n            /**\n             * 12-Hours: `1..12`\n             * @return {number}\n             */\n            g() {\n                return fmt.G() % 12 || 12;\n            },\n            /**\n             * 24-Hours: `0..23`\n             * @return {number}\n             */\n            G() {\n                return vDate.getHours();\n            },\n            /**\n             * 12-Hours with leading 0: `01..12`\n             * @return {string}\n             */\n            h() {\n                return _lpad(fmt.g(), 2);\n            },\n            /**\n             * 24-Hours w/leading 0: `00..23`\n             * @return {string}\n             */\n            H() {\n                return _lpad(fmt.G(), 2);\n            },\n            /**\n             * Minutes w/leading 0: `00..59`\n             * @return {string}\n             */\n            i() {\n                return _lpad(vDate.getMinutes(), 2);\n            },\n            /**\n             * Seconds w/leading 0: `00..59`\n             * @return {string}\n             */\n            s() {\n                return _lpad(vDate.getSeconds(), 2);\n            },\n            /**\n             * Microseconds: `000000-999000`\n             * @return {string}\n             */\n            u() {\n                return _lpad(vDate.getMilliseconds() * 1000, 6);\n            },\n\n            //////////////\n            // TIMEZONE //\n            //////////////\n            /**\n             * Timezone identifier: `e.g. Atlantic/Azores, ...`\n             * @return {string}\n             */\n            e() {\n                const str = /\\((.*)\\)/.exec(String(vDate))[1];\n                return str || 'Coordinated Universal Time';\n            },\n            /**\n             * DST observed? `0 or 1`\n             * @return {number}\n             */\n            I() {\n                const a = new Date(fmt.Y(), 0), c = Date.UTC(fmt.Y(), 0),\n                    b = new Date(fmt.Y(), 6), d = Date.UTC(fmt.Y(), 6);\n                return ((a - c) !== (b - d)) ? 1 : 0;\n            },\n            /**\n             * Difference to GMT in hour format: `e.g. +0200`\n             * @return {string}\n             */\n            O() {\n                const tzo = vDate.getTimezoneOffset(), a = Math.abs(tzo);\n                return (tzo > 0 ? '-' : '+') + _lpad(Math.floor(a / 60) * 100 + a % 60, 4);\n            },\n            /**\n             * Difference to GMT with colon: `e.g. +02:00`\n             * @return {string}\n             */\n            P() {\n                const O = fmt.O();\n                return (O.substr(0, 3) + ':' + O.substr(3, 2));\n            },\n            /**\n             * Timezone abbreviation: `e.g. EST, MDT, ...`\n             * @return {string}\n             */\n            T() {\n                const str = (String(vDate).match(self.tzParts) || [\"\"]).pop().replace(self.tzClip, \"\");\n                return str || 'UTC';\n            },\n            /**\n             * Timezone offset in seconds: `-43200...50400`\n             * @return {number}\n             */\n            Z() {\n                return -vDate.getTimezoneOffset() * 60;\n            },\n\n            ////////////////////\n            // FULL DATE TIME //\n            ////////////////////\n            /**\n             * ISO-8601 date\n             * @return {string}\n             */\n            c() {\n                return 'Y-m-d\\\\TH:i:sP'.replace(backslash, doFormat);\n            },\n            /**\n             * RFC 2822 date\n             * @return {string}\n             */\n            r() {\n                return 'D, d M Y H:i:s O'.replace(backslash, doFormat);\n            },\n            /**\n             * Seconds since UNIX epoch\n             * @return {number}\n             */\n            U() {\n                return vDate.getTime() / 1000 || 0;\n            }\n        };\n        return doFormat(vChar, vChar);\n    }\n    formatDate(vDate, vFormat) {\n        const self = this, BACKSLASH = '\\\\';\n        if (typeof vDate === 'string') {\n            vDate = self.parseDate(vDate, vFormat);\n            if (!vDate) {\n                return null;\n            }\n        }\n        if (vDate instanceof Date) {\n            let vDateStr = '';\n            const len = vFormat.length;\n            for (let i = 0; i < len; i++) {\n                const vChar = vFormat.charAt(i);\n                if (vChar === 'S' || vChar === BACKSLASH) {\n                    continue;\n                }\n                if (i > 0 && vFormat.charAt(i - 1) === BACKSLASH) {\n                    vDateStr += vChar;\n                    continue;\n                }\n                let str = self.parseFormat(vChar, vDate);\n                if (i !== (len - 1) && self.intParts.test(vChar) && vFormat.charAt(i + 1) === 'S') {\n                    const n = parseInt(str) || 0;\n                    str += self.dateSettings.ordinal(n);\n                }\n                vDateStr += str;\n            }\n            return vDateStr;\n        }\n        return '';\n    }\n}\n","/**\n * @module gmf.permalink.ShareService\n */\n/**\n * Service to handle the sharing of the permalink.\n * @param {angular.$http} $http Angular http service.\n * @param  {string} gmfShortenerCreateUrl URL for the shortener API\n * @constructor\n * @struct\n * @ngInject\n * @export\n * @ngname gmfShareService\n */\nconst exports = function($http, gmfShortenerCreateUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.gmfShortenerCreateUrl_ = gmfShortenerCreateUrl;\n\n};\n\n\n/**\n * Get a short URL of the permalink by calling the url shortener service.\n * - If no shortener API url have been specified, it returns the permalink itself.\n * @param  {string} url the permalink\n * @return {gmfx.ShortenerAPIResponse|angular.$http.HttpPromise} an object containing the permalink not shortened or\n * the promise attached to the shortener API request\n */\nexports.prototype.getShortUrl = function(url) {\n  const params = /** @type {gmfx.ShortenerAPIRequestParams} */ ({\n    url\n  });\n\n  if (!this.gmfShortenerCreateUrl_) {\n    return {\n      data: {\n        short_url: url\n      },\n      status: 200\n    };\n  }\n\n  return this.postShortUrl_(params);\n};\n\n\n/**\n * Send the short permalink to the email provided\n * - If email is provided, the short permalink will be sent to this email\n * @param  {string} shortUrl the short permalink to send\n * @param  {string} email the email to which the short url must be send\n * @param  {string=} opt_message message for the email\n * @return {angular.$http.HttpPromise} the promise attached to the shortener API request\n */\nexports.prototype.sendShortUrl = function(shortUrl, email, opt_message) {\n  const params = /** @type {gmfx.ShortenerAPIRequestParams} */ ({\n    url: shortUrl,\n    email: email\n  });\n\n  if (opt_message) {\n    params['message'] = opt_message;\n  }\n\n  return this.postShortUrl_(params);\n};\n\n\n/**\n * @param  {gmfx.ShortenerAPIRequestParams} params parameters for the request\n * @return {angular.$http.HttpPromise} the promise attached to the shortener API request\n * @private\n */\nexports.prototype.postShortUrl_ = function(params) {\n  // Override default behavior of $http.post method (sending data in json format)\n  return this.$http_.post(this.gmfShortenerCreateUrl_, $.param(params), {\n    headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n  });\n};\n\n\n/**\n * Max length defined for the complete url.\n * Check IE limits, see {@link http://support.microsoft.com/kb/208427}\n * @constant\n * @type {number}\n */\nexports.URL_MAX_LEN = 2083;\n\n/**\n * Max length defined for the url parth section.\n * Check IE limits, see {@link http://support.microsoft.com/kb/208427}\n * @constant\n * @type {number}\n */\nexports.URL_PATH_MAX_LEN = 2048;\n\nexports.module = angular.module('gmfShareService', []);\n\nexports.module.service('gmfShareService', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureLength\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, gettextCatalog, options = /** @type {ngeox.interaction.MeasureOptions} */({})) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = gettextCatalog.getString('Click to continue drawing the line.');\n    const br = document.createElement('br');\n    br.textContent = gettextCatalog.getString('Double-click or click last point to finish.');\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomLineString);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedLength(geom, proj, this.precision, this.format);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureArea\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, gettextCatalog, options = {}) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = gettextCatalog.getString('Click to continue drawing the polygon.');\n    const br = document.createElement('br');\n    br.textContent = gettextCatalog.getString('Double-click or click starting point to finish.');\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('Polygon'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomPolygon);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedArea(geom, proj, this.precision, this.format);\n  const verticesCount = geom.getCoordinates()[0].length;\n  let coord = null;\n  if (verticesCount > 3) {\n    coord = geom.getInteriorPoint().getCoordinates();\n  }\n  callback(output, coord);\n};\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.component\n */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfAuthentication', [\n  gmfAuthenticationService.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoMessageModalComponent.name,\n]);\n\n\n/**\n * @param {angular.JQLite} element Element.\n * @param {angular.Attributes} attrs Attributes.\n * @return {string} Template URL.\n */\nexports.gmfAuthenticationTemplateUrl_ = (element, attrs) => {\n  const templateUrl = attrs['gmfAuthenticationTemplateurl'];\n  return templateUrl !== undefined ? templateUrl :\n    'gmf/authentication';\n};\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/authentication', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfAuthenticationTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfAuthenticationTemplateUrl($element, $attrs, gmfAuthenticationTemplateUrl) {\n  return gmfAuthenticationTemplateUrl($element, $attrs);\n}\n\n\n/**\n * An \"authentication\" component for a GeoMapFish application. With the\n * use of the \"authentication\" service, it features a complete interface\n * for the user to be able to login, logout, change or reset his or her\n * password.  The `gmfUser` angular value is also used to keep track of\n * the user information. When empty, that means that the user isn't connected\n * yet.\n *\n * While not logged in, the \"login\" form is shown, which allows the user to\n * either log in or ask for a password reset.\n *\n * Once logged in, the \"logout\" form is shown, which allows the user to either\n * log out or change his or her password.\n *\n * Example:\n *\n *      <gmf-authentication\n *        gmf-authentication-allow-password-change=\"::true\">\n *      </gmf-authentication>\n *\n * @htmlAttribute {boolean} gmf-authentication-allow-password-reset Whether to\n *     show the password forgotten link. Default to true.\n * @htmlAttribute {boolean|function} gmf-authentication-allow-password-change Whether to\n *     show the change password button. Default to true. You can also specify a gmfx.PasswordValidator Object\n *     to add constraint on user's new password.\n * @htmlAttribute {gmfx.PasswordValidator} gmf-authentication-password-validator A gmfx.PasswordValidator\n *     Object to add constraint on user's new password. The gmf-authentication-allow-password-change. To use\n *     it you must also allow the user to change its password.\n * @htmlAttribute {boolean} gmf-authentication-force-password-change Force the\n *     user to change its password. Default to false. If you set it to true, you\n *     should also allow the user to change its password. Don't add this option alone, use\n *     it in a dedicated authentication component, in a ngeo-modal, directly in\n *     your index.html (see example 2.)\n *\n * Example 2:\n *\n *     <ngeo-modal\n *         ngeo-modal-closable=\"false\"\n *         ng-model=\"mainCtrl.userMustChangeItsPassword()\"\n *         ng-model-options=\"{getterSetter: true}\">\n *       <div class=\"modal-header\">\n *         <h4 class=\"modal-title\">\n *           {{'You must change your password' | translate}}\n *         </h4>\n *       </div>\n *       <div class=\"modal-body\">\n *         <gmf-authentication\n *           gmf-authentication-force-password-change=\"::true\">\n *         </gmf-authentication>\n *       </div>\n *     </ngeo-modal>\n *\n * @ngdoc component\n * @ngname gmfAuthentication\n */\nexports.component_ = {\n  bindings: {\n    'allowPasswordReset': '<?gmfAuthenticationAllowPasswordReset',\n    'allowPasswordChange': '<?gmfAuthenticationAllowPasswordChange',\n    'passwordValidator': '<?gmfAuthenticationPasswordValidator',\n    'forcePasswordChange': '<?gmfAuthenticationForcePasswordChange'\n  },\n  controller: 'GmfAuthenticationController',\n  templateUrl: gmfAuthenticationTemplateUrl\n};\n\nexports.value('gmfAuthenticationTemplateUrl',\n  exports.gmfAuthenticationTemplateUrl_);\n\nexports.component('gmfAuthentication', exports.component_);\n\n\n/**\n * @private\n */\nexports.AuthenticationController_ = class {\n  /**\n   * @private\n   * @param {!angular.JQLite} $element Element.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {gmf.authentication.Service} gmfAuthenticationService GMF Authentication service\n   * @param {gmfx.User} gmfUser User.\n   * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfAuthenticationController\n   */\n  constructor($element, gettextCatalog, gmfAuthenticationService, gmfUser, ngeoNotification) {\n\n    /**\n     * @type {!angular.JQLite}\n     * @private\n     */\n    this.$element_ = $element;\n\n    /**\n     * @type {gmfx.User}\n     * @export\n     */\n    this.gmfUser = gmfUser;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog = gettextCatalog;\n\n    /**\n     * @type {gmf.authentication.Service}\n     * @private\n     */\n    this.gmfAuthenticationService_ = gmfAuthenticationService;\n\n    /**\n     * @type {ngeo.message.Notification}\n     * @private\n     */\n    this.notification_ = ngeoNotification;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordReset;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordChange;\n\n    /**\n     * @type {gmfx.PasswordValidator?}\n     * @export\n     */\n    this.passwordValidator = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.forcePasswordChange;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.changingPassword = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.changePasswordModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.resetPasswordModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.error = false;\n\n    // LOGIN form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.loginVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.pwdVal = '';\n\n    // CHANGE PASSWORD form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.oldPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdConfVal = '';\n  }\n\n  /**\n   * Initialise the controller.\n   */\n  $onInit() {\n    this.allowPasswordReset = this.allowPasswordReset !== false;\n    this.allowPasswordChange = this.allowPasswordChange !== false;\n    this.forcePasswordChange = this.forcePasswordChange === true;\n    if (this.forcePasswordChange) {\n      this.changingPassword = true;\n    }\n  }\n\n\n  // METHODS THAT CALL THE AUTHENTICATION SERVICE METHODS\n\n  /**\n   * Calls the authentication service changePassword method.\n   * @export\n   */\n  changePassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const oldPwd = this.oldPwdVal;\n    const newPwd = this.newPwdVal;\n    const confPwd = this.newPwdConfVal;\n\n    const errors = [];\n    // Validation - Passwords are required.\n    if (oldPwd === '') {\n      errors.push(gettextCatalog.getString('The old password is required.'));\n    }\n    if (newPwd === '') {\n      errors.push(gettextCatalog.getString('The new password is required.'));\n    }\n    if (confPwd === '') {\n      errors.push(gettextCatalog.getString('The password confirmation is required.'));\n    }\n\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      // Default validation - Passwords must be new and must also match.\n      if (oldPwd === newPwd) {\n        errors.push(gettextCatalog.getString('The old and new passwords are the same.'));\n      }\n      if (newPwd !== confPwd) {\n        errors.push(gettextCatalog.getString('The passwords don\\'t match.'));\n      }\n      // Custom validation - If a passwordValidator is set, use it to validate the new password.\n      if (this.passwordValidator) {\n        if (!this.passwordValidator.isPasswordValid(oldPwd)) {\n          errors.push(gettextCatalog.getString(this.passwordValidator.notValidMessage));\n        }\n      }\n\n      if (errors.length) {\n        this.setError_(errors);\n      } else {\n        // Send request with current credentials, which may fail if the old password given is incorrect.\n        const error = gettextCatalog.getString('Incorrect old password.');\n        this.gmfAuthenticationService_.changePassword(oldPwd, newPwd, confPwd).then(\n          () => {\n            this.changePasswordModalShown = true;\n            this.changePasswordReset();\n          },\n          this.setError_.bind(this, error));\n      }\n    }\n  }\n\n  /**\n   * Calls the authentication service login method.\n   * @export\n   */\n  login() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const errors = [];\n    if (this.loginVal === '') {\n      errors.push(gettextCatalog.getString('The username is required.'));\n    }\n    if (this.pwdVal === '') {\n      errors.push(gettextCatalog.getString('The password is required.'));\n    }\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      const error = gettextCatalog.getString('Incorrect credentials or disabled account.');\n      this.gmfAuthenticationService_.login(this.loginVal, this.pwdVal).then(\n        this.resetError_.bind(this),\n        this.setError_.bind(this, error));\n    }\n  }\n\n  /**\n   * Calls the authentication service logout method.\n   * @export\n   */\n  logout() {\n    const gettextCatalog = this.gettextCatalog;\n    const error = gettextCatalog.getString('Could not log out.');\n    this.gmfAuthenticationService_.logout().then(\n      this.resetError_.bind(this),\n      this.setError_.bind(this, error));\n  }\n\n  /**\n   * Calls the authentication service resetPassword method.\n   * @export\n   */\n  resetPassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    if (!this.loginVal) {\n      this.setError_(gettextCatalog.getString('Please, input a login...'));\n      return;\n    }\n\n    const error = gettextCatalog.getString('An error occurred while resetting the password.');\n\n    /**\n     * @param {gmfx.AuthenticationDefaultResponse} respData Response.\n     */\n    const resetPasswordSuccessFn = function(respData) {\n      this.resetPasswordModalShown = true;\n      this.resetError_();\n    }.bind(this);\n\n    this.gmfAuthenticationService_.resetPassword(this.loginVal).then(\n      resetPasswordSuccessFn,\n      this.setError_.bind(this, error)\n    );\n  }\n\n\n  // OTHER METHODS\n\n  /**\n   * Reset the changePassword values and error.\n   * @export\n   */\n  changePasswordReset() {\n    this.resetError_();\n    this.changingPassword = false;\n    this.oldPwdVal = '';\n    this.newPwdVal = '';\n    this.newPwdConfVal = '';\n  }\n\n  /**\n   * @return {boolean} True if the user must change is password and if the \"forcePasswordChange\" option of\n   *    this component is set to true.\n   * @export\n   */\n  userMustChangeItsPassword() {\n    return (this.gmfUser.is_password_changed === false && this.forcePasswordChange);\n  }\n\n  /**\n   * @param {string|Array.<string>} errors Errors.\n   * @private\n   */\n  setError_(errors) {\n    if (this.error) {\n      this.resetError_();\n    }\n\n    this.error = true;\n\n    const container = this.$element_.find('.gmf-authentication-error');\n\n    if (!Array.isArray(errors)) {\n      errors = [errors];\n    }\n\n    errors.forEach(function(error) {\n      this.notification_.notify({\n        msg: error,\n        target: container,\n        type: ngeoMessageMessage.Type.ERROR\n      });\n    }, this);\n  }\n\n  /**\n   * @private\n   */\n  resetError_() {\n    this.notification_.clear();\n    this.error = false;\n  }\n};\n\nexports.controller('GmfAuthenticationController',\n  exports.AuthenticationController_);\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.module\n */\nimport gmfAuthenticationComponent from 'gmf/authentication/component.js';\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfAuthenticationModule', [\n  gmfAuthenticationComponent.name,\n  gmfAuthenticationService.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.BackgroundLayerMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport ngeoLayerHelper from 'ngeo/map/LayerHelper.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function(ngeoLayerHelper) {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? this.ngeoLayerHelper_.getGroupFromMap(map,\n    exports.BACKGROUNDLAYERGROUP_NAME).getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const ZIndex = -200;\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (layer !== null) {\n    layer.setZIndex(ZIndex);\n    this.ngeoLayerHelper_.setZIndexToFirstLevelChildren(layer, ZIndex);\n  }\n\n  const bgGroup = this.ngeoLayerHelper_.getGroupFromMap(map, exports.BACKGROUNDLAYERGROUP_NAME);\n\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      bgGroup.getLayers().setAt(0, layer);\n    } else {\n      bgGroup.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    bgGroup.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * Return the current background layer overlay of a given map, used by the opacity slider.\n * `null` is returned if the map does not have an opacity background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.prototype.getOpacityBgLayer = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? this.ngeoLayerHelper_.getGroupFromMap(map,\n    exports.BACKGROUNDLAYERGROUP_NAME).getLayers().item(1) : null;\n};\n\n/**\n * Set an background layer overlay, used by the opacity slider.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.prototype.setOpacityBgLayer = function(map, layer) {\n  const ZIndex = -100;\n  layer.setOpacity(0);\n  layer.setVisible(true);\n  layer.setZIndex(ZIndex);\n  this.ngeoLayerHelper_.setZIndexToFirstLevelChildren(layer, ZIndex);\n  const bgGroup = this.ngeoLayerHelper_.getGroupFromMap(map, exports.BACKGROUNDLAYERGROUP_NAME);\n\n  const index = bgGroup.getLayers().getArray().indexOf(layer);\n  if (index === -1) {\n    bgGroup.getLayers().push(layer);\n  }\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', [\n  ngeoLayerHelper.module.name\n]);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\n\n/**\n * @const\n */\nexports.BACKGROUNDLAYERGROUP_NAME = 'background';\n\n\nexport default exports;\n","/**\n * @module gmf.backgroundlayerselector.component\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfBackgroundlayerselector', [\n  gmfThemeThemes.module.name,\n  ngeoMapBackgroundLayerMgr.module.name,\n]);\n\n\nexports.value('gmfBackgroundlayerselectorTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfBackgroundlayerselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/backgroundlayerselector';\n  }\n);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/backgroundlayerselector', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfBackgroundlayerselectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfBackgroundlayerselectorTemplateUrl($element, $attrs, gmfBackgroundlayerselectorTemplateUrl) {\n  return gmfBackgroundlayerselectorTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a \"background layer selector\" component.\n *\n * Example:\n *\n *      <gmf-backgroundlayerselector\n *        gmf-backgroundlayerselector-map=\"::ctrl.map\"\n *        gmf-backgroundlayer-opacity-options=\"::ctrl.bgOpacityOptions\"\n *        gmf-backgroundlayerselector-select=\"onBackgroundSelected()\">\n *      </gmf-backgroundlayerselector>\n *\n * Used UI metadata:\n *\n *  * thumbnail: The URL used for the icon.\n *\n * @htmlAttribute {ol.Map=} gmf-backgroundlayerselector-map The map.\n * @htmlAttribute {string} gmf-backgroundlayer-opacity-options The opacity slider options.\n * @htmlAttribute {Function} gmf-backgroundlayerselector-select Function called\n *     when a layer was selected by the user.\n *\n * @ngdoc component\n * @ngname gmfBackgroundlayerselector\n */\nexports.component_ = {\n  controller: 'GmfBackgroundlayerselectorController as ctrl',\n  bindings: {\n    'map': '=gmfBackgroundlayerselectorMap',\n    'opacityOptions': '=gmfBackgroundlayerOpacityOptions',\n    'select': '&?gmfBackgroundlayerselectorSelect'\n  },\n  templateUrl: gmfBackgroundlayerselectorTemplateUrl\n};\n\n\nexports.component('gmfBackgroundlayerselector',\n  exports.component_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer manager.\n * @param {!gmf.theme.Themes} gmfThemes Themes service.\n * @ngInject\n * @ngdoc controller\n * @ngname GmfBackgroundlayerselectorController\n */\nexports.Controller_ = function($scope, ngeoBackgroundLayerMgr, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!string|undefined}\n   * @export\n   */\n  this.opacityOptions;\n\n  /**\n   * Function called when a layer was selected by the user.\n   * @type {?Function}\n   * @export\n   */\n  this.select;\n\n  /**\n   * @type {?ol.layer.Base}\n   * @export\n   */\n  this.bgLayer;\n\n  /**\n   * @type {?Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.bgLayers;\n\n  /**\n   * @type {ol.layer.Base}\n   * @export\n   */\n  this.opacityLayer;\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(gmfThemes, 'change', this.handleThemesChange_, this));\n\n  /**\n   * @type {!ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n\n  this.listenerKeys_.push(olEvents.listen(this.backgroundLayerMgr_, 'change',\n    /**\n     * @param {!ngeox.BackgroundEvent} event Event.\n     */\n    (event) => {\n      this.bgLayer = event.detail.current;\n    }));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.handleThemesChange_();\n};\n\n\n/**\n * Called when the themes changes. Set (or reset) the backround layers.\n * @private\n */\nexports.Controller_.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getBgLayers().then((layers) => {\n    this.bgLayers = layers;\n\n    if (this.opacityOptions !== undefined) {\n      const opacityLayer = layers.find(layer => layer.get('label') === this.opacityOptions);\n      if (opacityLayer !== undefined) {\n        this.setOpacityBgLayer(opacityLayer);\n        this.opacityLayer = opacityLayer;\n\n        // Reorder for the UI the bgArray copy with the opacity layer at the end\n        this.bgLayers = this.bgLayers.slice();\n        const indexOpa = this.bgLayers.findIndex(layer => layer === this.opacityLayer);\n        this.bgLayers.splice(indexOpa, 1);\n        this.bgLayers.push(opacityLayer);\n      }\n    }\n  });\n};\n\n/**\n * Getter/setter for background layer overlay, used by opacity slider.\n * @param {?number} val The opacity.\n * @returns {number} The background layer opacity.\n * @export\n */\nexports.Controller_.prototype.getSetBgLayerOpacity = function(val) {\n  if (val) {\n    this.opacityLayer.setOpacity(val);\n  }\n  return this.opacityLayer.getOpacity();\n};\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @param {boolean=} opt_silent Do not notify listeners.\n * @export\n */\nexports.Controller_.prototype.setLayer = function(layer, opt_silent) {\n  this.bgLayer = layer;\n  this.backgroundLayerMgr_.set(this.map, layer);\n  if (!opt_silent && this.select) {\n    this.select();\n  }\n};\n\n/**\n * Set a background layer overlay, used by the opacity slider.\n * @param {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.Controller_.prototype.setOpacityBgLayer = function(layer) {\n  this.backgroundLayerMgr_.setOpacityBgLayer(this.map, layer);\n};\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('GmfBackgroundlayerselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.Helper\n */\nimport gmfEditingEnumerateAttribute from 'gmf/editing/EnumerateAttribute.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to manipulate or get GMF data\n   * sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {gmf.editing.EnumerateAttribute} gmfEnumerateAttribute The Gmf enumerate\n   *     attribute service.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     source helper service.\n   * @ngdoc service\n   * @ngname gmfDataSourcesHelper\n   * @ngInject\n   */\n  constructor($q, gmfEnumerateAttribute, ngeoDataSourcesHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {gmf.editing.EnumerateAttribute}\n     * @private\n     */\n    this.gmfEnumerateAttribute_ = gmfEnumerateAttribute;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {gmfx.datasource.DataSources}\n     * @protected\n     */\n    this.collection_;\n\n    /**\n     * @type {Object.<number, gmf.datasource.OGC>}\n     * @protected\n     */\n    this.cache_;\n  }\n\n  /**\n   * @return {gmfx.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return /** @type {gmfx.datasource.DataSources} */ (\n      this.ngeoDataSourcesHelper_.collection\n    );\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?gmf.datasource.OGC} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return /** @type {?gmf.datasource.OGC} */ (\n      this.ngeoDataSourcesHelper_.getDataSource(id)\n    );\n  }\n\n  /**\n   * @param {gmf.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  prepareFiltrableDataSource(dataSource) {\n\n    const prepareFiltrableDataSourceDefer = this.q_.defer();\n\n    // (1) Get the attributes. The first time, they will be asynchronously\n    //     obtained using a WFS DescribeFeatureType request.\n    this.ngeoDataSourcesHelper_.getDataSourceAttributes(\n      dataSource\n    ).then((attributes) => {\n      // (2) The attribute names that are in the `enumeratedAttributes`\n      //     metadata are the ones that need to have their values fetched.\n      //     Do that once then set the type to SELECT and the choices.\n      const meta = dataSource.gmfLayer.metadata || {};\n      const enumAttributes = meta.enumeratedAttributes;\n      if (enumAttributes && enumAttributes.length) {\n        const promises = [];\n        for (const attribute of attributes) {\n          if (olArray.includes(enumAttributes, attribute.name) &&\n             attribute.type !== ngeoFormatAttributeType.SELECT &&\n             (!attribute.choices || !attribute.choices.length)) {\n            promises.push(\n              this.gmfEnumerateAttribute_.getAttributeValues(\n                dataSource, attribute.name\n              ).then((values) => {\n                const choices = values.map(choice => choice.value);\n                attribute.type = ngeoFormatAttributeType.SELECT;\n                attribute.choices = choices;\n              })\n            );\n          }\n        }\n        return this.q_.all(promises).then(\n          prepareFiltrableDataSourceDefer.resolve(dataSource)\n        );\n      } else {\n        prepareFiltrableDataSourceDefer.resolve(dataSource);\n      }\n    });\n\n    return prepareFiltrableDataSourceDefer.promise;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourcesHelper', [\n  ngeoDatasourceHelper.module.name,\n  gmfEditingEnumerateAttribute.module.name,\n]);\nexports.module.service('gmfDataSourcesHelper', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.OGC\n */\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\nconst exports = class extends ngeoDatasourceOGC {\n\n  /**\n   * A `gmf.datasource.OGC` extends a `ngeo.datasource.OGC` and\n   * adds some properties that are proper to GMF only.\n   *\n   * @struct\n   * @param {gmfx.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {gmfThemes.GmfLayer}\n     * @private\n     */\n    this.gmfLayer_ = options.gmfLayer;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {gmfThemes.GmfLayer} GMF layer\n   * @export\n   */\n  get gmfLayer() {\n    return this.gmfLayer_;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.WFSAliases\n */\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\n\nconst exports = class {\n\n  /**\n   * Service that provides methods to get additional information and actions\n   * when performing WFS requests.\n   *\n   * @struct\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     source helper service.\n   * @ngdoc service\n   * @ngname gmfWFSAliases\n   * @ngInject\n   */\n  constructor(ngeoDataSourcesHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n  }\n\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @export\n   */\n  describe(dataSource) {\n    // Only QGIS Server supports WFS aliases\n    if (dataSource.ogcServerType === 'qgisserver' && !dataSource.attributes) {\n      // Trigger an additional WFS DescribeFeatureType request to get\n      // datasource attributes, including aliases.\n      this.ngeoDataSourcesHelper_.getDataSourceAttributes(dataSource);\n    }\n  }\n};\n\n\nexports.module = angular.module('gmfDatasourceWFSAliases', [\n  ngeoDatasourceHelper.module.name,\n]);\nexports.module.service('gmfWFSAliases', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.Manager\n */\nimport gmfDatasourceOGC from 'gmf/datasource/OGC.js';\nimport gmfDatasourceWFSAliases from 'gmf/datasource/WFSAliases.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\n\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\n\nconst exports = class {\n\n  /**\n   * The GeoMapFish DataSources Manager is responsible of listenening to the\n   * c2cgeoportal's themes to create instances of `ngeo.datasource.DataSource`\n   * objects with the layer definitions found and push them in the\n   * `ngeox.datasource.DataSources` collection. The Manager must be initialized\n   * with the app's map using the setDatasourcseMap() method.\n   *\n   * When changing theme, these data sources are cleared then re-created.\n   *\n   * @struct\n   * @param {angular.$q} $q Angular q service\n   * @param {!angular.Scope} $rootScope Angular rootScope.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n   * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n   * @param {!ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer\n   *     manager.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   *     data sources service.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @param {!gmf.datasource.WFSAliases} gmfWFSAliases Gmf WFS aliases service.\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfDataSourcesManager\n   */\n  constructor($q, $rootScope, $timeout, gmfThemes, gmfTreeManager,\n    ngeoBackgroundLayerMgr, ngeoDataSources, ngeoLayerHelper, ngeoRuleHelper,\n    ngeoWMSTime, gmfWFSAliases\n  ) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    /**\n     * @type {gmf.layertree.TreeManager}\n     * @private\n     */\n    this.gmfTreeManager_ = gmfTreeManager;\n\n    /**\n     * @type {!ngeo.map.BackgroundLayerMgr}\n     * @private\n     */\n    this.ngeoBackgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * The collection of DataSources from ngeo, which gets updated by this\n     * service. When the theme changes, first we remove all data sources, then\n     * the 'active' data source are added here.\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n    /**\n     * @type {!gmf.datasource.WFSAliases}\n     * @private\n     */\n    this.gmfWFSAliases_ = gmfWFSAliases;\n\n\n    // === Inner properties ===\n\n    /**\n     * While loading a new theme, this is where all of the created data sources\n     * are put using the id as key for easier find in the future.\n     * @type {Object.<number, gmf.datasource.OGC>}\n     * @private\n     */\n    this.dataSourcesCache_ = {};\n\n    /**\n     * A reference to the dimensions object.\n     * @type {ngeox.Dimensions|undefined}\n     * @private\n     */\n    this.dimensions_;\n\n    /**\n     * The cache of layertree leaf controller, i.e. those that are added to\n     * the tree manager. When treeCtrl is added in this cache, it's given\n     * a reference to its according data source.\n     * @type {gmfx.datasource.ManagerTreeCtrlCache}\n     * @private\n     */\n    this.treeCtrlCache_ = {};\n\n    /**\n     * The function to call to unregister the `watchCollection` event on\n     * the root layer tree controller children.\n     * @type {?Function}\n     * @private\n     */\n    this.treeCtrlsUnregister_ = null;\n\n    // === Events ===\n\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleNgeoBackgroundLayerChange_,\n      this\n    );\n    olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n  }\n\n\n  /**\n   * Set the map to use with your datasources.\n   * @param {!ol.Map} map The map to use.\n   * @export\n   */\n  setDatasourceMap(map) {\n    this.ngeoDataSources_.map = map;\n  }\n\n  /**\n   * @param {!ngeox.Dimensions} dimensions A reference to the dimensions\n   *     object to keep a reference of in this service.\n   */\n  setDimensions(dimensions) {\n    this.dimensions_ = dimensions;\n  }\n\n  /**\n   * Called when the themes change. Remove any existing data sources first,\n   * then create and add data sources from the loaded themes.\n   * @private\n   */\n  handleThemesChange_() {\n    // (1) Clear\n    this.clearDataSources_();\n    if (this.treeCtrlsUnregister_) {\n      this.treeCtrlsUnregister_();\n    }\n    this.clearTreeCtrlCache_();\n\n    // (2) Re-create data sources and event listeners\n    this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n      const promiseThemes = this.gmfThemes_.getThemesObject().then((themes) => {\n        // Create a DataSources for each theme\n        for (const theme of themes) {\n          for (const child of theme.children) {\n            googAsserts.assert(child);\n            this.createDataSource_(child, child, ogcServers);\n          }\n        }\n      });\n\n      const promiseBgLayers = this.gmfThemes_.getBackgroundLayersObject().then(\n        (backgroundLayers) => {\n          // Create a DataSource for each background layer\n          for (const backgroundLayer of backgroundLayers) {\n            this.createDataSource_(null, backgroundLayer, ogcServers);\n          }\n        }\n      );\n\n      // Then add the data sources that are active in the ngeo collection\n      this.q_.all([promiseThemes, promiseBgLayers]).then(() => {\n        this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(\n          () => {\n            if (this.gmfTreeManager_.rootCtrl) {\n              return this.gmfTreeManager_.rootCtrl.children;\n            }\n          },\n          this.handleTreeManagerRootChildrenChange_.bind(this)\n        );\n      });\n    });\n  }\n\n  /**\n   * Called when the list of tree controllers within the tree manager\n   * root controller changes. In other words, this method is called\n   * after nodes are being added added or removed from the tree,\n   * i.e. from the child nodes collection.\n   *\n   * A timeout is required  because the collection event is fired before\n   * the leaf nodes are created and they are the ones we're looking for here.\n   *\n   * This method handles the registration/unregistration of tree nodes that\n   * are added or removed, pushing it to the cache or removing it from the\n   * cache.\n   *\n   * @param {Array.<ngeo.layertree.Controller>|undefined} value List of tree\n   *     controllers.\n   * @private\n   */\n  handleTreeManagerRootChildrenChange_(value) {\n\n    this.timeout_(() => {\n\n      // (1) No need to do anything if the value is not set\n      if (!value) {\n        return;\n      }\n\n      // (2) Collect 'leaf' treeCtrls\n      const newTreeCtrls = [];\n      const visitor = (treeCtrls, treeCtrl) => {\n        const node = /** @type {!gmfThemes.GmfGroup|!gmfThemes.GmfLayer} */ (\n          treeCtrl.node);\n        const children = node.children;\n        if (!children) {\n          treeCtrls.push(treeCtrl);\n        }\n      };\n      for (let i = 0, ii = value.length; i < ii; i++) {\n        value[i].traverseDepthFirst(visitor.bind(this, newTreeCtrls));\n      }\n\n      // (3) Add new 'treeCtrls'\n      for (let i = 0, ii = newTreeCtrls.length; i < ii; i++) {\n        const newTreeCtrl = newTreeCtrls[i];\n        const cacheItem = this.getTreeCtrlCacheItem_(newTreeCtrl);\n        if (!cacheItem) {\n          this.addTreeCtrlToCache_(newTreeCtrl);\n        }\n      }\n\n      // (4) Remove treeCtrls that are no longer in the newTreeCtrl\n      const cache = this.treeCtrlCache_;\n      for (const id in this.treeCtrlCache_) {\n        const item = cache[id];\n        if (!newTreeCtrls.includes(item.treeCtrl)) {\n          this.removeTreeCtrlCacheItem_(item);\n        }\n      }\n    });\n  }\n\n  /**\n   * Remove the data sources from the ngeo collection that are in the cache,\n   * i.e. those created by this service, then clear the cache.\n   * @private\n   */\n  clearDataSources_() {\n\n    // (1) Remove data sources from ngeo collection\n    const dataSources = this.dataSources_.getArray();\n    for (let i = dataSources.length - 1, ii = 0; i >= ii; i--) {\n      if (this.dataSourcesCache_[dataSources[i].id]) {\n        // Use the `remove` method of the `ol.Collection` object for it\n        // to update its length accordingly and trigger the REMOVE event as\n        // well.\n        this.dataSources_.remove(dataSources[i]);\n      }\n    }\n\n    // (2) Clear the cache\n    olObj.clear(this.dataSourcesCache_);\n  }\n\n  /**\n   * Create a data source using the information on the node, group node\n   * and OGC servers. If the node has children, then we loop in those to get\n   * leaf nodes. Only leaf nodes end up creating a data source. If a data\n   * source with the same id already exists, then the node is skipped.\n   *\n   * Once a data source is created, it is added to the data sources cache.\n   *\n   * @param {gmfThemes.GmfGroup} firstLevelGroup The first level group node.\n   * @param {!gmfThemes.GmfGroup|!gmfThemes.GmfLayer} node The node, which\n   *     may have children or not.\n   * @param {!gmfThemes.GmfOgcServers} ogcServers OGC servers.\n   * @private\n   */\n  createDataSource_(firstLevelGroup, node, ogcServers) {\n\n    const children = node.children;\n\n    // (1) Group node (node that has children). Loop in the children\n    //     individually and create a data source for each one of them. The\n    //     group node itself is **skipped**.\n    if (children) {\n      for (const child of children) {\n        googAsserts.assert(child);\n        this.createDataSource_(firstLevelGroup, child, ogcServers);\n      }\n      return;\n    }\n\n    // From there on, the node is a layer node.\n    const gmfLayer = /** @type gmfThemes.GmfLayer */ (node);\n\n    // (2) Skip layer node if a data source with the same id exists\n    const id = olBase.getUid(gmfLayer);\n    if (this.dataSourcesCache_[id]) {\n      return;\n    }\n\n    // From there on, a data source will be created\n    const meta = gmfLayer.metadata;\n    const ogcType = gmfLayer.type;\n    let maxResolution;\n    let minResolution;\n    let ogcLayers;\n    let ogcServer;\n    let wmtsLayer;\n    let wmtsUrl;\n    let ogcImageType;\n    let timeProperty;\n\n    if (ogcType === gmfThemeThemes.NodeType.WMTS) {\n      // (3) Manage WMTS\n      const gmfLayerWMTS = /** @type {gmfThemes.GmfLayerWMTS} */ (gmfLayer);\n\n      // Common options for WMTS\n      wmtsLayer = gmfLayerWMTS.layer;\n      wmtsUrl = gmfLayerWMTS.url;\n      maxResolution = meta.maxResolution;\n      minResolution = meta.minResolution;\n\n      // OGC Layers\n      const layers = meta.queryLayers || meta.wmsLayers;\n      if (layers) {\n        ogcLayers = layers.split(',').map((layer) => {\n          return {\n            maxResolution: maxResolution,\n            minResolution: minResolution,\n            name: layer,\n            queryable: true\n          };\n        });\n      }\n\n      // OGC Server\n      if (meta.ogcServer && ogcServers[meta.ogcServer]) {\n        ogcServer = ogcServers[meta.ogcServer];\n      }\n      ogcImageType = gmfLayerWMTS.imageType;\n    } else if (ogcType === gmfThemeThemes.NodeType.WMS) {\n      // (4) Manage WMS\n      const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n      // Common options for WMS\n      maxResolution = gmfLayerWMS.maxResolutionHint;\n      minResolution = gmfLayerWMS.minResolutionHint;\n\n      // OGC Layers\n      ogcLayers = gmfLayerWMS.childLayers.map((childLayer) => {\n        return {\n          maxResolution: childLayer.maxResolutionHint,\n          minResolution: childLayer.minResolutionHint,\n          name: childLayer.name,\n          queryable: childLayer.queryable\n        };\n      });\n\n      // OGC Server\n      const ogcServerName = (!firstLevelGroup || firstLevelGroup.mixed) ?\n        gmfLayerWMS.ogcServer : firstLevelGroup.ogcServer;\n      googAsserts.assert(ogcServerName);\n      ogcServer = ogcServers[ogcServerName];\n      ogcImageType = ogcServer.imageType;\n\n      // Time property\n      if (gmfLayerWMS.time) {\n        timeProperty = gmfLayerWMS.time;\n      } else if (firstLevelGroup && firstLevelGroup.time) {\n        timeProperty = firstLevelGroup.time;\n      }\n    }\n\n    // (5) ogcServer\n    const ogcServerType = ogcServer ? ogcServer.type : undefined;\n    const wmsIsSingleTile = ogcServer ? ogcServer.isSingleTile : undefined;\n    const wfsUrl = ogcServer && ogcServer.wfsSupport ?\n      ogcServer.urlWfs : undefined;\n    const wmsUrl = ogcServer ? ogcServer.url : undefined;\n\n    let wfsOutputFormat = ngeoDatasourceOGC.WFSOutputFormat.GML3;\n    // qgis server only supports GML2 output\n    if (ogcServerType === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      wfsOutputFormat = ngeoDatasourceOGC.WFSOutputFormat.GML2;\n    }\n\n    // (6) Snapping\n    const snappable = !!meta.snappingConfig;\n    const snappingTolerance = meta.snappingConfig ?\n      meta.snappingConfig.tolerance : undefined;\n    const snappingToEdges = meta.snappingConfig ?\n      meta.snappingConfig.edge : undefined;\n    const snappingToVertice = meta.snappingConfig ?\n      meta.snappingConfig.vertex : undefined;\n\n    // (7) Dimensions\n    const dimensions = this.dimensions_;\n    const dimensionsConfig = node.dimensions || firstLevelGroup.dimensions;\n\n    // (8) Time values (lower or lower/upper)\n    let timeLowerValue;\n    let timeUpperValue;\n    if (timeProperty) {\n      const timeValues = this.ngeoWMSTime_.getOptions(timeProperty)['values'];\n      if (Array.isArray(timeValues)) {\n        timeLowerValue = timeValues[0];\n        timeUpperValue = timeValues[1];\n      } else {\n        timeLowerValue = timeValues;\n      }\n    }\n\n    // (9) Common options\n    const copyable = meta.copyable;\n    const identifierAttribute = meta.identifierAttributeField;\n    const name = gmfLayer.name;\n    const timeAttributeName = meta.timeAttribute;\n    const visible = meta.isChecked === true;\n\n    // Create the data source and add it to the cache\n    this.dataSourcesCache_[id] = new gmfDatasourceOGC({\n      copyable,\n      dimensions,\n      dimensionsConfig,\n      gmfLayer,\n      id,\n      identifierAttribute,\n      maxResolution,\n      minResolution,\n      name,\n      ogcImageType,\n      ogcLayers,\n      ogcServerType,\n      ogcType,\n      snappable,\n      snappingTolerance,\n      snappingToEdges,\n      snappingToVertice,\n      timeAttributeName,\n      timeLowerValue,\n      timeProperty,\n      timeUpperValue,\n      visible,\n      wfsOutputFormat,\n      wfsUrl,\n      wmsIsSingleTile,\n      wmsUrl,\n      wmtsLayer,\n      wmtsUrl\n    });\n  }\n\n  /**\n   * If the given Layertree controller is a 'leaf', add it to the cache.\n   * Also, set its according data source. Finally, add the data source to\n   * the ngeo collection.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to add\n   * @private\n   */\n  addTreeCtrlToCache_(treeCtrl) {\n\n    const id = olBase.getUid(treeCtrl.node);\n    const dataSource = this.dataSourcesCache_[id];\n    googAsserts.assert(dataSource, 'DataSource should be set');\n    treeCtrl.setDataSource(dataSource);\n\n    const stateWatcherUnregister = this.rootScope_.$watch(\n      () => treeCtrl.getState(),\n      this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n    );\n\n    const filterRulesWatcherUnregister = this.rootScope_.$watch(\n      () => {\n        const hasFilters = dataSource.filterRules !== null;\n        const isVisible = dataSource.visible;\n        return hasFilters && isVisible;\n      },\n      this.handleDataSourceFilterRulesChange_.bind(this, dataSource)\n    );\n\n    // Watch for time values change to update the WMS layer\n    let timeLowerValueWatcherUnregister;\n    let timeUpperValueWatcherUnregister;\n    let wmsLayer;\n    if (dataSource.timeProperty &&\n        dataSource.ogcType === ngeoDatasourceOGC.Type.WMS\n    ) {\n      timeLowerValueWatcherUnregister = this.rootScope_.$watch(\n        () => dataSource.timeLowerValue,\n        this.handleDataSourceTimeValueChange_.bind(this, dataSource)\n      );\n\n      if (dataSource.timeProperty.mode === 'range') {\n        timeUpperValueWatcherUnregister = this.rootScope_.$watch(\n          () => dataSource.timeUpperValue,\n          this.handleDataSourceTimeValueChange_.bind(this, dataSource)\n        );\n      }\n\n      wmsLayer = googAsserts.assertInstanceof(\n        gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl),\n        olLayerImage\n      );\n    }\n\n    this.treeCtrlCache_[id] = {\n      filterRulesWatcherUnregister,\n      stateWatcherUnregister,\n      timeLowerValueWatcherUnregister,\n      timeUpperValueWatcherUnregister,\n      treeCtrl,\n      wmsLayer\n    };\n\n    this.dataSources_.push(dataSource);\n\n    this.gmfWFSAliases_.describe(dataSource);\n  }\n\n  /**\n   * Remove a treeCtrl cache item. Unregister event listeners and remove the\n   * data source from the ngeo collection.\n   *\n   * @param {gmfx.datasource.ManagerTreeCtrlCacheItem} item Layertree\n   *     controller cache item\n   * @private\n   */\n  removeTreeCtrlCacheItem_(item) {\n\n    // (1) Remove data source\n    const dataSource = item.treeCtrl.getDataSource();\n    googAsserts.assert(dataSource, 'DataSource should be set');\n    this.dataSources_.remove(dataSource);\n\n    // (2) Remove item and clear event listeners\n    item.treeCtrl.setDataSource(null);\n    item.filterRulesWatcherUnregister();\n    item.stateWatcherUnregister();\n    if (item.timeLowerValueWatcherUnregister) {\n      item.timeLowerValueWatcherUnregister();\n    }\n    if (item.timeUpperValueWatcherUnregister) {\n      item.timeUpperValueWatcherUnregister();\n    }\n    delete this.treeCtrlCache_[olBase.getUid(item.treeCtrl.node)];\n  }\n\n  /**\n   * Clears the layer tree controller cache. At the same time, each item gets\n   * its data source reference unset and state watcher unregistered.\n   *\n   * The data source gets also removed from the ngeo data sources collection.\n   * @private\n   */\n  clearTreeCtrlCache_() {\n    for (const id in this.treeCtrlCache_) {\n      this.removeTreeCtrlCacheItem_(this.treeCtrlCache_[id]);\n    }\n  }\n\n  /**\n   * Called when the state of a 'leaf' layertree controller changes.\n   * Update the `visible` property of the data source according to the\n   * state of the layertree controller.\n   *\n   * Note: The possible states can only be 'on' or 'off', because the\n   * layertree controller being a 'leaf'.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n   * @param {string|undefined} newVal New state value\n   * @private\n   */\n  handleTreeCtrlStateChange_(treeCtrl, newVal) {\n    const treeDataSource = treeCtrl.getDataSource();\n    googAsserts.assert(treeDataSource, 'DataSource should be set');\n    const visible = newVal === 'on';\n    treeDataSource.visible = visible;\n\n    // In GMF, multiple data sources can be combined into one ol.layer.Layer\n    // object. When changing the state of a data source, we need to make\n    // sure that the FILTER param match order of the current LAYERS param.\n    //\n    // Note: we only need to do this ONCE, as there can be only one\n    // data source being filtered at a time\n    const siblingDataSourceIds = gmfLayertreeSyncLayertreeMap.getLayer(\n      treeCtrl).get('querySourceIds');\n    if (Array.isArray(siblingDataSourceIds)) {\n      const dataSources = this.dataSources_.getArray();\n      for (const dataSource of dataSources) {\n        if (dataSource instanceof gmfDatasourceOGC &&\n            dataSource.filterRules !== null &&\n            dataSource.id !== treeDataSource.id &&\n            siblingDataSourceIds.includes(dataSource.id) &&\n            dataSource.visible\n        ) {\n          this.handleDataSourceFilterRulesChange_(dataSource, true);\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Returns a layertree controller cache item, if it exists.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n   * @return {gmfx.datasource.ManagerTreeCtrlCacheItem} Cache item\n   * @private\n   */\n  getTreeCtrlCacheItem_(treeCtrl) {\n    return this.treeCtrlCache_[olBase.getUid(treeCtrl.node)] || null;\n  }\n\n  /**\n   * Called when both the 'visible' and 'filterRules' properties of a data\n   * source change.\n   *\n   * If the data source is filtrable, then make sure that when it gets rules\n   * set to apply them as OGC filters to the OpenLayers layer, more precisely\n   * as a `FILTER` parameter in the layer's source parameters.\n   *\n   * @param {!gmf.datasource.OGC} dataSource Data source.\n   * @param {boolean} value Value.\n   * @private\n   */\n  handleDataSourceFilterRulesChange_(dataSource, value) {\n\n    // Skip data sources that are not filtrables OR those that do not have\n    // the WMS ogcType, i.e. those that do not have an OpenLayers layer\n    // to update\n    if (dataSource.filtrable !== true ||\n        dataSource.ogcType !== ngeoDatasourceOGC.Type.WMS\n    ) {\n      return;\n    }\n\n    const id = olBase.getUid(dataSource.gmfLayer);\n    const item = this.treeCtrlCache_[id];\n    googAsserts.assert(item);\n    const treeCtrl = item.treeCtrl;\n\n    const layer = gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl);\n    googAsserts.assert(\n      layer instanceof olLayerImage ||\n      layer instanceof olLayerTile\n    );\n\n    const source = layer.getSource();\n    googAsserts.assert(\n      source instanceof olSourceImageWMS ||\n      source instanceof olSourceTileWMS\n    );\n\n    const filtrableLayerName = dataSource.getFiltrableOGCLayerName();\n    const projCode = treeCtrl.map.getView().getProjection().getCode();\n    const filterString = dataSource.visible ?\n      this.ngeoRuleHelper_.createFilterString({\n        dataSource,\n        projCode\n      }) :\n      null;\n\n    const filterParam = 'FILTER';\n    let filterParamValue = null;\n\n    if (filterString) {\n      const params = source.getParams();\n      const layersParam = params['LAYERS'];\n      const layersList = layersParam.split(',');\n      googAsserts.assert(layersList.length >= 1);\n\n      if (layersList.length === 1) {\n        // When there's only one layer in the `LAYERS` parameters, then\n        // the filter string is given as-is.\n        filterParamValue = filterString;\n      } else {\n        // When there's more then one layer, then each filter must be wrapped\n        // between parenthesis and the order must also match the `LAYERS`\n        // parameter as well.\n        const filterParamValues = [];\n        for (let i = 0, ii = layersList.length; i < ii; i++) {\n          if (layersList[i] === filtrableLayerName) {\n            filterParamValues.push(`(${filterString})`);\n          } else {\n            filterParamValues.push('()');\n          }\n        }\n        filterParamValue = filterParamValues.join('');\n      }\n    }\n\n    source.updateParams({\n      [filterParam]: filterParamValue\n    });\n  }\n\n  /**\n   * Called when either the `timeLowerValue` or `timeUpperValue` property of a\n   * data source changes.\n   *\n   * Get the range value from the data source, then update the WMS layer\n   * thereafter.\n   *\n   * @param {!gmf.datasource.OGC} dataSource Data source.\n   * @private\n   */\n  handleDataSourceTimeValueChange_(dataSource) {\n\n    const id = olBase.getUid(dataSource.gmfLayer);\n    const item = this.treeCtrlCache_[id];\n    googAsserts.assert(item);\n    const wmsLayer = googAsserts.assert(item.wmsLayer);\n    const wmsSource = googAsserts.assertInstanceof(\n      wmsLayer.getSource(),\n      olSourceImageWMS\n    );\n\n    const timeProperty = googAsserts.assert(dataSource.timeProperty);\n    let timeParam;\n    const range = dataSource.timeRangeValue;\n    if (range) {\n      timeParam = this.ngeoWMSTime_.formatWMSTimeParam(timeProperty, range);\n    }\n\n    // No need to update the TIME param if already the same value;\n    const params = wmsSource.getParams();\n    const currentTimeParam = params['TIME'];\n    if (currentTimeParam === timeParam) {\n      return;\n    }\n\n    // The `timeParam` can be undefined, which means that the TIME property\n    // gets reset.\n    this.ngeoLayerHelper_.updateWMSLayerState(\n      wmsLayer,\n      wmsSource.getParams()['LAYERS'],\n      timeParam\n    );\n  }\n\n  /**\n   * Called when the background layer changes. Add/Remove the according data\n   * sources to/from the ngeo data sources collection. Update the data source\n   * `visible` property as well.\n   *\n   * The `querySourceIds` property in the layer is used to determine the\n   * data sources that are bound to the layer.\n   *\n   * @param {!ngeox.BackgroundEvent} evt Event.\n   * @private\n   */\n  handleNgeoBackgroundLayerChange_(evt) {\n\n    const previousBackgroundLayer = evt.detail.previous;\n    const currentBackgroundLayer = evt.detail.current;\n    const cache = this.dataSourcesCache_;\n\n    // Remove data sources linked to previous background layer\n    if (previousBackgroundLayer) {\n      const ids = previousBackgroundLayer.get('querySourceIds');\n      if (Array.isArray(ids)) {\n        for (const id of ids) {\n          const dataSource = cache[id];\n          if (dataSource) {\n            dataSource.visible = false;\n            this.dataSources_.remove(dataSource);\n          }\n        }\n      }\n    }\n\n    // Add data sources linked to current background layer\n    if (currentBackgroundLayer) {\n      const ids = currentBackgroundLayer.get('querySourceIds');\n      if (Array.isArray(ids)) {\n        for (const id of ids) {\n          const dataSource = cache[id];\n          if (dataSource) {\n            dataSource.visible = true;\n            this.dataSources_.push(dataSource);\n          }\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourcesManager', [\n  gmfDatasourceWFSAliases.module.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoDatasourceDataSources.module.name,\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfDataSourcesManager', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.module\n */\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfDatasourceHelper from 'gmf/datasource/Helper.js';\nimport gmfDatasourceManager from 'gmf/datasource/Manager.js';\nimport gmfDatasourceWFSAliases from 'gmf/datasource/WFSAliases.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDatasourceModule', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfDatasourceHelper.module.name,\n  gmfDatasourceManager.module.name,\n  gmfDatasourceWFSAliases.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Disclaimer\n */\nimport 'bootstrap/js/alert.js';\nimport googAsserts from 'goog/asserts.js';\n\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * Provides methods to display any sort of messages, disclaimers, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @ngdoc service\n * @ngname ngeoDisclaimer\n * @ngInject\n */\nconst exports = function($sce, gettextCatalog, ngeoCreatePopup) {\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @private\n   * @type {ngeox.PopupFactory}\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  ngeoMessageMessage.call(this);\n\n  const container = angular.element('<div class=\"ngeo-disclaimer\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * Cache of messages.\n   * @type {Object.<string, angular.JQLite|ngeo.message.Popup>}\n   * @private\n   */\n  this.messages_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Show disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.alert = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Close disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.close = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.closeMessage_, this);\n};\n\n\n/**\n * Show the message.\n * @param {ngeox.Message} message Message.\n * @protected\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const gettextCatalog = this.gettextCatalog_;\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  // No need to do anything if message already exist.\n  const uid = this.getMessageUid_(message);\n  if (this.messages_[uid] !== undefined) {\n    return;\n  }\n\n  const showInPopup = message.popup === true;\n\n  if (showInPopup) {\n    // display the message in a popup, i.e. using the ngeo create popup\n    const popup = this.createPopup_();\n    const content = this.sce_.trustAsHtml(message.msg);\n    popup.open({\n      autoDestroy: true,\n      content: content,\n      title: '&nbsp;'\n    });\n\n    // Watch the open property\n    popup.scope.$watch('open', (newVal, oldVal) => {\n      if (!newVal) {\n        this.closeMessage_(message);\n      }\n    });\n\n    this.messages_[uid] =  popup;\n\n  } else {\n    // display the message using a boostrap dismissible alert\n    const classNames = ['alert', 'fade', 'alert-dismissible'];\n    switch (type) {\n      case ngeoMessageMessage.Type.ERROR:\n        classNames.push('alert-danger');\n        break;\n      case ngeoMessageMessage.Type.INFORMATION:\n        classNames.push('alert-info');\n        break;\n      case ngeoMessageMessage.Type.SUCCESS:\n        classNames.push('alert-success');\n        break;\n      case ngeoMessageMessage.Type.WARNING:\n        classNames.push('alert-warning');\n        break;\n      default:\n        break;\n    }\n\n    const el = angular.element(\n      `<div role=\"alert\" class=\"${classNames.join(' ')}\"></div>`);\n    const button = angular.element(\n      `<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"${\n        gettextCatalog.getString('Close')\n      }\"><span aria-hidden=\"true\" class=\"fa fa-times\"></span></button>`);\n    const msg = angular.element('<span />').html(message.msg);\n    el.append(button).append(msg);\n\n    let container;\n\n    if (message.target) {\n      container = angular.element(message.target);\n    } else {\n      container = this.container_;\n    }\n\n    container.append(el);\n    el.addClass('in');\n\n    // Listen when the message gets closed to cleanup the cache of messages\n    el.on('closed.bs.alert', () => {\n      this.closeMessage_(message);\n    });\n\n    this.messages_[uid] =  el;\n  }\n};\n\n\n/**\n * @param {ngeox.Message} message Message.\n * @return {string} The uid.\n * @private\n */\nexports.prototype.getMessageUid_ = function(message) {\n  return `${message.msg}-${message.type}`;\n};\n\n\n/**\n * Close the message.\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.closeMessage_ = function(message) {\n  const uid = this.getMessageUid_(message);\n  const obj = this.messages_[uid];\n\n  // (1) No need to do anything if message doesn't exist\n  if (obj === undefined) {\n    return;\n  }\n\n  // (2) Close message (popup or alert)\n  if (obj instanceof ngeoMessagePopup) {\n    // (2.1) Close popup, if not already closed\n    if (obj.getOpen()) {\n      obj.setOpen(false);\n    }\n  } else {\n    // (2.2) Check if the message hasn't been closed using the UI, i.e. by\n    //       clicking the close button. If not, then close it.\n    if (obj.hasClass('in')) {\n      obj.alert('close');\n    }\n  }\n\n  // (3) Remove message from cache since it's closed now.\n  delete this.messages_[uid];\n};\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoDisclaimer', [\n  ngeoMessagePopup.module.name,\n]);\n\nexports.module.service('ngeoDisclaimer', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.disclaimer.component\n */\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageDisclaimer from 'ngeo/message/Disclaimer.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\n\nimport 'angular-sanitize';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfDisclaimer', [\n  'ngSanitize',\n  ngeoMapLayerHelper.module.name,\n  ngeoMessageDisclaimer.module.name,\n  ngeoMiscEventHelper.module.name,\n]);\n\n\n/**\n * @constructor\n * @private\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$sce} $sce Angular sce service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @param {!ngeo.message.Disclaimer} ngeoDisclaimer Ngeo Disclaimer service.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo Event Helper.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisclaimerController\n */\nexports.Controller_ = function($element, $scope, $sce, $timeout,\n  gettextCatalog, ngeoCreatePopup, ngeoDisclaimer, ngeoEventHelper, ngeoLayerHelper) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.external;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.popup;\n\n  /**\n   * Visibility that is set to true when a new msg is there.\n   * @type {boolean}\n   * @export\n   */\n  this.visibility = false;\n\n  /**\n   * Trusted html messages that can be displayed as html.\n   * @type {string|undefined}\n   * @export\n   */\n  this.msg;\n\n  /**\n   * @type {!Array<string>}\n   * @export\n   */\n  this.msgs_ = [];\n\n  /**\n   * @type {!angular.$sce}\n   * @private\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {!ngeox.PopupFactory}\n   * @private\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  /**\n   * @type {!ngeo.message.Disclaimer}\n   * @private\n   */\n  this.disclaimer_ = ngeoDisclaimer;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.eventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.dataLayerGroup_ = this.ngeoLayerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n  this.registerLayer_(this.dataLayerGroup_);\n};\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersAdd_ = function(evt) {\n  this.timeout_(() => {\n    const layer = evt.element;\n    googAsserts.assertInstanceof(layer, olLayerBase);\n    this.registerLayer_(layer);\n  });\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersRemove_ = function(evt) {\n  const layer = evt.element;\n  googAsserts.assertInstanceof(layer, olLayerBase);\n  this.unregisterLayer_(layer);\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.registerLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Listen to added/removed layers to this group\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'add',\n        this.handleLayersAdd_,\n        this\n      )\n    );\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'remove',\n        this.handleLayersRemove_,\n        this\n      )\n    );\n\n    // (2) Register existing layers in the group\n    layer.getLayers().forEach((layer) => {\n      this.registerLayer_(layer);\n    });\n\n  } else {\n\n    // Show disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach((disclaimer) => {\n        this.showDisclaimerMessage_(disclaimer);\n      });\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.unregisterLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Clear event listeners\n    this.eventHelper_.clearListenerKey(layerUid);\n\n    // (2) Unregister existing layers in the group\n    layer.getLayers().forEach(layer => this.unregisterLayer_(layer));\n\n  } else {\n\n    // Close disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach((disclaimer) => {\n        this.closeDisclaimerMessage_(disclaimer);\n      });\n    }\n  }\n\n};\n\n\nexports.Controller_.prototype.$onDestroy = function() {\n  this.unregisterLayer_(this.dataLayerGroup_);\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.showDisclaimerMessage_ = function(msg) {\n  msg = this.gettextCatalog_.getString(msg);\n  if (this.external) {\n    if (this.msgs_.indexOf(msg) < 0) {\n      this.msgs_.push(msg);\n    }\n    this.msg = `${this.sce_.trustAsHtml(this.msgs_.join('<br />'))}`;\n    this.visibility = true;\n  } else {\n    this.disclaimer_.alert({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.closeDisclaimerMessage_ = function(msg) {\n  msg = this.gettextCatalog_.getString(msg);\n  if (this.external) {\n    this.visibility = false;\n    this.msgs_.length = 0;\n    this.msg = '';\n  } else {\n    this.disclaimer_.close({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * Provide a \"disclaimer\" component for GeoMapFish that is bound to the\n * layers added and removed from a map.\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\">\n *      </gmf-disclaimer>\n *\n * You can also display the disclaimer messages in popups or use them in another\n * context. The example below show you how to display the disclaimer messages\n * in a ngeo-modal window (external case).\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\"\n *        gmf-disclaimer-external=\"::true\"\n *        gmf-disclaimer-external-msg=\"disclaimerMsg\"\n *        gmf-disclaimer-external-visibility=\"disclaimerVisibility\">\n *      </gmf-disclaimer>\n *      <ngeo-modal ng-model=\"disclaimerVisibility\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *       </div>\n *       <div class=\"modal-body\">\n *         <div ng-bind-html=\"disclaimerMsg\"></div>\n *       </div>\n *     </ngeo-modal>\n *\n * @htmlAttribute {boolean} gmf-disclaimer-popup Whether to show the disclaimer\n *     messages in popups or not. Defaults to `false`.\n * @htmlAttribute {boolean?} gmf-disclaimer-external Whether to use disclaimer\n *     messages elsewhere or not. Default to `false`. If true, you should use\n *     the gmf-disclaimer-external-msg and the\n *     gmf-disclaimer-external-visibility too.\n * @htmlAttribute {boolean?} gmf-disclaimer-external-visibility variable that\n *     will be set to true if the disclaimers contain a new message. To uses it,\n *     you must set the gmf-disclaimer-external to true.\n * @htmlAttribute {string?} gmf-disclaimer-external-msg variable that will\n *     contains the disclaimer messages. To uses it, you must set the\n *     gmf-disclaimer-external to true.\n * @htmlAttribute {ol.Map=} gmf-disclaimer-map The map.\n *\n * @ngdoc component\n * @ngname gmfDisclaimer\n */\nexports.component_ = {\n  controller: exports.Controller_,\n  bindings: {\n    'popup': '<?gmfDisclaimerPopup',\n    'map': '=gmfDisclaimerMap',\n    'external': '<?gmfDisclaimerExternal',\n    'visibility': '=?gmfDisclaimerExternalVisibility',\n    'msg': '=?gmfDisclaimerExternalMsg'\n  }\n};\n\n\nexports.component('gmfDisclaimer', exports.component_);\n\n\nexport default exports;\n","/**\n * @module gmf.filters.SavedFilters\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * The GeoMapFish service responsible of storing filters that can be applied\n   * to data sources. A filter consists of:\n   *\n   * - a condition\n   * - a list of directed rules\n   * - a list of custom rules\n   * - a data source\n   * - a name\n   *\n   * The filters are saved in the browser local storage, if available.\n   * Otherwise, they are kept in this service for the duration of the visit.\n   *\n   * @param {!angular.Scope} $rootScope Angular rootScope.\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfSavedFilters\n   */\n  constructor($rootScope) {\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * This service can have a data source id bound to it, which automatically\n     * populates an array of items that are only bound to this data source.\n     * @type {?number}\n     * @private\n     */\n    this.currentDataSourceId_ = null;\n\n    /**\n     * @type {!Array.<!gmf.filters.SavedFilters.Item>}\n     * @private\n     */\n    this.currentDataSourceItems_ = [];\n\n    /**\n     * The used by this service to save in the local storage.\n     * @type {string}\n     * @private\n     */\n    this.localStorageKey_ = 'gmf_savedfilters';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.useLocalStorage_ = true;\n\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n\n    /**\n     * @type {!Array.<!gmf.filters.SavedFilters.Item>}\n     * @private\n     */\n    this.items_ = [];\n\n    this.rootScope_.$watchCollection(\n      () => this.items,\n      () => {\n        this.rePopulateCurrentDataSourceItems_();\n      }\n    );\n\n    if (this.useLocalStorage_) {\n      this.loadItemsFromLocalStorage_();\n    }\n\n  }\n\n  /**\n   * @return {!Array.<!gmf.filters.SavedFilters.Item>} Items\n   * @export\n   */\n  get currentDataSourceItems() {\n    return this.currentDataSourceItems_;\n  }\n\n  /**\n   * @param {?number} id Current data source id.\n   * @export\n   */\n  set currentDataSourceId(id) {\n    this.currentDataSourceId_ = id;\n    this.rePopulateCurrentDataSourceItems_();\n  }\n\n  /**\n   * @return {!Array.<!gmf.filters.SavedFilters.Item>} Items\n   * @export\n   */\n  get items() {\n    return this.items_;\n  }\n\n  /**\n   * Read the filter items that are saved in the local storage and set them\n   * as this service's items.\n   * @private\n   */\n  loadItemsFromLocalStorage_() {\n    if (window.localStorage[this.localStorageKey_]) {\n      const items = JSON.parse(window.localStorage[this.localStorageKey_]);\n      googAsserts.assertArray(items);\n      this.items_ = items;\n    }\n  }\n\n  /**\n   * Search for an item using a given name and data source id. Returns the\n   * index if it exists, otherwise -1 is returned.\n   * @param {string} name Name.\n   * @param {number} id Data source id.\n   * @return {number} The index of the item, if it exists.\n   * @export\n   */\n  indexOfItem(name, id) {\n\n    let item;\n    let idx = -1;\n    for (let i = 0, ii = this.items_.length; i < ii; i++) {\n      item = this.items[i];\n      if (item.dataSourceId === id && item.name === name) {\n        idx = i;\n        break;\n      }\n    }\n\n    return idx;\n  }\n\n  /**\n   * @param {!gmf.filters.SavedFilters.Item} item Item.\n   * @export\n   */\n  save(item) {\n\n    // (1) Add or replace item\n    const idx = this.indexOfItem(item.name, item.dataSourceId);\n    if (idx !== -1) {\n      this.items[idx] = item;\n    } else {\n      this.items.push(item);\n    }\n\n    // (2) Update local storage\n    if (this.useLocalStorage_) {\n      this.saveItemsInLocalStorage_();\n    }\n  }\n\n  /**\n   * @param {!gmf.filters.SavedFilters.Item} item Item.\n   * @export\n   */\n  remove(item) {\n\n    // (1) Remove the item\n    const found = olArray.remove(this.items, item);\n\n    // (2) Update local storage\n    if (found && this.useLocalStorage_) {\n      this.saveItemsInLocalStorage_();\n    }\n  }\n\n  /**\n   * Save all items in the local storage.\n   * @private\n   */\n  saveItemsInLocalStorage_() {\n    window.localStorage[this.localStorageKey_] = JSON.stringify(this.items);\n  }\n\n  /**\n   * @private\n   */\n  rePopulateCurrentDataSourceItems_() {\n    // (1) Clear existing items\n    this.currentDataSourceItems_.length = 0;\n\n    // (2) Populate\n    if (this.currentDataSourceId_ !== null) {\n      for (const item of this.items) {\n        if (item.dataSourceId === this.currentDataSourceId_) {\n          this.currentDataSourceItems_.push(item);\n        }\n      }\n    }\n  }\n\n};\n\n\nexports.module = angular.module('gmfSavedFilters', []);\n\nexports.module.service('gmfSavedFilters', exports);\n\n\n/**\n * The definition of a saved filter item.\n * @constructor\n * @struct\n * @export\n */\nexports.Item = function() {};\n\n\n/**\n * The condition of the saved filter item.\n * @type {string}\n * @export\n */\nexports.Item.prototype.condition;\n\n\n/**\n * The list of custom rules of the saved filter item.\n * @type {!Array.<!ngeox.rule.AnyOptions>}\n * @export\n */\nexports.Item.prototype.customRules;\n\n\n/**\n * The data source id related to the filter.\n * @type {number}\n * @export\n */\nexports.Item.prototype.dataSourceId;\n\n\n/**\n * The list of directed rules of the saved filter item.\n * @type {!Array.<!ngeox.rule.AnyOptions>}\n * @export\n */\nexports.Item.prototype.directedRules;\n\n\n/**\n * A human-readable name given to the saved filter item.\n * @type {string}\n * @export\n */\nexports.Item.prototype.name;\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.ruleComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMenu from 'ngeo/Menu.js';\nimport ngeoDrawComponent from 'ngeo/draw/component.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionModify from 'ngeo/interaction/Modify.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDatepickerComponent from 'ngeo/misc/datepickerComponent.js';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olArray from 'ol/array.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoRule', [\n  ngeoDrawComponent.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoMapFeatureOverlay.module.name,\n  ngeoMiscDatepickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/filter/rulecomponent', require('./rulecomponent.html'));\n});\n\n\nexports.value('ngeoRuleTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoRuleTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/filter/rulecomponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoRuleTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoRuleTemplateUrl($attrs, ngeoRuleTemplateUrl) {\n  return ngeoRuleTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.RuleController_ = class {\n\n  /**\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate\n   *     manager service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoRuleController\n   */\n  constructor(gettextCatalog, $scope, $timeout, ngeoFeatureHelper,\n    ngeoRuleHelper, ngeoToolActivateMgr) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * The original rule.\n     * @type {!ngeo.rule.Rule}\n     * @export\n     */\n    this.rule;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // Injected properties\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.ToolActivateMgr}\n     * @private\n     */\n    this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n\n    // Inner properties\n\n    /**\n     * The cloned rule. Changes in the UI are applied to the clone 'on-the-fly'.\n     * Changes in the clone are applied back in the original rule when the\n     * apply button is clicked.\n     * @type {!ngeo.rule.Rule}\n     * @export\n     */\n    this.clone;\n\n    const operatorType = ngeoRuleRule.OperatorType;\n    const spatialOperatorType = ngeoRuleRule.SpatialOperatorType;\n    const temporalOperatorType = ngeoRuleRule.TemporalOperatorType;\n\n    /**\n     * @type {Object.<string, string>}\n     * @export\n     */\n    this.operators = {\n      [operatorType.EQUAL_TO]: gettextCatalog.getString('Is equal to'),\n      [operatorType.GREATER_THAN]: gettextCatalog.getString('Is greater than'),\n      [operatorType.GREATER_THAN_OR_EQUAL_TO]: gettextCatalog.getString(\n        'Is greater than or equal to'),\n      [operatorType.LESSER_THAN]: gettextCatalog.getString('Is lesser than'),\n      [operatorType.LESSER_THAN_OR_EQUAL_TO]: gettextCatalog.getString(\n        'Is lesser than or equal to'),\n      [operatorType.NOT_EQUAL_TO]: gettextCatalog.getString('Is not equal to'),\n      [operatorType.LIKE]: gettextCatalog.getString('Contains'),\n      [spatialOperatorType.CONTAINS]: gettextCatalog.getString('Contains'),\n      [spatialOperatorType.INTERSECTS]: gettextCatalog.getString('Intersects'),\n      [spatialOperatorType.WITHIN]: gettextCatalog.getString('Is inside of'),\n      [temporalOperatorType.BEGINS]: gettextCatalog.getString('Begins at'),\n      [temporalOperatorType.DURING]: gettextCatalog.getString('During'),\n      [temporalOperatorType.ENDS]: gettextCatalog.getString('Ends at'),\n      [temporalOperatorType.EQUALS]: gettextCatalog.getString('Is equal to')\n    };\n\n    /**\n     * @type {Object.<string, string>}\n     * @export\n     */\n    this.operatorsShortFormat = {\n      [operatorType.EQUAL_TO]: '=',\n      [operatorType.GREATER_THAN]: '>',\n      [operatorType.GREATER_THAN_OR_EQUAL_TO]: '>=',\n      [operatorType.LESSER_THAN]: '<',\n      [operatorType.LESSER_THAN_OR_EQUAL_TO]: '<=',\n      [operatorType.NOT_EQUAL_TO]: '!=',\n      [operatorType.LIKE]: '~',\n      [temporalOperatorType.BEGINS]: '>=',\n      [temporalOperatorType.ENDS]: '<=',\n      [temporalOperatorType.EQUALS]: '='\n    };\n\n    /**\n     * Time property used when the rule is of type 'date|datetime' and uses\n     * a range of date.\n     * @type {!ngeox.TimeProperty}\n     * @export\n     */\n    this.timeRangeMode = {\n      widget: 'datepicker',\n      maxValue: null,\n      minValue: null,\n      maxDefValue: this.createDate_(),\n      minDefValue: this.createWeekAgoDate_(),\n      mode: 'range',\n      interval: [0, 1, 0, 0]\n    };\n\n    /**\n     * Time property used when the rule is of type 'date|datetime' and uses\n     * a single date.\n     * @type {!ngeox.TimeProperty}\n     * @export\n     */\n    this.timeValueMode = {\n      widget: 'datepicker',\n      maxValue: null,\n      minValue: null,\n      maxDefValue: this.createDate_(),\n      minDefValue: this.createDate_(),\n      mode: 'value',\n      interval: [0, 1, 0, 0]\n    };\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @private\n     */\n    this.toolActivate_;// = new ngeo.misc.ToolActivate(this.rule, 'active');\n\n    /**\n     * @type {!Array.<Function>}\n     * @private\n     */\n    this.unlisteners_ = [];\n\n\n    // Inner properties when dealing with a `ngeo.rule.Geometry`\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.drawActive = false;\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.drawToolActivate = new ngeoMiscToolActivate(this, 'drawActive');\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @export\n     */\n    this.drawnFeatures = new olCollection();\n\n    /**\n     * @type {?ngeo.Menu}\n     * @private\n     */\n    this.menu_ = null;\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @export\n     */\n    this.selectedFeatures = new olCollection();\n\n    /**\n     * @type {!ol.Collection.<!ol.interaction.Interaction>}\n     * @private\n     */\n    this.interactions_ = new olCollection();\n\n    /**\n     * @type {!ngeo.interaction.Modify}\n     * @private\n     */\n    this.modify_ = new ngeoInteractionModify({\n      features: this.selectedFeatures,\n      style: ngeoFeatureHelper.getVertexStyle(false)\n    });\n    this.interactions_.push(this.modify_);\n\n    /**\n     * @type {ngeo.interaction.Rotate}\n     * @private\n     */\n    this.rotate_ = new ngeoInteractionRotate({\n      features: this.selectedFeatures,\n      style: new olStyleStyle({\n        text: new olStyleText({\n          text: '\\uf01e',\n          font: 'normal 18px FontAwesome',\n          fill: new olStyleFill({\n            color: '#7a7a7a'\n          })\n        })\n      })\n    });\n    this.interactions_.push(this.rotate_);\n\n    /**\n     * @type {ngeo.interaction.Translate}\n     * @private\n     */\n    this.translate_ = new ngeoInteractionTranslate({\n      features: this.selectedFeatures,\n      style: new olStyleStyle({\n        text: new olStyleText({\n          text: '\\uf047',\n          font: 'normal 18px FontAwesome',\n          fill: new olStyleFill({\n            color: '#7a7a7a'\n          })\n        })\n      })\n    });\n    this.interactions_.push(this.translate_);\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    this.initializeInteractions_();\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.modifyToolActivate = new ngeoMiscToolActivate(\n      this.modify_,\n      'active'\n    );\n\n    /**\n     * @type {ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.rotateToolActivate = new ngeoMiscToolActivate(\n      this.rotate_,\n      'active'\n    );\n\n    /**\n     * @type {ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.translateToolActivate = new ngeoMiscToolActivate(\n      this.translate_,\n      'active'\n    );\n\n    /**\n     * The geometry type used by the clone feature.\n     * @type {?string}\n     * @export\n     */\n    this.geomType = null;\n  }\n\n  /**\n   * Called on initialization of the controller.\n   *\n   * Clone the rule to be able to work with the clone directly.\n   */\n  $onInit() {\n    this.clone = this.ngeoRuleHelper_.cloneRule(this.rule);\n\n    this.toolActivate_ = new ngeoMiscToolActivate(this.rule, 'active');\n\n    this.ngeoToolActivateMgr_.registerTool(\n      this.toolGroup, this.toolActivate_);\n\n    this.scope_.$watch(\n      () => this.rule.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    // If the rule is a DATE or DATETIME, then a datepicker directive is used.\n    // It is not possible to set the current values to the datepicker, but you\n    // can set the initial values. This is why it is created when the rule\n    // becomes active (see the partials/rule.html).\n    //\n    // This chunk of code ensures that the rule properties are synchronized\n    // with the TimeProperty objects required to build the datepickers.\n    if (this.clone.type === ngeoFormatAttributeType.DATE ||\n        this.clone.type === ngeoFormatAttributeType.DATETIME\n    ) {\n      // Watch 'expression'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.getExpression(),\n        (newVal) => {\n          this.timeValueMode.minValue = newVal;\n        }\n      ));\n      // Watch 'lowerBoundary'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.lowerBoundary,\n        (newVal) => {\n          this.timeRangeMode.minValue = newVal;\n        }\n      ));\n      // Watch 'upperBoundary'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.upperBoundary,\n        (newVal) => {\n          this.timeRangeMode.maxValue = newVal;\n        }\n      ));\n    } else if (this.clone.type === ngeoFormatAttributeType.GEOMETRY) {\n\n      // Watch 'operator' of clone. Make sure any existing geometry is\n      // supported by the newly selected operator. If it doesn't, reset\n      // the expression, i.e. geometry.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.operator,\n        (newVal) => {\n          if (newVal &&\n              newVal === ngeoRuleRule.SpatialOperatorType.CONTAINS\n          ) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            const geometry = clone.feature.getGeometry();\n            if (geometry) {\n              const geomType = this.ngeoFeatureHelper_.getType(clone.feature);\n              const supportedTypes = [\n                ngeoGeometryType.CIRCLE,\n                ngeoGeometryType.POLYGON,\n                ngeoGeometryType.RECTANGLE\n              ];\n              if (!olArray.includes(supportedTypes, geomType)) {\n                this.clone.setExpression(null);\n              }\n            }\n          }\n        }\n      ));\n\n      // Watch 'expression' of clone. Set 'geomType' property accordingly.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.expression,\n        (newVal) => {\n          if (newVal) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            this.geomType = this.ngeoFeatureHelper_.getType(clone.feature);\n          } else {\n            this.geomType = null;\n          }\n        }\n      ));\n\n      // Watch both 'expression', 'active' and the modify control to be all\n      // thruthy. When that's the case, the clone feature is added to the\n      // selection collection.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => {\n          const hasExpression = this.clone.getExpression() !== null;\n          const isActive = this.rule.active === true;\n          const editToolIsActive = this.modify_.getActive() ||\n                this.rotate_.getActive() ||\n                this.translate_.getActive();\n          return hasExpression && isActive && editToolIsActive;\n        },\n        (newVal) => {\n          if (newVal) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            this.selectedFeatures.push(clone.feature);\n          } else {\n            this.selectedFeatures.clear();\n          }\n        }\n      ));\n    }\n  }\n\n  /**\n   * Called on destruction of the controller.\n   */\n  $onDestroy() {\n    if (this.rule.active) {\n      this.rule.active = false;\n      // in $onDestroy, setting active to false will not call the handler. Call\n      // it manually to let it do its magic\n      this.handleActiveChange_(false, true);\n    }\n    this.ngeoToolActivateMgr_.unregisterTool(\n      this.toolGroup, this.toolActivate_);\n    for (let i = 0, ii = this.unlisteners_.length; i < ii; i++) {\n      this.unlisteners_[i]();\n    }\n    this.unlisteners_.length = 0;\n    this.clone.destroy();\n  }\n\n  /**\n   * @export\n   */\n  toggle() {\n    if (this.rule.active) {\n      this.cancel();\n    } else {\n      this.rule.active = true;\n    }\n  }\n\n  /**\n   * Apply the changes that were made in the original rule.\n   * @export\n   */\n  apply() {\n    this.ngeoRuleHelper_.extendRule(this.clone, this.rule);\n    this.rule.active = false;\n  }\n\n  /**\n   * Revert the changes that were made in the clone rule.\n   * @export\n   */\n  cancel() {\n    this.ngeoRuleHelper_.extendRule(this.rule, this.clone);\n    this.rule.active = false;\n  }\n\n  /**\n   * Reset both original and clone rules.\n   * @export\n   */\n  reset() {\n    this.clone.reset();\n    this.rule.reset();\n  }\n\n  /**\n   * Called when a choice is clicked, when using a `ngeo.rule.Select` rule type.\n   * Add/remove the choice to/from the `expression` of the rule.\n   * @param {string|number} choice Choice that has been clicked.\n   * @export\n   */\n  toggleChoiceSelection(choice) {\n    const rule = googAsserts.assertInstanceof(this.clone, ngeoRuleSelect);\n    const choices = rule.getExpression() ? rule.getExpression().split(',') : [];\n    const idx = choices.indexOf(choice);\n    if (idx > -1) {\n      choices.splice(idx, 1);\n    } else {\n      choices.push(choice);\n    }\n    rule.setExpression(choices.length ? choices.join(',') : null);\n  }\n\n\n  /**\n   * @param {Object} date Date\n   * @export\n   */\n  onDateSelected(date) {\n    this.clone.setExpression(date['start']);\n  }\n\n  /**\n   * @param {Object} date Date\n   * @export\n   */\n  onDateRangeSelected(date) {\n    this.clone.lowerBoundary = date['start'];\n    this.clone.upperBoundary = date['end'];\n  }\n\n  /**\n   * @param {number=} opt_timeDelta Time delta to go back in the past.\n   * @return {string} ISO string of the date\n   * @private\n   */\n  createDate_(opt_timeDelta) {\n\n    const date = new Date();\n\n    if (opt_timeDelta !== undefined) {\n      const time = date.getTime() - opt_timeDelta;\n      date.setTime(time);\n    }\n\n    return date.toISOString();\n  }\n\n  /**\n   * @return {string} ISO string of the date\n   * @private\n   */\n  createWeekAgoDate_() {\n    return this.createDate_(1000 * 60 * 60 * 24 * 7); // A week ago date\n  }\n\n  /**\n   * @param {number} time Time.\n   * @return {string} Date\n   * @export\n   */\n  timeToDate(time) {\n    const date = new Date(time);\n    return date.toLocaleDateString();\n  }\n\n\n  // === Methods used when bound to a `ngeo.rule.Geometry`\n\n\n  /**\n   * Called when the active property of a rule changes. Only used when this\n   * component is bound to a geometry rule.\n   *\n   * Manage the activation/deactivation of the interactions.\n   *\n   * @param {boolean} active Whether the rule is active or not.\n   * @param {boolean} oldActive Whether the rule was active or not.\n   * @private\n   */\n  handleActiveChange_(active, oldActive) {\n\n    if (!(this.rule instanceof ngeoRuleGeometry) ||\n        !(this.clone instanceof ngeoRuleGeometry) ||\n        active === oldActive\n    ) {\n      return;\n    }\n\n    const keys = this.listenerKeys_;\n    const uid = ['ngeo-rule-', olBase.getUid(this)].join('-');\n    const toolMgr = this.ngeoToolActivateMgr_;\n\n    const ruleFeature = this.rule.feature;\n    const cloneFeature = this.clone.feature;\n\n    const mapDiv = this.map.getViewport();\n    googAsserts.assertElement(mapDiv);\n\n    if (active) {\n      keys.push(\n        olEvents.listen(\n          this.drawnFeatures,\n          'add',\n          this.handleFeaturesAdd_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          mapDiv,\n          'contextmenu',\n          this.handleMapContextMenu_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          this.translate_,\n          'translateend',\n          this.handleTranslateEnd_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          this.rotate_,\n          'rotateend',\n          this.handleRotateEnd_,\n          this\n        )\n      );\n\n      this.featureOverlay.removeFeature(ruleFeature);\n      this.featureOverlay.addFeature(cloneFeature);\n\n      this.registerInteractions_();\n\n      toolMgr.registerTool(uid, this.drawToolActivate, false);\n      toolMgr.registerTool(uid, this.modifyToolActivate, true);\n      toolMgr.registerTool(uid, this.rotateToolActivate, false);\n      toolMgr.registerTool(uid, this.translateToolActivate, false);\n\n      this.modify_.setActive(true);\n\n      if (cloneFeature.getGeometry()) {\n        this.ngeoFeatureHelper_.setStyle(cloneFeature, true);\n      }\n\n    } else {\n      cloneFeature.setStyle(null);\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n\n      this.drawActive = false;\n\n      toolMgr.unregisterTool(uid, this.drawToolActivate);\n      toolMgr.unregisterTool(uid, this.modifyToolActivate);\n      toolMgr.unregisterTool(uid, this.rotateToolActivate);\n      toolMgr.unregisterTool(uid, this.translateToolActivate);\n\n      this.modify_.setActive(false);\n\n      this.unregisterInteractions_();\n\n      if (this.selectedFeatures.getLength()) {\n        this.featureOverlay.removeFeature(cloneFeature);\n      }\n      this.featureOverlay.addFeature(ruleFeature);\n\n      this.selectedFeatures.clear();\n    }\n  }\n\n  /**\n   * Initialize interactions by setting them inactive and decorating them\n   * @private\n   */\n  initializeInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      interaction.setActive(false);\n      ngeoMiscDecorate.interaction(interaction);\n    });\n  }\n\n  /**\n   * Register interactions by adding them to the map\n   * @private\n   */\n  registerInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      this.map.addInteraction(interaction);\n    });\n  }\n\n  /**\n   * Register interactions by removing them to the map\n   * @private\n   */\n  unregisterInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      this.map.removeInteraction(interaction);\n    });\n  }\n\n  /**\n   * @param {ol.Collection.Event} evt Event.\n   * @private\n   */\n  handleFeaturesAdd_(evt) {\n    // timeout to prevent double-click to zoom the map\n    this.timeout_(() => {\n\n      const clone = googAsserts.assertInstanceof(\n        this.clone, ngeoRuleGeometry);\n      const feature = clone.feature;\n\n      // (1) Apply geometry\n      const drawnFeature = googAsserts.assertInstanceof(\n        evt.element,\n        olFeature\n      );\n      const geometry = googAsserts.assertInstanceof(\n        drawnFeature.getGeometry(),\n        olGeomGeometry\n      );\n      clone.geometry = geometry;\n\n      // (2) Deactivate draw tools\n      this.drawActive = false;\n\n      // (3) Set properties, then style\n      const properties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        drawnFeature);\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(feature);\n      feature.setProperties(properties);\n      this.ngeoFeatureHelper_.setStyle(feature, true);\n\n      this.scope_.$apply();\n    });\n  }\n\n  /**\n   * Return the type of geometry used by the rule feature. Used in the template.\n   * @return {string} Geometry type.\n   * @export\n   */\n  getRuleGeometryType() {\n    const rule = googAsserts.assertInstanceof(this.rule, ngeoRuleGeometry);\n    return this.ngeoFeatureHelper_.getType(rule.feature);\n  }\n\n  /**\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleMapContextMenu_(evt) {\n\n    // (1) Remove previous menu, if any\n    this.removeMenu_();\n\n    // (2) Get feature at pixel\n    const pixel = this.map.getEventPixel(evt);\n    const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n    let feature = this.map.forEachFeatureAtPixel(\n      pixel,\n      (feature) => {\n        let ret = false;\n        if (olArray.includes(this.selectedFeatures.getArray(), feature)) {\n          ret = feature;\n        }\n        return ret;\n      }\n    );\n\n    feature = feature ? feature : null;\n\n    // (3) If the clicked feature is the selected one, plus if it has a certain\n    //     type of geometry, then show the menu\n    const actions = [];\n    if (feature) {\n\n      const type = this.ngeoFeatureHelper_.getType(feature);\n      const  gettextCatalog = this.gettextCatalog_;\n\n      if (type == ngeoGeometryType.CIRCLE ||\n          type == ngeoGeometryType.LINE_STRING ||\n          type == ngeoGeometryType.POLYGON ||\n          type == ngeoGeometryType.RECTANGLE) {\n        actions.push({\n          cls: 'fa fa-arrows',\n          label: gettextCatalog.getString('Move'),\n          name: 'move'\n        });\n      }\n      if (type == ngeoGeometryType.LINE_STRING ||\n          type == ngeoGeometryType.POLYGON ||\n          type == ngeoGeometryType.RECTANGLE) {\n        actions.push({\n          cls: 'fa fa-rotate-right',\n          label: gettextCatalog.getString('Rotate'),\n          name: 'rotate'\n        });\n      }\n    }\n\n    if (actions.length) {\n      // (4) Create and show menu\n      this.menu_ = new ngeoMenu({\n        actions\n      });\n\n      olEvents.listen(\n        this.menu_,\n        'actionclick',\n        this.handleMenuActionClick_,\n        this\n      );\n      this.map.addOverlay(this.menu_);\n\n      this.menu_.open(coordinate);\n\n      evt.preventDefault();\n      evt.stopPropagation();\n\n      this.scope_.$apply();\n    }\n  }\n\n  /**\n   * Remove contextual menu, if any.\n   * @private\n   */\n  removeMenu_() {\n    if (this.menu_) {\n      olEvents.unlisten(\n        this.menu_,\n        'actionclick',\n        this.handleMenuActionClick_,\n        this\n      );\n      this.map.removeOverlay(this.menu_);\n      this.menu_ = null;\n    }\n  }\n\n  /**\n   * @param {ngeox.MenuEvent} evt Event.\n   * @private\n   */\n  handleMenuActionClick_(evt) {\n    const action = evt.detail.action;\n\n    switch (action) {\n      case 'move':\n        this.translate_.setActive(true);\n        this.scope_.$apply();\n        break;\n      case 'rotate':\n        this.rotate_.setActive(true);\n        this.scope_.$apply();\n        break;\n      default:\n        console.log(`FIXME - support: ${action}`);\n        break;\n    }\n  }\n\n  /**\n   * @param {ngeox.RotateEvent} evt Event.\n   * @private\n   */\n  handleRotateEnd_(evt) {\n    this.rotate_.setActive(false);\n    this.scope_.$apply();\n  }\n\n  /**\n   * @param {ol.interaction.Translate.Event} evt Event.\n   * @private\n   */\n  handleTranslateEnd_(evt) {\n    this.translate_.setActive(false);\n    this.scope_.$apply();\n  }\n\n};\n\n\n/**\n * The rule component is bound to a `ngeo.rule.Rule` object and shows UI\n * components to be able to edit its properties, such as: operator, expression,\n * etc. The actual properties depend on the type of rule.\n *\n * Also, changes are not made on-the-fly. A button must be clicked for the\n * changes to be applied to the rule.\n */\nexports.component('ngeoRule', {\n  bindings: {\n    'featureOverlay': '<',\n    'map': '<',\n    'rule': '<',\n    'toolGroup': '<'\n  },\n  controller: exports.RuleController_,\n  templateUrl: ngeoRuleTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleComponent from 'ngeo/filter/ruleComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFilter', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoFilterRuleComponent.name,\n  ngeoMapFeatureOverlay.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/filter', require('./component.html'));\n});\n\n\nexports.value('ngeoFilterTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoFilterTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/filter';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoFilterTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoFilterTemplateUrl($attrs, ngeoFilterTemplateUrl) {\n  return ngeoFilterTemplateUrl($attrs);\n}\n\n\nexports.component('ngeoFilter', {\n  bindings: {\n    'aRuleIsActive': '=',\n    'customRules': '<',\n    // It's 'datasource' instead of 'dataSource', because that would require\n    // the attribute to be 'data-source', and Angular strips the 'data-'.\n    'datasource': '<',\n    'directedRules': '<',\n    'featureOverlay': '<',\n    'map': '<',\n    'toolGroup': '<'\n  },\n  controller: 'ngeoFilterController',\n  templateUrl: ngeoFilterTemplateUrl\n});\n\n/**\n * @private\n */\nexports.FilterController_ = class {\n\n  /**\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoFilterController\n   */\n  constructor(gettextCatalog, $scope, $timeout, ngeoMapQuerent,\n    ngeoRuleHelper) {\n\n    // === Binding properties ===\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.aRuleIsActive;\n\n    /**\n     * @type {Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.customRules;\n\n    /**\n     * @type {!ngeo.datasource.OGC}\n     * @export\n     */\n    this.datasource;\n\n    /**\n     * @type {Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.directedRules;\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!ngeo.query.MapQuerent}\n     * @private\n     */\n    this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * @type {Array.<!ngeox.FilterCondition>}\n     * @export\n     */\n    this.conditions = [\n      {\n        text: gettextCatalog.getString('All'),\n        value: ngeoFilterCondition.AND\n      },\n      {\n        text: gettextCatalog.getString('At least one'),\n        value: ngeoFilterCondition.OR\n      },\n      {\n        text: gettextCatalog.getString('None'),\n        value: ngeoFilterCondition.NOT\n      }\n    ];\n\n    /**\n     * List of geometry attributes.\n     * @type {Array.<!ngeox.Attribute>}\n     * @export\n     */\n    this.geometryAttributes = [];\n\n    /**\n     * List of other attribute names.\n     * @type {Array.<!ngeox.Attribute>}\n     * @export\n     */\n    this.otherAttributes = [];\n\n    /**\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.ruleUnlisteners_ = {};\n  }\n\n\n  /**\n   * Called on initialization of the controller.\n   *\n   * Loop through the attributes of the data source and separated them in 2\n   * lists: geometry and the others. Then, apply the filters to the data source.\n   */\n  $onInit() {\n\n    this.scope_.$watch(\n      () => this.aRuleIsActive,\n      this.handleARuleIsActiveChange_.bind(this)\n    );\n\n    // (1) Separate the attributes in 2: geometry and the others.\n    const attributes = googAsserts.assert(this.datasource.attributes);\n    for (const attribute of attributes) {\n      if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n        this.geometryAttributes.push(attribute);\n      } else {\n        this.otherAttributes.push(attribute);\n      }\n    }\n\n    // (2) All rules that have geometry are added in the featureOverlay\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      this.registerRule_(rule);\n    }\n\n    // (3) Apply the filters\n    this.apply();\n  }\n\n\n  /**\n   * Called on destruction of the controller.\n   *\n   * Reset the `filterRules` of the data source back to `null`.\n   * Clear the feature overlay.\n   */\n  $onDestroy() {\n    if (this.datasource.filterRules !== null) {\n      this.datasource.filterRules = null;\n    }\n    this.featureOverlay.clear();\n  }\n\n\n  /**\n   * @return {boolean} True if at least one rule is currently defined.\n   * @export\n   */\n  hasARule() {\n    return [].concat(this.customRules, this.directedRules).length > 0;\n  }\n\n\n  /**\n   * Loop in all directed and custom rules. Apply the rules that have a proper\n   * value inside the data source, in the `filterRules` property.\n   * @export\n   */\n  apply() {\n    // (1) Reset\n    this.datasource.filterRules = null;\n\n    // (2) Then set if there are filter rules with value.\n    this.timeout_(() => {\n      const filterRules = this.getRulesWithValue_();\n      if (filterRules.length) {\n        this.datasource.filterRules = filterRules;\n        // The current query results are cleared when we apply a filter.\n        this.ngeoMapQuerent_.clear();\n      }\n    });\n  }\n\n\n  /**\n   * Loop in all directed and custom rules. Issue a request to obtain the data\n   * and show the result.\n   * @export\n   */\n  getData() {\n    const filterRules = this.getRulesWithValue_();\n\n    // No need to do anything if there's no rules.\n    if (!filterRules.length) {\n      return;\n    }\n\n    const dataSource = this.datasource;\n    const limit = 1000;\n    const map = this.map;\n    const projCode = map.getView().getProjection().getCode();\n    const filter = this.ngeoRuleHelper_.createFilter({\n      dataSource: dataSource,\n      filterRules: filterRules,\n      srsName: projCode\n    });\n    googAsserts.assert(filter);\n\n    this.ngeoMapQuerent_.issue({\n      dataSources: [dataSource],\n      filter: filter,\n      limit: limit,\n      map: map\n    });\n  }\n\n\n  /**\n   * Loop in all directed and custom rules and collect those with a value.\n   * @return {Array.<!ngeo.rule.Rule>} Rules with value.\n   * @private\n   */\n  getRulesWithValue_() {\n    const filterRules = [];\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.value) {\n        filterRules.push(rule);\n      }\n    }\n    return filterRules;\n  }\n\n\n  /**\n   * Create and add a new custom rule using an attribute. The rule is activated\n   * after being created.\n   * @param {!ngeox.Attribute} attribute Attribute to use to create the custom\n   * rule.\n   * @export\n   */\n  createAndAddCustomRule(attribute) {\n    const rule = this.ngeoRuleHelper_.createRuleFromAttribute(attribute, true);\n    this.registerRule_(rule);\n    this.customRules.push(rule);\n\n    // Activate asynchronously allows the toolActivate manager to do its magic,\n    this.timeout_(() => {\n      rule.active = true;\n    }, 1);\n  }\n\n\n  /**\n   * @param {!ngeox.FilterCondition} condition Condition to set.\n   * @export\n   */\n  setCondition(condition) {\n    if (this.datasource.filterCondition !== condition.value) {\n      this.datasource.filterCondition = condition.value;\n    }\n  }\n\n  /**\n   * Remove a custom rule. Deactivate it first, then give time to the\n   * `ngeo-rule` directive to manage the deactivation of the rule.\n   * @param {!ngeo.rule.Rule} rule Custom rule to remove.\n   * @export\n   */\n  removeCustomRule(rule) {\n    rule.active = false;\n    this.timeout_(() => {\n      olArray.remove(this.customRules, rule);\n      this.unregisterRule_(rule);\n      rule.destroy();\n    });\n  }\n\n  /**\n   * @param {!ngeo.rule.Rule} rule Rule.\n   * @export\n   */\n  registerRule_(rule) {\n    const uid = olBase.getUid(rule);\n    this.ruleUnlisteners_[uid] = this.scope_.$watch(\n      () => rule.active,\n      this.handleRuleActiveChange_.bind(this)\n    );\n\n    if (rule instanceof ngeoRuleGeometry) {\n      this.featureOverlay.addFeature(rule.feature);\n    }\n  }\n\n  /**\n   * @param {!ngeo.rule.Rule} rule Rule.\n   * @export\n   */\n  unregisterRule_(rule) {\n    const uid = olBase.getUid(rule);\n    const unlistener = this.ruleUnlisteners_[uid];\n    googAsserts.assert(unlistener);\n    unlistener();\n    delete this.ruleUnlisteners_[uid];\n\n    if (rule instanceof ngeoRuleGeometry) {\n      this.featureOverlay.removeFeature(rule.feature);\n    }\n  }\n\n  /**\n   * Called when the active property of a rule changes. Set the `aRuleIsActive`\n   * property accordingly.\n   * @private\n   */\n  handleRuleActiveChange_() {\n    let aRuleIsActive = false;\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.active) {\n        aRuleIsActive = true;\n        break;\n      }\n    }\n    this.aRuleIsActive = aRuleIsActive;\n  }\n\n  /**\n   * Called when the `aRuleIsActive` property changes. Make sure that\n   * no rule is still active if the property is `false`.\n   * @private\n   */\n  handleARuleIsActiveChange_() {\n    if (this.aRuleIsActive) {\n      return;\n    }\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.active) {\n        rule.active = false;\n        break;\n      }\n    }\n  }\n\n};\n\nexports.controller('ngeoFilterController', exports.FilterController_);\n\n\nexport default exports;\n","/**\n * @module gmf.filters.filterselectorComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceHelper from 'gmf/datasource/Helper.js';\n\nimport gmfDatasourceOGC from 'gmf/datasource/OGC.js';\nimport gmfFiltersSavedFilters from 'gmf/filters/SavedFilters.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFilterComponent from 'ngeo/filter/component.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olArray from 'ol/array.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\nconst exports = angular.module('gmfFilterselector', [\n  gmfAuthenticationService.module.name,\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceHelper.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoMessageModalComponent.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoFilterComponent.name,\n  gmfFiltersSavedFilters.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/filters/filterselectorcomponent', require('./filterselectorcomponent.html'));\n});\n\nexports.value('gmfFilterselectorTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfFilterselectorTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/filters/filterselectorcomponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfFilterselectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfFilterselectorTemplateUrl($attrs, gmfFilterselectorTemplateUrl) {\n  return gmfFilterselectorTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n   *     The Gmf value service that determines the data source currently being\n   *     filtered.\n   * @param {gmf.datasource.Helper} gmfDataSourcesHelper Gmf data\n   *     sources helper service.\n   * @param {gmf.filters.SavedFilters} gmfSavedFilters Gmf saved filters service.\n   * @param {gmfx.User} gmfUser User.\n   * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n   * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo FeatureOverlay\n   *     manager\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfFilterselectorController\n   */\n  constructor($scope, $timeout, gettextCatalog, gmfDataSourceBeingFiltered,\n    gmfDataSourcesHelper, gmfSavedFilters, gmfUser, ngeoNotification,\n    ngeoFeatureOverlayMgr, ngeoRuleHelper\n  ) {\n\n    // Binding properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.active;\n\n    $scope.$watch(\n      () => this.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * The data source that can either be selected from the list or have\n     * its value set from an external source (for example: the layertree)\n     * and that requires to be ready before it can be filtered.\n     * @type {gmfx.datasource.DataSourceBeingFiltered}\n     * @export\n     */\n    this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n    $scope.$watch(\n      () => this.gmfDataSourceBeingFiltered.dataSource,\n      this.handleSelectedDataSourceChange_.bind(this)\n    );\n\n    /**\n     * @type {gmf.datasource.Helper}\n     * @private\n     */\n    this.gmfDataSourcesHelper_ = gmfDataSourcesHelper;\n\n    /**\n     * @type {gmf.filters.SavedFilters}\n     * @export\n     */\n    this.gmfSavedFilters = gmfSavedFilters;\n\n    // Close manage modal if the last item is removed.\n    $scope.$watchCollection(\n      () => this.gmfSavedFilters.currentDataSourceItems,\n      () => {\n        if (this.gmfSavedFilters.currentDataSourceItems.length === 0 &&\n           this.saveFilterManageModalShown) {\n          this.saveFilterManageModalShown = false;\n        }\n      }\n    );\n\n    /**\n     * @type {gmfx.User}\n     * @private\n     */\n    this.gmfUser_ = gmfUser;\n\n    $scope.$watch(\n      () => this.gmfUser_.functionalities,\n      this.handleGmfUserFunctionalitiesChange_.bind(this)\n    );\n\n    /**\n     * @type {ngeo.message.Notification}\n     * @private\n     */\n    this.ngeoNotification_ = ngeoNotification;\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay = googAsserts.assert(\n      ngeoFeatureOverlayMgr.getFeatureOverlay()\n    );\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n\n    // Inner properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.aRuleIsActive = false;\n\n    /**\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.customRules = null;\n\n    /**\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.directedRules = null;\n\n    /**\n     * @type {Array.<gmf.datasource.OGC>}\n     * @export\n     */\n    this.filtrableDataSources = [];\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.filtrableLayerNodeNames_ = null;\n\n    /**\n     * @type {gmfx.datasource.DataSources}\n     * @private\n     */\n    this.gmfDataSources_ = gmfDataSourcesHelper.collection;\n\n    /**\n     * @type {Array.<ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * The data source ready to be filtered, after it has been selected and\n     * prepared.\n     * @type {?gmf.datasource.OGC}\n     * @export\n     */\n    this.readyDataSource = null;\n\n    /**\n     * @type {!gmf.filters.filterselectorComponent.Controller_.RuleCache}\n     * @private\n     */\n    this.ruleCache_ = {};\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.saveFilterSaveModalShown = false;\n\n    // When the modal closes, reset name\n    $scope.$watch(\n      () => this.saveFilterSaveModalShown,\n      () => {\n        this.saveFilterName = '';\n      }\n    );\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.saveFilterName = '';\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.saveFilterManageModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.enableDataSourceRegistration_ = false;\n\n    $scope.$watch(\n      () => this.enableDataSourceRegistration_,\n      this.handleEnableDataSourceRegistrationChange_.bind(this)\n    );\n\n    /**\n     * The name of the data source that should be automatically selected\n     * by this component.\n     * @type {string|undefined}\n     * @private\n     */\n    this.defaultFiltrableDataSourceName_;\n\n    // Initialize the data sources registration\n    this.toggleDataSourceRegistration_();\n  }\n\n\n  /**\n   * @private\n   */\n  handleGmfUserFunctionalitiesChange_() {\n    const usrFunc = this.gmfUser_.functionalities;\n    if (usrFunc && usrFunc['filterable_layers']) {\n      this.filtrableLayerNodeNames_ = usrFunc['filterable_layers'];\n    } else {\n      this.filtrableLayerNodeNames_ = null;\n    }\n    if (usrFunc &&\n        usrFunc['preset_layer_filter'] &&\n        usrFunc['preset_layer_filter'][0]\n    ) {\n      this.defaultFiltrableDataSourceName_ = usrFunc['preset_layer_filter'][0];\n    } else {\n      this.defaultFiltrableDataSourceName_ = undefined;\n    }\n    this.toggleDataSourceRegistration_();\n  }\n\n\n  /**\n   * @private\n   */\n  toggleDataSourceRegistration_() {\n    const newDataSourceRegistration = !!this.filtrableLayerNodeNames_;\n    if (this.enableDataSourceRegistration_ !== newDataSourceRegistration) {\n      this.enableDataSourceRegistration_ = newDataSourceRegistration;\n    }\n  }\n\n\n  /**\n   * Called when the active property changes. Toggle data source registration.\n   * Also, when deactivated, deselect data source.\n   * @param {boolean} active Active.\n   * @private\n   */\n  handleActiveChange_(active) {\n    if (!active) {\n      this.aRuleIsActive = false;\n      this.timeout_(() => {\n        this.gmfDataSourceBeingFiltered.dataSource = null;\n      });\n    }\n  }\n\n\n  /**\n   * @param {boolean} register Whether register the data sources or not.\n   * @private\n   */\n  handleEnableDataSourceRegistrationChange_(register) {\n    const keys = this.listenerKeys_;\n\n    if (register) {\n      // Listen to data sources being added/removed\n      keys.push(\n        olEvents.listen(this.gmfDataSources_, 'add', this.handleDataSourcesAdd_, this),\n        olEvents.listen(this.gmfDataSources_, 'remove', this.handleDataSourcesRemove_, this)\n      );\n\n      // Manage the data sources that are already in the collection\n      this.gmfDataSources_.forEach(this.registerDataSource_, this);\n\n    } else {\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n\n      // Remove data sources that are in the collection\n      this.filtrableDataSources.length = 0;\n    }\n  }\n\n\n  /**\n   * Called when a data source is added to the collection of ngeo data sources.\n   * If the data source is 'valid', add it to the list of filtrable data\n   * sources.\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = evt.element;\n    if (dataSource instanceof gmfDatasourceOGC) {\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If the data source is 'valid', remove it from the list of\n   * filtrable data sources.\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (dataSource instanceof gmfDatasourceOGC) {\n      this.unregisterDataSource_(dataSource);\n    }\n  }\n\n\n  /**\n   * Register a data source if filtrable.  If it's the first time that the\n   * data source is about to be registered, then the `filtrable` property\n   * is set. Otherwise, it's used.\n   *\n   * @param {gmf.datasource.OGC} dataSource Data source\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    if (dataSource.filtrable === null) {\n      dataSource.filtrable = this.isDataSourceFiltrable_(dataSource);\n    }\n\n    if (dataSource.filtrable) {\n      this.filtrableDataSources.push(dataSource);\n\n      if (this.defaultFiltrableDataSourceName_ !== undefined &&\n          dataSource.name === this.defaultFiltrableDataSourceName_\n      ) {\n        this.gmfDataSourceBeingFiltered.dataSource = dataSource;\n      }\n    }\n  }\n\n\n  /**\n   * Unregister a data source if it's filtrable. Also, if it's the one\n   * that was currently selected, deselect it.\n   * @param {gmf.datasource.OGC} dataSource Data source\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    if (dataSource.filtrable) {\n      olArray.remove(this.filtrableDataSources, dataSource);\n\n      if (this.gmfDataSourceBeingFiltered.dataSource === dataSource) {\n        this.gmfDataSourceBeingFiltered.dataSource = null;\n      }\n    }\n  }\n\n\n  /**\n   * Determines whether the data source is valid for addition (or removal) to\n   * the list of filtrable data sources or not.\n   *\n   * To be filtrable, the data source must:\n   *\n   *  1) have its name in the list of filtrable layer node names\n   *  2) support WFS\n   *  3) have only one ogcLayers defined\n   *  4) the ogcLayer must be queryable\n   *\n   * If 1) is true but not any of the others, then the server has not been\n   * configured properly. In this case, a warning notification can be shown.\n   *\n   * @param {gmf.datasource.OGC} dataSource GMF data source object\n   * @param {boolean=} opt_notify Whether to show a warning notification or not\n   *     in case of a data source that has its name is in the list of\n   *     filtrable layer node names but it doesn't match the other requirements.\n   *     Defaults to `true.`\n   * @return {boolean} Whether the data source is valid to add to the list or\n   *     not.\n   * @private\n   */\n  isDataSourceFiltrable_(dataSource, opt_notify) {\n    let filtrable = true;\n    const gettext = this.gettextCatalog_;\n    const notify = opt_notify !== false;\n    const names = googAsserts.assert(this.filtrableLayerNodeNames_);\n    const msgs = [];\n\n    // (1) The name of the DS must be in list of filtrable layer node names\n    if (olArray.includes(names, dataSource.name)) {\n\n      // (2) The DS must support WFS\n      if (!dataSource.supportsWFS) {\n        msgs.push(gettext.getString(\n          'The data source doesn\\'t support WFS, which is required ' +\n          'to fetch the attributes to build the filter rules.'\n        ));\n      }\n\n      // (3) The DS must have only one ogcLayer\n      if (!dataSource.ogcLayers || !dataSource.ogcLayers.length) {\n        msgs.push(gettext.getString(\n          'The data source must have only 1 ogcLayer defined.'\n        ));\n      } else if (!dataSource.ogcLayers[0].queryable) {\n        // (4) The ogcLayer must be queryable\n        msgs.push(gettext.getString(\n          'The ogcLayer within the data source must be queryable.'\n        ));\n      }\n\n      filtrable = !msgs.length;\n\n      // Notify if the name is in list of filtrable layer node names but\n      // there are missing requirements.\n      if (notify && !filtrable) {\n        const p1 = gettext.getString(\n          `The following data source is marked as being filtrable,\n          but is missing some requirements: `\n        );\n        const p2 = `${dataSource.name} (${dataSource.id}).`;\n        const p3 = gettext.getString(\n          `Please, contact your administrator about this.\n          Here are the reasons: `\n        );\n        msgs.unshift(`${p1} ${p2} ${p3}`);\n        console.warn(msgs.join(' '));\n        this.ngeoNotification_.notify({\n          msg: msgs.join(' '),\n          type: ngeoMessageMessage.Type.WARNING\n        });\n      }\n    } else {\n      filtrable = false;\n    }\n\n    return filtrable;\n  }\n\n  /**\n   * @param {?gmf.datasource.OGC} dataSource Newly selected data source\n   *     object.\n   * @private\n   */\n  handleSelectedDataSourceChange_(dataSource) {\n\n    this.aRuleIsActive = false;\n    this.customRules = null;\n    this.directedRules = null;\n    this.readyDataSource = null;\n    this.gmfSavedFilters.currentDataSourceId = null;\n\n    // No need to do anything if no data source is selected\n    if (!dataSource) {\n      return;\n    }\n\n    // A data source has been selected. Make sure the component is active.\n    if (!this.active) {\n      this.active = true;\n    }\n\n    this.gmfDataSourcesHelper_.prepareFiltrableDataSource(\n      dataSource\n    ).then((dataSource) => {\n\n      // Data source is ready. Get any existing rules or create new ones from\n      // the attributes\n      let item = this.getRuleCacheItem_(dataSource);\n      if (!item) {\n        item = {\n          customRules: [],\n          directedRules: []\n        };\n        this.setRuleCacheItem_(dataSource, item);\n        if (dataSource.gmfLayer.metadata &&\n            dataSource.gmfLayer.metadata.directedFilterAttributes &&\n            dataSource.gmfLayer.metadata.directedFilterAttributes.length\n        ) {\n          const directedAttributes =\n              dataSource.gmfLayer.metadata.directedFilterAttributes;\n          const attributes = googAsserts.assert(dataSource.attributes);\n          for (const attribute of attributes) {\n            if (olArray.includes(directedAttributes, attribute.name)) {\n              item.directedRules.push(\n                this.ngeoRuleHelper_.createRuleFromAttribute(attribute)\n              );\n            }\n          }\n        }\n      }\n\n      this.customRules = item.customRules;\n      this.directedRules = item.directedRules;\n      this.readyDataSource = dataSource;\n      this.gmfSavedFilters.currentDataSourceId = dataSource.id;\n\n    });\n  }\n\n  /**\n   * @param {ngeo.datasource.DataSource} dataSource Data source.\n   * @return {?gmf.filters.filterselectorComponent.Controller_.RuleCacheItem} Rule cache item.\n   * @private\n   */\n  getRuleCacheItem_(dataSource) {\n    return this.ruleCache_[dataSource.id] || null;\n  }\n\n  /**\n   * @param {ngeo.datasource.DataSource} dataSource Data source.\n   * @param {gmf.filters.filterselectorComponent.Controller_.RuleCacheItem} item Rule cache item.\n   * @private\n   */\n  setRuleCacheItem_(dataSource, item) {\n    this.ruleCache_[dataSource.id] = item;\n  }\n\n  /**\n   * @export\n   */\n  saveFilterShowModal() {\n    this.saveFilterSaveModalShown = true;\n  }\n\n  /**\n   * @export\n   */\n  saveFilterSave() {\n\n    const name = this.saveFilterName;\n    const dataSource = googAsserts.assert(this.readyDataSource);\n    const dataSourceId = dataSource.id;\n    const alreadyExist = (this.gmfSavedFilters.indexOfItem(\n      name, dataSourceId) !== -1);\n    const condition = dataSource.filterCondition;\n\n    const msg = this.gettextCatalog_.getString(\n      `A filter with the same name already exists.\n      Do you want to overwrite it?`\n    );\n    if (!alreadyExist || confirm(msg)) {\n      // (1) Serialize the existing custom and directed rules\n      const customRules = this.customRules ?\n        this.ngeoRuleHelper_.serializeRules(this.customRules) : [];\n      const directedRules = this.directedRules ?\n        this.ngeoRuleHelper_.serializeRules(this.directedRules) : [];\n\n      // (2) Ask the service to save it\n      const item = /** @type {!gmf.filters.SavedFilters.Item} */ ({\n        condition,\n        customRules,\n        dataSourceId,\n        directedRules,\n        name\n      });\n      this.gmfSavedFilters.save(item);\n\n      // (3) Close popup, which resets the name\n      this.saveFilterSaveModalShown = false;\n    }\n  }\n\n  /**\n   * Load a saved filter item, replacing the current rules.\n   * @param {!gmf.filters.SavedFilters.Item} filterItem Filter item.\n   * @export\n   */\n  saveFilterLoadItem(filterItem) {\n\n    const dataSource = googAsserts.assert(this.readyDataSource);\n\n    // (1) Reset current rules\n    this.customRules = null;\n    this.directedRules = null;\n\n    const customRules = this.ngeoRuleHelper_.createRules(\n      filterItem.customRules);\n    const directedRules = this.ngeoRuleHelper_.createRules(\n      filterItem.directedRules);\n\n    // Timeout, which ensures the destruction of the previous filter component\n    // and the creation of a new one\n    this.timeout_(() => {\n      // (2) Set rules\n      this.customRules = customRules;\n      this.directedRules = directedRules;\n\n      // (3) Set condition\n      dataSource.filterCondition = filterItem.condition;\n\n      // (4) Update cache item\n      const cacheItem = googAsserts.assert(this.getRuleCacheItem_(dataSource));\n      cacheItem.customRules = customRules;\n      cacheItem.directedRules = directedRules;\n    });\n  }\n\n  /**\n   * @export\n   */\n  saveFilterManage() {\n    this.saveFilterManageModalShown = true;\n  }\n\n  /**\n   * Remove a saved filter item.\n   * @param {!gmf.filters.SavedFilters.Item} item Filter item.\n   * @export\n   */\n  saveFilterRemoveItem(item) {\n    this.gmfSavedFilters.remove(item);\n  }\n\n};\n\n\n/**\n * @typedef {Object.<number, !gmf.filters.filterselectorComponent.Controller_.RuleCacheItem>}\n */\nexports.Controller_.RuleCache;\n\n\n/**\n * @typedef {{\n *     customRules: (Array.<ngeo.rule.Rule>),\n *     directedRules: (Array.<ngeo.rule.Rule>)\n * }}\n */\nexports.Controller_.RuleCacheItem;\n\n\nexports.component('gmfFilterselector', {\n  bindings: {\n    active: '=',\n    map: '<',\n    toolGroup: '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfFilterselectorTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.filters.module\n */\nimport gmfFiltersFilterselectorComponent from 'gmf/filters/filterselectorComponent.js';\nimport gmfFiltersSavedFilters from 'gmf/filters/SavedFilters.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfFiltersModule', [\n  gmfFiltersFilterselectorComponent.name,\n  gmfFiltersSavedFilters.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.timeSliderComponent\n */\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\n\nimport 'jquery-ui/ui/widgets/slider.js';\nimport 'angular-ui-slider';\nimport './timeslider.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeTimeSliderComponent', [\n  ngeoMiscWMSTime.module.name,\n  'ui.slider',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree/timesliderComponent', require('./timesliderComponent.html'));\n});\n\n\n/**\n * Provide a directive to select a single date or a range of dates with a slider\n * Example:\n *\n *      <gmf-time-slider\n *          gmf-time-slider-time=\"{\n *            maxValue: '2013-12-31T00:00:00Z',\n *            minValue: '2006-01-01T00:00:00Z',\n *            mode: 'range'}\"\n *          gmf-time-slider-on-date-selected=\"ctrl.onDateSelected(time)\">\n *      </gmf-time-slider>\n *\n * @htmlAttribute {ngeox.TimeProperty} gmf-time-slider-time parameter for initialization.\n * @htmlAttribute {function()} gmf-time-slider-on-date-selected Expression evaluated after\n * date(s) changed\n * @param {angular.$timeout} $timeout angular timeout service\n * @param {angular.$filter} $filter angular filter service\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfTimeSlider\n */\nexports.directive_ = function($timeout, $filter) {\n  return {\n    scope: {\n      onDateSelected: '&gmfTimeSliderOnDateSelected',\n      time: '=gmfTimeSliderTime'\n    },\n    bindToController: true,\n    controller: 'gmfTimeSliderController as sliderCtrl',\n    restrict: 'AE',\n    templateUrl: 'gmf/layertree/timesliderComponent',\n    link: /** @type {!angular.LinkingFunctions} */ ({\n      pre: function preLink(scope, element, attrs, ctrl) {\n        ctrl.init();\n\n        ctrl.sliderOptions['stop'] = onSliderReleased_;\n        ctrl.sliderOptions['slide'] = computeDates_;\n\n        function onSliderReleased_(e, sliderUi) {\n          ctrl.onDateSelected({\n            time: computeDates_(e, sliderUi)\n          });\n          scope.$apply();\n        }\n\n        function computeDates_(e, sliderUi) {\n          let sDate, eDate, wmstime;\n          if (sliderUi.values) {\n            sDate = new Date(ctrl.getClosestValue_(sliderUi.values[0]));\n            eDate = new Date(ctrl.getClosestValue_(sliderUi.values[1]));\n            ctrl.dates = [sDate, eDate];\n            wmstime = {\n              start: sDate.getTime(),\n              end: eDate.getTime()\n            };\n          } else {\n            sDate = new Date(ctrl.getClosestValue_(sliderUi.value));\n            ctrl.dates = sDate;\n            wmstime = {\n              start: sDate.getTime()\n            };\n          }\n          scope.$apply();\n          return wmstime;\n        }\n      }\n    })\n  };\n};\n\n\nexports.directive('gmfTimeSlider', exports.directive_);\n\n\n/**\n * TimeSliderController - directive controller\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime WMSTime service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfTimeSliderController\n */\nexports.Controller_ = function($scope, ngeoWMSTime) {\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * Function called after date(s) changed/selected\n   * @function\n   * @export\n   */\n  this.onDateSelected;\n\n\n  /**\n   * A time object for directive initialization\n   * @type {ngeox.TimeProperty}\n   * @export\n   */\n  this.time;\n\n  /**\n   * If the component is used to select a date range\n   * @type {boolean}\n   * @export\n   */\n  this.isModeRange;\n\n  /**\n   * Minimal value of the slider (time in ms)\n   * @type {number}\n   * @export\n   */\n  this.minValue;\n\n  /**\n   * Maximal value of the slider (time in ms)\n   * @type {number}\n   * @export\n   */\n  this.maxValue;\n\n  /**\n   * Used when WMS time object has a property 'values' instead of an interval\n   * @type (?Array<number>)\n   */\n  this.timeValueList;\n\n  /**\n   * Default Slider options (used by ui-slider directive)\n   * @type {{\n   *  range : boolean,\n   *  min : number,\n   *  max : number\n   * }}\n   * @export\n   */\n  this.sliderOptions;\n\n  /**\n   * Model for the ui-slider directive (date in ms format)\n   * @type {Array.<number>|number}\n   * @export\n   */\n  this.dates;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  this.timeValueList = this.getTimeValueList_();\n\n  // Fetch the initial options for the component\n  const initialOptions_ = this.ngeoWMSTime_.getOptions(this.time);\n  this.isModeRange = this.time.mode === 'range';\n  this.minValue = initialOptions_.minDate;\n  this.maxValue = initialOptions_.maxDate;\n  this.dates = this.isModeRange ? [initialOptions_.values[0], initialOptions_.values[1]] :\n    initialOptions_.values;\n  this.sliderOptions = {\n    range: this.isModeRange,\n    min: this.minValue,\n    max: this.maxValue\n  };\n};\n\n/**\n * TimeSliderController.prototype.getTimeValueList_ - Get a list of time value instead\n * of using the wmstime interval as a list of possibles values\n * @private\n * @return {Array<number>}  - List of timestamp representing possible values\n */\nexports.Controller_.prototype.getTimeValueList_ = function() {\n  const wmsTime = this.time;\n  let timeValueList = null;\n  const minDate = new Date(this.minValue);\n  const maxDate = new Date(this.maxValue);\n\n  if (wmsTime.values) {\n    timeValueList = [];\n    wmsTime.values.forEach((date) => {\n      timeValueList.push(new Date(date).getTime());\n    });\n  } else {\n    const maxNbValues = 1024;\n    const endDate = new Date(minDate.getTime());\n    endDate.setFullYear(minDate.getFullYear() + maxNbValues * wmsTime.interval[0]);\n    endDate.setMonth(minDate.getMonth() + maxNbValues * wmsTime.interval[1],\n      minDate.getDate() + maxNbValues * wmsTime.interval[2]);\n    endDate.setSeconds(minDate.getSeconds() + maxNbValues * wmsTime.interval[3]);\n\n    if (endDate > maxDate) {\n      // Transform interval to a list of values when the number\n      // of values is below a threshold (maxNbValues)\n      timeValueList = [];\n      for (let i = 0; ; i++) {\n        const nextDate = new Date(minDate.getTime());\n        nextDate.setFullYear(minDate.getFullYear() + i * wmsTime.interval[0]);\n        nextDate.setMonth(minDate.getMonth() + i * wmsTime.interval[1],\n          minDate.getDate() + i * wmsTime.interval[2]);\n        nextDate.setSeconds(minDate.getSeconds() + i * wmsTime.interval[3]);\n        if (nextDate <= maxDate) {\n          timeValueList.push(nextDate.getTime());\n        } else {\n          break;\n        }\n      }\n    }\n  }\n  return timeValueList;\n};\n\n\n/**\n * Compute the closest available date from the given timestamp\n * @param  {number} timestamp selected datetime (in ms format)\n * @return {number} the closest available datetime (in ms format) from the timestamp\n * @private\n */\nexports.Controller_.prototype.getClosestValue_ = function(timestamp) {\n  if (timestamp <= this.minValue) {\n    return this.minValue;\n  }\n\n  if (timestamp >= this.maxValue) {\n    return this.maxValue;\n  }\n\n  if (this.timeValueList) {\n    // Time stops are defined as a list of values\n    let index;\n    let leftIndex = 0;\n    let rightIndex = this.timeValueList.length - 1;\n\n    while ((rightIndex - leftIndex) > 1) {\n      index = Math.floor((leftIndex + rightIndex) / 2);\n      if (this.timeValueList[index] >= timestamp) {\n        rightIndex = index;\n      } else {\n        leftIndex = index;\n      }\n    }\n\n    const leftDistance = Math.abs(this.timeValueList[leftIndex] - timestamp);\n    const rightDistance = Math.abs(this.timeValueList[rightIndex] - timestamp);\n\n    return this.timeValueList[leftDistance < rightDistance ? leftIndex : rightIndex];\n  } else {\n    // Time stops are defined by a start date plus an interval\n    const targetDate = new Date(timestamp);\n    const startDate = new Date(this.minValue);\n    let bestDate = new Date(this.minValue);\n    const maxDate = new Date(this.maxValue);\n    let bestDistance = Math.abs(targetDate - bestDate);\n\n    for (let i = 1; ; i++) {\n      // The start date should always be used as a reference\n      // because adding a month twice could differ from adding\n      // two months at once\n      const next = new Date(startDate.getTime());\n      next.setFullYear(startDate.getFullYear() + i * this.time.interval[0]);\n      next.setMonth(startDate.getMonth() + i *  this.time.interval[1],\n        startDate.getDate() + i * this.time.interval[2]);\n      next.setSeconds(startDate.getSeconds() + i * this.time.interval[3]);\n\n      if (next > maxDate) {\n        break;\n      }\n\n      const distance = Math.abs(targetDate - next);\n      if (distance <= bestDistance) {\n        bestDate = next;\n        bestDistance = distance;\n      } else {\n        break;\n      }\n    }\n\n    return bestDate.getTime();\n  }\n};\n\n\n/**\n * Format and localize time regarding a resolution.\n * @param {number} time (in ms format) timestamp to format and localize.\n * @return {string} Localized date string regarding the resolution.\n * @export\n */\nexports.Controller_.prototype.getLocalizedDate = function(time) {\n  return this.ngeoWMSTime_.formatTimeValue(time, this.time.resolution);\n};\n\n\nexports.controller('gmfTimeSliderController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.module\n */\nimport gmfLayertreeComponent from 'gmf/layertree/component.js';\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTimeSliderComponent from 'gmf/layertree/timeSliderComponent.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\n\nimport './common.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeModule', [\n  gmfLayertreeComponent.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTimeSliderComponent.name,\n  gmfLayertreeTreeManager.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.module\n */\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfPermalinkShareService from 'gmf/permalink/ShareService.js';\nimport gmfPermalinkShareComponent from 'gmf/permalink/shareComponent.js';\n\nimport './share.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfPermalinkModule', [\n  gmfPermalinkPermalink.module.name,\n  gmfPermalinkShareService.module.name,\n  gmfPermalinkShareComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optional. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.scaleselector\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport * as olEvents from 'ol/events.js';\nimport 'bootstrap/js/dropdown.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/map/scaleselector';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/map/scaleselector', require('./scaleselector.html'));\n});\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optional. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nconst directive = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', directive);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nconst ScaleselectorController = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  googAsserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = ScaleselectorController.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nScaleselectorController.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nScaleselectorController.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nScaleselectorController.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nScaleselectorController.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nScaleselectorController.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nScaleselectorController.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController', ScaleselectorController);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.module\n */\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.map.component\n */\nimport gmfPermalinkModule from 'gmf/permalink/module.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkModule.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapModule.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/map', require('./component.html'));\n});\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: 'gmf/map'\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.map.mousepositionComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport olControlMousePosition from 'ol/control/MousePosition.js';\nimport * as olProj from 'ol/proj.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapMouseposition', [\n  ngeoMiscFilters.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/map/mousepositionComponent', require('./mousepositionComponent.html'));\n});\n\n\nexports.value('gmfMapMousepositionTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfMapMousepositionTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/map/mousepositionComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfMapMousepositionTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfMapMousepositionTemplateUrl($attrs, gmfMapMousepositionTemplateUrl) {\n  return gmfMapMousepositionTemplateUrl($attrs);\n}\n\n/**\n * Provide a component to display the mouse position coordinates depending\n * on the chosen projection. The component also provides a projection picker\n * to choose how the coordinates are displayed.\n * service.\n *\n * Example:\n *  <gmf-mouseposition gmf-mouseposition-map=\"ctrl.map\"\n *     gmf-mouseposition-projections=\"ctrl.projections\">\n *  </gmf-mouseposition>\n *\n * @htmlAttribute {ol.Map} gmf-mouseposition-map The map.\n * @htmlAttribute {Array.<gmfx.MousePositionProjection>}\n *    gmf-mouseposition-projection The list of the projections.\n *\n * @ngdoc component\n * @ngname gmfMouseposition\n */\nexports.component_ = {\n  controller: 'gmfMousepositionController as ctrl',\n  bindings: {\n    'map': '<gmfMousepositionMap',\n    'projections': '<gmfMousepositionProjections'\n  },\n  templateUrl: gmfMapMousepositionTemplateUrl\n};\n\nexports.component('gmfMouseposition',\n  exports.component_);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfMousepositionController\n */\nexports.Controller_ = function($element, $filter, $scope, gettextCatalog) {\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!Array.<!gmfx.MousePositionProjection>}\n   * @export\n   */\n  this.projections;\n\n  /**\n   * @type {!gmfx.MousePositionProjection}\n   * @export\n   */\n  this.projection;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type  {?ol.control.MousePosition}\n   * @private\n   */\n  this.control_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.$scope_.$on('gettextLanguageChanged', () => {\n    this.initOlControl_();\n  });\n\n  // Init control once, in case of applications that never set the language.\n  this.initOlControl_();\n};\n\n\n/**\n * Init the ol.control.MousePosition\n * @private\n */\nexports.Controller_.prototype.initOlControl_ = function() {\n  if (this.control_ !== null) {\n    this.map.removeControl(this.control_);\n  }\n\n  // function that apply the filter.\n  const formatFn = function(coordinates) {\n    const filterAndArgs = this.projection.filter.split(':');\n    const filter = this.$filter_(filterAndArgs.shift());\n    googAsserts.assertFunction(filter);\n    const args = filterAndArgs;\n    args.unshift(coordinates);\n    return filter.apply(this, args);\n  };\n\n  const gettextCatalog = this.gettextCatalog_;\n  this.control_ = new olControlMousePosition({\n    className: 'gmf-mouseposition-control',\n    coordinateFormat: formatFn.bind(this),\n    target: angular.element('.gmf-mouseposition-control-target', this.$element_)[0],\n    undefinedHTML: gettextCatalog.getString('Coordinates')\n  });\n\n  this.setProjection(this.projections[0]);\n\n  this.map.addControl(this.control_);\n};\n\n\n/**\n * @param {gmfx.MousePositionProjection} projection The new projection to use.\n * @export\n */\nexports.Controller_.prototype.setProjection = function(projection) {\n  this.control_.setProjection(olProj.get(projection.code));\n  this.projection = projection;\n};\n\nexports.controller('gmfMousepositionController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.map.module\n */\nimport gmfMapComponent from 'gmf/map/component.js';\nimport gmfMapMousepositionComponent from 'gmf/map/mousepositionComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapModule', [\n  gmfMapComponent.name,\n  gmfMapMousepositionComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.grid.Config\n */\nimport * as olBase from 'ol/index.js';\n\n/**\n * @param {Array.<Object>|undefined} data Entries/objects to be shown in a grid.\n * @param {Array.<ngeox.GridColumnDef>|undefined} columnDefs Column definition of a grid.\n * @constructor\n * @struct\n * @export\n */\nconst exports = function(data, columnDefs) {\n  /**\n   * @type {Array.<Object>|undefined}\n   * @export\n   */\n  this.data = data;\n\n  /**\n   * @type {Array.<ngeox.GridColumnDef>|undefined}\n   * @export\n   */\n  this.columnDefs = columnDefs;\n\n  /**\n   * @type {!Object.<string, Object>}\n   * @export\n   */\n  this.selectedRows = {};\n};\n\n\n/**\n * Get an ID for a row.\n * @param {Object} attributes An entry/row.\n * @return {string} Unique id for this object.\n * @export\n */\nexports.getRowUid = function(attributes) {\n  return `${olBase.getUid(attributes)}`;\n};\n\n\n/**\n * Is the given row selected?\n * @param {Object} attributes An entry/row.\n * @return {boolean} True if already selected. False otherwise.\n * @export\n */\nexports.prototype.isRowSelected = function(attributes) {\n  return !!this.selectedRows[exports.getRowUid(attributes)];\n};\n\n\n/**\n * Returns the number of selected rows.\n * @return {number} Number of selected rows.\n * @export\n */\nexports.prototype.getSelectedCount = function() {\n  return Object.keys(this.selectedRows).length;\n};\n\n\n/**\n * Returns the selected rows.\n * @return {Array.<Object>} Selected rows in the current ordering.\n * @export\n */\nexports.prototype.getSelectedRows = function() {\n  return this.data.filter(row => this.isRowSelected(row));\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @public\n */\nexports.prototype.selectRow = function(attributes) {\n  const uid = exports.getRowUid(attributes);\n  this.selectedRows[uid] = attributes;\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @public\n */\nexports.prototype.toggleRow = function(attributes) {\n  const uid = exports.getRowUid(attributes);\n  const isSelected = this.isRowSelected(attributes);\n  if (isSelected) {\n    delete this.selectedRows[uid];\n  } else {\n    this.selectedRows[uid] = attributes;\n  }\n};\n\n\n/**\n * Select all rows.\n * @export\n */\nexports.prototype.selectAll = function() {\n  this.data.forEach((attributes) => {\n    this.selectRow(attributes);\n  });\n};\n\n\n/**\n * Deselect all rows.\n * @export\n */\nexports.prototype.unselectAll = function() {\n  for (const rowId in this.selectedRows) {\n    delete this.selectedRows[rowId];\n  }\n};\n\n\n/**\n * Invert selection.\n * @export\n */\nexports.prototype.invertSelection = function() {\n  this.data.forEach((attributes) => {\n    this.toggleRow(attributes);\n  });\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoGridConfig', []);\n\n\nexport default exports;\n","/**\n * @module ngeo.grid.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGridConfig from 'ngeo/grid/Config.js';\nimport * as olHas from 'ol/has.js';\n\nimport 'floatthead';\nimport 'angular-float-thead';\nimport 'font-awesome/css/font-awesome.css';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGrid', [\n  ngeoGridConfig.module.name,\n  ngeoMiscFilters.name,\n  'floatThead',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/grid', require('./component.html'));\n});\n\n\nexports.value('ngeoGridTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoGridTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/grid';\n  }\n);\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoGridTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoGridTemplateUrl($attrs, ngeoGridTemplateUrl) {\n  return ngeoGridTemplateUrl($attrs);\n}\n\n\n/**\n * A grid component for displaying tabular data. The columns of the grid\n * are sortable, rows can be selected with a single click (also in combination\n * with SHIFT and CTRL/Meta).\n *\n * Example:\n *\n *     <ngeo-grid\n *       ngeo-grid-configuration=\"::ctrl.gridConfiguration\"\n *     </ngeo-grid>\n *\n * @htmlAttribute {ngeo.grid.Config} ngeo-grid-configuration The\n * configuration to use.\n *\n * @ngdoc component\n * @ngname ngeoGrid\n */\nexports.component_ = {\n  controller: 'ngeoGridController as ctrl',\n  bindings: {\n    'configuration': '=ngeoGridConfiguration'\n  },\n  templateUrl: ngeoGridTemplateUrl\n};\n\nexports.component('ngeoGrid', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoGridController\n */\nexports.Controller_ = function($scope) {\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.grid.Config}\n   * @export\n   */\n  this.configuration;\n\n  /**\n   * @type {Object.<string, Object>}\n   * @export\n   */\n  this.selectedRows;\n\n  /**\n   * The name of the column used to sort the grid.\n   * @type {string}\n   * @export\n   */\n  this.sortedBy;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.sortAscending = true;\n\n  /**\n   * Configuration object for float-thead.\n   * @type {Object}\n   * @export\n   */\n  this.floatTheadConfig = {\n    'scrollContainer': function($table) {\n      return $table.closest('.ngeo-grid-table-container');\n    }\n  };\n};\n\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.selectedRows = this.configuration.selectedRows;\n};\n\n\n/**\n * Sort function that always puts undefined values to the bottom of the grid.\n * A new call will sort ascending. A next one will sort descending (and so\n * on).\n * @param {string} columnName The name of the column that should be used to\n *    sort the data.\n * @export\n */\nexports.Controller_.prototype.sort = function(columnName) {\n  this.sortAscending = this.sortedBy === columnName ? !this.sortAscending : true;\n  this.sortedBy = columnName;\n\n  const asc = this.sortAscending ? 1 : -1;\n  this.configuration.data.sort((attributes1, attributes2) => {\n    if (!attributes1[columnName]) {\n      return 1;\n    }\n    if (!attributes2[columnName]) {\n      return -1;\n    }\n    return attributes1[columnName] > attributes2[columnName] ? asc : -asc;\n  });\n};\n\n\n/**\n * Handler for clicks on a row.\n * @param {Object} attributes An entry/row.\n * @param {jQuery.Event} event Event.\n * @export\n */\nexports.Controller_.prototype.clickRow = function(attributes, event) {\n  const shiftKey = this.isShiftKeyOnly_(event);\n  const platformModifierKey = this.isPlatformModifierKeyOnly_(event);\n\n  this.clickRow_(attributes, shiftKey, platformModifierKey);\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @param {boolean} shiftKey Shift pressed?\n * @param {boolean} platformModifierKey CTRL/Meta pressed?\n * @private\n */\nexports.Controller_.prototype.clickRow_ = function(\n  attributes, shiftKey, platformModifierKey) {\n\n  if (shiftKey && !platformModifierKey) {\n    this.selectRange_(attributes);\n  } else if (!shiftKey && platformModifierKey) {\n    this.configuration.toggleRow(attributes);\n  } else {\n    const isSelected = this.configuration.isRowSelected(attributes);\n    this.configuration.unselectAll();\n    if (!isSelected) {\n      this.configuration.selectRow(attributes);\n    }\n  }\n};\n\n\n/**\n * Selects all rows between the given row and the closest already selected row.\n * @param {Object} attributes An entry/row.\n * @private\n */\nexports.Controller_.prototype.selectRange_ = function(attributes) {\n  const targetUid = ngeoGridConfig.getRowUid(attributes);\n  const data = this.configuration.data;\n\n  if (this.configuration.isRowSelected(attributes)) {\n    return;\n  }\n\n  // get the position of the clicked and all already selected rows\n  /** @type {number|undefined} */\n  let posClickedRow = undefined;\n  const posSelectedRows = [];\n  for (let i = 0; i < data.length; i++) {\n    const currentRow = data[i];\n    const currentUid = ngeoGridConfig.getRowUid(currentRow);\n\n    if (targetUid === currentUid) {\n      posClickedRow = i;\n    } else if (this.configuration.isRowSelected(currentRow)) {\n      posSelectedRows.push(i);\n    }\n  }\n  googAsserts.assert(posClickedRow !== undefined);\n\n  if (posSelectedRows.length == 0) {\n    // if no other row is selected, select the clicked one and stop\n    this.configuration.selectRow(attributes);\n  }\n\n  // find the selected row which is the closest to the clicked row\n  let distance = Infinity;\n  let posClosestRow = posSelectedRows[0];\n  for (let j = 0; j < posSelectedRows.length; j++) {\n    const currentPos = posSelectedRows[j];\n    const currentDistance = Math.abs(currentPos - posClickedRow);\n    if (distance > currentDistance) {\n      distance = currentDistance;\n      posClosestRow = currentPos;\n    }\n    // note: this could be optimized because `posSelectedRows` is ordered.\n  }\n\n  // then select all rows between the clicked one and the closest\n  const rangeStart = (posClickedRow < posClosestRow) ? posClickedRow : posClosestRow;\n  const rangeEnd = (posClickedRow > posClosestRow) ? posClickedRow : posClosestRow;\n\n  for (let l = rangeStart; l <= rangeEnd; l++) {\n    this.configuration.selectRow(data[l]);\n  }\n};\n\n\n/**\n * Prevent the default browser behaviour of selecting text\n * when selecting multiple rows with SHIFT or CTRL/Meta.\n * @param {jQuery.Event} event Event.\n * @export\n */\nexports.Controller_.prototype.preventTextSelection = function(event) {\n  const shiftKey = this.isShiftKeyOnly_(event);\n  const platformModifierKey = this.isPlatformModifierKeyOnly_(event);\n\n  if (shiftKey || platformModifierKey) {\n    event.preventDefault();\n  }\n};\n\n\n/**\n * Same as `ol.events.condition.platformModifierKeyOnly`.\n * @param {jQuery.Event} event Event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @private\n */\nexports.Controller_.prototype.isPlatformModifierKeyOnly_ = function(event) {\n  return !event.altKey &&\n    (olHas.MAC ? event.metaKey : event.ctrlKey) &&\n    !event.shiftKey;\n};\n\n\n/**\n * Same as `ol.events.condition.shiftKeyOnly`.\n * @param {jQuery.Event} event Event.\n * @return {boolean} True if only the shift key is pressed.\n * @private\n */\nexports.Controller_.prototype.isShiftKeyOnly_ = function(event) {\n  return (\n    !event.altKey &&\n      !(event.metaKey || event.ctrlKey) &&\n      event.shiftKey);\n};\n\n\nexports.controller('ngeoGridController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.query.gridComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadCsv from 'ngeo/download/Csv.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\n/** @suppress {extraRequire} */\nimport ngeoGridComponent from 'ngeo/grid/component.js';\n\nimport ngeoGridConfig from 'ngeo/grid/Config.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/** @suppress {extraRequire} - required for `ngeoQueryResult` */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olCollection from 'ol/Collection.js';\nimport * as olExtent from 'ol/extent.js';\nimport olMap from 'ol/Map.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryGridComponent', [\n  ngeoDownloadCsv.module.name,\n  ngeoDownloadService.name,\n  ngeoGridComponent.name,\n  ngeoGridConfig.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.value('gmfDisplayquerygridTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfDisplayquerygridTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/query/gridComponent';\n  }\n);\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/query/gridComponent', require('./gridComponent.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfDisplayquerygridTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfDisplayquerygridTemplateUrl($element, $attrs, gmfDisplayquerygridTemplateUrl) {\n  return gmfDisplayquerygridTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provides a component to display results of the {@link ngeo.queryResult} in a\n * grid and shows related features on the map using\n * the {@link ngeo.map.FeatureOverlayMgr}.\n *\n * You can override the default component's template by setting the\n * value `gmfDisplayquerygridTemplateUrl`.\n *\n * Features displayed on the map use a default style but you can override these\n * styles by passing ol.style.Style objects as attributes of this component.\n *\n * Note: the following ng-class need to be present in the interface <body> element to display the footer\n * when the grid is active (initially there should be the code for the profile tool):\n *      <body ng-class=\"{'gmf-profile-chart-active': !!profileChartActive, 'gmf-query-grid-active': !!queryGridActive}\">\n *\n * Example:\n *\n *      <gmf-displayquerygrid\n *        gmf-displayquerygrid-map=\"ctrl.map\"\n *        gmf-displayquerygrid-featuresstyle=\"ctrl.styleForAllFeatures\"\n *        gmf-displayquerygrid-selectedfeaturestyle=\"ctrl.styleForTheCurrentFeature\">\n *      </gmf-displayquerygrid>\n *\n * @htmlAttribute {boolean} gmf-displayquerygrid-active The active state of the component.\n * @htmlAttribute {ol.style.Style} gmf-displayquerygrid-featuresstyle A style\n *     object for all features from the result of the query.\n * @htmlAttribute {ol.style.Style} gmf-displayquerygrid-selectedfeaturestyle A style\n *     object for the currently selected features.\n * @htmlAttribute {ol.Map} gmf-displayquerygrid-map The map.\n * @htmlAttribute {boolean?} gmf-displayquerygrid-removeemptycolumns Optional. Should\n *     empty columns be hidden? Default: `false`.\n * @htmlAttribute {number?} gmf-displayquerygrid-maxrecenterzoom Optional. Maximum\n *     zoom-level to use when zooming to selected features.\n * @htmlAttribute {gmfx.GridMergeTabs?} gmf-displayquerygrid-gridmergetabs Optional.\n *     Configuration to merge grids with the same attributes into a single grid.\n *\n * @ngdoc component\n * @ngname gmfDisplayquerygrid\n */\nexports.component_ = {\n  controller: 'GmfDisplayquerygridController as ctrl',\n  bindings: {\n    'active': '=?gmfDisplayquerygridActive',\n    'featuresStyleFn': '&gmfDisplayquerygridFeaturesstyle',\n    'selectedFeatureStyleFn': '&gmfDisplayquerygridSelectedfeaturestyle',\n    'getMapFn': '&gmfDisplayquerygridMap',\n    'removeEmptyColumnsFn': '&?gmfDisplayquerygridRemoveemptycolumns',\n    'maxResultsFn': '&?gmfDisplayquerygridMaxresults',\n    'maxRecenterZoomFn': '&?gmfDisplayquerygridMaxrecenterzoom',\n    'mergeTabs': '<?gmfDisplayquerygridMergetabs'\n  },\n  templateUrl: gmfDisplayquerygridTemplateUrl\n};\n\n\nexports.component('gmfDisplayquerygrid', exports.component_);\n\n\n/**\n * Controller for the query grid.\n *\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.QueryResult} ngeoQueryResult ngeo query result.\n * @param {!ngeo.query.MapQuerent} ngeoMapQuerent ngeo map querent service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.download.Csv} ngeoCsvDownload CSV download service.\n * @param {!angular.JQLite} $element Element.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisplayquerygridController\n */\nexports.Controller_ = function($injector, $scope, ngeoQueryResult, ngeoMapQuerent,\n  ngeoFeatureOverlayMgr, $timeout, ngeoCsvDownload, $element) {\n\n  const queryOptions = /** @type {ngeox.QueryOptions} */ (\n    $injector.has('ngeoQueryOptions') ?\n      $injector.get('ngeoQueryOptions') : {});\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {!ngeox.QueryResult}\n   * @export\n   */\n  this.ngeoQueryResult = ngeoQueryResult;\n\n  /**\n   * @type {!ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n  /**\n   * @type {!ngeo.download.Csv}\n   * @private\n   */\n  this.ngeoCsvDownload_ = ngeoCsvDownload;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.maxResults = queryOptions.limit !== undefined ? queryOptions.limit : 50;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.pending = false;\n\n  /**\n   * @type {!Object.<string, gmfx.GridSource>}\n   * @export\n   */\n  this.gridSources = {};\n\n  /**\n   * IDs of the grid sources in the order they were loaded.\n   * @type {!Array.<string>}\n   * @export\n   */\n  this.loadedGridSources = [];\n\n  /**\n   * The id of the currently shown query source.\n   * @type {string|number|null}\n   * @export\n   */\n  this.selectedTab = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.removeEmptyColumns_ = false;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.maxRecenterZoom;\n\n  /**\n   * @type {!gmfx.GridMergeTabs}\n   * @export\n   */\n  this.mergeTabs = {};\n\n  /**\n   * A mapping between row uid and the corresponding feature for each\n   * source.\n   * @type {!Object.<string, Object.<string, ol.Feature>>}\n   * @private\n   */\n  this.featuresForSources_ = {};\n\n  // Styles for displayed features (features) and selected features\n  // (highlightFeatures_) (user can set both styles).\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.highlightFeatures_ = new olCollection();\n\n  /**\n   * Filename\n   * @type {string}\n   * @private\n   */\n  this.filename_ = $injector.has('gmfCsvFilename') ?\n    $injector.get('gmfCsvFilename') : 'query-results.csv';\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  // Watch the ngeo query result service.\n  this.$scope_.$watchCollection(\n    () => ngeoQueryResult,\n    (newQueryResult, oldQueryResult) => {\n      if (newQueryResult !== oldQueryResult) {\n        this.updateData_();\n      }\n    });\n\n  /**\n   * An unregister function returned from `$scope.$watchCollection` for\n   * \"on-select\" changes (when rows are selected/unselected).\n   * @type {?function()}\n   * @private\n   */\n  this.unregisterSelectWatcher_ = null;\n};\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.removeEmptyColumns_ = this['removeEmptyColumnsFn'] ? this['removeEmptyColumnsFn']() === true : false;\n  this.maxRecenterZoom = this['maxRecenterZoomFn'] ? this['maxRecenterZoomFn']() : undefined;\n\n  const featuresOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  featuresOverlay.setFeatures(this.features_);\n  const featuresStyle = this['featuresStyleFn']();\n  if (featuresStyle !== undefined) {\n    googAsserts.assertInstanceof(featuresStyle, olStyleStyle);\n    featuresOverlay.setStyle(featuresStyle);\n  }\n\n  const highlightFeaturesOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  highlightFeaturesOverlay.setFeatures(this.highlightFeatures_);\n  let highlightFeatureStyle = this['selectedFeatureStyleFn']();\n  if (highlightFeatureStyle !== undefined) {\n    googAsserts.assertInstanceof(highlightFeatureStyle, olStyleStyle);\n  } else {\n    const fill = new olStyleFill({color: [255, 0, 0, 0.6]});\n    const stroke = new olStyleStroke({color: [255, 0, 0, 1], width: 2});\n    highlightFeatureStyle = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke,\n      zIndex: 10\n    });\n  }\n  highlightFeaturesOverlay.setStyle(highlightFeatureStyle);\n\n  const mapFn = this['getMapFn'];\n  if (mapFn) {\n    const map = mapFn();\n    googAsserts.assertInstanceof(map, olMap);\n    this.map_ = map;\n  }\n};\n\n/**\n * Returns a list of grid sources in the order they were loaded.\n * @export\n * @return {Array.<gmfx.GridSource>} Grid sources.\n */\nexports.Controller_.prototype.getGridSources = function() {\n  return this.loadedGridSources.map(sourceLabel => this.gridSources[sourceLabel]);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateData_ = function() {\n  // close if there are no results\n  if (this.ngeoQueryResult.total === 0 && !this.hasOneWithTooManyResults_()) {\n    const oldActive = this.active;\n    this.clear();\n    if (oldActive) {\n      // don't close if there are pending queries\n      this.active = this.ngeoQueryResult.pending;\n      this.pending = this.ngeoQueryResult.pending;\n    }\n    return;\n  }\n\n  this.active = true;\n  this.pending = false;\n  let sources = this.ngeoQueryResult.sources;\n  // merge sources if requested\n  if (Object.keys(this.mergeTabs).length > 0) {\n    sources = this.getMergedSources_(sources);\n  }\n\n  // create grids (only for source with features or with too many results)\n  sources.forEach((source) => {\n    if (source.tooManyResults) {\n      this.makeGrid_(null, source);\n    } else {\n      source.id = this.escapeValue(source.id);\n      const features = source.features;\n      if (features.length > 0) {\n        this.collectData_(source);\n      }\n    }\n  });\n\n  if (this.loadedGridSources.length === 0) {\n    // if no grids were created, do not show\n    this.active = false;\n    return;\n  }\n\n  // keep the first existing navigation tab open\n  if (this.selectedTab === null || !((`${this.selectedTab}`) in this.gridSources)) {\n    // selecting the tab is done in a timeout, because otherwise in rare cases\n    // `ng-class` might set the `active` class on multiple tabs.\n    this.$timeout_(() => {\n      const firstSourceId = this.loadedGridSources[0];\n      this.selectTab(this.gridSources[firstSourceId]);\n    }, 0);\n  }\n};\n\n\n/**\n * @private\n * @return {boolean} If one of the source has too many results.\n */\nexports.Controller_.prototype.hasOneWithTooManyResults_ = function() {\n  return this.ngeoQueryResult.sources.some(source => source.tooManyResults);\n};\n\n/**\n * Returns the value with all symbols and spaces replaced by an underscore.\n * @param {string|number} value A value to escape.\n * @returns {string|number} value An escaped value.\n * @export\n */\nexports.Controller_.prototype.escapeValue = function(value) {\n  // Work-around for Number.isInteger() when not always getting a number ...\n  if (Number.isInteger(/** @type {number} */ (value))) {\n    return value;\n  } else {\n    const toEscape = /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\ |]/g;\n    if (value.match(toEscape) !== null) {\n      return value.replace(toEscape, '_');\n    } else {\n      return value;\n    }\n  }\n};\n\n\n/**\n * Returns if the given grid source is selected?\n * @export\n * @param {gmfx.GridSource} gridSource Grid source.\n * @return {boolean} Is selected?\n */\nexports.Controller_.prototype.isSelected = function(gridSource) {\n  return this.selectedTab === gridSource.source.label;\n};\n\n\n/**\n * Try to merge the mergable sources.\n * @param {Array.<ngeox.QueryResultSource>} sources Sources.\n * @return {Array.<ngeox.QueryResultSource>} The merged sources.\n * @private\n */\nexports.Controller_.prototype.getMergedSources_ = function(sources) {\n  const allSources = [];\n  /** @type {Object.<string, ngeox.QueryResultSource>} */\n  const mergedSources = {};\n\n  sources.forEach((source) => {\n    // check if this source can be merged\n    const mergedSource = this.getMergedSource_(source, mergedSources);\n\n    if (mergedSource === null) {\n      // this source should not be merged, add as is\n      allSources.push(source);\n    }\n  });\n\n  for (const mergedSourceId in mergedSources) {\n    allSources.push(mergedSources[mergedSourceId]);\n  }\n\n  return allSources;\n};\n\n\n/**\n * Check if the given source should be merged. If so, an artificial source\n * that will contain the features of all mergable sources is returned. If not,\n * `null` is returned.\n * @param {ngeox.QueryResultSource} source Source.\n * @param {Object.<string, ngeox.QueryResultSource>} mergedSources Merged sources.\n * @return {?ngeox.QueryResultSource} A merged source of null if the source should\n *    not be merged.\n * @private\n */\nexports.Controller_.prototype.getMergedSource_ = function(source, mergedSources) {\n  let mergeSourceId = null;\n\n  for (const currentMergeSourceId in this.mergeTabs) {\n    const sourceLabels = this.mergeTabs[currentMergeSourceId];\n    const containsSource = sourceLabels.some(sourceLabel => sourceLabel == source.label);\n    if (containsSource) {\n      mergeSourceId = currentMergeSourceId;\n      break;\n    }\n  }\n\n  if (mergeSourceId === null) {\n    // this source should not be merged\n    return null;\n  }\n\n  /** @type {ngeox.QueryResultSource} */\n  let mergeSource;\n  if (mergeSourceId in mergedSources) {\n    mergeSource = mergedSources[mergeSourceId];\n  } else {\n    mergeSource = {\n      features: [],\n      id: mergeSourceId,\n      label: mergeSourceId,\n      limit: this.maxResults,\n      pending: false,\n      queried: true,\n      tooManyResults: false,\n      totalFeatureCount: undefined\n    };\n    mergedSources[mergeSourceId] = mergeSource;\n  }\n\n  // add features of source to merge source\n  source.features.forEach((feature) => {\n    mergeSource.features.push(feature);\n  });\n\n  // if one of the source has too many results, the resulting merged source will\n  // also be marked with `tooManyResults` and will not contain any features.\n  mergeSource.tooManyResults = mergeSource.tooManyResults || source.tooManyResults;\n  if (mergeSource.tooManyResults) {\n    mergeSource.totalFeatureCount = (mergeSource.totalFeatureCount !== undefined) ?\n      mergeSource.totalFeatureCount + mergeSource.features.length : mergeSource.features.length;\n    mergeSource.features = [];\n  }\n  if (source.totalFeatureCount !== undefined) {\n    mergeSource.totalFeatureCount = (mergeSource.totalFeatureCount !== undefined) ?\n      mergeSource.totalFeatureCount + source.totalFeatureCount : source.totalFeatureCount;\n  }\n\n  return mergeSource;\n};\n\n\n/**\n * Collect all features in the queryResult object.\n * @param {ngeox.QueryResultSource} source Result source.\n * @private\n */\nexports.Controller_.prototype.collectData_ = function(source) {\n  const features = source.features;\n  const allProperties = [];\n  const featureGeometriesNames = [];\n  const featuresForSource = {};\n  let properties, featureGeometryName;\n  features.forEach((feature) => {\n    properties = feature.getProperties();\n    if (properties !== undefined) {\n      // Keeps distinct geometry names to remove theme later.\n      featureGeometryName = feature.getGeometryName();\n      if (featureGeometriesNames.indexOf(featureGeometryName) === -1) {\n        featureGeometriesNames.push(featureGeometryName);\n      }\n\n      allProperties.push(properties);\n      featuresForSource[ngeoGridConfig.getRowUid(properties)] = feature;\n    }\n  });\n\n  this.cleanProperties_(allProperties, featureGeometriesNames);\n  if (allProperties.length > 0) {\n    const gridCreated = this.makeGrid_(allProperties, source);\n    if (gridCreated) {\n      this.featuresForSources_[`${source.label}`] = featuresForSource;\n    }\n  }\n};\n\n\n/**\n * Remove all unwanted columns.\n * @param {Array.<Object>} allProperties A row.\n * @param {Array.<string>} featureGeometriesNames Geometry names.\n * @private\n */\nexports.Controller_.prototype.cleanProperties_ = function(\n  allProperties, featureGeometriesNames) {\n  allProperties.forEach((properties) => {\n    featureGeometriesNames.forEach((featureGeometryName) => {\n      delete properties[featureGeometryName];\n    });\n    delete properties['boundedBy'];\n    delete properties['ngeo_feature_type_'];\n  });\n\n  if (this.removeEmptyColumns_ === true) {\n    this.removeEmptyColumnsFn_(allProperties);\n  }\n};\n\n\n/**\n * Remove columns that will be completely empty between each properties.\n * @param {Array.<Object>} allProperties A row.\n * @private\n */\nexports.Controller_.prototype.removeEmptyColumnsFn_ = function(\n  allProperties) {\n  // Keep all keys that correspond to at least one value in a properties object.\n  const keysToKeep = [];\n  let i, key;\n  for (key in allProperties[0]) {\n    for (i = 0; i < allProperties.length; i++) {\n      if (allProperties[i][key] !== undefined) {\n        keysToKeep.push(key);\n        break;\n      }\n    }\n  }\n  // Get all keys that previously always refers always to an empty value.\n  let keyToRemove;\n  allProperties.forEach((properties) => {\n    keyToRemove = [];\n    for (key in properties) {\n      if (keysToKeep.indexOf(key) === -1) {\n        keyToRemove.push(key);\n      }\n    }\n    // Remove these keys.\n    keyToRemove.forEach((key) => {\n      delete properties[key];\n    });\n  });\n};\n\n\n/**\n * @param {?Array.<Object>} data Grid rows.\n * @param {ngeox.QueryResultSource} source Query source.\n * @return {boolean} Returns true if a grid was created.\n * @private\n */\nexports.Controller_.prototype.makeGrid_ = function(data, source) {\n  const sourceLabel = `${source.label}`;\n  let gridConfig = null;\n  if (data !== null) {\n    gridConfig = this.getGridConfiguration_(data);\n    if (gridConfig === null) {\n      return false;\n    }\n  }\n  if (this.loadedGridSources.indexOf(sourceLabel) == -1) {\n    this.loadedGridSources.push(sourceLabel);\n  }\n  this.gridSources[sourceLabel] = {\n    configuration: gridConfig,\n    source: source\n  };\n  return true;\n};\n\n\n/**\n * @param {Array.<!Object>} data Grid rows.\n * @return {?ngeo.grid.Config} Grid config.\n * @private\n */\nexports.Controller_.prototype.getGridConfiguration_ = function(\n  data) {\n  googAsserts.assert(data.length > 0);\n  const clone = {};\n  Object.assign(clone, data[0]);\n  delete clone.ol_uid;\n  const columns = Object.keys(clone);\n\n  /** @type {Array.<ngeox.GridColumnDef>} */\n  const columnDefs = [];\n  columns.forEach((column) => {\n    columnDefs.push(/** @type {ngeox.GridColumnDef} */ ({\n      name: column\n    }));\n  });\n\n  if (columnDefs.length > 0) {\n    return new ngeoGridConfig(data, columnDefs);\n  } else {\n    // no columns, do not show grid\n    return null;\n  }\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.active = false;\n  this.pending = false;\n  this.gridSources = {};\n  this.loadedGridSources = [];\n  this.selectedTab = null;\n  this.tooManyResults = false;\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n  this.ngeoMapQuerent_.clear();\n  this.featuresForSources_ = {};\n  if (this.unregisterSelectWatcher_) {\n    this.unregisterSelectWatcher_();\n  }\n};\n\n\n/**\n * Select the tab for the given grid source.\n * @param {gmfx.GridSource} gridSource Grid source.\n * @export\n */\nexports.Controller_.prototype.selectTab = function(gridSource) {\n  const source = gridSource.source;\n  this.selectedTab = source.label;\n\n  if (this.unregisterSelectWatcher_) {\n    this.unregisterSelectWatcher_();\n    this.unregisterSelectWatcher_ = null;\n  }\n\n  if (gridSource.configuration !== null) {\n    this.unregisterSelectWatcher_ = this.$scope_.$watchCollection(\n      () => gridSource.configuration.selectedRows,\n      (newSelected, oldSelectedRows) => {\n        if (Object.keys(newSelected) !== Object.keys(oldSelectedRows)) {\n          this.onSelectionChanged_();\n        }\n      });\n  }\n  this.updateFeatures_(gridSource);\n\n  this.reflowGrid_();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.reflowGrid_ = function() {\n  // This is a \"work-around\" to make sure that the grid is rendered correctly.\n  // When a pane is activated by setting `this.selectedTab`, the class `active`\n  // is not yet set on the pane. That's why the class is set manually, and\n  // after the pane is shown (in the next digest loop), the grid table can\n  // be refreshed.\n  const id = this.escapeValue(this.selectedTab || '');\n  const activePane = this.$element_.find(`div.tab-pane#${id}`);\n  activePane.removeClass('active').addClass('active');\n  this.$timeout_(() => {\n    activePane.find('div.ngeo-grid-table-container table')['trigger']('reflow');\n  });\n};\n\n\n/**\n * Called when the row selection has changed.\n * @private\n */\nexports.Controller_.prototype.onSelectionChanged_ = function() {\n  if (this.selectedTab === null) {\n    return;\n  }\n\n  const gridSource = this.gridSources[`${this.selectedTab}`];\n  this.updateFeatures_(gridSource);\n};\n\n\n/**\n * @param {gmfx.GridSource} gridSource Grid source\n * @private\n */\nexports.Controller_.prototype.updateFeatures_ = function(gridSource) {\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n\n  if (gridSource.configuration === null) {\n    return;\n  }\n\n  const sourceLabel = `${gridSource.source.label}`;\n  const featuresForSource = this.featuresForSources_[sourceLabel];\n  const selectedRows = gridSource.configuration.selectedRows;\n\n  for (const rowId in featuresForSource) {\n    const feature = featuresForSource[rowId];\n    if (rowId in selectedRows) {\n      this.highlightFeatures_.push(feature);\n    } else {\n      this.features_.push(feature);\n    }\n  }\n};\n\n\n/**\n * Get the currently shown grid source.\n * @export\n * @return {gmfx.GridSource|null} Grid source.\n */\nexports.Controller_.prototype.getActiveGridSource = function() {\n  if (this.selectedTab === null) {\n    return null;\n  } else {\n    return this.gridSources[`${this.selectedTab}`];\n  }\n};\n\n\n/**\n * Returns if a row of the currently active grid is selected?\n * @export\n * @return {boolean} Is one selected?\n */\nexports.Controller_.prototype.isOneSelected = function() {\n  const source = this.getActiveGridSource();\n  if (source === null || source.configuration === null) {\n    return false;\n  } else {\n    return source.configuration.getSelectedCount() > 0;\n  }\n};\n\n\n/**\n * Returns the number of selected rows of the currently active grid.\n * @export\n * @return {number} The number of selected rows.\n */\nexports.Controller_.prototype.getSelectedRowCount = function() {\n  const source = this.getActiveGridSource();\n  if (source === null || source.configuration === null) {\n    return 0;\n  } else {\n    return source.configuration.getSelectedCount();\n  }\n};\n\n\n/**\n * Select all rows of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.selectAll = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.selectAll();\n  }\n};\n\n\n/**\n * Deselect all rows of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.unselectAll = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.unselectAll();\n  }\n};\n\n\n/**\n * Invert the selection of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.invertSelection = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.invertSelection();\n  }\n};\n\n\n/**\n * Zoom to the selected features.\n * @export\n */\nexports.Controller_.prototype.zoomToSelection = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    const extent = olExtent.createEmpty();\n    this.highlightFeatures_.forEach((feature) => {\n      olExtent.extend(extent, feature.getGeometry().getExtent());\n    });\n    const size = this.map_.getSize();\n    googAsserts.assert(size !== undefined);\n    const maxZoom = this.maxRecenterZoom;\n    this.map_.getView().fit(extent, {size, maxZoom});\n  }\n};\n\n\n/**\n * Start a CSV download for the selected features.\n * @export\n */\nexports.Controller_.prototype.downloadCsv = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    const columnDefs = source.configuration.columnDefs;\n    googAsserts.assert(columnDefs !== undefined);\n    const selectedRows = source.configuration.getSelectedRows();\n\n    this.ngeoCsvDownload_.startDownload(\n      selectedRows, columnDefs, this.filename_);\n  }\n};\n\n\nexports.controller('GmfDisplayquerygridController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.swipe\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMiscSwipe', []);\n\n\n/**\n * ===========================================\n * NOTE: It is an inversed copy of ngSwipe.\n * Angular ngSwipe assumes that vertical\n * swipe is a scroll.\n * For more details:\n * https://docs.angularjs.org/api/ngTouch/service/$swipe\n * ===========================================\n */\n\n/**\n * @ngdoc service\n * @name $verticalSwipe\n *\n * @description\n * The `$verticalSwipe` service is a service that abstracts the messier details of hold-and-drag swipe\n * behavior, to make implementing swipe-related directives more convenient.\n *\n * Requires the {@link ngTouch `ngTouch`} module to be installed.\n *\n * `$verticalSwipe` is used by the `ngeoSwipeUp` and `ngeoSwipeDown` directives.\n *\n * # Usage\n * The `$verticalSwipe` service is an object with a single method: `bind`. `bind` takes an element\n * which is to be watched for swipes, and an object with four handler functions. See the\n * documentation for `bind` below.\n */\n\nexports.factory('$verticalSwipe', [function() {\n  // The total distance in any direction before we make the call on swipe vs. scroll.\n  const MOVE_BUFFER_RADIUS = 10;\n\n  const POINTER_EVENTS = {\n    'mouse': {\n      start: 'mousedown',\n      move: 'mousemove',\n      end: 'mouseup'\n    },\n    'touch': {\n      start: 'touchstart',\n      move: 'touchmove',\n      end: 'touchend',\n      cancel: 'touchcancel'\n    },\n    'pointer': {\n      start: 'pointerdown',\n      move: 'pointermove',\n      end: 'pointerup',\n      cancel: 'pointercancel'\n    }\n  };\n\n  function getCoordinates(event) {\n    const originalEvent = event.originalEvent || event;\n    const touches = originalEvent.touches && originalEvent.touches.length ? originalEvent.touches : [originalEvent];\n    const e = (originalEvent.changedTouches && originalEvent.changedTouches[0]) || touches[0];\n\n    return {\n      x: e.clientX,\n      y: e.clientY\n    };\n  }\n\n  function getEvents(pointerTypes, eventType) {\n    const res = [];\n    angular.forEach(pointerTypes, (pointerType) => {\n      const eventName = POINTER_EVENTS[pointerType][eventType];\n      if (eventName) {\n        res.push(eventName);\n      }\n    });\n    return res.join(' ');\n  }\n\n  return {\n    /**\n     * @ngdoc method\n     * @name $verticalSwipe#bind\n     * @param {!angular.JQLite} element Element.\n     * @param {Object} eventHandlers - Event handlers object with `start`, `cancel` and `end` callbacks\n     * @param {Array<string>} pointerTypes - Types of pointer\n     *\n     * @description\n     * The main method of `$verticalSwipe`. It takes an element to be watched for swipe motions, and an\n     * object containing event handlers.\n     * The pointer types that should be used can be specified via the optional\n     * third argument, which is an array of strings `'mouse'`, `'touch'` and `'pointer'`. By default,\n     * `$verticalSwipe` will listen for `mouse`, `touch` and `pointer` events.\n     *\n     * The four events are `start`, `move`, `end`, and `cancel`. `start`, `move`, and `end`\n     * receive as a parameter a coordinates object of the form `{ x: 150, y: 310 }` and the raw\n     * `event`. `cancel` receives the raw `event` as its single parameter.\n     *\n     * `start` is called on either `mousedown`, `touchstart` or `pointerdown`. After this event, `$verticalSwipe` is\n     * watching for `touchmove`, `mousemove` or `pointermove` events. These events are ignored until the total\n     * distance moved in either dimension exceeds a small threshold.\n     *\n     * Once this threshold is exceeded, either the vertical or vertical delta is greater.\n     * - If the vertical distance is greater, this is a swipe and `move` and `end` events follow.\n     * - If the horizontal distance is greater, this is a scroll, and we let the browser take over.\n     *   A `cancel` event is sent.\n     *\n     * `move` is called on `mousemove`, `touchmove` and `pointermove` after the above logic has determined that\n     * a swipe is in progress.\n     *\n     * `end` is called when a swipe is successfully completed with a `touchend`, `mouseup` or `pointerup`.\n     *\n     * `cancel` is called either on a `touchcancel` or `pointercancel`  from the browser, or when we begin scrolling\n     * as described above.\n     *\n     */\n    bind(element, eventHandlers, pointerTypes) {\n      // Absolute total movement, used to control swipe vs. scroll.\n      let totalX, totalY;\n      // Coordinates of the start position.\n      let startCoords;\n      // Last event's position.\n      let lastPos;\n      // Whether a swipe is active.\n      let active = false;\n\n      pointerTypes = pointerTypes || ['mouse', 'touch', 'pointer'];\n      element.on(getEvents(pointerTypes, 'start'), (event) => {\n        startCoords = getCoordinates(event);\n        active = true;\n        totalX = 0;\n        totalY = 0;\n        lastPos = startCoords;\n        if (eventHandlers['start']) {\n          eventHandlers['start'](startCoords, event);\n        }\n      });\n      const events = getEvents(pointerTypes, 'cancel');\n      if (events) {\n        element.on(events, (event) => {\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n        });\n      }\n\n      element.on(getEvents(pointerTypes, 'move'), (event) => {\n        if (!active) {\n          return;\n        }\n\n        // Android will send a touchcancel if it thinks we're starting to scroll.\n        // So when the total distance (+ or - or both) exceeds 10px in either direction,\n        // we either:\n        // - On totalX > totalY, we send preventDefault() and treat this as a swipe.\n        // - On totalY > totalX, we let the browser handle it as a scroll.\n\n        if (!startCoords) {\n          return;\n        }\n        const coords = getCoordinates(event);\n\n        totalX += Math.abs(coords.x - lastPos.x);\n        totalY += Math.abs(coords.y - lastPos.y);\n\n        lastPos = coords;\n\n        if (totalX < MOVE_BUFFER_RADIUS && totalY < MOVE_BUFFER_RADIUS) {\n          return;\n        }\n\n        // One of totalX or totalY has exceeded the buffer, so decide on swipe vs. scroll.\n        if (totalX > totalY) {\n          // Allow native scrolling to take over.\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n          return;\n        } else {\n          // Prevent the browser from scrolling.\n          event.preventDefault();\n          if (eventHandlers['move']) {\n            eventHandlers['move'](coords, event);\n          }\n        }\n      });\n\n      element.on(getEvents(pointerTypes, 'end'), (event) => {\n        if (!active) {\n          return;\n        }\n        active = false;\n        if (eventHandlers['end']) {\n          eventHandlers['end'](getCoordinates(event), event);\n        }\n      });\n    }\n  };\n}]);\n\nexports.makeSwipeDirective_ = function(directiveName, direction, eventName) {\n  exports.directive(directiveName, ['$parse', '$verticalSwipe', function($parse, $verticalSwipe) {\n    // The maximum horizontal delta for a swipe should be less than 75px.\n    const MAX_HORIZONTAL_DISTANCE = 75;\n    // Horizontal distance should not be more than a fraction of the vertical distance.\n    const MAX_HORIZONTAL_RATIO = 0.3;\n    // At least a 30px lateral motion is necessary for a swipe.\n    const MIN_VERTICAL_DISTANCE = 30;\n\n    return function(scope, element, attr) {\n      const swipeHandler = $parse(attr[directiveName]);\n\n      let startCoords, valid;\n\n      function validSwipe(coords) {\n        // Check that it's within the coordinates.\n        // Absolute vertical distance must be within tolerances.\n        // Horizontal distance, we take the current X - the starting X.\n        // This is negative for downward swipes and positive for upward swipes.\n        // After multiplying by the direction (-1 for down, +1 for up), legal swipes\n        // (ie. same direction as the directive wants) will have a positive delta and\n        // illegal ones a negative delta.\n        // Therefore this delta must be positive, and larger than the minimum.\n        if (!startCoords) {\n          return false;\n        }\n        const deltaY = (coords.y - startCoords.y) * direction;\n        const deltaX = Math.abs(coords.x - startCoords.x);\n        return valid && // Short circuit for already-invalidated swipes.\n            deltaX < MAX_HORIZONTAL_DISTANCE &&\n            deltaY > 0 &&\n            deltaY > MIN_VERTICAL_DISTANCE &&\n            deltaX / deltaY < MAX_HORIZONTAL_RATIO;\n      }\n\n      const pointerTypes = ['touch'];\n      if (!angular.isDefined(attr['ngeoSwipeDisableMouse'])) {\n        pointerTypes.push('mouse');\n      }\n      $verticalSwipe.bind(element, {\n        'start': function(coords, event) {\n          startCoords = coords;\n          valid = true;\n        },\n        'cancel': function(event) {\n          valid = false;\n        },\n        'end': function(coords, event) {\n          if (validSwipe(coords)) {\n            scope.$apply(() => {\n              element.triggerHandler(eventName);\n              swipeHandler(scope, {$event: event});\n            });\n          }\n        }\n      }, pointerTypes);\n    };\n  }]);\n};\n\n// Down is negative Y-coordinate, up is positive.\nexports.makeSwipeDirective_('ngeoSwipeDown', 1, 'swipedown');\nexports.makeSwipeDirective_('ngeoSwipeUp', -1, 'swipeup');\n\n\nexport default exports;\n","/**\n * @module gmf.query.windowComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscSwipe from 'ngeo/misc/swipe.js';\n\n/** @suppress {extraRequire} - required for `ngeoQueryResult` */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olCollection from 'ol/Collection.js';\nimport * as olObj from 'ol/obj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport 'jquery-ui/ui/widgets/resizable.js';\nimport 'angular-animate';\nimport 'angular-touch';\nimport 'bootstrap/js/collapse.js';\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryWindowComponent', [\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscSwipe.name,\n  ngeoQueryMapQuerent.module.name,\n  'ngAnimate',\n  'ngTouch',\n]);\n\n\nexports.config(['$animateProvider',\n  /**\n   * For performance reason, only perform animation on elements that have the\n   * `gmf-animatable` css class.\n   * @param {angular.$animateProvider} $animateProvider animate provider.\n   */\n  function($animateProvider) {\n    $animateProvider.classNameFilter(/gmf-animatable/);\n  }\n]);\n\n\nexports.value('gmfDisplayquerywindowTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfDisplayquerywindowTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/query/windowComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/query/windowComponent', require('./windowComponent.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfDisplayquerywindowTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfDisplayquerywindowTemplateUrl($element, $attrs, gmfDisplayquerywindowTemplateUrl) {\n  return gmfDisplayquerywindowTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component to display results of the {@link ngeo.queryResult}\n * and shows related features on the map using the {@link ngeo.map.FeatureOverlayMgr}.\n *\n * You can override the default component's template by setting the\n * value `gmfDisplayquerywindowTemplateUrl`.\n *\n * Features displayed on the map use a default style but you can override these\n * styles by passing ol.style.Style objects as attributes of this component.\n *\n * Example:\n *\n *      <gmf-displayquerywindow\n *        gmf-displayquerywindow-featuresstyle=\"ctrl.styleForAllFeatures\"\n *        gmf-displayquerywindow-selectedfeaturestyle=\"ctrl.styleForTheCurrentFeature\">\n *      </gmf-displayquerywindow>\n *\n * @htmlAttribute {ol.style.Style} gmf-displayquerywindow-featuresstyle A style\n *     object for all features from the result of the query.\n * @htmlAttribute {ol.style.Style} selectedfeaturestyle A style\n *     object for the current displayed feature.\n * @htmlAttribute {boolean=} defaultcollapsed If the query result window is\n *     collapsed.\n * @htmlAttribute {boolean} desktop If the component is used in the desktop\n *     application.\n * @htmlAttribute {boolean} showunqueriedlayers If also layers, that have not\n *     been queried for the last query, should be shown in the filter.\n *\n * @ngdoc component\n * @ngname gmfDisplayquerywindow\n */\nexports.component_ = {\n  controller: 'GmfDisplayquerywindowController as ctrl',\n  bindings: {\n    'draggableContainment': '<?gmfDisplayquerywindowDraggableContainment',\n    'featuresStyleFn': '&gmfDisplayquerywindowFeaturesstyle',\n    'selectedFeatureStyleFn': '&gmfDisplayquerywindowSelectedfeaturestyle',\n    'defaultCollapsedFn': '&?gmfDisplayquerywindowDefaultcollapsed',\n    'desktop': '=gmfDisplayquerywindowDesktop',\n    'showUnqueriedLayers': '=gmfDisplayquerywindowShowunqueriedlayers'\n  },\n  templateUrl: gmfDisplayquerywindowTemplateUrl\n};\n\n\nexports.component('gmfDisplayquerywindow', exports.component_);\n\n\n/**\n * @param {!jQuery} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.QueryResult} ngeoQueryResult ngeo query result.\n * @param {!ngeo.query.MapQuerent} ngeoMapQuerent ngeo map querent service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisplayquerywindowController\n */\nexports.Controller_ = function($element, $scope, ngeoQueryResult, ngeoMapQuerent,\n  ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {Element|string}\n   * @export\n   */\n  this.draggableContainment;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.desktop = false;\n\n  /**\n   * Is the window currently collapsed?\n   * When used for Desktop, it is shown non-collapsed.\n   * @type {boolean}\n   * @export\n   */\n  this.collapsed = !this.desktop;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.showUnqueriedLayers_ = false;\n\n  /**\n   * Object that is used to filter the source list in the template.\n   * @type {Object}\n   * @export\n   */\n  this.sourcesFilter = {'queried': true};\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @export\n   */\n  this.ngeoQueryResult = {\n    sources: [],\n    total: 0,\n    pending: false\n  };\n\n  /**\n   * @type {!ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.selectedSource = null;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.highlightFeatures_ = new olCollection();\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.source = null;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature = null;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.currentResult = -1;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isNext = true;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.animate = 0;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.open = false;\n\n  /**\n   * @const {!jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  $scope.$watchCollection(\n    () => ngeoQueryResult,\n    (newQueryResult, oldQueryResult) => {\n      this.updateQueryResult_(newQueryResult);\n      if (newQueryResult.total > 0) {\n        this.show();\n      } else if (oldQueryResult !== newQueryResult) {\n        this.close();\n      }\n    });\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.draggableContainment = this.draggableContainment || 'document';\n  this.desktop = this.desktop;\n  this.collapsed = this['defaultCollapsedFn'] ?\n    this['defaultCollapsedFn']() === true : !this.desktop;\n\n  this.showUnqueriedLayers_ = this['showUnqueriedLayers'] ?\n    this['showUnqueriedLayers'] === true : false;\n\n  this.sourcesFilter = this.showUnqueriedLayers_ ? {} : {'queried': true};\n\n  const featuresOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  featuresOverlay.setFeatures(this.features_);\n  const featuresStyle = this['featuresStyleFn']();\n  if (featuresStyle !== undefined) {\n    googAsserts.assertInstanceof(featuresStyle, olStyleStyle);\n    featuresOverlay.setStyle(featuresStyle);\n  }\n\n  const highlightFeaturesOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  highlightFeaturesOverlay.setFeatures(this.highlightFeatures_);\n  let highlightFeatureStyle = this['selectedFeatureStyleFn']();\n  if (highlightFeatureStyle !== undefined) {\n    googAsserts.assertInstanceof(highlightFeatureStyle, olStyleStyle);\n  } else {\n    const fill = new olStyleFill({color: [255, 0, 0, 0.6]});\n    const stroke = new olStyleStroke({color: [255, 0, 0, 1], width: 2});\n    highlightFeatureStyle = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke\n    });\n  }\n  highlightFeaturesOverlay.setStyle(highlightFeatureStyle);\n\n  if (this.desktop) {\n    this.element_.find('.gmf-displayquerywindow .windowcontainer').draggable({\n      'cancel': 'input,textarea,button,select,option,tr',\n      'containment': this.draggableContainment\n    });\n    this.element_.find('.gmf-displayquerywindow .windowcontainer').resizable({\n      'minHeight': 240,\n      'minWidth': 240\n    });\n  }\n};\n\n\n/**\n * Remove current displayed results then get new results from the\n * ngeoQueryResult service. Display all results on the map and display,\n * highlight the first feature.\n * @export\n */\nexports.Controller_.prototype.show = function() {\n  this.clear();\n  this.updateFeatures_();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateFeatures_ = function() {\n  this.setCurrentResult_(0, false);\n  if (this.source !== null) {\n    this.collectFeatures_();\n    this.highlightCurrentFeature_();\n    this.open = true;\n  }\n};\n\n/**\n * Select a source and a feature depending of the given position.\n * @param {number} position The index of the feature. If the position is bigger\n * than the length of the first source, get it in the next source. Etc.\n * @param {boolean} setHighlight True to set the highlight automatically.\n * @return {boolean} True if result has changed. False else.\n * @private\n */\nexports.Controller_.prototype.setCurrentResult_ = function(\n  position, setHighlight) {\n  let hasChanged = false;\n  if (position !== this.currentResult) {\n    let i, source, features;\n    const lastFeature = this.feature;\n    const sources = this.ngeoQueryResult.sources;\n    this.currentResult = position;\n    for (i = 0; i < sources.length; i++) {\n      source = sources[i];\n      if (this.selectedSource !== null && this.selectedSource !== source) {\n        // when filtering on a source, only consider features of the selected source\n        continue;\n      }\n      features = source.features;\n      if (position >= features.length) {\n        position -= features.length;\n      } else {\n        this.source = source;\n        this.feature = source.features[position];\n        hasChanged = true;\n        break;\n      }\n    }\n    if (setHighlight) {\n      this.highlightCurrentFeature_(lastFeature);\n    }\n  }\n  return hasChanged;\n};\n\n\n/**\n * Select the logical previous source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.previous = function() {\n  let position = this.currentResult - 1;\n  if (position < 0) {\n    position = this.getResultLength() - 1;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(false);\n  }\n};\n\n\n/**\n * Select the logical next source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.next = function() {\n  let position = this.currentResult + 1;\n  const positionMax = this.getResultLength() - 1;\n  if (position > positionMax) {\n    position = 0;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(true);\n  }\n};\n\n\n/**\n * Remove features without properties from the query result.\n * @param {ngeox.QueryResult} queryResult ngeo query result.\n * @private\n */\nexports.Controller_.prototype.updateQueryResult_ = function(queryResult) {\n  this.ngeoQueryResult.total = 0;\n  this.ngeoQueryResult.sources.length = 0;\n  for (let i = 0; i < queryResult.sources.length; i++) {\n    const source = queryResult.sources[i];\n    source.features = source.features.filter((feature) => {\n      googAsserts.assert(feature);\n      return !olObj.isEmpty(ngeoMiscFeatureHelper.getFilteredFeatureValues(feature));\n    });\n    this.ngeoQueryResult.sources.push(source);\n    this.ngeoQueryResult.total += source.features.length;\n  }\n};\n\n/**\n * Get the total count of features in the result of the query. If a source\n * has been select, only the number of features of that source are returned.\n * @return {number} Total number of features.\n * @export\n */\nexports.Controller_.prototype.getResultLength = function() {\n  if (this.selectedSource === null) {\n    return this.ngeoQueryResult.total;\n  } else {\n    return this.selectedSource.features.length;\n  }\n};\n\n\n/**\n * @return {boolean} If the first result is active.\n * @export\n */\nexports.Controller_.prototype.isFirst = function() {\n  return this.currentResult == 0;\n};\n\n\n/**\n * @return {boolean} If the last result is active.\n * @export\n */\nexports.Controller_.prototype.isLast = function() {\n  return this.currentResult == this.getResultLength() - 1;\n};\n\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * @return {Object?} Filtered properties of the current feature or null.\n * @export\n */\nexports.Controller_.prototype.getFeatureValues = function() {\n  if (!this.feature) {\n    return null;\n  }\n  return ngeoMiscFeatureHelper.getFilteredFeatureValues(this.feature);\n};\n\n\n/**\n * Special function that's used to set the \"animation\" value after to set the\n * \"isNext\" value. The aim is to wait on Angular to add a class (corresponding\n * to \"isNext\") on the DOM before to set the \"animation\" value and do the\n * animation.\n * @param {boolean} isNext used to indicate if the user wants to see the next\n * or the previous result.\n * @private\n */\nexports.Controller_.prototype.animate_ = function(isNext) {\n  this.isNext = isNext;\n  this.animate++;\n};\n\n\n/**\n * Collect all features in the queryResult object.\n * @private\n */\nexports.Controller_.prototype.collectFeatures_ = function() {\n  const sources = this.ngeoQueryResult.sources;\n  this.features_.clear();\n  for (let i = 0; i < sources.length; i++) {\n    const source = sources[i];\n    if (this.selectedSource !== null && this.selectedSource !== source) {\n      // when filtering on a source, only add features of the selected source\n      continue;\n    }\n    const features = source.features;\n    for (let ii = 0; ii < features.length; ii++) {\n      this.features_.push(features[ii]);\n    }\n  }\n};\n\n\n/**\n * Highlight the current displayed feature.\n * @param {ol.Feature=} opt_lastFeature last highlighted feature. Require if\n * it exists because it must be added to the 'non-selected' features collection.\n * @private\n */\nexports.Controller_.prototype.highlightCurrentFeature_ =\nfunction(opt_lastFeature) {\n  this.highlightFeatures_.clear();\n  this.features_.remove(this.feature);\n  this.highlightFeatures_.push(this.feature);\n  if (opt_lastFeature !== undefined) {\n    this.features_.push(opt_lastFeature);\n  }\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.close = function() {\n  this.open = false;\n  this.clear();\n  this.ngeoMapQuerent_.clear();\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.feature = null;\n  this.source = null;\n  this.currentResult = -1;\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n  this.selectedSource = null;\n};\n\n\n/**\n * @param {ngeox.QueryResultSource} source The source to select.\n * @export\n */\nexports.Controller_.prototype.setSelectedSource = function(source) {\n  if (source !== null && source.features.length <= 0) {\n    // sources with no results can not be selected\n    return;\n  }\n  this.clear();\n  this.selectedSource = source;\n  this.updateFeatures_();\n};\n\n\nexports.controller('GmfDisplayquerywindowController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.query.extraModule\n */\nimport gmfQueryGridComponent from 'gmf/query/gridComponent.js';\nimport gmfQueryWindowComponent from 'gmf/query/windowComponent.js';\n\nimport './grid.less';\nimport './window.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryExtraModule', [\n  gmfQueryGridComponent.name,\n  gmfQueryWindowComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.search.module\n */\nimport gmfSearchComponent from 'gmf/search/component.js';\nimport gmfSearchFulltextSearch from 'gmf/search/FulltextSearch.js';\n\nimport './search.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfSearchModule', [\n  gmfSearchComponent.name,\n  gmfSearchFulltextSearch.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.selectorComponent\n */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport * as olEvents from 'ol/events.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeSelectorComponent', [\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/theme/selectorComponent', require('./selectorComponent.html'));\n});\n\n\nexports.value('gmfThemeSelectorTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfThemeSelectorTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/theme/selectorComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfThemeSelectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfThemeSelectorTemplateUrl($attrs, gmfThemeSelectorTemplateUrl) {\n  return gmfThemeSelectorTemplateUrl($attrs);\n}\n\n\n/**\n * Note that this component works with the {@link gmf.layertree.TreeManager}.\n * Setting the theme will update the \"tree\" object of\n * this {@link gmf.layertree.TreeManager}.\n *\n * Example:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span ng-if=\"mainCtrl.gmfThemeManager.modeFlush\">\n *            <span translate>Theme:</span>\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.getThemeName()\" translate>Loading...</b>\n *            <b ng-if=\"mainCtrl.gmfThemeManager.getThemeName()\">{{mainCtrl.gmfThemeManager.getThemeName()|translate}}</b>\n *          </span>\n *          <span ng-if=\"!mainCtrl.gmfThemeManager.modeFlush\">\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.themeName\" translate>Themes</b>\n *          </span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *\n * The theme selector can operate in a 'flush' (as above) or 'add' mode. For more information\n * about these modes, refer to the documentation of {@link gmf.layertree.TreeManager}.\n *\n * Example in 'add' mode:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span translate>Themes</span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('gmfTreeManagerModeFlush', false);\n *        })();\n *      </script>\n *\n * @htmlAttribute {Function} gmf-themeselector-filter The themes filter.\n *\n * @type {!angular.Component}\n */\nexports.component_ = {\n  bindings: {\n    'filter': '<gmfThemeselectorFilter'\n  },\n  controller: 'gmfThemeselectorController',\n  templateUrl: gmfThemeSelectorTemplateUrl\n};\n\nexports.component('gmfThemeselector', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {gmf.theme.Manager} gmfThemeManager Tree manager service.\n * @param {gmf.theme.Themes} gmfThemes Themes service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfThemeselectorController\n */\nexports.Controller_ = function($scope, gmfThemeManager, gmfThemes) {\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = gmfThemeManager;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {Array.<Object>}\n   * @export\n   */\n  this.themes;\n\n  /**\n   * @type {Function|undefined}\n   * @export\n   */\n  this.filter;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(this.gmfThemes_, 'change', this.setThemes_, this));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n\n};\n\n/**\n * Store the loaded themes locally applying a filter (if any), then set the\n * current theme.\n * @private\n */\nexports.Controller_.prototype.setThemes_ = function() {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    // Keep only the themes dedicated to the theme switcher\n    this.themes = this.filter ? themes.filter(this.filter) : themes;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfTheme} theme Theme.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.Controller_.prototype.setTheme = function(theme, opt_silent) {\n  if (theme) {\n    this.gmfThemeManager.addTheme(theme, opt_silent);\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('gmfThemeselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.module\n */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeSelectorComponent from 'gmf/theme/selectorComponent.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeModule', [\n  gmfThemeSelectorComponent.name,\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.displaywindowComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\nimport 'font-awesome/css/font-awesome.css';\nimport 'jquery-ui/ui/widgets/resizable.js';\nimport 'jquery-ui/ui/widgets/draggable.js';\nimport 'angular-sanitize';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMessageDisplaywindowComponent', [\n  'ngSanitize',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/message/displaywindowComponent', require('./displaywindowComponent.html'));\n});\n\n\nexports.value('ngeoMessageDisplaywindowTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoMessageDisplaywindowTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/message/displaywindowComponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoMessageDisplaywindowTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoMessageDisplaywindowTemplateUrl($attrs, ngeoMessageDisplaywindowTemplateUrl) {\n  return ngeoMessageDisplaywindowTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!jQuery} $element Element.\n   * @param {!angular.$sce} $sce Angular sce service.\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!angular.$compile} $compile The compile provider.\n   * @private\n   * @ngInject\n   * @ngdoc controller\n   * @ngname ngeoDisplaywindowComponentController\n   */\n  constructor($element, $sce, $scope, $compile) {\n\n    // === Binding Properties ===\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.clearOnClose;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.content = null;\n\n    /**\n     * @type {?string}\n     */\n    this.contentTemplate = null;\n\n    /**\n     * @type {?angular.Scope}\n     */\n    this.contentScope = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.draggable;\n\n    /**\n     * @type {Element|string}\n     * @export\n     */\n    this.draggableContainment;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.desktop;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.height = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.open;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.resizable;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.title = null;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.url = null;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.width = null;\n\n\n    // === Injected Properties ===\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {!angular.$sce}\n     * @private\n     */\n    this.sce_ = $sce;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {angular.$compile}\n     * @private\n     */\n    this.compile_ = $compile;\n  }\n\n  /**\n   * Called on initialization of the component.\n   */\n  $onInit() {\n\n    // Initialize binding properties\n    this.clearOnClose = this.clearOnClose !== false;\n    this.content = this.content || null;\n    this.contentTemplate = this.contentTemplate || null;\n    this.contentScope = this.contentScope || null;\n    this.desktop = this.desktop !== false;\n    this.draggableContainment = this.draggableContainment || 'document';\n    this.open = this.open === true;\n\n    this.draggable = this.draggable !== undefined ?\n      this.draggable : this.desktop;\n    this.resizable = this.resizable !== undefined ?\n      this.resizable : this.desktop;\n\n    // Draggable\n    if (this.draggable) {\n      this.element_.find('.ngeo-displaywindow .windowcontainer').draggable({\n        'containment': this.draggableContainment,\n        'handle': 'div.header'\n      });\n    }\n\n    // Resizable\n    if (this.resizable) {\n      this.element_.find('.ngeo-displaywindow .windowcontainer').resizable({\n        'minHeight': 240,\n        'minWidth': 240\n      });\n    }\n\n    if (this.contentTemplate) {\n      const scope = googAsserts.assert(this.contentScope || this.scope_);\n      const compiled = this.compile_(this.contentTemplate)(scope);\n      const displayWindow = this.element_.find('.ngeo-displaywindow .windowcontainer .animation-container');\n      displayWindow.append(/** @type {?} */ (compiled));\n    }\n  }\n\n  /**\n   * @export\n   */\n  close() {\n    this.open = false;\n    if (this.clearOnClose) {\n      this.clear_();\n    }\n  }\n\n  /**\n   * @return {!Object.<string, string>} CSS style when using width/height\n   * @export\n   */\n  get style() {\n    return {\n      'height': this.height || '240px',\n      'width': this.width || '240px'\n    };\n  }\n\n  /**\n   * @return {string|undefined} Trusted url.\n   * @export\n   */\n  get urlTrusted() {\n    if (this.url) {\n      return /** @type {string} */ (this.sce_.trustAsResourceUrl(this.url));\n    }\n  }\n\n  /**\n   * @export\n   */\n  clear_() {\n    this.content = null;\n    this.height = null;\n    this.title = null;\n    this.url = null;\n    this.width = null;\n  }\n};\n\n\n/**\n * The `ngeo-displaywindow` component is an alternative to the `ngeo.message.Popup`.\n * What they have in common:\n *\n * - support title\n * - support url to be shown in an iframe\n * - support plain HTML content\n * - support sizing, i.e. height and width.\n * - support being opened/closed\n *\n * The differences with the `ngeo.message.Popup` are:\n *\n * - it supports being dragged\n * - it supports being resized\n * - support angularjs template content\n *\n * Example:\n *      <ngeo-displaywindow\n *        class=\"window1\"\n *        url=\"::ctrl.window1Content\"\n *        desktop=\"::false\"\n *        open=\"::true\"\n *        title=\"'Window 1 - The simplest window (close kills it)'\">\n *      </ngeo-displaywindow>\n *\n * @htmlAttribute {boolean=} ngeo-displaywindow-clear-on-close Whether to clear the content on close or not.\n * @htmlAttribute {string=} ngeo-displaywindow-content The html content. If not provided, you must provide\n *     an url.\n * @htmlAttribute {string=} ngeo-displaywindow-content-template AngularJS template. It gets compiled during runtime\n * with the supplied scope (ngeo-displaywindow-content-scope).\n * @htmlAttribute {angular.Scope=} ngeo-displaywindow-content-scope Scope used for ngeo-displaywindow-content-template.\n * @htmlAttribute {boolean=} ngeo-displaywindow-desktop If true, the window is draggable and resizable. If\n *     not set, you must set manually both parameter.\n * @htmlAttribute {boolean=} ngeo-displaywindow-draggable Whether the window is draggable or not.\n * @htmlAttribute {string=} ngeo-displaywindow-draggable-containment The zone (CSS selector) where the window\n *     is authorized to be dragged.\n * @htmlAttribute {string=} ngeo-displaywindow-height The default height of the window.\n * @htmlAttribute {boolean=} ngeo-displaywindow-open Whether the window is open or not.\n * @htmlAttribute {string=} ngeo-displaywindow-title The html title of the window.\n * @htmlAttribute {string=} ngeo-displaywindow-url The URL to open in an iframe, in the window. The content\n *     attribute must not be provided.\n * @htmlAttribute {string=} ngeo-displaywindow-width The default width of the window.\n * @ngdoc component\n * @ngname ngeoDisplaywindow\n */\nexports.component('ngeoDisplaywindow', {\n  bindings: {\n    'clearOnClose': '<?',\n    'content': '=?',\n    'contentTemplate': '<?',\n    'contentScope': '<?',\n    'desktop': '<?',\n    'draggable': '<?',\n    'draggableContainment': '<?',\n    'height': '=?',\n    'open': '=?',\n    'resizable': '<?',\n    'title': '=?',\n    'url': '=?',\n    'width': '=?'\n  },\n  controller: exports.Controller_,\n  templateUrl: ngeoMessageDisplaywindowTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.controlComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport olMap from 'ol/Map.js';\nimport olControlControl from 'ol/control/Control.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoControl', []);\n\n\n/**\n * Provides a directive that can be used to add a control to the map\n * using a DOM element.\n *\n * Example:\n *\n *     <div ngeo-control=\"ctrl.control\" ngeo-control-map=\"ctrl.map\"></div>\n *\n * The expression passed to \"ngeo-control\" should evaluate to a control\n * instance, and the expression passed to \"ngeo-control-map\" should\n * evaluate to a map instance.\n *\n * See our live example: [../examples/control.html](../examples/control.html)\n *\n * @htmlAttribute {ol.Map} ngeo-control-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoControl\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const control = /** @type {ol.control.Control} */\n              (scope.$eval(attrs['ngeoControl']));\n      googAsserts.assertInstanceof(control, olControlControl);\n\n      const map = /** @type {ol.Map} */\n              (scope.$eval(attrs['ngeoControlMap']));\n      googAsserts.assertInstanceof(map, olMap);\n\n      control.setTarget(element[0]);\n      map.addControl(control);\n    }\n  };\n};\n\n\nexports.directive('ngeoControl', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.filereaderComponent\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFilereader', []);\n\n/**\n * This directive is to used on an input file element. When a file is selected\n * the directive uses the browser `FileReader` API to read the file. The file\n * content is provided to the directive user through the assignable expression.\n * Only works for text files (`readAsText` used for reading the file). And does\n * not work in Internet Explorer 9.\n *\n * Example:\n *\n *      <input type=\"file\" ngeo-filereader=\"ctrl.fileContent\"\n *        ngeo-filereader-supported=\"ctrl.supported\"/>\n *\n * See our live example: [../examples/importfeatures.html](../examples/importfeatures.html)\n *\n * @htmlAttribute {string} ngeo-filereader The content of the file read.\n * @htmlAttribute {boolean=} ngeo-filereader-supported Whether the FileReader API is supported.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoFilereader\n */\nexports.component_ = function($window) {\n  return {\n    restrict: 'A',\n    scope: {\n      'fileContent': '=ngeoFilereader',\n      'supported': '=?ngeoFilereaderSupported'\n    },\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      const supported = 'FileReader' in $window;\n      scope['supported'] = supported;\n      if (!supported) {\n        return;\n      }\n      element.on('change', (changeEvent) => {\n        /** @type {!FileReader} */\n        const fileReader = new $window.FileReader();\n        fileReader.onload = (\n          /**\n                 * @param {!ProgressEvent} evt Event.\n                 */\n          function(evt) {\n            scope.$apply(() => {\n              scope['fileContent'] = evt.target.result;\n            });\n          });\n        fileReader.readAsText(changeEvent.target.files[0]);\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoFilereader',\n  exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.getBrowserLanguage\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGetBrowserLanguage', []);\n\n\n/**\n * Provides a function that returns the most appropriate 2-letter\n * language code depending on the list of available languages and the browser\n * languages settings.\n *\n * @param {angular.$window} $window Angular $window service.\n * @return {ngeox.miscGetBrowserLanguage} The \"GetBrowserLanguage\" function.\n *\n * @ngdoc service\n * @ngname ngeoGetBrowserLanguage\n * @ngInject\n */\nexports.factory_ = function($window) {\n  return (\n    /**\n     * @param {Array.<string>} availableLanguages Available languages.\n     * @return {string} The \"best\" language code.\n     */\n    function(availableLanguages) {\n      const nav = $window.navigator;\n      let browserLanguages = nav.languages || nav.language ||\n            nav.browserLanguage || nav.systemLanguage || nav.userLanguage;\n      if (!Array.isArray(browserLanguages)) {\n        browserLanguages = [browserLanguages];\n      }\n      browserLanguages = browserLanguages.map(item => item.substring(0, 2));\n      // remove duplicated language codes\n      browserLanguages = browserLanguages.filter((item, index, arr) => arr.indexOf(item) == index);\n      const supportedLanguages = browserLanguages.filter(item => availableLanguages.indexOf(item) != -1);\n      return supportedLanguages[0];\n    });\n};\n\nexports.factory('ngeoGetBrowserLanguage', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.extraModule\n */\nimport ngeoMiscAutoProjection from 'ngeo/misc/AutoProjection.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\nimport ngeoMiscControlComponent from 'ngeo/misc/controlComponent.js';\nimport ngeoMiscDatepickerComponent from 'ngeo/misc/datepickerComponent.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoMiscFilereaderComponent from 'ngeo/misc/filereaderComponent.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoMiscGetBrowserLanguage from 'ngeo/misc/getBrowserLanguage.js';\nimport ngeoMiscSortableComponent from 'ngeo/misc/sortableComponent.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMiscExtraModule', [\n  ngeoMiscAutoProjection.module.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscControlComponent.name,\n  ngeoMiscDatepickerComponent.name,\n  ngeoMiscDebounce.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscFile.module.name,\n  ngeoMiscFilereaderComponent.name,\n  ngeoMiscFilters.name,\n  ngeoMiscGetBrowserLanguage.name,\n  ngeoMiscSortableComponent.name,\n  ngeoMiscTime.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.query.mapQueryComponent\n */\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport * as olEvents from 'ol/events.js';\n\nconst exports = angular.module('ngeoMapQuery', [\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\n/**\n * Provides a \"map query\" directive.\n *\n * This directive is responsible of binding a map and the ngeo query service\n * together. While active, clicks made on the map are listened by the directive\n * and a request gets issued to the query service.\n *\n * This directive doesn't require to be rendered in a visible DOM element, but\n * it could be used with a ngeo-btn to manage the activation of the directive.\n * See below an example without any use of UI:\n *\n * Example:\n *\n *      <span\n *        ngeo-map-query=\"\"\n *        ngeo-map-query-map=\"::ctrl.map\"\n *        ngeo-map-query-active=\"ctrl.queryActive\"\n *        ngeo-map-query-autoclear=\"ctrl.queryAutoClear\">\n *      </span>\n *\n * See our live example: [../examples/mapquery.html](../examples/mapquery.html)\n *\n * @param {ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n * @param {angular.$injector} $injector Main injector.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoMapQuery\n */\nexports.directive_ = function(ngeoMapQuerent, $injector) {\n  return {\n    restrict: 'A',\n    scope: false,\n    link: (scope, elem, attrs) => {\n      const map = scope.$eval(attrs['ngeoMapQueryMap']);\n      let clickEventKey_ = null;\n      let pointerMoveEventKey_ = null;\n\n      /**\n       * Called when the map is clicked while this controller is active. Issue\n       * a request to the query service using the coordinate that was clicked.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handleMapClick_ = function(evt) {\n        const coordinate = evt.coordinate;\n        ngeoMapQuerent.issue({\n          coordinate,\n          map\n        });\n      };\n\n      /**\n       * Called when the pointer is moved while this controller is active.\n       * Change the mouse pointer when hovering a non-transparent pixel on the\n       * map.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handlePointerMove_ = function(evt) {\n        if (!evt.dragging) {\n          const pixel = map.getEventPixel(evt.originalEvent);\n          const queryable = function(layer) {\n            const visible = layer.get('visible');\n            const sourceids = layer.get('querySourceIds');\n            return visible && !!sourceids;\n          };\n          const hit = map.forEachLayerAtPixel(pixel, () => true, undefined, queryable);\n          map.getTargetElement().style.cursor = hit ? 'pointer' : '';\n        }\n      };\n\n      /**\n       * Listen to the map events.\n       */\n      const activate_ = function() {\n        clickEventKey_ = olEvents.listen(map, 'singleclick', handleMapClick_);\n        const queryOptions = /** @type {ngeox.QueryOptions} */ (\n          $injector.has('ngeoQueryOptions') ? $injector.get('ngeoQueryOptions') : {}\n        );\n        if (queryOptions.cursorHover) {\n          pointerMoveEventKey_ = olEvents.listen(map, 'pointermove', handlePointerMove_);\n        }\n      };\n\n      /**\n       * Unlisten the map events.\n       */\n      const deactivate_ = function() {\n        if (clickEventKey_ !== null) {\n          olEvents.unlistenByKey(clickEventKey_);\n          clickEventKey_ = null;\n        }\n        if (pointerMoveEventKey_ !== null) {\n          olEvents.unlistenByKey(pointerMoveEventKey_);\n          pointerMoveEventKey_ = null;\n        }\n        if (scope.$eval(attrs['ngeoMapQueryAutoclear']) !== false) {\n          ngeoMapQuerent.clear();\n        }\n      };\n\n      // watch 'active' property -> activate/deactivate accordingly\n      scope.$watch(attrs['ngeoMapQueryActive'],\n        (newVal, oldVal) => {\n          if (newVal) {\n            activate_();\n          } else {\n            deactivate_();\n          }\n        }\n      );\n    }\n  };\n};\n\nexports.directive('ngeoMapQuery', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.WfsPermalink\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olExtent from 'ol/extent.js';\nimport * as olFormatFilter from 'ol/format/filter.js';\nimport olFormatWFS from 'ol/format/WFS.js';\n\n/**\n * WFS permalink service that can be used to load features with a WFS\n * GetFeature request given query parameters.\n *\n * Resulting features are then highlighted and\n * the map is zoomed to the nearest map extent.\n *\n * Parameters:\n *\n * - ``wfs_layer`` tells what layer will be queried\n * - ``wfs_showFeatures`` (boolean) tells if the features should be\n *   highlighted and listed (when true) or if the map should only be\n *   recentered on the features (when false). Default is true.\n * - other parameters will be considered as WFS attribute/values filters and\n *   must be of the form:\n *   ``wfs_<layer attribute name>=<a comma-separated list of values>``\n *\n * Example:\n * http://example.com?wfs_layer=parcels&wfs_city=Oslo&wfs_number=12,34,56\n * will load parcels #12, 34 and 56 of the city of Oslo.\n *\n * It is possible to define several groups of filtering parameters by:\n *\n * - adding a ``wfs_ngroups`` parameter telling how many groups are defined\n * - prefixing all filtering parameters by the number of each group,\n *   starting at 0. For instance ``wfs_0_<layer attribute name>``\n *\n * Example:\n * http://example.com?wfs_layer=parcels&wfs_ngroups=2\n * &wfs_0_city=Oslo&wfs_0_number=12,34,56&wfs_1_city=Paris&wfs_1_number=78,90\n * will load parcels #12, 34 and 56 of the city of Oslo as well as\n * parcels #78 and 90 of the city of Paris.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular $http service.\n * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n * @param {ngeox.WfsPermalinkOptions} ngeoWfsPermalinkOptions The options to\n *     configure the ngeo wfs permalink service with.\n * @ngdoc service\n * @ngname ngeoWfsPermalink\n * @ngInject\n */\nconst WfsPermalinkService = function($http, ngeoQueryResult, ngeoWfsPermalinkOptions) {\n\n  const options = ngeoWfsPermalinkOptions;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = options.url;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxFeatures_ = options.maxFeatures !== undefined ? options.maxFeatures : 50;\n\n  /**\n   * @type {Object<string, ngeox.WfsType>}\n   * @private\n   */\n  this.wfsTypes_ = {};\n\n  googAsserts.assertArray(options.wfsTypes, 'wfsTypes is not correctly set');\n  options.wfsTypes.forEach((wfsType) => {\n    this.wfsTypes_[wfsType.featureType] = wfsType;\n  });\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.defaultFeatureNS_ = options.defaultFeatureNS;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.defaultFeaturePrefix_ = options.defaultFeaturePrefix;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.pointRecenterZoom_ = options.pointRecenterZoom;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @private\n   */\n  this.result_ = ngeoQueryResult;\n};\n\n\n/**\n * Clear the results.\n * @export\n */\nWfsPermalinkService.prototype.clear = function() {\n  this.clearResult_();\n};\n\n\n/**\n * Build a WFS GetFeature request for the given query parameter data, send the\n * request and add the received features to {@link ngeox.QueryResult}.\n *\n * @param {ngeox.WfsPermalinkData} queryData Query data for the WFS request.\n * @param {ol.Map} map The ol3 map object to get the current projection from.\n * @export\n */\nWfsPermalinkService.prototype.issue = function(queryData, map) {\n  googAsserts.assert(this.url_,\n    'url is not set. to use the wfs permalink service, ' +\n      'set the value `ngeoWfsPermalinkOptions`');\n  this.clearResult_();\n\n  const typeName = queryData.wfsType;\n  if (!this.wfsTypes_.hasOwnProperty(typeName)) {\n    return;\n  }\n  const wfsType = this.wfsTypes_[typeName];\n\n  const filters = this.createFilters_(queryData.filterGroups);\n  if (filters === null) {\n    return;\n  }\n\n  this.issueRequest_(wfsType, filters, map, queryData.showFeatures);\n};\n\n\n/**\n * @param {ngeox.WfsType} wfsType Type.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {ol.Map} map The ol3 map object to get the current projection from.\n * @param {boolean} showFeatures Show features or only zoom to feature extent?\n * @private\n */\nWfsPermalinkService.prototype.issueRequest_ = function(wfsType, filter, map, showFeatures) {\n  const wfsFormat = new olFormatWFS();\n  const featureRequestXml = wfsFormat.writeGetFeature({\n    srsName: map.getView().getProjection().getCode(),\n    featureNS: (wfsType.featureNS !== undefined) ?\n      wfsType.featureNS : this.defaultFeatureNS_,\n    featurePrefix: (wfsType.featurePrefix !== undefined) ?\n      wfsType.featurePrefix : this.defaultFeaturePrefix_,\n    featureTypes: [wfsType.featureType],\n    outputFormat: 'GML3',\n    filter: filter,\n    maxFeatures: this.maxFeatures_\n  });\n\n  const featureRequest = new XMLSerializer().serializeToString(featureRequestXml);\n  const config = {\n    headers: {'Content-Type': 'text/xml; charset=UTF-8'}\n  };\n  this.$http_.post(this.url_, featureRequest, config).then((response) => {\n    const features = wfsFormat.readFeatures(response.data);\n    if (features.length == 0) {\n      return;\n    }\n\n    // zoom to features\n    const size = map.getSize();\n    if (size !== undefined) {\n      const maxZoom = this.pointRecenterZoom_;\n      const padding = [10, 10, 10, 10];\n      map.getView().fit(this.getExtent_(features), {size, maxZoom, padding});\n    }\n\n    // then show if requested\n    if (showFeatures) {\n      const resultSource = /** @type {ngeox.QueryResultSource} */ ({\n        'features': features,\n        'id': wfsType.featureType,\n        'identifierAttributeField': wfsType.label,\n        'label': wfsType.featureType,\n        'pending': false\n      });\n\n      this.result_.sources.push(resultSource);\n      this.result_.total = features.length;\n    }\n  });\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @return {ol.Extent} The extent of all features.\n * @private\n */\nWfsPermalinkService.prototype.getExtent_ = function(features) {\n  return features.reduce((extent, feature) => olExtent.extend(extent, feature.getGeometry().getExtent()), olExtent.createEmpty());\n};\n\n/**\n * Create OGC filters for the filter groups extracted from the query params.\n *\n * @param {Array.<ngeox.WfsPermalinkFilterGroup>} filterGroups Filter groups.\n * @return {ol.format.filter.Filter} OGC filters.\n * @private\n */\nWfsPermalinkService.prototype.createFilters_ = function(filterGroups) {\n  if (filterGroups.length == 0) {\n    return null;\n  }\n  const f = olFormatFilter;\n  const createFiltersForGroup = function(filterGroup) {\n    const filters = filterGroup.filters.map((filterDef) => {\n      const condition = filterDef.condition;\n      if (Array.isArray(condition)) {\n        return WfsPermalinkService.or_(condition.map(cond => f.equalTo(filterDef.property, cond)));\n      } else {\n        return f.equalTo(filterDef.property, filterDef.condition);\n      }\n    });\n    return WfsPermalinkService.and_(filters);\n  };\n  return WfsPermalinkService.or_(filterGroups.map(createFiltersForGroup));\n};\n\n\n/**\n * Join a list of filters with `and(...)`.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.and_ = function(filters) {\n  return WfsPermalinkService.joinFilters_(filters, olFormatFilter.and);\n};\n\n\n/**\n * Join a list of filters with `or(...)`.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.or_ = function(filters) {\n  return WfsPermalinkService.joinFilters_(filters, olFormatFilter.or);\n};\n\n\n/**\n * Join a list of filters with a given join function.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @param {function(!ol.format.filter.Filter, !ol.format.filter.Filter):\n *    ol.format.filter.Filter} joinFn The function to join two filters.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.joinFilters_ = function(filters, joinFn) {\n  return filters.reduce((combinedFilters, currentFilter) => {\n    if (combinedFilters === null) {\n      return currentFilter;\n    } else {\n      googAsserts.assert(currentFilter !== null);\n      return joinFn(combinedFilters, currentFilter);\n    }\n  }, null);\n};\n\n\n/**\n * Clear every features for all result sources and reset the total counter\n * as well.\n * @private\n */\nWfsPermalinkService.prototype.clearResult_ = function() {\n  this.result_.total = 0;\n  this.result_.sources.forEach((source) => {\n    source.features.length = 0;\n  });\n};\n\n\n/**\n * @type {!angular.Module}\n */\nWfsPermalinkService.module = angular.module('ngeoWfsPermalink', [\n  // FIXME add dependencies\n]);\n\n\n/**\n * Value that is supposed to be set in applications to enable the WFS\n * permalink functionality.\n */\nWfsPermalinkService.module.value('ngeoWfsPermalinkOptions',\n  /** @type {ngeox.WfsPermalinkOptions} */ ({\n    url: '',\n    wfsTypes: [],\n    defaultFeatureNS: '',\n    defaultFeaturePrefix: ''\n  })\n);\n\n\nWfsPermalinkService.module.service('ngeoWfsPermalink', WfsPermalinkService);\n\n\nexport default WfsPermalinkService;\n","/**\n * @module gmf.controllers.AbstractAppController\n */\nimport 'jquery';\nimport 'angular';\nimport 'angular-gettext';\nimport 'angular-dynamic-locale';\nimport gmfAuthenticationModule from 'gmf/authentication/module.js';\n\nimport gmfBackgroundlayerselectorComponent from 'gmf/backgroundlayerselector/component.js';\nimport gmfDatasourceModule from 'gmf/datasource/module.js';\nimport gmfDisclaimerComponent from 'gmf/disclaimer/component.js';\nimport gmfFiltersModule from 'gmf/filters/module.js';\nimport gmfLayertreeModule from 'gmf/layertree/module.js';\nimport gmfMapModule from 'gmf/map/module.js';\nimport gmfQueryExtraModule from 'gmf/query/extraModule.js';\nimport gmfSearchModule from 'gmf/search/module.js';\nimport gmfThemeModule from 'gmf/theme/module.js';\nimport ngeoMessageDisplaywindowComponent from 'ngeo/message/displaywindowComponent.js';\nimport ngeoMiscExtraModule from 'ngeo/misc/extraModule.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport ngeoQueryMapQueryComponent from 'ngeo/query/mapQueryComponent.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerWfsPermalink from 'ngeo/statemanager/WfsPermalink.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * Application abstract controller.\n *\n * This file includes `goog.require` for base components/directives used\n * by the HTML page and the controller to provide the configuration.\n *\n * @param {gmfx.Config} config A part of the application config.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @ngdoc controller\n * @ngInject\n * @export\n */\nconst exports = function(config, $scope, $injector) {\n\n  /**\n   * Location service\n   * @type {ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = $injector.get('ngeoLocation');\n  if (this.ngeoLocation.hasParam('debug')) {\n    // make the injector globally available\n    window.injector = $injector;\n  }\n\n  googAsserts.assertInstanceof(this.map, olMap);\n\n  /**\n   * Ngeo FeatureHelper service\n   * @type {ngeo.misc.FeatureHelper}\n   */\n  const ngeoFeatureHelper = $injector.get('ngeoFeatureHelper');\n  ngeoFeatureHelper.setProjection(googAsserts.assert(this.map.getView().getProjection()));\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = $injector.get('gmfThemeManager');\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.get('gmfTreeManager');\n\n  /**\n   * Themes service\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.get('gmfThemes');\n\n  /**\n   * Permalink service\n   * @type {gmf.permalink.Permalink}\n   * @private\n   */\n  this.permalink_ = $injector.get('gmfPermalink');\n\n  /**\n   * Authentication service\n   * @type {gmf.authentication.Service}\n   */\n  const gmfAuthentication = $injector.get('gmfAuthenticationService');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.hasEditableLayers = false;\n\n  /**\n   * @private\n   */\n  this.updateHasEditableLayers_ = function() {\n    this.gmfThemes_.hasEditableLayers().then((hasEditableLayers) => {\n      this.hasEditableLayers = hasEditableLayers;\n    });\n  };\n\n  /**\n   * @param {gmfx.AuthenticationEvent} evt Event.\n   */\n  const userChange = (evt) => {\n    const user = evt.detail.user;\n    const roleId = (user.username !== null) ? user.role_id : undefined;\n\n    // Open filter panel if 'open_panel' is set in functionalities and\n    // has 'layer_filter' as first value\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      const functionalities = this.gmfUser.functionalities;\n      if (functionalities &&\n          functionalities.open_panel &&\n          functionalities.open_panel[0] === 'layer_filter') {\n        this.filterSelectorActive = true;\n      }\n    });\n\n    // Reload theme and background layer when login status changes.\n    const previousThemeName = this.gmfThemeManager.getThemeName();\n    this.gmfThemeManager.setThemeName('', true);\n    if (evt.type !== 'ready') {\n      this.updateCurrentTheme_(previousThemeName);\n    }\n    // Reload themes when login status changes.\n    this.gmfThemes_.loadThemes(roleId);\n    this.updateHasEditableLayers_();\n  };\n\n  olEvents.listen(gmfAuthentication, 'ready', userChange);\n  olEvents.listen(gmfAuthentication, 'login', userChange);\n  olEvents.listen(gmfAuthentication, 'logout', userChange);\n\n  /**\n   * @type {Array.<gmfx.SearchComponentDatasource>}\n   * @export\n   */\n  this.searchDatasources = [{\n    labelKey: 'label',\n    groupValues: /** @type {Array.<string>} **/ ($injector.get('gmfSearchGroups')),\n    groupActions: /** @type {Array.<string>} **/ ($injector.get('gmfSearchActions')),\n    projection: `EPSG:${config.srid || 21781}`,\n    url: /** @type {string} **/ ($injector.get('fulltextsearchUrl'))\n  }];\n\n  /**\n   * @type {!Object.<string, string>}\n   * @export\n   */\n  this.dimensions = {};\n\n  // watch any change on dimensions object to refresh the url\n  this.permalink_.setDimensions(this.dimensions);\n\n  // Injecting the gmfDataSourcesManager service creates the data sources\n  const gmfDataSourcesManager = $injector.get('gmfDataSourcesManager');\n  // Init the datasources with our map.\n  gmfDataSourcesManager.setDatasourceMap(this.map);\n  // Give the dimensions to the gmfDataSourcesManager\n  gmfDataSourcesManager.setDimensions(this.dimensions);\n\n  if ($injector.has('gmfDefaultDimensions')) {\n    // Set defaults\n    const defaultDimensions = $injector.get('gmfDefaultDimensions');\n    for (const dim in defaultDimensions) {\n      if (this.dimensions[dim] === undefined) {\n        this.dimensions[dim] = defaultDimensions[dim];\n      }\n    }\n  }\n\n  /**\n   * @type {ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = $injector.get('ngeoBackgroundLayerMgr');\n\n  // watch any change on dimensions object to refresh the background layer\n  $scope.$watchCollection(() => this.dimensions, () => {\n    this.backgroundLayerMgr_.updateDimensions(this.map, this.dimensions);\n  });\n\n  this.backgroundLayerMgr_.on('change', () => {\n    this.backgroundLayerMgr_.updateDimensions(this.map, this.dimensions);\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.leftNavVisible = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.rightNavVisible = false;\n\n  const queryFill = new olStyleFill({color: [255, 170, 0, 0.6]});\n  const queryStroke = new olStyleStroke({color: [255, 170, 0, 1], width: 2});\n\n  /**\n   * FeatureStyle used by the gmf.query.windowComponent\n   * @type {ol.style.Style}\n   * @export\n   */\n  this.queryFeatureStyle = new olStyleStyle({\n    fill: queryFill,\n    image: new olStyleCircle({\n      fill: queryFill,\n      radius: 5,\n      stroke: queryStroke\n    }),\n    stroke: queryStroke\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.filterSelectorActive = false;\n\n  /**\n   * The active state of the ngeo query directive.\n   * @type {boolean}\n   * @export\n   */\n  this.queryActive = true;\n\n  /**\n   * Set the clearing of the ngeoQuery after the deactivation of the query\n   * @type {boolean}\n   * @export\n   */\n  this.queryAutoClear = true;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.printPanelActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.printActive = false;\n\n  /**\n   * @type {ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = $injector.get('ngeoMapQuerent');\n\n  // Don't deactivate ngeoQuery on print activation\n  $scope.$watch(() => this.printPanelActive, (newVal) => {\n    // Clear queries if another panel is open but not if user go back to the\n    // map form the print.\n    if (!newVal && !this.queryActive) {\n      this.ngeoMapQuerent_.clear();\n    }\n    this.queryAutoClear = !newVal;\n    this.printActive = newVal;\n  });\n\n  /**\n   * The active state of the directive responsible of point measurements.\n   * @type {boolean}\n   * @export\n   */\n  this.measurePointActive = false;\n\n  /**\n   * The active state of the directive responsible of length measurements.\n   * @type {boolean}\n   * @export\n   */\n  this.measureLengthActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawFeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawProfilePanelActive = false;\n\n  /**\n   * @type {gmfx.User}\n   * @export\n   */\n  this.gmfUser = $injector.get('gmfUser');\n\n  /**\n   * @type {ngeox.miscGetBrowserLanguage}\n   */\n  this.getBrowserLanguage = $injector.get('ngeoGetBrowserLanguage');\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   */\n  this.stateManager = $injector.get('ngeoStateManager');\n\n  /**\n   * @type {tmhDynamicLocale}\n   */\n  this.tmhDynamicLocale = $injector.get('tmhDynamicLocale');\n\n  /**\n   * @type {angular.Scope}\n   */\n  this.$scope = $scope;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.lang;\n\n  /**\n   * Default language\n   * @type {string}\n   */\n  this.defaultLang = $injector.get('defaultLang');\n\n  /**\n   * Languages URL\n   * @type {!Object.<string, string>}\n   */\n  this.langUrls = $injector.get('langUrls');\n\n  /**\n   * The gettext catalog\n   * @type {angularGettext.Catalog}\n   */\n  this.gettextCatalog = $injector.get('gettextCatalog');\n\n  this.initLanguage();\n\n  const mapTools = 'mapTools';\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.mapToolsGroup = mapTools;\n\n  /**\n   * The ngeo feature overlay manager service\n   * @type {ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.get('ngeoFeatureOverlayMgr');\n  ngeoFeatureOverlayMgr.init(this.map);\n\n  /**\n   * The ngeo ToolActivate manager service.\n   * @type {ngeo.misc.ToolActivateMgr}\n   */\n  const ngeoToolActivateMgr = $injector.get('ngeoToolActivateMgr');\n\n  const queryToolActivate = new ngeoMiscToolActivate(this, 'queryActive');\n  ngeoToolActivateMgr.registerTool(mapTools, queryToolActivate, true);\n\n  const measurePointActivate = new ngeoMiscToolActivate(this, 'measurePointActive');\n  ngeoToolActivateMgr.registerTool(mapTools, measurePointActivate, false);\n\n  const measureLengthActivate = new ngeoMiscToolActivate(this, 'measureLengthActive');\n  ngeoToolActivateMgr.registerTool(mapTools, measureLengthActivate, false);\n\n  const drawFeatureActivate = new ngeoMiscToolActivate(this, 'drawFeatureActive');\n  ngeoToolActivateMgr.registerTool(mapTools, drawFeatureActivate, false);\n\n  const drawProfilePanelActivate = new ngeoMiscToolActivate(this, 'drawProfilePanelActive');\n  ngeoToolActivateMgr.registerTool(mapTools, drawProfilePanelActivate, false);\n\n  const printPanelActivate = new ngeoMiscToolActivate(this, 'printPanelActive');\n  ngeoToolActivateMgr.registerTool(mapTools, printPanelActivate, false);\n\n  $scope.$root.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n    this.gmfThemes_.getThemeObject(name).then((theme) => {\n      this.setDefaultBackground_(theme);\n    });\n  });\n\n  /**\n   * @param {boolean} skipPermalink If True, don't use permalink\n   * background layer.\n   * @private\n   */\n  this.updateCurrentBackgroundLayer_ = function(skipPermalink) {\n    this.gmfThemes_.getBgLayers().then((layers) => {\n      let background;\n      if (!skipPermalink) {\n        // get the background from the permalink\n        background = this.permalink_.getBackgroundLayer(layers);\n      }\n      if (!background) {\n        // get the background from the user settings\n        const functionalities = this.gmfUser.functionalities;\n        if (functionalities) {\n          const defaultBasemapArray = functionalities.default_basemap;\n          if (defaultBasemapArray.length > 0) {\n            const defaultBasemapLabel = defaultBasemapArray[0];\n            background = olArray.find(layers, layer => layer.get('label') === defaultBasemapLabel);\n          }\n        }\n      }\n      if (!background && layers[1]) {\n        // fallback to the layers list, use the second one because the first\n        // is the blank layer\n        background = layers[1];\n      }\n\n      if (background) {\n        this.backgroundLayerMgr_.set(this.map, background);\n      }\n    });\n  }.bind(this);\n\n  this.updateCurrentBackgroundLayer_(false);\n\n  // Static \"not used\" functions should be in the window because otherwise\n  // closure remove them. \"export\" tag doesn't work on static function below,\n  // we \"export\" them as externs in the gmfx options file.\n  const gmfx = window.gmfx || {};\n  /**\n   * @export\n   */\n  window.gmfx = gmfx;\n\n  /**\n   * Static function to create a popup with an iframe.\n   * @param {string} url an url.\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width.\n   * @param {number=} opt_height CSS height.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  gmfx.openIframePopup = (\n    url, title, opt_width, opt_height, opt_apply\n  ) => {\n    this.displaywindowUrl = url;\n    gmfx.openPopup_(title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * Static function to create a popup with html content.\n   * @param {string} content (text or html).\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  gmfx.openTextPopup = (\n    content, title, opt_width, opt_height, opt_apply\n  ) => {\n    this.displaywindowContent = content;\n    gmfx.openPopup_(title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   */\n  gmfx.openPopup_ = (title, opt_width, opt_height, opt_apply) => {\n\n    this.displaywindowTitle = title;\n    this.displaywindowOpen = true;\n\n    if (opt_width) {\n      this.displaywindowWidth = `${opt_width}px`;\n    }\n    if (opt_height) {\n      this.displaywindowHeight = `${opt_height}px`;\n    }\n    if (opt_apply !== false) {\n      this.$scope.$apply();\n    }\n  };\n\n  /**\n   * Whether to update the size of the map on browser window resize.\n   * @type {boolean}\n   * @export\n   */\n  this.manageResize = false;\n\n  /**\n   * The duration (milliseconds) of the animation that may occur on the div\n   * containing the map. Used to smoothly resize the map while the animation\n   * is in progress.\n   * @type {number|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n  const cgxp = window.cgxp || {};\n  /**\n   * @export\n   */\n  window.cgxp = cgxp;\n  /**\n   * @export\n   */\n  cgxp.tools = window.cgxp.tools || {};\n  /**\n   * Static function to create a popup with an iframe.\n   * @param {string} url an url.\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  cgxp.tools.openInfoWindow = function(url, title, opt_width, opt_height, opt_apply) {\n    gmfx.openIframePopup(url, title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowContent = null;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.displaywindowDraggableContainment = '.gmf-map';\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowHeight = null;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.displaywindowOpen = false;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowTitle = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowUrl = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowWidth = null;\n};\n\n\n/**\n * @return {boolean} Return true if a user exists and its 'is_password_changed' value is explicitly set\n *     to false.\n * @export\n */\nexports.prototype.userMustChangeItsPassword = function() {\n  return this.gmfUser.is_password_changed === false;\n};\n\n\n/**\n * @param {Array.<ol.layer.Base>} layers Layers list.\n * @param {Array.<string>} labels default_basemap list.\n * @return {ol.layer.Base} layer or null\n */\nexports.getLayerByLabels = function(layers, labels) {\n  if (labels && labels.length > 0) {\n    return olArray.find(layers, layer => layer.get('label') === labels[0]);\n  }\n  return null;\n};\n\n\n/**\n * @param {string} lang Language code.\n * @export\n */\nexports.prototype.switchLanguage = function(lang) {\n  googAsserts.assert(lang in this.langUrls);\n  this.gettextCatalog.setCurrentLanguage(lang);\n  this.gettextCatalog.loadRemote(this.langUrls[lang]);\n  this.tmhDynamicLocale.set(lang);\n  this.lang = lang;\n};\n\n\n/**\n */\nexports.prototype.initLanguage = function() {\n  this.$scope.$watch(() => this.lang, (newValue) => {\n    this.stateManager.updateState({\n      'lang': newValue\n    });\n  });\n\n  const browserLanguage = /** @type {string|undefined} */\n      (this.getBrowserLanguage(Object.keys(this.langUrls)));\n  const urlLanguage = /** @type {string|undefined} */\n      (this.stateManager.getInitialValue('lang'));\n\n  if (urlLanguage !== undefined && urlLanguage in this.langUrls) {\n    this.switchLanguage(urlLanguage);\n    return;\n  } else if (browserLanguage !== undefined && browserLanguage in this.langUrls) {\n    this.switchLanguage(browserLanguage);\n    return;\n  } else {\n    // if there is no information about language preference,\n    // fallback to default language\n\n    this.switchLanguage(this.defaultLang);\n    return;\n  }\n};\n\n\n/**\n * @param {gmfThemes.GmfTheme} theme Theme.\n * @private\n */\nexports.prototype.setDefaultBackground_ = function(theme) {\n  this.gmfThemes_.getBgLayers().then((layers) => {\n    let layer;\n\n    // get the background from the permalink\n    layer = this.permalink_.getBackgroundLayer(layers);\n\n    if (!layer && this.gmfUser.functionalities) {\n      // get the background from the user settings\n      layer = exports.getLayerByLabels(layers, this.gmfUser.functionalities.default_basemap);\n    }\n\n    if (!layer && theme) {\n      // get the background from the theme\n      layer = exports.getLayerByLabels(layers, theme.functionalities.default_basemap);\n    }\n\n    if (!layer) {\n      // fallback to the layers list, use the second one because the first is the blank layer.\n      layer = layers[layers.length > 1 ? 1 : 0];\n    }\n\n    googAsserts.assert(layer);\n    this.backgroundLayerMgr_.set(this.map, layer);\n  });\n};\n\n/**\n * @param {string} fallbackThemeName fallback theme name.\n * @private\n */\nexports.prototype.updateCurrentTheme_ = function(fallbackThemeName) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.permalink_.defaultThemeNameFromFunctionalities();\n    if (themeName) {\n      const theme = gmfThemeThemes.findThemeByName(themes, /** @type {string} */ (themeName));\n      if (theme) {\n        this.gmfThemeManager.addTheme(theme, true);\n      }\n    } else {\n      this.gmfThemeManager.setThemeName(fallbackThemeName);\n    }\n  });\n};\n\n/**\n * @protected\n * @return {Element} Span element with font-awesome inside of it\n */\nexports.prototype.getLocationIcon = function() {\n  const arrow = document.createElement('span');\n  arrow.className = 'fa fa-location-arrow';\n  arrow.style.transform = 'rotate(-0.82rad)';\n  const arrowWrapper = document.createElement('span');\n  arrowWrapper.appendChild(arrow);\n  return arrowWrapper;\n};\n\n\nexports.module = angular.module('GmfAbstractAppControllerModule', [\n  'gettext',\n  'tmh.dynamicLocale',\n  gmfAuthenticationModule.name,\n  gmfBackgroundlayerselectorComponent.name,\n  gmfDatasourceModule.name,\n  gmfDisclaimerComponent.name,\n  gmfFiltersModule.name,\n  gmfLayertreeModule.name,\n  gmfMapModule.name,\n  gmfQueryExtraModule.name,\n  gmfSearchModule.name,\n  gmfThemeModule.name,\n  ngeoMessageDisplaywindowComponent.name,\n  ngeoMiscExtraModule.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoQueryMapQuerent.module.name,\n  ngeoQueryMapQueryComponent.name,\n  ngeoStatemanagerModule.name,\n  ngeoStatemanagerWfsPermalink.module.name,\n]);\n\n\nexports.module.controller('AbstractController', exports);\n\n\nexports.module.value('ngeoExportFeatureFormats', [\n  ngeoMiscFeatureHelper.FormatType.KML,\n  ngeoMiscFeatureHelper.FormatType.GPX\n]);\n\nexports.module.config(['tmhDynamicLocaleProvider', 'angularLocaleScript',\n  /**\n   * @param {tmhDynamicLocaleProvider} tmhDynamicLocaleProvider angular-dynamic-locale provider.\n   * @param {string} angularLocaleScript the script.\n   */\n  function(tmhDynamicLocaleProvider, angularLocaleScript) {\n    // configure the script URL\n    tmhDynamicLocaleProvider.localeLocationPattern(angularLocaleScript);\n  }\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.ModifyCircle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport * as olCoordinate from 'ol/coordinate.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olExtent from 'ol/extent.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport {fromCircle} from 'ol/geom/Polygon.js';\nimport olInteractionPointer, {handleEvent as pointerHandleEvent} from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStructsRBush from 'ol/structs/RBush.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleDragEvent: exports.handleDragEvent_,\n    handleEvent: exports.handleEvent,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * Editing vertex.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {ol.structs.RBush.<ol.ModifySegmentDataType>}\n   * @private\n   */\n  this.rBush_ = new olStructsRBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  this.features_.forEach(feature => this.addFeature_(feature));\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  if (feature.getGeometry().getType() === 'Polygon' &&\n      !!feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n    const geometry = /** @type {ol.geom.Polygon}*/ (feature.getGeometry());\n    this.writeCircleGeometry_(feature, geometry);\n\n    const map = this.getMap();\n    if (map) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<ol.ModifySegmentDataType>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n       * @param {ol.ModifySegmentDataType} node RTree node.\n       */\n    (node) => {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nexports.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = rings.length; j < jj; ++j) {\n    coordinates = rings[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(olExtent.boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates Coordinates.\n * @return {ol.Feature} Vertex feature.\n * @private\n */\nexports.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new olFeature(new olGeomPoint(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} a The first segment data.\n * @param {ol.ModifySegmentDataType} b The second segment data.\n * @return {number} The difference in indexes.\n * @private\n */\nexports.compareIndexes_ = function(a, b) {\n  return a.index - b.index;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDownEvent_ = function(evt) {\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  this.dragSegments_ = [];\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = olExtent.boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(exports.compareIndexes_);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = olBase.getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += `-${depth.join('-')}`; // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (olCoordinate.equals(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (olCoordinate.equals(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      }\n    }\n  }\n  return !!this.vertexFeature_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDragEvent_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const vertex = evt.coordinate;\n  const geometry = /** @type {ol.geom.Polygon}*/ (this.dragSegments_[0][0].geometry);\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const line = new olGeomLineString([center, vertex]);\n\n\n  /**\n   * @type {ol.geom.Circle}\n   */\n  const circle = new olGeomCircle(center, line.getLength());\n  const coordinates = fromCircle(circle, 64).getCoordinates();\n  this.setGeometryCoordinates_(geometry, coordinates);\n\n\n  const azimut = ngeoInteractionMeasureAzimut.getAzimut(line);\n  this.features_.getArray()[0].set(ngeoFormatFeatureProperties.AZIMUT, azimut);\n\n  this.createOrUpdateVertexFeature_(vertex);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleUpEvent_ = function(evt) {\n  this.rBush_.clear();\n  this.writeCircleGeometry_(this.dragSegments_[0][0].feature,\n    this.dragSegments_[0][0].geometry);\n\n  if (this.modified_) {\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifyend', {features: this.features_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.ModifyCircle}\n * @api\n */\nexports.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof olMapBrowserPointerEvent)) {\n    return true;\n  }\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == 'pointermove' && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n\n  return pointerHandleEvent.call(this, mapBrowserEvent) &&\n      !handled;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.PluggableMap} map Map.\n * @private\n */\nexports.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return olCoordinate.squaredDistanceToSegment(pixelCoordinate, a.segment) -\n        olCoordinate.squaredDistanceToSegment(pixelCoordinate, b.segment);\n  };\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = olExtent.boundingExtent([lowerLeft, upperRight]);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = (olCoordinate.closestOnSegment(pixelCoordinate,\n      closestSegment));\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    if (Math.sqrt(olCoordinate.squaredDistance(pixel, vertexPixel)) <=\n        this.pixelTolerance_) {\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = olCoordinate.squaredDistance(vertexPixel, pixel1);\n      const squaredDist2 = olCoordinate.squaredDistance(vertexPixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      this.snappedToVertex_ = dist <= this.pixelTolerance_;\n      if (this.snappedToVertex_) {\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        this.createOrUpdateVertexFeature_(vertex);\n        const vertexSegments = {};\n        vertexSegments[olBase.getUid(closestSegment)] = true;\n        let segment;\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          segment = nodes[i].segment;\n          if ((olCoordinate.equals(closestSegment[0], segment[0]) &&\n              olCoordinate.equals(closestSegment[1], segment[1]) ||\n              (olCoordinate.equals(closestSegment[0], segment[1]) &&\n              olCoordinate.equals(closestSegment[1], segment[0])))) {\n            vertexSegments[olBase.getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n        return;\n      }\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nexports.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.ModifyRectangle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorPoints_ = new olLayerVector({\n    source: new olSourceVector({\n      wrapX: !!options.wrapX\n    }),\n    visible: this.getActive(),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {Object.<number, ngeo.interaction.ModifyRectangle.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {?ngeo.interaction.ModifyRectangle.ModifyParams}\n   * @private\n   */\n  this.params_ = null;\n\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n  this.features_.forEach((feature) => {\n    this.addFeature_(feature);\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionPointer.prototype.setActive.call(this, active);\n  if (this.vectorPoints_) {\n    this.vectorPoints_.setVisible(active);\n  }\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const featureGeom = feature.getGeometry();\n  if (featureGeom instanceof olGeomPolygon) {\n\n    // If the feature's corners are already set, no need to set them again\n    const uid = olBase.getUid(feature);\n    let item = this.cache_[uid];\n    if (item) {\n      return;\n    }\n\n    const pointSource = this.vectorPoints_.getSource();\n\n    // from each corners, create a point feature and add it to the point layer.\n    // each point is then associated with 2 siblings in order to update the\n    // siblings geometry at the same time when a point gets dragged around.\n    // mark each one as 'corner'\n    const corners = featureGeom.getCoordinates()[0];\n    while (corners.length > 4) {\n      if (corners[0][0] < corners[1][0] && corners[0][1] <= corners[1][1]) {\n        corners.pop();\n      } else {\n        corners.shift();\n      }\n    }\n    const pointFeatures = [];\n    let cornerPoint;\n    let cornerFeature;\n    corners.forEach((corner) => {\n      cornerPoint = new olGeomPoint(corner);\n      cornerFeature = new olFeature({\n        'corner': true,\n        'geometry': cornerPoint,\n        'siblingX': null,\n        'siblingY': null,\n        'boxFeature': feature\n      });\n\n      pointFeatures.push(cornerFeature);\n    }, this);\n    item = /** @type {ngeo.interaction.ModifyRectangle.CacheItem} */ ({\n      corners: pointFeatures\n    });\n    this.cache_[uid] = item;\n\n    let previousFeature;\n    let nextFeature;\n    pointFeatures.forEach((cornerFeature, index) => {\n      previousFeature = pointFeatures[index - 1];\n      if (!previousFeature) {\n        previousFeature = pointFeatures[pointFeatures.length - 1];\n      }\n\n      nextFeature = pointFeatures[index + 1];\n      if (!nextFeature) {\n        nextFeature = pointFeatures[0];\n      }\n\n      if (index % 2 === 0) {\n        cornerFeature.set('siblingX', nextFeature);\n        cornerFeature.set('siblingY', previousFeature);\n      } else {\n        cornerFeature.set('siblingX', previousFeature);\n        cornerFeature.set('siblingY', nextFeature);\n      }\n\n    }, this);\n    pointSource.addFeatures(pointFeatures);\n  }\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n    this.params_ = this.initializeParams_();\n  }\n};\n\n\n/**\n * @return {ngeo.interaction.ModifyRectangle.ModifyParams} The initialised params\n * @private\n */\nexports.prototype.initializeParams_ = function() {\n  const feature = this.feature_;\n\n  // 1. Find the origin (opposite) point for the modify operation\n  // siblingY relative to the origin is siblingX relative to the opposite\n  const siblingY = feature.get('siblingX');\n  googAsserts.assertInstanceof(siblingY, olFeature);\n\n  const origin = siblingY.get('siblingY');\n  googAsserts.assertInstanceof(origin, olFeature);\n  const originPoint = origin.getGeometry();\n  googAsserts.assertInstanceof(originPoint, olGeomPoint);\n  const originCoordinate = originPoint.getCoordinates();\n  const originPixel = this.getMap().getPixelFromCoordinate(originCoordinate);\n\n  // 2. Find the origin's X sibling and the normal vector from the origin to it\n  const siblingX = origin.get('siblingX');\n  googAsserts.assertInstanceof(siblingX, olFeature);\n  const siblingXPoint = siblingX.getGeometry();\n  googAsserts.assertInstanceof(siblingXPoint, olGeomPoint);\n  const siblingXCoordinate = siblingXPoint.getCoordinates();\n  const siblingXPixel = this.getMap().getPixelFromCoordinate(siblingXCoordinate);\n  let vectorX = [\n    siblingXPixel[0] - originPixel[0],\n    siblingXPixel[1] - originPixel[1]\n  ];\n  const vectorXMagnitude = Math.sqrt(vectorX[0] * vectorX[0] + vectorX[1] * vectorX[1]);\n  vectorX[0] /= vectorXMagnitude;\n  vectorX[1] /= vectorXMagnitude;\n\n  // 3. Find the origin's Y sibling and the normal vector from the origin to it\n  const siblingYPoint = siblingY.getGeometry();\n  googAsserts.assertInstanceof(siblingYPoint, olGeomPoint);\n  const siblingYCoordinate = siblingYPoint.getCoordinates();\n  const siblingYPixel = this.getMap().getPixelFromCoordinate(siblingYCoordinate);\n  let vectorY = [\n    siblingYPixel[0] - originPixel[0],\n    siblingYPixel[1] - originPixel[1]\n  ];\n  const vectorYMagnitude = Math.sqrt(vectorY[0] * vectorY[0] + vectorY[1] * vectorY[1]);\n  vectorY[0] /= vectorYMagnitude;\n  vectorY[1] /= vectorYMagnitude;\n\n  // 4. Validate the vectors.\n  if (isNaN(vectorX[0]) && isNaN(vectorY[0])) {\n    // Both vector are invalid. Rotation information has already been lost\n    vectorX = [0, 1];\n    vectorY = [1, 0];\n  } else if (isNaN(vectorX[0])) {\n    vectorX = [vectorY[1], -vectorY[0]];\n  } else if (isNaN(vectorY[0])) {\n    vectorY = [vectorX[1], -vectorX[0]];\n  }\n\n  return {\n    originCoordinate,\n    originPixel,\n    siblingXPoint,\n    siblingYPoint,\n    vectorX,\n    vectorY\n  };\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const item = this.cache_[uid];\n  const corners = item.corners;\n  for (let i = 0; i < corners.length; i++) {\n    this.vectorPoints_.getSource().removeFeature(corners[i]);\n  }\n  this.feature_ = null;\n  corners.length = 0;\n  delete this.cache_[uid];\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.vectorPoints_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  const feature = map.forEachFeatureAtPixel(evt.pixel, feature =>\n    (feature.get('siblingX') && feature.get('siblingY') ? feature : undefined)\n  );\n\n  if (feature) {\n    this.feature_ = feature;\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const feature = this.feature_;\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (feature.getGeometry());\n\n  if (geometry instanceof olGeomPoint) {\n    geometry.setCoordinates(evt.coordinate);\n\n    const destinationPixel = evt.pixel;\n\n    const originPixel = this.params_.originPixel;\n    const siblingXPoint = this.params_.siblingXPoint;\n    const siblingYPoint = this.params_.siblingYPoint;\n    const vectorX = this.params_.vectorX;\n    const vectorY = this.params_.vectorY;\n    const originCoordinate = this.params_.originCoordinate;\n\n    // Calculate new positions of siblings\n    const b2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorX);\n    const b2Coordinate = this.getMap().getCoordinateFromPixel(b2Pixel);\n    siblingXPoint.setCoordinates(b2Coordinate);\n\n    const c2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorY);\n    const c2Coordinate = this.getMap().getCoordinateFromPixel(c2Pixel);\n    siblingYPoint.setCoordinates(c2Coordinate);\n\n\n    // Resize the box\n    const boxFeature = feature.get('boxFeature');\n    const geom = boxFeature.getGeometry();\n    googAsserts.assertInstanceof(geom, olGeomPolygon);\n    geom.setCoordinates([[evt.coordinate, b2Coordinate, originCoordinate, c2Coordinate, evt.coordinate]]);\n  }\n};\n\n\n/**\n * Calculate the new position of a point as projected on a vector from origin to\n * destination.\n * @param {ol.Pixel} origin Pixel of origin (opposite of the drag handle)\n * @param {ol.Pixel} destination Pixel of destination (the handle we dragged)\n * @param {ol.Pixel} vector The normalized vector to the point\n * @return {ol.Pixel} The new pixel of the point\n * @private\n */\nexports.prototype.calculateNewPixel_ = function(\n  origin, destination, vector) {\n\n  const aVector = [destination[0] - origin[0], destination[1] - origin[1]];\n\n  const abScalarProduct = aVector[0] * vector[0] + aVector[1] * vector[1];\n\n  const deltaVector = [\n    (vector[0] * abScalarProduct),\n    (vector[1] * abScalarProduct)\n  ];\n\n  return [deltaVector[0] + origin[0], deltaVector[1] + origin[1]];\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifyend', {features: this.features_});\n    this.dispatchEvent(event);\n    this.params_ = null;\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * @typedef {{\n *     corners: Array.<ol.Feature>\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     originCoordinate: ol.Coordinate,\n *     originPixel: ol.Pixel,\n *     siblingXPoint: ol.geom.Point,\n *     siblingYPoint: ol.geom.Point,\n *     vectorX: Array.<number>,\n *     vectorY: Array.<number>\n * }}\n */\nexports.ModifyParams;\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Modify\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModifyCircle from 'ngeo/interaction/ModifyCircle.js';\nimport ngeoInteractionModifyRectangle from 'ngeo/interaction/ModifyRectangle.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olCollection from 'ol/Collection.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * This interaction combines multiple kind of feature modification interactions\n * in order to be able to modify vector features depending on their geometry\n * type. The different kind of interactions supported are:\n *\n * - `ol.interaction.Modify`\n * - `ngeo.interaction.ModifyCircle`\n * - `ngeo.interaction.ModifyRectangle`\n *\n * This interaction receives a collection of features. Its job is to listen\n * to added/removed features to and from it and add them in the proper\n * collection that is uniquely used for each inner interaction. Those inner\n * interactions follow the `active` property of this interaction, i.e. when\n * this interaction is activated, so do the inner interactions. Since they will\n * never share the same feature, they don't collide with one an other.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Interaction}\n * @param {olx.interaction.ModifyOptions} options Options.\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.otherFeatures_ = new olCollection();\n\n  this.interactions_.push(new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.otherFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.circleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyCircle({\n    features: this.circleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.rectangleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyRectangle({\n    features: this.rectangleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionInteraction.prototype.setActive.call(this, active);\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const interactions = this.interactions_;\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    interactions.forEach((interaction) => {\n      currentMap.removeInteraction(interaction);\n    });\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    interactions.forEach((interaction) => {\n      map.addInteraction(interaction);\n    });\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Toggle interactions.\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const interactions = this.interactions_;\n  const keys = this.listenerKeys_;\n\n  interactions.forEach((interaction) => {\n    interaction.setActive(active && !!map);\n  });\n\n  if (active && map) {\n    this.features_.forEach(feature => this.addFeature_(feature));\n    keys.push(\n      olEvents.listen(this.features_, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.features_.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.push(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.remove(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {ol.Collection.<ol.Feature>} Collection of features for this feature.\n * @private\n */\nexports.prototype.getFeatureCollection_ = function(feature) {\n  let features;\n  const isCircle = feature.get(ngeoFormatFeatureProperties.IS_CIRCLE);\n  const isRectangle = feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE);\n  if (isCircle === true || isCircle === 'true') {\n    features = this.circleFeatures_;\n  } else if (isRectangle === true || isRectangle === 'true') {\n    features = this.rectangleFeatures_;\n  } else {\n    features = this.otherFeatures_;\n  }\n  return features;\n};\n\n\nexport default exports;\n","/**\n * @module gmf.import.wmsCapabilityLayertreeComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\n\nimport * as olBase from 'ol/index.js';\n\nimport 'bootstrap/js/collapse.js';\n\n\nconst exports = angular.module('gmfWmscapabilitylayertreenode', [\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  ngeoMessagePopup.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/import/wmsCapabilityLayertreeComponent', require('./wmsCapabilityLayertreeComponent.html'));\n});\n\n\nexports.value('gmfWmscapabilitylayertreenodeTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfWmscapabilitylayertreenodeTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/import/wmsCapabilityLayertreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfWmscapabilitylayertreenodeTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfWmscapabilitylayertreenodeTemplateUrl($attrs, gmfWmscapabilitylayertreenodeTemplateUrl) {\n  return gmfWmscapabilitylayertreenodeTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!gmf.datasource.ExternalDataSourcesManager}\n   *     gmfExternalDataSourcesManager GMF service responsible of managing\n   *     external data sources.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfWmscapabilitylayertreenodeController\n   */\n  constructor(gmfExternalDataSourcesManager) {\n\n    // Binding properties\n\n    /**\n     * WMS Capabilities definition\n     * @type {!Object}\n     * @export\n     */\n    this.capabilities;\n\n    /**\n     * WMS Capability Layer object.\n     * @type {!Object}\n     * @export\n     */\n    this.layer;\n\n    /**\n     * The original server url that was used to build the WMS GetCapabilities\n     * request.\n     * @type {string}\n     * @export\n     */\n    this.url;\n\n\n    // Injected properties\n\n    /**\n     * @type {!gmf.datasource.ExternalDataSourcesManager}\n     * @private\n     */\n    this.gmfExternalDataSourcesManager_ = gmfExternalDataSourcesManager;\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object\n   * @export\n   */\n  createAndAddDataSource(layer) {\n    this.gmfExternalDataSourcesManager_.createAndAddDataSourceFromWMSCapability(\n      layer,\n      this.capabilities,\n      this.url\n    );\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object\n   * @return {number} Unique id for the Capability Layer.\n   * @export\n   */\n  getUid(layer) {\n    return olBase.getUid(layer);\n  }\n};\n\n\nexports.component('gmfWmscapabilitylayertreenode', {\n  bindings: {\n    'capabilities': '<',\n    'layer': '<',\n    'url': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfWmscapabilitylayertreenodeTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.import.wmtsCapabilityLayertreeComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\n\nimport * as olBase from 'ol/index.js';\n\nconst exports = angular.module('gmfWmtscapabilitylayertree', [\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  ngeoMessagePopup.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/import/wmtsCapabilityLayertreeComponent', require('./wmtsCapabilityLayertreeComponent.html'));\n});\n\n\nexports.value('gmfWmtscapabilitylayertreTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfWmtscapabilitylayertreTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/import/wmtsCapabilityLayertreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfWmtscapabilitylayertreTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfWmtscapabilitylayertreTemplateUrl($attrs, gmfWmtscapabilitylayertreTemplateUrl) {\n  return gmfWmtscapabilitylayertreTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!gmf.datasource.ExternalDataSourcesManager}\n   *     gmfExternalDataSourcesManager GMF service responsible of managing\n   *     external data sources.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfWmtscapabilitylayertreeController\n   */\n  constructor(gmfExternalDataSourcesManager) {\n\n    // Binding properties\n\n    /**\n     * WMS Capabilities definition\n     * @type {!Object}\n     * @export\n     */\n    this.capabilities;\n\n    /**\n     * List of WMTS Capability Layer objects.\n     * @type {!Array.<!Object>}\n     * @export\n     */\n    this.layers;\n\n    /**\n     * The original WMTS GetCapabilities url that was used to fetch the\n     * capability layers.\n     * @type {string}\n     * @export\n     */\n    this.url;\n\n\n    // Injected properties\n\n    /**\n     * @type {!gmf.datasource.ExternalDataSourcesManager}\n     * @private\n     */\n    this.gmfExternalDataSourcesManager_ = gmfExternalDataSourcesManager;\n  }\n\n  /**\n   * @param {!Object} layer WMTS Capability Layer object\n   * @export\n   */\n  createAndAddDataSource(layer) {\n    const manager = this.gmfExternalDataSourcesManager_;\n    manager.createAndAddDataSourceFromWMTSCapability(\n      layer,\n      this.capabilities,\n      this.url\n    );\n  }\n\n  /**\n   * @param {!Object} layer WMTS Capability Layer object\n   * @return {number} Unique id for the Capability Layer.\n   * @export\n   */\n  getUid(layer) {\n    return olBase.getUid(layer);\n  }\n};\n\n\nexports.component('gmfWmtscapabilitylayertree', {\n  bindings: {\n    'capabilities': '<',\n    'layers': '<',\n    'url': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfWmtscapabilitylayertreTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.import.importdatasourceComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\n\n/** @suppress {extraRequire} */\nimport gmfImportWmsCapabilityLayertreeComponent from 'gmf/import/wmsCapabilityLayertreeComponent.js';\n\n/** @suppress {extraRequire} */\nimport gmfImportWmtsCapabilityLayertreeComponent from 'gmf/import/wmtsCapabilityLayertreeComponent.js';\n\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\nconst exports = angular.module('gmfImportdatasource', [\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfImportWmsCapabilityLayertreeComponent.name,\n  gmfImportWmtsCapabilityLayertreeComponent.name,\n  ngeoQueryQuerent.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/import/importdatasourceComponent', require('./importdatasourceComponent.html'));\n});\n\n\nexports.value('gmfImportdatasourceTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfImportdatasourceTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/import/importdatasourceComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfImportdatasourceTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfImportdatasourceTemplateUrl($attrs, gmfImportdatasourceTemplateUrl) {\n  return gmfImportdatasourceTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!jQuery} $element Element.\n   * @param {!angular.$filter} $filter Angular filter.\n   * @param {!angular.$injector} $injector Main injector.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!gmf.datasource.ExternalDataSourcesManager}\n   *     gmfExternalDataSourcesManager GMF service responsible of managing\n   *     external data sources.\n   * @param {!ngeo.query.Querent} ngeoQuerent Ngeo querent service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfImportdatasourceController\n   */\n  constructor($element, $filter, $injector, $scope, $timeout,\n    gmfExternalDataSourcesManager, ngeoQuerent) {\n\n    // Binding properties\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n\n    // Injected properties\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!gmf.datasource.ExternalDataSourcesManager}\n     * @private\n     */\n    this.gmfExternalDataSourcesManager_ = gmfExternalDataSourcesManager;\n\n    /**\n     * @type {!ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n\n    // Model properties\n\n    /**\n     * @type {File|undefined}\n     * @export\n     */\n    this.file;\n\n    /**\n     * @type {string|undefined}\n     * @export\n     */\n    this.url;\n\n\n    // Inner properties\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.fileInput_ = $element.find('input[type=file]');\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.hasError = false;\n\n    /**\n     * @type {?angular.$q.Promise}\n     * @private\n     */\n    this.hasErrorPromise_ = null;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.mode = exports.Controller_.Mode.ONLINE;\n\n    /**\n     * @type {!Array.<string>}\n     * @export\n     */\n    this.modes = [\n      exports.Controller_.Mode.LOCAL,\n      exports.Controller_.Mode.ONLINE\n    ];\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.pending = false;\n\n    /**\n     * @type {!ngeox.unitPrefix}\n     * @private\n     */\n    this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ (\n      $filter('ngeoUnitPrefix'));\n\n    /**\n     * Current WMS Capabilities that were connected.\n     * @type {?Object}\n     * @export\n     */\n    this.wmsCapabilities = null;\n\n    /**\n     * Current WTMS Capabilities that were connected.\n     * @type {?Object}\n     * @export\n     */\n    this.wmtsCapabilities = null;\n\n    /**\n     * @type {Bloodhound|undefined}\n     * @private\n     */\n    this.serversEngine_;\n\n    const servers = $injector.has('gmfExternalOGCServers') ?\n      /** @type {Array.<!gmfx.ExternalOGCServer>|undefined} */ (\n        $injector.get('gmfExternalOGCServers')\n      ) : undefined;\n\n    if (servers) {\n      const serverUrls = servers.map(server => server['url']);\n      this.serversEngine_ = new Bloodhound({\n        /**\n         * Allows search queries to match from string from anywhere within\n         * the url, and not only from the beginning of the string (which is\n         * the default, non-configurable behaviour of bloodhound).\n         *\n         * Borrowed from:\n         * https://stackoverflow.com/questions/22059933/twitter-typeahead-js-how-to-return-all-matched-elements-within-a-string\n         *\n         * @param {BloodhoundDatum} datum Datum.\n         * @return {Array.<string>} List of datum tokenizers.\n         */\n        datumTokenizer: (datum) => {\n          googAsserts.assertString(datum);\n          const originalDatumTokenizers = Bloodhound.tokenizers.whitespace(\n            datum);\n          googAsserts.assert(originalDatumTokenizers);\n          const datumTokenizers = [];\n          for (const originalDatumTokenizer of originalDatumTokenizers) {\n            let i = 0;\n            while ((i + 1) < originalDatumTokenizer.length) {\n              datumTokenizers.push(\n                originalDatumTokenizer.substr(\n                  i,\n                  originalDatumTokenizer.length\n                )\n              );\n              i++;\n            }\n          }\n          return datumTokenizers;\n        },\n        queryTokenizer: Bloodhound.tokenizers.whitespace,\n        identify: false,\n        local: serverUrls\n      });\n    }\n\n    // Register input[type=file] onchange event, use HTML5 File api\n    this.fileInput_.on('change', () => {\n      this.file = this.fileInput_[0].files && this.fileInput_[0].files[0] ?\n        this.fileInput_[0].files[0] : undefined;\n      this.scope_.$apply();\n    });\n  }\n\n  /**\n   * Called on initialization of the component.\n   */\n  $onInit() {\n    this.gmfExternalDataSourcesManager_.map = this.map;\n\n\n    if (this.serversEngine_) {\n      // Timeout to let Angular render the placeholder of the input properly,\n      // otherwise typeahead would copy the string with {{}} in it...\n      this.timeout_(() => {\n        googAsserts.assert(this.serversEngine_);\n        const $urlInput = this.element_.find('input[name=url]');\n        const $connectBtn = this.element_.find('button.gmf-importdatasource-connect-btn');\n        $urlInput.typeahead({\n          hint: true,\n          highlight: true,\n          minLength: 1\n        }, {\n          name: 'url',\n          source: this.serversEngine_.ttAdapter()\n        }).bind('typeahead:select', (ev, suggestion) => {\n          this.timeout_(() => {\n            this.url = suggestion;\n            this.scope_.$apply();\n            $connectBtn.focus();\n          });\n        });\n      });\n    }\n  }\n\n  /**\n   * Triggers a 'click' on the \"Browse\" button.\n   * @export\n   */\n  browse() {\n    this.element_.find('input[type=file][name=file]').click();\n  }\n\n  /**\n   * Connect to given online resource URL.\n   * @export\n   */\n  connect() {\n    const url = googAsserts.assertString(this.url);\n    const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n    this.startWorking_();\n    if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n      this.ngeoQuerent_.wmsGetCapabilities(url).then(\n        (wmsCapabilities) => {\n          this.wmsCapabilities = wmsCapabilities;\n          this.stopWorking_();\n        },\n        () => {\n          // Something went wrong...\n          this.stopWorking_(true);\n        }\n      );\n    } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n      this.ngeoQuerent_.wmtsGetCapabilities(url).then(\n        (wmtsCapabilities) => {\n          this.wmtsCapabilities = wmtsCapabilities;\n          this.stopWorking_();\n        },\n        () => {\n          // Something went wrong...\n          this.stopWorking_(true);\n        }\n      );\n    } else {\n      // Could not determine the type of url\n      this.timeout_(() => {\n        this.stopWorking_(true);\n      });\n    }\n  }\n\n  /**\n   * Create data source from file.\n   * @export\n   */\n  load() {\n    const file = googAsserts.assert(this.file);\n    this.gmfExternalDataSourcesManager_.createAndAddDataSourceFromFile(file);\n  }\n\n  /**\n   * @return {string} The name of the file and human-readable size.\n   * @export\n   */\n  get fileNameAndSize() {\n    let nameAndSize = '';\n\n    const file = this.file;\n    if (file !== undefined) {\n      const fileSize = this.unitPrefixFormat_(file.size, 'o');\n      nameAndSize = `${file.name}, ${fileSize}`;\n    }\n\n    return nameAndSize;\n  }\n\n\n  // === Private methods ===\n\n  /**\n   * @private\n   */\n  startWorking_() {\n    this.pending = true;\n    this.hasError = false;\n\n    // Clear any previous objects\n    this.wmsCapabilities = null;\n    this.wmtsCapabilities = null;\n  }\n\n  /**\n   * @param {boolean=} opt_hasError Whether we stopped working because of after\n   *     an error.\n   * @private\n   */\n  stopWorking_(opt_hasError = false) {\n    this.pending = false;\n    if (opt_hasError) {\n      this.hasError = true;\n      if (this.hasErrorPromise_) {\n        this.timeout_.cancel(this.hasErrorPromise_);\n      }\n      this.hasErrorPromise_ = this.timeout_(() => {\n        this.hasError = false;\n        this.hasErrorPromise_ = null;\n      }, 3000);\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.Controller_.Mode = {\n  LOCAL: 'Local',\n  ONLINE: 'Online'\n};\n\n\nexports.component('gmfImportdatasource', {\n  bindings: {\n    'map': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfImportdatasourceTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.import.module\n */\nimport gmfImportImportdatasourceComponent from 'gmf/import/importdatasourceComponent.js';\nimport gmfImportWmsCapabilityLayertreeComponent from 'gmf/import/wmsCapabilityLayertreeComponent.js';\nimport gmfImportWmtsCapabilityLayertreeComponent from 'gmf/import/wmtsCapabilityLayertreeComponent.js';\n\nimport './import.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfImportModule', [\n  gmfImportImportdatasourceComponent.name,\n  gmfImportWmsCapabilityLayertreeComponent.name,\n  gmfImportWmtsCapabilityLayertreeComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.Controller\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {ol.Collection.<ol.Feature>} ngeoFeatures Collection of features.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDrawfeatureController\n */\nconst exports = function($scope, $sce, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * Alternate collection of features in which to push the drawn features.\n   * If not defined, then `ngeoFeatures` is used instead.\n   * @type {!ol.Collection.<!ol.Feature>|undefined}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showMeasure;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n  // Fill the string collection\n  gettextCatalog.getString('Point');\n  gettextCatalog.getString('LineString');\n  gettextCatalog.getString('Polygon');\n  gettextCatalog.getString('Circle');\n  gettextCatalog.getString('Rectangle');\n  gettextCatalog.getString('Text');\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = ngeoFeatures;\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawPoint;\n\n  /**\n   * @type {ngeo.interaction.MeasureLength}\n   * @export\n   */\n  this.measureLength;\n\n  /**\n   * @type {ngeo.interaction.MeasureArea}\n   * @export\n   */\n  this.measureArea;\n\n  /**\n   * @type {ngeo.interaction.MeasureAzimut}\n   * @export\n   */\n  this.measureAzimut;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawRectangle;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawText;\n\n\n  // Watch the \"active\" property, and disable the draw interactions\n  // when \"active\" gets set to false.\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      if (newVal === false) {\n        this.interactions_.forEach((interaction) => {\n          interaction.setActive(false);\n        });\n      }\n    }\n  );\n\n};\n\n\n/**\n * Register a draw|measure interaction by setting it inactive, decorating it\n * and adding it to the map\n * @param {ol.interaction.Interaction} interaction Interaction to register.\n * @export\n */\nexports.prototype.registerInteraction = function(\n  interaction) {\n  this.interactions_.push(interaction);\n  interaction.setActive(false);\n  ngeoMiscDecorate.interaction(interaction);\n  this.map.addInteraction(interaction);\n};\n\n\n/**\n * Called when any of the draw or measure interaction active property changes.\n * Set the active property of this directive accordingly, i.e. if at least\n * one of the draw or measure is active then the active property is set to true.\n * @param {ol.Object.Event} event Event.\n * @export\n */\nexports.prototype.handleActiveChange = function(event) {\n  this.active = this.interactions_.some(interaction => interaction.getActive(), this);\n};\n\n\n/**\n * Called when a feature is finished being drawn. Set the default properties\n * for its style, then set its style and add it to the features collection.\n * @param {string} type Type of geometry being drawn.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.prototype.handleDrawEnd = function(type, event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  googAsserts.assert(sketch);\n\n  const azimut = sketch.get('azimut');\n\n  const features = this.features || this.ngeoFeatures_;\n\n  const feature = new olFeature(sketch.getGeometry());\n\n  const prop = ngeoFormatFeatureProperties;\n\n  switch (type) {\n    case ngeoGeometryType.CIRCLE:\n      feature.set(prop.IS_CIRCLE, true);\n      if (azimut !== undefined) {\n        feature.set(prop.AZIMUT, azimut);\n      }\n      break;\n    case ngeoGeometryType.TEXT:\n      feature.set(prop.IS_TEXT, true);\n      break;\n    case ngeoGeometryType.RECTANGLE:\n      feature.set(prop.IS_RECTANGLE, true);\n      break;\n    default:\n      break;\n  }\n\n  /**\n   * @type {string}\n   */\n  const name = this.gettextCatalog_.getString(type);\n  feature.set(prop.NAME, `${name} ${features.getLength() + 1}`);\n\n  /**\n   * @type {string}\n   */\n  const color = type !== ngeoGeometryType.TEXT ? '#DB4436' : '#000000';\n  feature.set(prop.COLOR, color);\n\n  feature.set(prop.ANGLE, 0);\n  feature.set(prop.OPACITY, 0.2);\n  feature.set(prop.SHOW_MEASURE, this.showMeasure ? true : false);\n  feature.set(prop.SHOW_LABEL, false);\n  feature.set(prop.SIZE, 10);\n  feature.set(prop.STROKE, 2);\n\n  // set style\n  this.featureHelper_.setStyle(feature);\n\n  // push in collection\n  features.push(feature);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDrawfeatureController', [\n  ngeoDrawFeatures.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\nexports.module.controller('ngeoDrawfeatureController', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.point\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawpoint', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawPoint = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawPoint);\n      drawFeatureCtrl.drawPoint = drawPoint;\n\n      olEvents.listen(\n        drawPoint,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POINT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawPoint,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawpoint', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.rectangle\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawrectangle', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawrectangle\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawRectangle = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n        geometryFunction: (coordinates, geometry) => {\n          if (!geometry) {\n            geometry = new olGeomPolygon(null);\n          }\n          const start = coordinates[0];\n          const end = coordinates[1];\n          geometry.setCoordinates([\n            [start, [start[0], end[1]], end, [end[0], start[1]], start]\n          ]);\n          return geometry;\n        },\n        maxPoints: 2\n      });\n\n      drawFeatureCtrl.registerInteraction(drawRectangle);\n      drawFeatureCtrl.drawRectangle = drawRectangle;\n\n      olEvents.listen(\n        drawRectangle,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.RECTANGLE),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawRectangle,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawrectangle', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.text\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawtext', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawtext\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawText = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawText);\n      drawFeatureCtrl.drawText = drawText;\n\n      olEvents.listen(\n        drawText,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.TEXT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawText,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawtext', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.area\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurearea', [\n  ngeoDrawController.module.name\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing polygon');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br>' +\n          'Double-click or click starting point to finish');\n\n      const measureArea = new ngeoInteractionMeasureArea($filter('ngeoUnitPrefix'), gettextCatalog, {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureArea);\n      drawFeatureCtrl.measureArea = measureArea;\n\n      olEvents.listen(\n        measureArea,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POLYGON),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureArea,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurearea', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.azimut\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport {fromCircle} from 'ol/geom/Polygon.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasureazimut', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing circle');\n      const contMsg = gettextCatalog.getString('Click to finish');\n\n      const measureAzimut = new ngeoInteractionMeasureAzimut(\n        $filter('ngeoUnitPrefix'), $filter('number'), {\n          style: new olStyleStyle(),\n          startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n          continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n          precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined,\n          decimals: $injector.has('ngeoMeasureDecimals') ? $injector.get('ngeoMeasureDecimals') : undefined\n        });\n\n      drawFeatureCtrl.registerInteraction(measureAzimut);\n      drawFeatureCtrl.measureAzimut = measureAzimut;\n\n      olEvents.listen(\n        measureAzimut,\n        'measureend',\n        /**\n         * @param {ngeox.MeasureEvent} event Event.\n         */\n        (event) => {\n          // In the case of azimut measure interaction, the feature's\n          // geometry is actually a collection (line + circle)\n          // For our purpose here, we only need the circle, which gets\n          // transformed into a polygon with 64 sides.\n          const geometry = /** @type {ol.geom.GeometryCollection} */\n                (event.detail.feature.getGeometry());\n          const circle = /** @type {ol.geom.Circle} */ (\n            geometry.getGeometries()[1]);\n          const polygon = fromCircle(circle, 64);\n          event.detail.feature = new olFeature(polygon);\n          const azimut = ngeoInteractionMeasureAzimut.getAzimut(\n            /** @type {ol.geom.LineString} */ (geometry.getGeometries()[0])\n          );\n          event.detail.feature.set('azimut', azimut);\n\n          drawFeatureCtrl.handleDrawEnd(ngeoGeometryType.CIRCLE, event);\n        },\n        drawFeatureCtrl\n      );\n\n      olEvents.listen(\n        measureAzimut,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasureazimut', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.length\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurelength', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing line');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br>' +\n          'Double-click or click last point to finish');\n\n      const measureLength = new ngeoInteractionMeasureLength($filter('ngeoUnitPrefix'), gettextCatalog, {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureLength);\n      drawFeatureCtrl.measureLength = measureLength;\n\n      olEvents.listen(\n        measureLength,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.LINE_STRING),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureLength,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurelength', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.component\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawPoint from 'ngeo/draw/point.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawRectangle from 'ngeo/draw/rectangle.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawText from 'ngeo/draw/text.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureArea from 'ngeo/measure/area.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureAzimut from 'ngeo/measure/azimut.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureLength from 'ngeo/measure/length.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawfeature', [\n  ngeoDrawController.module.name,\n  ngeoDrawPoint.name,\n  ngeoDrawRectangle.name,\n  ngeoDrawText.name,\n  ngeoMeasureArea.name,\n  ngeoMeasureAzimut.name,\n  ngeoMeasureLength.name,\n]);\n\n\n/**\n * Directive used to draw vector features on a map.\n * Example:\n *\n *     <ngeo-drawfeature\n *         ngeo-btn-group\n *         class=\"btn-group\"\n *         ngeo-drawfeature-active=\"ctrl.drawActive\"\n *         ngeo-drawfeature-map=\"::ctrl.map\">\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawpoint\n *         class=\"btn btn-default ngeo-drawfeature-point\"\n *         ng-class=\"{active: dfCtrl.drawPoint.active}\"\n *         ng-model=\"dfCtrl.drawPoint.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurelength\n *         class=\"btn btn-default ngeo-drawfeature-linestring\"\n *         ng-class=\"{active: dfCtrl.measureLength.active}\"\n *         ng-model=\"dfCtrl.measureLength.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurearea\n *         class=\"btn btn-default ngeo-drawfeature-polygon\"\n *         ng-class=\"{active: dfCtrl.measureArea.active}\"\n *         ng-model=\"dfCtrl.measureArea.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measureazimut\n *         class=\"btn btn-default ngeo-drawfeature-circle\"\n *         ng-class=\"{active: dfCtrl.measureAzimut.active}\"\n *         ng-model=\"dfCtrl.measureAzimut.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawrectangle\n *         class=\"btn btn-default ngeo-drawfeature-rectangle\"\n *         ng-class=\"{active: dfCtrl.drawRectangle.active}\"\n *         ng-model=\"dfCtrl.drawRectangle.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawtext\n *         class=\"btn btn-default ngeo-drawfeature-text\"\n *         ng-class=\"{active: dfCtrl.drawText.active}\"\n *         ng-model=\"dfCtrl.drawText.active\"></a>\n *     </ngeo-drawfeature>\n *\n * @htmlAttribute {boolean} ngeo-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {!ol.Collection=} ngeo-drawfeature-features The features\n *     collection in which to push the drawn features. If none is provided,\n *     then the `ngeoFeatures` collection is used.\n * @htmlAttribute {ol.Map} ngeo-drawfeature-map The map.\n * @htmlAttribute {boolean} ngeo-drawfeature-showmeasure. Checks the\n *      checkbox in order to display the feature measurements as a label.\n *      Default to false.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawfeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoDrawfeatureController as dfCtrl',\n    scope: true,\n    bindToController: {\n      'active': '=ngeoDrawfeatureActive',\n      'features': '=?ngeoDrawfeatureFeatures',\n      'map': '=ngeoDrawfeatureMap',\n      'showMeasure': '=?ngeoDrawfeatureShowmeasure'\n    }\n  };\n};\n\nexports.directive('ngeoDrawfeature', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.XSDAttributes\n */\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\n\n/**\n * An service used to fetch the XSD attribute definition of layers using their\n * id from a GeoMapFish server.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n * @ngInject\n */\nconst exports = function($http, gmfLayersUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = gmfLayersUrl;\n\n  /**\n   * @type {Object.<number, !angular.$q.Promise>}\n   * @private\n   */\n  this.promises_ = {};\n\n};\n\n\n/**\n * @param {number} id Layer id.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getAttributes = function(id) {\n  if (!this.promises_[id]) {\n    const url = `${this.baseUrl_}/${id}/md.xsd`;\n    this.promises_[id] = this.http_.get(url).then(\n      this.handleGetAttributes_.bind(this));\n  }\n  return this.promises_[id];\n};\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @export\n */\nexports.prototype.handleGetAttributes_ = function(resp) {\n  return new ngeoFormatXSDAttribute().read(resp.data);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfXSDAttributes', []);\nexports.module.service('gmfXSDAttributes', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.EditFeature\n */\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Service that provides methods to get, insert, update and delete vector\n * features with the use of a GeoMapFish Protocol as back-end.\n *\n * The GeoJSON format is used when obtaining or sending features.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n * @ngInject\n */\nconst exports = function($http, gmfLayersUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * Url to the GeoMapFish layers service. Required in applications that use:\n   * - the editfeature tools\n   * - the objectediting tools\n   *\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = gmfLayersUrl;\n\n};\n\n\n/**\n * Build a query to the MapFish protocol to fetch features from a list\n * of layer ids inside a specified extent.\n *\n * @param {Array.<number>} layerIds List of layer ids to get the features from.\n * @param {ol.Extent} extent The extent where to get the features from.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getFeaturesInExtent = function(layerIds, extent) {\n  const url = olUri.appendParams(\n    `${this.baseUrl_}/${layerIds.join(',')}`,\n    {\n      'bbox': extent.join(',')\n    }\n  );\n  return this.http_.get(url).then(this.handleGetFeatures_.bind(this));\n};\n\n\n/**\n * Build a query to the MapFish protocol to fetch features from a list\n * of layer ids and a list of comparison filters.\n *\n * This method is called in the ObjectEditing service, which is injected in\n * the permalink service, i.e. it's always called. Since we don't have to\n * define the url to the GMF Protocol (layers) a dummy promise returns an\n * empty array of features if the url is not defined.\n *\n * @param {!Array.<number>} layerIds List of layer ids to get the features from.\n * @param {!Array.<!gmfx.ComparisonFilter>} filters List of comparison filters\n * @return {angular.$q.Promise} Promise.\n */\nexports.prototype.getFeaturesWithComparisonFilters = function(\n  layerIds, filters\n) {\n  const properties = [];\n  const params = {};\n\n  for (const filter of filters) {\n    params[`${filter.property}__${filter.operator}`] = filter.value;\n    properties.push(filter.property);\n  }\n\n  params['queryable'] = properties.join(',');\n\n  const url = olUri.appendParams(`${this.baseUrl_}/${layerIds.join(',')}`, params);\n  return this.http_.get(url).then(this.handleGetFeatures_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Array.<ol.Feature>} List of features.\n * @private\n */\nexports.prototype.handleGetFeatures_ = function(resp) {\n  return new olFormatGeoJSON().readFeatures(resp.data);\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {Array.<ol.Feature>} features List of features to insert.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.insertFeatures = function(layerId, features) {\n  const url = `${this.baseUrl_}/${layerId}`;\n  const geoJSON = new olFormatGeoJSON().writeFeatures(features);\n  return this.http_.post(url, geoJSON, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {ol.Feature} feature The feature to update.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.updateFeature = function(layerId, feature) {\n  const url = `${this.baseUrl_}/${layerId.toString()}/${feature.getId()}`;\n  const geoJSON = new olFormatGeoJSON().writeFeature(feature);\n  return this.http_.put(url, geoJSON, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {ol.Feature} feature The feature to delete.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.deleteFeature = function(layerId, feature) {\n  const url = `${this.baseUrl_}/${layerId.toString()}/${feature.getId()}`;\n  return this.http_.delete(url, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfEditFeature', []);\nexports.module.service('gmfEditFeature', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.raster.RasterService\n */\n/**\n * The Raster service.\n * Uses the c2cgeoportal's raster to obtain different kinds of\n * information at a specific coordinate.\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfRasterUrl URL to a the c2cgeoportal raster service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfRaster\n */\nconst exports = function($http, gmfRasterUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = gmfRasterUrl;\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Object=} opt_params Optional parameters for the request.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getRaster = function(coordinate, opt_params) {\n\n  const params = opt_params || {};\n  params[exports.Param.X] = coordinate[0];\n  params[exports.Param.Y] = coordinate[1];\n\n  return this.$http_.get(this.url_, {\n    params\n  }).then(this.handleGetRaster_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Object.<string, number>} The response object.\n * @private\n */\nexports.prototype.handleGetRaster_ = function(resp) {\n  return resp.data;\n};\n\n\n/**\n * @enum {string}\n */\nexports.Param = {\n  X: 'lon',\n  Y: 'lat'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfRaster', []);\nexports.module.service('gmfRaster', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.somerc\n */\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\n\nproj4.Proj.projections.add(somerc);\nconst exports = 'somerc';\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.EPSG21781\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\nimport somerc from 'ngeo/proj/somerc.js';\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  `+proj=${somerc}`,\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n","/**\n * @module ngeo.search.searchDirective\n */\n\n/**\n * Provides the \"ngeoSearch\" directive, which uses Twitter's\n * typeahead component to change an input text into a search field.\n *\n * Example:\n *\n *      <input type=\"text\"\n *        ngeo-search=\"ctrl.typeaheadOptions\"\n *        ngeo-search-datasets=\"ctrl.typeaheadDatasets\"\n *        ngeo-search-listeners=\"crtl.typeaheadListeners\">\n *\n * See our live example: [../examples/search.html](../examples/search.html)\n *\n * @htmlAttribute {TypeaheadOptions} ngeo-search The options.\n * @htmlAttribute {Array.<TypeaheadDataset>} ngeo-search-datasets The sources datasets.\n * @htmlAttribute {ngeox.SearchDirectiveListeners} ngeo-search-listeners The listeners.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoSearch\n */\nconst exports = function() {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const typeaheadOptionsExpr = attrs['ngeoSearch'];\n      const typeaheadOptions = /** @type {TypeaheadOptions} */\n              (scope.$eval(typeaheadOptionsExpr));\n\n      const typeaheadDatasetsExpr = attrs['ngeoSearchDatasets'];\n      const typeaheadDatasets = /** @type {Array.<TypeaheadDataset>} */\n              (scope.$eval(typeaheadDatasetsExpr));\n\n      const args = typeaheadDatasets.slice();\n      args.unshift(typeaheadOptions);\n\n      element.typeahead(...args);\n\n      const typeaheadListenersExpr = attrs['ngeoSearchListeners'];\n      const typeaheadListeners_ =\n              /** @type {ngeox.SearchDirectiveListeners} */\n              (scope.$eval(typeaheadListenersExpr));\n\n      /**\n       * @type {ngeox.SearchDirectiveListeners}\n       */\n      const typeaheadListeners = exports.adaptListeners_(\n        typeaheadListeners_);\n\n      element.on('typeahead:open', () => {\n        scope.$apply(() => {\n          typeaheadListeners.open();\n        });\n      });\n\n      element.on('typeahead:close', () => {\n        scope.$apply(() => {\n          typeaheadListeners.close();\n        });\n      });\n\n      element.on('typeahead:cursorchange',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.cursorchange(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:select',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.select(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:autocomplete',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.autocomplete(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:asyncreceive',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {TypeaheadDataset} dataset Dataset.\n         * @param {string} query Query.\n         */\n        (event, dataset, query) => {\n          scope.$apply(() => {\n            const empty = element.data('tt-typeahead')['menu']['_allDatasetsEmpty']();\n            typeaheadListeners.datasetsempty(event, query, empty);\n          });\n        });\n\n    }\n  };\n};\n\n\n/**\n * Create a real ngeox.SearchDirectiveListeners object out of the object\n * returned by $eval.\n * @param {ngeox.SearchDirectiveListeners} object Object.\n * @return {ngeox.SearchDirectiveListeners} The listeners object.\n * @private\n */\nexports.adaptListeners_ = function(object) {\n  /** @type {ngeox.SearchDirectiveListeners} */\n  let typeaheadListeners;\n  if (object === undefined) {\n    typeaheadListeners = {\n      open() {},\n      close() {},\n      cursorchange() {},\n      datasetsempty() {},\n      select() {},\n      autocomplete() {}\n    };\n  } else {\n    typeaheadListeners = {\n      open: object.open !== undefined ?\n        object.open : () => {},\n      close: object.close !== undefined ?\n        object.close : () => {},\n      cursorchange: object.cursorchange !== undefined ?\n        object.cursorchange : () => {},\n      datasetsempty: object.datasetsempty !== undefined ?\n        object.datasetsempty : () => {},\n      select: object.select !== undefined ?\n        object.select : () => {},\n      autocomplete: object.autocomplete !== undefined ?\n        object.autocomplete : () => {}\n    };\n  }\n  return typeaheadListeners;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSearchDirective', []);\n\n\n// Register the directive in the module\nexports.module.directive('ngeoSearch', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.colorpickerComponent\n */\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoColorpicker', []);\n\n\nexports.value('ngeoColorpickerTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoColorpickerTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/misc/colorpickerComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/misc/colorpickerComponent', require('./colorpickerComponent.html'));\n});\n\n\n/**\n * Provides the \"ngeoColorpicker\" directive, a widget for\n * selecting a color among predefined ones.\n *\n * Example:\n *\n *     <div ngeo-colorpicker=\"ctrl.colors\">\n *     </div>\n *\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoColorpickerTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoColorpicker\n */\nexports.component_ = function(ngeoColorpickerTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: {\n      colors: '<?ngeoColorpicker',\n      color: '=?ngeoColorpickerColor'\n    },\n    controller: 'NgeoColorpickerController as ctrl',\n    bindToController: true,\n    templateUrl: ngeoColorpickerTemplateUrl\n  };\n};\n\nexports.directive('ngeoColorpicker',\n  exports.component_);\n\n/**\n * Fefault colors for the colorpicker\n * @type {Array.<Array.<string>>}\n * @const\n * @export\n */\nexports.DEFAULT_COLORS = [\n  ['#F4EB37', '#CDDC39', '#62AF44', '#009D57', '#0BA9CC', '#4186F0', '#3F5BA9', '#7C3592', '#A61B4A', '#DB4436', '#F8971B', '#F4B400', '#795046'],\n  ['#F9F7A6', '#E6EEA3', '#B7DBAB', '#7CCFA9', '#93D7E8', '#9FC3FF', '#A7B5D7', '#C6A4CF', '#D698AD', '#EE9C96', '#FAD199', '#FFDD5E', '#B29189'],\n  ['#ffffff', '#CCCCCC', '#777', '#000000']\n];\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.Controller_ = function($scope, $element, $attrs) {\n\n  /**\n   * The set of color\n   * @type {Array.<Array.<string>>}\n   * @export\n   */\n  this.colors = this.colors || exports.DEFAULT_COLORS;\n\n  /**\n   * The selected color\n   * @type {undefined|string}\n   * @export\n   */\n  this.color;\n};\n\n/**\n * @param {string} color The color to select.\n * @export\n */\nexports.Controller_.prototype.setColor = function(color) {\n  this.color = color;\n};\n\nexports.controller('NgeoColorpickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.AutoProjection\n */\nimport * as olProj from 'ol/proj.js';\nimport * as olExtent from 'ol/extent.js';\n\n/**\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoAutoProjection\n */\nconst exports = function() {};\n\n\n/**\n * Parse a string and return a coordinate if the result is valid. Given string\n * must be a two numbers separated by a space.\n * @param {string} str the string to parse.\n * @return {?ol.Coordinate} A coordinate or null if the format is not valid.\n * @export\n */\nexports.prototype.stringToCoordinates = function(str) {\n  const coords = str.match(/([\\d\\.']+)[\\s,]+([\\d\\.']+)/);\n  if (coords) {\n    const x = parseFloat(coords[1].replace('\\'', ''));\n    const y = parseFloat(coords[2].replace('\\'', ''));\n    if (!isNaN(x) && !isNaN(y)) {\n      return [x, y];\n    }\n  }\n  return null;\n};\n\n\n/**\n * Get an array of projections corresponding to their EPSG codes. Log an error\n *     for each code that are not defined in ol projections.\n * @param {Array.<string>} projectionsCodes EPSG codes (e.g. 'EPSG:3857',\n *     'epsg:3857' or '3857').\n * @return {Array.<ol.proj.Projection>} An array of projections.\n * @export\n */\nexports.prototype.getProjectionList = function(projectionsCodes) {\n  let code, proj;\n  const projections = [];\n  projectionsCodes.forEach((projection) => {\n    code = projection.toUpperCase();\n    if (code.substr(0, 5) != 'EPSG:') {\n      code = `EPSG:${code}`;\n    }\n    proj = olProj.get(code);\n    if (proj !== null) {\n      projections.push(proj);\n    } else {\n      console.error(`The projection ${code} is not defined in ol.proj.`);\n    }\n  });\n  return projections;\n};\n\n\n/**\n * It projects the point using the projection array and finds the first one for\n * which it falls inside of the viewProjection extent.\n * @param {ol.Coordinate} coordinates The point to test.\n * @param {ol.Extent} extent Limits in which coordinates can be valid.\n * @param {ol.proj.Projection} viewProjection Target projection the point.\n * @param {Array.<ol.proj.Projection>=} opt_projections optional array of\n *     projections. The point is tested in each projection, in the order of\n *     the array.\n * @return {?ol.Coordinate} A coordinates in the view's projection if it matches\n *     in one of the given projections, or null else.\n * @export\n */\nexports.prototype.tryProjections = function(coordinates,\n  extent, viewProjection, opt_projections) {\n  let position;\n  if (opt_projections === undefined) {\n    opt_projections = [viewProjection];\n  }\n  opt_projections.some((projection) => {\n    try {\n      position = olProj.transform(coordinates, projection, viewProjection);\n      if (olExtent.containsCoordinate(extent, position)) {\n        return true;\n      }\n    } catch (e) {\n      // Wrong coordinate leads to a transform error and ol throw an exception that we won't log.\n    }\n    position = null;\n  });\n  return position;\n};\n\n\n/**\n * Same as AutoProjection.tryProjections but if tryProjections return null,\n * re-call it with coordinates in reverse order.\n * @param {ol.Coordinate} coordinates The point to test.\n * @param {ol.Extent} extent Limits in which coordinates can be valid.\n * @param {ol.proj.Projection} viewProjection Target projection the point.\n * @param {Array.<ol.proj.Projection>=} opt_projections optional array of\n *     projections. The point is tested in each projection, in the order of\n *     the array.\n * @return {?ol.Coordinate} A coordinates in the view's projection if it matches\n *     in one of the given projections, or null else.\n * @export\n */\nexports.prototype.tryProjectionsWithInversion = function(\n  coordinates, extent, viewProjection, opt_projections) {\n  let position = this.tryProjections(coordinates, extent, viewProjection,\n    opt_projections);\n  if (position === null) {\n    position = this.tryProjections(coordinates.reverse(), extent,\n      viewProjection, opt_projections);\n  }\n  return position;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoAutoProjection', []);\nexports.module.service('ngeoAutoProjection', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.search.FulltextSearch\n */\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides the c2c-geoportal full-text search.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngInject\n * @export\n * @ngname gmfFulltextSearch\n */\nconst exports = function($injector, $http) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = /** @type {string} **/ ($injector.get('fulltextsearchUrl'));\n\n  const url = this.url_.split('?');\n  /**\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = url[0];\n\n  const queryString = (url.length == 2) ? `?${url[1]}` : '';\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  this.defaultParams_ = ngeoUtils.decodeQueryString(queryString);\n};\n\n/**\n * Perform a search query on the c2c-geoportal full-text search.\n * @param {string} query Search query.\n * @param {Object.<string, string>} params Additional parameters.\n * @returns {Promise} Request promise with data array.\n */\nexports.prototype.search = function(query, params) {\n  const queryParams = Object.assign({}, this.defaultParams_, params);\n\n  queryParams['query'] = query;\n\n  const url = `${this.baseUrl_}?${ngeoUtils.encodeQueryString(queryParams)}`;\n\n  return new Promise((resolve, reject) => {\n    this.$http_.get(url)\n      .then(resp => resolve(resp['data']))\n      .catch(reject);\n  });\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSearchFulltextSearch', []);\nexports.module.service('gmfSearchFulltextSearch', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.download.Csv\n */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\n/**\n * Service to generate and download a CSV file from tabular data.\n * Column headers are translated using {@link angularGettext.Catalog}.\n *\n * @param {angular.$injector} $injector Main injector.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoCsvDownload\n * @ngInject\n */\nconst exports = function($injector, gettextCatalog) {\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * File extension of the CSV file.\n   * @type {string}\n   * @private\n   */\n  this.encoding_ = $injector.has('ngeoCsvEncoding') ?\n    $injector.get('ngeoCsvEncoding') : 'utf-8';\n\n  /**\n   * File extension of the CSV file.\n   * @type {string}\n   * @private\n   */\n  this.extension_ = $injector.has('ngeoCsvExtension') ?\n    $injector.get('ngeoCsvExtension') : '.csv';\n\n  /**\n   * Whether to include the header in the exported file or not.\n   * @type {boolean}\n   * @private\n   */\n  this.includeHeader_ = $injector.has('ngeoCsvIncludeHeader') ?\n    $injector.get('ngeoCsvIncludeHeader') : true;\n\n  /**\n   * Quote character.\n   * @type {string}\n   * @private\n   */\n  this.quote_ = $injector.has('ngeoCsvQuote') ?\n    $injector.get('ngeoCsvQuote') : '\"';\n\n  /**\n   * Separator character.\n   * @type {string}\n   * @private\n   */\n  this.separator_ = $injector.has('ngeoCsvSeparator') ?\n    $injector.get('ngeoCsvSeparator') : ',';\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n};\n\n\n/**\n * Generate a CSV.\n *\n * @param {Array.<Object>} data Entries/objects to include in the CSV.\n * @param {Array.<ngeox.GridColumnDef>} columnDefs Column definitions.\n * @return {string} The CSV file as string.\n * @export\n */\nexports.prototype.generateCsv = function(data, columnDefs) {\n  if (data.length == 0 || columnDefs.length == 0) {\n    return '';\n  }\n\n  const translatedColumnHeaders = columnDefs.map(columnHeader => this.gettextCatalog_.getString(columnHeader.name));\n\n  const header = this.getRow_(translatedColumnHeaders);\n  const dataRows = data.map((values) => {\n    const rowValues = columnDefs.map(columnHeader => values[columnHeader.name]);\n    return this.getRow_(rowValues);\n  });\n\n  return this.includeHeader_ ? header + dataRows.join('') : dataRows.join('');\n};\n\n\n/**\n * @param {Array.<?>} values Values.\n * @return {string} CSV row.\n * @private\n */\nexports.prototype.getRow_ = function(values) {\n  const matchAllQuotesRegex = new RegExp(this.quote_, 'g');\n  const doubleQuote = this.quote_ + this.quote_;\n\n  const rowValues = values.map((value) => {\n    if (value !== undefined && value !== null) {\n      value = `${value}`;\n      // wrap each value into quotes and escape quotes with double quotes\n      return this.quote_ + value.replace(matchAllQuotesRegex, doubleQuote) + this.quote_;\n    } else {\n      return '';\n    }\n  });\n\n  return `${rowValues.join(this.separator_)}\\n`;\n};\n\n\n/**\n * Generate a CSV and start a download with the generated file.\n *\n * @param {Array.<Object>} data Entries/objects to include in the CSV.\n * @param {Array.<ngeox.GridColumnDef>} columnDefs Column definitions.\n * @param {string} fileName The CSV file name, without the extension.\n * @export\n */\nexports.prototype.startDownload = function(data, columnDefs, fileName) {\n  const fileContent = this.generateCsv(data, columnDefs);\n  this.download_(\n    fileContent, fileName, `text/csv;charset=${this.encoding_}`);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoCsvDownload', [\n  ngeoDownloadService.name\n]);\nexports.module.service('ngeoCsvDownload', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.resizemap\n */\nimport googAsserts from 'goog/asserts.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.shareComponent\n */\nimport gmfPermalinkShareService from 'gmf/permalink/ShareService.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\nconst exports = angular.module('gmfPermalinkShareComponent', [\n  gmfPermalinkShareService.module.name,\n  ngeoStatemanagerLocation.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/permalink/shareComponent', require('./shareComponent.html'));\n});\n\n\nexports.value('gmfPermalinkShareTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfPermalinkShareTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/permalink/shareComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfPermalinkShareTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfPermalinkShareTemplateUrl($attrs, gmfPermalinkShareTemplateUrl) {\n  return gmfPermalinkShareTemplateUrl($attrs);\n}\n\n\n/**\n * Component to display a shortened permalink and share it by email\n * Example:\n *\n *      <gmf-share\n *        gmf-share-email=\"true\">\n *      </gmf-share>\n *\n * @htmlAttribute {boolean} gmf-share-email Enable emailing capability.\n * @type {!angular.Component}\n */\nexports.component_ = {\n  bindings: {\n    'enableEmail': '<gmfShareEmail'\n  },\n  controller: 'GmfShareController',\n  templateUrl: gmfPermalinkShareTemplateUrl\n};\nexports.component('gmfShare', exports.component_);\n\n\nclass ShareComponentController {\n  /**\n   * The controller for the share component\n   * @param {angular.Scope} $scope Scope.\n   * @param {ngeo.statemanager.Location} ngeoLocation ngeo Location service.\n   * @param {gmf.permalink.ShareService} gmfShareService service for sharing map.\n   * @param {angular.$q} $q Angular q service\n   * @param {angular.Attributes} $attrs Attributes.\n   * @constructor\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfShareController\n   */\n  constructor($scope, ngeoLocation, gmfShareService, $q, $attrs) {\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @type {gmf.permalink.ShareService}\n     * @private\n     */\n    this.gmfShareService_ = gmfShareService;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.$q_ = $q;\n\n    /**\n     * @type {ngeo.statemanager.Location}\n     * @private\n     */\n    this.ngeoLocation_ = ngeoLocation;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.enableEmail;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.shortLink;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.email;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.message;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.permalink_ = this.ngeoLocation_.getUriString();\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.showLengthWarning = this.permalink_.length > gmfPermalinkShareService.URL_MAX_LEN ||\n    ngeoLocation.getPath() > gmfPermalinkShareService.URL_PATH_MAX_LEN;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.successfullySent = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.errorOnsend = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.errorOnGetShortUrl = false;\n\n    this.getShortUrl();\n  }\n\n  /**\n   * Get the short version of the permalink if the email is not provided\n   * @export\n   */\n  getShortUrl() {\n    this.$q_.when(this.gmfShareService_.getShortUrl(this.permalink_))\n      .then((resp) => {\n        this.shortLink = resp.data.short_url;\n        this.errorOnGetShortUrl = false;\n      }, (resp) => {\n        this.shortLink = this.permalink;\n        this.errorOnGetShortUrl = true;\n      });\n  }\n\n  /**\n   * Send the short version of the permalink if the email is provided\n   * @export\n   */\n  sendShortUrl() {\n    if (this.$scope_['gmfShareForm'].$valid) {\n      this.$q_.when(this.gmfShareService_.sendShortUrl(this.permalink_, this.email, this.message))\n        .then((resp) => {\n          this.successfullySent = true;\n        }, (resp) => {\n          this.errorOnsend = true;\n        });\n    }\n  }\n}\n\nexports.controller('GmfShareController', ShareComponentController);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.datasourceGroupTreeComponent\n */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeDatasourceGroupTreeComponent', [\n  ngeoDatasourceDataSources.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree/datasourceGroupTreeComponent', require('./datasourceGroupTreeComponent.html'));\n});\n\n\nexports.value('gmfLayertreeDatasourceGroupTreeTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfLayertreeDatasourceGroupTreeTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/layertree/datasourceGroupTreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfLayertreeDatasourceGroupTreeTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfLayertreeDatasourceGroupTreeTemplateUrl($attrs, gmfLayertreeDatasourceGroupTreeTemplateUrl) {\n  return gmfLayertreeDatasourceGroupTreeTemplateUrl($attrs);\n}\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources\n   *     service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfDatasourcegrouptreeController\n   */\n  constructor($scope, ngeoDataSources) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.datasource.Group}\n     * @export\n     */\n    this.group;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n  }\n\n  /**\n   * @return {string} Group uid.\n   * @export\n   */\n  getGroupUid() {\n    return `datasourcegrouptree-${olBase.getUid(this.group)}`;\n  }\n\n  /**\n   * Toggle visibility of the group itself, i.e. its visibility state.\n   * @export\n   */\n  toggle() {\n    this.group.toggleVisibilityState();\n  }\n\n  /**\n   * Toggle visible property of a data source.\n   * @param {ngeo.datasource.DataSource} dataSource Data source to toggle the\n   * visibility\n   * @export\n   */\n  toggleDataSource(dataSource) {\n    dataSource.visible = !dataSource.visible;\n  }\n\n  /**\n   * Remove all data sources from the `ngeo.datasource.DataSources` collection, which\n   * will automatically remove them from the Group. The group itself\n   * is going to be removed as well, destroying this component in the process.\n   * @export\n   */\n  remove() {\n    for (let i = this.group.dataSources.length - 1, ii = 0; i >= ii; i--) {\n      this.dataSources_.remove(this.group.dataSources[i]);\n    }\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove from\n   *     the `ngeo.DataSources` collection.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSources_.remove(dataSource);\n  }\n};\n\n\nexports.component('gmfDatasourcegrouptree', {\n  bindings: {\n    'group': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfLayertreeDatasourceGroupTreeTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach((feature) => {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    });\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach((feature) => {\n        this.featureHelper_.setStyle(feature);\n      });\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoDrawFeatures.name,\n  ngeoLayertreeController.module.name,\n  ngeoMiscDebounce.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoStatemanagerModule.name,\n]);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoStatemanagerService.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.datepickerComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\n\nimport 'angular-ui-date';\nimport 'jquery-ui/themes/base/all.css';\n\n// FIXME: import the locales in the applications\nimport 'jquery-ui/ui/i18n/datepicker-fr.js';\nimport 'jquery-ui/ui/i18n/datepicker-en-GB.js';\nimport 'jquery-ui/ui/i18n/datepicker-de.js';\nimport 'jquery-ui/ui/i18n/datepicker-it.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDatePicker', [\n  ngeoMiscTime.module.name,\n  'ui.date',\n]);\n\n\nexports.value('ngeoDatePickerTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoDatePickerTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/misc/datepickerComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/misc/datepickerComponent', require('./datepickerComponent.html'));\n});\n\n\n/**\n * Provide a directive to select a single date or a range of dates. Requires\n * jQuery UI for the 'datepicker' widget.\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n * ngeoDatePickerTemplateUrl Template for the directive.\n * @param  {angular.$timeout} $timeout angular timeout service\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDatePicker\n */\nexports.component_ = function(ngeoDatePickerTemplateUrl,  $timeout) {\n  return {\n    scope: {\n      onDateSelected: '&',\n      time: '='\n    },\n    bindToController: true,\n    controller: 'ngeoDatePickerController as datepickerCtrl',\n    restrict: 'AE',\n    templateUrl: ngeoDatePickerTemplateUrl,\n    link: (scope, element, attrs, ctrl) => {\n      ctrl.init();\n\n      const lang =  ctrl.gettextCatalog_.getCurrentLanguage();\n      $['datepicker']['setDefaults']($['datepicker']['regional'][lang]);\n\n      ctrl.sdateOptions = angular.extend({}, ctrl.sdateOptions, {\n        'minDate': ctrl.initialMinDate,\n        'maxDate': ctrl.initialMaxDate,\n        'onClose': (selectedDate) => {\n          if (selectedDate) {\n            $(element[0]).find('input[name=\"edate\"]').datepicker('option', 'minDate', selectedDate);\n          }\n        }\n      });\n\n      ctrl.edateOptions = angular.extend({}, ctrl.edateOptions, {\n        'minDate': ctrl.initialMinDate,\n        'maxDate': ctrl.initialMaxDate,\n        'onClose': (selectedDate) => {\n          if (selectedDate) {\n            $(element[0]).find('input[name=\"sdate\"]').datepicker('option', 'maxDate', selectedDate);\n          }\n        }\n      });\n\n      angular.element('body').on('hidden.bs.popover', () => {\n        const dp = angular.element('#ui-datepicker-div');\n        if (dp && dp.css('display') === 'block') {\n          $(element[0]).find('input[name$=\"date\"]').datepicker('hide');\n        }\n      });\n\n      $timeout(() => {\n        angular.element('#ui-datepicker-div').on('mousedown', (e) => {\n          e.stopPropagation();\n        });\n      });\n    }\n  };\n};\n\nexports.directive('ngeoDatePicker', exports.component_);\n\n\n/**\n * DatePickerController - directive conttroller\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$injector} $injector injector.\n * @param {!ngeo.misc.Time} ngeoTime time service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDatePickerController\n */\nexports.Controller_ = function($scope, $injector,\n  ngeoTime, gettextCatalog) {\n\n  /**\n   * @type {!ngeo.misc.Time}\n   * @private\n   */\n  this.ngeoTime_ = ngeoTime;\n\n  /**\n   * @type {!ngeox.TimeProperty}\n   * @export\n   */\n  this.time;\n\n  /**\n   * The gettext catalog\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n\n  /**\n   * If the component is used to select a date range\n   * @type {boolean}\n   * @export\n   */\n  this.isModeRange;\n\n\n  /**\n   * Function called after date(s) changed/selected\n   * @type {function({time: {start: number, end: number}})}\n   * @export\n   */\n  this.onDateSelected;\n\n\n  /**\n   * Initial min date for the datepicker\n   * @type {!Date}\n   */\n  this.initialMinDate;\n\n  /**\n   * Initial max date for the datepickeronDateSelected\n   * @type {!Date}\n   */\n  this.initialMaxDate;\n\n  /**\n   * Datepicker options for the second datepicker (only for range mode)\n   * @type {Object}\n   * @export\n   */\n  this.edateOptions = {\n    'changeMonth': true,\n    'changeYear': true\n  };\n\n  /**\n   * Datepicker options for the first datepicker\n   * @type {Object}\n   * @export\n   */\n  this.sdateOptions = {\n    'changeMonth': true,\n    'changeYear': true\n  };\n\n  /**\n   * Start date model for the first date picker\n   * @type {Date}\n   * @export\n   */\n  this.sdate;\n\n  /**\n   * End date model for the second datepicker (only for range mode)\n   * @type {Date}\n   * @export\n   */\n  this.edate;\n\n  $scope.$watchGroup(['datepickerCtrl.sdate', 'datepickerCtrl.edate'], (newDates, oldDates) => {\n    const sDate = newDates[0];\n    const eDate = newDates[1];\n\n    if (angular.isDate(sDate) && (!this.isModeRange || angular.isDate(eDate))) {\n      this.onDateSelected({\n        time: {\n          start: this.ngeoTime_.getTime(sDate),\n          end: this.ngeoTime_.getTime(eDate)\n        }\n      });\n    }\n  });\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  //fetch the initial options for the component\n  const initialOptions_ = this.ngeoTime_.getOptions(this.time);\n  this.initialMinDate = this.ngeoTime_.createDate(initialOptions_.minDate);\n  this.initialMaxDate = this.ngeoTime_.createDate(initialOptions_.maxDate);\n  this.isModeRange = this.time.mode === 'range';\n\n  if (this.isModeRange) {\n    googAsserts.assertArray(initialOptions_.values);\n    this.sdate = this.ngeoTime_.createDate(initialOptions_.values[0]);\n    this.edate = this.ngeoTime_.createDate(initialOptions_.values[1]);\n  } else {\n    googAsserts.assertNumber(initialOptions_.values);\n    this.sdate = this.ngeoTime_.createDate(initialOptions_.values);\n  }\n};\n\nexports.controller('ngeoDatePickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.Attribute\n */\nconst exports = {};\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\n\n\n/**\n * Set the `type` and `geomType` properties of an attribute if the given\n * type is a geometry one.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type Type.\n * @return {boolean} Whether both attribute type and geomType were set.\n */\nexports.setGeometryType = function(attribute, type) {\n  const geomRegex =\n    /gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/;\n  if (geomRegex.exec(type)) {\n    attribute.type = ngeoFormatAttributeType.GEOMETRY;\n    if (/^gml:Point/.exec(type)) {\n      attribute.geomType = 'Point';\n    } else if (/^gml:LineString|^gml:Curve/.exec(type)) {\n      attribute.geomType = 'LineString';\n    } else if (/^gml:Polygon|^gml:Surface/.exec(type)) {\n      attribute.geomType = 'Polygon';\n    } else if (/^gml:MultiPoint/.exec(type)) {\n      attribute.geomType = 'MultiPoint';\n    } else if (/^gml:MultiLineString|^gml:MultiCurve/.exec(type)) {\n      attribute.geomType = 'MultiLineString';\n    } else if (/^gml:MultiPolygon|^gml:MultiSurface/.exec(type)) {\n      attribute.geomType = 'MultiPolygon';\n    }\n  }\n  return !!attribute.type && !!attribute.geomType;\n};\n\n\nexport default exports;\n","/**\n * @module gmf.editing.EnumerateAttribute\n */\nconst exports = class {\n\n  /**\n   * The EnumerateAttribute is responsible of fetching all possible of a given\n   * attribute of a given data source (gmf layer).\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfEnumerateAttribute\n   */\n  constructor($http, gmfLayersUrl) {\n\n    // === Injected services ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.baseUrl_ = gmfLayersUrl;\n\n    /**\n     * @type {Object.<string, !angular.$q.Promise>}\n     * @private\n     */\n    this.promises_ = {};\n  }\n\n  /**\n   * @param {gmf.datasource.OGC} dataSource Data source.\n   * @param {string} attribute Attribute name.\n   * @return {angular.$q.Promise} Promise.\n   */\n  getAttributeValues(dataSource, attribute) {\n    const promiseId = `${dataSource.id}_${attribute}`;\n    const name = dataSource.name;\n    if (!this.promises_[promiseId]) {\n      const url = `${this.baseUrl_}/${name}/values/${attribute}`;\n      this.promises_[promiseId] = this.http_.get(url).then(\n        this.handleGetAttributeValues_.bind(this));\n    }\n    return this.promises_[promiseId];\n  }\n\n  /**\n   * @param {angular.$http.Response} resp Ajax response.\n   * @return {Array.<gmfThemes.GmfLayerAttributeValue>} List of the attribute\n   *     values.\n   * @export\n   */\n  handleGetAttributeValues_(resp) {\n    const data = /** @type {gmfThemes.GmfLayerAttributeValuesResponse} */ (\n      resp.data);\n    return data.items;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfEnumerateAttribute', []);\nexports.module.service('gmfEnumerateAttribute', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.File\n */\n/**\n * @constructor\n * @param {angular.$q} $q .\n * @param {angular.$http} $http .\n * @param {gettext} gettext .\n * @ngInject\n */\nconst exports = function($q, $http, gettext) {\n  let fileReader, canceler;\n\n  // Test the validity of the file size\n  this.isValidFileSize = function(fileSize) {\n    return !(fileSize > 20000000); // 20 Mo\n  };\n\n  this.isWmsGetCap = function(fileContent) {\n    return /<(WMT_MS_Capabilities|WMS_Capabilities)/.test(fileContent);\n  };\n\n  this.isWmtsGetCap = function(fileContent) {\n    return /<Capabilities/.test(fileContent);\n  };\n\n  this.isKml = function(fileContent) {\n    return /<kml/.test(fileContent) && /<\\/kml>/.test(fileContent);\n  };\n\n  this.isGpx = function(fileContent) {\n    return /<gpx/.test(fileContent) && /<\\/gpx>/.test(fileContent);\n  };\n\n  /**\n   * @param {!Blob} file .\n   * @return {angular.$q.Promise<string>} .\n   */\n  this.read = function(file) {\n    const defer = $q.defer();\n    if (fileReader && fileReader.readyState === FileReader.LOADING) {\n      fileReader.abort();\n    }\n    fileReader = new FileReader();\n    fileReader.onload = function(evt) {\n      defer.resolve(evt.target.result);\n    };\n    fileReader.onerror = function(evt) {\n      const err = evt.target.error;\n      console.error('Reading file failed: ', err);\n      defer.reject({\n        'message': err.code == 20 ? gettext('Operation canceled') : gettext('Read failed'),\n        'reason': err.message\n      });\n    };\n    fileReader.onprogress = function(evt) {\n      defer.notify(evt);\n    };\n    // Read the file\n    fileReader.readAsText(file);\n    return defer.promise;\n  };\n\n  /**\n   * @param {string} url .\n   * @param {angular.$q.Deferred=} opt_cancelP .\n   * @return {angular.$q.Promise<Blob>} .\n   */\n  this.load = function(url, opt_cancelP) {\n\n    if (canceler) {\n      canceler.resolve();\n    }\n    canceler = opt_cancelP || $q.defer();\n\n    // Angularjs doesn't handle onprogress event\n    const defer = $q.defer();\n    $http.get(url, {\n      timeout: canceler.promise\n    }).then((response) => {\n      defer.resolve(response.data);\n    }, (reason) => {\n      console.error('Uploading file failed: ', reason);\n      defer.reject({\n        'message': gettext('Upload failed'),\n        'reason': reason\n      });\n    });\n    return defer.promise;\n  };\n};\n\nexports.module = angular.module('ngeoFile', []);\n\nexports.module.service('ngeoFile', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.controllers.AbstractDesktopController\n */\nimport gmfControllersAbstractAppController from 'gmf/controllers/AbstractAppController.js';\nimport gmfContextualdataModule from 'gmf/contextualdata/module.js';\nimport gmfDrawingModule from 'gmf/drawing/module.js';\nimport gmfEditingModule from 'gmf/editing/module.js';\nimport gmfPermalinkShareComponent from 'gmf/permalink/shareComponent.js';\nimport gmfPrintComponent from 'gmf/print/component.js';\nimport gmfProfileModule from 'gmf/profile/module.js';\nimport gmfRasterComponent from 'gmf/raster/component.js';\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoQueryBboxQueryComponent from 'ngeo/query/bboxQueryComponent.js';\nimport gmfImportModule from 'gmf/import/module.js';\nimport * as olBase from 'ol/index.js';\nimport * as olProj from 'ol/proj.js';\nimport * as olObj from 'ol/obj.js';\nimport olCollection from 'ol/Collection.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olControlScaleLine from 'ol/control/ScaleLine.js';\nimport olControlZoom from 'ol/control/Zoom.js';\nimport olControlRotate from 'ol/control/Rotate.js';\nimport * as olInteraction from 'ol/interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Desktop application abstract controller.\n *\n * This file includes `goog.require`'s for desktop components/directives used\n * by the HTML page and the controller to provide the configuration.\n *\n * @param {gmfx.Config} config A part of the application config.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @extends {gmf.controllers.AbstractAppController}\n * @ngdoc controller\n * @ngInject\n * @export\n */\nconst exports = function(config, $scope, $injector) {\n\n  const viewConfig = {\n    projection: olProj.get(`EPSG:${config.srid || 21781}`)\n  };\n  olObj.assign(viewConfig, config.mapViewConfig || {});\n\n  const arrow = gmfControllersAbstractAppController.prototype.getLocationIcon();\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    pixelRatio: config.mapPixelRatio,\n    layers: [],\n    view: new olView(viewConfig),\n    controls: config.mapControls || [\n      new olControlScaleLine({\n        target: document.getElementById('scaleline')\n      }),\n      new olControlZoom({\n        zoomInTipLabel: '',\n        zoomOutTipLabel: ''\n      }),\n      new olControlRotate({\n        label: arrow,\n        tipLabel: ''\n      })\n    ],\n    interactions: config.mapInteractions || olInteraction.defaults({\n      pinchRotate: true,\n      altShiftDragRotate: true\n    }),\n    loadTilesWhileAnimating: true,\n    loadTilesWhileInteracting: true\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.loginActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.toolsActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modalShareShown = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.editFeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.routingfeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.googleStreetViewActive = false;\n\n  /**\n   * @type {!ol.style.Style}\n   * @export\n   */\n  this.googleStreetViewStyle = new olStyleStyle({\n    text: new olStyleText({\n      fill: new olStyleFill({color: '#279B61'}),\n      font: 'normal 30px FontAwesome',\n      offsetY: -15,\n      stroke: new olStyleStroke({color: '#ffffff', width: 3}),\n      text: '\\uf041'\n    })\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.importDataSourceActive = false;\n\n  const body = $('body');\n\n  // initialize tooltips\n  body.tooltip({\n    container: 'body',\n    trigger: 'hover',\n    selector: '[data-toggle=\"tooltip\"]'\n  });\n\n  // deactivate tooltips on touch device\n  body.on('touchstart.detectTouch', () => {\n    body.tooltip('destroy');\n    body.off('touchstart.detectTouch');\n  });\n\n  /**\n   * Collection of features for the draw interaction\n   * @type {ol.Collection.<ol.Feature>}\n   */\n  const ngeoFeatures = $injector.get('ngeoFeatures');\n\n  /**\n   * @type {ngeo.map.FeatureOverlay}\n   * @export\n   */\n  this.drawFeatureLayer = $injector.get('ngeoFeatureOverlayMgr')\n    .getFeatureOverlay();\n  this.drawFeatureLayer.setFeatures(ngeoFeatures);\n\n  const ngeoFeatureHelper = $injector.get('ngeoFeatureHelper');\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.editFeatureVectorLayer = new olLayerVector({\n    source: new olSourceVector({\n      wrapX: false,\n      features: new olCollection()\n    }),\n    style: (feature, resolution) => ngeoFeatureHelper.createEditingStyles(feature)\n    // style: ngeoFeatureHelper.createEditingStyles.bind(ngeoFeatureHelper)\n  });\n  this.editFeatureVectorLayer.setMap(this.map);\n\n  /**\n   * The ngeo ToolActivate manager service.\n   * @type {ngeo.misc.ToolActivateMgr}\n   */\n  const ngeoToolActivateMgr = $injector.get('ngeoToolActivateMgr');\n\n  const editFeatureActivate = new ngeoMiscToolActivate(this, 'editFeatureActive');\n  ngeoToolActivateMgr.registerTool('mapTools', editFeatureActivate, false);\n\n  const googleStreetViewActivate = new ngeoMiscToolActivate(\n    this,\n    'googleStreetViewActive'\n  );\n  ngeoToolActivateMgr.registerTool('mapTools', googleStreetViewActivate, false);\n\n  /**\n   * @type {ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.scaleSelectorOptions = {\n    dropup: true\n  };\n\n  /**\n   * @type {ol.geom.LineString}\n   * @export\n   */\n  this.profileLine = null;\n\n  gmfControllersAbstractAppController.call(this, config, $scope, $injector);\n\n  // Close the login panel on successful login.\n  $scope.$watch(() => this.gmfUser.username, (newVal) => {\n    if (newVal !== null && this.loginActive) {\n      this.loginActive = false;\n    }\n  });\n};\n\nolBase.inherits(exports, gmfControllersAbstractAppController);\n\nexports.module = angular.module('GmfAbstractDesktopControllerModule', [\n  gmfControllersAbstractAppController.module.name,\n  gmfContextualdataModule.name,\n  gmfDrawingModule.name,\n  gmfEditingModule.name,\n  gmfPermalinkShareComponent.name,\n  gmfPrintComponent.name,\n  gmfProfileModule.name,\n  gmfRasterComponent.name,\n  ngeoDrawFeatures.name,\n  ngeoMapResizemap.name,\n  ngeoQueryBboxQueryComponent.name,\n  gmfImportModule.name,\n]);\n\nexports.module.controller(\n  'AbstractDesktopController',\n  exports);\n\nexports.module.value('isDesktop', true);\n\nexports.module.value('ngeoQueryOptions', {\n  'limit': 20\n});\n\nexports.module.value('ngeoMeasurePrecision', 3);\nexports.module.value('ngeoMeasureDecimals', 0);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.editFeatureSelectorComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport gmfEditingEditFeatureComponent from 'gmf/editing/editFeatureComponent.js';\n\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfEditingFeatureSelectorComponent', [\n  gmfEditingEditFeatureComponent.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/editing/editFeatureSelectorComponent', require('./editFeatureSelectorComponent.html'));\n});\n\n\n/**\n * Directive that uses the GMF Theme service to collect the editable layers\n * and create a drop-down list out of them. When the user selects one of the\n * layer from the list, a `gmf-editfeature` directive is created and shown,\n * which allows the user to edit that layer.\n *\n * Example:\n *\n *     <gmf-editfeatureselector\n *         gmf-editfeatureselector-active=\"ctrl.editFeatureSelectorActive\"\n *         gmf-editfeatureselector-map=\"::ctrl.map\"\n *         gmf-editfeatureselector-tolerance=\"::ctrl.tolerance\"\n *         gmf-editfeatureselector-vector=\"::ctrl.vectorLayer\">\n *     </gmf-editfeatureselector>\n *\n * @htmlAttribute {boolean} gmf-editfeatureselector-active Whether the\n *     directive is active or not.\n * @htmlAttribute {ol.Map} gmf-editfeatureselector-map The map.\n * @htmlAttribute {number|undefined} gmf-editfeatureselector-tolerance The\n *     buffer in pixels to use when making queries to get the features.\n * @htmlAttribute {ol.layer.Vector} gmf-editfeatureselector-vector The vector\n *     layer where the selected or created features are drawn.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfEditfeatureselector\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfEditfeatureselectorController as efsCtrl',\n    scope: {\n      'active': '=gmfEditfeatureselectorActive',\n      'map': '<gmfEditfeatureselectorMap',\n      'tolerance': '<?gmfEditfeatureselectorTolerance',\n      'vectorLayer': '<gmfEditfeatureselectorVector'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/editing/editFeatureSelectorComponent'\n  };\n};\n\n\nexports.directive('gmfEditfeatureselector', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfEditfeatureselectorController\n */\nexports.Controller_ = function($scope, $timeout, gmfThemes, gmfTreeManager) {\n\n  // === Directive options ===\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = this.active === true;\n\n  $scope.$watch(\n    () => this.active,\n    this.handleActiveChange_.bind(this)\n  );\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.tolerance;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.vectorLayer;\n\n\n  // === Injected services ===\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @param {Array.<ngeo.layertree.Controller>} value First level controllers.\n   */\n  const updateEditableTreeCtrls = function(value) {\n    // Timeout required, because the collection event is fired before the\n    // leaf nodes are created and they are the ones we're looking for here.\n    this.$timeout_(() => {\n      if (value) {\n        const editables = this.editableTreeCtrls;\n\n        editables.length = 0;\n        this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.editable) {\n            googAsserts.assert(treeCtrl.children.length === 0);\n            editables.push(treeCtrl);\n          }\n        });\n      }\n    }, 0);\n  };\n\n  /**\n   * @type {function()}\n   * @private\n   */\n  this.treeCtrlsWatcherUnregister_ = $scope.$watchCollection(() => {\n    if (gmfTreeManager.rootCtrl) {\n      return gmfTreeManager.rootCtrl.children;\n    }\n  }, updateEditableTreeCtrls.bind(this));\n\n\n  // === Other inner properties ===\n\n  /**\n   * Flag shared with the `gmf-editfeature` directive used to determine if it\n   * has unsaved changes or not.\n   * @type {boolean}\n   * @export\n   */\n  this.dirty = false;\n\n  /**\n   * List of editable Layertree controllers.\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.editableTreeCtrls = [];\n\n  /**\n   * The currently selected Layertree controller.\n   * @type {?ngeo.layertree.Controller}\n   * @export\n   */\n  this.selectedEditableTreeCtrl = null;\n\n  $scope.$watch(\n    () => this.selectedEditableTreeCtrl,\n    (newValue, oldValue) => {\n      this.dirty = false;\n      this.state = gmfEditingEditFeatureComponent.State.IDLE;\n    }\n  );\n\n  /**\n   * The state of this directive shared with the `gmf-editfeature` directive.\n   * This property allows the proper management of the \"stop editing\" button.\n   * When clicked, the according state is set and the `gmf-editfeature`\n   * directive checks if it has unsaved changes and allow this directive to\n   * continue the action that was made or not.\n   * @type {string}\n   * @export\n   */\n  this.state = gmfEditingEditFeatureComponent.State.IDLE;\n\n  $scope.$watch(\n    () => this.state,\n    (newValue, oldValue) => {\n      if (newValue === gmfEditingEditFeatureComponent.State.STOP_EDITING_EXECUTE ||\n          newValue === gmfEditingEditFeatureComponent.State.DEACTIVATE_EXECUTE) {\n        this.selectedEditableTreeCtrl = null;\n      }\n      if (newValue === gmfEditingEditFeatureComponent.State.DEACTIVATE_EXECUTE) {\n        this.active = false;\n      }\n    }\n  );\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n\n};\n\n\n/**\n * Called when the 'stop editing' button is clicked. Set the 'state'\n * variable to 'pending' allow the editfeature directive to check if it can\n * stop or if it requires confirmation due to unsaved modifications.\n * @export\n */\nexports.Controller_.prototype.stopEditing = function() {\n  this.state = gmfEditingEditFeatureComponent.State.STOP_EDITING_PENDING;\n};\n\n\n/**\n * Called when the active property of the this directive changes. Manage\n * the activation/deactivation accordingly.\n * @param {boolean} active Whether the directive is active or not.\n * @private\n */\nexports.Controller_.prototype.handleActiveChange_ = function(active) {\n  if (!active) {\n    if (!this.dirty) {\n      this.stopEditing();\n    } else {\n      // There are unsaved modifications. Prevent the deactivation and\n      // set the state accordingly for the `gmf-editfeature` directive\n      // to manage the unsaved modifications.\n      // The changes are made inside a $timeout to be taken into account\n      // in the next digest cycle.\n      this.$timeout_(() => {\n        this.active = true;\n        this.stopEditing();\n      });\n    }\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.treeCtrlsWatcherUnregister_();\n};\n\n\nexports.controller('GmfEditfeatureselectorController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.module\n */\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\nimport gmfEditingEditFeatureComponent from 'gmf/editing/editFeatureComponent.js';\nimport gmfEditingEditFeatureSelectorComponent from 'gmf/editing/editFeatureSelectorComponent.js';\nimport gmfEditingEnumerateAttribute from 'gmf/editing/EnumerateAttribute.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport gmfEditingXSDAttributes from 'gmf/editing/XSDAttributes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfEditingModule', [\n  gmfEditingEditFeature.module.name,\n  gmfEditingEditFeatureComponent.name,\n  gmfEditingEditFeatureSelectorComponent.name,\n  gmfEditingEnumerateAttribute.module.name,\n  gmfEditingSnapping.module.name,\n  gmfEditingXSDAttributes.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.contextualdata.component\n */\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\nimport googAsserts from 'goog/asserts.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olProj from 'ol/proj.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfContextualdata', [\n  gmfRasterRasterService.module.name,\n]);\n\n\n/**\n * Provide a directive responsible of displaying contextual data after a right\n * click on the map.\n *\n * This directive doesn't require being rendered in a visible DOM element.\n * It's usually added to the element where the map directive is also added.\n *\n * Example:\n *\n *     <gmf-map gmf-map-map=\"mainCtrl.map\"\n *         gmf-contextualdata\n *         gmf-contextualdata-map=\"::mainCtrl.map\"\n *         gmf-contextualdata-projections=\"::[21781,4326]\">\n *\n * The content of the popover is managed in a partial that must be defined\n * using the `gmfContextualdatacontentTemplateUrl` value. See\n * {@link gmf.contextualdatacontentDirective} for more details.\n *\n * One can also provide a `gmf-contextualdata-callback` attribute in order to\n * do some additional computing on the coordinate or the values received for\n * the raster service. The callback function is called with the coordinate of\n * the clicked point and the response data from the server. It is intended to\n * return an object of additional properties to add to the scope.\n *\n * See the [../examples/contribs/gmf/contextualdata.html](../examples/contribs/gmf/contextualdata.html) example for a usage sample.\n *\n * @htmlAttribute {ol.Map} map The map.\n * @htmlAttribute {Array<number>} projections The list of projections.\n * @htmlAttribute {Function} callback A function called after server\n *    (raster) data is received in case some additional computing is required.\n *    Optional.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfContextualdata\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    scope: false,\n    controller: 'GmfContextualdataController as cdCtrl',\n    bindToController: {\n      'map': '<gmfContextualdataMap',\n      'projections': '<gmfContextualdataProjections',\n      'callback': '<gmfContextualdataCallback'\n    },\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {gmf.contextualdata.component.Controller_} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      controller.init();\n    }\n  };\n};\n\nexports.directive('gmfContextualdata',\n  exports.directive_);\n\n\n/**\n *\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {!angular.Scope} $scope Scope.\n * @param {gmf.raster.RasterService} gmfRaster Gmf Raster service\n *\n * @constructor\n * @private\n * @ngdoc controller\n * @ngInject\n */\nexports.Controller_ = function($compile, $timeout, $scope, gmfRaster) {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {Array<number>}\n   * @export\n   */\n  this.projections;\n\n  /**\n   * @type {function(ol.Coordinate, Object):Object}\n   * @export\n   */\n  this.callback;\n\n  /**\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.overlay_;\n\n  /**\n   * @type {angular.$compile}\n   * @private\n   */\n  this.$compile_ = $compile;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  angular.element('body').on('mousedown', this.hidePopover.bind(this));\n};\n\n/**\n *\n */\nexports.Controller_.prototype.init = function() {\n  this.preparePopover_();\n\n  const mapDiv = this.map.getTargetElement();\n  googAsserts.assertElement(mapDiv);\n\n  olEvents.listen(mapDiv, 'contextmenu',\n    this.handleMapContextMenu_, this);\n};\n\n/**\n * @param {!Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(event) {\n  this.$scope_.$apply(() => {\n    const pixel = this.map.getEventPixel(event);\n    const coordinate = this.map.getCoordinateFromPixel(pixel);\n    this.setContent_(coordinate);\n    event.preventDefault();\n    this.hidePopover();\n    this.showPopover();\n\n    // Use timeout to let the popover content to be rendered before displaying it.\n    this.timeout_(() => {\n      this.overlay_.setPosition(coordinate);\n    });\n  });\n};\n\nexports.Controller_.prototype.setContent_ = function(coordinate) {\n  const scope = this.$scope_.$new(true);\n  this.$compile_(this.content_)(scope);\n\n  const mapProjection = this.map.getView().getProjection().getCode();\n  this.projections.forEach((proj) => {\n    const coord = olProj.transform(coordinate, mapProjection, `EPSG:${proj}`);\n    scope[`coord_${proj}`] = coord;\n    scope[`coord_${proj}_eastern`] = coord[0];\n    scope[`coord_${proj}_northern`] = coord[1];\n  });\n\n  const getRasterSuccess = function(resp) {\n    olObj.assign(scope, resp);\n    if (this.callback) {\n      olObj.assign(scope, this.callback.call(this, coordinate, resp));\n    }\n  }.bind(this);\n  const getRasterError = function(resp) {\n    console.error('Error on getting the raster.');\n  };\n  this.gmfRaster_.getRaster(coordinate).then(\n    getRasterSuccess,\n    getRasterError\n  );\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.preparePopover_ = function() {\n\n  const container = document.createElement('DIV');\n  container.classList.add('popover');\n  container.classList.add('bottom');\n  container.classList.add('gmf-contextualdata');\n  angular.element(container).css('position', 'relative');\n  const arrow = document.createElement('DIV');\n  arrow.classList.add('arrow');\n  container.appendChild(arrow);\n  this.content_ = document.createElement('DIV');\n  this.content_.setAttribute('gmf-contextualdatacontent', '');\n  this.content_.classList.add('popover-content');\n  container.appendChild(this.content_);\n\n  this.overlay_ = new olOverlay({\n    element: container,\n    stopEvent: true,\n    autoPan: true,\n    autoPanAnimation: /** @type {olx.animation.PanOptions} */ ({\n      duration: 250\n    }),\n    positioning: 'top-center'\n  });\n  this.map.addOverlay(this.overlay_);\n};\n\nexports.Controller_.prototype.showPopover = function() {\n  const element = /** @type {Object} */ (this.overlay_.getElement());\n  angular.element(element).css('display', 'block');\n};\n\nexports.Controller_.prototype.hidePopover = function() {\n  const element = /** @type {Object} */ (this.overlay_.getElement());\n  angular.element(element).css('display', 'none');\n};\n\nexports.controller('GmfContextualdataController', exports.Controller_);\n\n\n/**\n * Provide a directive responsible of formatting the content of the popover for\n * the contextual data directive.\n *\n * Its main purpose is to configure the template to be used.\n * Integrators should ensure that the template values match the configuration\n * of the contextual data directive.\n *\n * For each projection the following expressions can be used (replace xxxx by\n * the relevant projection code:\n *  - {{coord_xxxx}},\n *  - {{coord_xxxx_eastern}},\n *  - {{coord_xxxx_northern}}\n *\n * Tip: one should use the `ngeoNumberCoordinates` and `ngeoDMSCoordinates`.\n *\n * The raster service is requested to query additional information. The\n * integrators can also use `{{xxxx}}` where `xxxx` will be replaced by\n * the name of the raster layers (for example 'srtm').\n *\n * See the [../examples/contribs/gmf/contextualdata.html](../examples/contribs/gmf/contextualdata.html) example for a usage sample.\n *\n * @param {string} gmfContextualdatacontentTemplateUrl Url to template.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfContextualdatacontent\n */\nexports.contentDirective_ = function(\n  gmfContextualdatacontentTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: gmfContextualdatacontentTemplateUrl\n  };\n};\n\nexports.directive('gmfContextualdatacontent', exports.contentDirective_);\n\n\nexport default exports;\n","/**\n * @module gmf.contextualdata.module\n */\nimport gmfContextualdataComponent from 'gmf/contextualdata/component.js';\n\nimport './contextualdata.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfContextualdataModule', [\n  gmfContextualdataComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.print.VectorEncoder\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport * as olMath from 'ol/math.js';\nimport olStyleIcon from 'ol/style/Icon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport * as olColor from 'ol/color.js';\n\n/**\n * @constructor\n */\nconst exports = function() {\n  /**\n   * @type {ol.format.GeoJSON}\n   */\n  this.geojsonFormat = new olFormatGeoJSON();\n};\n\n\n/**\n * @enum {string}\n */\nexports.PrintStyleType = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.print.VectorEncoder.PrintStyleType>}\n * @private\n */\nexports.PrintStyleTypes_ = {\n  'LineString': exports.PrintStyleType.LINE_STRING,\n  'Point': exports.PrintStyleType.POINT,\n  'Polygon': exports.PrintStyleType.POLYGON,\n  'MultiLineString': exports.PrintStyleType.LINE_STRING,\n  'MultiPoint': exports.PrintStyleType.POINT,\n  'MultiPolygon': exports.PrintStyleType.POLYGON\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Vector} layer Layer.\n * @param {number} resolution Resolution.\n */\nexports.prototype.encodeVectorLayer = function(arr, layer, resolution) {\n  const source = layer.getSource();\n  googAsserts.assertInstanceof(source, olSourceVector);\n\n  const features = source.getFeatures();\n\n  const /** @type {Array.<GeoJSONFeature>} */ geojsonFeatures = [];\n  const mapfishStyleObject = /** @type {MapFishPrintVectorStyle} */ ({\n    version: 2\n  });\n\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    const originalFeature = features[i];\n\n    let styleData = null;\n    let styleFunction = originalFeature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      styleData = styleFunction.call(originalFeature, resolution);\n    } else {\n      styleFunction = layer.getStyleFunction();\n      if (styleFunction !== undefined) {\n        styleData = styleFunction.call(layer, originalFeature, resolution);\n      }\n    }\n    const origGeojsonFeature = this.geojsonFormat.writeFeatureObject(originalFeature);\n    /**\n     * @type {Array<ol.style.Style>}\n     */\n    const styles = (styleData !== null && !Array.isArray(styleData)) ? [styleData] : styleData;\n    googAsserts.assert(Array.isArray(styles));\n\n    if (styles !== null && styles.length > 0) {\n      let isOriginalFeatureAdded = false;\n      for (let j = 0, jj = styles.length; j < jj; ++j) {\n        const style = styles[j];\n        const styleId = olBase.getUid(style).toString();\n        let geometry = style.getGeometry();\n        let geojsonFeature;\n        if (!geometry) {\n          geojsonFeature = origGeojsonFeature;\n          geometry = originalFeature.getGeometry();\n          // no need to encode features with no geometry\n          if (!geometry) {\n            continue;\n          }\n          if (!isOriginalFeatureAdded) {\n            geojsonFeatures.push(geojsonFeature);\n            isOriginalFeatureAdded = true;\n          }\n        } else {\n          let styledFeature = originalFeature.clone();\n          styledFeature.setGeometry(geometry);\n          geojsonFeature = this.geojsonFormat.writeFeatureObject(styledFeature);\n          geometry = styledFeature.getGeometry();\n          styledFeature = null;\n          geojsonFeatures.push(geojsonFeature);\n        }\n\n        const geometryType = geometry.getType();\n        if (geojsonFeature.properties === null) {\n          geojsonFeature.properties = {};\n        }\n\n        const featureStyleProp = `_ngeo_style_${j}`;\n        this.encodeVectorStyle(mapfishStyleObject, geometryType, style, styleId, featureStyleProp);\n        geojsonFeature.properties[featureStyleProp] = styleId;\n      }\n    }\n  }\n\n  // MapFish Print fails if there are no style rules, even if there are no\n  // features either. To work around this we just ignore the layer if the\n  // array of GeoJSON features is empty.\n  // See https://github.com/mapfish/mapfish-print/issues/279\n\n  if (geojsonFeatures.length > 0) {\n    const geojsonFeatureCollection = /** @type {GeoJSONFeatureCollection} */ ({\n      type: 'FeatureCollection',\n      features: geojsonFeatures\n    });\n    const object = /** @type {MapFishPrintVectorLayer} */ ({\n      geoJson: geojsonFeatureCollection,\n      opacity: layer.getOpacity(),\n      style: mapfishStyleObject,\n      type: 'geojson'\n    });\n    arr.push(object);\n  }\n};\n\n\n/**\n * @param {MapFishPrintVectorStyle} object MapFish style object.\n * @param {ol.geom.GeometryType} geometryType Type of the GeoJSON geometry\n * @param {ol.style.Style} style Style.\n * @param {string} styleId Style id.\n * @param {string} featureStyleProp Feature style property name.\n */\nexports.prototype.encodeVectorStyle = function(object, geometryType, style, styleId, featureStyleProp) {\n  if (!(geometryType in exports.PrintStyleTypes_)) {\n    // unsupported geometry type\n    return;\n  }\n  const styleType = exports.PrintStyleTypes_[geometryType];\n  const key = `[${featureStyleProp} = '${styleId}']`;\n  if (key in object) {\n    // do nothing if we already have a style object for this CQL rule\n    return;\n  }\n  const styleObject = /** @type {MapFishPrintSymbolizers} */ ({\n    symbolizers: []\n  });\n  object[key] = styleObject;\n  const fillStyle = style.getFill();\n  const imageStyle = style.getImage();\n  const strokeStyle = style.getStroke();\n  const textStyle = style.getText();\n  if (styleType === exports.PrintStyleType.POLYGON) {\n    if (fillStyle !== null) {\n      this.encodeVectorStylePolygon(\n        styleObject.symbolizers, fillStyle, strokeStyle);\n    }\n  } else if (styleType === exports.PrintStyleType.LINE_STRING) {\n    if (strokeStyle !== null) {\n      this.encodeVectorStyleLine(styleObject.symbolizers, strokeStyle);\n    }\n  } else if (styleType === exports.PrintStyleType.POINT) {\n    if (imageStyle !== null) {\n      this.encodeVectorStylePoint(styleObject.symbolizers, imageStyle);\n    }\n  }\n  if (textStyle !== null) {\n    this.encodeTextStyle(styleObject.symbolizers, textStyle);\n  }\n};\n\n\n/**\n * @param {MapFishPrintSymbolizerPoint|MapFishPrintSymbolizerPolygon} symbolizer MapFish Print symbolizer.\n * @param {!ol.style.Fill} fillStyle Fill style.\n * @protected\n */\nexports.prototype.encodeVectorStyleFill = function(symbolizer, fillStyle) {\n  let fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(typeof fillColor === 'string' || Array.isArray(fillColor));\n    fillColor = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    symbolizer.fillColor = ngeoUtils.rgbArrayToHex(fillColor);\n    symbolizer.fillOpacity = fillColor[3];\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStyleLine = function(symbolizers, strokeStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerLine} */ ({\n    type: 'line'\n  });\n  this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n  symbolizers.push(symbolizer);\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Image} imageStyle Image style.\n * @protected\n */\nexports.prototype.encodeVectorStylePoint = function(symbolizers, imageStyle) {\n  let symbolizer;\n  if (imageStyle instanceof olStyleCircle) {\n    symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n      type: 'point'\n    });\n    symbolizer.pointRadius = imageStyle.getRadius();\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      this.encodeVectorStyleFill(symbolizer, fillStyle);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n    }\n  } else if (imageStyle instanceof olStyleIcon) {\n    const src = imageStyle.getSrc();\n    if (src !== undefined) {\n      symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n        type: 'point',\n        externalGraphic: src\n      });\n      const opacity = imageStyle.getOpacity();\n      if (opacity !== null) {\n        symbolizer.graphicOpacity = opacity;\n      }\n      const size = imageStyle.getSize();\n      if (size !== null) {\n        let scale = imageStyle.getScale();\n        if (isNaN(scale)) {\n          scale = 1;\n        }\n        symbolizer.graphicWidth = size[0] * scale;\n        symbolizer.graphicHeight = size[1] * scale;\n      }\n      let rotation = imageStyle.getRotation();\n      if (isNaN(rotation)) {\n        rotation = 0;\n      }\n      symbolizer.rotation = olMath.toDegrees(rotation);\n    }\n  } else if (imageStyle instanceof olStyleRegularShape) {\n    /**\n     * Mapfish Print does not support image defined with ol.style.RegularShape.\n     * As a workaround, I try to map the image on a well-known image name.\n     */\n    const points = /** @type {ol.style.RegularShape} */ (imageStyle).getPoints();\n    if (points !== null) {\n      symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n        type: 'point'\n      });\n      if (points === 4) {\n        symbolizer.graphicName = 'square';\n      } else if (points === 3) {\n        symbolizer.graphicName = 'triangle';\n      } else if (points === 5) {\n        symbolizer.graphicName = 'star';\n      } else if (points === 8) {\n        symbolizer.graphicName = 'cross';\n      }\n      const sizeShape = imageStyle.getSize();\n      if (sizeShape !== null) {\n        symbolizer.graphicWidth = sizeShape[0];\n        symbolizer.graphicHeight = sizeShape[1];\n      }\n      const rotationShape = imageStyle.getRotation();\n      if (!isNaN(rotationShape) && rotationShape !== 0) {\n        symbolizer.rotation = olMath.toDegrees(rotationShape);\n      }\n      const opacityShape = imageStyle.getOpacity();\n      if (opacityShape !== null) {\n        symbolizer.graphicOpacity = opacityShape;\n      }\n      const strokeShape = imageStyle.getStroke();\n      if (strokeShape !== null) {\n        this.encodeVectorStyleStroke(symbolizer, strokeShape);\n      }\n      const fillShape = imageStyle.getFill();\n      if (fillShape !== null) {\n        this.encodeVectorStyleFill(symbolizer, fillShape);\n      }\n    }\n  }\n  if (symbolizer !== undefined) {\n    symbolizers.push(symbolizer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStylePolygon = function(symbolizers, fillStyle, strokeStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerPolygon} */ ({\n    type: 'polygon'\n  });\n  this.encodeVectorStyleFill(symbolizer, fillStyle);\n  if (strokeStyle !== null) {\n    this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n  }\n  symbolizers.push(symbolizer);\n};\n\n\n/**\n * @param {MapFishPrintSymbolizerPoint|MapFishPrintSymbolizerLine|MapFishPrintSymbolizerPolygon}\n *      symbolizer MapFish Print symbolizer.\n * @param {!ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStyleStroke = function(symbolizer, strokeStyle) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(typeof strokeColor === 'string' || Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    symbolizer.strokeColor = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    symbolizer.strokeOpacity = strokeColorRgba[3];\n  }\n  const strokeDashstyle = strokeStyle.getLineDash();\n  if (strokeDashstyle !== null) {\n    symbolizer.strokeDashstyle = strokeDashstyle.join(' ');\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    symbolizer.strokeWidth = strokeWidth;\n  }\n  const strokeLineCap = strokeStyle.getLineCap();\n  if (strokeLineCap) {\n    symbolizer.strokeLinecap = strokeStyle.getLineCap();\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizerText>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Text} textStyle Text style.\n * @protected\n */\nexports.prototype.encodeTextStyle = function(symbolizers, textStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerText} */ ({\n    type: 'Text'\n  });\n  const label = textStyle.getText();\n  if (label !== undefined) {\n    symbolizer.label = label;\n    let xAlign = 'c';\n    let yAlign = 'm';\n\n    const olTextAlign = textStyle.getTextAlign();\n    // 'left', 'right', 'center', 'end' or 'start'.\n    if (olTextAlign === 'left' || olTextAlign === 'start') {\n      xAlign = 'l';\n    } else if (olTextAlign === 'right' || olTextAlign === 'end') {\n      xAlign = 'r';\n    }\n\n    const olTextBaseline = textStyle.getTextBaseline();\n    // 'bottom', 'top', 'middle', 'alphabetic', 'hanging' or 'ideographic'\n    if (olTextBaseline === 'bottom') {\n      yAlign = 'l';\n    } else if (olTextBaseline === 'top') {\n      yAlign = 't';\n    }\n    symbolizer.labelAlign = `${xAlign}${yAlign}`;\n\n    const labelRotation = textStyle.getRotation();\n    if (labelRotation !== undefined) {\n      // Mapfish Print expects a string, not a number to rotate text\n      symbolizer.labelRotation = (labelRotation * 180 / Math.PI).toString();\n      // rotate around the vertical/horizontal center\n      symbolizer.labelAlign = 'cm';\n    }\n\n    const fontStyle = textStyle.getFont();\n    if (fontStyle !== undefined) {\n      const font = fontStyle.split(' ');\n      if (font.length >= 3) {\n        symbolizer.fontWeight = font[0];\n        symbolizer.fontSize = font[1];\n        symbolizer.fontFamily = font.splice(2).join(' ');\n      }\n    }\n\n    const strokeStyle = textStyle.getStroke();\n    if (strokeStyle !== null) {\n      const strokeColor = strokeStyle.getColor();\n      googAsserts.assert(typeof strokeColor === 'string' || Array.isArray(strokeColor));\n      const strokeColorRgba = olColor.asArray(strokeColor);\n      googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n      symbolizer.haloColor = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n      symbolizer.haloOpacity = strokeColorRgba[3];\n      const width = strokeStyle.getWidth();\n      if (width !== undefined) {\n        // Width is a stroke, radius a radius, so divide by 2\n        symbolizer.haloRadius = width / 2;\n      }\n    }\n\n    const fillStyle = textStyle.getFill();\n    if (fillStyle !== null) {\n      const fillColor = fillStyle.getColor();\n      googAsserts.assert(typeof fillColor === 'string' || Array.isArray(fillColor));\n      const fillColorRgba = olColor.asArray(fillColor);\n      googAsserts.assert(Array.isArray(fillColorRgba), 'only supporting fill colors');\n      symbolizer.fontColor = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    }\n\n    // Mapfish Print allows offset only if labelAlign is defined.\n    if (symbolizer.labelAlign !== undefined) {\n      symbolizer.labelXOffset = textStyle.getOffsetX();\n      // Mapfish uses the opposite direction of OpenLayers for y axis, so the\n      // minus sign is required for the y offset to be identical.\n      symbolizer.labelYOffset = -textStyle.getOffsetY();\n    }\n\n    symbolizers.push(symbolizer);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.print.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoPrintVectorEncoder from 'ngeo/print/VectorEncoder.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olArray from 'ol/array.js';\nimport * as olObj from 'ol/obj.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olMath from 'ol/math.js';\nimport * as olSize from 'ol/size.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport olTilegridWMTS from 'ol/tilegrid/WMTS.js';\n\n/**\n * Provides a function to create ngeo.print.Service objects used to\n * interact with MapFish Print v3 services.\n *\n * ngeo.print.Service objects expose the following methods:\n *\n * - createSpec: create a report specification object\n * - createReport: send a create report request\n * - getStatus: get the status of a report\n * - getReportUrl: get the URL of a report\n * - getCapabilities: get the capabilities of the server\n *\n *\n *     let printBaseUrl = 'http://example.com/print';\n *     let print = new ngeo.print.Service(printBaseUrl);\n *\n *     let scale = 5000;\n *     let dpi = 72;\n *     let layout = 'A4 portrait';\n *     let format = 'pdf';\n *     let reportSpec = print.createSpec(map, scale, dpi, layout, format, {\n *       'title': 'A title for my report',\n *       'rotation': 45 // degree\n *     });\n *\n * See our live example: [../examples/mapfishprint.html](../examples/mapfishprint.html)\n *\n * TODO and limitations:\n *\n * - createSpec should also accept a bbox instead of a center and a scale.\n * - Add support for ol.style.RegularShape. MapFish Print supports symbols\n *   like crosses, stars and squares, so printing regular shapes should be\n *   possible.\n * - ol.style.Icon may use a sprite image, and offsets to define to rectangle\n *   to use within the sprite. This type of icons won't be printed correctly\n *   as MapFish Print does not support sprite icons.\n *\n * @constructor\n * @struct\n * @param {string} url URL to MapFish print web service.\n * @param {angular.$http} $http Angular $http service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper service.\n */\nconst exports = function(url, $http, gettextCatalog, ngeoLayerHelper) {\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = url;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.print.VectorEncoder}\n   * @private\n   */\n  this.vectorEncoder_ = new ngeoPrintVectorEncoder();\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.printNativeAngle_ = true;\n};\n\n\n/**\n * Cancel a report.\n * @param {string} ref Print report reference.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.cancel = function(ref, opt_httpConfig) {\n  const httpConfig = opt_httpConfig !== undefined ? opt_httpConfig :\n    /** @type {angular.$http.Config} */ ({});\n  const url = `${this.url_}/cancel/${ref}`;\n  // \"delete\" is a reserved word, so use ['delete']\n  return this.$http_['delete'](url, httpConfig);\n};\n\n\n/**\n * Create a report specification.\n * @param {ol.Map} map Map.\n * @param {number} scale Scale.\n * @param {number} dpi DPI.\n * @param {string} layout Layout.\n * @param {string} format Formats.\n * @param {Object.<string, *>} customAttributes Custom attributes.\n * @return {MapFishPrintSpec} The print spec.\n * @export\n */\nexports.prototype.createSpec = function(\n  map, scale, dpi, layout, format, customAttributes) {\n\n  const specMap = /** @type {MapFishPrintMap} */ ({\n    dpi: dpi,\n    rotation: /** number */ (customAttributes['rotation'])\n  });\n\n  this.encodeMap_(map, scale, specMap);\n\n  const attributes = /** @type {!MapFishPrintAttributes} */ ({\n    map: specMap\n  });\n  olObj.assign(attributes, customAttributes);\n\n  const lang = this.gettextCatalog_.currentLanguage;\n\n  const spec = /** @type {MapFishPrintSpec} */ ({\n    attributes,\n    format,\n    lang,\n    layout\n  });\n\n  return spec;\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @param {number} scale Scale.\n * @param {MapFishPrintMap} object Object.\n * @private\n */\nexports.prototype.encodeMap_ = function(map, scale, object) {\n  const view = map.getView();\n  const viewCenter = view.getCenter();\n  const viewProjection = view.getProjection();\n  const viewResolution = view.getResolution();\n  const viewRotation = object.rotation || olMath.toDegrees(view.getRotation());\n\n  googAsserts.assert(viewCenter !== undefined);\n  googAsserts.assert(viewProjection !== undefined);\n\n  object.center = viewCenter;\n  object.projection = viewProjection.getCode();\n  object.rotation = viewRotation;\n  object.scale = scale;\n  object.layers = [];\n\n  const mapLayerGroup = map.getLayerGroup();\n  googAsserts.assert(mapLayerGroup);\n  this.printNativeAngle_ = !(mapLayerGroup.get('printNativeAngle') === false);\n  let layers = this.ngeoLayerHelper_.getFlatLayers(mapLayerGroup);\n\n  // Sort the layer by ZIndex\n  olArray.stableSort(layers, (layer_a, layer_b) => layer_a.getZIndex() - layer_b.getZIndex());\n  layers = layers.slice().reverse();\n\n  layers.forEach((layer) => {\n    if (layer.getVisible()) {\n      googAsserts.assert(viewResolution !== undefined);\n      this.encodeLayer(object.layers, layer, viewResolution);\n    }\n  });\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Base} layer Layer.\n * @param {number} resolution Resolution.\n */\nexports.prototype.encodeLayer = function(arr, layer, resolution) {\n  if (layer instanceof olLayerImage) {\n    this.encodeImageLayer_(arr, layer);\n  } else if (layer instanceof olLayerTile) {\n    this.encodeTileLayer_(arr, layer);\n  } else if (layer instanceof olLayerVector) {\n    this.vectorEncoder_.encodeVectorLayer(arr, layer, resolution);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Image} layer Layer.\n * @private\n */\nexports.prototype.encodeImageLayer_ = function(arr, layer) {\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  const source = layer.getSource();\n  if (source instanceof olSourceImageWMS) {\n    this.encodeImageWmsLayer_(arr, layer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Image} layer Layer.\n * @private\n */\nexports.prototype.encodeImageWmsLayer_ = function(arr, layer) {\n  const source = layer.getSource();\n\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  googAsserts.assertInstanceof(source, olSourceImageWMS);\n\n  const url = source.getUrl();\n  if (url !== undefined) {\n    this.encodeWmsLayer_(\n      arr, layer.getOpacity(), url, source.getParams());\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {number} opacity Opacity of the layer.\n * @param {string} url Url of the WMS server.\n * @param {Object} params Url parameters\n * @private\n */\nexports.prototype.encodeWmsLayer_ = function(arr, opacity, url, params) {\n  if (url.startsWith('//')) {\n    url = window.location.protocol  + url;\n  }\n  const url_url = new URL(url);\n  const customParams = {'TRANSPARENT': true};\n  if (url_url.searchParams) {\n    for (const element of url_url.searchParams) {\n      customParams[element[0]] = element[1];\n    }\n  }\n  for (const key in params) {\n    const value = params[key];\n    // remove empty params\n    if (value !== null && value !== undefined) {\n      customParams[key] = value;\n    }\n  }\n  delete customParams['LAYERS'];\n  delete customParams['FORMAT'];\n  delete customParams['SERVERTYPE'];\n  delete customParams['VERSION'];\n\n  const object = /** @type {MapFishPrintWmsLayer} */ ({\n    baseURL: exports.getAbsoluteUrl_(url_url.origin + url_url.pathname),\n    imageFormat: 'FORMAT' in params ? params['FORMAT'] : 'image/png',\n    layers: params['LAYERS'].split(','),\n    customParams: customParams,\n    serverType: params['SERVERTYPE'],\n    type: 'wms',\n    opacity: opacity,\n    version: params['VERSION'],\n    useNativeAngle: this.printNativeAngle_,\n  });\n  arr.push(object);\n};\n\n\n/**\n * @param {string} url URL.\n * @return {string} Absolute URL.\n * @private\n */\nexports.getAbsoluteUrl_ = function(url) {\n  const a = document.createElement('a');\n  a.href = encodeURI(url);\n  return decodeURI(a.href);\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileLayer_ = function(arr, layer) {\n  googAsserts.assertInstanceof(layer, olLayerTile);\n  const source = layer.getSource();\n  if (source instanceof olSourceWMTS) {\n    this.encodeTileWmtsLayer_(arr, layer);\n  } else if (source instanceof olSourceTileWMS) {\n    this.encodeTileWmsLayer_(arr, layer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileWmtsLayer_ = function(arr, layer) {\n  googAsserts.assertInstanceof(layer, olLayerTile);\n  const source = layer.getSource();\n  googAsserts.assertInstanceof(source, olSourceWMTS);\n\n  const projection = source.getProjection();\n  const tileGrid = source.getTileGrid();\n  googAsserts.assertInstanceof(tileGrid, olTilegridWMTS);\n  const matrixIds = tileGrid.getMatrixIds();\n\n  /** @type {Array.<MapFishPrintWmtsMatrix>} */\n  const matrices = [];\n\n  for (let i = 0, ii = matrixIds.length; i < ii; ++i) {\n    const tileRange = tileGrid.getFullTileRange(i);\n    matrices.push(/** @type {MapFishPrintWmtsMatrix} */ ({\n      identifier: matrixIds[i],\n      scaleDenominator: tileGrid.getResolution(i) *\n          projection.getMetersPerUnit() / 0.28E-3,\n      tileSize: olSize.toSize(tileGrid.getTileSize(i)),\n      topLeftCorner: tileGrid.getOrigin(i),\n      matrixSize: [\n        tileRange.maxX - tileRange.minX,\n        tileRange.maxY - tileRange.minY\n      ]\n    }));\n  }\n\n  const dimensions = source.getDimensions();\n  const dimensionKeys = Object.keys(dimensions);\n\n  const object = /** @type {MapFishPrintWmtsLayer} */ ({\n    baseURL: this.getWmtsUrl_(source),\n    dimensions: dimensionKeys,\n    dimensionParams: dimensions,\n    imageFormat: source.getFormat(),\n    layer: source.getLayer(),\n    matrices: matrices,\n    matrixSet: source.getMatrixSet(),\n    opacity: layer.getOpacity(),\n    requestEncoding: source.getRequestEncoding(),\n    style: source.getStyle(),\n    type: 'WMTS',\n    version: source.getVersion()\n  });\n\n  arr.push(object);\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileWmsLayer_ = function(arr, layer) {\n  const source = layer.getSource();\n\n  googAsserts.assertInstanceof(layer, olLayerTile);\n  googAsserts.assertInstanceof(source, olSourceTileWMS);\n\n  this.encodeWmsLayer_(\n    arr, layer.getOpacity(), source.getUrls()[0], source.getParams());\n};\n\n\n/**\n * Return the WMTS URL to use in the print spec.\n * @param {ol.source.WMTS} source The WMTS source.\n * @return {string} URL.\n * @private\n */\nexports.prototype.getWmtsUrl_ = function(source) {\n  const urls = source.getUrls();\n  googAsserts.assert(urls.length > 0);\n  return exports.getAbsoluteUrl_(urls[0]);\n};\n\n\n/**\n * Send a create report request to the MapFish Print service.\n * @param {MapFishPrintSpec} printSpec Print specification.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.createReport = function(printSpec, opt_httpConfig) {\n  const format = printSpec.format || 'pdf';\n  const url = `${this.url_}/report.${format}`;\n  const httpConfig = /** @type {!angular.$http.Config} */ ({\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8'\n    }\n  });\n  olObj.assign(httpConfig,\n    opt_httpConfig !== undefined ? opt_httpConfig : {});\n  return this.$http_.post(url, printSpec, httpConfig);\n};\n\n\n/**\n * Get the status of a report.\n * @param {string} ref Print report reference.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.getStatus = function(ref, opt_httpConfig) {\n  const httpConfig = opt_httpConfig !== undefined ? opt_httpConfig :\n    /** @type {angular.$http.Config} */ ({});\n  const url = `${this.url_}/status/${ref}.json`;\n  return this.$http_.get(url, httpConfig);\n};\n\n\n/**\n * Get the URL of a report.\n * @param {string} ref Print report reference.\n * @return {string} The report URL for this ref.\n * @export\n */\nexports.prototype.getReportUrl = function(ref) {\n  return `${this.url_}/report/${ref}`;\n};\n\n\n/**\n * Get the print capabilities from MapFish Print.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n */\nexports.prototype.getCapabilities = function(opt_httpConfig) {\n  const httpConfig =\n    opt_httpConfig !== undefined ? opt_httpConfig : /** @type {angular.$http.Config} */ ({\n      withCredentials: true\n    });\n  const url = `${this.url_}/capabilities.json`;\n  return this.$http_.get(url, httpConfig);\n};\n\n\n/**\n * @param {angular.$http} $http Angular $http service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @return {ngeox.CreatePrint} The function to create a print service.\n * @ngInject\n * @ngdoc service\n * @ngname ngeoCreatePrint\n */\nexports.createPrintServiceFactory = function($http, gettextCatalog, ngeoLayerHelper) {\n  return (\n    /**\n     * @param {string} url URL to MapFish print service.\n     */\n    function(url) {\n      return new exports(url, $http, gettextCatalog, ngeoLayerHelper);\n    }\n  );\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoPrint', [\n  ngeoMapLayerHelper.module.name\n]);\nexports.module.service('ngeoPrintService', exports);\nexports.module.factory('ngeoCreatePrint', exports.createPrintServiceFactory);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport * as olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complete then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.search.createGeoJSONBloodhound\n */\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olObj from 'ol/obj.js';\n\nimport 'corejs-typeahead';\n\n\n/**\n * @param {string} url an URL to a search service.\n * @param {(function(GeoJSONFeature): boolean)=} opt_filter function to filter\n *     results.\n * @param {ol.proj.Projection=} opt_featureProjection Feature projection.\n * @param {ol.proj.Projection=} opt_dataProjection Data projection.\n * @param {BloodhoundOptions=} opt_options optional Bloodhound options. If\n *     undefined, the default Bloodhound config will be used.\n * @param {BloodhoundRemoteOptions=} opt_remoteOptions optional Bloodhound\n * remote options. Effective only if `remote` is not defined in `opt_options`.\n * @return {Bloodhound} The Bloodhound object.\n */\nconst exports = function(url, opt_filter, opt_featureProjection,\n  opt_dataProjection, opt_options, opt_remoteOptions) {\n  const geojsonFormat = new olFormatGeoJSON();\n  const bloodhoundOptions = /** @type {BloodhoundOptions} */ ({\n    remote: {\n      url,\n      prepare(query, settings) {\n        settings.url = settings.url.replace('%QUERY', query);\n        return settings;\n      },\n      transform(parsedResponse) {\n        /** @type {GeoJSONFeatureCollection} */\n        let featureCollection = /** @type {GeoJSONFeatureCollection} */\n            (parsedResponse);\n        if (opt_filter !== undefined) {\n          featureCollection = /** @type {GeoJSONFeatureCollection} */ ({\n            type: 'FeatureCollection',\n            features: featureCollection.features.filter(opt_filter)\n          });\n        }\n\n        return geojsonFormat.readFeatures(featureCollection, {\n          featureProjection: opt_featureProjection,\n          dataProjection: opt_dataProjection\n        });\n      }\n    },\n    // datumTokenizer is required by the Bloodhound constructor but it\n    // is not used when only a remote is passsed to Bloodhound.\n    datumTokenizer: () => {},\n    queryTokenizer: Bloodhound.tokenizers.whitespace\n  });\n\n  // the options objects are cloned to avoid updating the passed object\n  const options = olObj.assign({}, opt_options || {});\n  const remoteOptions = olObj.assign({}, opt_remoteOptions || {});\n\n  if (options.remote) {\n    // move the remote options to opt_remoteOptions\n    olObj.assign(remoteOptions, options.remote);\n    delete options.remote;\n  }\n\n  olObj.assign(bloodhoundOptions, options);\n  olObj.assign(bloodhoundOptions.remote, remoteOptions);\n\n  return new Bloodhound(bloodhoundOptions);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSearchCreategeojsonbloodhound', []);\n\nexports.module.value(\n  'ngeoSearchCreateGeoJSONBloodhound',\n  exports);\n\n\n/**\n * Provides a function that creates a Bloodhound engine\n * expecting GeoJSON responses from the search web service, which creates\n * `ol.Feature` objects as suggestions.\n *\n * Example:\n *\n *     let bloodhound = createGeoJSONBloodhound(\n *       'http://example.com/fulltextsearch?query=%QUERY',\n *       aFilterFunction,\n *       ol.proj.get('EPSG:3857'));\n *     bloodhound.initialize();\n *\n *     let bloodhound = createGeoJSONBloodhound(\n *       '',\n *       undefined,\n *       ol.proj.get('EPSG:3857'),\n *       ol.proj.get('EPSG:21781'),\n *       {\n *         remote: {\n *           url: mySearchEngineUrl,\n *           replace: function(url, query) {\n *             return url +\n *                 '?qtext=' + encodeURIComponent(query) +\n *                 '&lang=' + gettextCatalog.currentLanguage;\n *           }\n *         }\n *       }\n *     );\n *     bloodhound.initialize();\n *\n * @typedef {function(string, (function(GeoJSONFeature): boolean)=,\n * ol.proj.Projection=, ol.proj.Projection=, BloodhoundOptions=,\n * BloodhoundRemoteOptions=):Bloodhound}\n * @ngdoc service\n * @ngname search.createGeoJSONBloodhound\n */\nexports.Function;\n\n\nexport default exports;\n","/**\n * @module ngeo.search.createLocationSearchBloodhound\n */\nimport * as olObj from 'ol/obj.js';\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olFeature from 'ol/Feature.js';\n\nimport 'corejs-typeahead';\n\n\n/**\n * @param {ngeox.search.LocationSearchOptions=} opt_options Options.\n * @return {Bloodhound} The Bloodhound object.\n */\nconst exports = function(opt_options) {\n  const options = opt_options || {};\n\n  const sourceProjection = olProj.get(ngeoProjEPSG21781);\n  const targetProjection = options.targetProjection;\n\n  /**\n   * @param {string} bbox Bbox string.\n   * @return {?ol.Extent} Parsed extent.\n   */\n  const parseBbox = (bbox) => {\n    const regex = /BOX\\((.*?) (.*?),(.*?) (.*?)\\)/g;\n    const match = regex.exec(bbox);\n    if (match !== null) {\n      return [\n        parseFloat(match[1]),\n        parseFloat(match[2]),\n        parseFloat(match[3]),\n        parseFloat(match[4])\n      ];\n    } else {\n      return null;\n    }\n  };\n\n  const removeHtmlTags = label => label.replace(/<\\/?[ib]>/g, '');\n\n  const extractName = (label) => {\n    const regex = /<b>(.*?)<\\/b>/g;\n    const match = regex.exec(label);\n    if (match !== null) {\n      return match[1];\n    } else {\n      return label;\n    }\n  };\n\n  const bloodhoundOptions = /** @type {BloodhoundOptions} */ ({\n    remote: {\n      url: 'https://api3.geo.admin.ch/rest/services/api/SearchServer?type=locations&searchText=%QUERY',\n      prepare: (query, settings) => {\n        settings.url = settings.url.replace('%QUERY', query);\n        if (options.limit !== undefined) {\n          settings.url += `&limit=${options.limit}`;\n        }\n        if (options.origins !== undefined) {\n          settings.url += `&origins=${options.origins}`;\n        }\n\n        return (options.prepare !== undefined) ?\n          options.prepare(query, settings) : settings;\n      },\n      transform: (/** @type {geoAdminx.SearchLocationResponse} */ parsedResponse) => {\n        const features = parsedResponse.results.map((/** @type {geoAdminx.SearchLocationResult} */ result) => {\n          const attrs = result.attrs;\n\n          // note that x and y are switched!\n          const point = new olGeomPoint([attrs.y, attrs.x]);\n          let bbox = parseBbox(attrs.geom_st_box2d);\n          if (targetProjection !== undefined) {\n            point.transform(sourceProjection, targetProjection);\n            if (bbox !== null) {\n              bbox = olProj.transformExtent(bbox, sourceProjection, targetProjection);\n            }\n          }\n\n          attrs['geometry'] = point;\n          attrs['bbox'] = bbox;\n\n          // create a label without HTML tags\n          const label = attrs.label;\n          attrs['label_no_html'] = removeHtmlTags(label);\n          attrs['label_simple'] = extractName(label);\n\n          const feature = new olFeature(attrs);\n          feature.setId(attrs.featureId);\n\n          return feature;\n        });\n\n        return features;\n      }\n    },\n    // datumTokenizer is required by the Bloodhound constructor but it\n    // is not used when only a remote is passsed to Bloodhound.\n    datumTokenizer: () => {},\n    queryTokenizer: Bloodhound.tokenizers.whitespace\n  });\n\n  // the options objects are cloned to avoid updating the passed object\n  const bhOptions = olObj.assign({}, options.options || {});\n  const remoteOptions = olObj.assign({}, options.remoteOptions || {});\n\n  if (bhOptions.remote) {\n    // move the remote options to opt_remoteOptions\n    olObj.assign(remoteOptions, bhOptions.remote);\n    delete bhOptions.remote;\n  }\n\n  olObj.assign(bloodhoundOptions, bhOptions);\n  olObj.assign(bloodhoundOptions.remote, remoteOptions);\n\n  return new Bloodhound(bloodhoundOptions);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoCreateLocationSearchBloodhound', []);\n\nexports.module.value(\n  'ngeoCreateLocationSearchBloodhound',\n  exports);\n\n\n/**\n * Provides a function that creates a Bloodhound engine\n * for the GeoAdmin Location Search API, which creates `ol.Feature` objects\n * as suggestions.\n *\n * See: http://api3.geo.admin.ch/services/sdiservices.html#search\n *\n * Example:\n *\n *     let bloodhound = ngeoCreateLocationSearchBloodhound({\n *       targetProjection: ol.proj.get('EPSG:3857'),\n *       limit: 10\n *     });\n *     bloodhound.initialize();\n *\n * @typedef {function(ngeox.search.LocationSearchOptions=):Bloodhound}\n * @ngdoc service\n * @ngname search.createLocationSearchBloodhound\n */\nexports.Function;\n\n\nexport default exports;\n","/**\n * @module ngeo.search.module\n */\nimport ngeoSearchSearchDirective from 'ngeo/search/searchDirective.js';\nimport ngeoSearchCreateGeoJSONBloodhound from 'ngeo/search/createGeoJSONBloodhound.js';\nimport ngeoSearchCreateLocationSearchBloodhound from 'ngeo/search/createLocationSearchBloodhound.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoSearchModule', [\n  ngeoSearchSearchDirective.module.name,\n  ngeoSearchCreateGeoJSONBloodhound.module.name,\n  ngeoSearchCreateLocationSearchBloodhound.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.drawing.featureStyleComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingFeatureStyle', [\n  ngeoMiscColorpickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/drawing/featureStyleComponent', require('./featureStyleComponent.html'));\n});\n\n\n/**\n * Directive used to set the style of a vector feature. The options depend\n * on the type of geometry.\n * Example:\n *\n *     <gmf-featurestyle\n *         gmf-featurestyle-feature=\"ctrl.selectedFeature\">\n *     </gmf-featurestyle>\n *\n * @htmlAttribute {ol.Feature} gmf-featurestyle-feature The feature.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfFeaturestyle\n */\nexports.directive_ = function() {\n  return {\n    controller: 'GmfFeaturestyleController as fsCtrl',\n    scope: {\n      'feature': '=gmfFeaturestyleFeature'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/drawing/featureStyleComponent'\n  };\n};\n\n\nexports.directive('gmfFeaturestyle',\n  exports.directive_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Gmf feature helper service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfFeaturestyleController\n */\nexports.Controller_ = function($scope, ngeoFeatureHelper) {\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.color = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.label = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.measure = undefined;\n\n  $scope.$watch(\n    () => this.color,\n    this.handleColorSet_.bind(this)\n  );\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = [];\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.type;\n\n  $scope.$watch(\n    () => this.feature,\n    this.handleFeatureSet_.bind(this)\n  );\n\n};\n\n\n/**\n * Called when a new feature is set, which can also be null.\n * @param {?ol.Feature} newFeature New feature or null value.\n * @param {?ol.Feature} previousFeature Previous feature or null value.\n * @private\n */\nexports.Controller_.prototype.handleFeatureSet_ = function(\n  newFeature, previousFeature) {\n\n  const keys = this.featureListenerKeys_;\n\n  if (previousFeature) {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.type = undefined;\n    this.color = undefined;\n    this.measure = undefined;\n    this.label = undefined;\n  }\n\n  if (newFeature) {\n    [\n      ngeoFormatFeatureProperties.ANGLE,\n      ngeoFormatFeatureProperties.COLOR,\n      ngeoFormatFeatureProperties.NAME,\n      ngeoFormatFeatureProperties.SHOW_LABEL,\n      ngeoFormatFeatureProperties.OPACITY,\n      ngeoFormatFeatureProperties.SHOW_MEASURE,\n      ngeoFormatFeatureProperties.SIZE,\n      ngeoFormatFeatureProperties.STROKE\n    ].forEach(function(propName) {\n      keys.push(\n        olEvents.listen(\n          newFeature,\n          `change:${propName}`,\n          this.handleFeatureChange_,\n          this\n        )\n      );\n    }, this);\n\n    const geometry = newFeature.getGeometry();\n    googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n    keys.push(\n      olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      )\n    );\n\n    this.type = this.featureHelper_.getType(newFeature);\n    this.color = this.featureHelper_.getColorProperty(newFeature);\n    this.measure = this.featureHelper_.getMeasure(newFeature);\n  }\n};\n\n\n/**\n * @param {string|undefined} newColor Color.\n * @private\n */\nexports.Controller_.prototype.handleColorSet_ = function(\n  newColor) {\n  if (this.feature && newColor) {\n    const currentColor = this.feature.get(ngeoFormatFeatureProperties.COLOR);\n    if (currentColor !== newColor) {\n      this.feature.set(ngeoFormatFeatureProperties.COLOR, newColor);\n    }\n  }\n};\n\n\n/**\n * @param {number|undefined} value A name value to set or undefined to get.\n * @return {number} The angle of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetAngle = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.ANGLE, value));\n};\n\n\n/**\n * @param {string|undefined} value A name value to set or undefined to get.\n * @return {string} The name of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetName = function(value) {\n  return googAsserts.assertString(this.getSetProperty_(ngeoFormatFeatureProperties.NAME, value));\n};\n\n/**\n * @param {boolean|undefined} value A value to set or undefined for the\n *     purpose of showing the attribute labels or not.\n * @return {boolean} Whether to show the labels or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowLabel = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_LABEL, value));\n};\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetOpacity = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.OPACITY, value));\n};\n\n\n/**\n * @param {boolean|undefined} value A value to set or undefined to get for the\n *     purpose of showing the geometry measurements or not.\n * @return {boolean} Whether to show the measurements or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowMeasure = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_MEASURE, value));\n};\n\n\n/**\n * @param {number|undefined} value A size value to set or undefined to get.\n * @return {number} The size of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetSize = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.SIZE, value));\n};\n\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetStroke = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.STROKE, value));\n};\n\n\n/**\n * @param {string} key The property name.\n * @param {boolean|number|string|undefined} value A value to set or undefined\n *     to get.\n * @return {boolean|number|string} The property value of the feature.\n * @private\n */\nexports.Controller_.prototype.getSetProperty_ = function(key, value) {\n  if (value !== undefined) {\n    this.feature.set(key, value);\n  }\n  return /** @type {boolean|number|string} */ (this.feature.get(key));\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeatureChange_ = function() {\n  const feature = this.feature;\n\n  if (!feature) {\n    return;\n  }\n\n  this.featureHelper_.setStyle(feature, true);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleGeometryChange_ = function() {\n  googAsserts.assert(this.feature);\n  this.measure = this.featureHelper_.getMeasure(this.feature);\n\n  const showMeasure = this.featureHelper_.getShowMeasureProperty(this.feature);\n  if (showMeasure) {\n    this.handleFeatureChange_();\n  }\n\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfFeaturestyleController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.drawing.drawFeatureComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\nimport googAsserts from 'goog/asserts.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoMenu from 'ngeo/Menu.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingExportfeaturesComponent from 'ngeo/editing/exportfeaturesComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawComponent from 'ngeo/draw/component.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModify from 'ngeo/interaction/Modify.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfDrawFeatureComponent', [\n  gmfDrawingFeatureStyleComponent.name,\n  ngeoEditingExportfeaturesComponent.name,\n  ngeoMiscBtnComponent.name,\n  ngeoDrawComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/drawing/drawFeatureComponent', require('./drawFeatureComponent.html'));\n});\n\n\n/**\n * Directive used to create, modify and delete vector features on a map with\n * the addition of changing their style.\n * Example:\n *\n *     <gmf-drawfeature\n *         gmf-drawfeature-active=\"ctrl.drawFeatureActive\"\n *         gmf-drawfeature-map=\"::ctrl.map\">\n *     </gmf-drawfeature>\n *\n * @htmlAttribute {boolean} gmf-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {ol.Map} gmf-drawfeature-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfDrawfeature\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfDrawfeatureController as efCtrl',\n    scope: {\n      'active': '=gmfDrawfeatureActive',\n      'map': '<gmfDrawfeatureMap',\n      'showMeasure': '=?gmfDrawfeatureShowmeasure'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/drawing/drawFeatureComponent'\n  };\n};\n\n\nexports.directive('gmfDrawfeature',\n  exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {!ol.Collection.<!ol.Feature>} ngeoFeatures Collection of features.\n * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDrawfeatureController\n */\nexports.Controller_ = function($scope, $timeout, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures, ngeoToolActivateMgr) {\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawActive = false;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.drawToolActivate = new ngeoMiscToolActivate(this, 'drawActive');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.mapSelectActive = true;\n\n  /**\n   * @type {number?}\n   * @private\n   */\n  this.longPressTimeout_ = null;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.mapSelectToolActivate = new ngeoMiscToolActivate(this, 'mapSelectActive');\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {!ol.Collection.<!ol.Feature>}\n   * @export\n   */\n  this.features = ngeoFeatures;\n\n  /**\n   * @type {!ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.selectedFeature = null;\n\n  /**\n   * @type {!ol.Collection.<!ol.Feature>}\n   * @export\n   */\n  this.selectedFeatures = new olCollection();\n\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.interactions_ = new olCollection();\n\n  /**\n   * @type {!ngeo.interaction.Modify}\n   * @private\n   */\n  this.modify_ = new ngeoInteractionModify({\n    features: this.selectedFeatures,\n    style: ngeoFeatureHelper.getVertexStyle(false)\n  });\n  this.interactions_.push(this.modify_);\n\n  /**\n   * @type {?ngeo.Menu}\n   * @private\n   */\n  this.menu_ = null;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.modifyToolActivate = new ngeoMiscToolActivate(this.modify_, 'active');\n\n  /**\n   * @type {!ngeo.interaction.Translate}\n   * @private\n   */\n  this.translate_ = new ngeoInteractionTranslate({\n    features: this.selectedFeatures,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf047',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.translate_);\n\n  /**\n   * @type {!ngeo.interaction.Rotate}\n   * @private\n   */\n  this.rotate_ = new ngeoInteractionRotate({\n    features: this.selectedFeatures,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf01e',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.rotate_);\n\n  this.initializeInteractions_();\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.rotateToolActivate = new ngeoMiscToolActivate(this.rotate_, 'active');\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.translateToolActivate = new ngeoMiscToolActivate(this.translate_, 'active');\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * Flag used to determine whether the selection of a feature was made\n   * from the selection of an item from the list or not (the map, contextual\n   * menu, etc.)\n   * @type {boolean}\n   * @private\n   */\n  this.listSelectionInProgress_ = false;\n\n  $scope.$watch(\n    () => this.active,\n    this.handleActiveChange_.bind(this)\n  );\n\n  $scope.$watch(\n    () => this.drawActive,\n    (active) => {\n      if (active) {\n        this.selectedFeature = null;\n      }\n    }\n  );\n\n  $scope.$watch(\n    () => this.selectedFeature,\n    (newFeature, previousFeature) => {\n      this.selectedFeatures.clear();\n      if (previousFeature) {\n        this.featureHelper_.setStyle(previousFeature);\n        this.unregisterInteractions_();\n      }\n      if (newFeature) {\n        this.featureHelper_.setStyle(newFeature, true);\n        this.selectedFeatures.push(newFeature);\n        this.registerInteractions_();\n        if (this.listSelectionInProgress_) {\n          this.featureHelper_.panMapToFeature(newFeature, this.map);\n          this.listSelectionInProgress_ = false;\n        }\n      } else if (this.menu_) {\n        this.map.removeOverlay(this.menu_);\n        this.menu_ = null;\n      }\n    }\n  );\n\n  $scope.$watch(\n    () => this.mapSelectActive,\n    this.handleMapSelectActiveChange_.bind(this)\n  );\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nameProperty = ngeoFormatFeatureProperties.NAME;\n\n  /**\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n};\n\n\n/**\n * Initialize interactions by setting them inactive and decorating them\n * @private\n */\nexports.Controller_.prototype.initializeInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    interaction.setActive(false);\n    ngeoMiscDecorate.interaction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by adding them to the map\n * @private\n */\nexports.Controller_.prototype.registerInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.addInteraction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by removing them to the map\n * @private\n */\nexports.Controller_.prototype.unregisterInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.removeInteraction(interaction);\n  });\n};\n\n\n/**\n * Called when the active property of the this directive changes. Manage\n * the activation/deactivation accordingly (event management, etc.)\n * @param {boolean} active Whether the directive is active or not.\n * @private\n */\nexports.Controller_.prototype.handleActiveChange_ = function(active) {\n\n  const keys = this.listenerKeys_;\n  const drawUid = ['draw-', olBase.getUid(this)].join('-');\n  const otherUid = ['other-', olBase.getUid(this)].join('-');\n  const toolMgr = this.ngeoToolActivateMgr_;\n\n  if (active) {\n    // when activated\n\n    keys.push(\n      olEvents.listen(this.features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features, 'remove', this.handleFeaturesRemove_, this)\n    );\n\n    keys.push(olEvents.listen(this.translate_,\n      'translateend',\n      this.handleTranslateEnd_, this));\n\n    keys.push(olEvents.listen(this.rotate_, 'rotateend', this.handleRotateEnd_, this));\n\n    toolMgr.registerTool(drawUid, this.drawToolActivate, false);\n    toolMgr.registerTool(drawUid, this.mapSelectToolActivate, true);\n\n    toolMgr.registerTool(otherUid, this.drawToolActivate, false);\n    toolMgr.registerTool(otherUid, this.modifyToolActivate, true);\n    toolMgr.registerTool(otherUid, this.translateToolActivate, false);\n    toolMgr.registerTool(otherUid, this.rotateToolActivate, false);\n\n    this.mapSelectActive = true;\n    this.modify_.setActive(true);\n  } else {\n    // when deactivated\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n\n    toolMgr.unregisterTool(drawUid, this.drawToolActivate);\n    toolMgr.unregisterTool(drawUid, this.mapSelectToolActivate);\n\n    toolMgr.unregisterTool(otherUid, this.drawToolActivate);\n    toolMgr.unregisterTool(otherUid, this.modifyToolActivate);\n    toolMgr.unregisterTool(otherUid, this.translateToolActivate);\n    toolMgr.unregisterTool(otherUid, this.rotateToolActivate);\n\n    this.drawActive = false;\n    this.modify_.setActive(false);\n    this.mapSelectActive = false;\n    this.selectedFeature = null;\n\n    if (this.menu_) {\n      this.map.removeOverlay(this.menu_);\n      this.menu_ = null;\n    }\n  }\n\n};\n\n\n/**\n * Method called when a selection occurs from the list, i.e. when an item in\n * the list of features is clicked. Called from the template, so no need to\n * update Angular's scope.\n * @param {!ol.Feature} feature Feature to select.\n * @export\n */\nexports.Controller_.prototype.selectFeatureFromList = function(feature) {\n  this.listSelectionInProgress_ = true;\n  this.selectedFeature = feature;\n  this.drawActive = false;\n};\n\n\n/**\n * @return {!Array.<!ol.Feature>} Array.\n * @export\n */\nexports.Controller_.prototype.getFeaturesArray = function() {\n  return this.features.getArray();\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.clearFeatures = function() {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete all the features?');\n  if (confirm(msg)) {\n    this.features.clear();\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature The feature to remove from the selection.\n * @export\n */\nexports.Controller_.prototype.removeFeature = function(feature) {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete the selected feature?');\n  if (confirm(msg)) {\n    this.features.remove(feature);\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturesAdd_ = function(evt) {\n  // timeout to prevent double-click to zoom the map\n  this.timeout_(() => {\n    this.selectedFeature = /** @type {ol.Feature} */ (evt.element);\n    this.drawActive = false;\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturesRemove_ = function(evt) {\n  this.selectedFeature = null;\n};\n\n\n/**\n * Called when the mapSelectActive property changes.\n * @param {boolean} active Whether the map select is active or not.\n * @private\n */\nexports.Controller_.prototype.handleMapSelectActiveChange_ = function(\n  active) {\n\n  const mapDiv = this.map.getViewport();\n  googAsserts.assertElement(mapDiv);\n\n  if (active) {\n    olEvents.listen(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.listen(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n    olEvents.listen(mapDiv, 'touchstart',\n      this.handleMapTouchStart_, this);\n\n    olEvents.listen(mapDiv, 'touchmove',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.listen(mapDiv, 'touchend',\n      this.handleMapTouchEnd_, this);\n\n  } else {\n    olEvents.unlisten(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.unlisten(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n    olEvents.unlisten(mapDiv, 'touchstart',\n      this.handleMapTouchStart_, this);\n\n    olEvents.unlisten(mapDiv, 'touchmove',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.unlisten(mapDiv, 'touchend',\n      this.handleMapTouchEnd_, this);\n  }\n};\n\n\n/**\n * @param {!ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapClick_ = function(evt) {\n\n  const pixel = evt.pixel;\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 5\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // do not do any further action if feature is null or already selected\n  if (feature === this.selectedFeature) {\n    return;\n  }\n\n  this.selectedFeature = feature;\n\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapTouchStart_ = function(evt) {\n  this.longPressTimeout_ = setTimeout(() => {\n    this.handleMapContextMenu_(evt);\n  }, 500);\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapTouchEnd_ = function(evt) {\n  clearTimeout(this.longPressTimeout_);\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(evt) {\n  const gettextCatalog = this.gettextCatalog_;\n  const pixel = this.map.getEventPixel(evt);\n  const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 7\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // show contextual menu when clicking on certain types of features\n  if (feature) {\n    let actions = [];\n\n    const type = this.featureHelper_.getType(feature);\n    if (type == ngeoGeometryType.CIRCLE ||\n        type == ngeoGeometryType.LINE_STRING ||\n        type == ngeoGeometryType.POLYGON ||\n        type == ngeoGeometryType.RECTANGLE) {\n      actions = actions.concat([{\n        cls: 'fa fa-arrows',\n        label: gettextCatalog.getString('Move'),\n        name: 'move'\n      }, {\n        cls: 'fa fa-rotate-right',\n        label: gettextCatalog.getString('Rotate'),\n        name: 'rotate'\n      }]);\n    }\n\n    actions = actions.concat([{\n      cls: 'fa fa-trash-o',\n      label: gettextCatalog.getString('Delete'),\n      name: 'delete'\n    }]);\n\n    this.menu_ = new ngeoMenu({\n      actions\n    });\n\n    olEvents.listen(this.menu_, 'actionclick',\n      this.handleMenuActionClick_, this);\n    this.map.addOverlay(this.menu_);\n\n    this.menu_.open(coordinate);\n\n    evt.preventDefault();\n    evt.stopPropagation();\n  }\n\n  // do not do any further action if feature is null or already selected\n  if (feature === this.selectedFeature) {\n    return;\n  }\n\n  this.modify_.setActive(true);\n\n  this.selectedFeature = feature;\n\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.MenuEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuActionClick_ = function(evt) {\n  const action = evt.detail.action;\n\n  switch (action) {\n    case 'delete':\n      googAsserts.assert(\n        this.selectedFeature, 'Selected feature should be truthy');\n      this.removeFeature(this.selectedFeature);\n      this.scope_.$apply();\n      break;\n    case 'move':\n      this.translate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    case 'rotate':\n      this.rotate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    default:\n      // FIXME\n      console.log(`FIXME - support: ${action}`);\n      break;\n  }\n};\n\n\n/**\n * @param {!ol.interaction.Translate.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleTranslateEnd_ = function(evt) {\n  this.translate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.RotateEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleRotateEnd_ = function(evt) {\n  this.rotate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfDrawfeatureController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.drawing.module\n */\nimport gmfDrawingDrawFeatureComponent from 'gmf/drawing/drawFeatureComponent.js';\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingModule', [\n  gmfDrawingDrawFeatureComponent.name,\n  gmfDrawingFeatureStyleComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.profile.d3Elevation\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olObj from 'ol/obj.js';\n\nimport 'd3-transition';\nimport {bisector, extent} from 'd3-array';\nimport {axisBottom, axisLeft} from 'd3-axis';\nimport {scaleLinear} from 'd3-scale';\nimport {mouse, select, selectAll} from 'd3-selection';\nimport {area, line} from 'd3-shape';\nconst d3 = {\n  bisector,\n  extent,\n  axisBottom,\n  axisLeft,\n  scaleLinear,\n  mouse,\n  select,\n  selectAll,\n  area,\n  line,\n};\n\n\n/**\n * Provides a D3js component to be used to draw an elevation\n * profile chart.\n *\n *     let selection = d3.select('#element_id');\n *     let profile = ngeo.profile.d3Elevation({\n *       distanceExtractor: function (item) {return item['dist'];},\n *       linesConfiguration: {\n *         'lineZ1': {\n *           zExtractor: function (item) {return item['values']['z1'];}\n *         },\n *         'lineZ2': {\n *           color: '#00F',\n *           zExtractor: function (item) {return item['values']['z2'];}\n *         }\n *       },\n *       hoverCallback: function(point, dist, xUnits, elevations, yUnits) {\n *         console.log(point.x, point.y);\n *       },\n *       outCallback: function() {\n *         console.log(\"out\");\n *       }\n *     });\n *     selection.datum(data).call(profile);\n *\n * The selection data must be an array.\n * The layout for the items of this array is unconstrained: the distance values\n * is extracted using the distanceExtractor config option and multiples z values\n * can be displayed by providing multiple linesConfiguration with its specific\n * zExtractor.\n * Optionally you can provide a color in your linesConfiguration. A line without\n * color will be red. Each linesConfiguration name is used as class for its\n * respective line. So you can pass a styleDefs config option (inline css) to\n * customize the line or all the chart.\n * Optionally, POIs can be displayed and depend on a poiExtractor\n * config option.\n *\n * The data below will work for the above example:\n *\n *     [\n *         {\n *             \"y\": 199340,\n *             \"values\": {\"z1\": 788.7, \"z2\": 774.2},\n *             \"dist\": 0.0,\n *             \"x\": 541620\n *         }, ...\n *     ]\n *\n * @return {Object} D3js component.\n * @param {ngeox.profile.ProfileOptions} options Profile options.\n * @export\n */\nconst exports = function(options) {\n  /**\n   * Whether the simplified profile should be shown.\n   * @type {boolean}\n   */\n  const light = options.light !== undefined ? options.light : false;\n\n\n  /**\n   * The values for margins around the chart defined in pixels.\n   */\n  const margin = light ? {top: 0, right: 0, bottom: 0, left: 0} :\n    {top: 10, right: 20, bottom: 30, left: 40};\n\n  /**\n   * Hover callback function.\n   * @type {function(Object, number, string, Object.<string, number>, string)}\n   */\n  const hoverCallback = options.hoverCallback !== undefined ?\n    options.hoverCallback : () => {};\n\n  /**\n   * Out callback function.\n   * @type {function()}\n   */\n  const outCallback = options.outCallback !== undefined ?\n    options.outCallback : () => {};\n\n  /**\n   * Distance data extractor used to get the dist values.\n   */\n  const distanceExtractor = options.distanceExtractor;\n\n  /**\n   * Line configuration object.\n   */\n  const linesConfiguration = options.linesConfiguration;\n\n  /**\n   * Number of different configurations for the line.\n   */\n  const numberOfLines = Object.keys(linesConfiguration).length;\n\n  /**\n   * Method to get the coordinate in pixels from a distance.\n   */\n  const bisectDistance = d3.bisector(d => distanceExtractor(d)).left;\n\n  /**\n   * POI data extractor.\n   */\n  const poiExtractor = options.poiExtractor;\n\n  /**\n   * Optional SVG inline style.\n   */\n  const styleDefs = options.styleDefs;\n\n  /**\n   * @type {number}\n   */\n  const poiLabelAngle = options.poiLabelAngle !== undefined ?\n    options.poiLabelAngle : -60;\n\n  /**\n   * @type {Object.<string, string>}\n   */\n  const i18n = options.i18n || {};\n\n  /**\n   * @type {string}\n   */\n  const xAxisLabel = (i18n.xAxis || 'Distance');\n\n  /**\n   * @type {string}\n   */\n  const yAxisLabel = (i18n.yAxis || 'Elevation');\n\n  /**\n   * @type {ngeox.profile.ProfileFormatter}\n   */\n  const formatter = {\n    /**\n     * @param {number} dist Distance.\n     * @param {string} units Units.\n     * @return {string} Distance.\n     */\n    xhover(dist, units) {\n      return `${parseFloat(dist.toPrecision(3))} ${units}`;\n    },\n    /**\n     * @param {number} ele Elevation.\n     * @param {string} units Units.\n     * @return {string} Elevation.\n     */\n    yhover(ele, units) {\n      return `${Math.round(ele)} m`;\n    },\n    /**\n     * @param {number} dist Distance.\n     * @param {string} units Units.\n     * @return {string|number} Distance.\n     */\n    xtick(dist, units) {\n      return dist;\n    },\n    /**\n     * @param {number} ele Elevation.\n     * @param {string} units Units.\n     * @return {string|number} Elevation.\n     */\n    ytick(ele, units) {\n      return ele;\n    }\n  };\n\n  if (options.formatter !== undefined) {\n    olObj.assign(formatter, options.formatter);\n  }\n\n  /**\n   * @type {boolean}\n   */\n  const lightXAxis = options.lightXAxis !== undefined ? options.lightXAxis : false;\n\n  // Objects shared with the showPois function\n  /**\n   * @type {Object}\n   */\n  let svg;\n\n  /**\n   * D3 x scale.\n   */\n  let x;\n\n  /**\n   * D3 y scale.\n   */\n  let y;\n\n  /**\n   * Scale modifier to allow customizing the x and y scales.\n   */\n  const scaleModifier = options.scaleModifier;\n\n  let g;\n\n  /**\n   * Height of the chart in pixels\n   */\n  let height;\n\n  /**\n   * Width of the chart in pixels\n   */\n  let width;\n\n  /**\n  * Factor to determine whether to use 'm' or 'km'.\n  */\n  let xFactor;\n\n  /**\n  * Distance units. Either 'm' or 'km'.\n  */\n  let xUnits;\n\n  /**\n   * D3 extent of the distance.\n   */\n  let xDomain;\n\n\n  const profile = function(selection) {\n    selection.each(function(data) {\n      d3.select(this).selectAll('svg').remove();\n      if (data === undefined) {\n        return;\n      }\n\n      width = Math.max(this.clientWidth - margin.right - margin.left, 0);\n      x = d3.scaleLinear().range([0, width]);\n\n      height = Math.max(this.clientHeight - margin.top - margin.bottom, 0);\n      y = d3.scaleLinear().range([height, 0]);\n\n      const xAxis = d3.axisBottom(x);\n      const yAxis = d3.axisLeft(y);\n\n      let area;\n      if (numberOfLines === 1) {\n        area = d3.area()\n          .x(d => x(distanceExtractor(d)))\n          .y0(height)\n          .y1((d) => {\n            const firstLineName =  Object.keys(linesConfiguration)[0];\n            return y(linesConfiguration[firstLineName].zExtractor(d));\n          });\n      }\n\n      // Select the svg element, if it exists.\n      svg = d3.select(this).selectAll('svg').data([data]);\n      // Otherwise, create the skeletal chart.\n      const svgEnter = svg.enter().append('svg');\n      // Then select it again to get the complete object.\n      svg = d3.select(this).selectAll('svg').data([data]);\n\n      if (styleDefs !== undefined) {\n        svgEnter.append('defs').append('style')\n          .attr('type', 'text/css')\n          .text(styleDefs);\n      }\n      const gEnter = svgEnter.append('g');\n\n      clearPois();\n\n      gEnter.style('font', '11px Arial');\n\n      if (numberOfLines === 1) {\n        gEnter.append('path').attr('class', 'area')\n          .style('fill', 'rgba(222, 222, 222, 0.5)');\n      }\n\n      gEnter.insert('g', ':first-child')\n        .attr('class', 'grid-y');\n\n      if (!light) {\n        gEnter.append('g')\n          .attr('class', 'x axis')\n          .attr('transform', `translate(0,${height})`);\n\n        gEnter.append('text')\n          .attr('class', 'x label')\n          .attr('text-anchor', 'end')\n          .attr('x', width - 4)\n          .attr('y', height - 4);\n\n        gEnter.append('g')\n          .attr('class', 'y axis');\n\n        gEnter.append('text')\n          .attr('class', 'y label')\n          .attr('text-anchor', 'end')\n          .attr('y', 6)\n          .attr('dy', '.75em')\n          .attr('transform', 'rotate(-90)')\n          .style('fill', 'grey')\n          .text(`${yAxisLabel} [m]`);\n\n        gEnter.append('g')\n          .attr('class', 'metas')\n          .attr('transform', `translate(${width + 3}, 0)`);\n      }\n\n      gEnter.append('g').attr('class', 'pois');\n\n      const xHover = gEnter.append('g').attr('class', 'x grid-hover');\n      xHover.append('svg:line').attr('stroke-dasharray', '5,5');\n      xHover.append('text');\n\n      gEnter.append('rect')\n        .attr('class', 'overlay')\n        .attr('width', width)\n        .attr('height', height)\n        .style('fill', 'none')\n        .style('pointer-events', 'all');\n\n      // Update the outer dimensions.\n      svg.attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom);\n\n      // Update the inner dimensions.\n      g = svg.select('g')\n        .attr('transform', `translate(${margin.left},${\n          margin.top})`);\n\n      xDomain = d3.extent(data, d => distanceExtractor(d));\n      x.domain(xDomain);\n\n      // Return an array with the min and max value of the min/max values of\n      // each lines.\n      const yDomain = function() {\n        let elevationsValues = [];\n        let extent, name;\n        // Get min/max values (extent) of each lines.\n        for (name in linesConfiguration) {\n          extent = d3.extent(data, d => linesConfiguration[name].zExtractor(d));\n          elevationsValues = elevationsValues.concat(extent);\n        }\n        return [\n          Math.min.apply(null, elevationsValues),\n          Math.max.apply(null, elevationsValues)\n        ];\n      }();\n\n      y.domain(yDomain);\n\n      // set the ratio according to the horizontal distance\n      if (scaleModifier !== undefined) {\n        scaleModifier(x, y, width, height);\n      } else {\n        // By default, add a small padding so that it looks nicer\n        const padding = (yDomain[1] - yDomain[0]) * 0.1;\n        y.domain([yDomain[0] - padding, yDomain[1] + padding]);\n      }\n\n      // Update the area path.\n      if (numberOfLines === 1) {\n        g.select('.area')\n          .transition()\n          .attr('d', area);\n      }\n\n      // Set style and update the lines paths and y hover guides for each lines.\n      let line, name, yHover;\n      for (name in linesConfiguration) {\n        // Set style of each line and add a class with its respective name.\n        gEnter.append('path').attr('class', `line ${name}`)\n          .style('stroke', linesConfiguration[name].color || '#F00')\n          .style('fill', 'none');\n\n        // Set y hover guides\n        yHover = gEnter.append('g').attr('class', `y grid-hover ${name}`);\n        yHover.append('svg:line').attr('stroke-dasharray', '5,5');\n        yHover.append('text');\n\n        // Configure the d3 line.\n        line = d3.line()\n          .x(d => x(distanceExtractor(d)))\n          .y(d => y(linesConfiguration[name].zExtractor(d)));\n\n        // Update path for the line.\n        g.select(`.line.${name}`)\n          .transition()\n          .attr('d', line);\n      }\n\n      if (xDomain[1] > 2000) {\n        xFactor = 1000;\n        xUnits = 'km';\n      } else {\n        xFactor = 1;\n        xUnits = 'm';\n      }\n\n      if (!light) {\n        xAxis.tickFormat(d => formatter.xtick(d / xFactor, xUnits));\n        if (lightXAxis) {\n          xAxis.tickValues([0, x.domain()[1]]);\n        }\n\n        yAxis.tickFormat(d => formatter.ytick(d, 'm'));\n\n        g.select('.x.axis')\n          .transition()\n          .call(xAxis);\n\n        g.select('.x.label')\n          .text(`${xAxisLabel} [${xUnits}]`)\n          .style('fill', 'grey')\n          .style('shape-rendering', 'crispEdges');\n\n        // Avoid too much lines with overlapping labels in small profiles\n        if (height / 15 < 10) {\n          yAxis.ticks(height / 15);\n        }\n\n        g.select('.y.axis')\n          .transition()\n          .call(yAxis);\n      }\n\n      g.select('.grid-y')\n        .transition()\n        .call(yAxis.tickSize(-width, 0).tickFormat(''))\n        .selectAll('.tick line')\n        .style('stroke', '#ccc')\n        .style('opacity', 0.7);\n\n      g.selectAll('.axis').selectAll('path, line')\n        .style('fill', 'none')\n        .style('stroke', '#000')\n        .style('shape-rendering', 'crispEdges');\n\n      g.select('.grid-y').select('path')\n        .style('stroke', 'none');\n\n      g.selectAll('.grid-hover line')\n        .style('stroke', '#222')\n        .style('opacity', 0.8);\n\n      g.select('.overlay')\n        .on('mouseout', mouseout)\n        .on('mousemove', mousemove);\n\n      function mousemove() {\n        const mouseX = d3.mouse(this)[0];\n        const x0 = x.invert(mouseX);\n\n        profile.highlight(x0);\n      }\n\n      function mouseout() {\n        profile.clearHighlight();\n      }\n    });\n  };\n\n  /**\n   * Remove any highlight.\n   * Fire the outCallback callback.\n   */\n  profile.clearHighlight = function() {\n    g.selectAll('.grid-hover')\n      .style('display', 'none');\n    outCallback.call(null);\n  };\n\n  /**\n   * Highlight the given distance and corresponding elevation on chart.\n   * Fire the hoverCallback callback with corresponding point.\n   * @param {number} distance Distance.\n   */\n  profile.highlight = function(distance) {\n    const data = svg.datum();\n    const i = bisectDistance(data, distance);\n    if (i >= data.length) {\n      return;\n    }\n\n    const point = data[i];\n    const dist = distanceExtractor(point);\n    let elevation;\n    const elevations = [];\n    const elevationsRef = {};\n    let lineName;\n\n    for (lineName in linesConfiguration) {\n      elevation = linesConfiguration[lineName].zExtractor(point);\n      elevations.push(elevation);\n      elevationsRef[lineName] = elevation;\n      g.select(`.y.grid-hover.${lineName}`)\n        .style('display', 'inline')\n        .select('line')\n        .attr('x1', x(0))\n        .attr('y1', y(elevation))\n        .attr('x2', width)\n        .attr('y2', y(elevation));\n    }\n\n    g.select('.x.grid-hover')\n      .style('display', 'inline')\n      .select('line')\n      .attr('x1', x(dist))\n      .attr('y1', height)\n      .attr('x2', x(dist))\n      .attr('y2', y(Math.max.apply(null, elevations)));\n\n    const right = dist > xDomain[1] / 2;\n    let xtranslate = x(dist);\n    xtranslate += right ? -10 : 10;\n\n    g.select('.x.grid-hover text')\n      .text(formatter.xhover(dist / xFactor, xUnits))\n      .style('text-anchor', right ? 'end' : 'start')\n      .attr('transform', `translate(${xtranslate},${\n        height - 10})`);\n\n    const yUnits = 'm';\n    // Display altitude on guides only if there is one line.\n    if (numberOfLines === 1) {\n      g.select('.y.grid-hover text')\n        .text(formatter.yhover(elevations[0], 'm'))\n        .style('text-anchor', right ? 'end' : 'start')\n        .attr('transform', `translate(${xtranslate},${\n          y(elevations[0]) - 10})`);\n    }\n    hoverCallback.call(null, point, dist / xFactor, xUnits, elevationsRef,\n      yUnits);\n  };\n\n\n  profile.showPois = function(pois) {\n    pois = pois !== undefined ? pois : [];\n    googAsserts.assert(pois.length === 0 || poiExtractor !== undefined);\n\n    const pe = poiExtractor;\n    const g = svg.select('g');\n    const profileData = svg.datum();\n    const ps = g.select('.pois');\n\n    const p = ps.selectAll('.poi').data(pois, (d) => {\n      const i = bisectDistance(profileData, Math.round(pe.dist(d) * 10) / 10, 1);\n      const point = profileData[i];\n      if (point) {\n        let lineName;\n        const elevations = [];\n        for (lineName in linesConfiguration) {\n          elevations.push(linesConfiguration[lineName].zExtractor(point));\n        }\n        const z = Math.max.apply(null, elevations);\n        pe.z(d, z);\n      }\n      return pe.id(d);\n    });\n\n    const poiEnterG = p.enter()\n      .append('g')\n      .attr('class', 'poi');\n\n    poiEnterG.append('text')\n      .attr('x', light ? 0 : 9)\n      .attr('dy', '.35em')\n      .attr('text-anchor', light ? 'middle' : 'start');\n\n    poiEnterG.append('line')\n      .style('shape-rendering', 'crispEdges');\n\n    poiEnterG.style('opacity', 0)\n      .transition()\n      .duration(1000)\n      .delay(100)\n      .style('opacity', 1);\n\n    poiEnterG.selectAll('text')\n      .attr('transform', (d) => {\n        if (light) {\n          return ['translate(',\n            x(pe.dist(d)), ',',\n            y(pe.z(d)) - 10, ')'\n          ].join('');\n        } else {\n          return ['translate(',\n            x(pe.dist(d)), ',',\n            y(pe.z(d)) - 20, ') rotate(', poiLabelAngle, ')'\n          ].join('');\n        }\n      })\n      .text(d => pe.sort(d) + (light ? '' : (` - ${pe.title(d)}`)));\n\n    poiEnterG.selectAll('line')\n      .style('stroke', 'grey')\n      .attr('x1', d => x(pe.dist(d)))\n      .attr('y1', d => y(y.domain()[0]))\n      .attr('x2', d => x(pe.dist(d)))\n      .attr('y2', d => y(pe.z(d)));\n\n    // remove unused pois\n    poiEnterG.exit().remove();\n  };\n\n  function clearPois() {\n    profile.showPois([]);\n  }\n\n\n  return profile;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.profile.elevationComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoProfileD3Elevation from 'ngeo/profile/d3Elevation.js';\n\nimport {select} from 'd3-selection';\nconst d3 = {\n  select,\n};\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoProfile', [\n  ngeoMiscDebounce.name\n]);\n\n\n/**\n * Provides a directive used to insert an elevation profile chart\n * in the DOM.\n *\n * Example:\n *\n *      <div ngeo-profile=\"ctrl.profileData\"\n *        ngeo-profile-options=\"ctrl.profileOptions\"\n *        ngeo-profile-pois=\"ctrl.profilePois\">\n *      </div>\n *\n * Where \"ctrl.profileOptions\" is of type {@link ngeox.profile.ProfileOptions};\n * \"ctrl.profileData\" and \"ctrl.profilePois\" are arrays which will be\n * processed by {@link ngeox.profile.ElevationExtractor} and\n * {@link ngeox.profile.PoiExtractor}.\n *\n * See our live example: [../examples/profile.html](../examples/profile.html)\n *\n * @htmlAttribute {?Object} ngeo-profile The profile data.\n * @htmlAttribute {ngeox.profile.ProfileOptions} ngeo-profile-options The options.\n * @htmlAttribute {?Array} ngeo-profile-pois The data for POIs.\n * @htmlAttribute {*} ngeo-profile-highlight Any property on the scope which\n * evaluated value may correspond to distance from origin.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoProfile\n */\nexports.directive_ = function(ngeoDebounce) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const optionsAttr = attrs['ngeoProfileOptions'];\n      googAsserts.assert(optionsAttr !== undefined);\n\n      const selection = d3.select(element[0]);\n      let profile, elevationData, poiData;\n\n      scope.$watchCollection(optionsAttr, (newVal) => {\n\n        const options = /** @type {ngeox.profile.ProfileOptions} */\n                (olObj.assign({}, newVal));\n\n        if (options !== undefined) {\n\n          // proxy the hoverCallback and outCallbackin order to be able to\n          // call $applyAsync\n          //\n          // We're using $applyAsync here because the callback may be\n          // called inside the Angular context. For example, it's the case\n          // when the user hover's the line geometry on the map and the\n          // profileHighlight property is changed.\n          //\n          // For that reason we use $applyAsync instead of $apply here.\n          if (options.hoverCallback !== undefined) {\n            const origHoverCallback = options.hoverCallback;\n            options.hoverCallback = function(...args) {\n              origHoverCallback(...args);\n              scope.$applyAsync();\n            };\n          }\n\n          if (options.outCallback !== undefined) {\n            const origOutCallback = options.outCallback;\n            options.outCallback = function() {\n              origOutCallback();\n              scope.$applyAsync();\n            };\n          }\n\n          profile = ngeoProfileD3Elevation(options);\n          refreshData();\n        }\n      });\n\n      scope.$watch(attrs['ngeoProfile'], (newVal, oldVal) => {\n        elevationData = newVal;\n        refreshData();\n      });\n\n      scope.$watch(attrs['ngeoProfilePois'], (newVal, oldVal) => {\n        poiData = newVal;\n        refreshData();\n      });\n\n      scope.$watch(attrs['ngeoProfileHighlight'],\n        (newVal, oldVal) => {\n          if (newVal === undefined) {\n            return;\n          }\n          if (newVal > 0) {\n            profile.highlight(newVal);\n          } else {\n            profile.clearHighlight();\n          }\n        });\n\n      olEvents.listen(window, 'resize', ngeoDebounce(refreshData, 50, true));\n\n      function refreshData() {\n        if (profile !== undefined) {\n          selection.datum(elevationData).call(profile);\n          if (elevationData !== undefined) {\n            profile.showPois(poiData);\n          }\n        }\n      }\n    }\n  };\n};\n\nexports.directive('ngeoProfile', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.profile.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olOverlay from 'ol/Overlay.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olObj from 'ol/obj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadCsv from 'ngeo/download/Csv.js';\n\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProfileElevationComponent from 'ngeo/profile/elevationComponent.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfProfile', [\n  ngeoDownloadCsv.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoProfileElevationComponent.name,\n]);\n\n\nexports.value('gmfProfileTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfProfileTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/profile';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/profile', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfProfileTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfProfileTemplateUrl($element, $attrs, gmfProfileTemplateUrl) {\n  return gmfProfileTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component that display a profile panel. This profile use the given\n * LineString geometry to request the c2cgeoportal profile.json service. The\n * raster used in the request are the keys of the 'linesconfiguration' object.\n * The 'map' attribute is optional and are only used to display on the map the\n * information that concern the hovered point (in the profile and on the map)\n * of the line.\n * This profile relies on the ngeo.profile (d3) and ngeo.ProfileComponent.\n *\n * Example:\n *\n *      <gmf-profile\n *        gmf-profile-active=\"ctrl.profileActive\"\n *        gmf-profile-line=\"ctrl.profileLine\"\n *        gmf-profile-map=\"::ctrl.map\"\n *        gmf-profile-linesconfiguration=\"::ctrl.profileLinesconfiguration\">\n *      </gmf-profile>\n *\n *\n * @htmlAttribute {boolean} gmf-profile-active Active the component.\n * @htmlAttribute {ol.geom.LineString} gmf-profile-line The linestring geometry\n *     to use to draw the profile.\n * @htmlAttribute {ol.Map?} gmf-profile-map An optional map.\n * @htmlAttribute {Object.<string, gmfx.ProfileLineConfiguration>}\n *     gmf-profile-linesconfiguration The configuration of the lines. Each keys\n *     will be used to request elevation layers.\n * @htmlAttribute {ol.style.Style?} gmf-profile-hoverpointstyle Optional style\n *     for the 'on Hover' point on the line.\n * @htmlAttribute {number?} gmf-profile-numberofpoints Optional maximum limit of\n *     points to request. Default to 100.\n * @htmlAttribute {Object.<string, *>?} gmf-profile-options Optional options\n *     object like {@link ngeox.profile.ProfileOptions} but without any\n *     mandatory value. Will be passed to the ngeo profile component. Providing\n *     'linesConfiguration', 'distanceExtractor', hoverCallback, outCallback\n *     or i18n will override native gmf profile values.\n *\n * @ngdoc component\n * @ngname gmfProfile\n */\nexports.component_ = {\n  controller: 'GmfProfileController as ctrl',\n  bindings: {\n    'active': '=gmfProfileActive',\n    'line': '=gmfProfileLine',\n    'getMapFn': '&?gmfProfileMap',\n    'getLinesConfigurationFn': '&gmfProfileLinesconfiguration',\n    'getHoverPointStyleFn': '&?gmfProfileHoverpointstyle',\n    'getNbPointsFn': '&?gmfProfileNumberofpoints',\n    'getOptionsFn': '&?gmfProfileOptions'\n  },\n  templateUrl: gmfProfileTemplateUrl\n};\n\nexports.component('gmfProfile', exports.component_);\n\n\n/**\n * @param {angular.Scope} $scope Angular scope.\n * @param {angular.$http} $http Angular http service.\n * @param {angular.JQLite} $element Element.\n * @param {angular.$filter} $filter Angular filter\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Feature overlay\n *     manager.\n * @param {string} gmfProfileJsonUrl URL of GMF service JSON profile.\n * @param {ngeo.download.Csv} ngeoCsvDownload CSV Download service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfProfileController\n */\nexports.Controller_ = function($scope, $http, $element, $filter,\n  gettextCatalog, ngeoFeatureOverlayMgr, gmfProfileJsonUrl,\n  ngeoCsvDownload) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {angular.$filter}\n   * @export\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.pointHoverOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.gmfProfileJsonUrl_ = gmfProfileJsonUrl;\n\n  /**\n   * @type {ngeo.download.Csv}\n   * @private\n   */\n  this.ngeoCsvDownload_ = ngeoCsvDownload;\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?Object<string, !gmfx.ProfileLineConfiguration>}\n   * @private\n   */\n  this.linesConfiguration_ = null;\n\n  /**\n   * @type {!Array.<string>}\n   * @private\n   */\n  this.layersNames_ = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.nbPoints_ = 100;\n\n  /**\n   * @type {ol.geom.LineString}\n   * @export\n   */\n  this.line;\n\n  /**\n   * @type {Array.<Object>}\n   * @export\n   */\n  this.profileData = [];\n\n  /**\n   * @type {gmfx.ProfileHoverPointInformations}\n   * @export\n   */\n  this.currentPoint = {\n    coordinate: undefined,\n    distance: undefined,\n    elevations: {},\n    xUnits: undefined,\n    yUnits: undefined\n  };\n\n  /**\n   * Distance to highlight on the profile. (Property used in ngeo.Profile.)\n   * @type {number}\n   * @export\n   */\n  this.profileHighlight = -1;\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltip_ = null;\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n  /**\n   * @type {ol.Feature}\n   * @private\n   */\n  this.snappedPoint_ = new olFeature();\n  this.pointHoverOverlay_.addFeature(this.snappedPoint_);\n\n  /**\n   * @type {ngeox.profile.I18n}\n   * @private\n   */\n  this.profileLabels_ = {\n    xAxis: gettextCatalog.getString('Distance'),\n    yAxis: gettextCatalog.getString('Elevation')\n  };\n\n\n  /**\n   * @type {?ngeox.profile.ProfileOptions}\n   * @export\n   */\n  this.profileOptions = null;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = false;\n\n  /**\n   * @type {ol.EventsKey}\n   * @private\n   */\n  this.pointerMoveKey_;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isErrored = false;\n\n\n  // Watch the active value to activate/deactive events listening.\n  $scope.$watch(\n    () => this.active,\n    (newValue, oldValue) => {\n      if (oldValue !== newValue) {\n        this.updateEventsListening_();\n      }\n    });\n\n  // Watch the line to update the profileData (data for the chart).\n  $scope.$watch(\n    () => this.line,\n    (newLine, oldLine) => {\n      if (oldLine !== newLine) {\n        this.update_();\n      }\n    });\n\n  this.updateEventsListening_();\n};\n\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.map_ = this['getMapFn'] ? this['getMapFn']() : null;\n  this.nbPoints_ = this['getNbPointsFn'] ? this['getNbPointsFn']() : 100;\n\n  let hoverPointStyle;\n  const hoverPointStyleFn = this['getHoverPointStyleFn'];\n  if (hoverPointStyleFn) {\n    hoverPointStyle = hoverPointStyleFn();\n    googAsserts.assertInstanceof(hoverPointStyle, olStyleStyle);\n  } else {\n    hoverPointStyle = new olStyleStyle({\n      image: new olStyleCircle({\n        fill: new olStyleFill({color: '#ffffff'}),\n        radius: 3\n      })\n    });\n  }\n  this.pointHoverOverlay_.setStyle(hoverPointStyle);\n\n  const linesConfiguration = this['getLinesConfigurationFn']();\n  googAsserts.assertInstanceof(linesConfiguration, Object);\n\n  this.linesConfiguration_ = linesConfiguration;\n\n  for (const name in this.linesConfiguration_) {\n    // Keep an array of all layer names.\n    this.layersNames_.push(name);\n    // Add generic zExtractor to lineConfiguration object that doesn't have one.\n    const lineConfig = this.linesConfiguration_[name];\n    if (!lineConfig.zExtractor) {\n      this.linesConfiguration_[name].zExtractor = this.getZFactory_(name);\n    }\n  }\n\n  this.profileOptions = /** @type {ngeox.profile.ProfileOptions} */ ({\n    linesConfiguration: this.linesConfiguration_,\n    distanceExtractor: this.getDist_,\n    hoverCallback: this.hoverCallback_.bind(this),\n    outCallback: this.outCallback_.bind(this),\n    i18n: this.profileLabels_\n  });\n\n  const optionsFn = this['getOptionsFn'];\n  if (optionsFn) {\n    const options = optionsFn();\n    googAsserts.assertObject(options);\n    olObj.assign(this.profileOptions, options);\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.update_ = function() {\n  this.isErrored = false;\n  if (this.line) {\n    this.getJsonProfile_();\n  } else {\n    this.profileData = [];\n  }\n  this.active = !!this.line;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateEventsListening_ = function() {\n  if (this.active && this.map_ !== null) {\n    this.pointerMoveKey_ = olEvents.listen(this.map_, 'pointermove',\n      this.onPointerMove_.bind(this));\n  } else {\n    olEvents.unlistenByKey(this.pointerMoveKey_);\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n * @private\n */\nexports.Controller_.prototype.onPointerMove_ = function(e) {\n  if (e.dragging || !this.line) {\n    return;\n  }\n  const coordinate = this.map_.getEventCoordinate(e.originalEvent);\n  const closestPoint = this.line.getClosestPoint(coordinate);\n  // compute distance to line in pixels\n  const eventToLine = new olGeomLineString([closestPoint, coordinate]);\n  const pixelDist = eventToLine.getLength() / this.map_.getView().getResolution();\n\n  if (pixelDist < 16) {\n    this.profileHighlight = this.getDistanceOnALine_(closestPoint, this.line);\n  } else {\n    this.profileHighlight = -1;\n  }\n  this.$scope_.$apply();\n};\n\n\n/**\n * Return the distance between the beginning of the line and the given point.\n * The point must be on the line. If not, this function will return the total\n * length of the line.\n * @param {ol.Coordinate} pointOnLine A point on the given line.\n * @param {ol.geom.LineString} line A line.\n * @return {number} A distance.\n * @private\n */\nexports.Controller_.prototype.getDistanceOnALine_ = function(pointOnLine,\n  line) {\n  let segment;\n  let distOnLine = 0;\n  const fakeExtent = [\n    pointOnLine[0] - 0.5,\n    pointOnLine[1] - 0.5,\n    pointOnLine[0] + 0.5,\n    pointOnLine[1] + 0.5\n  ];\n  this.line.forEachSegment((firstPoint, lastPoint) => {\n    segment = new olGeomLineString([firstPoint, lastPoint]);\n    // Is the pointOnLine on this swegement ?\n    if (segment.intersectsExtent(fakeExtent)) {\n      // If the closestPoint is on the line, add the distance between the first\n      // point of this segment and the pointOnLine.\n      segment.setCoordinates([firstPoint, pointOnLine]);\n      return distOnLine += segment.getLength(); // Assign value and break;\n    } else {\n      // Do the sum of the length of each eventual previous segment.\n      distOnLine += segment.getLength();\n    }\n  });\n  return distOnLine;\n};\n\n\n/**\n * @param {Object} point Point.\n * @param {number} dist distance on the line.\n * @param {string} xUnits X units label.\n * @param {Object.<string, number>} elevationsRef Elevations references.\n *  @param {string} yUnits Y units label.\n * @private\n */\nexports.Controller_.prototype.hoverCallback_ = function(point, dist, xUnits,\n  elevationsRef, yUnits) {\n  // Update information point.\n  let ref;\n  const coordinate = [point.x, point.y];\n  for (ref in elevationsRef) {\n    this.currentPoint.elevations[ref] = elevationsRef[ref];\n  }\n  this.currentPoint.distance = dist;\n  this.currentPoint.xUnits = xUnits;\n  this.currentPoint.yUnits = yUnits;\n  this.currentPoint.coordinate = coordinate;\n\n  // Update hover.\n  const geom = new olGeomPoint(coordinate);\n  this.createMeasureTooltip_();\n  this.measureTooltipElement_.innerHTML = this.getTooltipHTML_();\n  this.measureTooltip_.setPosition(coordinate);\n  this.snappedPoint_.setGeometry(geom);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.outCallback_ = function() {\n  // Reset information point.\n  this.currentPoint.coordinate = undefined;\n  this.currentPoint.distance = undefined;\n  this.currentPoint.elevations = {};\n  this.currentPoint.xUnits = undefined;\n  this.currentPoint.yUnits = undefined;\n\n  // Reset hover.\n  this.removeMeasureTooltip_();\n  this.snappedPoint_.setGeometry(null);\n};\n\n\n/**\n * @return {string} A texte formatted to a tooltip.\n * @private\n */\nexports.Controller_.prototype.getTooltipHTML_ = function() {\n  const separator = ' : ';\n  let elevationName, translatedElevationName;\n  const innerHTML = [];\n  const number = this.$filter_('number');\n  const DistDecimal = this.currentPoint.xUnits === 'm' ? 0 : 2;\n  innerHTML.push(\n    `${this.profileLabels_.xAxis +\n      separator +\n      number(this.currentPoint.distance, DistDecimal)\n    } ${\n      this.currentPoint.xUnits}`\n  );\n  for (elevationName in this.currentPoint.elevations) {\n    translatedElevationName = this.gettextCatalog_.getString(elevationName);\n    innerHTML.push(\n      `${translatedElevationName +\n        separator +\n        number(this.currentPoint.elevations[elevationName], 0)\n      } ${this.currentPoint.yUnits}`\n    );\n  }\n  return innerHTML.join('</br>');\n};\n\n\n/**\n * Creates a new 'hover' tooltip\n * @private\n */\nexports.Controller_.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.className += 'tooltip ngeo-tooltip-measure';\n  this.measureTooltip_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center'\n  });\n  this.map_.addOverlay(this.measureTooltip_);\n};\n\n\n/**\n * Destroy the 'hover' tooltip\n * @private\n */\nexports.Controller_.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(\n      this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.map_.removeOverlay(this.measureTooltip_);\n  }\n};\n\n\n/**\n * Return the color value of a gmfx.ProfileLineConfiguration.\n * @param {string} layerName name of the elevation layer.\n * @return {string|undefined} A HEX color or undefined is nothing is found.\n * @export\n */\nexports.Controller_.prototype.getColor = function(layerName) {\n  const lineConfiguration = this.linesConfiguration_[layerName];\n  if (!lineConfiguration) {\n    return undefined;\n  }\n  return lineConfiguration.color;\n};\n\n\n/**\n * Return a copy of the existing layer names.\n * @return {Array.<string>} The names of layers.\n * @export\n */\nexports.Controller_.prototype.getLayersNames = function() {\n  return this.layersNames_.slice(0);\n};\n\n\n/**\n * @param {string} layerName name of the elevation layer.\n * @return {function(Object):number} Z extractor function.\n * @private\n */\nexports.Controller_.prototype.getZFactory_ = function(layerName) {\n  /**\n   * Generic GMF extractor for the 'given' value in 'values' in profileData.\n   * @param {Object} item The item.\n   * @return {number} The elevation.\n   * @private\n   */\n  const getZFn = function(item) {\n    if ('values' in item && layerName in item['values']) {\n      return parseFloat(item['values'][layerName]);\n    }\n    return 0;\n  };\n  return getZFn;\n};\n\n\n/**\n * Extractor for the 'dist' value in profileData.\n * @param {Object} item The item.\n * @return {number} The distance.\n * @private\n */\nexports.Controller_.prototype.getDist_ = function(item) {\n  if ('dist' in item) {\n    return item['dist'];\n  }\n  return 0;\n};\n\n\n/**\n * Request the profile.\n * @private\n */\nexports.Controller_.prototype.getJsonProfile_ = function() {\n  const geom = {\n    'type': 'LineString',\n    'coordinates': this.line.getCoordinates()\n  };\n\n  const params = {\n    'layers': this.layersNames_.join(','),\n    'geom': JSON.stringify(geom),\n    'nbPoints': this.nbPoints_\n  };\n\n  /** @type {Function} */ (this.$http_)({\n    url: this.gmfProfileJsonUrl_,\n    method: 'POST',\n    params: params,\n    paramSerializer: '$httpParamSerializerJQLike',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n  }).then(\n    this.getProfileDataSuccess_.bind(this),\n    this.getProfileDataError_.bind(this)\n  );\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\nexports.Controller_.prototype.getProfileDataSuccess_ = function(resp) {\n  const profileData = resp.data['profile'];\n  if (profileData instanceof Array) {\n    this.profileData = profileData;\n  }\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\nexports.Controller_.prototype.getProfileDataError_ = function(resp) {\n  this.isErrored = true;\n  console.error('Can not get JSON profile.');\n};\n\n\n/**\n * Request the csv profile with the current profile data.\n * @export\n */\nexports.Controller_.prototype.downloadCsv = function() {\n  if (this.profileData.length === 0) {\n    return;\n  }\n\n  /** @type {Array.<ngeox.GridColumnDef>} */\n  const headers = [];\n  let hasDistance = false;\n  const firstPoint = this.profileData[0];\n  if ('dist' in firstPoint) {\n    headers.push({name: 'distance'});\n    hasDistance = true;\n  }\n  const layers = [];\n  for (const layer in firstPoint['values']) {\n    headers.push({'name': layer});\n    layers.push(layer);\n  }\n  headers.push({name: 'x'});\n  headers.push({name: 'y'});\n\n  const rows = this.profileData.map((point) => {\n    const row = {};\n    if (hasDistance) {\n      row['distance'] = point['dist'];\n    }\n\n    layers.forEach((layer) => {\n      row[layer] = point['values'][layer];\n    });\n\n    row['x'] = point['x'];\n    row['y'] = point['y'];\n\n    return row;\n  });\n\n  this.ngeoCsvDownload_.startDownload(rows, headers, 'profile.csv');\n};\n\n\nexports.controller('GmfProfileController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.profile.drawLineComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport olCollection from 'ol/Collection.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olMap from 'ol/Map.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawProfileLine', [\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\n\n/**\n * Simple directive that can be put on any element. The directive listen on\n * clicks events to allow/disallow to draw one line (and only one) on the\n * map. Typically used to draw the line that will serve the gmf.Profile.\n *\n * Example:\n *\n *      <gmf-drawprofileline\n *        gmf-drawprofileline-active=\"mainCtrl.drawProfileActive\"\n *        gmf-drawprofileline-map=\"mainCtrl.map\"\n *        gmf-drawprofileline-line=\"mainCtrl.line\"\n *      </gmf-drawprofileline>\n *\n *\n * @htmlAttribute {ol.Map} gmf-drawprofileline-map The map.\n * @htmlAttribute {ol.geom.LineString} gmf-drawprofileline-line The variable to\n *     connect with the drawed line.\n * @htmlAttribute {boolean=} gmf-drawprofileline-active Active the component.\n * @htmlAttribute {ol.style.Style=} gmf-drawprofileline-style Optional style\n *     for the drawed line.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname gmfDrawprofileline\n */\nexports.directive_ = function() {\n  return {\n    scope: true,\n    controller: 'GmfDrawprofilelineController as ctrl',\n    restrict: 'A',\n    bindToController: {\n      'getMapFn': '&gmfDrawprofilelineMap',\n      'line': '=gmfDrawprofilelineLine',\n      'active': '=gmfDrawprofilelineActive',\n      'getStyleFn': '&?gmfDrawprofilelineStyle'\n    }\n  };\n};\n\n\nexports.directive('gmfDrawprofileline',\n  exports.directive_);\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Feature overlay\n *     manager.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfDrawprofilelineController\n */\nexports.Controller_ = function($scope, $element, $timeout,\n  ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {?ol.geom.LineString}\n   * @export\n   */\n  this.line;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  const overlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n  overlay.setFeatures(this.features_);\n\n  let style;\n  const styleFn = this['getStyleFn'];\n  if (styleFn) {\n    style = styleFn();\n    googAsserts.assertInstanceof(style, olStyleStyle);\n  } else {\n    style = new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 2\n      })\n    });\n  }\n  overlay.setStyle(style);\n\n  /**\n   * @type {!ol.interaction.Draw}\n   * @export\n   */\n  this.interaction = new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    features: this.features_\n  });\n\n  ngeoMiscDecorate.interaction(this.interaction);\n\n  // Clear the line as soon as the interaction is activated.\n  this.interaction.on('change:active', () => {\n    if (this.interaction.getActive()) {\n      this.clear_();\n    }\n  });\n\n  // Update the profile with the new geometry.\n  this.interaction.on('drawend', (event) => {\n    this.line = event.feature.getGeometry();\n    // using timeout to prevent double click to zoom the map\n    $timeout(() => {\n      this.interaction.setActive(false);\n    }, 0);\n  });\n\n  // Line may be removed from an other component\n  // for example closing the chart panel\n  $scope.$watch(\n    () => this.line,\n    (newLine, oldLine) => {\n      if (newLine === null) {\n        this.clear_();\n      }\n    });\n\n  $scope.$watch(\n    () => this.active,\n    (newValue) => {\n      if (newValue === false) {\n        this.clear_();\n      }\n      // Will activate the interaction automatically the first time\n      this.interaction.setActive(this.active);\n    }\n  );\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const map = this['getMapFn']();\n  googAsserts.assertInstanceof(map, olMap);\n  this.map_ = map;\n  this.map_.addInteraction(this.interaction);\n};\n\n\n/**\n * Clear the overlay and profile line.\n * @private\n */\nexports.Controller_.prototype.clear_ = function() {\n  this.features_.clear();\n  this.line = null;\n};\n\n\nexports.controller('GmfDrawprofilelineController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.profile.module\n */\nimport gmfProfileComponent from 'gmf/profile/component.js';\nimport gmfProfileDrawLineComponent from 'gmf/profile/drawLineComponent.js';\n\nimport './profile.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfProfileModule', [\n  gmfProfileComponent.name,\n  gmfProfileDrawLineComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.query.bboxQueryComponent\n */\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olInteractionDragBox from 'ol/interaction/DragBox.js';\nimport * as olEventsCondition from 'ol/events/condition.js';\n\nconst exports = angular.module('ngeoBboxQuery', [\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\n/**\n * Provides a \"bbox query\" directive.\n *\n * This directive is responsible of binding a map and the ngeo query service\n * together. While active, drawing a bbox while CTRL or the 'meta' key is pressed\n * issues a request to the query service.\n *\n * This directive doesn't require to be rendered in a visible DOM element, but\n * it could be used with a ngeo-btn to manage the activation of the directive.\n * See below an example without any use of UI:\n *\n * Example:\n *\n *      <span\n *        ngeo-bbox-query=\"\"\n *        ngeo-bbox-query-map=\"::ctrl.map\"\n *        ngeo-bbox-query-limit=\"50\"\n *        ngeo-bbox-query-active=\"ctrl.queryActive\">\n *        ngeo-bbox-query-autoclear=\"ctrl.queryAutoClear\">\n *      </span>\n *\n * See the live example: [../examples/bboxquery.html](../examples/bboxquery.html)\n *\n * @param {ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBboxQuery\n */\nexports.directive_ = function(ngeoMapQuerent) {\n  return {\n    restrict: 'A',\n    scope: false,\n    link: (scope, elem, attrs) => {\n      /**\n       * @type {ol.Map}\n       */\n      const map = scope.$eval(attrs['ngeoBboxQueryMap']);\n\n      const interaction = new olInteractionDragBox({\n        condition: olEventsCondition.platformModifierKeyOnly\n      });\n\n      /**\n       * Called when a bbox is drawn while this controller is active. Issue\n       * a request to the query service using the extent that was drawn.\n       * @param {ol.interaction.DragBox.Event} evt Event.\n       */\n      const handleBoxEnd = function(evt) {\n        const extent = interaction.getGeometry().getExtent();\n        ngeoMapQuerent.issue({\n          limit: scope.$eval(attrs['ngeoBboxQueryLimit']),\n          extent: extent,\n          map: map\n        });\n      };\n      interaction.on('boxend', handleBoxEnd);\n\n      // watch 'active' property -> activate/deactivate accordingly\n      scope.$watch(attrs['ngeoBboxQueryActive'],\n        (newVal, oldVal) => {\n          if (newVal) {\n            // activate\n            map.addInteraction(interaction);\n          } else {\n            // deactivate\n            map.removeInteraction(interaction);\n            if (scope.$eval(attrs['ngeoBboxQueryAutoclear']) !== false) {\n              ngeoMapQuerent.clear();\n            }\n          }\n        }\n      );\n    }\n  };\n};\n\nexports.directive('ngeoBboxQuery', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.raster.component\n */\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport * as olEvents from 'ol/events.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfRasterComponent', [\n  gmfRasterRasterService.module.name,\n  ngeoMiscDebounce.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/raster/widgetComponent', require('./widgetComponent.html'));\n});\n\n\nexports.value('gmfElevationwidgetTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfElevationwidgetTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/raster/widgetComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfElevationwidgetTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfElevationwidgetTemplateUrl($attrs, gmfElevationwidgetTemplateUrl) {\n  return gmfElevationwidgetTemplateUrl($attrs);\n}\n\n\n/**\n * Provide a directive that set a value each 500ms with the elevation under the\n * mouse cursor position on the map. The value must come from the elevation\n * service of a c2cgeoportal server. The server's URL must be defined as\n * config value of the application.\n *\n * Example:\n *\n *      <span gmf-elevation\n *            gmf-elevation-active=\"elevationActive\"\n *            gmf-elevation-elevation=\"elevationValue\"\n *            gmf-elevation-layer=\"mainCtrl.elevationLayer\"\n *            gmf-elevation-map=\"::mainCtrl.map\">\n *            {{elevationValue | number:2}}m\n *      </span>\n *\n *\n * @htmlAttribute {boolean} gmf-elevation-active A boolean to set active or\n *     deactive the component.\n * @htmlAttribute {number} gmf-elevation-elevation The value to set with the\n *     elevation value.\n * @htmlAttribute {string} gmf-elevation-layer Elevation layer to use.\n * @htmlAttribute {ol.Map} gmf-elevation-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname gmfElevation\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    controller: 'GmfElevationController as ctrl',\n    bindToController: true,\n    scope: {\n      'active': '<gmfElevationActive',\n      'elevation': '=gmfElevationElevation',\n      'loading': '=?gmfElevationLoading',\n      'layer': '<gmfElevationLayer',\n      'map': '=gmfElevationMap'\n    },\n    link: (scope, element, attr) => {\n      const ctrl = scope['ctrl'];\n\n      // Watch active or not.\n      scope.$watch(() => ctrl.active, function(active) {\n        this.toggleActive_(active);\n      }.bind(ctrl));\n\n      // Watch current layer.\n      scope.$watch(() => ctrl.layer, function(layer) {\n        this.layer = layer;\n        this.elevation = null;\n      }.bind(ctrl));\n    }\n  };\n};\n\n\nexports.directive('gmfElevation', exports.component_);\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {ngeox.miscDebounce} ngeoDebounce Ngeo debounce factory\n * @param {gmf.raster.RasterService} gmfRaster Gmf Raster service\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfElevationController\n */\nexports.Controller_ = function($scope, ngeoDebounce, gmfRaster) {\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  /**\n   * @type {boolean}\n   */\n  this.active;\n\n  /**\n   * @type {!number|undefined}\n   * @export\n   */\n  this.elevation;\n\n  /**\n   * @type {string}\n   */\n  this.layer;\n\n  /**\n   * @type {ol.Map}\n   */\n  this.map;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.inViewport_ = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.loading = false;\n};\n\n/**\n * Active or deactive the request of the raster each 500 ms on pointermove.\n * @param {boolean} active true to make requests.\n * @private\n */\nexports.Controller_.prototype.toggleActive_ = function(active) {\n  this.elevation = undefined;\n  if (active) {\n    googAsserts.assert(this.listenerKeys_.length === 0);\n\n    // Moving the mouse clears previously displayed elevation\n    this.listenerKeys_.push(olEvents.listen(this.map, 'pointermove',\n      function(e) {\n        this.scope_.$apply(() => {\n          this.inViewport_ = true;\n          this.elevation = undefined;\n          this.loading = false;\n        });\n      }, this));\n\n    // Launch the elevation service request when the user stops moving the\n    // mouse for less short delay\n    this.listenerKeys_.push(olEvents.listen(this.map, 'pointermove',\n      this.ngeoDebounce_(this.pointerStop_.bind(this), 500, true)\n    ));\n\n    this.listenerKeys_.push(olEvents.listen(this.map.getViewport(), 'mouseout', () => {\n      this.scope_.$apply(() => {\n        this.elevation = undefined;\n        this.inViewport_ = false;\n        this.loading = false;\n      });\n    }));\n  } else {\n    this.elevation = undefined;\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n};\n\n\n/**\n * Request data from a raster from a MapBrowserPointerEvent's coordinates.\n * Called when the user stopped moving the mouse for 500ms.\n * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n * @private\n */\nexports.Controller_.prototype.pointerStop_ = function(e) {\n  if (this.inViewport_) {\n    this.loading = true;\n    const params = {\n      'layers': this.layer\n    };\n    this.gmfRaster_.getRaster(e.coordinate, params).then(\n      this.getRasterSuccess_.bind(this),\n      this.getRasterError_.bind(this)\n    );\n  }\n};\n\n\n/**\n * @param {Object.<string, number>} resp Response of the get Raster service.\n * @private\n */\nexports.Controller_.prototype.getRasterSuccess_ = function(resp) {\n  googAsserts.assert(this.layer, 'A layer should be selected');\n  this.elevation = resp[this.layer];\n  this.loading = false;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.getRasterError_ = function() {\n  console.error('Error on getting the raster.');\n  this.elevation = undefined;\n  this.loading = false;\n};\n\n\nexports.controller('GmfElevationController', exports.Controller_);\n\n\n/**\n * Provides a component which encapsulates the elevation component (see above)\n * in a button with dropdown menu to be included in a application directly.\n *\n * Example:\n *  <gmf-elevationwidget\n *      gmf-elevationwidget-map=\"::mainCtrl.map\"\n *      gmf-elevationwidget-layers=\"::mainCtrl.elevationLayers\"\n *      gmf-elevationwidget-active=\"mainCtrl.showInfobar\">\n *  </gmf-elevationwidget>\n *\n * @htmlAttribute {ol.Map} gmf-elevationwidget-map The map.\n * @htmlAttribute {Array.<string>} gmf-elevationwidget-layers The list of\n *     layers.\n * @htmlAttribute {boolean} gmf-elevationwidget-active Whether to activate the\n *     elevation component.\n *\n * @ngdoc component\n * @ngname gmfElevationwidget\n */\nexports.widgetComponent_ = {\n  controller: 'gmfElevationwidgetController as ctrl',\n  bindings: {\n    'map': '<gmfElevationwidgetMap',\n    'layers': '<gmfElevationwidgetLayers',\n    'active': '<gmfElevationwidgetActive'\n  },\n  templateUrl: gmfElevationwidgetTemplateUrl\n};\nexports.component('gmfElevationwidget', exports.widgetComponent_);\n\n\n/**\n * @constructor\n * @private\n * @ngdoc controller\n */\nexports.WidgetController_ = function() {\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!Array.<string>}\n   * @export\n   */\n  this.layers;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.selectedElevationLayer;\n};\n\n\nexports.WidgetController_.prototype.$onInit = function() {\n  this.selectedElevationLayer = this.layers[0];\n};\n\n\nexports.controller('gmfElevationwidgetController',\n  exports.WidgetController_);\n\n\nexport default exports;\n","/**\n * @module ngeo.print.Utils\n */\nimport * as olHas from 'ol/has.js';\nimport * as olMath from 'ol/math.js';\n\n/**\n * Provides a service with print utility functions.\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoPrintUtils\n */\nconst exports = function() {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.extentHalfHorizontalDistance_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.extentHalfVerticalDistance_;\n\n};\n\n\n/**\n * @const\n * @private\n */\nexports.INCHES_PER_METER_ = 39.37;\n\n\n/**\n * @const\n * @private\n */\nexports.DOTS_PER_INCH_ = 72;\n\n\n/**\n * Return a function to use as map postcompose listener for drawing a print\n * mask on the map.\n * @param {function():ol.Size} getSize User-defined function returning the\n *     size in dots of the map to print.\n * @param {function(olx.FrameState):number} getScale User-defined function\n *     returning the scale of the map to print.\n * @param {function():number=} opt_rotation User defined function returning the\n *     inclination of the canvas in degree (-180 to 180).\n * returning the scale of the map to print.\n * @return {function(ol.render.Event)} Function to use as a map postcompose\n * listener.\n * @export\n */\nexports.prototype.createPrintMaskPostcompose = function(getSize, getScale, opt_rotation) {\n  const self = this;\n\n  return (\n  /**\n        * @param {ol.render.Event} evt Postcompose event.\n        */\n    function(evt) {\n      const context = evt.context;\n      const frameState = evt.frameState;\n\n      const resolution = frameState.viewState.resolution;\n\n      const viewportWidth = frameState.size[0] * frameState.pixelRatio;\n      const viewportHeight = frameState.size[1] * frameState.pixelRatio;\n\n      const center = [viewportWidth / 2, viewportHeight / 2];\n\n      const size = getSize();\n      const height = size[1] * olHas.DEVICE_PIXEL_RATIO;\n      const width = size[0] * olHas.DEVICE_PIXEL_RATIO;\n      const scale = getScale(frameState);\n\n      const ppi = exports.DOTS_PER_INCH_;\n      const ipm = exports.INCHES_PER_METER_;\n\n      const extentHalfWidth =\n           (((width / ppi) / ipm) * scale / resolution) / 2;\n      self.extentHalfHorizontalDistance_ =\n           (((size[0] / ppi) / ipm) * scale) / 2;\n\n      const extentHalfHeight =\n           (((height / ppi) / ipm) * scale / resolution) / 2;\n      self.extentHalfVerticalDistance_ =\n           (((size[1] / ppi) / ipm) * scale) / 2;\n\n      // Draw a mask on the whole map.\n      context.beginPath();\n      context.moveTo(0, 0);\n      context.lineTo(viewportWidth, 0);\n      context.lineTo(viewportWidth, viewportHeight);\n      context.lineTo(0, viewportHeight);\n      context.lineTo(0, 0);\n      context.closePath();\n\n      // Draw the print zone\n      if (!opt_rotation) {\n        self.drawPrintZone_(context, center, extentHalfWidth,\n          extentHalfHeight);\n      } else {\n        const rotation = olMath.toRadians(opt_rotation());\n        self.drawPrintZoneWithRotation_(context, center, extentHalfWidth,\n          extentHalfHeight, rotation);\n      }\n\n      // Fill the mask\n      context.fillStyle = 'rgba(0, 5, 25, 0.5)';\n      context.fill();\n    }\n  );\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context of the Postcompose event.\n * @param {Array.<number>} center Center of the viewport (x; y).\n * @param {number} extentHalfWidth Extent half width.\n * @param {number} extentHalfHeight Extent half height.\n * @private\n */\nexports.prototype.drawPrintZone_ = function(context, center,\n  extentHalfWidth, extentHalfHeight) {\n  const minx = center[0] - extentHalfWidth;\n  const miny = center[1] - extentHalfHeight;\n  const maxx = center[0] + extentHalfWidth;\n  const maxy = center[1] + extentHalfHeight;\n\n  context.moveTo(minx, miny);\n  context.lineTo(minx, maxy);\n  context.lineTo(maxx, maxy);\n  context.lineTo(maxx, miny);\n  context.lineTo(minx, miny);\n  context.closePath();\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context of the Postcompose event.\n * @param {Array.<number>} center Center of the viewport (x; y).\n * @param {number} extentHalfWidth Extent half width.\n * @param {number} extentHalfHeight Extent half height.\n * @param {number} rotation Rotation value in radians.\n * @private\n */\nexports.prototype.drawPrintZoneWithRotation_ = function(context, center,\n  extentHalfWidth, extentHalfHeight, rotation) {\n  // diagonal = distance p1 to center.\n  const diagonal = Math.sqrt(Math.pow(extentHalfWidth, 2) +\n      Math.pow(extentHalfHeight, 2));\n  // gamma = angle between horizontal and diagonal (with rotation).\n  const gamma = Math.atan(extentHalfHeight / extentHalfWidth) - rotation;\n  // omega = angle between diagonal and vertical (with rotation).\n  const omega = Math.atan(extentHalfWidth / extentHalfHeight) - rotation;\n  // Calculation of each corner.\n  const x1 = center[0] - Math.cos(gamma) * diagonal;\n  const y1 = center[1] + Math.sin(gamma) * diagonal;\n  const x2 = center[0] + Math.sin(omega) * diagonal;\n  const y2 = center[1] + Math.cos(omega) * diagonal;\n  const x3 = center[0] + Math.cos(gamma) * diagonal;\n  const y3 = center[1] - Math.sin(gamma) * diagonal;\n  const x4 = center[0] - Math.sin(omega) * diagonal;\n  const y4 = center[1] - Math.cos(omega) * diagonal;\n\n  context.moveTo(x1, y1);\n  context.lineTo(x2, y2);\n  context.lineTo(x3, y3);\n  context.lineTo(x4, y4);\n  context.lineTo(x1, y1);\n  context.closePath();\n};\n\n\n/**\n * Get the optimal print scale for a map, the map being defined by its\n * size (in pixels) and resolution (in map units per pixel).\n * @param {ol.Size} mapSize Size of the map on the screen (px).\n * @param {number} mapResolution Resolution of the map on the screen.\n * @param {ol.Size} printMapSize Size of the map on the paper (dots).\n * @param {Array.<number>} printMapScales Supported map scales on the paper.\n * The scales are provided as scale denominators, sorted in ascending order.\n * E.g. `[500, 1000, 2000, 4000]`.\n * @return {number} The best scale. `-1` is returned if there is no optimal\n * scale, that is the optimal scale is lower than or equal to the first value\n * in `printMapScales`.\n * @export\n */\nexports.prototype.getOptimalScale = function(\n  mapSize, mapResolution, printMapSize, printMapScales) {\n\n  const mapWidth = mapSize[0] * mapResolution;\n  const mapHeight = mapSize[1] * mapResolution;\n\n  const scaleWidth = mapWidth * exports.INCHES_PER_METER_ *\n      exports.DOTS_PER_INCH_ / printMapSize[0];\n  const scaleHeight = mapHeight * exports.INCHES_PER_METER_ *\n      exports.DOTS_PER_INCH_ / printMapSize[1];\n\n  const scale = Math.min(scaleWidth, scaleHeight);\n\n  let optimal = -1;\n  for (let i = 0, ii = printMapScales.length; i < ii; ++i) {\n    if (scale > printMapScales[i]) {\n      optimal = printMapScales[i];\n    }\n  }\n\n  return optimal;\n};\n\n\n/**\n * Get the optimal map resolution for a print scale and a map size.\n * @param {ol.Size} mapSize Size of the map on the screen (px).\n * @param {ol.Size} printMapSize Size of the map on the paper (dots).\n * @param {number} printMapScale Map scale on the paper.\n * @return {number} The optimal map resolution.\n * @export\n */\nexports.prototype.getOptimalResolution = function(\n  mapSize, printMapSize, printMapScale) {\n\n  const dotsPerMeter =\n      exports.DOTS_PER_INCH_ * exports.INCHES_PER_METER_;\n\n  const resolutionX = (printMapSize[0] * printMapScale) /\n      (dotsPerMeter * mapSize[0]);\n  const resolutionY = (printMapSize[1] * printMapScale) /\n      (dotsPerMeter * mapSize[1]);\n\n  const optimalResolution = Math.max(resolutionX, resolutionY);\n\n  return optimalResolution;\n};\n\n\n/**\n * Get the coordinates of the bottom left corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the bottom left corner.\n */\nexports.prototype.getBottomLeftCorner = function(mapCenter) {\n  return [mapCenter[0] - this.extentHalfHorizontalDistance_,\n    mapCenter[1] - this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the bottom right corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.ç\n * @return {ol.Coordinate} The coordinates of the bottom right corner.\n */\nexports.prototype.getBottomRightCorner = function(mapCenter) {\n  return [mapCenter[0] + this.extentHalfHorizontalDistance_,\n    mapCenter[1] - this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the up left corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the up left corner.\n */\nexports.prototype.getUpLeftCorner = function(mapCenter) {\n  return [mapCenter[0] - this.extentHalfHorizontalDistance_,\n    mapCenter[1] + this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the up right corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the up right corner.\n */\nexports.prototype.getUpRightCorner = function(mapCenter) {\n  return [mapCenter[0] + this.extentHalfHorizontalDistance_,\n    mapCenter[1] + this.extentHalfVerticalDistance_];\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoPrintUtils', []);\nexports.module.service('ngeoPrintUtils', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.print.component\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoPrintService from 'ngeo/print/Service.js';\nimport ngeoPrintUtils from 'ngeo/print/Utils.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olMap from 'ol/Map.js';\nimport * as olMath from 'ol/math.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfPrintComponent', [\n  gmfAuthenticationService.module.name,\n  gmfThemeThemes.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoPrintService.module.name,\n  ngeoPrintUtils.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.value('gmfPrintTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['gmfPrintTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/print';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/print', require('./component.html'));\n});\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.PrintStateEnum = {\n\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT_IN_USE: 'notInUse',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  PRINTING: 'printing',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR_ON_REPORT: 'errorOnReport',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  CAPABILITIES_NOT_LOADED: 'capabilitiesNotLoaded',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR_ON_GETCAPABILITIES: 'errorOnGetCapabilities'\n};\n\n\nexports.value('gmfPrintState', {\n  'state': exports.PrintStateEnum.CAPABILITIES_NOT_LOADED\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfPrintTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfPrintTemplateUrl($element, $attrs, gmfPrintTemplateUrl) {\n  return gmfPrintTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component that display a print panel. This panel is populated with\n * a form corresponding to the capabilities delivered by a GMF print v3 server.\n * If you want to use another template for your print panel, you can see the\n * available layout information in the 'gmfx.PrintLayoutInfo' classes.\n *\n * Simple example:\n *\n *      <gmf-print\n *        gmf-print-map=\"::mainCtrl.map\"\n *        gmf-print-active=\"printActive\"\n *        gmf-print-rotatemask=\"::true\">\n *      </gmf-print>\n *\n * Example with user defined attribute:\n *\n *      <gmf-print\n *        gmf-print-map=\"::mainCtrl.map\"\n *        gmf-print-active=\"printActive\"\n *        gmf-print-rotatemask=\"::true\"\n *        gmf-print-hiddenattributes=\"::['name']\"\n *        gmf-print-attributes-out=\"::attributes\">\n *        <div ng-repeat=\"attribute in ::attributes\">\n *          <div ng-if=\"attribute.name == 'name'\">\n *            <input ng-model=\"attribute.value\" placeholder=\"name\" />\n *          </div>\n *        </div>\n *      </gmf-print>\n *\n * Note: The 'print' and 'cancel' functions can also be called via globals\n * events 'gmfStartPrint' and 'gmfCancelPrint'.\n *\n * @htmlAttribute {ol.Map} gmf-print-map The map.\n * @htmlAttribute {boolean} gmf-print-active A boolean that informs if the\n *     panel is open or not.\n * @htmlAttribute {boolean} gmf-print-rotatemask Optional. True to apply\n *     rotation on the mask instead of the map. By default, the map rotates.\n * @htmlAttribute {Object.<string, string|number|boolean>}\n *     gmf-print-fieldvalues optional. Key, value object to define default\n *     value in each of your print panel field. The key refers to the\n *     property's name of the field.\n *     Example: {'comments': 'demo', 'legend': false}. Doesn't work for the dpi\n *     and the scale. Server's values are used in priority.\n * @htmlAttribute {Array.<string>} gmf-print-hiddenattributes The list of attributes that should be hidden.\n * @ngdoc component\n * @ngname gmfPrint\n */\nexports.component_ = {\n  bindings: {\n    'map': '<gmfPrintMap',\n    'active': '=gmfPrintActive',\n    'rotateMask': '<?gmfPrintRotatemask',\n    'fieldValues': '<?gmfPrintFieldvalues',\n    'hiddenAttributeNames': '<?gmfPrintHiddenattributes',\n    'attributesOut': '=?gmfPrintAttributesOut'\n  },\n  controller: 'GmfPrintController',\n  templateUrl: gmfPrintTemplateUrl,\n  transclude: true\n};\n\n\nexports.component('gmfPrint', exports.component_);\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {angular.JQLite} $element Element.\n   * @param {angular.Scope} $rootScope Angular root scope.\n   * @param {angular.Scope} $scope Angular scope.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {ngeo.map.LayerHelper} ngeoLayerHelper The ngeo Layer Helper service.\n   * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo Feature Overlay\n   *     Manager service.\n   * @param {ngeo.print.Utils} ngeoPrintUtils The ngeo PrintUtils service.\n   * @param {ngeox.CreatePrint} ngeoCreatePrint The ngeo Create Print function.\n   * @param {string} gmfPrintUrl A MapFishPrint url.\n   * @param {gmf.authentication.Service} gmfAuthenticationService The authentication service.\n   * @param {ngeox.QueryResult} ngeoQueryResult ngeo query result.\n   * @param {angular.$filter} $filter Angular $filter service.\n   * @param {gmf.print.component.PrintStateEnum} gmfPrintState GMF print state.\n   * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n   * @private\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfPrintController\n   */\n  constructor($element, $rootScope, $scope, $timeout, $q, $injector,\n    gettextCatalog, ngeoLayerHelper, ngeoFeatureOverlayMgr,  ngeoPrintUtils,\n    ngeoCreatePrint, gmfPrintUrl, gmfAuthenticationService, ngeoQueryResult,\n    $filter, gmfPrintState, gmfThemes) {\n\n    /**\n     * @type {gmf.print.component.PrintStateEnum}\n     * @private\n     */\n    this.gmfPrintState_ = gmfPrintState;\n\n    /**\n     * @type {function(string): string}\n     * @private\n     */\n    this.translate_ = $filter('translate');\n\n    /**\n     * @type {ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.active;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.rotateMask = false;\n\n    /**\n     * @type {Object.<string, string|number|boolean>!}\n     * @export\n     */\n    this.fieldValues = {};\n\n    /**\n     * @type {Array.<string>}\n     * @export\n     */\n    this.attributesOut;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$rootScope_ = $rootScope;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.$timeout_ = $timeout;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.$q_ = $q;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {ol.layer.Vector}\n     * @private\n     */\n    this.featureOverlayLayer_ = ngeoFeatureOverlayMgr.getLayer();\n\n    /**\n     * @type {ngeo.print.Utils}\n     * @private\n     */\n    this.ngeoPrintUtils_ = ngeoPrintUtils;\n\n    /**\n     * @type {ngeo.print.Service}\n     * @private\n     */\n    this.ngeoPrint_ = ngeoCreatePrint(gmfPrintUrl);\n\n    /**\n     * @type {ngeox.QueryResult}\n     * @private\n     */\n    this.ngeoQueryResult_ = ngeoQueryResult;\n\n    /**\n     * @type {gmf.authentication.Service}\n     * @private\n     */\n    this.gmfAuthenticationService_ = gmfAuthenticationService;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    this.cacheVersion_ = '0';\n    if ($injector.has('cacheVersion')) {\n      this.cacheVersion_ = $injector.get('cacheVersion');\n    }\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.scaleInput = false;\n\n    if ($injector.has('gmfPrintOptions')) {\n      this.scaleInput = $injector.get('gmfPrintOptions')['scaleInput'];\n    }\n\n    /**\n     * @type {?angular.$q.Deferred}\n     * @private\n     */\n    this.requestCanceler_ = null;\n\n    /**\n     * @type {?angular.$q.Promise}\n     * @private\n     */\n    this.statusTimeoutPromise_ = null;\n\n    /**\n     * @type {Array.<number>|null}\n     * @private\n     */\n    this.onDragPreviousMousePosition_ = null;\n\n    /**\n     * @type {?angular.$q.Promise|null}\n     * @private\n     */\n    this.rotationTimeoutPromise_ = null;\n\n    /**\n     * @type {ol.EventsKey}\n     * @private\n     */\n    this.postComposeListenerKey_;\n\n    /**\n     * @type {ol.EventsKey}\n     * @private\n     */\n    this.pointerDragListenerKey_;\n\n    /**\n     * @type {ol.EventsKey}\n     * @private\n     */\n    this.mapViewResolutionChangeKey_;\n\n    /**\n     * Current report reference id.\n     * @type {string}\n     * @private\n     */\n    this.curRef_ = '';\n\n    /**\n     * Formats availables in capabilities.\n     * @type {Array.<string>}\n     * @private\n     */\n    this.formats_ = [];\n\n    /**\n     * An array of attributes objects from capabilities.\n     * @type {Array.<Object>}\n     * @private\n     */\n    this.layouts_ = [];\n\n    /**\n     * An attributes object from capabilities.\n     * @type {Object}\n     * @private\n     */\n    this.layout_ = {};\n\n    /**\n     * @type {Array.<number>}\n     * @private\n     */\n    this.paperSize_ = [];\n\n    /**\n     * @type {gmfx.PrintLayoutInfo}\n     * @export\n     */\n    this.layoutInfo = {};\n\n    /**\n     * @type {number}\n     * @export\n     */\n    this.rotation = 0;\n\n    /**\n     * @type {Array.<string>}\n     * @export\n     */\n    this.hiddenAttributeNames;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.scaleManuallySelected_ = false;\n\n    /**\n     * @type {angular.JQLite}\n     * @export\n     */\n    this.rotationInput_ = $element.find('.gmf-print-rotation-input');\n\n    this.rotationInput_.on('input', (event) => {\n      const rotation = $(event.target).val();\n      if (rotation !== '') {\n        this.setRotation(/** @type {number} */ (rotation));\n      }\n    });\n\n    /**\n     * @type {function(ol.render.Event)}\n     */\n    this.postcomposeListener_;\n\n    /**\n     * @type {angular.$http.HttpPromise}\n     * @private\n     */\n    this.capabilities_;\n\n    /**\n     * @type {gmfThemes.GmfOgcServers}\n     * @private\n     */\n    this.ogcServers_;\n\n    /**\n     * @type {Array.<gmfThemes.GmfTheme>}\n     * @private\n     */\n    this.currentThemes_;\n  }\n\n\n  /**\n   * Init the controller\n   */\n  $onInit() {\n    // Clear the capabilities if the roleId changes\n    this.$scope_.$watch(() => this.gmfAuthenticationService_.getRoleId(), () => {\n      this.gmfPrintState_.state = exports.PrintStateEnum.CAPABILITIES_NOT_LOADED;\n      this.capabilities_ = null;\n    });\n\n    this.$scope_.$watch(() => this.active, (active) => {\n      this.togglePrintPanel_(active);\n    });\n\n    // Print on event.\n    this.$rootScope_.$on('gmfStartPrint', (event, format) => {\n      this.print(`${format}`);\n    });\n\n    // Cancel print task on event.\n    this.$rootScope_.$on('gmfCancelPrint', () => {\n      this.cancel();\n    });\n\n    this.gmfThemes_.getOgcServersObject().then((ogcServersObject) => {\n      this.ogcServers_ = ogcServersObject;\n    });\n\n    this.gmfThemes_.getThemesObject().then((currentThemes) => {\n      this.currentThemes_ = currentThemes;\n    });\n\n    /**\n     * @return {ol.Size} Size in dots of the map to print.\n     */\n    const getSizeFn = () => this.paperSize_;\n\n    let getRotationFn;\n    if (this.rotateMask) {\n      /**\n       * @return {number} rotation to apply.\n       */\n      getRotationFn = () => this.rotation;\n    }\n\n    this.postcomposeListener_ = this.ngeoPrintUtils_.createPrintMaskPostcompose(\n      getSizeFn, this.getScaleFn.bind(this), getRotationFn);\n  }\n\n\n  /**\n   * @param {olx.FrameState} frameState Frame state.\n   * @return {number} Scale of the map to print.\n   */\n  getScaleFn(frameState) {\n    // Don't compute an optimal scale if the user manually choose a value not in\n    // the pre-defined scales. (`scaleInput` in `gmfPrintOptions`).\n    googAsserts.assert(this.layoutInfo.scales);\n    googAsserts.assert(this.layoutInfo.scale !== undefined);\n    if (!this.scaleManuallySelected_ &&\n        (this.layoutInfo.scale === -1 || olArray.includes(this.layoutInfo.scales, this.layoutInfo.scale))) {\n      const mapSize = frameState.size;\n      const viewResolution = frameState.viewState.resolution;\n      this.layoutInfo.scale = this.getOptimalScale_(mapSize, viewResolution);\n    }\n    return this.layoutInfo.scale;\n  }\n\n\n  /**\n   * @param {boolean} active True to listen events related to the print and get\n   *     capabilities. False to stop listen them and set rotation to 0.\n   * @private\n   */\n  togglePrintPanel_(active) {\n    if (active) {\n      if (!this.capabilities_) {\n        this.getCapabilities_();\n      }\n      this.capabilities_.then((resp) => {\n        // make sure the panel is still open\n        if (!this.active) {\n          return;\n        }\n        this.gmfPrintState_.state = exports.PrintStateEnum.NOT_IN_USE;\n        // Get capabilities - On success\n        this.parseCapabilities_(resp);\n        this.postComposeListenerKey_ = olEvents.listen(this.map, 'postcompose', this.postcomposeListener_);\n        this.pointerDragListenerKey_ = olEvents.listen(this.map, 'pointerdrag', this.onPointerDrag_, this);\n        this.mapViewResolutionChangeKey_ = olEvents.listen(this.map.getView(), 'change:resolution', () => {\n          this.scaleManuallySelected_ = false;\n        });\n        this.map.render();\n      }, (resp) => {\n        // Get capabilities - On error\n        this.gmfPrintState_.state = exports.PrintStateEnum.ERROR_ON_GETCAPABILITIES;\n        this.capabilities_ = null;\n      });\n    } else {\n      olEvents.unlistenByKey(this.postComposeListenerKey_);\n      olEvents.unlistenByKey(this.pointerDragListenerKey_);\n      olEvents.unlistenByKey(this.mapViewResolutionChangeKey_);\n      this.setRotation(0);\n      this.map.render(); // Redraw (remove) post compose mask;\n    }\n  }\n\n\n  /**\n   * Gets the print capabilities.\n   * @param {number|null=} opt_roleId The role id.\n   * @private\n   */\n  getCapabilities_(opt_roleId) {\n    this.capabilities_ = this.ngeoPrint_.getCapabilities(\n      /** @type {angular.$http.Config} */ ({\n        withCredentials: true,\n        params: opt_roleId ? {\n          'role': opt_roleId,\n          'cache_version': this.cacheVersion_\n        } : {\n          'cache_version': this.cacheVersion_\n        }\n      }));\n  }\n\n\n  /**\n   * Create the list of layouts, get the formats, get the first layout in\n   * gmf print v3 capabilities and then update the print panel layout information.\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  parseCapabilities_(resp) {\n    const data = resp['data'];\n    this.formats_ = data['formats'] || [];\n    this.layouts_ = data['layouts'];\n    this.layout_ = data['layouts'][0];\n\n    this.layoutInfo.layouts = [];\n    this.layouts_.forEach((layout) => {\n      this.layoutInfo.layouts.push(layout.name);\n    });\n\n    this.updateFields_();\n  }\n\n\n  /**\n   * Update layout information with the user values if there are always available in the\n   * current layout otherwise use the defaults values of the layout.\n   * If a field doesn't exist in the current layout, set it to undefined so the\n   * view can hide it. Update also the paper size.\n   * custom print templates).\n   * @private\n   */\n  updateFields_() {\n    this.layoutInfo.layout = this.layout_.name;\n\n    const mapInfo = this.isAttributeInCurrentLayout_('map');\n    googAsserts.assertObject(mapInfo);\n    const clientInfo = mapInfo['clientInfo'];\n    googAsserts.assertObject(clientInfo);\n    this.paperSize_ = [clientInfo['width'], clientInfo['height']];\n\n    this.updateCustomFields_();\n\n    const legend = this.isAttributeInCurrentLayout_('legend');\n    if (this.layoutInfo.legend === undefined) {\n      this.layoutInfo.legend = !!(legend !== undefined ?\n        legend : this.fieldValues['legend']);\n    }\n\n    this.layoutInfo.scales = clientInfo['scales'] || [];\n    this.layoutInfo.dpis = clientInfo['dpiSuggestions'] || [];\n\n    const mapSize = this.map.getSize();\n    const viewResolution = this.map.getView().getResolution();\n    this.layoutInfo.scale = this.getOptimalScale_(mapSize, viewResolution);\n\n    this.layoutInfo.dpi =\n        (this.layoutInfo.dpi && this.layoutInfo.dpis.indexOf(this.layoutInfo.dpi) > 0) ?\n          this.layoutInfo.dpi : this.layoutInfo.dpis[0];\n\n    this.layoutInfo.formats = {};\n    this.formats_.forEach((format) => {\n      this.layoutInfo.formats[format] = true;\n    });\n\n    this.attributesOut = this.layoutInfo['simpleAttributes'];\n\n    // Force the update of the mask\n    this.map.render();\n  }\n\n\n  /**\n   * Update simple attributes information with gmfx.Customfield to be able to generate a form\n   * from a custom GMF print v3 configuration.\n   * @private\n   */\n  updateCustomFields_() {\n    let name, rawType, value, type;\n    if (!this.layoutInfo.simpleAttributes) {\n      this.layoutInfo.simpleAttributes = [];\n    }\n    const simpleAttributes = this.layoutInfo.simpleAttributes;\n    const previousAttributes = simpleAttributes.splice(0, simpleAttributes.length);\n\n    // The attributes without 'clientParams' are the custom layout information (defined by end user).\n    this.layout_.attributes.forEach((attribute) => {\n      if (!attribute['clientParams']) {\n        name = `${attribute.name}`;\n        const defaultValue = attribute.default;\n        value = (defaultValue !== undefined && defaultValue !== '') ?\n          defaultValue : this.fieldValues[name];\n\n        // Try to use existing form field type\n        rawType = `${attribute.type}`;\n        switch (rawType) {\n          case 'String':\n            type = (name === 'comments') ? 'textarea' : 'text';\n            break;\n          case 'Boolean':\n            type = 'checkbox';\n            break;\n          case 'Number':\n            type = 'number';\n            value = parseFloat(value);\n            value = isNaN(value) ? 0 : value;\n            break;\n          default:\n            type = rawType;\n        }\n\n        // If it exists use the value of previous same field.\n        previousAttributes.forEach((c) => {\n          if (c.name === name && c.type === type) {\n            return value = c.value;\n          }\n        });\n\n        this.layoutInfo.simpleAttributes.push(/** gmfx.PrintSimpleAttributes */ ({\n          name,\n          type,\n          value\n        }));\n      }\n    });\n  }\n\n\n  /**\n   * Return a capabilities 'attribute' object corresponding to the given name.\n   * @param {string} name Name of the attribute to get.\n   * @return {Object|null} corresponding attribute or null.\n   * @private\n   */\n  isAttributeInCurrentLayout_(name) {\n    let attr = null;\n    this.layout_.attributes.forEach((attribute) => {\n      if (attribute.name === name) {\n        return attr = attribute;\n      }\n    });\n    return attr;\n  }\n\n\n  /**\n   * Set the current rotation value.\n   * Updating the rotation will redraw the mask or rotate the map (depending on the configuration).\n   * @param {number} rotation The optional new rotation value in degrees.\n   */\n  setRotation(rotation) {\n    this.rotation = olMath.clamp(rotation, -180, 180);\n\n    // sync all the inputs\n    this.rotationInput_.val(this.rotation.toString());\n\n    // Render the map to update the postcompose mask or rotate the map.\n    if (this.rotateMask) {\n      this.map.render();\n    } else {\n      this.map.getView().setRotation(olMath.toRadians(this.rotation));\n    }\n  }\n\n\n  /**\n   * Calculate the angle and the sense of rotation between two lines. One from the\n   * center of the map and the point of the last call to this function and one\n   * from the same center and the point of the current call.\n   * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n   * @private\n   */\n  onPointerDrag_(e) {\n    const originalEvent = e.originalEvent;\n    const mapCenter = this.map.getView().getCenter();\n    if (this.active && originalEvent.altKey && originalEvent.shiftKey && mapCenter) {\n      const center = this.map.getPixelFromCoordinate(mapCenter);\n      const pixel = e.pixel;\n      // Reset previous position between two different sessions of drags events.\n      if (this.rotationTimeoutPromise_ === null) {\n        this.onDragPreviousMousePosition_ = null;\n      } else {\n        // Cancel the timeout to keep this session of drags event\n        this.$timeout_.cancel(this.rotationTimeoutPromise_);\n        // Calculate angle and sense of rotation.\n        const p0x = this.onDragPreviousMousePosition_[0] - center[0];\n        const p0y = this.onDragPreviousMousePosition_[1] - center[1];\n        const p1x = pixel[0] - center[0];\n        const p1y = pixel[1] - center[1];\n        const centerToP0 = Math.sqrt(Math.pow(p0x, 2) + Math.pow(p0y, 2));\n        const centerToP1 = Math.sqrt(Math.pow(p1x, 2) + Math.pow(p1y, 2));\n        const sense = (p0x * p1y - p0y * p1x) > 0 ? 1 : -1;\n        let angle = (p0x * p1x + p0y * p1y) / (centerToP0 * centerToP1);\n        angle = angle <= 1 ? sense * Math.acos(angle) : 0;\n        const boost = centerToP1 / 200;\n        const increment = Math.round(olMath.toDegrees(angle) * boost);\n\n        // Set rotation then update the view.\n        this.setRotation(this.rotation + increment);\n        this.$scope_.$digest();\n      }\n      // Prepare the removal of this session of drags events\n      this.rotationTimeoutPromise_ = this.$timeout_(() => {\n        this.rotationTimeoutPromise_ = null;\n      }, 500);\n      // Keep the current position for the next calculation.\n      this.onDragPreviousMousePosition_ = pixel;\n    }\n  }\n\n\n  /**\n   * Create a print report based on the values of the 'layoutInfo' values.\n   * @param {string} format An output format corresponding to one format in the\n   *     capabilities document ('pdf', 'png', etc).\n   * @export\n   */\n  print(format) {\n    // Do not print if a print task is already processing.\n    if (this.gmfPrintState_.state === exports.PrintStateEnum.PRINTING) {\n      return;\n    }\n    this.requestCanceler_ = this.$q_.defer();\n    this.gmfPrintState_.state = exports.PrintStateEnum.PRINTING;\n\n    const mapSize = this.map.getSize();\n    const viewResolution = this.map.getView().getResolution() || 0;\n    const scale = this.layoutInfo.scale || this.getOptimalScale_(mapSize, viewResolution);\n    const datasource = this.getDataSource_();\n\n    const customAttributes = {\n      'datasource': datasource\n    };\n\n    if (this.layoutInfo.simpleAttributes) {\n      this.layoutInfo.simpleAttributes.forEach((field) => {\n        customAttributes[field.name] = field.value;\n      });\n    }\n\n    if (this.layoutInfo.legend) {\n      const legend = this.getLegend_(scale);\n      if (legend !== null) {\n        customAttributes['legend'] = this.getLegend_(scale);\n      }\n    }\n\n    googAsserts.assertNumber(this.layoutInfo.dpi);\n    googAsserts.assertString(this.layoutInfo.layout);\n\n    // convert the WMTS layers to WMS\n    const map = new olMap({});\n    map.setView(this.map.getView());\n    const ol_layers = this.ngeoLayerHelper_.getFlatLayers(this.map.getLayerGroup());\n    const new_ol_layers = [];\n    let print_native_angle = true;\n    for (let i = 0, ii = ol_layers.length; i < ii; i++) {\n      let layer = ol_layers[i];\n      const metadata = layer.get('metadata');\n      if (metadata) {\n        const server_name = metadata.ogcServer;\n        const layer_names = metadata.printLayers || metadata.layers;\n        if (server_name && layer_names) {\n          const server = this.ogcServers_[server_name];\n          if (server) {\n            layer = this.ngeoLayerHelper_.createBasicWMSLayer(\n              server.url,\n              layer_names,\n              server.imageType,\n              server.type\n            );\n          } else {\n            console.error('Missing ogcServer:', server_name);\n          }\n        }\n      }\n\n      // Get the print native angle parameter for WMS layers when set to not use default value\n      // Is applied only once when the value is overridden with a metadata from administration\n      if (layer instanceof olLayerImage && layer.get('printNativeAngle') === false) {\n        print_native_angle = false;\n      }\n\n      new_ol_layers.push(layer);\n    }\n    map.setLayerGroup(new olLayerGroup({\n      layers: new_ol_layers,\n      'printNativeAngle': print_native_angle\n    }));\n\n    const spec = this.ngeoPrint_.createSpec(map, scale, this.layoutInfo.dpi,\n      this.layoutInfo.layout, format, customAttributes);\n\n    // Add feature overlay layer to print spec.\n    const layers = [];\n    this.ngeoPrint_.encodeLayer(layers, this.featureOverlayLayer_,\n      viewResolution);\n    if (layers.length > 0) {\n      spec.attributes.map.layers.unshift(layers[0]);\n    }\n\n    this.ngeoPrint_.createReport(spec, /** @type {angular.$http.Config} */ ({\n      timeout: this.requestCanceler_.promise\n    })).then(\n      this.handleCreateReportSuccess_.bind(this),\n      this.handleCreateReportError_.bind(this)\n    );\n\n    // remove temporary map\n    map.setTarget(null);\n  }\n\n\n  /**\n   * Cancel the current print and reset its state.\n   * @export\n   */\n  cancel() {\n    // Cancel the latest request, if it's not finished yet.\n    if (this.requestCanceler_ !== null) {\n      this.requestCanceler_.resolve();\n    }\n\n    // Cancel the status timeout if there's one set, to make sure no other\n    // status request is sent.\n    if (this.statusTimeoutPromise_ !== null) {\n      this.$timeout_.cancel(this.statusTimeoutPromise_);\n    }\n\n    if (this.curRef_.length > 0) {\n      this.ngeoPrint_.cancel(this.curRef_);\n    }\n\n    this.resetPrintStates_();\n  }\n\n\n  /**\n   * @param {gmf.print.component.PrintStateEnum=} opt_printState the print state.\n   * @private\n   */\n  resetPrintStates_(opt_printState) {\n    this.gmfPrintState_.state = opt_printState || exports.PrintStateEnum.NOT_IN_USE;\n    this.curRef_ = '';\n  }\n\n\n  /**\n   * Get datasource object for print report\n   * @private\n   * @return {Array.<gmfx.datasource.DataSourcePrintReportObject>} the data\n   *     source objet for the print report\n   */\n  getDataSource_() {\n    let datasourceObj, data, columns;\n    const datasourceArr = [];\n    const sources = this.ngeoQueryResult_.sources;\n    sources.forEach(function(source) {\n      data = [];\n      columns = [];\n      source.features.forEach(function(feature, i) {\n        googAsserts.assert(feature);\n        const properties = ngeoMiscFeatureHelper.getFilteredFeatureValues(feature);\n        if (i === 0) {\n          columns = Object.keys(properties).map(function tanslateColumns(prop) {\n            return this.translate_(prop);\n          }, this);\n        }\n        data.push(Object.keys(properties).map(key => properties[key]));\n      }, this);\n      if (columns.length) {\n        datasourceObj =\n          /** @type {gmfx.datasource.DataSourcePrintReportObject} */({\n            title: this.translate_(source.label),\n            table: {\n              columns,\n              data\n            }\n          });\n        datasourceArr.push(datasourceObj);\n      }\n    }, this);\n    return datasourceArr;\n  }\n\n\n  /**\n   * Get the optimal scale to display the print mask. Return the first scale if\n   * no scale matches.\n   * @param {ol.Size|undefined} mapSize Size of the map on the screen (px).\n   * @param {number|undefined} viewResolution Resolution of the map on the screen.\n   * @return {number} The best scale. -1 is returned if there is no optimal\n   *     scale, that is the optimal scale is lower than or equal to the first\n   *     value in printMapScales.\n   * @private\n   */\n  getOptimalScale_(mapSize, viewResolution) {\n    const scales = this.layoutInfo.scales.slice();\n    if (mapSize !== undefined && viewResolution !== undefined) {\n      return this.ngeoPrintUtils_.getOptimalScale(mapSize, viewResolution,\n        this.paperSize_, scales.reverse());\n    }\n    return this.layoutInfo.scales[0];\n  }\n\n\n  /**\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  handleCreateReportSuccess_(resp) {\n    const mfResp = /** @type {MapFishPrintReportResponse} */ (resp.data);\n    const ref = mfResp.ref;\n    googAsserts.assert(ref.length > 0);\n    this.curRef_ = ref;\n    this.getStatus_(ref);\n  }\n\n\n  /**\n   * @param {string} ref Ref.\n   * @private\n   */\n  getStatus_(ref) {\n    this.requestCanceler_ = this.$q_.defer();\n    this.ngeoPrint_.getStatus(ref, /** @type {angular.$http.Config} */ ({\n      timeout: this.requestCanceler_.promise\n    })).then(\n      this.handleGetStatusSuccess_.bind(this, ref),\n      this.handleCreateReportError_.bind(this)\n    );\n  }\n\n\n  /**\n   * @param {string} ref Ref.\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  handleGetStatusSuccess_(ref, resp) {\n    const mfResp = /** @type {MapFishPrintStatusResponse} */ (resp.data);\n    const done = mfResp.done;\n    if (done) {\n      if (mfResp.status != 'error') {\n        // The report is ready. Open it by changing the window location.\n        window.location.href = this.ngeoPrint_.getReportUrl(ref);\n        this.resetPrintStates_();\n      } else {\n        console.error(mfResp.error);\n        this.handleCreateReportError_();\n      }\n    } else {\n      // The report is not ready yet. Check again in 1s.\n      this.statusTimeoutPromise_ = this.$timeout_(() => {\n        this.getStatus_(ref);\n      }, 1000, false);\n    }\n  }\n\n\n  /**\n   * @private\n   */\n  handleCreateReportError_() {\n    this.resetPrintStates_(exports.PrintStateEnum.ERROR_ON_REPORT);\n  }\n\n\n  /**\n   * @param {number} scale The scale to get the legend (for wms layers only).\n   * @return {Object?} Legend object for print report or null.\n   * @private\n   */\n  getLegend_(scale) {\n    const legend = {'classes': []};\n    let classes, layerNames, layerName, icons;\n    const gettextCatalog = this.gettextCatalog_;\n\n    // Get layers from layertree only.\n    const dataLayerGroup = this.ngeoLayerHelper_.getGroupFromMap(this.map,\n      gmfBase.DATALAYERGROUP_NAME);\n    const layers = this.ngeoLayerHelper_.getFlatLayers(dataLayerGroup);\n\n    // For each visible layer in reverse order, get the legend url.\n    layers.reverse().forEach((layer) => {\n      classes = [];\n      if (layer.getVisible() && layer.getSource()) {\n        // For WMTS layers.\n        if (layer instanceof olLayerTile) {\n          layerName = `${layer.get('layerNodeName')}`;\n          icons = this.getMetadataLegendImage_(layerName);\n          if (!icons) {\n            icons = this.ngeoLayerHelper_.getWMTSLegendURL(layer);\n          }\n          // Don't add classes without legend url.\n          if (icons) {\n            classes.push({\n              'name': gettextCatalog.getString(layerName),\n              'icons': [icons]\n            });\n          }\n        } else {\n          const source = /** @type ol.source.ImageWMS */ (layer.getSource());\n          // For each name in a WMS layer.\n          layerNames = source.getParams()['LAYERS'].split(',');\n          layerNames.forEach((name) => {\n            icons = this.getMetadataLegendImage_(name);\n            if (!icons) {\n              icons = this.ngeoLayerHelper_.getWMSLegendURL(source.getUrl(), name,\n                scale);\n            }\n            // Don't add classes without legend url or from layers without any\n            // active name.\n            if (icons && name.length !== 0) {\n              classes.push({\n                'name': gettextCatalog.getString(name),\n                'icons': [icons]\n              });\n            }\n          });\n        }\n      }\n\n      // Add classes object only if it contains something.\n      if (classes.length > 0) {\n        legend['classes'].push({'classes': classes});\n      }\n\n    });\n\n    return legend['classes'].length > 0 ?  legend : null;\n  }\n\n\n  /**\n   * Return the metadata legendImage of a layer from the found corresponding node\n   * or undefined.\n   * @param {string} layerName a layer name.\n   * @return {string|undefined} The legendImage or undefined.\n   * @private\n   */\n  getMetadataLegendImage_(layerName) {\n    const groupNode = gmfThemeThemes.findGroupByLayerNodeName(this.currentThemes_, layerName);\n    let node;\n    if (groupNode && groupNode.children) {\n      node = gmfThemeThemes.findObjectByName(groupNode.children, layerName);\n    }\n    let legendImage;\n    if (node && node.metadata) {\n      legendImage = node.metadata.legendImage;\n    }\n    return legendImage;\n  }\n\n\n  /**\n   * Set the current layout and update all layout information with this new layout parameters.\n   * @param {string!} layoutName A layout name as existing in the list of\n   *     existing layouts.\n   * @export\n   */\n  setLayout(layoutName) {\n    let layout;\n    this.layouts_.forEach((l) => {\n      if (l.name === layoutName) {\n        layout = l;\n        return true; // break;\n      }\n    });\n    this.layout_ = layout;\n    this.updateFields_();\n  }\n\n\n  /**\n   * Get or set the print scale value and adapt the zoom to match with this new scale.\n   * @param {number=} opt_scale A scale value as existing in the scales list field.\n   * @return {number|undefined} New scale.\n   * @export\n   */\n  getSetScale(opt_scale) {\n    if (opt_scale !== undefined) {\n      const mapSize = this.map.getSize() || [0, 0];\n      this.layoutInfo.scale = opt_scale;\n      const res = this.ngeoPrintUtils_.getOptimalResolution(mapSize, this.paperSize_, opt_scale);\n      const contrainRes = this.map.getView().constrainResolution(res, 0, 1);\n      this.map.getView().setResolution(contrainRes);\n      // Render the map to update the postcompose mask manually\n      this.map.render();\n      this.scaleManuallySelected_ = true;\n    }\n    return this.layoutInfo.scale;\n  }\n\n\n  /**\n   * Set the print dpi value.\n   * @param {number} dpi A dpi value as existing in the dpis list field.\n   * @export\n   */\n  setDpi(dpi) {\n    this.layoutInfo.dpi = dpi;\n  }\n\n\n  /**\n   * Check the current state of the print.\n   * @param {string} stateEnumKey An enum key from gmf.print.component.PrintStateEnum.\n   * @return {boolean} True if the given state matches with the current print\n   *     state. False otherwise.\n   * @export\n   */\n  isState(stateEnumKey) {\n    return this.gmfPrintState_.state === exports.PrintStateEnum[stateEnumKey];\n  }\n};\n\nexports.controller('GmfPrintController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.createfeatureComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nconst exports = angular.module('ngeoCreatefeature', [\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * A directive used to draw vector features of a single geometry type using\n * either a 'draw' or 'measure' interaction. Once a feature is finished being\n * drawn, it is added to a collection of features.\n *\n * The geometry types supported are:\n *  - Point\n *  - LineString\n *  - Polygon\n *\n * Example:\n *\n *     <a\n *       href\n *       translate\n *       ngeo-btn\n *       ngeo-createfeature\n *       ngeo-createfeature-active=\"ctrl.createPointActive\"\n *       ngeo-createfeature-features=\"ctrl.features\"\n *       ngeo-createfeature-geom-type=\"ctrl.pointGeomType\"\n *       ngeo-createfeature-map=\"::ctrl.map\"\n *       class=\"btn btn-default ngeo-createfeature-point\"\n *       ng-class=\"{active: ctrl.createPointActive}\"\n *       ng-model=\"ctrl.createPointActive\">\n *     </a>\n *\n * @htmlAttribute {boolean} ngeo-createfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {ol.Collection} ngeo-createfeature-features The collection of\n *     features where to add those created by this directive.\n * @htmlAttribute {string} ngeo-createfeature-geom-type Determines the type\n *     of geometry this directive should draw.\n * @htmlAttribute {ol.Map} ngeo-createfeature-map The map.\n *\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname ngeoCreatefeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoCreatefeatureController',\n    bindToController: true,\n    scope: {\n      'active': '=ngeoCreatefeatureActive',\n      'features': '=ngeoCreatefeatureFeatures',\n      'geomType': '=ngeoCreatefeatureGeomType',\n      'map': '=ngeoCreatefeatureMap'\n    }\n  };\n};\n\nexports.directive('ngeoCreatefeature', exports.directive_);\n\n\n/**\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.Scope} $scope Scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoCreatefeatureController\n */\nexports.Controller_ = function(gettextCatalog, $compile, $filter, $scope,\n  $timeout, ngeoEventHelper) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {ol.Collection.<!ol.Feature>|!ol.source.Vector}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {!angular.$compile}\n   * @private\n   */\n  this.compile_ = $compile;\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.filter_ = $filter;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * The draw or measure interaction responsible of drawing the vector feature.\n   * The actual type depends on the geometry type.\n   * @type {ol.interaction.Interaction}\n   * @private\n   */\n  this.interaction_;\n\n\n  // == Event listeners ==\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      this.interaction_.setActive(newVal);\n    }\n  );\n};\n\n\n/**\n * Initialize the directive.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.active = this.active === true;\n  const gettextCatalog = this.gettextCatalog_;\n\n  // Create the draw or measure interaction depending on the geometry type\n  let interaction;\n  if (this.geomType === ngeoGeometryType.POINT ||\n      this.geomType === ngeoGeometryType.MULTI_POINT\n  ) {\n    interaction = new olInteractionDraw({\n      type: /** @type {ol.geom.GeometryType} */ ('Point')\n    });\n  } else if (this.geomType === ngeoGeometryType.LINE_STRING ||\n      this.geomType === ngeoGeometryType.MULTI_LINE_STRING\n  ) {\n    const helpMsg = gettextCatalog.getString('Click to start drawing length');\n    const contMsg = gettextCatalog.getString(\n      'Click to continue drawing<br/>' +\n      'Double-click or click last point to finish'\n    );\n\n    interaction = new ngeoInteractionMeasureLength(\n      this.filter_('ngeoUnitPrefix'),\n      gettextCatalog,\n      {\n        style: new olStyleStyle(),\n        startMsg: this.compile_(`<div translate>${helpMsg}</div>`)(this.scope_)[0],\n        continueMsg: this.compile_(`<div translate>${contMsg}</div>`)(this.scope_)[0]\n      }\n    );\n  } else if (this.geomType === ngeoGeometryType.POLYGON ||\n      this.geomType === ngeoGeometryType.MULTI_POLYGON\n  ) {\n    const helpMsg = gettextCatalog.getString('Click to start drawing area');\n    const contMsg = gettextCatalog.getString(\n      'Click to continue drawing<br/>' +\n      'Double-click or click starting point to finish'\n    );\n\n    interaction = new ngeoInteractionMeasureArea(\n      this.filter_('ngeoUnitPrefix'),\n      gettextCatalog,\n      {\n        style: new olStyleStyle(),\n        startMsg: this.compile_(`<div translate>${helpMsg}</div>`)(this.scope_)[0],\n        continueMsg: this.compile_(`<div translate>${contMsg}</div>`)(this.scope_)[0]\n      }\n    );\n  }\n\n  googAsserts.assert(interaction);\n\n  interaction.setActive(this.active);\n  this.interaction_ = interaction;\n  this.map.addInteraction(interaction);\n\n  const uid = olBase.getUid(this);\n  if (interaction instanceof olInteractionDraw) {\n    this.ngeoEventHelper_.addListenerKey(\n      uid,\n      olEvents.listen(\n        interaction,\n        'drawend',\n        this.handleDrawEnd_,\n        this\n      )\n    );\n  } else if (interaction instanceof ngeoInteractionMeasureLength ||\n     interaction instanceof ngeoInteractionMeasureArea) {\n    this.ngeoEventHelper_.addListenerKey(\n      uid,\n      olEvents.listen(\n        interaction,\n        'measureend',\n        this.handleDrawEnd_,\n        this\n      )\n    );\n  }\n};\n\n\n/**\n * Called when a feature is finished being drawn. Add the feature to the\n * collection.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.Controller_.prototype.handleDrawEnd_ = function(event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  googAsserts.assert(sketch);\n\n  // convert to multi if geomType is multi and feature is not\n  let geometry = sketch.getGeometry();\n  const type = geometry.getType();\n  if (this.geomType.indexOf('Multi') != type.indexOf('Multi')) {\n    geometry = ngeoUtils.toMulti(geometry);\n  }\n  const feature = new olFeature(geometry);\n  if (this.features instanceof olCollection) {\n    this.features.push(feature);\n  } else {\n    this.features.addFeature(feature);\n  }\n};\n\n\n/**\n * Cleanup event listeners and remove the interaction from the map.\n */\nexports.Controller_.prototype.$onDestroy = function() {\n  this.timeout_(() => {\n    const uid = olBase.getUid(this);\n    this.ngeoEventHelper_.clearListenerKey(uid);\n    this.interaction_.setActive(false);\n    this.map.removeInteraction(this.interaction_);\n  }, 0);\n};\n\nexports.controller('ngeoCreatefeatureController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.datetimepickerComponent\n */\nimport DateFormatter from 'ngeo/misc/php-date-formatter.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.css';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDateTimePicker', ['gettext']);\n\n/**\n * A directive used to display a date or time picker\n *\n * Example:\n *\n *      <input ngeo-datetimepicker\n *          ngeo-datetimepicker-options=\"{timepicker: false}\"\n *\n * @htmlAttribute {Object} ngeo-datetimepicker-options The options.\n *\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname ngeoDatetimepicker\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    controller: exports.Controller_,\n    bindToController: true,\n    scope: {\n      'options': '<ngeoDatetimepickerOptions'\n    }\n  };\n};\n\nexports.directive('ngeoDatetimepicker', exports.component_);\n\n\n/**\n * @param {!jQuery} $element Element.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDatetimepickerController\n */\nexports.Controller_ = function($element, gettextCatalog) {\n  /**\n   * @const {!jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * The gettext catalog\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * The options\n   * @type {Object|String}\n   * @private\n   */\n  this.options;\n};\n\n\n/**\n * Initialize the directive.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const lang = this.gettextCatalog_.getCurrentLanguage();\n  $.datetimepicker.setLocale(lang);\n  $.datetimepicker.setDateFormatter(new DateFormatter());\n  if (typeof this.options === 'string') {\n    this.options = angular.fromJson(this.options);\n  }\n  this.element_.datetimepicker(this.options);\n};\n\nexports.controller('ngeoDateTimePickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.attributesComponent\n */\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscDatetimepickerComponent from 'ngeo/misc/datetimepickerComponent.js';\n\nconst exports = angular.module('ngeoAttributes', [\n  ngeoMiscDatetimepickerComponent.name,\n  ngeoMiscEventHelper.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/editing/attributescomponent', require('./attributescomponent.html'));\n});\n\n\nexports.value('ngeoAttributesTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoAttributesTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/editing/attributescomponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoAttributesTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoAttributesTemplateUrl($attrs, ngeoAttributesTemplateUrl) {\n  return ngeoAttributesTemplateUrl($attrs);\n}\n\n\n/**\n * Component used to render the attributes of a feature into a form.\n * Example:\n *\n *     <ngeo-attributes\n *       ngeo-attributes-attributes=\"::ctrl.attributes\"\n *       ngeo-attributes-disabled=\"ctrl.attributesDisabled\"\n *       ngeo-attributes-feature=\"::ctrl.feature\">\n *     </ngeo-attributes>\n *\n * @htmlAttribute {Array.<ngeox.Attribute>} ngeo-attributes-attributes The\n *     list of attributes to use.\n * @htmlAttribute {boolean} ngeo-attributes-disabled Whether the fieldset should\n *     be disabled or not.\n * @htmlAttribute {ol.Feature} ngeo-attributes-feature The feature.\n *\n * @ngdoc component\n * @ngname ngeoAttributes\n */\nexports.component_ = {\n  controller: 'ngeoAttributesController as attrCtrl',\n  bindings: {\n    'attributes': '=ngeoAttributesAttributes',\n    'disabled': '<ngeoAttributesDisabled',\n    'feature': '=ngeoAttributesFeature'\n  },\n  require: {\n    'form': '^'\n  },\n  templateUrl: ngeoAttributesTemplateUrl\n};\n\nexports.component('ngeoAttributes', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoAttributesController\n */\nexports.Controller_ = function($scope, ngeoEventHelper) {\n\n  /**\n   * The list of attributes to create the form with.\n   * @type {Array.<ngeox.Attribute>}\n   * @export\n   */\n  this.attributes;\n\n  /**\n   * Whether the fieldset should be disabled or not.\n   * @type {boolean}\n   * @export\n   */\n  this.disabled = false;\n\n  /**\n   * The feature containing the values.\n   * @type {ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * The properties bound to the form, initialized with the inner properties\n   * of the feature.\n   * @type {?Object.<string, *>}\n   * @export\n   */\n  this.properties;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * While changes happen from the form (from the template), they are applied\n   * to the feature inner properties. The 'propertychange' event registered\n   * above does the opposite, i.e. it listens to the feature inner properties\n   * changes and apply them to the form. To prevent circular issues, while\n   * applying changes coming from the form, this flag is set. While set, changes\n   * from the feature inner properties are ignored.\n   * @type {boolean}\n   * @private\n   */\n  this.updating_ = false;\n};\n\n\n/**\n * Initialise the component.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.properties = this.feature.getProperties();\n\n  // Listen to the feature inner properties change and apply them to the form\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(this.feature, 'propertychange', this.handleFeaturePropertyChange_, this)\n  );\n};\n\n\n/**\n * Called when an input node value changes\n * @param {string} name Attribute name\n * @export\n */\nexports.Controller_.prototype.handleInputChange = function(name) {\n  this.updating_ = true;\n  const value = this.properties[name];\n  this.feature.set(name, value);\n  this.updating_ = false;\n};\n\n\n/**\n * Cleanup event listeners.\n */\nexports.Controller_.prototype.$onDestroy = function() {\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n};\n\n\n/**\n * @param {ol.Object.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturePropertyChange_ = function(evt) {\n  if (this.updating_) {\n    return;\n  }\n  this.properties[evt.key] = evt.target.get(evt.key);\n  this.scope_.$apply();\n};\n\n\nexports.controller('ngeoAttributesController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.exportfeaturesComponent\n */\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\n\nconst exports = angular.module('ngeoExportfeatures', [\n  ngeoMiscFeatureHelper.module.name\n]);\n\n/**\n * Directive used to export vector features in different types of format.\n * To configure which formats to use, define the `ngeoExportFeatureFormats`\n * value, as such:\n *\n *     app.module.value('ngeoExportFeatureFormats', [\n *         ngeo.misc.FeatureHelper.FormatType.KML,\n *         ngeo.misc.FeatureHelper.FormatType.GPX\n *     ]);\n *\n * Example:\n *\n *     <button\n *       ngeo-exportfeatures\n *       ngeo-exportfeatures-features=\"ctrl.features\"\n *       class=\"btn btn-link\">Export</button>\n *\n * @htmlAttribute {ol.Collection.<ol.Feature>} ngeo-exportfeatures-features The\n *     features to export\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoExportfeatures\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoExportfeaturesController as efCtrl',\n    scope: true,\n    bindToController: {\n      'features': '=ngeoExportfeaturesFeatures'\n    }\n  };\n};\n\n\nexports.directive('ngeoExportfeatures', exports.directive_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoExportfeaturesController\n */\nexports.Controller_ = function($element, $injector, $scope,\n  ngeoFeatureHelper) {\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  const uid = olBase.getUid(this);\n  const id = ['ngeo-exportfeature', uid].join('-');\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.id_ = id;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  let formats;\n  if ($injector.has('ngeoExportFeatureFormats')) {\n    formats = $injector.get('ngeoExportFeatureFormats');\n  } else {\n    formats = [ngeoMiscFeatureHelper.FormatType.KML];\n  }\n\n  /**\n   * @type {?jQuery}\n   * @private\n   */\n  this.menu_ = null;\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.items_ = [];\n\n  // build the drop-down menu and items if there's more than one format\n  if (formats.length > 1) {\n    $element.attr('id', id);\n    const $menu = $('<ul />', {\n      'class': 'dropdown-menu',\n      'aria-labelledby': id\n    }).appendTo($element.parent()[0]);\n\n    this.menu_ = $menu;\n    let $item;\n\n    formats.forEach((format) => {\n      $item = $('<li />')\n        .appendTo($menu)\n        .append($('<a />', {\n          'href': '#',\n          'text': format\n        })\n          .on(\n            ['click', id].join('.'),\n            this.handleMenuItemClick_.bind(this, format)\n          )\n        );\n      this.items_.push($item);\n    });\n  }\n\n  /**\n   * @type {Array.<string>}\n   * @private\n   */\n  this.formats_ = formats;\n\n  $element.on(['click', id].join('.'), this.handleElementClick_.bind(this));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Called when the element bound to this directive is clicked. Use the feature\n * helper to export the feature(s) depending on the format(s) available(s).\n * If there's only one, the call to the export method is direct, otherwise\n * a drop-down menu is show to let the user choose the format of the export.\n * Finally, if there's only one feature in the collection to export and there's\n * more than one format set, some formats may not support the type of geometry.\n * If that's the case, then disable each format item in the drop-down menu\n * that doesn't support the type of geometry.\n * @private\n */\nexports.Controller_.prototype.handleElementClick_ = function() {\n\n  const features = this.features.getArray();\n\n  if (this.formats_.length === 1) {\n    this.featureHelper_.export(features, this.formats_[0]);\n  } else if (features.length === 1) {\n    const feature = features[0];\n    const geom = feature.getGeometry();\n    let $item;\n    this.formats_.forEach((format, i) => {\n      $item = this.items_[i];\n      if (format === ngeoMiscFeatureHelper.FormatType.GPX) {\n        if (geom instanceof olGeomPoint ||\n            geom instanceof olGeomLineString) {\n          $item.removeClass('disabled');\n        } else {\n          $item.addClass('disabled');\n        }\n      }\n    });\n  }\n};\n\n\n/**\n * Called when a menu item is clicked. Export the features to the selected\n * format.\n * @param {string} format Format.\n * @param {jQuery.Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuItemClick_ = function(format, event) {\n  if (!$(event.target.parentElement).hasClass('disabled')) {\n    const features = this.features.getArray();\n    this.featureHelper_.export(features, format);\n  }\n};\n\n\n/**\n * Cleanup event listeners and remove the menu from DOM, if any.\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  const id = this.id_;\n\n  this.element_.off(['click', id].join('.'));\n\n  if (this.menu_) {\n    this.menu_.remove();\n    this.items_.forEach(($item) => {\n      $item.off(['click', id].join('.'));\n    });\n    this.items_.length = 0;\n    this.menu_ = null;\n  }\n};\n\n\nexports.controller(\n  'ngeoExportfeaturesController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.sortableComponent\n */\nimport 'jquery-ui/ui/widgets/sortable.js';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoSortable', []);\n\n\n/**\n * Provides a directive that allows drag-and-dropping DOM items between them.\n * It also changes the order of elements in the given array.\n *\n * It is typically used together with `ng-repeat`, for example for re-ordering\n * layers in a map.\n *\n * Example:\n *\n *     <ul ngeo-sortable=\"ctrl.layers\"\n *         ngeo-sortable-options=\"{handleClassName: 'ngeo-sortable-handle'}\">\n *       <li ng-repeat=\"layer in ctrl.layers\">\n *         <span class=\"ngeo-sortable-handle\">handle</span>{{layer.get('name')}}\n *       </li>\n *     </ul>\n *\n * The value of the \"ngeo-sortable\" attribute is an expression which evaluates\n * to an array (an array of layers in the above example). This is the array\n * that is re-ordered after a drag-and-drop.\n *\n * The element with the class \"ngeo-sortable-handle\" is the \"drag handle\".\n * It is required.\n *\n * This directives uses `$watchCollection` to watch the \"sortable\" array. So\n * if some outside code adds/removes elements to/from the \"sortable\" array,\n * the \"ngeoSortable\" directive will pick it up.\n *\n * See our live example: [../examples/layerorder.html](../examples/layerorder.html)\n *\n * @htmlAttribute {Array.<ol.layer.Base>} ngeo-sortable The layers to sort.\n * @htmlAttribute {!ngeox.miscSortableOptions} ngeo-sortable-options The options.\n * @htmlAttribute {Function(angular.JQLite, Array)?} ngeo-sortable-callback\n *     Callback function called after the move end. The Function will be called\n *     with the element and the sort array as arguments.\n * @htmlAttribute {Object?} ngeo-sortable-callback-ctx Context to apply at\n *     the call of the callback function.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoSortable\n */\nexports.component_ = function($timeout) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const sortable = /** @type {Array} */\n              (scope.$eval(attrs['ngeoSortable'])) || [];\n      googAsserts.assert(Array.isArray(sortable));\n\n      scope.$watchCollection(() => sortable, () => {\n        sortable.length && $timeout(resetUpDragDrop, 0);\n      });\n\n      const optionsObject = scope.$eval(attrs['ngeoSortableOptions']);\n      const options = getOptions(optionsObject);\n\n      const callbackFn = scope.$eval(attrs['ngeoSortableCallback']);\n      const callbackCtx = scope.$eval(attrs['ngeoSortableCallbackCtx']);\n\n      /**\n       * This function resets drag&drop for the list. It is called each\n       * time the sortable array changes (see $watchCollection above).\n       */\n      function resetUpDragDrop() {\n        // Add an index to the sortable to allow sorting of the\n        // underlying data.\n        const children = element.children();\n        for (let i = 0; i < children.length; ++i) {\n          angular.element(children[i]).data('idx', i);\n        }\n\n        const sortableElement = $(element);\n\n        // the element is already sortable; reset it.\n        if (sortableElement.data('ui-sortable')) {\n          sortableElement.off('sortupdate');\n          sortableElement.sortable('destroy');\n        }\n\n        const sortableOptions = {\n          'axis': 'y',\n          'classes': {\n            'ui-sortable-helper': options['draggerClassName']\n          }\n        };\n\n        // CSS class of the handle\n        if (options['handleClassName']) {\n          sortableOptions['handle'] = `.${options['handleClassName']}`;\n        }\n\n        // Placeholder for the item being dragged in the sortable list\n        if (options['placeholderClassName']) {\n          sortableOptions['placeholder'] = options['placeholderClassName'];\n          sortableOptions['forcePlaceholderSize'] = true;\n        }\n\n        sortableElement.sortable(sortableOptions);\n\n        // This event is triggered when the user stopped sorting and\n        // the DOM position (i.e. order in the sortable list) has changed.\n        sortableElement.on('sortupdate', (event, ui) => {\n          const oldIndex = $(ui.item[0]).data('idx');\n          const newIndex = ui.item.index();\n\n          // Update (data)-index on dom element to its new position\n          $(ui.item[0]).data('idx', newIndex);\n\n          // Move dragged item to new position\n          scope.$apply(() => {\n            sortable.splice(newIndex, 0, sortable.splice(oldIndex, 1)[0]);\n          });\n\n          // Call the callback function if it exists.\n          if (callbackFn instanceof Function) {\n            callbackFn.apply(callbackCtx, [element, sortable]);\n          }\n        });\n      }\n\n      /**\n       * @param {?} options Options after expression evaluation.\n       * @return {!ngeox.miscSortableOptions} Options object.\n       * @private\n       */\n      function getOptions(options) {\n        let ret;\n        const defaultHandleClassName = 'ngeo-sortable-handle';\n        if (options === undefined) {\n          ret = {'handleClassName': defaultHandleClassName};\n        } else {\n          if (options['handleClassName'] === undefined) {\n            options['handleClassName'] = defaultHandleClassName;\n          }\n          ret = /** @type {ngeox.miscSortableOptions} */ (options);\n        }\n        return ret;\n      }\n\n    }\n  };\n};\n\nexports.directive('ngeoSortable', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.popoverComponent\n */\nimport 'bootstrap/js/tooltip.js';\nimport 'bootstrap/js/popover.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoPopover', []);\n\n\n/**\n * Provides a directive used to display a Bootstrap popover.\n *\n *<div ngeo-popover>\n *  <a ngeo-popover-anchor class=\"btn btn-info\">anchor 1</a>\n *  <div ngeo-popover-content>\n *    <ul>\n *      <li>action 1:\n *        <input type=\"range\"/>\n *      </li>\n *    </ul>\n *  </div>\n *</div>\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopover\n * @return {angular.Directive} The Directive Definition Object.\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoPopoverController as popoverCtrl',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.anchorElm.on('hidden.bs.popover', () => {\n        /**\n         * @type {{inState : Object}}\n         */\n        const popover = ngeoPopoverCtrl.anchorElm.data('bs.popover');\n        popover['inState'].click = false;\n      });\n\n      ngeoPopoverCtrl.anchorElm.on('inserted.bs.popover', () => {\n        ngeoPopoverCtrl.bodyElm.show();\n        ngeoPopoverCtrl.shown = true;\n      });\n\n      ngeoPopoverCtrl.anchorElm.popover({\n        container: 'body',\n        html: true,\n        content: ngeoPopoverCtrl.bodyElm,\n        placement: attrs['ngeoPopoverPlacement'] || 'right'\n      });\n\n      if (attrs['ngeoPopoverDismiss']) {\n        $(attrs['ngeoPopoverDismiss']).on('scroll', () => {\n          ngeoPopoverCtrl.dismissPopover();\n        });\n      }\n\n      scope.$on('$destroy', () => {\n        ngeoPopoverCtrl.anchorElm.popover('destroy');\n        ngeoPopoverCtrl.anchorElm.unbind('inserted.bs.popover');\n        ngeoPopoverCtrl.anchorElm.unbind('hidden.bs.popover');\n      });\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopoverAnchor\n * @return {angular.Directive} The Directive Definition Object\n */\nexports.anchorComponent = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoPopover',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.anchorElm = elem;\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopoverContent\n * @return {angular.Directive} The Directive Definition Object\n */\nexports.contentComponent = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoPopover',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.bodyElm = elem;\n      elem.hide();\n    }\n  };\n};\n\n/**\n * The controller for the 'popover' directive.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoPopoverController\n * @param {angular.Scope} $scope Scope.\n */\nexports.PopoverController_ = function($scope) {\n  /**\n   * The state of the popover (displayed or not)\n   * @type {boolean}\n   * @export\n   */\n  this.shown = false;\n\n  /**\n   * @type {angular.JQLite|undefined}\n   * @export\n   */\n  this.anchorElm = undefined;\n\n  /**\n   * @type {angular.JQLite|undefined}\n   * @export\n   */\n  this.bodyElm = undefined;\n\n  function onMouseDown(clickEvent) {\n    if (this.anchorElm[0] !== clickEvent.target &&\n      this.bodyElm.parent()[0] !== clickEvent.target &\n      this.bodyElm.parent().find(clickEvent.target).length === 0 && this.shown) {\n      this.dismissPopover();\n    }\n  }\n\n  angular.element('body').on('mousedown', onMouseDown.bind(this));\n\n  $scope.$on('$destroy', () => {\n    angular.element('body').off('mousedown', onMouseDown);\n  });\n};\n\n\n/**\n * Dissmiss popover function\n * @export\n */\nexports.PopoverController_.prototype.dismissPopover = function() {\n  this.shown = false;\n  this.anchorElm.popover('hide');\n};\n\n\nexports.controller('NgeoPopoverController', exports.PopoverController_);\nexports.directive('ngeoPopover', exports.component_);\nexports.directive('ngeoPopoverAnchor', exports.anchorComponent);\nexports.directive('ngeoPopoverContent', exports.contentComponent);\n\n\nexport default exports;\n","/**\n * @module gmf.search.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfSearchFulltextSearch from 'gmf/search/FulltextSearch.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscAutoProjection from 'ngeo/misc/AutoProjection.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopoverComponent from 'ngeo/message/popoverComponent.js';\n\nimport ngeoSearchModule from 'ngeo/search/module.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olObj from 'ol/obj.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfSearch', [\n  gmfLayertreeTreeManager.module.name,\n  gmfSearchFulltextSearch.module.name,\n  gmfThemeThemes.module.name,\n  ngeoMiscAutoProjection.module.name,\n  ngeoMiscColorpickerComponent.name,\n  ngeoSearchModule.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessagePopoverComponent.name,\n]);\n\n\n/**\n * @param {angular.JQLite} element Element.\n * @param {angular.Attributes} attrs Attributes.\n * @return {string} Template URL.\n */\nexports.gmfSearchTemplateUrl_ = (element, attrs) => {\n  const templateUrl = attrs['gmfSearchTemplateurl'];\n  return templateUrl !== undefined ? templateUrl :\n    'gmf/search';\n};\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/search', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfSearchTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfSearchTemplateUrl($element, $attrs, gmfSearchTemplateUrl) {\n  return gmfSearchTemplateUrl($element, $attrs);\n}\n\n\n/**\n * A component that allows to search and recenter on a selected\n * result's feature.\n * It can search in multiple GeoJSON datasources.\n * It can filter and group results by a feature's property.\n *\n * This component uses the {@link ngeo.map.FeatureOverlayMgr} to create a\n * feature overlay for drawing features on the map. The application\n * is responsible to initialize the {@link ngeo.map.FeatureOverlayMgr}\n * with the map.\n *\n * Example flat results:\n *\n *      <gmf-search gmf-search-map=\"::ctrl.map\"\n *        gmf-search-options=\"::ctrl.searchOptions\"\n *        gmf-search-styles=\"::ctrl.searchStyles\"\n *        gmf-search-datasources=\"::ctrl.searchDatasources\"\n *        gmf-search-coordinatesprojections=\"::ctrl.searchCoordinatesProjections\">\n *      </gmf-search>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('fulltextsearchUrl', '${request.route_url('fulltextsearch', _query={\"limit\": 20}) | n}');\n *          module.value('gmfSearchGroups', []);\n *          module.constant('gmfSearchActions', [\n *                {action: 'add_theme', title: 'Add a theme'},\n *                {action: 'add_group', title: 'Add a sub theme'},\n *                {action: 'add_layer', title: 'Add a layer'}\n *          ]);\n *        })();\n *      </script>\n *\n * Example with categories:\n *\n *      <gmf-search gmf-search-map=\"::ctrl.map\"\n *        gmf-search-options=\"::ctrl.searchOptions\"\n *        gmf-search-styles=\"::ctrl.searchStyles\"\n *        gmf-search-datasources=\"::ctrl.searchDatasources\"\n *        gmf-search-coordinatesprojections=\"::ctrl.searchCoordinatesProjections\">\n *      </gmf-search>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('fulltextsearchUrl', '${request.route_url('fulltextsearch', _query={\"limit\": 30, \"partitionlimit\": 5}) | n}');\n *          module.value('gmfSearchGroups', ${dumps(fulltextsearch_groups) | n});\n *          module.value('gmfSearchActions', []);\n *        })();\n *     </scriptrchUrl' value in the examples above set three \"_query\" parameters: \"limit\",\n *\n * The 'fulltextsearchUrl' value in the examples above set three \"_query\" parameters: \"limit\",\n * \"partitionlimit\" and \"ranksystem\". For this last one \"ts_rank_cd\" is the only effective value. It's used to\n * order your search results with the \"ts_rank_cd\" ranking system from PostgreSQL module pg_trgm. Without\n * this value, the PostgreSQL function \"similarity\" (module pg_trgm) is used for the ranking. Read the\n * full-text search c2cgeoportal documentation to know more.\n * You can also add these parameters to the \"url\" variable of one (or more) of the\n * gmfx.SearchDirectiveDatasource given to this component (here within the \"ctrl.searchDatasources\"). That\n * allows you to have multiples configurations on one search component.\n *\n * @htmlAttribute {string} gmf-search-input-value The input value (read only).\n * @htmlAttribute {ol.Map} gmf-search-map The map.\n * @htmlAttribute {TypeaheadOptions|undefined} gmf-search-options Addition Typeahead options.\n * @htmlAttribute {gmfx.SearchComponentDatasource} gmf-search-datasource\n *      The datasources.\n * @htmlAttribute {Object.<string, ol.style.Style>}\n *      gmf-search-styles A map of styles to apply on searched features. Keys\n *      must be the 'layer_name' property of features except for coordinates\n *      where the key ifor its style is the value of the constant\n *      'gmf.COORDINATES_LAYER_NAME'. The 'default' key is used to apply the\n *      default style.\n * @htmlAttribute {Array.<string>} gmf-search-coordinatesprojections codes\n *      of supported projections for coordinates search (projections must be\n *      defined in ol3). If not provided, only the map's view projection\n *      format will be supported.\n * @htmlAttribute {ngeox.SearchComponentListeners} gmf-search-listeners\n *      The listeners.\n * @htmlAttribute {boolean=} gmf-search-clearbutton Optional clear button in the input search. Default to true.\n * @htmlAttribute {number=} gmf-search-delay Optional bloodhound request delay in ms. Default to 50 ms.\n * @htmlAttribute {boolean=} gmf-search-colorchooser Optional. Whether to let the user\n *      change the style of the feature on the map. Default is false.\n * @htmlAttribute {number=} gmf-search-maxzoom Optional maximum zoom we will zoom on result, default is 16.\n * @htmlAttribute {function=} gmf-search-on-init Optional function called when the component is initialized.\n * @ngdoc component\n * @ngname gmfSearch\n */\nexports.component_ = {\n  bindings: {\n    'inputValue': '=?gmfSearchInputValue',\n    'placeholder': '@?gmfSearchPlaceholder',\n    'map': '<gmfSearchMap',\n    'datasources': '<gmfSearchDatasources',\n    'typeaheadOptions': '<?gmfSearchOptions',\n    'featuresStyles': '<?gmfSearchStyles',\n    'clearButton': '=?gmfSearchClearbutton',\n    'colorChooser': '<?gmfSearchColorchooser',\n    'coordinatesProjections': '<?gmfSearchCoordinatesprojections',\n    'additionalListeners': '<gmfSearchListeners',\n    'maxZoom': '<?gmfSearchMaxzoom',\n    'delay': '<?gmfSearchDelay',\n    'onInitCallback': '<?gmfSearchOnInit'\n  },\n  controller: 'gmfSearchController',\n  templateUrl: gmfSearchTemplateUrl\n};\n\n\nexports.value('gmfSearchTemplateUrl', exports.gmfSearchTemplateUrl_);\n\n\n// Register the controller in the module\nexports.component('gmfSearch', exports.component_);\n\n\n/**\n * @private\n */\nexports.SearchController_ = class {\n\n  /**\n   * @private\n   * @param {jQuery} $element Element.\n   * @param {angular.Scope} $scope The component's scope.\n   * @param {angular.$compile} $compile Angular compile service.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {ngeo.misc.AutoProjection} ngeoAutoProjection The ngeo coordinates service.\n   * @param {ngeo.search.createGeoJSONBloodhound.Function} ngeoSearchCreateGeoJSONBloodhound The ngeo\n   *     create GeoJSON Bloodhound service.\n   * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n   *     overlay manager service.\n   * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n   * @param {gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n   * @param {gmf.search.FulltextSearch} gmfSearchFulltextSearch gmf Full text search service.\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfSearchController\n   */\n  constructor($element, $scope, $compile, $timeout, $injector,\n    gettextCatalog, ngeoAutoProjection, ngeoSearchCreateGeoJSONBloodhound,\n    ngeoFeatureOverlayMgr, gmfThemes, gmfTreeManager, gmfSearchFulltextSearch) {\n\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {angular.$compile}\n     * @private\n     */\n    this.compile_ = $compile;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    /**\n     * @type {gmf.layertree.TreeManager}\n     * @private\n     */\n    this.gmfTreeManager_ = gmfTreeManager;\n\n    /**\n     * @type {gmf.search.FulltextSearch}\n     * @private\n     */\n    this.fullTextSearch_ = gmfSearchFulltextSearch;\n\n    /**\n     * @type {ngeo.search.createGeoJSONBloodhound.Function}\n     * @private\n     */\n    this.ngeoSearchCreateGeoJSONBloodhound_ = ngeoSearchCreateGeoJSONBloodhound;\n\n    /**\n     * @type {ngeo.map.FeatureOverlayMgr}\n     * @private\n     */\n    this.ngeoFeatureOverlayMgr = ngeoFeatureOverlayMgr;\n\n    /**\n     * @type {ngeo.statemanager.Location|undefined}\n     * @private\n     */\n    this.ngeoLocation_;\n\n    if ($injector.has('ngeoLocation')) {\n      this.ngeoLocation_ = $injector.get('ngeoLocation');\n    }\n\n    /**\n     * @type {ngeo.misc.AutoProjection}\n     * @private\n     */\n    this.ngeoAutoProjection_ = ngeoAutoProjection;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {Object}\n     * @private\n     */\n    this.styles_ = {};\n\n    /**\n     * @type {function()}\n     * @export\n     */\n    this.onInitCallback;\n\n    /**\n     * Whether or not to show a button to clear the search text.\n     * Default to true.\n     * @type {boolean}\n     * @export\n     */\n    this.clearButton;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.colorChooser;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.placeholder;\n\n    /**\n     * @type {number}\n     * @export\n     */\n    this.delay;\n\n    /**\n     * The maximum zoom we will zoom on result.\n     * @type {number}\n     * @export\n     */\n    this.maxZoom = 16;\n\n    /**\n     * Supported projections for coordinates search.\n     * @type {Array.<ol.proj.Projection>}\n     * @export\n     */\n    this.coordinatesProjections;\n\n    /**\n     * @type {ngeo.map.FeatureOverlay}\n     * @private\n     */\n    this.featureOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n    /**\n     * @type {Array.<gmfx.SearchComponentDatasource>}\n     * @export\n     */\n    this.datasources = [];\n\n    /**\n     * @type {TypeaheadOptions}\n     * @export\n     */\n    this.typeaheadOptions;\n\n    /**\n     * @type {TypeaheadOptions}\n     * @export\n     */\n    this.options = /** @type {TypeaheadOptions} */ ({\n      highlight: true\n    });\n\n    /**\n     * @type {Object.<string, ol.style.Style>}\n     * @export\n     */\n    this.featuresStyles;\n\n    /**\n     * @type {Array.<TypeaheadDataset>}\n     * @export\n     */\n    this.datasets = [];\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.inputValue = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.color;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.displayColorPicker = false;\n\n    /**\n     * @type {ngeox.SearchDirectiveListeners}\n     * @export\n     */\n    this.listeners;\n\n    /**\n     * @type {ngeox.SearchDirectiveListeners}\n     * @export\n     */\n    this.additionalListeners;\n  }\n\n\n  /**\n   * Called on initialization of the controller.\n   */\n  $onInit() {\n    const gettextCatalog = this.gettextCatalog_;\n    this.clearButton = this.clearButton !== false;\n    this.colorChooser = this.colorChooser === true;\n    if (this.delay === undefined) {\n      this.delay = 50;\n    }\n    this.placeholder = this.placeholder !== undefined ? this.placeholder :\n      gettextCatalog.getString('Search…');\n\n    // Init coordinates projections\n    let coordProj = this.coordinatesProjections;\n    if (coordProj === undefined) {\n      coordProj = [this.map.getView().getProjection()];\n    } else {\n      coordProj = this.ngeoAutoProjection_.getProjectionList(\n        /** @type {Array.<string>} */ (coordProj)\n      );\n    }\n    this.coordinatesProjections = coordProj;\n\n    if (!this.clearButton) {\n      // Empty the search field on focus and blur.\n      this.element_.find('input').on('focus blur', () => {\n        this.clear();\n      });\n    }\n\n    if (this.onInitCallback) {\n      this.onInitCallback();\n    }\n\n    this.initStyles_();\n\n    this.featureOverlay_.setStyle(this.getSearchStyle_.bind(this));\n\n    if (this.typeaheadOptions) {\n      olObj.assign(this.options, this.typeaheadOptions);\n    }\n\n    this.initDatasets_();\n\n    this.scope_.$watch(\n      () => this.color,\n      this.setStyleColor.bind(this)\n    );\n\n    this.listeners = this.mergeListeners_(\n      this.additionalListeners,\n      /** @type {ngeox.SearchDirectiveListeners} */ ({\n        select: this.select_.bind(this),\n        close: this.close_.bind(this),\n        datasetsempty: this.datasetsempty_.bind(this)\n      })\n    );\n\n    if (this.ngeoLocation_) {\n      const searchQuery = this.ngeoLocation_.getParam('search');\n      if (searchQuery) {\n        let resultIndex = 1;\n        if (this.ngeoLocation_.getParam('search-select-index')) {\n          resultIndex = parseInt(this.ngeoLocation_.getParam('search-select-index'), 10);\n        }\n        let mapZoom;\n        if (this.ngeoLocation_.getParam('search-maxzoom')) {\n          mapZoom = parseInt(this.ngeoLocation_.getParam('search-maxzoom'), 10);\n        } else if (this.ngeoLocation_.getParam('map_zoom')) {\n          mapZoom = parseInt(this.ngeoLocation_.getParam('map_zoom'), 10);\n        }\n        this.fulltextsearch_(searchQuery, resultIndex, mapZoom);\n      }\n    }\n  }\n\n\n  /**\n   * Merges the custom listeners received via the component attributes and the\n   * listeners that are needed for this controller to function (close and select).\n   * @param {ngeox.SearchDirectiveListeners} additionalListeners Custom provided\n   *    listeners.\n   * @param {ngeox.SearchDirectiveListeners} listeners Default listeners.\n   * @return {ngeox.SearchDirectiveListeners} Merged listeners.\n   * @private\n   */\n  mergeListeners_(additionalListeners, listeners) {\n    if (additionalListeners === undefined) {\n      return listeners;\n    }\n    return {\n      open: additionalListeners.open,\n      close: additionalListeners.close === undefined ?\n        listeners.close : function() {\n          listeners.close();\n          additionalListeners.close();\n        },\n      cursorchange: additionalListeners.cursorchange,\n      datasetsempty: additionalListeners.datasetsempty,\n      select: additionalListeners.select === undefined ?\n        listeners.select : function(evt, obj, dataset) {\n          listeners.select(evt, obj, dataset);\n          additionalListeners.select(evt, obj, dataset);\n        },\n      autocomplete: additionalListeners.autocomplete\n    };\n  }\n\n\n  /**\n   * Initialize datasets for the search\n   * @private\n   */\n  initDatasets_() {\n    const gettextCatalog = this.gettextCatalog_;\n    for (let i = 0; i < this.datasources.length; i++) {\n      const datasource = this.datasources[i];\n\n      /** @type {Array.<string>} */\n      const groupValues = datasource.groupValues !== undefined ? datasource.groupValues : [];\n      /** @type {Array.<string>} */\n      const groupActions = datasource.groupActions ? datasource.groupActions : [];\n      const filters = [];\n\n      if (groupValues.length === 0) {\n        filters.push({\n          'title': '',\n          'filter': this.filterLayername_()\n        });\n      } else {\n        groupValues.forEach(function(layerName) {\n          filters.push({\n            'title': layerName,\n            'filter': this.filterLayername_(layerName)\n          });\n        }, this);\n      }\n\n      groupActions.forEach(function(action) {\n        filters.push({\n          'title': gettextCatalog.getString(action['title']),\n          'filter': this.filterAction_(action['action'])\n        });\n      }, this);\n\n      filters.forEach(function(filter) {\n        this.datasets.push(this.createDataset_({\n          bloodhoundOptions: datasource.bloodhoundOptions,\n          datasetTitle: filter['title'],\n          groupsKey: 'layer_name',\n          labelKey: datasource.labelKey,\n          projection: datasource.projection,\n          typeaheadDatasetOptions: datasource.typeaheadDatasetOptions,\n          url: datasource.url\n        }, filter['filter']));\n      }, this);\n    }\n\n    // For searching coordinates\n    this.datasets.push({\n      source: this.createSearchCoordinates_(this.map.getView()),\n      name: 'coordinates',\n      display: 'label',\n      templates: {\n        header: () => {\n          const header = gettextCatalog.getString('Recenter to');\n          return `<div class=\"gmf-search-header\" translate>${header}</div>`;\n        },\n        suggestion: (suggestion) => {\n          const coordinates = suggestion['label'];\n\n          let html = `<p class=\"gmf-search-label\">${coordinates}</p>`;\n          html = `<div class=\"gmf-search-datum\">${html}</div>`;\n          return html;\n        }\n      }\n    });\n  }\n\n\n  /**\n   * @param {gmfx.SearchComponentDatasource} config The config of the dataset.\n   * @param {(function(GeoJSONFeature): boolean)=} opt_filter A filter function\n   *     based on a GeoJSONFeaturesCollection's array.\n   * @return {TypeaheadDataset} A typeahead dataset.\n   * @private\n   */\n  createDataset_(config, opt_filter) {\n    const gettextCatalog = this.gettextCatalog_;\n    const componentScope = this.scope_;\n    const compile = this.compile_;\n    const bloodhoundEngine = this.createAndInitBloodhound_(config, opt_filter);\n    const typeaheadDataset = /** @type {TypeaheadDataset} */ ({\n      limit: Infinity,\n      source: bloodhoundEngine.ttAdapter(),\n      display: (suggestion) => {\n        const feature = /** @type {ol.Feature} */ (suggestion);\n        return feature.get(config.labelKey);\n      },\n      templates: /* TypeaheadTemplates */ ({\n        header: () => {\n          if (config.datasetTitle === undefined) {\n            return '';\n          } else {\n            const header = gettextCatalog.getString(config.datasetTitle);\n            return `<div class=\"gmf-search-header\">${header}</div>`;\n          }\n        },\n        suggestion: (suggestion) => {\n          const feature = /** @type {ol.Feature} */ (suggestion);\n\n          const scope = componentScope.$new(true);\n          scope['feature'] = feature;\n\n          let html = `<p class=\"gmf-search-label\" translate>${\n            feature.get(config.labelKey)}</p>`;\n          html += `<p class=\"gmf-search-group\" translate>${feature.get('layer_name') ||\n                  config.datasetTitle}</p>`;\n          html = `<div class=\"gmf-search-datum\">${html}</div>`;\n          return compile(html)(scope);\n        }\n      })\n    });\n    if (config.typeaheadDatasetOptions) {\n      olObj.assign(typeaheadDataset, config.typeaheadDatasetOptions);\n    }\n    return typeaheadDataset;\n  }\n\n\n  /**\n   * @param {string} action The action to keep.\n   * @return {(function(GeoJSONFeature): boolean)} A filter function based on a\n   *     GeoJSONFeaturesCollection's array.\n   * @private\n   */\n  filterAction_(action) {\n    return (\n    /**\n         * @param {GeoJSONFeature} feature\n         * @return {boolean}\n         */\n      function(feature) {\n        const properties = feature['properties'];\n        if (properties['actions']) {\n          // result is an action (add_theme, add_group, ...)\n          // add it to the corresponding group\n          return !properties['layer_name'] && properties['actions'].some(act => act.action === action);\n        } else {\n          return false;\n        }\n      }\n    );\n  }\n\n\n  /**\n   * @param {string=} opt_layerName The layerName to keep. If null, keep all layers\n   *     (In all cases, except actions layers).\n   * @return {(function(GeoJSONFeature): boolean)} A filter function based on a\n   *     GeoJSONFeaturesCollection's array.\n   * @private\n   */\n  filterLayername_(opt_layerName) {\n    return (\n    /**\n         * @param {GeoJSONFeature} feature\n         * @return {boolean}\n         */\n      function(feature) {\n        const featureLayerName = feature['properties']['layer_name'];\n        // Keep only layers with layer_name (don't keep action layers).\n        if (featureLayerName === undefined) {\n          return false;\n        }\n        if (opt_layerName === undefined) {\n          return true;\n        }\n        return featureLayerName === opt_layerName;\n      }\n    );\n  }\n\n\n  /**\n   * @param {gmfx.SearchComponentDatasource} config The config of the dataset.\n   * @param {(function(GeoJSONFeature): boolean)=} opt_filter Afilter function\n   *     based on a GeoJSONFeaturesCollection's array.\n   * @return {Bloodhound} The bloodhound engine.\n   * @private\n   */\n  createAndInitBloodhound_(config, opt_filter) {\n    const mapProjectionCode = this.map.getView().getProjection().getCode();\n    const remoteOptions = this.getBloodhoudRemoteOptions_();\n    const bloodhound = this.ngeoSearchCreateGeoJSONBloodhound_(config.url, opt_filter,\n      olProj.get(mapProjectionCode), olProj.get(config.projection),\n      config.bloodhoundOptions, remoteOptions);\n    bloodhound.initialize();\n    return bloodhound;\n  }\n\n\n  /**\n   * @return {BloodhoundRemoteOptions} Options.\n   * @private\n   */\n  getBloodhoudRemoteOptions_() {\n    const gettextCatalog = this.gettextCatalog_;\n    return {\n      rateLimitWait: this.delay,\n      prepare: (query, settings) => {\n        const url = settings.url;\n        const lang = gettextCatalog.currentLanguage;\n        const interfaceName = 'mobile'; // FIXME dynamic interfaces\n        settings.xhrFields = {\n          withCredentials: true\n        };\n        settings.url = olUri.appendParams(url, {\n          'query': query,\n          'lang': lang,\n          'interface': interfaceName\n        });\n        return settings;\n      }\n    };\n  }\n\n\n  /**\n   * @param {ol.View} view View.\n   * @return {function(string, function(Object))} function defining parameters for the search suggestions.\n   * @private\n   */\n  createSearchCoordinates_(view) {\n    const viewProjection = view.getProjection();\n    const extent = viewProjection.getExtent();\n    return function(query, callback) {\n      const suggestions = [];\n      const coordinates = this.ngeoAutoProjection_.stringToCoordinates(query);\n      if (coordinates === null) {\n        return;\n      }\n      const position = this.ngeoAutoProjection_.tryProjectionsWithInversion(coordinates,\n        extent, viewProjection, this.coordinatesProjections);\n      if (position === null) {\n        return;\n      }\n      suggestions.push({\n        label: coordinates.join(' '),\n        position: position,\n        'tt_source': 'coordinates'\n      });\n      callback(suggestions);\n    }.bind(this);\n  }\n\n\n  /**\n   * Init the style object for the search results. It set defaults for the\n   * coordinates and the polygon styles, and both can be overloaded from component\n   * attributes. The styles from component attributes can specify custom styles\n   * for each search group.\n   * @private\n   */\n  initStyles_() {\n    this.styles_[gmfBase.COORDINATES_LAYER_NAME] = new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({color: [0, 0, 0, 0.7], width: 2}),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    });\n    const fill = new olStyleFill({\n      color: [65, 134, 240, 0.5]\n    });\n    const stroke = new olStyleStroke({\n      color: [65, 134, 240, 1],\n      width: 2\n    });\n    this.styles_['default'] = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke\n    });\n    const customStyles = this.featuresStyles || {};\n    olObj.assign(this.styles_, customStyles);\n  }\n\n  /**\n   * Style for search results.\n   * @param {null|ol.Feature|ol.render.Feature} feature The searched feature.\n   * @param {number} resolution The current resolution of the map.\n   * @return {ol.style.Style} A style for this kind of features.\n   * @private\n   */\n  getSearchStyle_(feature, resolution) {\n    googAsserts.assert(feature);\n    const style = this.styles_[feature.get('layer_name')] || this.styles_['default'];\n    if (this.color) {\n      const color = olColor.asArray(this.color);\n\n      const strokeColor = color.slice();\n      // 100% opacity for the stroke color\n      strokeColor[3] = 1;\n\n      const fillColor = color.slice();\n      // 50% opacity for the fill color\n      fillColor[3] = 0.5;\n\n      const strokeStyle = style.getStroke();\n      if (strokeStyle) {\n        strokeStyle.setColor(strokeColor);\n      }\n      const fillStyle = style.getFill();\n      if (fillStyle) {\n        fillStyle.setColor(fillColor);\n      }\n      const image = style.getImage();\n      if (image) {\n        style.setImage(new olStyleCircle({\n          fill: new olStyleFill({color: fillColor}),\n          radius: 5,\n          stroke: new olStyleStroke({color: strokeColor})\n        }));\n      }\n    }\n    return style;\n  }\n\n  /**\n   * Set a new color for the search feature style.\n   * @param {string} color The color to set.\n   * @export\n   */\n  setStyleColor(color) {\n    if (color) {\n      this.color = color;\n      this.ngeoFeatureOverlayMgr.getLayer().changed();\n    }\n  }\n\n  /**\n   * @private\n   */\n  setTTDropdownVisibility_() {\n    if (this.clearButton) {\n      const ttDropdown = this.element_.find('.twitter-typeahead .tt-menu');\n      (this.inputValue) ? ttDropdown.show() : ttDropdown.hide();\n    }\n  }\n\n\n  /**\n   * @export\n   */\n  onClearButton() {\n    this.featureOverlay_.clear();\n    this.clear();\n  }\n\n\n  /**\n   * @export\n   */\n  clear() {\n    const typeahead = this.element_.find('.twitter-typeahead');\n    const ttmenu = typeahead.children('.tt-menu');\n    const inputs = typeahead.children('input');\n    // clear model value, the 'real' input value and tt's suggestions\n    this.inputValue = '';\n    $(inputs[1]).typeahead('val', '');\n    ttmenu.children('.tt-dataset').empty();\n    this.setTTDropdownVisibility_();\n    this.displayColorPicker = false;\n  }\n\n\n  /**\n   * @export\n   */\n  blur() {\n    const typeahead = this.element_.find('.twitter-typeahead');\n    const inputs = typeahead.children('input');\n    // Blur as soon as possible in digest loops\n    this.timeout_(() => {\n      $(inputs[1]).blur();\n    });\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {Object|ol.Feature} suggestion Suggestion.\n   * @param {TypeaheadDataset} dataset Dataset.\n   * @private\n   */\n  select_(event, suggestion, dataset) {\n    if (suggestion['tt_source'] === 'coordinates') {\n      const geom = new olGeomPoint(suggestion['position']);\n\n      this.featureOverlay_.clear();\n      this.featureOverlay_.addFeature(new olFeature({\n        geometry: geom,\n        'layer_name': gmfBase.COORDINATES_LAYER_NAME\n      }));\n      this.map.getView().setCenter(suggestion['position']);\n      this.leaveSearch_();\n    } else {\n      googAsserts.assertInstanceof(suggestion, olFeature);\n      this.selectFromGMF_(event, suggestion, dataset);\n    }\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {ol.Feature} feature Feature.\n   * @param {TypeaheadDataset} dataset Dataset.\n   * @private\n   */\n  selectFromGMF_(event, feature, dataset) {\n    const actions = feature.get('actions');\n    const featureGeometry = /** @type {ol.geom.SimpleGeometry} */\n        (feature.getGeometry());\n    if (actions) {\n      for (let i = 0, ii = actions.length; i < ii; i++) {\n        const action = actions[i];\n        const actionName = action['action'];\n        const actionData = action['data'];\n        if (actionName == 'add_theme') {\n          this.gmfThemes_.getThemesObject().then((themes) => {\n            const theme = gmfThemeThemes.findThemeByName(themes, actionData);\n            if (theme) {\n              this.gmfTreeManager_.addFirstLevelGroups(theme.children);\n            }\n          });\n        } else if (actionName == 'add_group') {\n          this.gmfTreeManager_.addGroupByName(actionData, true);\n        } else if (actionName == 'add_layer') {\n          const groupActions = /** @type {Array.<string>} */ (\n            this.datasources[0].groupActions);\n          let datasourcesActionsHaveAddLayer;\n          groupActions.forEach((groupAction) => {\n            if (groupAction['action'] === 'add_layer') {\n              return datasourcesActionsHaveAddLayer = true;\n            }\n          });\n          if (datasourcesActionsHaveAddLayer) {\n            const silent = !!featureGeometry;\n            this.gmfTreeManager_.addGroupByLayerName(actionData, true, silent);\n          }\n        }\n      }\n    }\n\n    const size = this.map.getSize();\n    if (featureGeometry && size) {\n      const view = this.map.getView();\n      this.featureOverlay_.clear();\n      this.featureOverlay_.addFeature(feature);\n      this.displayColorPicker = true;\n      const fitArray = featureGeometry.getType() === 'GeometryCollection' ?\n        featureGeometry.getExtent() : featureGeometry;\n      view.fit(fitArray, {\n        size: size,\n        maxZoom: this.maxZoom\n      });\n    }\n    this.leaveSearch_();\n  }\n\n\n  /**\n   * @private\n   */\n  leaveSearch_() {\n    if (!this.clearButton) {\n      this.clear();\n    }\n    this.blur();\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @private\n   */\n  close_(event) {\n    if (!this.clearButton) {\n      this.setTTDropdownVisibility_();\n    }\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {string} query Query.\n   * @param {boolean} empty Empty.\n   * @private\n   */\n  datasetsempty_(event, query, empty) {\n    // workaround to display a 'no result found' in the search result when all of\n    // the datasets are empty.\n    // based on https://github.com/twitter/typeahead.js/issues/780#issuecomment-251554452\n    // FIXME: remove this workaround when https://github.com/corejavascript/typeahead.js/issues/60 is fixed\n\n    const menu = this.element_.find('.twitter-typeahead .tt-menu');\n    const message = menu.children('.gmf-search-no-results');\n    if (message.length == 0) {\n      const div = $('<div class=\"gmf-search-no-results\" translate>No result found</div>');\n      menu.append(div);\n    }\n    if (empty) {\n      message.show();\n      menu.addClass('gmf-search-no-results');\n    } else {\n      menu.removeClass('gmf-search-no-results');\n      message.hide();\n    }\n  }\n\n\n  /**\n   * Performs a full-text search and centers the map on the first search result.\n   * @param {string} query Search query.\n   * @param {number} resultIndex Return nth result instead.\n   * @param {number=} opt_zoom Optional zoom level.\n   * @private\n   */\n  fulltextsearch_(query, resultIndex, opt_zoom) {\n    if (resultIndex < 1) { // can't be lower than one\n      resultIndex = 1;\n    }\n    this.fullTextSearch_.search(query, {'limit': resultIndex})\n      .then((data) => {\n        if (data && data.features[resultIndex - 1]) {\n          const format = new olFormatGeoJSON();\n          const feature = format.readFeature(data.features[resultIndex - 1]);\n          this.featureOverlay_.addFeature(feature);\n          const fitOptions = /** @type {olx.view.FitOptions} */ ({});\n          if (opt_zoom !== undefined) {\n            fitOptions.maxZoom = opt_zoom;\n            fitOptions.size = this.map.getSize();\n          }\n          this.map.getView().fit(feature.getGeometry().getExtent(), fitOptions);\n          this.inputValue = /** @type {string} */ (feature.get('label'));\n        }\n      });\n  }\n};\n\n\n// Register the controller in the module\nexports.controller('gmfSearchController', exports.SearchController_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.recenter\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.syncArrays\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * Provides a function that synchronizes two arrays, arr1 and\n * arr2. arr2 is a subset of arr1, it includes the elements of arr1 that passes\n * the filter. When elements are added to/removed from arr1, arr2 is updated to\n * include the elements of arr1 that pass the filter. When the order of\n * elements in arr2 changes, arr1 is reordered to have the same order as arr2.\n *\n * This can for example be used to synchronize the array of layers in the map\n * with the array of selected layers, where layers may be added to/removed from\n * the map, and the order of selected layers may change.\n *\n *     let dereg = ngeoSyncArrays(map.getLayers().getArray(), selectedLayers,\n *         true, scope, function(layer) {\n *           // exclude the layer at index 0 in the map\n *           return map.getLayers().indexOf(layer) !== 0;\n *         });\n *\n * This will return a function that can be called to cancel synchronization.\n *\n * @param {Array.<T>} arr1 Array 1.\n * @param {Array.<T>} arr2 Array 2.\n * @param {boolean} reverse `true` if arr2 is in reverse order, `false`\n *     otherwise.\n * @param {angular.Scope} scope Angular scope. Used to watch arr1 and arr2\n *     using $watchCollection.\n * @param {function(T):boolean} filter Filter function.\n * @return {function()} Function to call to stop synchronization\n * @template T\n */\nconst exports = function(arr1, arr2, reverse, scope, filter) {\n\n\n  // Update arr2 when elements are added to, or removed from, arr1.\n\n  const dereg1 = scope.$watchCollection(() => arr1, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = arr1.length - 1, j = 0; i >= 0; --i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    }\n    arr2.length = j;\n  });\n\n\n  // Update arr1 when the order of elements changes in arr2.\n\n  const dereg2 = scope.$watchCollection(() => arr2, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = 0, ii = arr1.length, j = arr2.length - 1; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j--];\n        }\n      }\n      googAsserts.assert(j == -1);\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j++];\n        }\n      }\n      googAsserts.assert(j == arr2.length);\n    }\n  });\n\n  return function() {\n    dereg1();\n    dereg2();\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.layertree.component\n */\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\n\nimport 'bootstrap/js/collapse.js'; // needed to collapse a layertree\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoLayertree', [\n  ngeoLayertreeController.module.name\n]);\n\n\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoLayertreeTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/layertree';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/layertree', require('./component.html'));\n});\n\n\n/**\n * Provides the \"ngeoLayertree\" directive, a directive for\n * creating layer trees in application.\n *\n * The directive assumes that tree nodes that are not leaves have a \"children\"\n * property referencing an array of child nodes.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\">\n *      </div>\n *\n * The \"ngeo-layertree\", \"ngeo-layertree-map\" and\n * \"ngeo-layertree-nodelayer\" attributes are mandatory attributes.\n *\n * - \"ngeo-layertree\" specifies an expression providing the tree. The\n *   directive watches that expression, making it possible to retrieve\n *   the tree data through Ajax.\n *\n * - \"ngeo-layertree-map\" specifies an expression providing the OpenLayers\n *   map. The directive doesn't watch that expression.\n *\n * - The \"ngeo-layertree-nodelayer\" specifies an expression providing the\n *   layer for a given node. In most cases that expression will be function\n *   call with \"node\" as the argument to the function call. E.g.\n *   \"ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\".\n *\n * - The \"ngeo-layertree-listeners\" specifies an expression providing a function\n *   to bind scope events to customs functions. You'll must set the listener on\n *   the \"treeScope\" and probably use \"treeCtrl\" as context. E.g.\n *   \"ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\".\n *\n * The directive comes with a default template. That template assumes that\n * tree nodes that are not leaves have a \"children\" property referencing an\n * array of child nodes. It also assumes that nodes have a \"name\" property.\n *\n * By default the directive uses \"layertree.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoLayertreeTemplateUrl\" value (using\n * app.module.value('ngeoLayertreeTemplateUrl', 'path/layertree.html'), or\n * by adding an \"ngeo-layertree-templateurl\" attribute to the element.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-templateurl=\"path/to/layertree.html\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\"\n *      </div>\n *\n * The directive has its own scope, but it is not an isolate scope. That scope\n * has a \"layertreeCtrl\" property which is a reference to the directive's\n * controller: \"layertreeCtrl\". You can refer to that property in a custom\n * template for example.\n *\n * See our live example: [../examples/layertree.html](../examples/layertree.html)\n *\n * @htmlAttribute {Object} ngeo-layertree One theme (JSON).\n * @htmlAttribute {string} ngeo-layertree-templateurl The template URL.\n * @htmlAttribute {ol.Map} ngeo-layertree-map The map.\n * @htmlAttribute {string} ngeo-layertree-nodelayer Expression that will be parsed\n *      to be a {@link Function} that return a {@link ol.layer.Layer}\n *      with the argument:\n *      {\n *          'node': {@link Object}|undefined,\n *          'depth': {@link number}\n *      }\n * @htmlAttribute {string} ngeo-layertree-nodelayerexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-nodelayer}.\n * @htmlAttribute {string} ngeo-layertree-listeners Expression that will be parsed\n *      to be a {@link Function} with the argument:\n *      {\n *          'treeScope': !{@link angular.Scope},\n *          'treeCtrl': {@link ngeo.layertree.Controller}\n *      }\n * @htmlAttribute {string} ngeo-layertree-listenersexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-listeners}.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoLayertreeTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoLayertree\n */\nexports.directive_ = function(ngeoLayertreeTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: ngeoLayertreeTemplateUrl,\n    controller: ngeoLayertreeController\n  };\n};\n\n\nexports.directive('ngeoLayertree', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\n\n/** @suppress {extraRequire} */\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\n\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoLayertreeComponent from 'ngeo/layertree/component.js';\n\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscSyncArrays from 'ngeo/misc/syncArrays.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\nimport 'bootstrap/js/collapse.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeComponent', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfPermalinkPermalink.module.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeComponent.name,\n  ngeoLayertreeController.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\n\n// Overrides the path to the layertree template (used by each node, except\n// the root node that path is defined by the gmfLayertreeTemplate value.\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => 'gmf/layertree');\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree', require('./component.html'));\n});\n\n\nexports.value('gmfLayertreeTemplate',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const subTemplateUrl = 'gmf/layertree';\n    return '<div ngeo-layertree=\"gmfLayertreeCtrl.root\" ' +\n          'ngeo-layertree-map=\"gmfLayertreeCtrl.map\" ' +\n          'ngeo-layertree-nodelayer=\"gmfLayertreeCtrl.getLayer(treeCtrl)\" ' +\n          'ngeo-layertree-listeners=\"gmfLayertreeCtrl.listeners(treeScope, treeCtrl)\" ' +\n          `ngeo-layertree-templateurl=\"${subTemplateUrl}\">` +\n          '</div>';\n  }\n);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfLayertreeTemplate Template function.\n * @return {string} Template.\n * @ngInject\n */\nfunction gmfLayertreeTemplate($element, $attrs, gmfLayertreeTemplate) {\n  return gmfLayertreeTemplate($element, $attrs);\n}\n\n\n/**\n * This component creates a layertree based on the c2cgeoportal JSON themes\n * source and a {@link ngeo.layertreeComponent}. The controller used by this\n * component defines some functions for each node that are created by a default\n * template. This default template can be overridden by setting the value\n * 'gmf.layertreeTemplateUrl' but you will have to adapt the\n * ngeoLayertreeTemplateUrl value too (to define the children's nodes template\n * path).\n *\n * Example:\n *\n *      <gmf-layertree\n *        gmf-layertree-dimensions=\"ctrl.dimensions\"\n *        gmf-layertree-map=\"ctrl.map\">\n *      </gmf-layertree>\n *\n * You can add an attribute 'gmf-layertree-openlinksinnewwindow=\"::true\"' to open\n * metadata URLs in a new window. By default, and in the default template,\n * links will be opened in a popup (The window.gmfx.openIframePopup function must be available !)\n *\n * Used UI metadata:\n *\n *  * isChecked: if 'false' the layer visibility will be set to false.\n *  * iconUrl: layer icon full URL.\n *  * legendRule: WMS rule used to get a layer icon.\n *  * isLegendExpanded: if 'true' the legend is expanded by default.\n *  * metadataUrl: Display a popup with the content of the given URL if\n *    possible also open a new window.\n *\n * @htmlAttribute {ol.Map} gmf-layertree-map The map.\n * @htmlAttribute {Object<string, string>|undefined} gmf-layertree-dimensions Global dimensions object.\n * @htmlAttribute {boolean|undefined} gmf-layertree-openlinksinnewwindow if true, open\n *     metadataURLs in a new window. Otherwise open them in a popup.\n *\n * @ngdoc component\n * @ngname gmfLayertreeComponent\n */\nexports.component_ = {\n  controller: 'GmfLayertreeController as gmfLayertreeCtrl',\n  bindings: {\n    'map': '=gmfLayertreeMap',\n    'dimensions': '=?gmfLayertreeDimensions',\n    'openLinksInNewWindow': '<?gmfLayertreeOpenlinksinnewwindow',\n  },\n  template: gmfLayertreeTemplate\n};\n\nexports.component('gmfLayertree', exports.component_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n *     The Gmf value service that determines the data source currently being\n *     filtered.\n * @param {!gmf.datasource.ExternalDataSourcesManager}\n *     gmfExternalDataSourcesManager The Gmf external data sources manager\n *     service. Used here to fetch the external WMS groups.\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n * @param {!gmf.layertree.SyncLayertreeMap} gmfSyncLayertreeMap gmfSyncLayertreeMap service.\n * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {!gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname gmfLayertreeController\n */\nexports.Controller_ = function($element, $scope, ngeoLayerHelper, gmfDataSourceBeingFiltered,\n  gmfExternalDataSourcesManager, gmfPermalink, gmfTreeManager, gmfSyncLayertreeMap, ngeoWMSTime, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {?Object<string, string>}\n   * @export\n   */\n  this.dimensions;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {gmfx.datasource.DataSourceBeingFiltered}\n   * @export\n   */\n  this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n  /**\n   * @type {!gmf.datasource.ExternalDataSourcesManager}\n   * @export\n   */\n  this.gmfExternalDataSourcesManager = gmfExternalDataSourcesManager;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  const root = gmfTreeManager.root;\n  googAsserts.assert(root);\n\n  /**\n   * @type {!gmfThemes.GmfRootNode}\n   * @export\n   */\n  this.root = root;\n\n  /**\n   * @type {!gmf.layertree.SyncLayertreeMap}\n   * @private\n   */\n  this.gmfSyncLayertreeMap_ = gmfSyncLayertreeMap;\n\n  /**\n   * @type {!ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {!Object.<number, !Array.<string>>}\n   * @private\n   */\n  this.groupNodeStates_ = {};\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.openLinksInNewWindow;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n\n  /**\n   * @type {!Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.layers = [];\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  // enter digest cycle on node collapse\n  $element.on('shown.bs.collapse', () => {\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * Init the controller,\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.openLinksInNewWindow = this.openLinksInNewWindow === true;\n  this.dataLayerGroup_ = this.layerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n\n  ngeoMiscSyncArrays(this.dataLayerGroup_.getLayers().getArray(), this.layers, true, this.scope_, () => true);\n\n  // watch any change on layers array to refresh the map\n  this.scope_.$watchCollection(() => this.layers,\n    () => {\n      this.map.render();\n    });\n\n  // watch any change on dimensions object to refresh the layers\n  this.scope_.$watchCollection(() => {\n    if (this.gmfTreeManager_.rootCtrl) {\n      return this.dimensions;\n    }\n  }, (dimensions) => {\n    if (dimensions) {\n      this.updateDimensions_(this.gmfTreeManager_.rootCtrl);\n    }\n  });\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl Layer tree controller.\n * @private\n */\nexports.Controller_.prototype.updateDimensions_ = function(treeCtrl) {\n  treeCtrl.traverseDepthFirst((ctrl) => {\n    if (ctrl.node.dimensions) {\n      const layer = ctrl.layer;\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      this.updateLayerDimensions_(layer, /** @type gmfThemes.GmfGroup|gmfThemes.GmfLayer */ (ctrl.node));\n    }\n  });\n};\n\n\n/**\n * @param {ol.layer.Layer} layer Layer to update.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layer tree node.\n * @private\n */\nexports.Controller_.prototype.updateLayerDimensions_ = function(layer, node) {\n  if (this.dimensions && node.dimensions) {\n    const dimensions = {};\n    for (const key in node.dimensions) {\n      if (node.dimensions[key] === null) {\n        const value = this.dimensions[key];\n        if (value !== undefined) {\n          dimensions[key] = value;\n        }\n      } else {\n        dimensions[key] = node.dimensions[key];\n      }\n    }\n    if (!olObj.isEmpty(dimensions)) {\n      const source = layer.getSource();\n      if (source instanceof olSourceWMTS) {\n        source.updateDimensions(dimensions);\n      } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n        source.updateParams(dimensions);\n      } else {\n        // the source is not ready yet\n        layer.once('change:source', () => {\n          googAsserts.assertInstanceof(layer, olLayerLayer);\n          this.updateLayerDimensions_(layer, node);\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Use the gmfSyncLayertreeMap_ to create and get layer corresponding to this\n * treeCtrl. The layer will be inserted into the map. The layer can be null\n * if the treeCtrl is based on a node inside a mixed node. It this case, the\n * layer will be in the first parent declared as a mixed node.\n * @param {ngeo.layertree.Controller} treeCtrl tree controller of the node\n * @return {ol.layer.Base|ol.layer.Group|null} The OpenLayers layer or group\n *     for the node.\n * @export\n */\nexports.Controller_.prototype.getLayer = function(treeCtrl) {\n  let opt_position;\n  if (treeCtrl.parent.isRoot) {\n    this.gmfTreeManager_.rootCtrl = treeCtrl.parent;\n    // Precise the index to add first level groups.\n    opt_position = this.gmfTreeManager_.root.children.length -\n        this.gmfTreeManager_.numberOfGroupsToAddInThisDigestLoop || 0;\n  }\n\n  const layer = this.gmfSyncLayertreeMap_.createLayer(treeCtrl, this.map,\n    this.dataLayerGroup_, opt_position);\n\n  if (layer instanceof olLayerLayer) {\n    const node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n    this.updateLayerDimensions_(layer, node);\n  }\n\n  return layer;\n};\n\n\n/**\n * Remove layer from this component's layergroup (and then, from the map) on\n * a ngeo layertree destroy event.\n * @param {angular.Scope} scope treeCtrl scope.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.listeners = function(scope, treeCtrl) {\n  const dataLayerGroup = this.dataLayerGroup_;\n  scope.$on('$destroy', () => {\n    // Remove the layer from the map.\n    dataLayerGroup.getLayers().remove(treeCtrl.layer);\n  });\n};\n\n/**\n * Toggle the state of treeCtrl's node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.toggleActive = function(treeCtrl) {\n  treeCtrl.setState(treeCtrl.getState() === 'on' ? 'off' : 'on');\n};\n\n\n/**\n * Return the current state of the given treeCtrl's node.\n * Return a class name that match with the current node activation state.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string} 'on' or 'off' or 'indeterminate'.\n * @export\n */\nexports.Controller_.prototype.getNodeState = function(treeCtrl) {\n  return treeCtrl.getState();\n};\n\n\n/**\n * Update the `timeRangeValue` property of the data source bound to the\n * given tree controller using the given time. If the tree controller has\n * no data source, it means that it has children and they might have\n * data sources.\n *\n * The setting of the TIME parameter on the layer occurs in the\n * `gmf.datasource.Manager` service\n *\n * LayertreeController.prototype.updateWMSTimeLayerState - description\n * @param {ngeo.layertree.Controller} layertreeCtrl ngeo layertree controller\n * @param {{start : number, end : number}} time The start\n * and optionally the end datetime (for time range selection) selected by user\n * @export\n */\nexports.Controller_.prototype.updateWMSTimeLayerState = function(\n  layertreeCtrl, time) {\n  if (!time) {\n    return;\n  }\n  const dataSource = layertreeCtrl.getDataSource();\n  if (dataSource) {\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    dataSource.timeRangeValue = time;\n  } else if (layertreeCtrl.children) {\n    for (let i = 0, ii = layertreeCtrl.children.length; i < ii; i++) {\n      this.updateWMSTimeLayerState(layertreeCtrl.children[i], time);\n    }\n  }\n};\n\n\n/**\n * Get the icon image URL for the given treeCtrl's layer. It can only return a\n * string for internal WMS layers without multiple childlayers in the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string|undefined} The icon legend URL or undefined.\n * @export\n */\nexports.Controller_.prototype.getLegendIconURL = function(treeCtrl) {\n  const iconUrl = treeCtrl.node.metadata.iconUrl;\n\n  if (iconUrl !== undefined) {\n    return iconUrl;\n  }\n\n  if (treeCtrl.node.children !== undefined) {\n    return undefined;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (gmfLayer.type !== 'WMS') {\n    return undefined;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  const legendRule = gmfLayerWMS.metadata.legendRule;\n\n  if (legendRule === undefined) {\n    return undefined;\n  }\n\n  //In case of multiple layers for a gmfLayerWMS, always take the first layer\n  //name to get the icon\n  const layerName = gmfLayerWMS.layers.split(',')[0];\n  const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n  return this.layerHelper_.getWMSLegendURL(\n    gmfOgcServer.url, layerName, undefined, legendRule\n  );\n};\n\n\n/**\n * Get the legends object (<LayerName: url> for each layer) for the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {Object.<string, string>} A <layerName: url> object that provides a\n *     layer for each layer.\n * @export\n */\nexports.Controller_.prototype.getLegendsObject = function(treeCtrl) {\n  const legendsObject = {};\n  if (/** @type gmfThemes.GmfGroup */ (treeCtrl.node).children !== undefined) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const gmfLayerDefaultName = gmfLayer.name;\n  if (gmfLayer.metadata.legendImage) {\n    legendsObject[gmfLayerDefaultName] = gmfLayer.metadata.legendImage;\n    return legendsObject;\n  }\n\n  const layer = treeCtrl.layer;\n  if (gmfLayer.type === 'WMTS') {\n    googAsserts.assertInstanceof(layer, olLayerTile);\n    const wmtsLegendURL = this.layerHelper_.getWMTSLegendURL(layer);\n    legendsObject[gmfLayerDefaultName] = wmtsLegendURL;\n    return wmtsLegendURL ? legendsObject : null;\n  } else {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n    let layersNames = gmfLayerWMS.layers;\n    const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n    const scale = this.getScale_();\n    // QGIS can handle multiple layers natively. Use Multiple URLs for other map\n    // servers\n    if (gmfOgcServer.type === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      layersNames = [layersNames];\n    } else {\n      layersNames = layersNames.split(',');\n    }\n    layersNames.forEach((layerName) => {\n      legendsObject[layerName] = this.layerHelper_.getWMSLegendURL(gmfOgcServer.url, layerName, scale);\n    });\n    return legendsObject;\n  }\n};\n\n\n/**\n * Get the number of legends object for this layertree controller.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {number} The number of Legends object.\n * @export\n */\nexports.Controller_.prototype.getNumberOfLegendsObject = function(treeCtrl) {\n  const legendsObject = this.getLegendsObject(treeCtrl);\n  return legendsObject ? Object.keys(legendsObject).length : 0;\n};\n\n\n/**\n * Return the current scale of the map.\n * @return {number} Scale.\n * @private\n */\nexports.Controller_.prototype.getScale_ = function() {\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const mpu = view.getProjection().getMetersPerUnit();\n  const dpi = 25.4 / 0.28;\n  return resolution * mpu * 39.37 * dpi;\n};\n\n\n/**\n * Opens a gmfx.openIframePopup with the content of the metadata url of a node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.displayMetadata = function(treeCtrl) {\n  const node = treeCtrl.node;\n  const metadataURL = node.metadata['metadataUrl'];\n  if (metadataURL !== undefined) {\n    // FIXME layertree should not rely on a window function.\n    const gmfx = window.gmfx;\n    if (gmfx.openIframePopup) {\n      gmfx.openIframePopup(metadataURL, node.name, undefined, undefined, false);\n    }\n  }\n};\n\n\n/**\n * Update the layers order in the map and the treeCtrl in the treeManager after\n * a reorder of the first-level groups. Then update the permalink.\n * @export\n */\nexports.Controller_.prototype.afterReorder = function() {\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const currentTreeCtrls = this.gmfTreeManager_.rootCtrl.children;\n  const treeCtrls = [];\n\n  // Get order of first-level groups for treectrl and layers;\n  groupNodes.forEach((node) => {\n    currentTreeCtrls.some((treeCtrl) => {\n      if (treeCtrl.node === node) {\n        treeCtrls.push(treeCtrl);\n        return;\n      }\n    });\n  });\n\n  // Update gmfTreeManager rootctrl children order\n  this.gmfTreeManager_.rootCtrl.children = treeCtrls;\n\n  // Update map 'data' groupe layers order\n  this.layers.length = 0;\n  this.gmfTreeManager_.rootCtrl.children.forEach((child) => {\n    this.layers.push(child.layer);\n  });\n\n  // Update the permalink order\n  this.gmfPermalink_.refreshFirstLevelGroups();\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup} node Layer tree node to remove.\n * @export\n */\nexports.Controller_.prototype.removeNode = function(node) {\n  this.gmfTreeManager_.removeGroup(node);\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.removeAllNodes = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @return {number} first level node count.\n * @export\n */\nexports.Controller_.prototype.nodesCount = function() {\n  return this.gmfTreeManager_.root.children.length;\n};\n\n/**\n * Return 'out-of-resolution' if the current resolution of the map is out of\n * the min/max resolution in the node.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {string|undefined} 'out-of-resolution' or undefined.\n * @export\n */\nexports.Controller_.prototype.getResolutionStyle = function(gmfLayer) {\n  const resolution = this.map.getView().getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    return 'out-of-resolution';\n  }\n  const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n  if (maxResolution !== undefined && resolution > maxResolution) {\n    return 'out-of-resolution';\n  }\n  return undefined;\n};\n\n\n/**\n * Set the resolution of the map with the max or min resolution of the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.zoomToResolution = function(treeCtrl) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    view.setResolution(view.constrainResolution(minResolution, 0, 1));\n  } else {\n    const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n    if (maxResolution !== undefined && resolution > maxResolution) {\n      view.setResolution(view.constrainResolution(maxResolution, 0, -1));\n    }\n  }\n};\n\n\n/**\n * Toggle the legend for a node\n * @param {string} legendNodeId The DOM node legend id to toggle\n * @export\n */\nexports.Controller_.prototype.toggleNodeLegend = function(legendNodeId) {\n  $(legendNodeId).toggle({\n    toggle: true\n  });\n};\n\n\n/**\n * @param {gmf.datasource.OGC} ds Data source to filter.\n * @export\n */\nexports.Controller_.prototype.toggleFiltrableDataSource = function(ds) {\n  this.gmfDataSourceBeingFiltered.dataSource = ds;\n};\n\n\n/**\n * @param {string} legendNodeId The DOM node legend id\n * @return {boolean} Whenever the legend is currently displayed.\n * @export\n */\nexports.Controller_.prototype.isNodeLegendVisible = function(legendNodeId) {\n  return $(legendNodeId).is(':visible');\n};\n\n\n/**\n * Determines whether the layer tree controller supports being customized.\n * For example, having its layer opacity changed, displaying its legend, etc.\n *\n * If any requirement is met, then the treeCtrl is considered supporting\n * \"customization\", regardless of what it actually is.\n *\n * The requirements are:\n *\n * - must not be the root controller, any of the following:\n *   - it supports legend\n *   - it supports having the layer opacity being changed\n *\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports being\n *     \"customized\" or not.\n * @export\n */\nexports.Controller_.prototype.supportsCustomization = function(treeCtrl) {\n  return !treeCtrl.isRoot &&\n    (\n      this.supportsLegend(treeCtrl) ||\n      this.supportsOpacityChange(treeCtrl)\n    );\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having a\n *     legend being shown.\n * @export\n */\nexports.Controller_.prototype.supportsLegend = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  return !!node.metadata &&\n    !!node.metadata.legend &&\n    !!this.getLegendsObject(treeCtrl);\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having its\n *     layer opacity being changed or not.\n * @export\n */\nexports.Controller_.prototype.supportsOpacityChange = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  const parentNode = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  return !!treeCtrl.layer &&\n    (\n      (\n        treeCtrl.depth === 1 && !node.mixed\n      ) ||\n      (\n        treeCtrl.depth > 1 && parentNode.mixed\n      )\n    );\n};\n\nexports.controller('GmfLayertreeController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module app\n */\nconst exports = {};\n\n/**\n * This file provides the \"app\" namespace, which is the\n * application's main namespace. And it defines the application's Angular\n * module.\n */\n\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('app', []);\n\nexports.module.config(['$compileProvider', function($compileProvider) {\n  if (!('debug' in ngeoUtils.decodeQueryString(window.location.search))) {\n    // Disable the debug info\n    $compileProvider.debugInfoEnabled(false);\n  }\n}]);\n\n\nexport default exports;\n","/**\n * @module ngeo.googlestreetview.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olProj from 'ol/proj.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGooglestreetview', [\n  ngeoMapFeatureOverlayMgr.module.name\n]);\n\n\nexports.value('ngeoGooglestreetviewTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoGooglestreetviewTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/googlestreetview';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/googlestreetview', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoGooglestreetviewTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoGooglestreetviewTemplateUrl($attrs, ngeoGooglestreetviewTemplateUrl) {\n  return ngeoGooglestreetviewTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {angular.JQLite} $element Element.\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo FeatureOverlay\n   *     manager.\n   * @private\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoGooglestreetviewController\n   */\n  constructor($element, $scope, ngeoFeatureOverlayMgr) {\n\n    // Binding properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.active;\n\n    $scope.$watch(\n      () => this.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    /**\n     * Style for the feature.\n     * @type {ol.style.Style|Array.<ol.style.Style>|\n     *     ol.FeatureStyleFunction|ol.StyleFunction|undefined}\n     * @export\n     */\n    this.featureStyle;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {number|undefined}\n     * @export\n     */\n    this.radius;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n\n    // Inner properties\n\n    /**\n     * @type {!ol.Feature}\n     * @private\n     */\n    this.feature_ = new olFeature();\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @private\n     */\n    this.featureOverlay_ = googAsserts.assert(\n      ngeoFeatureOverlayMgr.getFeatureOverlay()\n    );\n\n    /**\n     * @type {Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * The current location in the OpenLayers' map view projection.\n     * @type {?ol.Coordinate}\n     * @private\n     */\n    this.location = null;\n\n    /**\n     * Flag that determines whether there's data at a given location or not.\n     * @type {boolean}\n     * @export\n     */\n    this.noDataAtLocation = false;\n\n    /**\n     * @type {!google.maps.StreetViewPanorama}\n     * @private\n     */\n    this.panorama_ = new google.maps.StreetViewPanorama(\n      $element[0],\n      {\n        pov: {\n          heading: 0,\n          pitch: 0\n        },\n        visible: false,\n        zoom: 1\n      }\n    );\n\n    /**\n     * @type {?google.maps.MapsEventListener}\n     * @private\n     */\n    this.panoramaListener_ = null;\n\n    /**\n     * @type {ol.geom.Point}\n     * @private\n     */\n    this.point_ = new olGeomPoint([0, 0]);\n\n    this.feature_.setGeometry(this.point_);\n\n    /**\n     * @type {google.maps.StreetViewService}\n     * @private\n     */\n    this.streetViewService_ = new google.maps.StreetViewService();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.panoramaPositionChanging_ = false;\n  }\n\n  /**\n   * Called on initialization of the controller.\n   */\n  $onInit() {\n\n    // === Watchers ===\n\n    // (1) Watch for any change in the location\n    this.scope_.$watch(\n      () => this.location,\n      this.handleLocationChange_.bind(this)\n    );\n\n    // (2) Watch for both the active and location. When we have both, the\n    //     state is considered 'ready'.\n    this.scope_.$watch(\n      () => {\n        const isActive = this.active;\n        const hasLocation = this.location !== null;\n        return isActive && hasLocation;\n      },\n      this.handleReadyChange_.bind(this)\n    );\n\n    // (3) Watcher to manage the visibility of the panorama.\n    this.scope_.$watch(\n      () => {\n        const isActive = this.active;\n        const hasLocation = this.location !== null;\n        const hasData = this.noDataAtLocation === false;\n        return isActive && hasLocation && hasData;\n      },\n      (show, oldShow) => {\n        if (show === oldShow) {\n          return;\n        }\n\n        this.panorama_.setVisible(show);\n\n        if (show) {\n          this.panoramaListener_ = google.maps.event.addListener(\n            this.panorama_,\n            'position_changed',\n            this.handlePanoramaPositionChange_.bind(this)\n          );\n        } else if (this.panoramaListener_) {\n          google.maps.event.removeListener(this.panoramaListener_);\n          this.panoramaListener_ = null;\n        }\n      }\n    );\n\n\n    // Other initialization\n    if (this.featureStyle) {\n      this.feature_.setStyle(this.featureStyle);\n    }\n\n  }\n\n  /**\n   * Called when the 'active' property of this component changes.\n   * @param {boolean} active Active.\n   * @private\n   */\n  handleActiveChange_(active) {\n\n    const keys = this.listenerKeys_;\n\n    if (active) {\n      keys.push(\n        olEvents.listen(this.map, 'click', this.handleMapClick_, this)\n      );\n    } else {\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n    }\n  }\n\n  /**\n   * Called when the 'location' property of this component changes.\n   * @param {?ol.Coordinate} location Location, in OL map view projection.\n   * @param {?ol.Coordinate} oldLocation The previous location.\n   * @private\n   */\n  handleLocationChange_(location, oldLocation) {\n\n    // (1) No need to do anything if the old value equals the new value\n    if (location === oldLocation || (\n      Array.isArray(location) && Array.isArray(oldLocation) &&\n        olArray.equals(location, oldLocation)\n    )) {\n      return;\n    }\n\n    // (2) Update point coordinates\n    this.point_.setCoordinates(location);\n\n    // (3) Update StreetView location\n    if (location && !this.panoramaPositionChanging_) {\n      const lonLat = this.toLonLat_(location);\n      this.streetViewService_.getPanorama({\n        location: {\n          lat: lonLat[1],\n          lng: lonLat[0]\n        },\n        radius: this.radius\n      }, this.handleStreetViewServiceGetPanorama_.bind(this));\n    }\n  }\n\n  /**\n   * Called when the map is clicked while this component is active. Update the\n   * location accordingly.\n   * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n   * @private\n   */\n  handleMapClick_(evt) {\n    this.location = evt.coordinate;\n    this.scope_.$apply();\n  }\n\n  /**\n   * Called when the component 'virtual ready' state changes.\n   *\n   * When ready:\n   *  - add the feature to the overlay\n   *\n   * When not ready:\n   *  - remove the feature from the overlay\n   *\n   * @param {boolean} ready Whether the component is ready or not.\n   * @param {boolean} oldReady Previous ready value.\n   * @private\n   */\n  handleReadyChange_(ready, oldReady) {\n\n    if (ready === oldReady) {\n      return;\n    }\n\n    if (ready) {\n      this.featureOverlay_.addFeature(this.feature_);\n    } else {\n      this.featureOverlay_.removeFeature(this.feature_);\n    }\n  }\n\n  /**\n   * @param {google.maps.StreetViewPanoramaData} data Data.\n   * @param {google.maps.StreetViewStatus} status Status.\n   * @private\n   */\n  handleStreetViewServiceGetPanorama_(data, status) {\n\n    const panorama = this.panorama_;\n\n    if (status === google.maps.StreetViewStatus.OK) {\n      this.noDataAtLocation = false;\n      panorama.setPosition(data.location.latLng);\n    } else {\n      this.noDataAtLocation = true;\n    }\n\n    this.scope_.$apply();\n  }\n\n  /**\n   * Called when the panorama position changes. Update the location.\n   * @private\n   */\n  handlePanoramaPositionChange_() {\n    this.panoramaPositionChanging_ = true;\n    const position = this.panorama_.getPosition();\n    const lonLat = [position.lng(), position.lat()];\n    const location = this.fromLonLat_(lonLat);\n    this.location = location;\n    this.scope_.$apply();\n    this.panoramaPositionChanging_ = false;\n  }\n\n\n  // Utility methods\n\n  /**\n   * @param {!ol.Coordinate} lonLat LonLat coordinate.\n   * @return {ol.Coordinate} Map view projection coordinate.\n   */\n  fromLonLat_(lonLat) {\n    return olProj.fromLonLat(\n      lonLat,\n      this.map.getView().getProjection()\n    );\n  }\n\n  /**\n   * @param {!ol.Coordinate} coordinate Map view projection coordinate.\n   * @return {ol.Coordinate} LonLat coordinate.\n   */\n  toLonLat_(coordinate) {\n    return olProj.toLonLat(\n      coordinate,\n      this.map.getView().getProjection()\n    );\n  }\n};\n\n\nexports.component('ngeoGooglestreetview', {\n  bindings: {\n    'active': '<',\n    'featureStyle': '<?',\n    'map': '<',\n    'radius': '<?'\n  },\n  controller: exports.Controller_,\n  templateUrl: ngeoGooglestreetviewTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.googlestreetview.module\n */\nimport ngeoGooglestreetviewComponent from 'ngeo/googlestreetview/component.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGooglestreetviewModule', [\n  ngeoGooglestreetviewComponent.name\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.routing.NominatimService\n */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\n/**\n * Service to provide access to Nominatim, which allows to search for\n * OSM data by name and address.\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngInject\n * @export\n * @ngname ngeoNominatimService\n * @see https://wiki.openstreetmap.org/wiki/Nominatim\n */\nconst exports = function($http, $injector, ngeoDebounce) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * URL for Nominatim backend\n   * Defaults openstreetmap instance.\n   * @type {string}\n   * @private\n   */\n  this.nominatimUrl_ = 'https://nominatim.openstreetmap.org/';\n\n  if ($injector.has('ngeoNominatimUrl')) {\n    this.nominatimUrl_ = $injector.get('ngeoNominatimUrl');\n\n    // the url is expected to end with a slash\n    if (this.nominatimUrl_.substr(-1) !== '/') {\n      this.nominatimUrl_ += '/';\n    }\n  }\n\n  /**\n   * @type {Object<string, string>}\n   * @private\n   */\n  this.searchDefaultParams_ = {};\n\n  if ($injector.has('ngeoNominatimSearchDefaultParams')) {\n    this.searchDefaultParams_ = $injector.get('ngeoNominatimSearchDefaultParams');\n  }\n\n  /**\n   * Delay (in milliseconds) to avoid calling the API too often.\n   * Only if there were no calls for that many milliseconds,\n   * the last call will be executed.\n   * @type {number}\n   * @private\n   */\n  this.typeaheadDebounceDelay_ = 500;\n\n  /**\n   * @export\n   * @type {function(string,function(Array.<BloodhoundDatum>),(function(Array.<ol.Feature>)|undefined))}\n   */\n  this.typeaheadSourceDebounced =\n    /** @type{function(string,function(Array.<BloodhoundDatum>),(function(Array.<ol.Feature>)|undefined))} */\n    (this.ngeoDebounce_(/** @type {function(?)} */ (this.typeaheadSource_.bind(this)), this.typeaheadDebounceDelay_, true));\n};\n\n/**\n * Search by name\n * @param {string} query Search query\n * @param {?Object} params Optional parameters\n * @return {!angular.$http.HttpPromise} promise of the Nominatim API request\n * @see https://wiki.openstreetmap.org/wiki/Nominatim#Search\n * @export\n */\nexports.prototype.search = function(query, params) {\n  let url = `${this.nominatimUrl_}search?q=${query}`;\n\n  params = params || {};\n  params = Object.assign({}, this.searchDefaultParams_, params);\n\n  // require JSON response\n  params['format'] = 'json';\n\n  if (params) {\n    url += '&';\n    const options = [];\n    for (const option of Object.keys(params)) {\n      options.push(`${option}=${params[option]}`);\n    }\n    url += options.join('&');\n  }\n\n  return this.$http_.get(url);\n};\n\n/**\n * Reverse Geocoding\n * @param {ol.Coordinate} coordinate Search coordinate in LonLat projection\n * @param {(Object|undefined)} params Optional parameters\n * @return {!angular.$http.HttpPromise} promise of the Nominatim API request\n * @see https://wiki.openstreetmap.org/wiki/Nominatim#Reverse_Geocoding\n * @export\n */\nexports.prototype.reverse = function(coordinate, params) {\n  let url = `${this.nominatimUrl_}reverse`;\n\n  params = Object.assign({}, params);\n\n  // coordinate\n  params['lon'] = coordinate[0];\n  params['lat'] = coordinate[1];\n\n  // require JSON response\n  params['format'] = 'json';\n\n  if (params) {\n    url += '?';\n    const options = [];\n    for (const option of Object.keys(params)) {\n      options.push(`${option}=${params[option]}`);\n    }\n    url += options.join('&');\n  }\n\n  return this.$http_.get(url);\n};\n\n/**\n * @param {string} query Search query\n * @param {function(Array.<BloodhoundDatum>)} syncResults Callback for synchronous execution, unused\n * @param {function(Array.<ngeox.NominatimSearchResult>)} asyncResults Callback for asynchronous execution\n * @private\n */\nexports.prototype.typeaheadSource_ = function(query, syncResults, asyncResults) {\n  const onSuccess_ = function(resp) {\n    /**\n     * Parses result response.\n     * @param {ngeox.NominatimSearchResponseResult} result Result\n     * @return {ngeox.NominatimSearchResult} Parsed result\n     */\n    const parse = function(result) {\n      return /** @type{ngeox.NominatimSearchResult} */({\n        coordinate: [result.lon, result.lat],\n        name: result.display_name\n      });\n    };\n    asyncResults(resp.data.map(parse));\n  };\n\n  const onError_ = function(resp) {\n    asyncResults([]);\n  };\n\n  this.search(query, {}).then(onSuccess_, onError_);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoNominatimService', [\n  ngeoMiscDebounce.name\n]);\n\nexports.module.service('ngeoNominatimService', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.routing.RoutingService\n */\n/**\n * Service to provide access to a [Open Source Routing Machine (OSRM) backend](https://github.com/Project-OSRM/osrm-backend)\n * of version 5.8 and higher and its features.\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngInject\n * @export\n * @ngname ngeoRoutingService\n */\nconst exports = function($http, $injector) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {ngeox.RoutingOptions}\n   * @private\n   */\n  this.routingOptions_ = $injector.has('ngeoRoutingOptions') ? $injector.get('ngeoRoutingOptions') : {};\n\n  /**\n   * URL for OSRM backend API.\n   * Defaults to demo backend.\n   * @type {string}\n   * @private\n   */\n  this.ngeoOsrmBackendUrl_ = this.routingOptions_.backendUrl || 'https://router.project-osrm.org/';\n\n  // the url is expected to end with a slash\n  if (this.ngeoOsrmBackendUrl_.substr(-1) !== '/') {\n    this.ngeoOsrmBackendUrl_ += '/';\n  }\n\n  /**\n   * Version of the protocol implemented by the service.\n   * see: https://github.com/Project-OSRM/osrm-backend/blob/master/docs/http.md\n   * @type {string}\n   * @private\n   */\n  this.protocolVersion_ = 'v1';\n\n};\n\n/**\n * Route request\n * @param {Array.<ol.Coordinate>} coordinates coordinates of the route (at least two!)\n * @param {?Object} config optional configuration\n * @return {!angular.$http.HttpPromise} promise of the OSRM API request\n */\nexports.prototype.getRoute = function(coordinates, config) {\n\n  config = config || {};\n\n  // Service\n  // see: https://github.com/Project-OSRM/osrm-backend/blob/master/docs/http.md#requests\n  if (!config['service']) {\n    config['service'] = 'route'; // default to route\n  }\n\n  // Mode of transportation,\n  // can be: car, bike, foot\n  // see: https://github.com/Project-OSRM/osrm-backend/blob/master/docs/http.md#requests\n  //\n  // As of version 5.8.0, OSRM (server) does not support multiple profiles simultaneously.\n  // This means the value actually does not matter.\n  if (!config['profile']) {\n    config['profile'] = 'car'; // default to car\n  }\n\n  // build request URL\n  let url = this.ngeoOsrmBackendUrl_;\n\n  // Common workaround to provide multiple profiles (since it is not supported yet)\n  // Every profile runs on its own instance.\n  if (config['instance']) {\n    url += `${config['instance']}/`;\n  }\n\n  url += `${config['service']}/${this.protocolVersion_}/${config['profile']}/`;\n\n  // [ [a,b] , [c,d] ] -> 'a,b;c,d'\n  const coordinateString = coordinates.map(c => c.join(',')).join(';');\n\n  url += coordinateString;\n\n  // look for route service options\n  // see: https://github.com/Project-OSRM/osrm-backend/blob/master/docs/http.md#route-service\n  if (config.options) {\n    url += '?';\n    const options = [];\n    for (const option of Object.keys(config.options)) {\n      options.push(`${option}=${config.options[option]}`);\n    }\n    url += options.join('&');\n  }\n\n  return this.$http_.get(url);\n};\n\n/**\n * Snaps a coordinate to the street network and returns the nearest match\n * @param {ol.Coordinate} coordinate coordinate to query\n * @param {?Object} config optional configuration\n * @return {!angular.$http.HttpPromise} promise of the OSRM API request\n * @see https://github.com/Project-OSRM/osrm-backend/blob/master/docs/http.md#nearest-service\n */\nexports.prototype.getNearest = function(coordinate, config) {\n  config = config || {};\n\n  // service is always nearest\n  config['service'] = 'nearest';\n\n  // Mode of transportation\n  // If used in combination with a getRoute request, choose the same profile.\n  if (!config['profile']) {\n    config['profile'] = 'car'; // default to car\n  }\n\n  // build request URL\n  let url = this.ngeoOsrmBackendUrl_;\n\n  // Common workaround to provide multiple profiles (since it is not supported yet)\n  // Every profile runs on its own instance.\n  if (config['instance']) {\n    url += `${config['instance']}/`;\n  }\n\n  url += `${config['service']}/${this.protocolVersion_}/${config['profile']}/`;\n\n  // [a,b] -> 'a,b'\n  const coordinateString = coordinate.join(',');\n  url += coordinateString;\n\n  // look for nearest service options\n  if (config.options) {\n    url += '?';\n    const options = [];\n    for (const option of Object.keys(config.options)) {\n      options.push(`${option}=${config.options[option]}`);\n    }\n    url += options.join('&');\n  }\n\n  return this.$http_.get(url);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRoutingService', [\n]);\n\nexports.module.service('ngeoRoutingService', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.routing.NominatimInputComponent\n */\nconst exports = {};\nimport ngeoSearchSearchDirective from 'ngeo/search/searchDirective.js';\nimport ngeoRoutingNominatimService from 'ngeo/routing/NominatimService.js';\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRoutingNominatimInputComponent', [\n  ngeoSearchSearchDirective.module.name,\n  ngeoRoutingNominatimService.module.name\n]);\n\nexports.module.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/routing/nominatiminput', require('./nominatiminput.html'));\n});\n\n\nexports.module.value('ngeoRoutingNominatimInputComponentTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoRoutingNominatimInputComponentTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/routing/nominatiminput';\n  }\n);\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoRoutingNominatimInputComponentTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoRoutingNominatimInputComponentTemplateUrl($attrs, ngeoRoutingNominatimInputComponentTemplateUrl) {\n  return ngeoRoutingNominatimInputComponentTemplateUrl($attrs);\n}\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Scope.\n * @param {!ngeo.routing.NominatimService} ngeoNominatimService service for Nominatim\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoNominatimInputController\n */\nexports.Controller = function($element, $injector, $scope, ngeoNominatimService) {\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {ngeo.routing.NominatimService}\n   * @export\n   */\n  this.ngeoNominatimService = ngeoNominatimService;\n\n  /**\n   * @type {(function(Object)|undefined)}\n   * @export\n   */\n  this.onSelect;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.inputValue;\n\n  /**\n   * @type {TypeaheadOptions}\n   * @export\n   */\n  this.options = /** @type {TypeaheadOptions} */ ({\n  });\n\n  /**\n   * @type {Array.<TypeaheadDataset>}\n   * @export\n   */\n  this.datasets = [/** @type {TypeaheadDataset} */({\n    name: 'nominatim',\n    display: 'name',\n    source: this.ngeoNominatimService.typeaheadSourceDebounced\n  })];\n\n  /**\n   * @type {ngeox.SearchDirectiveListeners}\n   * @export\n   */\n  this.listeners = /** @type {ngeox.SearchDirectiveListeners} */({\n    select: this.select_.bind(this)\n  });\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.placeholder = '';\n\n};\n\n/**\n * @param {jQuery.Event} event Event.\n * @param {ngeox.NominatimSearchResult} suggestion Suggestion.\n * @param {TypeaheadDataset} dataset Dataset.\n * @this {ngeo.routing.NominatimInputComponent.Controller}\n * @private\n */\nexports.Controller.prototype.select_ = function(event, suggestion, dataset) {\n  if (this.onSelect) {\n    this.onSelect(suggestion);\n  }\n};\n\n/**\n * Input form field which provides Nominatim typeahead lookup using {@link ngeo.routing.NominatimService}.\n *\n * Example:\n *\n *     <ngeo-nominatim-input\n *         ngeo-nominatim-input-value=\"ctrl.label\"\n *         ngeo-nominatim-input-placeholder=\"type to search\"\n *         ngeo-nominatim-input-on-select=\"ctrl.onSelect\">\n *\n * Is used in in the partial of {@link ngeo.routingFeatureComponent}.\n *\n * See the [../examples/routing.html](../examples/routing.html) example to see it in action.\n *\n * @htmlAttribute {function(ngeox.NominatimSearchResult)} ngeo-nominatim-input-on-select\n *  Event fired when user selects a new suggestion.\n * @htmlAttribute {string} ngeo-nominatim-input-value\n *  Value of input field, will be set to the label of the search result.\n * @htmlAttribute {string} ngeo-nominatim-input-placeholder\n *  Placeholder text, when field is empty.\n * @ngdoc directive\n * @ngname ngeoNominatimInput\n */\nconst component = {\n  controller: exports.Controller,\n  bindings: {\n    'onSelect': '=?ngeoNominatimInputOnSelect',\n    'inputValue': '=?ngeoNominatimInputValue',\n    'placeholder': '@?ngeoNominatimInputPlaceholder'\n  },\n  templateUrl: ngeoRoutingNominatimInputComponentTemplateUrl\n};\n\nexports.module.component('ngeoNominatimInput', component);\n\n\nexport default exports;\n","/**\n * @module ngeo.routing.RoutingFeatureComponent\n */\nconst exports = {};\nimport ngeoRoutingNominatimService from 'ngeo/routing/NominatimService.js';\nimport ngeoRoutingNominatimInputComponent from 'ngeo/routing/NominatimInputComponent.js';\nimport * as olProj from 'ol/proj.js';\nimport olFeature from 'ol/Feature.js';\nimport olCollection from 'ol/Collection.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport 'font-awesome/css/font-awesome.css';\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRoutingFeatureComponent', [\n  ngeoRoutingNominatimService.module.name,\n  ngeoRoutingNominatimInputComponent.module.name\n]);\n\nexports.module.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/routing/routingfeature', require('./routingfeature.html'));\n});\n\n\nexports.module.value('ngeoRoutingFeatureTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoRoutingFeatureTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/routing/routingfeature';\n  }\n);\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoRoutingFeatureTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoRoutingFeatureTemplateUrl($attrs, ngeoRoutingFeatureTemplateUrl) {\n  return ngeoRoutingFeatureTemplateUrl($attrs);\n}\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {!angular.$q} $q Angular q service\n * @param {!ngeo.routing.NominatimService} ngeoNominatimService service for Nominatim\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoRoutingFeatureController\n */\nexports.Controller = function($scope, $timeout, $q, ngeoNominatimService) {\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {ngeo.routing.NominatimService}\n   * @private\n   */\n  this.ngeoNominatimService_ = ngeoNominatimService;\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map;\n\n  /**\n   * @type {ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.featureLabel = '';\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.fillColor;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.strokeColor;\n\n  /**\n   * @type {function(ol.Feature)}\n   * @export\n   */\n  this.onChange;\n\n  /**\n   * @type {ol.Collection}\n   * @private\n   */\n  this.vectorFeatures_ = new olCollection();\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.vectorSource_ = new olSourceVector({\n    features: this.vectorFeatures_\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: this.vectorSource_,\n    style: (function(feature, resolution) {\n      return [new olStyleStyle({\n        text: new olStyleText({\n          fill: new olStyleFill({\n            color: this.fillColor || '#000000'\n          }),\n          font: 'normal 30px FontAwesome',\n          offsetY: -15,\n          stroke: new olStyleStroke({\n            width: 3,\n            color: this.strokeColor || '#000000'\n          }),\n          text: '\\uf041'\n        })\n      })];\n    }).bind(this)\n  });\n\n  /**\n   * Interaction for moving start and end.\n   * @type {ol.interaction.Modify}\n   * @private\n   */\n  this.modifyFeature_ = new olInteractionModify({\n    features: this.vectorFeatures_\n  });\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @private\n   */\n  this.draw_ = null;\n\n  /**\n   * @param {ngeox.NominatimSearchResult} selected Selected result.\n   * @export\n   */\n  this.onSelect = this.onSelect_.bind(this);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.errorMessage = '';\n};\n\nexports.Controller.prototype.$onInit = function() {\n  this.map.addLayer(this.vectorLayer_);\n\n  // setup modify interaction\n  this.modifyFeature_.setActive(true);\n  this.map.addInteraction(this.modifyFeature_);\n\n  this.modifyFeature_.on('modifyend', (event) => {\n    const feature = event.features.getArray()[0];\n    this.vectorSource_.clear();\n    this.snapFeature_(feature);\n  });\n\n  this.scope_.$watch(\n    () => this.feature,\n    (newVal, oldVal) => {\n      if (newVal) {\n        this.onFeatureChange_();\n      }\n      if (newVal === null) {\n        this.vectorSource_.clear();\n        this.featureLabel = '';\n      }\n    }\n  );\n};\n\n/**\n * Cleanup, mostly relevant for vias.\n */\nexports.Controller.prototype.$onDestroy = function() {\n  this.map.removeLayer(this.vectorLayer_);\n  this.modifyFeature_.setActive(false);\n  this.map.removeInteraction(this.modifyFeature_);\n};\n\n/**\n * @export\n */\nexports.Controller.prototype.set = function() {\n  if (this.draw_) {\n    this.map.removeInteraction(this.draw_);\n  }\n\n  this.draw_ = new olInteractionDraw({\n    features: this.vectorFeatures_,\n    type: /** @type {ol.geom.GeometryType} */ ('Point')\n  });\n\n  this.draw_.on('drawstart', () => {\n    if (this.feature) {\n      this.vectorSource_.removeFeature(this.feature);\n    }\n  });\n\n  this.draw_.on('drawend', (event) => {\n    if (this.draw_) {\n      this.map.removeInteraction(this.draw_);\n    }\n    this.snapFeature_(event.feature);\n    this.modifyFeature_.setActive(true);\n  });\n\n  this.modifyFeature_.setActive(false);\n  this.map.addInteraction(this.draw_);\n};\n\n/**\n * @param {ol.Coordinate} coordinate LonLat coordinate.\n * @param {string} label Feature name/label.\n * @private\n */\nexports.Controller.prototype.setFeature_ = function(coordinate, label) {\n  const transformedCoordinate = olProj.fromLonLat(coordinate, this.map.getView().getProjection());\n  if (label === '') {\n    label = transformedCoordinate.join('/');\n  }\n  this.feature = new olFeature({\n    geometry: new olGeomPoint(transformedCoordinate),\n    name: label\n  });\n};\n\nexports.Controller.prototype.onFeatureChange_ = function() {\n  // update label\n  this.featureLabel = /** @type{string} */(this.feature.get('name') || '');\n\n  //update vector source\n  this.vectorSource_.clear();\n  this.vectorSource_.addFeature(this.feature);\n\n  // notify others\n  if (this.onChange) {\n    this.timeout_(() => {\n      this.onChange(this.feature);\n    });\n  }\n};\n\n/**\n * @param {ngeox.NominatimSearchResult} selected Selected result.\n * @private\n */\nexports.Controller.prototype.onSelect_ = function(selected) {\n  const coordinate = selected.coordinate.map(parseFloat);\n  const label = selected.label;\n  this.setFeature_(coordinate, label);\n  const newCoordinates = /** @type{ol.geom.Point} */(this.feature.getGeometry()).getCoordinates();\n  this.map.getView().setCenter(newCoordinates);\n};\n\n/**\n * Snaps a feature to the street network using the getNearest\n * function of the routing service. Replaces the feature.\n * @param {ol.Feature} feature Feature to snap\n * @private\n */\nexports.Controller.prototype.snapFeature_ = function(feature) {\n  const coord = this.getLonLatFromPoint_(feature);\n  const config = {};\n\n  const onSuccess = (function(resp) {\n    const lon = parseFloat(resp['data']['lon']);\n    const lat = parseFloat(resp['data']['lat']);\n    const coordinate = [lon, lat];\n    const label = resp['data']['display_name'];\n    this.setFeature_(coordinate, label);\n  }).bind(this);\n\n  const onError = (function(resp) {\n    this.errorMessage = 'Error: nominatim server not responding.';\n    console.log(resp);\n  }).bind(this);\n\n  this.$q_.when(this.ngeoNominatimService_.reverse(coord, config))\n    .then(onSuccess.bind(this), onError.bind(this));\n};\n\n/**\n * Converts feature point into LonLat coordinate.\n * @param {ol.Feature} point Feature point to convert\n * @return {ol.Coordinate} LonLat coordinate\n * @private\n */\nexports.Controller.prototype.getLonLatFromPoint_ = function(point) {\n  const geometry = /** @type {ol.geom.Point} */ (point.getGeometry());\n  const coords = geometry.getCoordinates();\n  const projection = this.map.getView().getProjection();\n  return olProj.toLonLat(coords, projection);\n};\n\n\n/**\n * Provides a text input and draw interaction to allow a user to create and modify a ol.Feature (point geometry).\n *\n * The text input is provided by {@link ngeo.nominatimInputComponent} and includes Nominatim search.\n *\n * Example:\n *\n *     <ngeo-routing-feature\n *         ngeo-routing-feature-map=\"ctrl.map\"\n *         ngeo-routing-feature-feature=\"ctrl.feature\"\n *         ngeo-routing-feature-fill-color=\"#6BE62E\"\n *         ngeo-routing-feature-stroke-color=\"#4CB01E\"\n *         ngeo-routing-feature-on-change=\"ctrl.handleChange\">\n *\n * Is used in in the partial of {@link ngeo.routingComponent}.\n *\n * See the [../examples/routing.html](../examples/routing.html) example for a usage sample.\n *\n * @htmlAttribute {ol.Map} ngeo-routing-feature-map The map.\n * @htmlAttribute {ol.Feature} ngeo-routing-feature-feature The feature.\n * @htmlAttribute {string} ngeo-routing-feature-fill-color The marker fill color.\n * @htmlAttribute {string} ngeo-routing-feature-stroke-color The marker stroke color.\n * @htmlAttribute {function(ol.Feature)} ngeo-routing-feature-on-change Event fired when feature changes.\n * @ngdoc directive\n * @ngname ngeoRoutingFeature\n */\nexports.component_ = {\n  controller: exports.Controller,\n  bindings: {\n    'map': '<ngeoRoutingFeatureMap',\n    'feature': '=ngeoRoutingFeatureFeature',\n    'fillColor': '<?ngeoRoutingFeatureFillColor',\n    'strokeColor': '<?ngeoRoutingFeatureStrokeColor',\n    'onChange': '=?ngeoRoutingFeatureOnChange'\n  },\n  templateUrl: ngeoRoutingFeatureTemplateUrl\n};\n\nexports.module.component('ngeoRoutingFeature', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.routing.RoutingComponent\n */\nconst exports = {};\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoRoutingNominatimService from 'ngeo/routing/NominatimService.js';\nimport ngeoRoutingRoutingService from 'ngeo/routing/RoutingService.js';\nimport ngeoRoutingRoutingFeatureComponent from 'ngeo/routing/RoutingFeatureComponent.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport * as olProj from 'ol/proj.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport 'font-awesome/css/font-awesome.css';\n\nexports.module = angular.module('ngeoRoutingComponent', [\n  ngeoMiscDebounce.name,\n  ngeoMiscFilters.name,\n  ngeoRoutingNominatimService.module.name,\n  ngeoRoutingRoutingService.module.name,\n  ngeoRoutingRoutingFeatureComponent.module.name\n]);\n\n\nexports.module.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/routing/routing', require('./routing.html'));\n});\n\n\nexports.module.value('ngeoRoutingTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoRoutingTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/routing/routing';\n  }\n);\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoRoutingTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoRoutingTemplateUrl($attrs, ngeoRoutingTemplateUrl) {\n  return ngeoRoutingTemplateUrl($attrs);\n}\n\n\n/**\n * The controller for the routing directive.\n * @param {angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Scope.\n * @param {!ngeo.routing.RoutingService} ngeoRoutingService service for OSRM routing\n * @param {!ngeo.routing.NominatimService} ngeoNominatimService service for Nominatim\n * @param {!angular.$q} $q Angular q service\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoRoutingController\n */\nexports.Controller = function($injector, $scope, ngeoRoutingService, ngeoNominatimService, $q, ngeoDebounce) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {ngeo.routing.RoutingService}\n   * @private\n   */\n  this.ngeoRoutingService_ = ngeoRoutingService;\n\n  /**\n   * @type {ngeo.routing.NominatimService}\n   * @private\n   */\n  this.ngeoNominatimService_ = ngeoNominatimService;\n\n  /**\n   * @type {ngeox.RoutingOptions}\n   * @private\n   */\n  this.routingOptions_ = $injector.has('ngeoRoutingOptions') ? $injector.get('ngeoRoutingOptions') : {};\n\n  /**\n   * Available routing profiles.\n   * Example: [\n   *            {\n   *              label: 'Car', // used as label in the UI\n   *              profile: 'routed-car' // used as part of the query\n   *            }\n   *          ]\n   * @type {Array<ngeox.RoutingProfile>}\n   * @export\n   */\n  this.routingProfiles = this.routingOptions_.profiles || [];\n\n  /**\n   * @type {?ngeox.RoutingProfile}\n   * @export\n   */\n  this.selectedRoutingProfile = this.routingProfiles.length > 0 ? this.routingProfiles[0] : null;\n\n  $scope.$watch(\n    () => this.selectedRoutingProfile,\n    this.calculateRoute.bind(this)\n  );\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.errorMessage = '';\n\n  /**\n   * @type {ol.Feature}\n   * @export\n   */\n  this.startFeature_ = null;\n\n  /**\n   * @type {ol.Feature}\n   * @export\n   */\n  this.targetFeature_ = null;\n\n  /**\n   * @type {Array.<ngeox.RoutingVia>}\n   * @export\n   */\n  this.viaArray = [];\n\n  /**\n   * @type {Object<string, string>}\n   * @export\n   */\n  this.colors = {\n    'start.fill': '#6BE62E',\n    'start.stroke': '#4CB01E',\n    'destination.fill': '#FF3E13',\n    'destination.stroke': '#CD3412',\n    'via.fill': '#767676',\n    'via.stroke': '#000000'\n  };\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.routeSource_ = new olSourceVector({\n    features: []\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.routeLayer_ = new olLayerVector({\n    source: this.routeSource_,\n    style: new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(16, 112, 29, 0.6)'\n      }),\n      stroke: new olStyleStroke({\n        color: 'rgba(16, 112, 29, 0.6)',\n        width: 5\n      })\n    })\n  });\n\n  /**\n   * Distance of route in meters\n   * @type {number}\n   * @export\n   */\n  this.routeDistance = 0;\n\n  /**\n   * Duration of route in minutes.\n   * @type {?number}\n   * @export\n   */\n  this.routeDuration = null;\n\n  /**\n   * @type {RegExp}\n   * @private\n   */\n  this.regexIsFormattedCoord = /\\d+\\.\\d+\\/\\d+\\.\\d+/;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @private\n   */\n  this.draw_ = null;\n\n  const debounceDelay = 200; // in milliseconds\n\n  /**\n   * Debounced because in some cases (reverse route) multiple changes are done\n   * at once and spam this function.\n   * @export\n   * @type {function()}\n   */\n  this.handleChange = /** @type {function()} */\n          (ngeoDebounce(\n            /** @type {function(?)} */ (this.calculateRoute.bind(this)),\n            debounceDelay,\n            true));\n};\n\n/**\n * Init the controller\n */\nexports.Controller.prototype.$onInit = function() {\n  this.map.addLayer(this.routeLayer_);\n};\n\n/**\n * Clears start, end and vias. Removes features from map.\n * @export\n */\nexports.Controller.prototype.clearRoute = function() {\n  this.startFeature_ = null;\n  this.targetFeature_ = null;\n  this.viaArray = [];\n  this.routeDistance = 0;\n  this.routeDuration = null;\n  this.routeSource_.clear();\n  this.errorMessage = '';\n};\n\n/**\n * Converts feature point into LonLat coordinate.\n * @param {ol.Feature} point Feature point to convert\n * @return {ol.Coordinate} LonLat coordinate\n * @private\n */\nexports.Controller.prototype.getLonLatFromPoint_ = function(point) {\n  const geometry = /** @type {ol.geom.Point} */ (point.getGeometry());\n  const coords = geometry.getCoordinates();\n  const projection = this.map.getView().getProjection();\n  return olProj.toLonLat(coords, projection);\n};\n\n/**\n * Flip start and target and re-calculate route.\n * @export\n */\nexports.Controller.prototype.reverseRoute = function() {\n  // swap start and target\n  const tmpFeature = this.startFeature_;\n  this.startFeature_ = this.targetFeature_;\n  this.targetFeature_ = tmpFeature;\n\n  // reverse vias\n  this.viaArray = this.viaArray.reverse();\n\n  // recalculation is done by the debounced handleChange\n};\n\n/**\n * @param {Object} route Routes of OSRM response\n * @returns {Array<ol.Feature>} parsed route features\n * @private\n */\nexports.Controller.prototype.parseRoute_ = function(route) {\n  let parsedRoutes = [];\n  const format = new olFormatGeoJSON();\n  const formatConfig = {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.map.getView().getProjection()\n  };\n  // if there are is useful \"legs\" data, parse this\n  if (route.legs) {\n    parsedRoutes = route.legs.map(leg => leg.steps.map(step => new olFeature({geometry: format.readGeometry(step.geometry, formatConfig)})));\n    // flatten\n    parsedRoutes = [].concat(...parsedRoutes);\n  } else if (route.geometry) {\n  // otherwise parse (overview) geometry\n    parsedRoutes.push(new olFeature({geometry: format.readGeometry(route.geometry, formatConfig)}));\n  }\n  return parsedRoutes;\n};\n\n/**\n * @export\n */\nexports.Controller.prototype.calculateRoute = function() {\n  if (this.startFeature_ && this.targetFeature_) {\n    // remove rendered routes\n    this.routeSource_.clear();\n\n    const coordFrom = this.getLonLatFromPoint_(this.startFeature_);\n    const coordTo = this.getLonLatFromPoint_(this.targetFeature_);\n    const vias = this.viaArray.filter(via => via.feature !== null).map(via => this.getLonLatFromPoint_(via.feature));\n    const route =  [coordFrom].concat(vias, [coordTo]);\n\n    const onSuccess_ = (function(resp) {\n      const features = this.parseRoute_(resp.data.routes[0]);\n      if (features.length === 0) {\n        console.log('No route or not supported format.');\n        return;\n      }\n      this.routeSource_.addFeatures(features);\n\n      // recenter map on route\n      this.map.getView().fit(this.routeSource_.getExtent());\n\n      this.routeDistance = parseInt(resp.data.routes[0].distance, 10);\n      this.routeDuration = resp.data.routes[0].duration;\n\n      // get first and last coordinate of route\n      const startRoute = /** @type{ol.geom.LineString} */(features[0].getGeometry()).getCoordinateAt(0);\n      const endRoute = /** @type{ol.geom.LineString} */(features[features.length - 1].getGeometry()).getCoordinateAt(1);\n\n      // build geometries to connect route to start and end point of query\n      const startToRoute = [/** @type {ol.geom.Point} */(this.startFeature_.getGeometry()).getCoordinates(), startRoute];\n      const routeToEnd = [endRoute, /** @type {ol.geom.Point} */(this.targetFeature_.getGeometry()).getCoordinates()];\n      const routeConnections = [\n        new olFeature(new olGeomLineString(startToRoute)),\n        new olFeature(new olGeomLineString(routeToEnd))\n      ];\n\n      // add them to the source\n      this.routeSource_.addFeatures(routeConnections);\n    }).bind(this);\n\n    const onError_ = (function(resp) {\n      this.errorMessage = 'Error: routing server not responding.';\n      console.log(resp);\n    }).bind(this);\n\n    const options = {};\n    options['steps'] = true;\n    options['overview'] = false;\n    options['geometries'] = 'geojson';\n\n    const config = {};\n    config['options'] = options;\n\n    if (this.selectedRoutingProfile) {\n      config['instance'] = this.selectedRoutingProfile['profile'];\n    }\n\n    this.$q_.when(this.ngeoRoutingService_.getRoute(route, config))\n      .then(onSuccess_.bind(this), onError_.bind(this));\n  }\n};\n\n/**\n * @export\n */\nexports.Controller.prototype.addVia = function() {\n  this.viaArray.push(/** @type{ngeox.RoutingVia} */({\n    feature: null,\n    onSelect: null\n  }));\n};\n\n/**\n * @param {number} index Array index.\n * @export\n */\nexports.Controller.prototype.deleteVia = function(index) {\n  if (this.viaArray.length > index) {\n    this.viaArray.splice(index, 1);\n    this.calculateRoute();\n  }\n};\n\n\nexports.module.component('ngeoRouting', {\n  controller: exports.Controller,\n  bindings: {\n    'map': '<ngeoRoutingMap'\n  },\n  templateUrl: ngeoRoutingTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.routing.module\n */\nimport ngeoRoutingRoutingComponent from 'ngeo/routing/RoutingComponent.js';\n\nimport './routing.less';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoRoutingModule', [\n  ngeoRoutingRoutingComponent.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.EPSG2056\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\nimport somerc from 'ngeo/proj/somerc.js';\nimport proj4 from 'proj4';\n\nconst epsg2056def = [\n  `+proj=${somerc}`,\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=2600000',\n  '+y_0=1200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg2056extent = [2420000, 1030000, 2900000, 1350000];\n\nproj4.defs('EPSG:2056', epsg2056def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:2056').setExtent(epsg2056extent);\n\nconst exports = 'EPSG:2056';\n\n\nexport default exports;\n","/**\n * @module app.desktop_alt.Controller\n */\n/**\n * Application entry point.\n *\n * This file includes `goog.require`'s for all the components/directives used\n * by the HTML page and the controller to provide the configuration.\n */\n\nimport gmfControllersAbstractDesktopController from 'gmf/controllers/AbstractDesktopController.js';\nimport './less/main.less';\nimport appBase from '../appmodule.js';\nimport gmfImportModule from 'gmf/import/module.js';\nimport ngeoGooglestreetviewModule from 'ngeo/googlestreetview/module.js';\nimport ngeoRoutingModule from 'ngeo/routing/module.js';\nimport ngeoProjEPSG2056 from 'ngeo/proj/EPSG2056.js';\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\nimport * as olBase from 'ol/index.js';\nimport Raven from 'raven-js/src/raven.js';\nimport RavenPluginsAngular from 'raven-js/plugins/angular.js';\n\nif (!window.requestAnimationFrame) {\n  alert('Your browser is not supported, please update it or use another one. You will be redirected.\\n\\n'\n    + 'Votre navigateur n\\'est pas supporté, veuillez le mettre à jour ou en utiliser un autre. Vous allez être redirigé.\\n\\n'\n    + 'Ihr Browser wird nicht unterstützt, bitte aktualisieren Sie ihn oder verwenden Sie einen anderen. Sie werden weitergeleitet.');\n  window.location = 'http://geomapfish.org/';\n}\n\n/**\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeo.misc.File} ngeoFile The file service.\n * @param {gettext} gettext The gettext service\n * @param {angular.$q} $q Angular $q.\n * @constructor\n * @extends {gmf.controllers.AbstractDesktopController}\n * @ngInject\n * @export\n */\nconst exports = function($scope, $injector, ngeoFile, gettext, $q) {\n  gmfControllersAbstractDesktopController.call(this, {\n    srid: 21781,\n    mapViewConfig: {\n      center: [632464, 185457],\n      zoom: 3,\n      resolutions: [250, 100, 50, 20, 10, 5, 2, 1, 0.5, 0.25, 0.1, 0.05]\n    }\n  }, $scope, $injector);\n\n  /**\n   * @type {Array.<string>}\n   * @export\n   */\n  this.searchCoordinatesProjections = [ngeoProjEPSG21781, ngeoProjEPSG2056, 'EPSG:4326'];\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.searchDelay = 500;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showInfobar = true;\n\n  /**\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scaleSelectorValues = [250000, 100000, 50000, 20000, 10000, 5000, 2000, 1000, 500, 250, 100, 50];\n\n  /**\n   * @type {Array.<string>}\n   * @export\n   */\n  this.elevationLayers = ['srtm'];\n\n  /**\n   * @type {Object.<string, gmfx.ProfileLineConfiguration>}\n   * @export\n   */\n  this.profileLinesconfiguration = {\n    'srtm': {}\n  };\n\n  /**\n   * @type {Array.<gmfx.MousePositionProjection>}\n   * @export\n   */\n  this.mousePositionProjections = [{\n    code: 'EPSG:2056',\n    label: 'CH1903+ / LV95',\n    filter: 'ngeoNumberCoordinates::{x}, {y} m'\n  }, {\n    code: 'EPSG:21781',\n    label: 'CH1903 / LV03',\n    filter: 'ngeoNumberCoordinates::{x}, {y} m'\n  }, {\n    code: 'EPSG:4326',\n    label: 'WGS84',\n    filter: 'ngeoDMSCoordinates:2'\n  }];\n\n  /**\n   * @type {gmfx.GridMergeTabs}\n   * @export\n   */\n  this.gridMergeTabs = {\n    'OSM_time_merged': ['osm_time', 'osm_time2'],\n    'transport (merged)': ['fuel', 'parking'],\n    'Learning [merged]': ['information', 'bus_stop']\n  };\n\n  // Allow angular-gettext-tools to collect the strings to translate\n  /** @type {angularGettext.Catalog} */\n  const gettextCatalog = $injector.get('gettextCatalog');\n  gettextCatalog.getString('OSM_time_merged');\n  gettextCatalog.getString('OSM_time (merged)');\n  gettextCatalog.getString('Learning [merged]');\n  gettextCatalog.getString('Add a theme');\n  gettextCatalog.getString('Add a sub theme');\n  gettextCatalog.getString('Add a layer');\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.bgOpacityOptions = 'Test aus Olten';\n\n  if ($injector.has('sentryUrl')) {\n    const options = $injector.has('sentryOptions') ? $injector.get('sentryOptions') : undefined;\n    const raven = new Raven();\n    raven.config($injector.get('sentryUrl'), options)\n      .addPlugin(RavenPluginsAngular)\n      .install();\n  }\n};\n\nolBase.inherits(exports, gmfControllersAbstractDesktopController);\n\n\n/**\n * @param {jQuery.Event} event keydown event.\n * @export\n */\nexports.prototype.onKeydown = function(event) {\n  if (event.ctrlKey && event.key === 'p') {\n    this.printPanelActive = true;\n    event.preventDefault();\n  }\n};\n\n\nexports.module = angular.module('Appdesktop_alt', [\n  appBase.module.name,\n  gmfControllersAbstractDesktopController.module.name,\n  gmfImportModule.name,\n  ngeoRoutingModule.name,\n  ngeoGooglestreetviewModule.name,\n]);\n\nexports.module.controller('AlternativeDesktopController', exports);\n\nexport default exports;\n","module.exports = \"<div class=ngeo-routing> <div class=\\\"ngeo-routing-start form-group\\\"> <ngeo-routing-feature ngeo-routing-feature-map=$ctrl.map ngeo-routing-feature-feature=$ctrl.startFeature_ ngeo-routing-feature-fill-color=\\\"$ctrl.colors['start.fill']\\\" ngeo-routing-feature-stroke-color=\\\"$ctrl.colors['start.stroke']\\\" ngeo-routing-feature-on-change=$ctrl.handleChange> </ngeo-routing-feature> </div> <div class=\\\"ngeo-routing-vias form-group\\\" ng-repeat=\\\"(index, via) in $ctrl.viaArray\\\"> <div class=form-inline> <div class=form-group> <ngeo-routing-feature ngeo-routing-feature-map=$ctrl.map ngeo-routing-feature-feature=via.feature ngeo-routing-feature-fill-color=\\\"$ctrl.colors['via.fill']\\\" ngeo-routing-feature-stroke-color=\\\"$ctrl.colors['via.stroke']\\\" ngeo-routing-feature-on-change=$ctrl.handleChange> </ngeo-routing-feature> </div> <button type=button class=\\\"btn btn-primary delete-via\\\" ng-click=$ctrl.deleteVia(index)> <span class=\\\"fa fa-trash-o\\\"></span> </button> </div> </div> <div class=\\\"ngeo-routing-destination form-group\\\"> <ngeo-routing-feature ngeo-routing-feature-map=$ctrl.map ngeo-routing-feature-feature=$ctrl.targetFeature_ ngeo-routing-feature-fill-color=\\\"$ctrl.colors['destination.fill']\\\" ngeo-routing-feature-stroke-color=\\\"$ctrl.colors['destination.stroke']\\\" ngeo-routing-feature-on-change=$ctrl.handleChange> </ngeo-routing-feature> </div> <div class=\\\"form-group pull-right\\\"> <button type=button class=\\\"btn btn-primary\\\" ng-click=$ctrl.clearRoute()> <span class=\\\"fa fa-trash-o\\\"></span> <span translate>Clear</span> </button> <button type=button class=\\\"btn btn-primary\\\" ng-click=$ctrl.reverseRoute()> <span class=\\\"fa fa-exchange\\\"></span> <span translate>Reverse</span> </button> <button type=button class=\\\"btn btn-primary\\\" ng-click=$ctrl.addVia()> <span class=\\\"fa fa-plus\\\"></span> <span translate>Add via</span> </button> </div> <div class=clearfix></div> <div class=form-horizontal ng-if=\\\"$ctrl.routingProfiles.length > 1\\\"> <div class=form-group> <label class=\\\"control-label col-md-4\\\" translate>Profile</label> <div class=col-md-8> <select class=form-control ng-model=$ctrl.selectedRoutingProfile> <option ng-repeat=\\\"profile in $ctrl.routingProfiles\\\" ng-value=profile>{{profile.label}}</option> </select> </div> </div> </div> <div class=\\\"ngeo-routing-error form-group clearfix\\\" ng-hide=\\\"$ctrl.errorMessage === ''\\\"> {{$ctrl.errorMessage}} </div> <div class=clearfix></div> <div class=form-horizontal ng-hide=\\\"$ctrl.routeDuration === null && $ctrl.routeDistance <= 0\\\"> <div class=row> <div class=col-md-12> <strong translate>Route statistics</strong> </div> </div> <div class=row ng-hide=\\\"$ctrl.routeDuration === null\\\"> <div class=\\\"col-md-4 text-right\\\" translate> Duration </div> <div class=col-md-8> {{$ctrl.routeDuration | ngeoDuration}} </div> </div> <div class=row ng-hide=\\\"$ctrl.routeDistance <= 0\\\"> <div class=\\\"col-md-4 text-right\\\" translate> Distance </div> <div class=col-md-8> {{$ctrl.routeDistance | ngeoUnitPrefix:'m'}} </div> </div> </div> </div> \";","module.exports = \"<div class=ngeo-routing-feature> <div class=input-group> <ngeo-nominatim-input ngeo-nominatim-input-value=$ctrl.featureLabel ngeo-nominatim-input-placeholder=\\\"{{'Search...' | translate}}\\\" ngeo-nominatim-input-on-select=$ctrl.onSelect> </ngeo-nominatim-input> <div class=\\\"input-group-addon btn\\\" ng-click=$ctrl.set()> <span class=\\\"fa fa-map-marker\\\"></span> </div> </div> </div> \";","module.exports = \"<div class=ngeo-nominatim-input> <input type=text class=form-control placeholder={{$ctrl.placeholder}} ng-model=$ctrl.inputValue ngeo-search=$ctrl.options ngeo-search-datasets=$ctrl.datasets ngeo-search-listeners=$ctrl.listeners> </div> \";","module.exports = \"<div class=ngeo-googlestreetview-instructions ng-if=\\\"$ctrl.location === null\\\" translate> Click on a road on the map to start StreetView. </div> <div class=ngeo-googlestreetview-nodata ng-if=$ctrl.noDataAtLocation translate> Street View data not found for this location. </div> \";","module.exports = \"<div class=form-group> <select class=form-control ng-model=$ctrl.mode ng-options=\\\"mode | translate for mode in $ctrl.modes\\\"> </select> </div> <div> <form name=idsl_form novalidate ng-show=\\\"$ctrl.mode === 'Local'\\\"> <div class=form-group> <div class=\\\"input-group input-group-sm\\\"> <input name=file type=file required/> <input class=form-control placeholder=\\\"{{'No file' | translate}}\\\" readonly=readonly type=text value={{$ctrl.fileNameAndSize}} ng-click=$ctrl.browse() /> <span class=input-group-btn> <button class=\\\"btn btn-default\\\" type=button ng-click=$ctrl.browse() translate>Browse</button> </span> </div> </div> <div class=form-group> <button class=\\\"btn btn-sm btn-default form-control\\\" title=\\\"{{'Load a file from local' | translate}}\\\" type=submit ng-click=\\\"idsl_form.$valid && $ctrl.load()\\\" ng-disabled=\\\"$ctrl.file === undefined\\\"> <span>{{'Load local file' | translate}}</span> </button> </div> </form> <form name=idsc_form novalidate ng-show=\\\"$ctrl.mode === 'Online'\\\"> <div class=\\\"form-group gmf-importdatasource-url-form-group\\\"> <input autocomplete=off class=form-control name=url placeholder=\\\"{{'Choose or enter online resource URL' | translate}}\\\" required type=url ng-disabled=$ctrl.pending ng-model=$ctrl.url /> </div> <div class=form-group> <button class=\\\"btn btn-sm btn-default form-control gmf-importdatasource-connect-btn\\\" title=\\\"{{'Connect to online resource' | translate}}\\\" type=submit ng-click=\\\"idsc_form.$valid && $ctrl.connect()\\\" ng-disabled=\\\"idsc_form.$invalid || $ctrl.pending\\\"> <span ng-if=$ctrl.pending>{{'Connecting, please wait...' | translate}}</span> <span ng-if=\\\"!$ctrl.pending && $ctrl.hasError\\\">{{'Failed to connect' | translate}}</span> <span ng-if=\\\"!$ctrl.pending && !$ctrl.hasError\\\">{{'Connect' | translate}}</span> </button> </div> </form> </div> <div class=gmf-importdatasource-layers ng-if=\\\"$ctrl.wmsCapabilities !== null || $ctrl.wmtsCapabilities !== null\\\"> <hr/> <gmf-wmscapabilitylayertreenode capabilities=::$ctrl.wmsCapabilities layer=::$ctrl.wmsCapabilities.Capability.Layer url=::$ctrl.url ng-if=\\\"$ctrl.wmsCapabilities !== null\\\"> </gmf-wmscapabilitylayertreenode> <gmf-wmtscapabilitylayertree capabilities=::$ctrl.wmtsCapabilities layers=::$ctrl.wmtsCapabilities.Contents.Layer url=::$ctrl.url ng-if=\\\"$ctrl.wmtsCapabilities !== null\\\"> </gmf-wmtscapabilitylayertree> </div> \";","module.exports = \"<ul> <li ng-repeat=\\\"layer in ::$ctrl.layers\\\"> <div class=gmf-wmscapabilitylayertreenode-header> <span class=gmf-wmscapabilitylayertreenode-popover-container ngeo-popover ngeo-popover-dismiss=.content ngeo-popover-placement=left> <span ngeo-popover-anchor class=\\\"fa fa-cog gmf-wmscapabilitylayertreenode-actions\\\"> </span> <div class=gmf-wmscapabilitylayertreenode-popover-content ngeo-popover-content> <ul> <li> <i class=\\\"fa fa-plus fa-fw\\\"></i> <a href=\\\"\\\" ng-click=\\\"$ctrl.createAndAddDataSource(layer); popoverCtrl.dismissPopover()\\\"> <span translate>Add layer</span> </a> </li> <li ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a aria-expanded=false data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-click=popoverCtrl.dismissPopover()> <span translate>Open/Close description</span> </a> </li> </ul> </div> </span> <a class=\\\"fa fa-circle-thin gmf-wmscapabilitylayertreenode-no-icon fa-fw\\\"></a> <span class=gmf-wmscapabilitylayertreenode-title>{{ ::layer.Title }}</span> <div class=\\\"collapse gmf-wmscapabilitylayertreenode-description\\\" id=gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <a aria-expanded=false class=gmf-wmscapabilitylayertreenode-description-toggle data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}}> <span translate>Hide description</span> </a> <span class=gmf-wmscapabilitylayertreenode-description-content>{{ ::layer.Abstract }}</span> </div> </div> </li> </ul> \";","module.exports = \"<ul> <li ng-repeat=\\\"layer in ::$ctrl.layer.Layer\\\"> <div class=gmf-wmscapabilitylayertreenode-header> <span class=gmf-wmscapabilitylayertreenode-popover-container ng-if=\\\"::(layer.Name !== undefined || layer.Abstract !== undefined)\\\" ngeo-popover ngeo-popover-dismiss=.content ngeo-popover-placement=left> <span ngeo-popover-anchor class=\\\"fa fa-cog gmf-wmscapabilitylayertreenode-actions\\\"> </span> <div class=gmf-wmscapabilitylayertreenode-popover-content ngeo-popover-content> <ul> <li ng-if=\\\"::(layer.Name !== undefined)\\\"> <i class=\\\"fa fa-plus fa-fw\\\"></i> <a href=\\\"\\\" ng-click=\\\"$ctrl.createAndAddDataSource(layer); popoverCtrl.dismissPopover()\\\"> <span translate>Add layer</span> </a> </li> <li ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a aria-expanded=false data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-click=popoverCtrl.dismissPopover()> <span translate>Open/Close description</span> </a> </li> </ul> </div> </span> <a aria-expanded=false class=\\\"fa gmf-wmscapabilitylayertreenode-expand-node fa-fw\\\" data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-children-{{::$ctrl.getUid(layer)}} ng-if=\\\"::(layer.Layer !== undefined && layer.Layer.length)\\\"></a> <span ng-if=\\\"::(layer.Layer !== undefined && layer.Layer.length)\\\" class=\\\"fa fa-fw gmf-wmscapabilitylayertreenode-group\\\"> </span> <a class=\\\"fa fa-circle-thin gmf-wmscapabilitylayertreenode-no-icon fa-fw\\\" ng-if=\\\"::(layer.Layer === undefined || layer.Layer.length === 0)\\\"></a> <span class=gmf-wmscapabilitylayertreenode-title>{{ ::layer.Title }}</span> <div class=\\\"collapse gmf-wmscapabilitylayertreenode-description\\\" id=gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <a aria-expanded=false class=gmf-wmscapabilitylayertreenode-description-toggle data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}}> <span translate>Hide description</span> </a> <span class=gmf-wmscapabilitylayertreenode-description-content>{{ ::layer.Abstract }}</span> </div> </div> <gmf-wmscapabilitylayertreenode class=collapse id=gmf-wmscapabilitylayertreenode-children-{{::$ctrl.getUid(layer)}} capabilities=::$ctrl.capabilities layer=::layer ng-if=\\\"::(layer.Layer !== undefined)\\\"> </gmf-wmscapabilitylayertreenode> </li> </ul> \";","module.exports = \"<div class=\\\"text-center btn-group dropup\\\" gmf-elevation gmf-elevation-active=ctrl.active gmf-elevation-elevation=ctrl.elevationValue gmf-elevation-loading=ctrl.elevationLoading gmf-elevation-layer=ctrl.selectedElevationLayer gmf-elevation-map=::ctrl.map> <a type=button class=\\\"btn btn-default\\\" aria-expanded=false ng-class=\\\"::{'dropdown-toggle': ctrl.layers.length > 1}\\\" ng-attr-data-toggle=\\\"{{::(ctrl.layers.length > 1) ? 'dropdown' : ''}}\\\"> <span class=gmf-elevationwidget-value> {{ctrl.elevationValue | number}}<span ng-show=ctrl.elevationValue> m</span> <span ng-show=ctrl.elevationLoading class=\\\"fa fa-spinner\\\"></span> <span ng-show=\\\"!ctrl.elevationValue && !ctrl.elevationLoading\\\" translate>Elevation…</span> </span><span class=caret ng-if=\\\"::ctrl.layers.length > 1\\\"></span> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu ng-if=\\\"::ctrl.layers.length > 1\\\"> <li class=dropdown-header translate>Elevation data sources</li> <li ng-repeat=\\\"elevationItem in ::ctrl.layers\\\"> <a href ng-click=\\\"ctrl.selectedElevationLayer = elevationItem\\\"> <span class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedElevationLayer === elevationItem}\\\"></span> {{::elevationItem | translate}} </a> </li> </ul> </div> \";","module.exports = \"<div class=\\\"gmf-profile-container panel\\\" ng-show=ctrl.active> <div class=ngeo-profile ng-show=!ctrl.isErrored ngeo-profile=ctrl.profileData ngeo-profile-highlight=ctrl.profileHighlight ngeo-profile-options=::ctrl.profileOptions> </div> <ul class=gmf-profile-legend ng-show=!ctrl.isErrored> <li ng-repeat=\\\"name in ::ctrl.getLayersNames()\\\"> <i class=\\\"fa fa-minus\\\" style=color:{};></i> &nbsp;{{name | translate}}&nbsp;{{ctrl.currentPoint.elevations[name]}}&nbsp;{{ctrl.currentPoint.yUnits}} </li> </ul> <div class=\\\"gmf-profile-export btn-group dropup\\\" ng-show=!ctrl.isErrored> <a class=dropdown-toggle href=\\\"\\\" ng-show=\\\"ctrl.profileData.length !== 0\\\" data-toggle=dropdown aria-expanded=false> {{'Export' | translate}}&nbsp;<i class=\\\"fa fa-caret-up\\\"></i> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li> <a href=\\\"\\\" ng-click=::ctrl.downloadCsv()> <i class=\\\"fa fa-table\\\"></i>&nbsp;{{'Download CSV' | translate}}</a> </li> </ul> </div> <div class=gmf-profile-error ng-show=ctrl.isErrored> <p>{{'The profile service does not respond, please try later.' | translate}}</p> </div> <div class=close ng-click=\\\"ctrl.line = null\\\">&times;</div> </div> \";","module.exports = \"<div class=gmf-print> <div ng-show=\\\"$ctrl.isState('CAPABILITIES_NOT_LOADED') !== true && $ctrl.isState('ERROR_ON_GETCAPABILITIES') !== true\\\"> <div class=\\\"gmf-print-layout-selector form-horizontal\\\"><ng-transclude/></div> <div ng-repeat=\\\"attribute in $ctrl.layoutInfo.simpleAttributes\\\" class=\\\"gmf-print-layoutinfo form-group\\\"> <div ng-if=\\\"$ctrl.hiddenAttributeNames === undefined || $ctrl.hiddenAttributeNames.indexOf(attribute.name) < 0\\\"> <input ng-if=\\\"attribute.type === 'number'\\\" ng-model=attribute.value class=form-control type=number ng-attr-placeholder=\\\"{{attribute.name | translate}}\\\"> <input ng-if=\\\"attribute.type === 'text'\\\" ng-model=attribute.value class=form-control type=text ng-attr-placeholder=\\\"{{attribute.name | translate}}\\\"> <textarea ng-if=\\\"attribute.type === 'textarea'\\\" ng-model=attribute.value class=form-control row=3 ng-attr-placeholder=\\\"{{attribute.name | translate}}\\\"></textarea> <div ng-if=\\\"attribute.type === 'checkbox'\\\" class=checkbox> <label> <input ng-model=attribute.value type=checkbox> <span>{{attribute.name | translate}}</span> </label> </div> </div> </div> <div ng-show=\\\"$ctrl.layoutInfo.legend !== undefined\\\" class=\\\"gmf-print-legend checkbox\\\"> <label> <input ng-model=$ctrl.layoutInfo.legend type=checkbox> <span translate>Legend</span> </label> </div> <div class=\\\"gmf-print-layout-selector form-horizontal\\\"> <div ng-show=\\\"$ctrl.layoutInfo.layouts.length !== 1\\\" class=form-group> <label class=\\\"control-label col-md-5\\\" translate>Layout</label> <div class=col-md-7> <div class=\\\"btn-group btn-block\\\"> <button type=button class=\\\"btn btn-default form-control\\\" data-toggle=dropdown> <span>{{$ctrl.layoutInfo.layout | translate}}&nbsp;</span> <i class=\\\"fa fa-caret-down\\\"></i> </button> <ul class=\\\"dropdown-menu dropdown-menu-right btn-block\\\" role=menu> <li ng-repeat=\\\"layout in $ctrl.layoutInfo.layouts\\\"> <a ng-click=$ctrl.setLayout(layout) href=\\\"\\\">{{layout | translate}}</a> </li> </ul> </div> </div> </div> <div ng-show=\\\"$ctrl.layoutInfo.scales.length !== 1\\\" class=\\\"gmf-print-scale-selector form-group\\\"> <label class=\\\"control-label col-md-5\\\" translate>Scale</label> <div class=col-md-7> <div class=\\\"btn-group btn-block\\\"> <button type=button class=\\\"btn btn-default form-control\\\" data-toggle=dropdown aria-expanded=false> <span>{{$ctrl.layoutInfo.scale | ngeoScalify}}&nbsp;</span> <i class=\\\"fa fa-caret-down\\\"></i> </button> <ul class=\\\"dropdown-menu dropdown-menu-right btn-block\\\" role=menu> <li ng-repeat=\\\"scale in $ctrl.layoutInfo.scales\\\"> <a ng-click=$ctrl.getSetScale(scale) href=\\\"\\\">{{scale | ngeoScalify}}</a> </li> <span ng-if=$ctrl.scaleInput> <li class=dropdown-header translate>Manual entry</li> <li> <div class=gmf-print-custom-scale> 1 : <input class=gmf-print-custom-scale-input type=number min=1 ng-model=$ctrl.getSetScale ng-model-options=\\\"{getterSetter: true}\\\"> </div> </li> </span> </ul> </div> </div> </div> <div ng-show=\\\"$ctrl.layoutInfo.dpis.length !== 1\\\" class=\\\"gmf-print-dpi-selector form-group\\\"> <label class=\\\"control-label col-md-3\\\" translate>DPI</label> <div class=col-md-5> <div class=\\\"btn-group btn-block\\\"> <button type=button class=\\\"btn btn-default form-control\\\" data-toggle=dropdown aria-expanded=false> <span>{{$ctrl.layoutInfo.dpi}}&nbsp;</span> <i class=\\\"fa fa-caret-down\\\"></i> </button> <ul class=\\\"dropdown-menu dropdown-menu-right btn-block\\\" role=menu> <li ng-repeat=\\\"dpi in $ctrl.layoutInfo.dpis\\\"> <a href=\\\"\\\" ng-click=$ctrl.setDpi(dpi)>{{dpi}}</a> </li> </ul> </div> </div> </div> <div class=\\\"gmf-print-rotation-selector form-group\\\"> <label class=\\\"control-label col-md-3\\\" translate>Rotation</label> <div class=col-md-5> <input class=\\\"form-control gmf-print-rotation-input\\\" type=range value=0 min=-180 max=180 data-toggle=tooltip title=\\\"{{'You can also use Alt+Shift on the map' | translate}}\\\"> </div> <div class=col-md-4> <input class=\\\"form-control gmf-print-rotation-input\\\" type=number min=-180 max=180 value=0> </div> </div> </div> <div class=\\\"gmf-print-actions form-group pull-right\\\"> <span ng-show=\\\"$ctrl.isState('PRINTING')\\\"> <i class=\\\"fa fa-refresh fa-spin\\\"></i> </span> <a ng-show=\\\"$ctrl.isState('PRINTING')\\\" class=\\\"gmf-print-cancel btn btn-link\\\" href=\\\"\\\" ng-click=$ctrl.cancel() translate>Abort</a> <button ng-show=$ctrl.layoutInfo.formats.png class=\\\"gmf-print-image btn btn-primary\\\" ng-disabled=\\\"$ctrl.isState('PRINTING')\\\" ng-click=\\\"$ctrl.print('png')\\\" translate>Image</button> <button ng-show=$ctrl.layoutInfo.formats.pdf class=\\\"gmf-print-pdf btn btn-primary\\\" ng-disabled=\\\"$ctrl.isState('PRINTING')\\\" ng-click=\\\"$ctrl.print('pdf')\\\" translate>PDF</button> </div> <div ng-show=\\\"$ctrl.isState('ERROR_ON_REPORT')\\\" class=\\\"gmf-print-error-report form-group pull-left text-danger\\\"> <p>{{'Error during the print, please try again.' | translate}}</p> </div> </div> <div ng-show=\\\"$ctrl.isState('CAPABILITIES_NOT_LOADED')\\\" class=\\\"gmf-print-wait form-group pull-left\\\"> <p>{{'Connecting to the print server, please wait.' | translate}}</p> </div> <div ng-show=\\\"$ctrl.isState('ERROR_ON_GETCAPABILITIES')\\\" class=\\\"gmf-print-error-capabilities form-group pull-left text-danger\\\"> <p>{{'The print server is unavailable. Please, try later.' | translate}}</p> </div> </div> \";","module.exports = \"<div ng-switch=efsCtrl.selectedEditableTreeCtrl> <div ng-switch-when=null> <select class=form-control ng-model=efsCtrl.selectedEditableTreeCtrl ng-show=\\\"efsCtrl.editableTreeCtrls.length > 0\\\" ng-options=\\\"treeCtrl.node.name | translate for treeCtrl in efsCtrl.editableTreeCtrls\\\"> <option value=\\\"\\\" translate>-- Choose a layer --</option> </select> <span ng-show=\\\"efsCtrl.editableTreeCtrls.length == 0\\\" translate>No editable layer available!</span> </div> <div ng-switch-default> <div class=row> <div class=col-sm-12> <span translate>Currently editing: </span> <b>{{ efsCtrl.selectedEditableTreeCtrl.node.name | translate }}</b> <span class=\\\"fa fa-pencil\\\"></span> <br> <button ng-click=efsCtrl.stopEditing() class=\\\"btn btn-link btn-xs pull-right\\\"> <span class=\\\"fa fa-times\\\"></span> {{'Stop editing' | translate}} </button> </div> </div> <gmf-editfeature gmf-editfeature-dirty=efsCtrl.dirty gmf-editfeature-editabletreectrl=::efsCtrl.selectedEditableTreeCtrl gmf-editfeature-map=::efsCtrl.map gmf-editfeature-state=efsCtrl.state gmf-editfeature-tolerance=::efsCtrl.tolerance gmf-editfeature-vector=::efsCtrl.vectorLayer> </gmf-editfeature> </div> </div> \";","module.exports = \"<div> <div ng-switch=efCtrl.feature> <a ng-switch-when=null ng-if=efCtrl.geomType href ngeo-btn ngeo-createfeature ngeo-createfeature-active=efCtrl.createActive ngeo-createfeature-features=::efCtrl.features ngeo-createfeature-geom-type=::efCtrl.geomType ngeo-createfeature-map=::efCtrl.map class=\\\"btn btn-default\\\" ng-class=\\\"{active: efCtrl.createActive}\\\" ng-model=efCtrl.createActive> <span ng-switch=::efCtrl.geomType> <span ng-switch-when=Point> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> {{'Draw new point' | translate}} </span> <span ng-switch-when=MultiPoint> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> {{'Draw new point' | translate}} </span> <span ng-switch-when=LineString> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> {{'Draw new linestring' | translate}} </span> <span ng-switch-when=MultiLineString> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> {{'Draw new linestring' | translate}} </span> <span ng-switch-when=Polygon> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> {{'Draw new polygon' | translate}} </span> <span ng-switch-when=MultiPolygon> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> {{'Draw new polygon' | translate}} </span> </span> </a> <div ng-switch-default> <form novalidate name=form class=\\\"form gmf-editfeature-attributes-container\\\" ng-if=efCtrl.attributes> <div class=row> <div class=col-sm-12> <a class=close ng-click=efCtrl.cancel() ng-disabled=efCtrl.pending title=\\\"{{'Cancel modifications' | translate}}\\\" href>&times;</a> </div> </div> <ngeo-attributes ngeo-attributes-attributes=::efCtrl.attributes ngeo-attributes-disabled=efCtrl.pending ngeo-attributes-feature=::efCtrl.feature> </ngeo-attributes> <input type=submit value=\\\"{{'Save' | translate}}\\\" class=\\\"btn btn-sm btn-default gmf-editfeature-btn-save\\\" ng-click=\\\"form.$valid && efCtrl.save()\\\" ng-disabled=\\\"!efCtrl.dirty || efCtrl.pending\\\" title=\\\"{{'Save modifications' | translate}}\\\"> <a class=\\\"btn btn-sm btn-default gmf-editfeature-btn-cancel\\\" ng-click=efCtrl.confirmCancel() ng-disabled=efCtrl.pending title=\\\"{{'Cancel modifications' | translate}}\\\" href>{{'Cancel' | translate}}</a> <button class=\\\"btn btn-sm btn-link gmf-editfeature-btn-delete\\\" ng-click=efCtrl.delete() ng-disabled=efCtrl.pending ng-show=efCtrl.featureId title=\\\"{{'Delete this feature' | translate}}\\\"> <span class=\\\"fa fa-trash\\\"></span> {{'Delete' | translate}} </button> </form> </div> </div> <ngeo-modal ng-model=efCtrl.unsavedModificationsModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Unsaved modifications!' | translate}} </h4> </div> <div class=modal-body> {{'There are unsaved changes.' | translate}} </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal ng-click=efCtrl.continueWithoutSaving()> {{'Continue without saving' | translate}} </button> <button type=button class=\\\"btn btn-primary\\\" data-dismiss=modal> {{'Cancel' | translate}} </button> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal ng-click=efCtrl.submit()> {{'Save' | translate}} </button> </div> </ngeo-modal> <ngeo-modal ng-model=efCtrl.showServerError> <div class=modal-header>{{'Server error.' | translate}}</div> <div class=modal-body>{{$parent.efCtrl.serverErrorType}}<br> {{$parent.efCtrl.serverErrorMessage || ('Unexpected server error.' | translate)}}</div> </ngeo-modal> </div> \";","module.exports = \"<fieldset ng-disabled=attrCtrl.disabled> <div class=form-group ng-repeat=\\\"attribute in ::attrCtrl.attributes\\\"> <div ng-if=\\\"attribute.type !== 'geometry'\\\"> <label ng-if=\\\"::attribute.type !== 'boolean'\\\" class=control-label>{{ ::attribute.name | translate }} <span class=text-muted>{{::attribute.required ? \\\"*\\\" : \\\"\\\"}}</span> </label> <div ng-switch=::attribute.type> <div ng-switch-when=boolean class=checkbox> <label> <input name={{::attribute.name}} ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); type=checkbox>  <span> {{ ::attribute.name | translate }} <span class=text-muted>{{::attribute.required ? \\\"*\\\" : \\\"\\\"}}</span></span> </label> </div> <select name={{::attribute.name}} ng-required=attribute.required ng-switch-when=select ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control type=text> <option ng-repeat=\\\"attribute in ::attribute.choices\\\" value=\\\"{{ ::attribute }}\\\"> {{ ::attribute }} </option> </select> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-when=date ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ngeo-datetimepicker ngeo-datetimepicker-options=\\\"'{&quot;timepicker&quot;: false, &quot;format&quot;: &quot;' + attribute.format + '&quot;, &quot;allowBlank&quot;: true, &quot;todayButton&quot;: false, &quot;mask&quot;: &quot;' + attribute.mask + '&quot;}'\\\" class=form-control type=text>  <input name={{::attribute.name}} id=time ng-required=attribute.required ng-switch-when=time ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ngeo-datetimepicker ngeo-datetimepicker-options=\\\"'{&quot;datepicker&quot;: false, &quot;format&quot;: &quot;' + attribute.format + '&quot;, &quot;todayButton&quot;: false, &quot;mask&quot;: &quot;' + attribute.mask + '&quot;, &quot;defaultTime&quot;: &quot;00:00&quot;}'\\\" class=form-control type=text>  <input name={{::attribute.name}} ng-required=attribute.required ng-switch-when=datetime ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ngeo-datetimepicker ngeo-datetimepicker-options=\\\"'{&quot;scrollTime&quot;: false, &quot;format&quot;: &quot;' + attribute.format + '&quot;, &quot;allowBlank&quot;: true, &quot;todayButton&quot;: false, &quot;mask&quot;: &quot;' + attribute.mask + '&quot;, &quot;defaultTime&quot;: &quot;00:00&quot;}'\\\" class=form-control type=text>  <div ng-switch-when=number ng-switch=::attribute.numType> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-when=integer ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control step=1 type=number>  <input name={{::attribute.name}} ng-required=attribute.required ng-switch-default ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control type=number>  </div> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-default ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ng-maxlength=attribute.maxLength class=form-control type=text>  <div ng-show=\\\"attrCtrl.form.$submitted || attrCtrl.form[attribute.name].$touched\\\"> <p class=text-danger ng-show=attrCtrl.form[attribute.name].$error.required> {{'This field is required' | translate}} </p> </div> </div> </div> </div> </fieldset> \";","module.exports = \"<ngeo-drawfeature ngeo-btn-group class=btn-group ngeo-drawfeature-active=efCtrl.drawActive ngeo-drawfeature-map=efCtrl.map ngeo-drawfeature-showmeasure=efCtrl.showMeasure> <a data-toggle=tooltip title=\\\"{{'Draw a point on the map' | translate}}\\\" href ngeo-btn ngeo-drawpoint class=\\\"btn btn-default ngeo-drawfeature-point\\\" ng-class=\\\"{active: dfCtrl.drawPoint.active}\\\" ng-model=dfCtrl.drawPoint.active> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a line on the map' | translate}}\\\" href ngeo-btn ngeo-measurelength class=\\\"btn btn-default ngeo-drawfeature-linestring\\\" ng-class=\\\"{active: dfCtrl.measureLength.active}\\\" ng-model=dfCtrl.measureLength.active> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a polygon on the map' | translate}}\\\" href ngeo-btn ngeo-measurearea class=\\\"btn btn-default ngeo-drawfeature-polygon\\\" ng-class=\\\"{active: dfCtrl.measureArea.active}\\\" ng-model=dfCtrl.measureArea.active> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a circle on the map' | translate}}\\\" href ngeo-btn ngeo-measureazimut class=\\\"btn btn-default ngeo-drawfeature-circle\\\" ng-class=\\\"{active: dfCtrl.measureAzimut.active}\\\" ng-model=dfCtrl.measureAzimut.active> <span class=\\\"gmf-icon gmf-icon-circle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a rectangle on the map' | translate}}\\\" href ngeo-btn ngeo-drawrectangle class=\\\"btn btn-default ngeo-drawfeature-rectangle\\\" ng-class=\\\"{active: dfCtrl.drawRectangle.active}\\\" ng-model=dfCtrl.drawRectangle.active> <span class=\\\"gmf-icon gmf-icon-rectangle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a text label on the map' | translate}}\\\" href ngeo-btn ngeo-drawtext class=\\\"btn btn-default ngeo-drawfeature-text\\\" ng-class=\\\"{active: dfCtrl.drawText.active}\\\" ng-model=dfCtrl.drawText.active> <span class=\\\"gmf-icon gmf-icon-text\\\"></span> </a> </ngeo-drawfeature> <div ng-switch=efCtrl.selectedFeature> <hr class=gmf-drawfeature-separator ng-show=\\\"efCtrl.getFeaturesArray().length > 0\\\"> <div ng-switch-when=null> <div ng-show=\\\"efCtrl.getFeaturesArray().length > 0\\\"> <div class=ngeo-drawfeature-actionbuttons> <button type=button data-toggle=dropdown aria-haspopup=true aria-expanded=false ngeo-exportfeatures ngeo-exportfeatures-features=efCtrl.features class=\\\"btn btn-link btn-sm\\\"> <span class=\\\"fa fa-mail-forward\\\"></span> {{'Export' | translate}} <span class=caret></span> </button> <button ng-click=efCtrl.clearFeatures() class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-trash\\\"></span> {{'Delete All' | translate}} </button> </div> <div class=gmf-eol></div> <div class=\\\"gmf-drawfeature-featurelist list-group list-group-sm\\\"> <button role=button class=list-group-item ng-repeat=\\\"feature in efCtrl.getFeaturesArray()\\\" ng-click=efCtrl.selectFeatureFromList(feature);> {{ feature.get(efCtrl.nameProperty) }} </button> </div> </div> </div> <div ng-switch-default> <button ng-click=\\\"efCtrl.selectedFeature = null;\\\" class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-arrow-left\\\"></span> {{'List' | translate}} </button> <div class=ngeo-drawfeature-actionbuttons> <button type=button data-toggle=dropdown aria-haspopup=true aria-expanded=false ngeo-exportfeatures ngeo-exportfeatures-features=efCtrl.selectedFeatures class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-mail-forward\\\"></span> {{'Export' | translate}} <span class=caret></span> </button> <button ng-click=efCtrl.removeFeature(efCtrl.selectedFeature); class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-trash\\\"></span> {{'Delete' | translate}} </button> </div> <div class=gmf-eol></div> <gmf-featurestyle gmf-featurestyle-feature=efCtrl.selectedFeature> </gmf-featurestyle> </div> </div> \";","module.exports = \"<div ng-if=\\\"fsCtrl.feature && fsCtrl.type\\\"> <div class=form-group> <input ng-model=fsCtrl.getSetName ng-model-options=\\\"{getterSetter: true}\\\" ng-attr-placeholder=\\\"{{'Name' | translate}}\\\" class=form-control /> </div> <div ng-if=\\\"fsCtrl.type !== 'Text'\\\" class=form-group> <input id=gmf-featurestyle-showlabel type=checkbox ng-model=fsCtrl.getSetShowLabel ng-model-options=\\\"{getterSetter: true}\\\"/> <label ng-switch=fsCtrl.type for=gmf-featurestyle-showlabel class=control-label> {{'Display label' | translate}} </label> </div> <div ng-if=\\\"fsCtrl.type !== 'Text'\\\" class=form-group> <input id=gmf-featurestyle-showmeasure type=checkbox ng-model=fsCtrl.getSetShowMeasure ng-model-options=\\\"{getterSetter: true}\\\"/> <label ng-switch=fsCtrl.type for=gmf-featurestyle-showmeasure class=control-label> <span ng-switch-when=Circle> {{'Display azimuth and radius' | translate}} </span> <span ng-switch-when=Polygon> {{'Display surface' | translate}} </span> <span ng-switch-when=Rectangle> {{'Display surface' | translate}} </span> <span ng-switch-when=LineString> {{'Display length' | translate}} </span> <span ng-switch-when=Point> {{'Display coordinates' | translate}} </span> </label> <em class=text-muted> ({{ fsCtrl.measure }}) </em> </div> </div> <div ng-if=\\\"fsCtrl.feature && fsCtrl.type\\\" class=form-horizontal> <div class=form-group> <div ngeo-colorpicker=\\\"\\\" ngeo-colorpicker-color=fsCtrl.color class=col-md-12> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Point'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Size' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=3 max=20 step=1 ng-model=fsCtrl.getSetSize ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Text'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Size' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=8 max=30 step=1 ng-model=fsCtrl.getSetSize ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Circle' || fsCtrl.type === 'LineString' || fsCtrl.type === 'Polygon' || fsCtrl.type === 'Rectangle'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Stroke' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=0.5 max=5 step=0.5 ng-model=fsCtrl.getSetStroke ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Circle' || fsCtrl.type === 'Polygon' || fsCtrl.type === 'Rectangle'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Opacity' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=0 max=1 step=0.05 ng-model=fsCtrl.getSetOpacity ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Text'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Angle' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=-180 max=180 step=22.5 ng-model=fsCtrl.getSetAngle ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> </div> \";","module.exports = \"<div class=ngeo-displaywindow ng-show=$ctrl.open ng-style=$ctrl.style> <div class=windowcontainer> <button type=button class=\\\"btn fa-close close\\\" ng-click=$ctrl.close()> </button> <div class=animation-container> <div class=slide-animation> <div class=\\\"header ui-draggable-handle\\\" ng-if=\\\"$ctrl.title !== null\\\"> <p class=title>{{ $ctrl.title }}</p> </div> <div class=details ng-if=$ctrl.content ng-bind-html=$ctrl.content> </div> <div class=details ng-if=\\\"$ctrl.url !== null\\\"> <iframe frameborder=0 type=text/html height=100% width=100% ng-src=\\\"{{ $ctrl.urlTrusted }}\\\"></iframe> </div> </div> </div> </div> </div> \";","module.exports = \"<ul class=gmf-theme-selector> <li ng-repeat=\\\"theme in $ctrl.themes\\\" ng-click=$ctrl.setTheme(theme) ng-class=\\\"{'gmf-theme-selector-active': $ctrl.gmfThemeManager.getThemeName() == theme.name}\\\"> <img class=gmf-thumb ng-src={{::theme.icon}} /> <span class=gmf-text>{{theme.name | translate}}</span> </li> </ul> \";","module.exports = \"<div class=gmf-search> <input type=text ng-attr-placeholder={{$ctrl.placeholder|translate}} class=form-control ng-model=$ctrl.inputValue ngeo-search=$ctrl.options ngeo-search-datasets=$ctrl.datasets ngeo-search-listeners=$ctrl.listeners> <span class=\\\"gmf-clear-button ng-hide\\\" ng-hide=\\\"!$ctrl.clearButton || $ctrl.inputValue == ''\\\" ng-click=$ctrl.onClearButton()> </span> </div> <span ng-if=$ctrl.colorChooser> <span ng-show=$ctrl.displayColorPicker ngeo-popover ngeo-popover-placement=bottom> <button class=\\\"gmf-color-button fa fa-tint\\\" ngeo-popover-anchor data-original-title=\\\"{{'Change the color of the search result'|translate}}\\\"></button> <div ngeo-popover-content> <div ngeo-colorpicker ngeo-colorpicker-color=$ctrl.color></div> </div> </span> </span> \";","module.exports = \"<table class=ngeo-colorpicker-palette> <tr ng-repeat=\\\"colors in ::ctrl.colors\\\"> <td ng-repeat=\\\"color in ::colors\\\" ng-click=ctrl.setColor(color) ng-class=\\\"{'ngeo-colorpicker-selected': color == ctrl.color}\\\"> <div ng-style=\\\"::{'background-color': color}\\\"></div> </td> </tr> </table> \";","module.exports = \"<div class=gmf-displayquerywindow ng-class=\\\"{'desktop': ctrl.desktop, 'mobile': !ctrl.desktop}\\\" ng-show=ctrl.open ngeo-swipe-up=\\\"ctrl.collapsed = false\\\" ngeo-swipe-down=\\\"ctrl.collapsed = true\\\" ngeo-swipe-disable-mouse ng-swipe-disable-mouse ng-swipe-left=ctrl.next() ng-swipe-right=ctrl.previous()> <button class=collapse-button type=button ng-show=::!ctrl.desktop ng-click=\\\"ctrl.collapsed = !ctrl.collapsed\\\" ng-class=\\\"[ctrl.collapsed ? 'collapse-button-up' : 'collapse-button-down']\\\"> </button> <div class=windowcontainer> <button type=button class=\\\"btn fa-close close\\\" ng-click=ctrl.close()> </button> <div class=animation-container ng-class=\\\"[ctrl.collapsed ? '' : 'animation-container-detailed', ctrl.isNext ? 'next' : 'previous']\\\"> <div ng-animate-swap=ctrl.animate class=\\\"slide-animation gmf-animatable\\\"> <div class=header> <p class=title>{{ctrl.source.label | translate}}</p> <p class=subtitle>{{ctrl.getFeatureValues()[ctrl.source.identifierAttributeField]}}</p> </div> <div class=details> <table> <tr ng-repeat=\\\"(key, value) in ctrl.getFeatureValues()\\\" ng-if=\\\"value !== undefined\\\"> <td class=details-key ng-bind-html=\\\"key | translate | ngeoTrustHtml\\\"></td> <td class=details-value ng-bind-html=\\\"value | ngeoTrustHtml\\\"></td> </tr> </table> </div> </div> </div> <div class=navigate> <div class=placeholder> <button type=button class=\\\"previous btn\\\" ng-disabled=ctrl.isFirst() ng-show=\\\"ctrl.getResultLength() > 1\\\" ng-click=ctrl.previous()> <span ng-show=::ctrl.desktop>{{'Prev.' | translate}}</span> </button> </div> <div class=results> <span ng-show=::!ctrl.desktop>{{'Result' | translate}}</span> <span>{{ctrl.currentResult + 1}}</span> <span>/</span> <span>{{ctrl.getResultLength()}}</span> <div ng-show=::ctrl.desktop class=dropup> <button type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span class=\\\"fa fa-filter\\\"></span> <span class=\\\"fa fa-caret-up\\\"></span> </button> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li> <a href=# ng-click=ctrl.setSelectedSource(null)> <i class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedSource === null}\\\"> </i> <span>{{'All layers' | translate}} ({{ctrl.ngeoQueryResult.total}})</span> </a> </li> <li role=separator class=divider> </li> <li ng-repeat-start=\\\"source in ctrl.ngeoQueryResult.sources | filter: ctrl.sourcesFilter\\\" ng-repeat-end ng-class=\\\"{'disabled': source.features.length <= 0}\\\"> <a href=# ng-click=ctrl.setSelectedSource(source)> <i class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedSource === source}\\\"> </i> <span>{{source.label | translate}} ({{source.features.length}})</span> </a> </li> </ul> </div> </div> <div class=placeholder> <button type=button class=\\\"next btn\\\" ng-disabled=ctrl.isLast() ng-show=\\\"ctrl.getResultLength() > 1\\\" ng-click=ctrl.next()> <span ng-show=::ctrl.desktop>{{'Next' | translate}}</span> </button> </div> </div> </div> </div> \";","module.exports = \"<div class=\\\"gmf-displayquerygrid panel\\\" ng-show=ctrl.active> <div class=close ng-click=ctrl.clear()> &times; </div> <ul class=\\\"nav nav-pills\\\" role=tablist> <li ng-repeat=\\\"gridSource in ctrl.getGridSources() track by gridSource.source.label\\\" role=presentation ng-class=\\\"{'active' : ctrl.isSelected(gridSource)}\\\" ng-click=ctrl.selectTab(gridSource)> <a href=#{{ctrl.escapeValue(gridSource.source.label)}} data-target=#{{ctrl.escapeValue(gridSource.source.label)}} aria-controls={{ctrl.escapeValue(gridSource.source.label)}} role=tab data-toggle=tab> <span ng-if=\\\"gridSource.source.tooManyResults !== true\\\"> {{gridSource.source.label | translate}} ({{gridSource.source.features.length}}) </span> <span ng-if=\\\"gridSource.source.tooManyResults === true\\\"> {{gridSource.source.label | translate}} ({{gridSource.source.totalFeatureCount}}*) </span> </a> </li> </ul> <div class=tab-content> <div ng-repeat=\\\"gridSource in ctrl.getGridSources() track by gridSource.source.label\\\" role=tabpanel class=tab-pane ng-class=\\\"{'active' : ctrl.isSelected(gridSource)}\\\" id={{ctrl.escapeValue(gridSource.source.label)}}> <ngeo-grid ngeo-grid-configuration=gridSource.configuration ng-if=\\\"gridSource.source.tooManyResults !== true\\\"> </ngeo-grid> <div ng-if=\\\"gridSource.source.tooManyResults === true\\\"> <div class=\\\"gmf-displayquerygrid-message alert alert-warning\\\"> <p><span translate>The results can not be displayed because the maximum number has been reached</span> ({{gridSource.source.limit}}).</p> <p translate>Please refine your query.</p> </div> </div> </div> </div> <div class=navbar ng-show=\\\"!ctrl.pending && ctrl.getActiveGridSource() && ctrl.getActiveGridSource().configuration !== null\\\"> <ul class=\\\"nav navbar-nav navbar-right\\\"> <li class=ng-hide ng-show=ctrl.isOneSelected()> <p class=\\\"navbar-text ng-binding\\\"> {{ctrl.getSelectedRowCount()}} <span translate>selected element(s)</span> </p> </li> <li ng-show=ctrl.isOneSelected() class=ng-hide> <button class=\\\"btn btn-link btn-xs\\\" title=\\\"{{'Zoom to selection' | translate}}\\\" ng-click=ctrl.zoomToSelection()> <i class=\\\"fa fa-search-plus\\\"></i> <span translate>Zoom to</span> </button> </li> <li ng-show=ctrl.isOneSelected() class=ng-hide> <button class=\\\"btn btn-link btn-xs\\\" title=\\\"{{'Export selection as CSV' | translate}}\\\" ng-click=ctrl.downloadCsv()> <i class=\\\"fa fa-download\\\"></i> <span translate>Export as CSV</span> </button> </li> <li class=\\\"dropdown navbar-link dropup\\\"> <button type=button class=\\\"dropup btn btn-default btn-xs\\\" data-toggle=dropdown aria-haspopup=true aria-expanded=false> <span translate>Select</span> <span class=caret></span> </button> <ul class=dropdown-menu aria-labelledby=dLabel> <li> <a href=\\\"\\\" ng-click=ctrl.selectAll() translate>All</a> </li> <li> <a href=\\\"\\\" ng-click=ctrl.unselectAll() translate>None</a> </li> <li> <a href=\\\"\\\" ng-click=ctrl.invertSelection() translate>Reverse selection</a> </li> </ul> </li> </ul> </div> <div ng-show=ctrl.pending class=gmf-displayquerygrid-pending> <span class=\\\"fa fa-spinner fa-spin\\\"></span> </div> </div> \";","module.exports = \"<div class=ngeo-grid-table-container> <table float-thead=ctrl.floatTheadConfig ng-model=ctrl.configuration.data class=\\\"table table-bordered table-striped table-hover\\\"> <thead class=table-header> <tr> <th ng-repeat=\\\"columnDefs in ctrl.configuration.columnDefs\\\" ng-click=ctrl.sort(columnDefs.name) ng-bind-html=\\\"columnDefs.name | ngeoTrustHtml | translate\\\"> <i ng-show=\\\"ctrl.sortedBy !== columnDefs.name\\\" class=\\\"fa fa-fw\\\"></i> <i ng-show=\\\"ctrl.sortedBy === columnDefs.name && ctrl.sortAscending === true\\\" class=\\\"fa fa-caret-up\\\"></i> <i ng-show=\\\"ctrl.sortedBy === columnDefs.name && ctrl.sortAscending === false\\\" class=\\\"fa fa-caret-down\\\"></i> </th> </tr> </thead> <tbody> <tr ng-repeat=\\\"attributes in ctrl.configuration.data\\\" ng-class=\\\"['row-' + ctrl.configuration.getRowUid(attributes), ctrl.configuration.isRowSelected(attributes) ? 'ngeo-grid-active': '']\\\" ng-click=\\\"ctrl.clickRow(attributes, $event)\\\" ng-mousedown=ctrl.preventTextSelection($event)> <td ng-repeat=\\\"columnDefs in ctrl.configuration.columnDefs\\\" ng-bind-html=\\\"attributes[columnDefs.name] | ngeoTrustHtml\\\"></td> </tr> </tbody> </table> </div> \";","module.exports = \"<div class=\\\"btn-group dropup\\\"> <a type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span class=gmf-mouseposition-control-target></span> <span class=caret></span> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li class=dropdown-header translate>Coordinate systems</li> <li ng-repeat=\\\"projitem in ::ctrl.projections\\\"> <a href ng-click=ctrl.setProjection(projitem)> <span class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.projection == projitem}\\\"></span> {{::projitem.label}} </a> </li> </ul> </div> \";","module.exports = \"<div ngeo-map=ctrl.map ngeo-map-manage-resize=ctrl.manageResize ngeo-map-resize-transition=ctrl.resizeTransition> </div> \";","module.exports = \"<div class=\\\"btn-group btn-block\\\" ng-class=\\\"::{'dropup': scaleselectorCtrl.options.dropup}\\\"> <button type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span ng-bind-html=\\\"scaleselectorCtrl.currentScale | ngeoScalify | ngeoTrustHtml\\\"></span>&nbsp;<i class=caret></i> </button> <ul class=\\\"dropdown-menu btn-block\\\" role=menu> <li ng-repeat=\\\"zoomLevel in ::scaleselectorCtrl.zoomLevels\\\"> <a href ng-click=scaleselectorCtrl.changeZoom(zoomLevel) ng-bind-html=\\\"scaleselectorCtrl.getScale(zoomLevel) | ngeoScalify | ngeoTrustHtml\\\"> </a> </li> </ul> </div> \";","module.exports = \"<div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=Close><span aria-hidden=true>&times;</span></button> <h4 class=modal-title translate>Share this map</h4> </div> <div class=modal-body> <form role=form name=gmfShareForm novalidate> <div class=form-group> <label for=gmfShareInputShortLink translate>Permalink</label> <input type=text class=form-control id=gmfShareInputShortLink onclick=this.select() ng-model=$ctrl.shortLink readonly=True> <p class=help-block translate>Copy this link to share it.</p> <p class=text-danger ng-if=$ctrl.showLengthWarning> <span class=\\\"fa fa-exclamation-triangle\\\"></span> {{'You have a lot of drawn elements in this map. The above link may not be correctly supported by some browsers.' | translate}} </p> <p class=text-danger ng-if=$ctrl.errorOnGetShortUrl> <span class=\\\"fa fa-exclamation\\\"></span> {{'Error, cannot get the shortened URL.' | translate}} </p> </div> <hr> <div class=gmf-share-email ng-if=::$ctrl.enableEmail> <div class=form-group> <label for=gmfShareInputEmail translate>Send this link to</label> <input type=email class=form-control name=inputEmail id=gmfShareInputEmail placeholder=E-mail ng-model=$ctrl.email required> <span ng-show=\\\"gmfShareForm.$submitted || gmfShareForm.inputEmail.$touched\\\"> <span class=text-danger ng-show=\\\"gmfShareForm.inputEmail.$error.email || gmfShareForm.inputEmail.$error.required\\\"> <i class=\\\"fa fa-exclamation-triangle\\\" aria-hidden=true></i> {{'Invalid email.' | translate}}</span> </span> </div> <div class=form-group> <textarea class=form-control ng-attr-placeholder=\\\"{{'Message (optional)' | translate }}\\\" ng-model=$ctrl.message></textarea> </div> <span class=text-success ng-if=$ctrl.successfullySent> <i class=\\\"fa fa-check\\\" aria-hidden=true></i> {{ 'Link successfully sent.' | translate }} </span> <span class=text-danger ng-if=$ctrl.errorOnsend> <i class=\\\"fa fa-exclamation\\\" aria-hidden=true></i> {{ 'Error, the link has not been sent.' | translate }} </span> </div> <div class=text-right> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal translate>Close</button> <button ng-if=::$ctrl.enableEmail type=submit class=\\\"btn btn-default btn-primary\\\" ng-click=$ctrl.sendShortUrl() ng-disabled=!gmfShareForm.$valid translate>Send </button> </div> </form> </div> \";","module.exports = \"<div class=gmf-time-slider> <div ui-slider=sliderCtrl.sliderOptions ng-model=sliderCtrl.dates> <span class=\\\"ui-slider-handle ui-state-default ui-corner-all\\\" tabindex=0 data-toggle=tooltip title=\\\"\\\"> </span> </div> <div class=gmf-time-slider-displayed-dates> <div class=gmf-time-slider-start-date ng-if=\\\"::sliderCtrl.time.mode === 'range'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates[0])}}</span> </div> <div class=gmf-time-slider-start-date ng-if=\\\"::sliderCtrl.time.mode === 'value'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates)}}</span> </div> <div class=gmf-time-slider-end-date ng-if=\\\"::sliderCtrl.time.mode === 'range'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates[1])}}</span> </div> </div> </div> \";","module.exports = \"<div class=gmf-layertree-root-tools ng-if=layertreeCtrl.isRoot> <a href ng-if=\\\"gmfLayertreeCtrl.nodesCount() > 0\\\" ng-click=gmfLayertreeCtrl.removeAllNodes()> <span class=\\\"fa fa-trash\\\"></span> {{'Clear all' | translate}} </a> </div> <div ng-if=::!layertreeCtrl.isRoot id=gmf-layertree-node-{{::layertreeCtrl.uid}} ng-class=\\\"[layertreeCtrl.node.children ? 'gmf-layertree-group' : 'gmf-layertree-leaf', 'gmf-layertree-depth-' + layertreeCtrl.depth, gmfLayertreeCtrl.getResolutionStyle(layertreeCtrl.node), gmfLayertreeCtrl.getNodeState(layertreeCtrl)]\\\"> <div class=ngeo-sortable-handle ng-show=\\\"layertreeCtrl.depth === 1 && layertreeCtrl.parent.children.length > 1\\\"> <i class=\\\"gmf-layertree-sortable-handle-icon fa fa-ellipsis-v\\\"></i> </div> <a ng-if=::layertreeCtrl.node.children data-toggle=collapse href=#gmf-layertree-layer-group-{{::layertreeCtrl.uid}} aria-expanded={{::layertreeCtrl.node.metadata.isExpanded}} class=\\\"fa gmf-layertree-expand-node fa-fw\\\"> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) ng-if=::!layertreeCtrl.node.children ng-class=\\\"::{'gmf-layertree-no-layer-icon' : !gmfLayertreeCtrl.getLegendIconURL(layertreeCtrl)}\\\" class=gmf-layertree-layer-icon> <img ng-if=\\\"::(legendIconUrl=gmfLayertreeCtrl.getLegendIconURL(layertreeCtrl))\\\" ng-src={{::legendIconUrl}}>  </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) ng-if=::layertreeCtrl.node.children ng-class=\\\"['fa fa-fw', layertreeCtrl.node.children && !layertreeCtrl.layer.loading ? 'gmf-layertree-state' : 'fa-refresh fa-spin']\\\"> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) class=gmf-layertree-name data-toggle=tooltip data-placement=top title=\\\"{{layertreeCtrl.node.name | translate}}\\\"> {{layertreeCtrl.node.name | translate}} <i class=\\\"gmf-icon gmf-icon-search-go gmf-layertree-zoom\\\" data-toggle=tooltip data-placement=bottom data-title=\\\"{{'Not visible at current scale. Click to zoom.'|translate}}\\\" ng-click=\\\"::gmfLayertreeCtrl.zoomToResolution(layertreeCtrl); $event.preventDefault(); $event.stopPropagation();\\\" ng-if=\\\"gmfLayertreeCtrl.getNodeState(layertreeCtrl) == 'on'\\\"> </i> <span ngeo-popover ngeo-popover-dismiss=.content ng-if=\\\"gmfLayertreeCtrl.getNodeState(layertreeCtrl) !== 'off' && layertreeCtrl.node.time && layertreeCtrl.node.time.mode !== 'disabled'\\\"> <span ngeo-popover-anchor class=\\\"fa fa-clock-o\\\" ng-click=\\\"$event.preventDefault(); $event.stopPropagation()\\\"> </span> <div ngeo-popover-content> <ngeo-date-picker ng-if=\\\"::layertreeCtrl.node.time.widget === 'datepicker'\\\" time=layertreeCtrl.node.time on-date-selected=\\\"gmfLayertreeCtrl.updateWMSTimeLayerState(layertreeCtrl, time)\\\"> </ngeo-date-picker> <gmf-time-slider ng-if=\\\"::layertreeCtrl.node.time.widget === 'slider'\\\" gmf-time-slider-time=layertreeCtrl.node.time gmf-time-slider-on-date-selected=\\\"gmfLayertreeCtrl.updateWMSTimeLayerState(layertreeCtrl, time)\\\"> </gmf-time-slider> </div> </span> <span class=\\\"fa fa-pencil\\\" data-toggle=tooltip data-placement=right title=\\\"{{'Currently editing this layer'|translate}}\\\" ng-if=layertreeCtrl.properties.editing> </span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-if=\\\"::layertreeCtrl.depth == 1\\\" ng-click=gmfLayertreeCtrl.removeNode(layertreeCtrl.node)> <span class=\\\"fa fa-trash\\\"></span> </a> <a class=gmf-layertree-node-menu-btn href=\\\"\\\" ng-if=::gmfLayertreeCtrl.supportsCustomization(layertreeCtrl) ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-menu-' + layertreeCtrl.uid)\\\"> <span class=\\\"fa fa-cog\\\"></span> </a> <span ngeo-popover ng-if=\\\"::(layertreeCtrl.depth === 1 && !layertreeCtrl.node.mixed) || (layertreeCtrl.depth > 1 && layertreeCtrl.parent.node.mixed && !layertreeCtrl.node.children) || (gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend) || layertreeCtrl.getDataSource().filtrable\\\" ngeo-popover-dismiss=.content> <span ngeo-popover-anchor class=\\\"extra-actions fa fa-cog\\\"> </span> <div ngeo-popover-content> <ul> <li ng-if=\\\"::(layertreeCtrl.depth === 1 && !layertreeCtrl.node.mixed) || (layertreeCtrl.depth > 1 && layertreeCtrl.parent.node.mixed)\\\"> <i class=\\\"fa fa-tint fa-fw\\\"></i> <span for=layer-opactity>{{'Opacity'|translate}}</span> <input class=input-action name=layer-opactity type=range min=0 max=1 step=0.01 ng-model=layertreeCtrl.layer.opacity /> </li> <li ng-if=\\\"::gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend'); popoverCtrl.dismissPopover()\\\" data-toggle=collapse href=\\\"\\\"> {{'Show/hide legend'|translate}} </a> </li> <li ng-if=\\\"layertreeCtrl.getDataSource() && layertreeCtrl.getDataSource().filtrable\\\"> <i class=\\\"fa fa-filter fa-fw\\\"></i> <a ng-click=gmfLayertreeCtrl.toggleFiltrableDataSource(layertreeCtrl.getDataSource()) href=\\\"\\\"> {{'Filter'|translate}} </a> </li> </ul> </div> </span> <span class=gmf-layertree-metadata ng-if=::layertreeCtrl.node.metadata.metadataUrl> <span ng-if=\\\"::gmfLayertreeCtrl.openLinksInNewWindow === true\\\"> <a title=\\\"{{'More informations'|translate}}\\\" href={{::layertreeCtrl.node.metadata.metadataUrl}} target=blank_> </a> </span> <span ng-if=\\\"::gmfLayertreeCtrl.openLinksInNewWindow !== true\\\"> <a title=\\\"{{'More informations'|translate}}\\\" href=\\\"\\\" ng-click=gmfLayertreeCtrl.displayMetadata(layertreeCtrl)> </a> </span> </span> </span> </div> <div class=gmf-layertree-node-menu id=gmf-layertree-node-menu-{{::layertreeCtrl.uid}} style=display:none ng-if=::gmfLayertreeCtrl.supportsCustomization(layertreeCtrl)> <div ng-if=::gmfLayertreeCtrl.supportsOpacityChange(layertreeCtrl)> <i class=\\\"fa fa-tint fa-fw\\\"></i> <span for=layer-opactity>{{'Opacity'|translate}}</span> <input class=input-action name=layer-opactity type=range min=0 max=1 step=0.01 ng-model=layertreeCtrl.layer.opacity /> </div> <a class=gmf-layertree-node-menu-togglelegend ng-if=::gmfLayertreeCtrl.supportsLegend(layertreeCtrl) data-toggle=collapse ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\" href=\\\"\\\"> <span class=\\\"fa fa-th-list\\\"> </span> {{'Show/hide legend'|translate}} </a> </div> <div ng-if=\\\"::!layertreeCtrl.isRoot && gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend\\\" id=gmf-layertree-node-{{::layertreeCtrl.uid}}-legend class=\\\"collapse gmf-layertree-legend\\\" ng-class=\\\"::[layertreeCtrl.node.metadata.isLegendExpanded ? 'in' : '']\\\"> <a title=\\\"{{'Hide legend'|translate}}\\\" data-toggle=collapse ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\" href=\\\"\\\"> {{'Hide legend'|translate}} </a> <div ng-if=\\\"gmfLayertreeCtrl.isNodeLegendVisible('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\"> <div ng-repeat=\\\"(title, url) in ::gmfLayertreeCtrl.getLegendsObject(layertreeCtrl)\\\"> <p ng-if=\\\"::gmfLayertreeCtrl.getNumberOfLegendsObject(layertreeCtrl) > 1\\\">{{title|translate}}</p> <img ng-src={{url}}> </div> </div> </div> <ul class=gmf-layertree-root-external-datasources ng-if=\\\"layertreeCtrl.isRoot && (gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmsGroups.length || gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmtsGroups.length || gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup.dataSources.length)\\\"> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-repeat=\\\"wmtsGroup in gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmtsGroups\\\" group=wmtsGroup> </gmf-datasourcegrouptree> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-repeat=\\\"wmsGroup in gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmsGroups\\\" group=wmsGroup> </gmf-datasourcegrouptree> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-if=gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup.dataSources.length group=gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup> </gmf-datasourcegrouptree> </ul> <ul id=gmf-layertree-layer-group-{{::layertreeCtrl.uid}} ng-if=::layertreeCtrl.node.children ng-class=\\\"{collapse: !layertreeCtrl.isRoot, in : layertreeCtrl.node.metadata.isExpanded}\\\" ngeo-sortable=\\\"::layertreeCtrl.isRoot && layertreeCtrl.node.children\\\" ngeo-sortable-options=\\\"{handleClassName: 'ngeo-sortable-handle', draggerClassName: 'gmf-layertree-dragger', placeholderClassName : 'gmf-layertree-curr-drag-item'}\\\" ngeo-sortable-callback=::gmfLayertreeCtrl.afterReorder ngeo-sortable-callback-ctx=::gmfLayertreeCtrl> <li class=gmf-layertree-node ng-repeat=\\\"node in layertreeCtrl.node.children\\\" ng-class=\\\"'gmf-layertree-depth-' + layertreeCtrl.depth\\\" ngeo-layertree=node ngeo-layertree-notroot ngeo-layertree-map=layertreeCtrl.map ngeo-layertree-nodelayerexpr=layertreeCtrl.nodelayerExpr ngeo-layertree-listenersexpr=layertreeCtrl.listenersExpr> </li> </ul> \";","module.exports = \"<span ng-if=::!layertreeCtrl.isRoot>{{::layertreeCtrl.node.name}}</span> <input type=checkbox ng-if=\\\"::layertreeCtrl.node && !layertreeCtrl.node.children\\\" ng-model=layertreeCtrl.getSetActive ng-model-options=\\\"{getterSetter: true}\\\"/> <ul ng-if=::layertreeCtrl.node.children> <li ng-repeat=\\\"node in ::layertreeCtrl.node.children\\\" ngeo-layertree=::node ngeo-layertree-notroot ngeo-layertree-map=layertreeCtrl.map ngeo-layertree-nodelayerexpr=layertreeCtrl.nodelayerExpr ngeo-layertree-listenersexpr=layertreeCtrl.listenersExpr> </li> </ul> \";","module.exports = \"<div class=\\\"gmf-layertree-group gmf-layertree-depth-1 {{$ctrl.group.visibilityState}}\\\"> <a data-toggle=collapse href=#gmf-layertree-layer-group-{{::$ctrl.getGroupUid()}} aria-expanded=true class=\\\"fa gmf-layertree-expand-node fa-fw\\\"> </a> <a class=\\\"fa fa-fw gmf-layertree-state\\\" href ng-click=$ctrl.toggle()> </a> <a class=gmf-layertree-name href ng-click=$ctrl.toggle()> <span>{{$ctrl.group.title | translate}}</span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-click=$ctrl.remove()> <span class=\\\"fa fa-trash\\\"></span> </a> </span> </div> <ul id=gmf-layertree-layer-group-{{::$ctrl.getGroupUid()}} class=\\\"collapse in\\\"> <li class=\\\"gmf-layertree-node gmf-layertree-depth-2\\\" ng-class=\\\"[dataSource.visible ? 'on' : 'off']\\\" ng-repeat=\\\"dataSource in $ctrl.group.dataSources\\\"> <div class=gmf-layertree-leaf> <a href ng-click=$ctrl.toggleDataSource(dataSource) class=\\\"gmf-layertree-layer-icon gmf-layertree-no-layer-icon\\\"> </a> <a class=gmf-layertree-name href ng-click=$ctrl.toggleDataSource(dataSource)> <span>{{dataSource.name | translate}}</span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-click=$ctrl.removeDataSource(dataSource)> <span class=\\\"fa fa-trash\\\"></span> </a> </span> </div> </li> </ul> \";","module.exports = \"<div class=form-group ng-switch=$ctrl.filtrableDataSources.length> <span ng-switch-when=0 translate>No filtrable layer available!</span> <select class=form-control ng-disabled=$ctrl.aRuleIsActive ng-switch-default ng-model=$ctrl.gmfDataSourceBeingFiltered.dataSource ng-options=\\\"dataSource.name | translate for dataSource in $ctrl.filtrableDataSources\\\"> <option value=\\\"\\\" translate>-- Layer to filter --</option> </select> <div ng-if=\\\"$ctrl.customRules && $ctrl.directedRules && $ctrl.readyDataSource\\\"> <hr class=gmf-filterselector-separator /> <div class=\\\"dropdown gmf-filterselector-savedfilters\\\"> <a class=\\\"btn btn-link dropdown-toggle ngeo-filter-condition-button\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive || $ctrl.gmfSavedFilters.currentDataSourceItems.length === 0}\\\" type=button data-toggle=dropdown ng-disabled=\\\"$ctrl.aRuleIsActive || $ctrl.gmfSavedFilters.currentDataSourceItems.length === 0\\\"> <span translate>Saved</span> <span class=caret></span> </a> <ul class=dropdown-menu> <li ng-repeat=\\\"item in $ctrl.gmfSavedFilters.currentDataSourceItems\\\"> <a href ng-click=$ctrl.saveFilterLoadItem(item)> <span>{{::item.name}}</span> </a> </li> <li role=separator class=divider></li> <li> <a href ng-click=$ctrl.saveFilterManage()> <span translate>Manage saved filters</span> </a> </li> </ul> </div> <ngeo-filter a-rule-is-active=$ctrl.aRuleIsActive custom-rules=$ctrl.customRules datasource=$ctrl.readyDataSource directed-rules=$ctrl.directedRules feature-overlay=$ctrl.featureOverlay map=$ctrl.map tool-group=$ctrl.toolGroup> </ngeo-filter> <div> <a class=\\\"btn btn-link gmf-filterselector-savebtn\\\" type=button data-toggle=dropdown ng-click=\\\"!$ctrl.aRuleIsActive && $ctrl.saveFilterShowModal()\\\" ng-disabled=$ctrl.aRuleIsActive> <span class=\\\"fa fa-save\\\"></span> <span translate>Save</span> </a> </div> </div> <ngeo-modal ng-model=$ctrl.saveFilterSaveModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title>{{'Save filter' | translate}}</h4> </div> <div class=modal-body> <p class=gmf-filterselector-savefilter-desc translate> You can save the filter that you created to re-load it later. </p> <input type=text class=form-control name=name ng-model=$ctrl.saveFilterName placeholder=\\\"{{'Filter name' | translate}}\\\"/> </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'Cancel' | translate}}</button> <button type=button ng-click=$ctrl.saveFilterSave() ng-disabled=\\\"$ctrl.saveFilterName === ''\\\" class=\\\"btn btn-primary\\\">{{'Save' | translate}}</button> </div> </ngeo-modal> <ngeo-modal ng-model=$ctrl.saveFilterManageModalShown> <div class=gmf-filterselector-managefilter-modal> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title>{{'Manage filters' | translate}}</h4> </div> <div class=modal-body> <ul> <li ng-repeat=\\\"item in $ctrl.gmfSavedFilters.currentDataSourceItems\\\"> <span>{{::item.name}}</span> <a href ng-click=$ctrl.saveFilterRemoveItem(item)> {{ 'Delete' | translate }} </a> <div class=gmf-eol></div> </li> </ul> </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'Close' | translate}}</button> </div> </div> </ngeo-modal> </div> \";","module.exports = \"<div class=dropdown> <a class=\\\"btn btn-link dropdown-toggle ngeo-filter-condition-button\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive}\\\" type=button data-toggle=dropdown ng-disabled=$ctrl.aRuleIsActive> <span class=\\\"fa fa-cog\\\"></span> <span class=caret></span> </a> <ul class=dropdown-menu> <li class=ngeo-filter-condition-criteria-header translate>Criteria taken into account</li> <li ng-repeat=\\\"condition in ::$ctrl.conditions\\\"> <a href ng-click=$ctrl.setCondition(condition)> <span ng-class=\\\"{'ngeo-filter-condition-criteria-active': condition.value == $ctrl.datasource.filterCondition}\\\" class=\\\"fa fa-check ngeo-filter-condition-criteria\\\"> </span> <span>{{::condition.text | translate}}</span> </a> </li> </ul> </div> <ngeo-rule ng-repeat=\\\"rule in $ctrl.directedRules\\\" feature-overlay=::$ctrl.featureOverlay class=ngeo-filter-rule-directed map=$ctrl.map rule=rule tool-group=$ctrl.toolGroup> </ngeo-rule> <hr class=ngeo-filter-separator-rules /> <div ng-repeat=\\\"rule in $ctrl.customRules\\\"> <a class=\\\"btn btn-xs btn-link ngeo-filter-rule-custom-rm-btn\\\" ng-click=\\\"!$ctrl.aRuleIsActive && $ctrl.removeCustomRule(rule)\\\" ng-disabled=$ctrl.aRuleIsActive href> <span class=\\\"fa fa-remove\\\"></span> </a> <ngeo-rule feature-overlay=::$ctrl.featureOverlay class=ngeo-filter-rule-custom map=$ctrl.map rule=rule tool-group=$ctrl.toolGroup> </ngeo-rule> </div> <div class=dropdown> <a class=\\\"btn btn-link dropdown-toggle\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive}\\\" type=button data-toggle=dropdown ng-disabled=$ctrl.aRuleIsActive> <span translate>+ Add a new criteria</span> <span class=caret></span> </a> <ul class=dropdown-menu> <li ng-repeat=\\\"attribute in ::$ctrl.geometryAttributes\\\"> <a href ng-click=$ctrl.createAndAddCustomRule(attribute)> <span translate>Spatial filter</span> </a> </li> <li role=presentation class=divider></li> <li ng-repeat=\\\"attribute in ::$ctrl.otherAttributes\\\"> <a href ng-click=$ctrl.createAndAddCustomRule(attribute)> <span>{{::attribute.name | translate}}</span> </a> </li> </ul> </div> <hr class=ngeo-filter-separator-criteria /> <a class=\\\"btn btn-link\\\" type=button ng-click=$ctrl.apply() ng-disabled=\\\"$ctrl.hasARule() === false || $ctrl.datasource.visible === false\\\"> <span class=\\\"fa fa-check\\\"></span> <span translate>Apply filter</span> </a> <a class=\\\"btn btn-link\\\" type=button ng-click=$ctrl.getData() ng-disabled=\\\"$ctrl.hasARule() === false || $ctrl.datasource.visible === false\\\"> <span class=\\\"fa fa-chevron-right\\\"></span> <span translate>Get data</span> </a> \";","module.exports = \"<div class=dropdown ng-class=\\\"{open: $ctrl.rule.active}\\\"> <a class=\\\"btn btn-default btn-sm dropdown-toggle\\\" type=button ng-click=$ctrl.toggle()> <span>{{ ::$ctrl.clone.name | translate }}</span> <span class=caret></span> </a> <div class=\\\"dropdown-menu form-group\\\"> <select class=\\\"form-control ngeo-rule-operators-list\\\" ng-disabled=$ctrl.drawActive ng-if=::$ctrl.clone.operators ng-model=$ctrl.clone.operator ng-options=\\\"$ctrl.operators[operator] | translate for operator in ::$ctrl.clone.operators track by operator\\\"> </select> <div ng-switch=::$ctrl.clone.type> <div class=\\\"ngeo-rule-type-date form-group\\\" ng-if=$ctrl.rule.active ng-switch-when=date|datetime ng-switch-when-separator=|> <div ng-switch=$ctrl.clone.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <ngeo-date-picker time=$ctrl.timeRangeMode on-date-selected=$ctrl.onDateRangeSelected(time)> </ngeo-date-picker> </div> <div ng-switch-default> <ngeo-date-picker time=$ctrl.timeValueMode on-date-selected=$ctrl.onDateSelected(time)> </ngeo-date-picker> </div> </div> </div> <div class=\\\"ngeo-rule-type-geometry form-group\\\" ng-switch-when=geometry> <div ng-switch=$ctrl.geomType> <span class=\\\"gmf-icon gmf-icon-point\\\" ng-switch-when=Point> </span> <span class=\\\"gmf-icon gmf-icon-line\\\" ng-switch-when=LineString> </span> <span class=\\\"gmf-icon gmf-icon-polygon\\\" ng-switch-when=Polygon> </span> <span class=\\\"gmf-icon gmf-icon-circle\\\" ng-switch-when=Circle> </span> <span class=\\\"gmf-icon gmf-icon-rectangle\\\" ng-switch-when=Rectangle> </span> </div> <ngeo-drawfeature ngeo-drawfeature-active=$ctrl.drawActive ngeo-drawfeature-features=$ctrl.drawnFeatures ngeo-drawfeature-map=$ctrl.map> <div ngeo-btn-group class=btn-group> <a data-toggle=tooltip title=\\\"{{'Draw a point on the map' | translate}}\\\" href ngeo-btn ngeo-drawpoint class=\\\"btn btn-sm btn-default ngeo-drawfeature-point\\\" ng-show=\\\"['intersects', 'within'].indexOf($ctrl.clone.operator) !== -1\\\" ng-class=\\\"{active: dfCtrl.drawPoint.active}\\\" ng-model=dfCtrl.drawPoint.active> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a line on the map' | translate}}\\\" href ngeo-btn ngeo-measurelength class=\\\"btn btn-sm btn-default ngeo-drawfeature-linestring\\\" ng-show=\\\"['intersects', 'within'].indexOf($ctrl.clone.operator) !== -1\\\" ng-class=\\\"{active: dfCtrl.measureLength.active}\\\" ng-model=dfCtrl.measureLength.active> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a polygon on the map' | translate}}\\\" href ngeo-btn ngeo-measurearea class=\\\"btn btn-sm btn-default ngeo-drawfeature-polygon\\\" ng-class=\\\"{active: dfCtrl.measureArea.active}\\\" ng-model=dfCtrl.measureArea.active> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a circle on the map' | translate}}\\\" href ngeo-btn ngeo-measureazimut class=\\\"btn btn-sm btn-default ngeo-drawfeature-circle\\\" ng-class=\\\"{active: dfCtrl.measureAzimut.active}\\\" ng-model=dfCtrl.measureAzimut.active> <span class=\\\"gmf-icon gmf-icon-circle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a rectangle on the map' | translate}}\\\" href ngeo-btn ngeo-drawrectangle class=\\\"btn btn-sm btn-default ngeo-drawfeature-rectangle\\\" ng-class=\\\"{active: dfCtrl.drawRectangle.active}\\\" ng-model=dfCtrl.drawRectangle.active> <span class=\\\"gmf-icon gmf-icon-rectangle\\\"></span> </a> </div> <div class=ngeo-rule-type-geometry-instructions ng-if=$ctrl.drawActive> <span ng-if=dfCtrl.drawPoint.active> {{ 'Draw a point on the map.' | translate }} </span> <span ng-if=dfCtrl.measureLength.active> {{ 'Draw a line string on the map.' | translate }} </span> <span ng-if=dfCtrl.measureArea.active> {{ 'Draw a polygon on the map.' | translate }} </span> <span ng-if=dfCtrl.measureAzimut.active> {{ 'Draw a circle on the map.' | translate }} </span> <span ng-if=dfCtrl.drawRectangle.active> {{ 'Draw a rectangle on the map.' | translate }} </span> </div> </ngeo-drawfeature> </div> <div class=\\\"checkbox ngeo-rule-type-select\\\" ng-switch-when=select> <a ng-click=$ctrl.selectAllChoices() href>{{ All | translate}} </a> <label class=\\\"form-group ol-unselectable\\\" ng-repeat=\\\"choice in ::$ctrl.clone.choices\\\"> <input ng-checked=\\\"$ctrl.clone.getExpression() && $ctrl.clone.getExpression().split(',').indexOf(choice) > -1\\\" ng-click=$ctrl.toggleChoiceSelection(choice) type=checkbox value=choice /> <span>{{ choice | translate }}</span> </label> </div> <div class=\\\"form-group ngeo-rule-type-text\\\" ng-switch-default> <div ng-switch=$ctrl.clone.operator> <div ng-switch-when=..> <input type=number class=form-control ng-model=$ctrl.clone.lowerBoundary /> <input type=number class=form-control ng-model=$ctrl.clone.upperBoundary /> </div> <div ng-switch-default> <input type=number class=form-control ng-if=\\\"$ctrl.clone.type === 'number'\\\" ng-model=$ctrl.clone.expression /> <input type=text class=form-control ng-if=\\\"$ctrl.clone.type !== 'number'\\\" ng-model=$ctrl.clone.expression /> </div> </div> </div> <div class=ngeo-rule-btns> <button class=\\\"btn btn-xs btn-default\\\" ng-click=$ctrl.apply() type=button>{{'Apply' | translate}}</button> <button class=\\\"btn btn-xs btn-default\\\" ng-click=$ctrl.cancel() type=button>{{'Cancel' | translate}}</button> </div> </div> </div> </div> <div class=ngeo-rule-value ng-if=\\\"$ctrl.rule.value !== null\\\"> <a class=\\\"btn btn-xs btn-link\\\" ng-click=\\\"!$ctrl.rule.active && $ctrl.reset()\\\" ng-disabled=$ctrl.rule.active href> <span class=\\\"fa fa-remove\\\"></span> </a> <div ng-switch=::$ctrl.rule.type> <div ng-switch-when=date|datetime ng-switch-when-separator=|> <div ng-switch=$ctrl.rule.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <span translate>From </span> <span>{{ $ctrl.timeToDate($ctrl.rule.lowerBoundary) }}</span> <span translate> to </span> <span>{{ $ctrl.timeToDate($ctrl.rule.upperBoundary) }}</span> </div> <div ng-switch-default> <span>{{ $ctrl.operatorsShortFormat[$ctrl.rule.operator] }}</span> <span>{{ $ctrl.timeToDate($ctrl.rule.getExpression()) }}</span> </div> </div> </div> <div ng-switch-when=geometry> <span>{{ $ctrl.operators[$ctrl.rule.operator] }}</span> <span ng-switch=$ctrl.getRuleGeometryType()> <span class=\\\"gmf-icon gmf-icon-point\\\" ng-switch-when=Point> </span> <span class=\\\"gmf-icon gmf-icon-line\\\" ng-switch-when=LineString> </span> <span class=\\\"gmf-icon gmf-icon-polygon\\\" ng-switch-when=Polygon> </span> <span class=\\\"gmf-icon gmf-icon-circle\\\" ng-switch-when=Circle> </span> <span class=\\\"gmf-icon gmf-icon-rectangle\\\" ng-switch-when=Rectangle> </span> </span> </div> <div ng-switch-when=select> <span ng-repeat=\\\"choice in $ctrl.rule.getExpression().split(',')\\\"> {{ choice | translate }}{{ $last ? '' : ', ' }} </span> </div> <div ng-switch-default> <div ng-switch=$ctrl.rule.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <span translate>Between </span> <span>{{ $ctrl.rule.lowerBoundary }}</span> <span translate> and </span> <span>{{ $ctrl.rule.upperBoundary }}</span> </div> <div ng-switch-default> <span>{{ $ctrl.operatorsShortFormat[$ctrl.rule.operator] }}</span> <span>{{ $ctrl.rule.getExpression() }}</span> </div> </div> </div> </div> </div> \";","module.exports = \"<div class=ngeo-datepicker> <form name=dateForm class=ngeo-datepicker-form novalidate> <div ng-if=\\\"::datepickerCtrl.time.widget === 'datepicker'\\\"> <div class=ngeo-datepicker-start-date> <span ng-if=\\\"::datepickerCtrl.time.mode === 'range'\\\" translate>From:</span> <span ng-if=\\\"::datepickerCtrl.time.mode !== 'range'\\\" translate>Date:</span> <input name=sdate ui-date=datepickerCtrl.sdateOptions ng-model=datepickerCtrl.sdate required=\\\"\\\"/> </div> <div class=ngeo-datepicker-end-date ng-if=\\\"::datepickerCtrl.time.mode === 'range'\\\"> <span translate>To:</span> <input name=edate ui-date=datepickerCtrl.edateOptions ng-model=datepickerCtrl.edate required=\\\"\\\"/> </div> </div> </form> </div> \";","module.exports = \"<h4 class=\\\"popover-title ngeo-popup-title\\\"> <span ng-bind-html=title></span> <button type=button class=close ng-click=\\\"open = false\\\"> &times;</button> </h4> <div class=popover-content ng-bind-html=content></div> \";","module.exports = \"<ul class=gmf-backgroundlayerselector> <li ng-repeat=\\\"layer in ctrl.bgLayers\\\" ng-click=ctrl.setLayer(layer) ng-class=\\\"{'gmf-backgroundlayerselector-active': ctrl.bgLayer == layer, 'gmf-backgroundlayerselector-disabled': ctrl.opacityLayer == layer}\\\"> <img class=gmf-thumb ng-src=\\\"{{::layer.get('metadata')['thumbnail']}}\\\"/> <span class=gmf-text>{{layer.get(\\\"label\\\") | translate}}</span> <span ng-class=\\\"{'gmf-backgroundlayerselector-opacity-check': ctrl.opacityLayer == layer}\\\"></span> </li> <input ng-if=ctrl.opacityLayer class=\\\"input-action gmf-backgroundlayerselector-opacity-slider\\\" name=bg-layer-opacity type=range min=0 max=1 step=0.01 ng-model=ctrl.getSetBgLayerOpacity ng-model-options=\\\"{getterSetter: true}\\\"> </ul> \";","module.exports = \"<div ng-if=$ctrl.gmfUser.username> <div class=form-group> <span>{{'Logged in as' | translate}}</span> <strong>{{ ::$ctrl.gmfUser.username }}</strong>. </div> <form name=logoutForm role=form ng-submit=$ctrl.logout() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\" ng-if=!$ctrl.changingPassword> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Logout' | translate}}\\\"/> </div> <div class=form-group> <input ng-show=$ctrl.allowPasswordChange type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Change password' | translate}}\\\" ng-click=\\\"$ctrl.changingPassword = true\\\"/> </div> </form> <form name=changePasswordForm role=form ng-submit=$ctrl.changePassword() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\" ng-if=$ctrl.changingPassword> <div class=form-group> <input type=password class=form-control name=oldpassword ng-model=$ctrl.oldPwdVal ng-attr-placeholder=\\\"{{'Old password' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=newpassword ng-model=$ctrl.newPwdVal ng-attr-placeholder=\\\"{{'New password' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=newpasswordconfirm ng-model=$ctrl.newPwdConfVal ng-attr-placeholder=\\\"{{'Confirm new password' | translate}}\\\"/> </div> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Change password' | translate}}\\\"/> </div> <div class=form-group> <input type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Cancel' | translate}}\\\" ng-if=!$ctrl.userMustChangeItsPassword() ng-click=$ctrl.changePasswordReset() /> <input type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Logout' | translate}}\\\" ng-if=$ctrl.userMustChangeItsPassword() ng-click=$ctrl.logout() /> </div> </form> <div ng-show=$ctrl.error class=\\\"gmf-authentication-error help-block\\\"></div> <ngeo-modal ng-model=$ctrl.changePasswordModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Password Changed' | translate}} </h4> </div> <div class=modal-body> {{'Your password has successfully been changed.' | translate}} </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'OK' | translate}}</button> </div> </ngeo-modal> </div> <div ng-if=!$ctrl.gmfUser.username> <form name=loginForm role=form ng-submit=$ctrl.login() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\"> <div class=form-group> <input type=text class=form-control name=login ng-model=$ctrl.loginVal ng-attr-placeholder=\\\"{{'Username' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=password ng-model=$ctrl.pwdVal ng-attr-placeholder=\\\"{{'Password' | translate}}\\\"/> </div> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Connect' | translate}}\\\"/> </div> <div ng-show=$ctrl.allowPasswordReset class=form-group> <a ng-click=$ctrl.resetPassword() href=\\\"\\\">{{'Password forgotten?' | translate}}</a> </div> </form> <div ng-show=$ctrl.error class=\\\"gmf-authentication-error help-block\\\"></div> <ngeo-modal ng-model=$ctrl.resetPasswordModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Password forgotten?' | translate}} </h4> </div> <div class=modal-body translate> A new password has just been sent to you by e-mail. </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'OK' | translate}}</button> </div> </ngeo-modal> </div> \";"],"sourceRoot":""}