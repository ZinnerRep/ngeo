{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/goog.asserts.prod.js","webpack:///./src/format/AttributeType.js","webpack:///./src/format/FeatureProperties.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/datasource/OGC.js","webpack:///./contribs/gmf/src/index.js","webpack:///./src/CustomEvent.js","webpack:///./src/message/Message.js","webpack:///./src/layertree/Controller.js","webpack:///./src/utils.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/misc/WMSTime.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/map/LayerHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/datasource/DataSources.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/datasource/DataSource.js","webpack:///./contribs/gmf/src/layertree/SyncLayertreeMap.js","webpack:///./src/statemanager/Service.js","webpack:///./src/message/Notification.js","webpack:///./src/misc/Time.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/datasource/Group.js","webpack:///./src/misc/debounce.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/statemanager/Location.js","webpack:///./contribs/gmf/src/datasource/DataSourceBeingFiltered.js","webpack:///./contribs/gmf/src/authentication/Service.js","webpack:///./contribs/gmf/src/permalink/ShareService.js","webpack:///./src/datasource/File.js","webpack:///./src/datasource/FileGroup.js","webpack:///./src/datasource/OGCGroup.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./contribs/gmf/src/datasource/ExternalDataSourcesManager.js","webpack:///./src/proj/somerc.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/misc/AutoProjection.js","webpack:///./contribs/gmf/src/search/FulltextSearch.js","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.js","webpack:///./src/statemanager/module.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/misc/datepickerComponent.js","webpack:///./src/draw/features.js","webpack:///./src/misc/File.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/search/searchDirective.js","webpack:///./src/search/createGeoJSONBloodhound.js","webpack:///./src/search/createLocationSearchBloodhound.js","webpack:///./src/search/module.js","webpack:///./contribs/gmf/src/mobile/navigation/component.js","webpack:///./src/misc/sortableComponent.js","webpack:///./src/message/popoverComponent.js","webpack:///./src/misc/colorpickerComponent.js","webpack:///./contribs/gmf/src/search/component.js","webpack:///./src/map/recenter.js","webpack:///./src/misc/syncArrays.js","webpack:///./src/layertree/component.js","webpack:///./src/olcs/constants.js","webpack:///./src/Popover.js","webpack:///./contribs/gmf/src/layertree/component.js","webpack:///./src/Menu.js","webpack:///./src/message/modalComponent.js","webpack:///./contribs/gmf/src/authentication/component.js","webpack:///./contribs/gmf/src/authentication/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./contribs/gmf/src/backgroundlayerselector/component.js","webpack:///./contribs/gmf/src/editing/EnumerateAttribute.js","webpack:///./src/format/Attribute.js","webpack:///./src/format/XSDAttribute.js","webpack:///./src/format/WFSAttribute.js","webpack:///./src/misc/filters.js","webpack:///./src/download/service.js","webpack:///./src/GeometryType.js","webpack:///./src/interaction/Measure.js","webpack:///./src/interaction/common.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./src/misc/FeatureHelper.js","webpack:///./src/rule/Rule.js","webpack:///./src/rule/Date.js","webpack:///./src/rule/Geometry.js","webpack:///./src/rule/Select.js","webpack:///./src/rule/Text.js","webpack:///./src/filter/RuleHelper.js","webpack:///./src/WFSDescribeFeatureType.js","webpack:///./src/query/Querent.js","webpack:///./src/datasource/Helper.js","webpack:///./contribs/gmf/src/datasource/Helper.js","webpack:///./contribs/gmf/src/datasource/OGC.js","webpack:///./contribs/gmf/src/datasource/WFSAliases.js","webpack:///./contribs/gmf/src/datasource/Manager.js","webpack:///./contribs/gmf/src/datasource/module.js","webpack:///./src/message/popupComponent.js","webpack:///./src/message/Popup.js","webpack:///./src/message/Disclaimer.js","webpack:///./contribs/gmf/src/disclaimer/component.js","webpack:///./contribs/gmf/src/filters/SavedFilters.js","webpack:///./src/query/MapQuerent.js","webpack:///./src/misc/btnComponent.js","webpack:///./src/draw/Controller.js","webpack:///./src/draw/point.js","webpack:///./src/draw/rectangle.js","webpack:///./src/draw/text.js","webpack:///./src/interaction/MeasureArea.js","webpack:///./src/measure/area.js","webpack:///./src/measure/azimut.js","webpack:///./src/interaction/MeasureLength.js","webpack:///./src/measure/length.js","webpack:///./src/draw/component.js","webpack:///./src/interaction/ModifyCircle.js","webpack:///./src/interaction/ModifyRectangle.js","webpack:///./src/interaction/Modify.js","webpack:///./src/interaction/Rotate.js","webpack:///./src/interaction/Translate.js","webpack:///./src/misc/ToolActivate.js","webpack:///./src/misc/ToolActivateMgr.js","webpack:///./src/filter/ruleComponent.js","webpack:///./src/filter/component.js","webpack:///./contribs/gmf/src/filters/filterselectorComponent.js","webpack:///./contribs/gmf/src/filters/module.js","webpack:///./contribs/gmf/src/layertree/timeSliderComponent.js","webpack:///./contribs/gmf/src/layertree/module.js","webpack:///./contribs/gmf/src/permalink/shareComponent.js","webpack:///./contribs/gmf/src/permalink/module.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./src/map/component.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./src/map/module.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./contribs/gmf/src/map/mousepositionComponent.js","webpack:///./contribs/gmf/src/map/module.js","webpack:///./src/download/Csv.js","webpack:///./src/grid/Config.js","webpack:///./src/grid/component.js","webpack:///./contribs/gmf/src/query/gridComponent.js","webpack:///./src/misc/swipe.js","webpack:///./contribs/gmf/src/query/windowComponent.js","webpack:///./contribs/gmf/src/query/extraModule.js","webpack:///./contribs/gmf/src/search/module.js","webpack:///./contribs/gmf/src/theme/selectorComponent.js","webpack:///./contribs/gmf/src/theme/module.js","webpack:///./src/message/displaywindowComponent.js","webpack:///./src/misc/controlComponent.js","webpack:///./src/misc/filereaderComponent.js","webpack:///./src/misc/getBrowserLanguage.js","webpack:///./src/misc/extraModule.js","webpack:///./src/query/mapQueryComponent.js","webpack:///./src/statemanager/WfsPermalink.js","webpack:///./contribs/gmf/src/controllers/AbstractAppController.js","webpack:///./src/interaction/MobileDraw.js","webpack:///./src/interaction/MeasureLengthMobile.js","webpack:///./contribs/gmf/src/mobile/measure/lengthComponent.js","webpack:///./contribs/gmf/src/raster/RasterService.js","webpack:///./src/interaction/MeasurePointMobile.js","webpack:///./contribs/gmf/src/mobile/measure/pointComponent.js","webpack:///./contribs/gmf/src/mobile/measure/module.js","webpack:///./contribs/gmf/src/mobile/navigation/module.js","webpack:///./src/geolocation/mobile.js","webpack:///./contribs/gmf/src/controllers/AbstractMobileController.js","webpack:///./contribs/gmf/apps/appmodule.js","webpack:///./src/proj/EPSG2056.js","webpack:///./contribs/gmf/apps/mobile_alt/Controller.js","webpack:///./contribs/gmf/src/mobile/measure/pointComponent.html","webpack:///./contribs/gmf/src/mobile/measure/lengthComponent.html","webpack:///./src/message/displaywindowComponent.html","webpack:///./contribs/gmf/src/theme/selectorComponent.html","webpack:///./contribs/gmf/src/search/component.html","webpack:///./src/misc/colorpickerComponent.html","webpack:///./contribs/gmf/src/query/windowComponent.html","webpack:///./contribs/gmf/src/query/gridComponent.html","webpack:///./src/grid/component.html","webpack:///./contribs/gmf/src/map/mousepositionComponent.html","webpack:///./contribs/gmf/src/map/component.html","webpack:///./src/map/scaleselector.html","webpack:///./contribs/gmf/src/permalink/shareComponent.html","webpack:///./contribs/gmf/src/layertree/timesliderComponent.html","webpack:///./contribs/gmf/src/layertree/component.html","webpack:///./src/layertree/component.html","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.html","webpack:///./contribs/gmf/src/filters/filterselectorcomponent.html","webpack:///./src/filter/component.html","webpack:///./src/filter/rulecomponent.html","webpack:///./src/misc/datepickerComponent.html","webpack:///./src/message/popupcomponent.html","webpack:///./contribs/gmf/src/backgroundlayerselector/component.html","webpack:///./contribs/gmf/src/authentication/component.html"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","condition","opt_message","var_args","type","__webpack_exports__","BOOLEAN","DATE","DATETIME","TIME","GEOMETRY","NUMBER","SELECT","TEXT","ANGLE","COLOR","IS_CIRCLE","IS_RECTANGLE","IS_TEXT","NAME","SHOW_LABEL","OPACITY","AZIMUT","SHOW_MEASURE","SIZE","STROKE","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_6__","$http","$injector","$q","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","ol_events_EventTarget_js__WEBPACK_IMPORTED_MODULE_5__","this","addBlankBackgroundLayer_","undefined","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","defer","promise_","promise","loaded","bgLayerPromise_","ol_index_js__WEBPACK_IMPORTED_MODULE_2__","findGroupByLayerNodeName","themes","ii","theme","jj","children","group","childNodes","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","ol_array_js__WEBPACK_IMPORTED_MODULE_3__","findThemeByName","themeName","node","nodes","getBgLayers","_this","layerHelper","callback","item","layer","set","metadata","dimensions","ids","getIds","array","forEach","child","layerLayerCreationFn","ogcServers","gmfLayer","gmfLayerWMTS","goog_asserts_js__WEBPACK_IMPORTED_MODULE_0__","assert","url","createWMTSLayerFromCapabilitites","matrixSet","then","response","message","console","error","resolve","gmfLayerWMS","ogcServer","server","imageType","createBasicWMSLayer","layers","credential","fail","promiseSuccessFn","promises","background_layers","map","itemType","x","reverse","all","collection","filter","ol_Collection_js__WEBPACK_IMPORTED_MODULE_4__","createBasicGroup","layerGroupCreationFn","values","getString","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","getOgcServersObject","hasEditableLayers","hasEditableLayers_","_this2","some","hasNodeEditableLayers_","editable","getSnappingConfig","snappingConfig","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","params","role","cache_version","cache","withCredentials","errors","join","hasParam","alert","dispatchEvent","reject","NodeType","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","WMS","angular","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_1__","service","options","_classCallCheck","_possibleConstructorReturn","_ngeoDatasourceDataSo","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","ngeo_filter_Condition_js__WEBPACK_IMPORTED_MODULE_2__","AND","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","geometryName","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","queryable","_iterator","_isArray","Array","isArray","_i","iterator","_ref","next","done","ogcLayer","wfsFormat","supportsWFS","format","ol_format_GML3_js__WEBPACK_IMPORTED_MODULE_5__","GML2","ol_format_GML2_js__WEBPACK_IMPORTED_MODULE_4__","ol_format_WFS_js__WEBPACK_IMPORTED_MODULE_6__","featureNS","featureType","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","ol_format_WMSGetFeatureInfo_js__WEBPACK_IMPORTED_MODULE_7__","wmsFormat_","_inherits","getAttributes","attributes","setAttributes","updateGeometryNameFromAttributes_","combinableWithDataSourceForWFS","dataSource","combinableForWFS","haveTheSameActiveDimensions","combinableWithDataSourceForWMS","combinableForWMS","isAnyOGCLayerInRange","res","queryableOnly","arguments","getInRangeOGCLayerNames","layerNames","_iterator2","_isArray2","_i2","_ref2","maxRes","minRes","getOGCLayerNames","_iterator3","_isArray3","_i3","_ref3","getFiltrableOGCLayerName","_iterator4","_isArray4","_i4","_ref4","attribute","ngeo_format_AttributeType_js__WEBPACK_IMPORTED_MODULE_3__","share","myActive","activeDimensions","itsActive","_createClass","time","range","lower","upper","end","start","active","config","timeRangeValue","_iterator5","_isArray5","_i5","_ref5","ngeo_datasource_DataSource_js__WEBPACK_IMPORTED_MODULE_1__","guessServiceTypeByUrl","test","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BG_LAYER","EXTERNAL_DATASOURCES_NAMES","EXTERNAL_DATASOURCES_URLS","FEATURES","MAP_CROSSHAIR","MAP_TOOLTIP","MAP_X","MAP_Y","MAP_Z","TREE_GROUPS","WFS_LAYER","WFS_NGROUPS","WFS_SHOW_FEATURES","ol_events_Event_js__WEBPACK_IMPORTED_MODULE_1__","detail","ol_index_js__WEBPACK_IMPORTED_MODULE_0__","showMessage","show","getMessageObjects","ERROR","info","INFORMATION","success","SUCCESS","warn","WARNING","opt_type","msgObjects","msgObject","defaultType","msg","ol_layer_Layer_js__WEBPACK_IMPORTED_MODULE_5__","$scope","$rootScope","$attrs","isRoot","nodeExpr","rootScope_","properties","state_","$watch","newVal","oldVal","$eval","mapExpr","parent","$parent","$on","index","indexOf","uid","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","assertString","treeCtrl","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_4__","dataSource_","ngeo_misc_decorate_js__WEBPACK_IMPORTED_MODULE_1__","layerLoading","ol_events_js__WEBPACK_IMPORTED_MODULE_3__","$broadcast","listenersExpr","listenersexprExpr","treeScope","getState","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","getFirstParentTree","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","val","getLayers","getArray","addLayer","removeLayer","getDataSource","setDataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","traverseDepthFirst","visitor","controller","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_6__","geometry","multiGeom","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_5__","ol_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_2__","appendPoint","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_1__","ol_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_3__","appendLineString","ol_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_4__","appendPolygon","navigator","userAgent","hex","rgb","g","b","Error","colorZeroPadding","toString","queryString","queryData","substring","split","pair","indexOfEquals","decodeURIComponent","queryItem","encodeURIComponent","event","ol_events_condition_js__WEBPACK_IMPORTED_MODULE_0__","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_6__","featureUidToGroupIndex_","groups_","source_","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_5__","useSpatialIndex","layer_","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_3__","source","style","styleFunction_","updateWhileAnimating","updateWhileInteracting","addFeature","feature","groupIndex","featureUid","features","removeFeature","clear","ol_obj_js__WEBPACK_IMPORTED_MODULE_4__","getLayer","getFeatureOverlay","styleFunction","ngeo_map_FeatureOverlay_js__WEBPACK_IMPORTED_MODULE_1__","init","setMap","setStyle","defaultFunction","resolution","$filter","$filter_","gettextCatalog_","ngeo_misc_Time_js__WEBPACK_IMPORTED_MODULE_1__","formatTimeValue","opt_useISOFormat","opt_toUTC","date","Date","utc","yearResolution","monthResolution","dayResolution","toISOString","replace","formatWMSTimeParam","wmsTimeProperty","times","ol_source_Tile_js__WEBPACK_IMPORTED_MODULE_6__","interaction","assertInstanceof","ol_interaction_Interaction_js__WEBPACK_IMPORTED_MODULE_1__","getActive","setActive","ol_layer_Base_js__WEBPACK_IMPORTED_MODULE_2__","configurable","getVisible","setVisible","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_3__","on","olEvent","element","ol_layer_Layer_js__WEBPACK_IMPORTED_MODULE_4__","getSource","ol_source_Image_js__WEBPACK_IMPORTED_MODULE_5__","$applyAsync","ol_obj_js__WEBPACK_IMPORTED_MODULE_9__","$timeout","ngeoNotification","gmfThemes","ngeoStateManager","$timeout_","$injector_","ngeoNotification_","gmfThemes_","root","rootCtrl","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","ngeoStateManager_","ogcServers_","ol_events_js__WEBPACK_IMPORTED_MODULE_8__","handleThemesChange_","refreshFirstLevelGroups_","setFirstLevelGroups","firstLevelGroups","deleteParam","gmf_index_js__WEBPACK_IMPORTED_MODULE_0__","PermalinkParam","addFirstLevelGroups","opt_add","opt_silent","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","groups","treeGroupsParam","updateState","cleanParams","alreadyAdded","groupID","id","rootChild","grp","cancel","unshift","addGroupByName","groupName","_this4","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_1__","addGroupByLayerName","layerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_3__","removeGroup","found","removeAll","cloneGroupNode_","names","clone","toggleNodeCheck_","_this6","childNode","isChecked","ol_array_js__WEBPACK_IMPORTED_MODULE_7__","notify","ngeo_message_Message_js__WEBPACK_IMPORTED_MODULE_4__","correspondingTreeCtrl","getOgcServer","mixed","goog_asserts_js__WEBPACK_IMPORTED_MODULE_2__","firstLevelGroupCtrl","gmfGroup","_this7","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this8","isExpanded","isLegendExpanded","nodeElement","$","hasClass","legendElement","is","_this9","ngeo_message_Notification_js__WEBPACK_IMPORTED_MODULE_5__","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_6__","ol_uri_js__WEBPACK_IMPORTED_MODULE_10__","ngeoTilesPreloadingLimit","tilesPreloadingLimit_","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","LAYERS","olServerType","ol_source_ImageWMS_js__WEBPACK_IMPORTED_MODULE_7__","serverType","crossOrigin","updateParams","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_4__","createBasicWMSLayerFromDataSource","visible","capabilitiesURL","opt_matrixSet","opt_dimensions","parser","ol_format_WMTSCapabilities_js__WEBPACK_IMPORTED_MODULE_2__","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_5__","preload","read","ol_source_WMTS_js__WEBPACK_IMPORTED_MODULE_9__","ol_obj_js__WEBPACK_IMPORTED_MODULE_6__","updateDimensions","setSource","ol_array_js__WEBPACK_IMPORTED_MODULE_1__","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","Infinity","opt_layers","setLayers","getGroupFromMap","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","sublayers","getWMTSLegendURL","styles","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","isLayerVisible","currentResolution","getView","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","ol_source_TileWMS_js__WEBPACK_IMPORTED_MODULE_8__","getParams","Math","random","setZIndexToFirstLevelChildren","ZIndex","innerLayer","setZIndex","updateWMSLayerState","getQuerySourceIds","NOT","OR","collection_","ol_Collection_js__WEBPACK_IMPORTED_MODULE_2__","map_","listenerKeys_","handleDataSourcesAdd_","bindMap_","view","handleViewResolutionChange_","assertNumber","syncDataSourcesToResolution_","unbindMap_","evt","target","ol_View_js__WEBPACK_IMPORTED_MODULE_4__","syncDataSourceToResolution_","supportsDynamicInRange","inRange","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_2__","gmfTreeManagerModeFlush","gmfTreeManager","$rootScope_","modeFlush","gmfTreeManager_","themeName_","addTheme","setThemeName","getThemeName","isLoading","$emit","EventType","THEME_NAME_SET","gmf_layertree_TreeManager_js__WEBPACK_IMPORTED_MODULE_0__","inRange_","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","ngeoWMSTime","ngeoWMSTime_","ogcServersObject_","ogcServersObject","sync_","createLayer","dataLayerGroup","opt_position","createGroup_","createLeafInAMixedGroup_","initGmfLayerInANotMixedGroup_","opacity","updateLayerState_","goog_asserts_js__WEBPACK_IMPORTED_MODULE_1__","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_5__","groupNode","isFirstLevelGroup","printNativeAngle","createLayerFromGroup_","position","insertAt","isOneParentNotMixed_","timeParam","getTimeParam_","hasActiveChildren","ctrl","updateLayerReferences_","createWMTSLayer_","checked","leafNode","firstLevelGroup","getFirstLevelGroupCtrl_","newLayer","ol_index_js__WEBPACK_IMPORTED_MODULE_4__","querySourceIds","disclaimer","disclaimers","wmsTime","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_2__","timeValues","getOptions","isOneParentNotMix","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_0__","ngeo_misc_WMSTime_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_statemanager_Location_js__WEBPACK_IMPORTED_MODULE_1__","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","match","localStorage","getParam","err","getInitialValue","getInitialStringValue","getInitialNumberValue","parseFloat","getInitialBooleanValue","RegExp","ol_index_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_message_Message_js__WEBPACK_IMPORTED_MODULE_2__","timeout_","container","document","body","append","container_","cache_","DEFAULT_DELAY_","clearMessageByCacheItem_","parseInt","classNames","el","html","addClass","delay","createDate","defaultValue","getTime","minDate","minValue","maxDate","maxValue","minDefaultDate","minDefValue","maxDefaultDate","maxDefValue","defaultValues","getUTCDate","localDate","getUTCFullYear","getUTCMonth","ol_events_js__WEBPACK_IMPORTED_MODULE_0__","manager","manager_","features_","index_","setFeatures","handleFeatureAdd_","handleFeatureRemove_","dataSourcesCollection_","ol_Collection_js__WEBPACK_IMPORTED_MODULE_1__","dataSources","title_","title","destroy","getDataSourceState","VisibilityState","ON","OFF","addDataSource","removeDataSource","remove","toggleVisibilityState","visibleToSet","visibilityState","INDETERMINATE","factory_","func","wait","invokeApply","timeout","_len","args","_key","context","factory","addListenerKey","initListenerKey_","clearListenerKey","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_1__","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","hash","replaceState","getPath","getUriString","out","String","charAt","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","isNaN","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","keys","getFragmentParamKeys","getParamKeysWithPrefix","prefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","$window","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","authenticationBaseUrl","gmfUser","_olEventsEventTarget","baseUrl_","user_","noReloadRole_","load_","$inject","RouteSuffix","IS_LOGGED_IN","handleLogin_","changePassword","oldPwd","newPwd","confPwd","CHANGE_PASSWORD","post","param","oldPassword","newPassword","confirmNewPassword","headers","Content-Type","is_password_changed","$digest","login","pwd","LOGIN","password","logout","noReload","LOGOUT","resetUser_","resetPassword","RESET_PASSWORD","successFn","resp","getFunctionalities","functionalities","getRoleId","role_id","checkingLoginStatus","respData","setUser_","ngeo_CustomEvent_js__WEBPACK_IMPORTED_MODULE_0__","user","emitEvent","username","role_name","gmfShortenerCreateUrl","gmfShortenerCreateUrl_","getShortUrl","postShortUrl_","short_url","status","sendShortUrl","shortUrl","email","URL_MAX_LEN","URL_PATH_MAX_LEN","datasource_File","featuresCollection_","Collection","source_Vector","wrapX","Vector","getExtent","DataSource","FileGroup","FileGroup_classCallCheck","FileGroup_possibleConstructorReturn","_ngeoDatasourceGroup","injector","unregister_","FileGroup_inherits","goog_asserts_prod","registerDataSource_","handleDataSourceVisibleChange_","oldValue","unregisterDataSource_","Group","OGCGroup","OGCGroup_classCallCheck","OGCGroup_possibleConstructorReturn","url_","OGCGroup_inherits","OGCGroup_createClass","WMSGroup","WMSGroup_classCallCheck","WMSGroup_possibleConstructorReturn","_ngeoDatasourceOGCGro","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","WMSGroup_inherits","OGC","updateLayer_","concat","unregister","WMSGroup_createClass","ExternalDataSourcesManager_exports","ngeoDataSources","ngeoFile","ExternalDataSourcesManager_classCallCheck","injector_","q_","dataSources_","ngeoFile_","extDataSources_","files_","fileGroup_","wmsGroupsCollection_","wmtsGroupsCollection_","wmtsCache_","events","handleDataSourcesRemove_","addWMSGroup_","wmsGroup","wmsGroupsCollection","removeWMSGroup_","getWMSGroup","wmsGroups","addWMTSGroup_","wmtsGroup","wmtsGroupsCollection","removeWMTSGroup_","getWMTSGroup","wmtsGroups","isExternalDataSource","addLayer_","layerGroup","removeLayer_","createAndAddDataSourceFromWMSCapability","getId","req","formats","includes","createAndAddDataSourceFromWMTSCapability","layerObj","handleWMTSDataSourceVisibleChange_","createAndAddDataSourceFromFile","file","getFileDataSource_","fileGroup","fit","extent","rejections","content","readOptions","featureProjection","getProjection","isKml","KML","readFeatures","isGpx","GPX","removeFileDataSource_","removeOGCDataSource_","ExternalDataSourcesManager_createClass","src","EXTERNALLAYERGROUP_NAME","ol","LayerHelper","File","DataSources","proj4_projections_somerc_js__WEBPACK_IMPORTED_MODULE_1__","proj4__WEBPACK_IMPORTED_MODULE_0__","Proj","projections","add","proj4__WEBPACK_IMPORTED_MODULE_3__","epsg21781def","ngeo_proj_somerc_js__WEBPACK_IMPORTED_MODULE_2__","defs","ol_proj_proj4_js__WEBPACK_IMPORTED_MODULE_1__","ol_proj_js__WEBPACK_IMPORTED_MODULE_0__","setExtent","ol_extent_js__WEBPACK_IMPORTED_MODULE_1__","stringToCoordinates","str","coords","y","getProjectionList","projectionsCodes","code","proj","projection","toUpperCase","substr","tryProjections","coordinates","viewProjection","opt_projections","e","tryProjectionsWithInversion","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_0__","defaultParams_","query","queryParams","assign","Promise","catch","ngeo_datasource_DataSources_js__WEBPACK_IMPORTED_MODULE_0__","gmfLayertreeDatasourceGroupTreeTemplateUrl","run","$templateCache","put","templateUrl","Controller_","_class","scope_","getGroupUid","ol_index_js__WEBPACK_IMPORTED_MODULE_1__","toggle","toggleDataSource","component","bindings","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_statemanager_Location_js__WEBPACK_IMPORTED_MODULE_0__","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_24__","ngeoDebounce","ngeoEventHelper","mapViewPropertyChangeEventKey_","ngeoDebounce_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","ngeoFeatureOverlayMgr","featureOverlay_","featureHelper_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","gmfUser_","ngeoAutoProjection_","sourceProjections_","projectionCodes","crosshairFeature_","crosshairStyle_","crosshairStyle","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_23__","image","ol_style_RegularShape_js__WEBPACK_IMPORTED_MODULE_22__","stroke","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_21__","color","width","points","radius","radius2","angle","mapTooltip_","featureHashFormat_","ngeo_format_FeatureHash_js__WEBPACK_IMPORTED_MODULE_8__","encodeStyles","propertiesType","fillColor","ngeo_format_FeatureProperties_js__WEBPACK_IMPORTED_MODULE_9__","fillOpacity","fontColor","fontSize","isBox","isCircle","isLabel","pointRadius","showLabel","showMeasure","strokeColor","strokeWidth","ol_events_js__WEBPACK_IMPORTED_MODULE_18__","handleBackgroundLayerManagerChange_","goog_asserts_js__WEBPACK_IMPORTED_MODULE_15__","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","TREE_OPACITY","TREE_GROUP_OPACITY","getFeatures","addNgeoFeature_","extend","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","gmf_theme_Manager_js__WEBPACK_IMPORTED_MODULE_1__","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","registerExternalDSGroup_","initLayers_","getMapCenter","center","targetProjection","reprojectedCenter","getMapZoom","zoom","getMapCrosshair","crosshair","setMapCrosshair","opt_center","crosshairCoordinate","getCenter","assertArray","ol_Feature_js__WEBPACK_IMPORTED_MODULE_19__","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_20__","getMapTooltip","setMapTooltip","tooltipText","tooltipPosition","div","class","text","removeOverlay","ngeo_Popover_js__WEBPACK_IMPORTED_MODULE_3__","addOverlay","f","setDimensions","DIMENSIONS","$watchCollection","unregisterMap_","getFeature","registerMap_","oeFeature","getGeometry","size","getSize","ngeo_olcs_constants_js__WEBPACK_IMPORTED_MODULE_7__","Permalink3dParam","ENABLED","setCenter","setZoom","getZoom","round","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","defaultThemeNameFromFunctionalities","default_theme","groupsNames","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_2__","enable","groupLayers","groupLayersArray","ol_array_js__WEBPACK_IMPORTED_MODULE_17__","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_14__","removeNgeoFeature_","ol_index_js__WEBPACK_IMPORTED_MODULE_16__","handleNgeoFeaturesChange_","writeFeatures","wfsLayer","numGroups","WFS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","wfsType","showFeatures","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","urlsString","ExtDSSeparator","LIST","urls","groupLayerNamesString","groupLayerNames","NAMES","serviceType","ngeo_datasource_OGC_js__WEBPACK_IMPORTED_MODULE_6__","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","wmsFindLayerCapability","_iterator6","_isArray6","_i6","_ref6","wmtsFindLayerCapability","ngeo_datasource_Group_js__WEBPACK_IMPORTED_MODULE_5__","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iterator7","_isArray7","_i7","_ref7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iterator8","_isArray8","_i8","_ref8","wmsGroupLayerNames","_iterator10","_isArray10","_i10","_ref10","wmsDataSource","_iterator9","_isArray9","_i9","_ref9","wmtsGroupLayerNames","_iterator11","_isArray11","_i11","_ref11","wmtsDataSource","_iterator12","_isArray12","_i12","_ref12","startsWith","_iterator14","_isArray14","_i14","_ref14","_iterator15","_isArray15","_i15","_ref15","_iterator13","_isArray13","_i13","_ref13","ngeo_draw_features_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_misc_debounce_js__WEBPACK_IMPORTED_MODULE_10__","ngeo_misc_EventHelper_js__WEBPACK_IMPORTED_MODULE_11__","ngeo_statemanager_module_js__WEBPACK_IMPORTED_MODULE_12__","OpenLayersLayerProperties","regexp","key1","key2","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_13__","attrs","component_","ngeoDatePickerTemplateUrl","scope","onDateSelected","bindToController","restrict","link","lang","getCurrentLanguage","sdateOptions","initialMinDate","initialMaxDate","onClose","selectedDate","find","datepicker","edateOptions","dp","css","stopPropagation","directive","ngeoTime","ngeoTime_","isModeRange","changeMonth","changeYear","sdate","edate","$watchGroup","newDates","oldDates","sDate","eDate","isDate","initialOptions_","ol_Collection_js__WEBPACK_IMPORTED_MODULE_0__","gettext","fileReader","canceler","isValidFileSize","fileSize","isWmsGetCap","fileContent","isWmtsGetCap","readyState","FileReader","LOADING","abort","onload","onerror","reason","onprogress","readAsText","load","opt_cancelP","FeatureHashStyleType","LINE_STRING","POINT","POLYGON","FeatureHash_exports","opt_options","TextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","propertiesFunction_","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","StyleTypes_","LineString","Point","Polygon","MultiLineString","MultiPoint","MultiPolygon","readFeature","readGeometry","writeFeature","writeGeometry","CHAR64_","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","geometryType","encodedStyles","styleType","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","Circle","getRadius","encodeStyleFill_","opt_propertyName","propertyName","getColor","fillColorRgba","fillColorHex","utils","rgbArrayToHex","strokeColorRgba","strokeColorHex","getWidth","fontStyle","getFont","font","readLineStringGeometry_","flatCoordinates","decodeCoordinates_","lineString","setFlatCoordinates","GeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","readPointGeometry_","point","readMultiPointGeometry_","multiPoint","readPolygonGeometry_","rings","polygon","readMultiPolygonGeometry_","endss","polygons","multipolygon","setStyleInFeature_","getStyleProperties_","Fill","Stroke","fill","Text","Style","setStyleProperties_","FeatureProperties","setProperties","castValue_","numProperties","boolProperties","parts","keyVal","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","dx","dy","encodedCoordinates","floor","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","Feature","attributesAndStylesText","attributesText","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","getStyleFunction","getType","writeFeaturesText","geometryWriter","transformedGeometry","format_Feature","searchDirective_exports","typeaheadOptionsExpr","typeaheadOptions","typeaheadDatasetsExpr","typeahead","typeaheadListenersExpr","typeaheadListeners_","typeaheadListeners","adaptListeners_","$apply","open","close","suggestion","dataset","cursorchange","select","autocomplete","empty","datasetsempty","searchDirective","createGeoJSONBloodhound_exports","opt_filter","opt_featureProjection","opt_dataProjection","opt_remoteOptions","geojsonFormat","GeoJSON","bloodhoundOptions","remote","prepare","settings","transform","parsedResponse","featureCollection","dataProjection","datumTokenizer","queryTokenizer","Bloodhound","tokenizers","whitespace","obj","remoteOptions","createGeoJSONBloodhound","createLocationSearchBloodhound_exports","sourceProjection","EPSG21781","limit","origins","results","bbox","exec","parseBbox","geom_st_box2d","removeHtmlTags","extractName","setId","featureId","bhOptions","createLocationSearchBloodhound","module_exports","navCtrl","slid_","active_","header_","backButton_","back","back_","cls","ClassName_","ACTIVE","SLIDE","GO_BACK","slideOut","currentTarget","parents","SLIDE_OUT","removeClass","slideIn","attr","updateNavigationHeader_","click","toggleClass","BACK","nav","setTimeout","slideBack","pop","backIfActive","backDirective","require","backOnClickDirective","sortable","resetUpDragDrop","ret","handleClassName","callbackFn","callbackCtx","sortableElement","off","sortableOptions","axis","classes","ui-sortable-helper","ui","oldIndex","newIndex","Function","elem","ngeoPopoverCtrl","anchorElm","bodyElm","shown","popover","placement","dismissPopover","unbind","anchorComponent","contentComponent","hide","PopoverController_","onMouseDown","clickEvent","ngeoColorpickerTemplateUrl","colors","DEFAULT_COLORS","$element","setColor","gmf_layertree_TreeManager_js__WEBPACK_IMPORTED_MODULE_1__","gmf_search_FulltextSearch_js__WEBPACK_IMPORTED_MODULE_2__","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_misc_AutoProjection_js__WEBPACK_IMPORTED_MODULE_6__","ngeo_misc_colorpickerComponent_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_search_module_js__WEBPACK_IMPORTED_MODULE_9__","ngeo_map_FeatureOverlayMgr_js__WEBPACK_IMPORTED_MODULE_5__","ngeo_message_popoverComponent_js__WEBPACK_IMPORTED_MODULE_8__","gmfSearchTemplateUrl","gmfSearchTemplateUrl_","inputValue","placeholder","datasources","featuresStyles","clearButton","colorChooser","coordinatesProjections","additionalListeners","maxZoom","onInitCallback","SearchController_","$compile","ngeoAutoProjection","ngeoSearchCreateGeoJSONBloodhound","gmfSearchFulltextSearch","element_","compile_","fullTextSearch_","ngeoSearchCreateGeoJSONBloodhound_","styles_","highlight","datasets","displayColorPicker","listeners","$onInit","coordProj","initStyles_","getSearchStyle_","ol_obj_js__WEBPACK_IMPORTED_MODULE_13__","initDatasets_","setStyleColor","mergeListeners_","select_","close_","datasetsempty_","searchQuery","resultIndex","mapZoom","fulltextsearch_","datasource","groupValues","groupActions","filterLayername_","action","filterAction_","createDataset_","datasetTitle","groupsKey","labelKey","typeaheadDatasetOptions","createSearchCoordinates_","display","templates","header","componentScope","compile","typeaheadDataset","createAndInitBloodhound_","ttAdapter","$new","act","opt_layerName","featureLayerName","mapProjectionCode","getCode","getBloodhoudRemoteOptions_","bloodhound","ol_proj_js__WEBPACK_IMPORTED_MODULE_15__","initialize","rateLimitWait","currentLanguage","xhrFields","ol_uri_js__WEBPACK_IMPORTED_MODULE_21__","interface","suggestions","tt_source","COORDINATES_LAYER_NAME","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_20__","ol_style_RegularShape_js__WEBPACK_IMPORTED_MODULE_18__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_19__","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_17__","ol_style_Circle_js__WEBPACK_IMPORTED_MODULE_16__","customStyles","goog_asserts_js__WEBPACK_IMPORTED_MODULE_4__","ol_color_js__WEBPACK_IMPORTED_MODULE_11__","setImage","changed","setTTDropdownVisibility_","ttDropdown","onClearButton","ttmenu","inputs","blur","geom","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_12__","ol_Feature_js__WEBPACK_IMPORTED_MODULE_10__","layer_name","leaveSearch_","selectFromGMF_","actions","featureGeometry","_loop2","actionName","actionData","datasourcesActionsHaveAddLayer","groupAction","silent","fitArray","menu","opt_zoom","ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_14__","fitOptions","directive_","recenter","selected","selectedIndex","arr1","arr2","dereg1","dereg2","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_0__","ngeoLayertreeTemplateUrl","ol_Overlay_js__WEBPACK_IMPORTED_MODULE_1__","originalEl","closeEl_","contentEl_","getElement","getMap","contentEl","template","one","gmf_datasource_DataSourceBeingFiltered_js__WEBPACK_IMPORTED_MODULE_1__","gmf_datasource_ExternalDataSourcesManager_js__WEBPACK_IMPORTED_MODULE_2__","gmf_permalink_Permalink_js__WEBPACK_IMPORTED_MODULE_3__","gmf_layertree_datasourceGroupTreeComponent_js__WEBPACK_IMPORTED_MODULE_4__","gmf_layertree_SyncLayertreeMap_js__WEBPACK_IMPORTED_MODULE_5__","gmf_layertree_TreeManager_js__WEBPACK_IMPORTED_MODULE_6__","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_layertree_component_js__WEBPACK_IMPORTED_MODULE_10__","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_11__","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_12__","ngeo_misc_WMSTime_js__WEBPACK_IMPORTED_MODULE_14__","gmfLayertreeTemplate","openLinksInNewWindow","gmfDataSourceBeingFiltered","gmfExternalDataSourcesManager","gmfPermalink","gmfSyncLayertreeMap","gmfPermalink_","goog_asserts_js__WEBPACK_IMPORTED_MODULE_8__","gmfSyncLayertreeMap_","groupNodeStates_","dataLayerGroup_","DATALAYERGROUP_NAME","ngeo_misc_syncArrays_js__WEBPACK_IMPORTED_MODULE_13__","render","updateDimensions_","ol_layer_Layer_js__WEBPACK_IMPORTED_MODULE_16__","updateLayerDimensions_","ol_obj_js__WEBPACK_IMPORTED_MODULE_17__","ol_source_WMTS_js__WEBPACK_IMPORTED_MODULE_20__","ol_source_TileWMS_js__WEBPACK_IMPORTED_MODULE_19__","ol_source_ImageWMS_js__WEBPACK_IMPORTED_MODULE_18__","once","toggleActive","getNodeState","updateWMSTimeLayerState","layertreeCtrl","ngeo_datasource_OGC_js__WEBPACK_IMPORTED_MODULE_9__","getLegendIconURL","iconUrl","legendRule","gmfOgcServer","getLegendsObject","legendsObject","gmfLayerDefaultName","legendImage","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_15__","wmtsLegendURL","layersNames","scale","getScale_","getNumberOfLegendsObject","getMetersPerUnit","displayMetadata","metadataURL","gmfx","openIframePopup","afterReorder","groupNodes","currentTreeCtrls","treeCtrls","removeNode","removeAllNodes","nodesCount","getResolutionStyle","zoomToResolution","setResolution","constrainResolution","toggleNodeLegend","legendNodeId","toggleFiltrableDataSource","ds","isNodeLegendVisible","supportsCustomization","supportsLegend","supportsOpacityChange","legend","parentNode","ol_OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_5__","menuOptions","opt_overlayOptions","positioning","TOP_LEFT","clickOutListenerKey_","autoClose_","autoClose","headerEl","appendTo","actionsEl","actions_","data-name","prepend","ol_Overlay_js__WEBPACK_IMPORTED_MODULE_4__","handleActionClick_","handleMapPointerMove_","coordinate","setPosition","documentElement","handleClickOut_","ngeo_CustomEvent_js__WEBPACK_IMPORTED_MODULE_1__","closest","originalEvent","Element","contains","pixel","modalComponent_exports","ngModel","transclude","resizable","closable","$element_","$scope_","modal_","dialog","draggable","$render","modal","$viewValue","$setViewValue","$onDestroy","modalComponent","component_exports","Service","Notification","gmfAuthenticationTemplateUrl","gmfAuthenticationTemplateUrl_","allowPasswordReset","allowPasswordChange","passwordValidator","forcePasswordChange","AuthenticationController_","gmfAuthenticationService","component_classCallCheck","gmfAuthenticationService_","notification_","changingPassword","changePasswordModalShown","resetPasswordModalShown","loginVal","pwdVal","oldPwdVal","newPwdVal","newPwdConfVal","setError_","isPasswordValid","notValidMessage","changePasswordReset","resetError_","resetPasswordSuccessFn","userMustChangeItsPassword","Message","authentication_module","BackgroundLayerMgr_exports","Observable","mapUids_","BACKGROUNDLAYERGROUP_NAME","mapUid","previous","bgGroup","setAt","removeAt","CustomEvent","current","getOpacityBgLayer","setOpacityBgLayer","baseBgLayer","Layer","hasUpdates","updatedDimensions","TileWMS","ImageWMS","BackgroundLayerMgr","backgroundlayerselector_component_exports","Themes","gmfBackgroundlayerselectorTemplateUrl","opacityOptions","ngeoBackgroundLayerMgr","bgLayer","bgLayers","opacityLayer","backgroundLayerMgr_","handleDestroy_","indexOpa","findIndex","getSetBgLayerOpacity","setLayer","backgroundlayerselector_component","EnumerateAttribute_exports","gmfLayersUrl","EnumerateAttribute_classCallCheck","http_","promises_","getAttributeValues","promiseId","handleGetAttributeValues_","items","EnumerateAttribute","Attribute_exports","setGeometryType","AttributeType","geomType","Attribute","XSDAttribute_exports","XML","readFromDocument","doc","nodeType","Node","DOCUMENT_NODE","firstChild","nextSibling","ELEMENT_NODE","readFromNode","localName","elements","getElementsByTagName","readFromElementNode_","getAttribute","alias","nillable","required","setAttributeByXsdType_","enumerations","choices","restrictions","restrictionNode","maxLengths","maxLength","Number","numType","NumberType","FLOAT","INTEGER","getGeometryAttribute","geomAttribute","XSDAttribute","WFSAttribute","WFSAttribute_classCallCheck","complexTypeElements","readFromComplexTypeElement_","filters_exports","Scalify","numberFilter","filterFn","$locale","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","sign","abs","nb_decimal","log","factor","pow","decimal","unit","str_number","str_unit","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","divisor","index_max","postfix","space","NumberCoordinates","opt_fractionDigits","opt_template","fractionDigits","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","math","dms","string","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","Duration","TimeUnits","freeze","SECONDS","MINUTES","HOURS","DAYS","pluralize","amount","formattedUnit","getPlural","duration","output","remainder","misc_filters","service_exports","fileName","opt_fileType","fileType","isSafari","blob","Blob","FileSaver","GeometryType","CIRCLE","MULTI_LINE_STRING","MULTI_POINT","MULTI_POLYGON","RECTANGLE","Measure_exports","Interaction","handleEvent","handleEvent_","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","sketchFeature","continueMsg","decimals","precision","displayHelpTooltip_","displayHelpTooltip","startMsg","createElement","textContent","changeEventKey_","postcomposeEventKey_","vectorLayer_","drawInteraction_","createDrawInteraction","sketchStyle","shouldHandleDrawInteractionActiveChange_","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","updateState_","getFormattedArea","sphere","getFormattedCircleArea","circle","PI","getFormattedLength","getCoordinates","c1","ol_proj","c2","getFormattedPoint","dragging","helpMsg","dom","appendChild","getDrawInteraction","prevMap","removeInteraction","addInteraction","createMeasureTooltip_","handleMeasure","measure","coord","innerHTML","classList","setOffset","unlistenerEvent_","createHelpTooltip_","removeHelpTooltip_","Overlay","removeChild","removeMeasureTooltip_","stopEvent","getTooltipElement","Measure","common_exports","getDefaultDrawStyleFunction","getDefaultModifyStyleFunction","common","DrawAzimut_exports","Pointer","handleDownEvent","handleDownEvent_","handleUpEvent","handleUpEvent_","downPx_","started_","sketchFeature_","sketchPoint_","squaredClickTolerance_","sketchLayer_","downPx","clickPx","pass","handlePointerMove_","finishDrawing_","startDrawing_","mapBrowserEvent","modifyDrawing_","createOrUpdateSketchPoint_","updateSketchFeatures_","sketchPointGeom","setCoordinates","sketchFeatures","addFeatures","line","GeometryCollection","setGeometry","geometries","getGeometriesArray","last","setRadius","getLength","abortDrawing_","shouldStopEvent","functions","DrawAzimut","MeasureAzimut_exports","unitPrefixFormat","numberFormat","getGeometries","getFormattedAzimutRadius","Projection","getLastCoordinate","formatLength","formatAzimut","getFormattedAzimut","getAzimut","rad","acos","sqrt","MeasureAzimut","FeatureHelper_exports","decimals_","precision_","numberFormat_","unitPrefixFormat_","ngeoNumberCoordinates_","pointFilterFn_","pointFilterArgs_","filterElements","filterName","assertFunction","projection_","download_","setProjection","opt_select","getStyle","supportsVertex_","getVertexStyle","getHaloStyle_","getLineStringStyle_","getPointStyle_","getPolygonStyle_","getTextStyle_","constructor","getStrokeProperty","getShowLabelProperty","getShowMeasureProperty","getRGBAColorProperty","textLabelValues","getMeasure","getNameProperty","textLabelValue","createTextStyle_","getSizeProperty","style_Circle","offsetY","font_size","optNumber","attrib","getNumber","getOpacityProperty","azimut","getRadiusLine","offsetX","cos","sin","exceedLength","getAngleProperty","createEditingStyles","white","blue","zIndex","opt_incGeomFunc","incGeomFunc","RegularShape","innerMultiCoordinates","multiCoordinates","supported","haloSize","getFilteredFeatureValues","getColorProperty","ol_color","assertBoolean","export","formatType","FormatType","exportGPX","exportKML","export_","opt_mimeType","mimeType","clones","writeOptions","rotation","panMapToFeature","opt_panDuration","panDuration","calculateExtent","intersectsExtent","mapCenter","featureCenter","getCoordinateAt","getInteriorPoint","ol_extent","animate","endPoint","getNonSpatialProperties","nonSpatialProperties","clearNonSpatialProperties","FeatureHelper","Rule_exports","Rule_classCallCheck","expression","lowerBoundary_","lowerBoundary","operator_","operator","upperBoundary_","upperBoundary","isCustom_","isCustom","operators_","operators","propertyName_","type_","listenerKeys","getExpression","setExpression","reset","OperatorType","BETWEEN","TemporalOperatorType","DURING","EQUAL_TO","GREATER_THAN","GREATER_THAN_OR_EQUAL_TO","LESSER_THAN","LESSER_THAN_OR_EQUAL_TO","LIKE","NOT_EQUAL_TO","SpatialOperatorType","CONTAINS","INTERSECTS","WITHIN","BEGINS","ENDS","EQUALS","Rule","rule_Date","Date_classCallCheck","_ngeoRuleRule","rule_Geometry","Geometry_classCallCheck","Geometry_possibleConstructorReturn","featureProperties","feature_","format_","updatingExpression_","updatingGeometry_","geometryChangeListenerKey_","handleFeatureGeometryChange_","setGeometryFromExpression_","Geometry_inherits","registerGeometryChange_","handleGeometryChange_","Geometry","Geometry_createClass","Select","Select_classCallCheck","Select_possibleConstructorReturn","choices_","Select_inherits","Select_createClass","selectedChoices","rule_Text","Text_classCallCheck","Text_possibleConstructorReturn","Text_inherits","RuleHelper_exports","ngeoFeatureHelper","RuleHelper_classCallCheck","ngeoFeatureHelper_","createRulesFromAttributes","opt_isCustom","rules","createRuleFromAttribute","rule","createRules","optionsList","createRule","selectOptions","cloneRule","extendRule","sourceRule","destRule","serializeRules","serializeRule","createFilter","mainFilter","conditions","createFilterFromRule_","srsName","Condition","format_filter","incTime","timeFilter","createTimeFilterFromDataSource_","createFilterString","filterString","filterNode","XMLSerializer","serializeToString","opt_srsName","rot","rsot","rtot","spatialTypes","numericTypes","beginValue","endValue","moment","subtract","selectedChoice","numericExpression","stringExpression","momentEnd","startValue","WMSTime","RuleHelper","WFSDescribeFeatureType_exports","xml","PARSERS_","readElement_","objectStack","readComplexType_","COMPLEX_TYPE_PARSERS_","readComplexContent_","COMPLEX_CONTENT_PARSERS_","readExtension_","EXTENSION_PARSERS_","readSequence_","SEQUENCE_PARSERS_","NAMESPACE_URIS_","complexType","complexContent","extension","sequence","WFSDescribeFeatureType","Querent_exports","ngeoRuleHelper","Querent_classCallCheck","ngeoRuleHelper_","requestCancelers_","wmsGetCapabilitiesPromises_","wmtsGetCapabilitiesPromises_","cancelStillRunningRequests_","queryableDataSources","getQueryableDataSources","combinedWFSDataSources","getCombinableWFSDataSources_","wfs","issueCombinedWFS_","combinedWMSDataSources","getCombinableWMSDataSources_","wms","issueCombinedWMS_","handleCombinedQueryResult_","isDataSourceQueryable_","wfsDescribeFeatureType","supportsAttributes","ogcLayerNames","uri","TYPENAME","layerCapabilities","layerCapability","baseUrl","opt_cache","WMSCapabilities","WMTSCapabilities","combinedHash","dataSourceIdStr","dataSourceId","handleQueryResult_","tooManyFeatures","totalFeatureCount","readAndTypeFeatures_","setUniqueIds_","featureTypes","getSetOlFormatTypes_","opt_types","types","setFeatureType","getFeatureType","combinedDataSources","maxFeatures","wfsCount","tolerancePx","tolerance","xmlSerializer","getFeatureCommonOptions","featurePrefix","outputFormat","ol_obj","getFeatureDefer","countPromise","getCountOptions","resultType","featureCountXml","writeGetFeature","featureCountRequest","registerCanceler_","readFeatureCollectionMetadata","numberOfFeatures","getFeatureOptions","featureRequestXml","featureRequest","FEATURE_COUNT","projCode","INFO_FORMAT","activeDimensionsSet","filtrableLayerName","filterParamValue","filterParamValues","wmsSource","wmsGetFeatureInfoUrl","getGetFeatureInfoUrl","combinableDataSources","notCombinableDataSources","combined","combinableDataSource","CombinedDataSources","Querent","Helper_exports","Helper_classCallCheck","getDataSourceAttributes","wfsDescribeFeatureTypeDefer","ogcLayerName","Helper_createClass","Helper","datasource_Helper_exports","gmfEnumerateAttribute","ngeoDataSourcesHelper","datasource_Helper_classCallCheck","gmfEnumerateAttribute_","ngeoDataSourcesHelper_","prepareFiltrableDataSource","prepareFiltrableDataSourceDefer","enumAttributes","enumeratedAttributes","choice","datasource_Helper_createClass","datasource_Helper","datasource_OGC","OGC_classCallCheck","OGC_possibleConstructorReturn","_ngeoDatasourceOGC","gmfLayer_","OGC_inherits","OGC_createClass","WFSAliases_exports","WFSAliases_classCallCheck","describe","WFSAliases","Manager_exports","gmfWFSAliases","Manager_classCallCheck","ngeoDataSources_","gmfWFSAliases_","dataSourcesCache_","treeCtrlCache_","treeCtrlsUnregister_","handleNgeoBackgroundLayerChange_","setDatasourceMap","clearDataSources_","clearTreeCtrlCache_","promiseThemes","createDataSource_","promiseBgLayers","backgroundLayers","backgroundLayer","handleTreeManagerRootChildrenChange_","newTreeCtrls","newTreeCtrl","getTreeCtrlCacheItem_","addTreeCtrlToCache_","removeTreeCtrlCacheItem_","meta","queryLayers","wmsLayers","childLayers","childLayer","ogcServerName","isSingleTile","wfsSupport","urlWfs","edge","vertex","identifierAttributeField","timeAttribute","stateWatcherUnregister","handleTreeCtrlStateChange_","filterRulesWatcherUnregister","hasFilters","isVisible","handleDataSourceFilterRulesChange_","timeLowerValueWatcherUnregister","timeUpperValueWatcherUnregister","wmsLayer","handleDataSourceTimeValueChange_","SyncLayertreeMap","Image","treeDataSource","siblingDataSourceIds","_source$updateParams","Tile","layersList","previousBackgroundLayer","currentBackgroundLayer","TreeManager","Manager","datasource_module","DataSourceBeingFiltered","ExternalDataSourcesManager","popupComponent_exports","ngeoPopupTemplateUrl","preventDefault","popupComponent","Popup_exports","autoDestroy_","sce_","getOpen","setOpen","$destroy","setTitle","trustedTitle","setContent","opt_trusted","setUrl","setWidth","setHeight","height","setSize","setAutoDestroy","autoDestroy","Factory","Popup","Disclaimer_exports","ngeoCreatePopup","createPopup_","messages_","closeMessage_","getMessageUid_","popup","button","Disclaimer","disclaimer_component_exports","EventHelper","ngeoDisclaimer","external","visibility","msgs_","disclaimer_","eventHelper_","registerLayer_","handleLayersAdd_","Base","handleLayersRemove_","unregisterLayer_","layerUid","showDisclaimerMessage_","closeDisclaimerMessage_","disclaimer_component","SavedFilters_exports","SavedFilters_classCallCheck","currentDataSourceId_","currentDataSourceItems_","localStorageKey_","items_","rePopulateCurrentDataSourceItems_","loadItemsFromLocalStorage_","JSON","parse","indexOfItem","idx","save","saveItemsInLocalStorage_","stringify","SavedFilters_createClass","Item","customRules","directedRules","SavedFilters","MapQuerent_exports","ngeoQueryResult","MapQuerent_classCallCheck","result_","limit_","queryCountFirst_","queryCountFirst","tolerancePx_","dataSourceNames_","pending","handleResult_","total","sources","queried","tooManyResults","idStr","querentResultItem","typeSeparatedFeatures","filteredProperties","unset","featuresByType","MapQuerent","btnComponent_exports","btnGroupComponent_","$parse","buttons_","buttonModel","newValue","BtnGroupController","activate","expressionFn","addButton","btnComponent_","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","btnComponent","Controller_exports","ngeoFeatures","interactions_","drawPoint","measureLength","measureArea","measureAzimut","drawRectangle","drawText","registerInteraction","decorate","handleActiveChange","handleDrawEnd","sketch","prop","draw_features","Controller","point_exports","drawFeatureCtrl","Draw","draw_point","rectangle_exports","geometryFunction","maxPoints","rectangle","text_exports","draw_text","MeasureArea_exports","br","MeasureArea","area_exports","contMsg","measure_area","azimut_exports","measure_azimut","MeasureLength_exports","MeasureLength","length_exports","measure_length","draw_component_exports","draw_component","ModifyCircle_exports","handleDragEvent","handleDragEvent_","vertexFeature_","lastPixel_","modified_","rBush_","RBush","pixelTolerance_","pixelTolerance","snappedToVertex_","changingFeature_","dragSegments_","overlay_","addFeature_","writeCircleGeometry_","handlePointerAtPixel_","willModifyFeatures_","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","segment","segmentData","insert","createOrUpdateVertexFeature_","vertexFeature","compareIndexes_","vertexExtent","segmentDataMatches","getInExtent","componentSegments","sort","segmentDataMatch","ol_coordinate","setGeometryCoordinates_","MapBrowserPointerEvent","getInteracting","handlingDownUpSequence","pixelCoordinate","getCoordinateFromPixel","lowerLeft","upperRight","box","closestSegment","vertexPixel","getPixelFromCoordinate","pixel1","pixel2","squaredDist1","squaredDist2","dist","min","vertexSegments","ModifyCircle","ModifyRectangle_exports","handleDown_","handleDrag_","handleUp_","vectorPoints_","params_","featureGeom","pointSource","corners","pointFeatures","cornerPoint","cornerFeature","corner","siblingX","siblingY","boxFeature","previousFeature","nextFeature","initializeParams_","origin","originPoint","originCoordinate","originPixel","siblingXPoint","siblingXCoordinate","siblingXPixel","vectorX","vectorXMagnitude","siblingYPoint","siblingYCoordinate","siblingYPixel","vectorY","vectorYMagnitude","forEachFeatureAtPixel","destinationPixel","b2Pixel","calculateNewPixel_","b2Coordinate","c2Pixel","c2Coordinate","destination","vector","aVector","abScalarProduct","deltaVector","ModifyRectangle","Modify_exports","otherFeatures_","Modify","deleteCondition","circleFeatures_","rectangleFeatures_","setState_","interactions","currentMap","handleFeaturesAdd_","handleFeaturesRemove_","getFeatureCollection_","isRectangle","interaction_Modify","Rotate_exports","keyPressListenerKey_","coordinate_","centerCoordinate_","centerFeatures_","handleKeyUp_","getCenterCoordinate_","centerFeature","getFlatMidpoint","getFlatInteriorPoint","oldX","oldY","centerX","centerY","dx1","dy1","dx0","dy0","a0","atan2","rotate","keyCode","Rotate","Translate_exports","featureListenerKeys_","myFeatures_","vectorSource_","Translate","getTargetElement","cursor","getGeometryCenterPoint_","interaction_Translate","ToolActivate","toolContext","activePropertyName","ToolActivateMgr_exports","registerTool","tool","opt_defaultActivate","entries","unlisten","deactivateTools_","activateDefault_","defaultTool","ENABLE_ASSERTS","defaultTools","entry","unregisterTool","unregisterGroup","activateTool","deactivateTool","hasActiveTool","ToolActivateMgr","ruleComponent_exports","FeatureOverlay","datepickerComponent","ngeoRuleTemplateUrl","RuleController_","ngeoToolActivateMgr","_operators","_operatorsShortFormat","ruleComponent_classCallCheck","featureOverlay","toolGroup","ngeoToolActivateMgr_","operatorType","spatialOperatorType","temporalOperatorType","operatorsShortFormat","timeRangeMode","widget","createDate_","createWeekAgoDate_","interval","timeValueMode","toolActivate_","unlisteners_","drawActive","drawToolActivate","drawnFeatures","menu_","selectedFeatures","modify_","rotate_","translate_","initializeInteractions_","modifyToolActivate","rotateToolActivate","translateToolActivate","handleActiveChange_","supportedTypes","hasExpression","isActive","editToolIsActive","toggleChoiceSelection","onDateRangeSelected","opt_timeDelta","setTime","timeToDate","toLocaleDateString","oldActive","toolMgr","ruleFeature","cloneFeature","mapDiv","getViewport","assertElement","handleMapContextMenu_","handleTranslateEnd_","handleRotateEnd_","registerInteractions_","unregisterInteractions_","drawnFeature","getRuleGeometryType","removeMenu_","getEventPixel","Menu","handleMenuActionClick_","ruleComponent","filter_component_exports","ngeoFilterTemplateUrl","aRuleIsActive","FilterController_","ngeoMapQuerent","filter_component_classCallCheck","ngeoMapQuerent_","geometryAttributes","otherAttributes","ruleUnlisteners_","handleARuleIsActiveChange_","registerRule_","hasARule","getRulesWithValue_","getData","createAndAddCustomRule","setCondition","removeCustomRule","unregisterRule_","handleRuleActiveChange_","unlistener","filter_component","filterselectorComponent_exports","FeatureOverlayMgr","gmfFilterselectorTemplateUrl","gmfDataSourcesHelper","gmfSavedFilters","filterselectorComponent_classCallCheck","handleSelectedDataSourceChange_","gmfDataSourcesHelper_","currentDataSourceItems","saveFilterManageModalShown","handleGmfUserFunctionalitiesChange_","filtrableDataSources","filtrableLayerNodeNames_","gmfDataSources_","readyDataSource","ruleCache_","saveFilterSaveModalShown","saveFilterName","enableDataSourceRegistration_","handleEnableDataSourceRegistrationChange_","defaultFiltrableDataSourceName_","toggleDataSourceRegistration_","usrFunc","newDataSourceRegistration","register","isDataSourceFiltrable_","opt_notify","msgs","p1","p2","p3","currentDataSourceId","getRuleCacheItem_","setRuleCacheItem_","directedFilterAttributes","directedAttributes","saveFilterShowModal","saveFilterSave","alreadyExist","confirm","saveFilterLoadItem","filterItem","cacheItem","saveFilterManage","saveFilterRemoveItem","RuleCache","RuleCacheItem","filterselectorComponent","filters_module","timeSliderComponent_exports","pre","computeDates_","sliderUi","wmstime","getClosestValue_","dates","sliderOptions","timeValueList","getTimeValueList_","max","endDate","setFullYear","getFullYear","setMonth","getMonth","getDate","setSeconds","getSeconds","nextDate","timestamp","leftIndex","rightIndex","leftDistance","rightDistance","targetDate","startDate","bestDate","bestDistance","distance","getLocalizedDate","timeSliderComponent","layertree_module","layertree_component","datasourceGroupTreeComponent","shareComponent_exports","ShareService","Location","gmfPermalinkShareTemplateUrl","enableEmail","shareComponent_ShareComponentController","ShareComponentController","gmfShareService","shareComponent_classCallCheck","gmfShareService_","shortLink","permalink_","showLengthWarning","successfullySent","errorOnsend","errorOnGetShortUrl","when","permalink","$valid","shareComponent","permalink_module","Permalink","Snapping_exports","mapViewChangePromise_","ensureSnapInteractionsOnTop","unregisterAllTreeCtrl_","registerTreeCtrl_","handleMapMoveEnd_","wfsConfig","getWFSConfig_","requestDeferred","deactivateItem_","layertree_Controller","activateItem_","Snap","loadItemFeatures_","loadAllItems_","Snapping","map_component_exports","Map","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","map_component","resizemap_exports","stateExpr","animationDelayKey","animationDelay","cancelAnimationFrame","resizemap","scaleselector_exports","ngeoScaleselectorTemplateUrl","scaleselector_ScaleselectorController","ScaleselectorController","scalesExpr","scales","zoomLevels","newLength","optionsExpr","getOptions_","resolutionChangeKey_","currentScale","currentZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","scaleselector","map_module","src_map_component_exports","manageResize","gmfSnapping","ngeoFeatureOverlayMgr_","gmfSnapping_","src_map_component","mousepositionComponent_exports","gmfMapMousepositionTemplateUrl","control_","initOlControl_","removeControl","MousePosition","className","coordinateFormat","filterAndArgs","undefinedHTML","addControl","mousepositionComponent","src_map_module","Csv_exports","encoding_","extension_","includeHeader_","quote_","separator_","generateCsv","columnDefs","translatedColumnHeaders","columnHeader","getRow_","dataRows","rowValues","matchAllQuotesRegex","doubleQuote","startDownload","Csv","Config_exports","selectedRows","getRowUid","isRowSelected","getSelectedCount","getSelectedRows","row","selectRow","toggleRow","selectAll","unselectAll","rowId","invertSelection","Config","grid_component_exports","ngeoGridTemplateUrl","configuration","sortedBy","sortAscending","floatTheadConfig","scrollContainer","$table","columnName","asc","attributes1","attributes2","clickRow","shiftKey","isShiftKeyOnly_","platformModifierKey","isPlatformModifierKeyOnly_","clickRow_","selectRange_","isSelected","targetUid","posClickedRow","posSelectedRows","currentRow","posClosestRow","currentPos","currentDistance","rangeEnd","preventTextSelection","altKey","metaKey","ctrlKey","grid_component","gridComponent_exports","gmfDisplayquerygridTemplateUrl","featuresStyleFn","selectedFeatureStyleFn","getMapFn","removeEmptyColumnsFn","maxResultsFn","maxRecenterZoomFn","mergeTabs","ngeoCsvDownload","queryOptions","ngeoCsvDownload_","maxResults","gridSources","loadedGridSources","selectedTab","removeEmptyColumns_","maxRecenterZoom","featuresForSources_","highlightFeatures_","filename_","newQueryResult","oldQueryResult","updateData_","unregisterSelectWatcher_","featuresOverlay","featuresStyle","highlightFeaturesOverlay","highlightFeatureStyle","mapFn","getGridSources","sourceLabel","hasOneWithTooManyResults_","getMergedSources_","makeGrid_","escapeValue","collectData_","firstSourceId","selectTab","isInteger","toEscape","gridSource","allSources","mergedSources","mergedSourceId","getMergedSource_","mergeSourceId","currentMergeSourceId","mergeSource","allProperties","featureGeometriesNames","featuresForSource","featureGeometryName","cleanProperties_","removeEmptyColumnsFn_","keysToKeep","keyToRemove","gridConfig","getGridConfiguration_","ol_uid","column","newSelected","oldSelectedRows","onSelectionChanged_","updateFeatures_","reflowGrid_","activePane","getActiveGridSource","isOneSelected","getSelectedRowCount","zoomToSelection","downloadCsv","gridComponent","swipe_exports","POINTER_EVENTS","mouse","move","touch","pointer","touches","changedTouches","clientX","clientY","getEvents","pointerTypes","eventType","pointerType","eventName","eventHandlers","totalX","totalY","startCoords","lastPos","makeSwipeDirective_","directiveName","direction","$verticalSwipe","MAX_HORIZONTAL_DISTANCE","MAX_HORIZONTAL_RATIO","MIN_VERTICAL_DISTANCE","swipeHandler","valid","isDefined","deltaY","deltaX","validSwipe","triggerHandler","$event","swipe","windowComponent_exports","gmfDisplayquerywindowTemplateUrl","$animateProvider","classNameFilter","draggableContainment","defaultCollapsedFn","desktop","showUnqueriedLayers","collapsed","showUnqueriedLayers_","sourcesFilter","selectedSource","currentResult","isNext","updateQueryResult_","containment","minHeight","minWidth","setCurrentResult_","collectFeatures_","highlightCurrentFeature_","setHighlight","hasChanged","lastFeature","getResultLength","animate_","queryResult","isFirst","isLast","getFeatureValues","opt_lastFeature","setSelectedSource","windowComponent","extraModule","search_module","search_component","FulltextSearch","selectorComponent_exports","theme_Manager","gmfThemeSelectorTemplateUrl","gmfThemeManager","setThemes_","setTheme","selectorComponent","theme_module","displaywindowComponent_exports","ngeoMessageDisplaywindowTemplateUrl","displaywindowComponent_classCallCheck","clearOnClose","contentTemplate","contentScope","handle","compiled","clear_","displaywindowComponent_createClass","trustAsResourceUrl","displaywindowComponent","controlComponent_exports","control","Control","controlComponent","filereaderComponent_exports","changeEvent","files","filereaderComponent","getBrowserLanguage_exports","availableLanguages","browserLanguages","languages","language","browserLanguage","systemLanguage","userLanguage","arr","getBrowserLanguage","misc_extraModule","AutoProjection","debounce","sortableComponent","Time","mapQueryComponent_exports","clickEventKey_","pointerMoveEventKey_","handleMapClick_","hit","forEachLayerAtPixel","sourceids","cursorHover","mapQueryComponent","WfsPermalink_WfsPermalinkService","ngeoWfsPermalinkOptions","maxFeatures_","wfsTypes_","wfsTypes","defaultFeatureNS_","defaultFeatureNS","defaultFeaturePrefix_","defaultFeaturePrefix","pointRecenterZoom_","pointRecenterZoom","clearResult_","typeName","createFilters_","issueRequest_","getExtent_","padding","resultSource","reduce","or_","filterDef","cond","equalTo","and_","joinFilters_","joinFn","combinedFilters","currentFilter","WfsPermalink","AbstractAppController_exports","gmfAuthentication","updateHasEditableLayers_","userChange","roleId","open_panel","filterSelectorActive","previousThemeName","updateCurrentTheme_","searchDatasources","srid","gmfDataSourcesManager","defaultDimensions","dim","leftNavVisible","rightNavVisible","queryFill","queryStroke","queryFeatureStyle","queryActive","queryAutoClear","printPanelActive","printActive","measurePointActive","measureLengthActive","drawFeatureActive","drawProfilePanelActive","stateManager","tmhDynamicLocale","defaultLang","langUrls","initLanguage","mapToolsGroup","queryToolActivate","measurePointActivate","measureLengthActivate","drawFeatureActivate","drawProfilePanelActivate","printPanelActivate","$root","setDefaultBackground_","updateCurrentBackgroundLayer_","skipPermalink","background","defaultBasemapArray","default_basemap","defaultBasemapLabel","opt_width","opt_height","opt_apply","displaywindowUrl","openPopup_","openTextPopup","displaywindowContent","displaywindowTitle","displaywindowOpen","displaywindowWidth","displaywindowHeight","cgxp","tools","openInfoWindow","displaywindowDraggableContainment","getLayerByLabels","labels","switchLanguage","setCurrentLanguage","loadRemote","urlLanguage","fallbackThemeName","getLocationIcon","arrow","arrowWrapper","statemanager_module","tmhDynamicLocaleProvider","angularLocaleScript","localeLocationPattern","AbstractAppController","MobileDraw_exports","minPoints_","minPoints","sketchPoints_","handleViewCenterChange_","getDirty","getDrawing","getValid","addToDrawing","drawing","sketchFeatureGeom","getSketchPointGeometry_","SimpleGeometry","clearDrawing","finishDrawing","getCenter_","overlaySource","MobileDraw","MeasureLengthMobile_exports","MeasureLengthMobile","lengthComponent_exports","gmfMobileMeasureLengthTemplateUrl","filter_","lineDash","drawInteraction","dirty","addPoint","finish","deactivate","lengthComponent","RasterService_exports","gmfRasterUrl","getRaster","Param","X","Y","handleGetRaster_","RasterService","MeasurePointMobile_exports","coordFormat","coordFormat_","dec","MeasurePointMobile","pointComponent_exports","gmfMobileMeasurePointTemplateUrl","getCoordinateDecimalsFn","getLayersConfigFn","gmfRaster","gmfRaster_","handleMeasureActiveChange_","coordinateDecimalsFn","coordinateDecimals","layersConfig","translate","getMeasure_","ctn","childEl","previousCtn","getElementsByClassName","LayerConfig","pointComponent","measure_module","navigation_module","navigation_component","mobile_exports","GeolocationEventType","getMobileMapFn","getMobileGeolocationOptionsFn","toggleTracking","assertObject","geolocation_","Geolocation","trackingOptions","enableHighAccuracy","autorotate","autorotateListener","untrack_","positionFeature_","positionFeatureStyle","accuracyFeature_","accuracyFeatureStyle","zoom_","follow_","viewChangedByMe_","getAccuracyGeometry","setPosition_","getTracking","currentPosition","getPosition","track_","setTracking","currentAlpha","addEventListener","handleRotate_","alpha","webkitCompassHeading","eventAlpha","radAlpha","easing","mobile","AbstractMobileController_exports","searchOverlayVisible","searchListeners","mobileGeolocationOptions","geolocationZoom","viewConfig","mapViewConfig","pixelRatio","mapPixelRatio","View","controls","mapControls","ScaleLine","Zoom","zoomInTipLabel","zoomOutTipLabel","control_Rotate","tipLabel","mapInteractions","ol_interaction","pinchRotate","navIsVisible","redirectUrl","toggleLeftNavVisibility","toggleRightNavVisibility","hideNav","hideSearchOverlay","leftNavIsVisible","rightNavIsVisible","openNavMenu","navElements","AbstractMobileController","appmodule_exports","$compileProvider","debugInfoEnabled","appmodule","epsg2056def","somerc","lib","proj4","mobile_alt_Controller_exports","resolutions","elevationLayersConfig","searchDelay","searchCoordinatesProjections","customMeasureStyle","raven_default","addPlugin","angular_default","install"],"mappings":"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","file":"mobile_alt.1df7c7.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([290,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","const exports = {};\n\nexports.assert = function(condition, opt_message, var_args) {\n  return condition;\n};\n\nexports.assertNumber = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertString = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertFunction = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertObject = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertArray = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertBoolean = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertElement = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertInstanceof = function(value, type, opt_message, var_args) {\n  return value;\n};\n\nexports.assertObjectPrototypeIsIntact = function() {};\n\nexport default exports;\n","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function() {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayerWMTS.matrixSet,\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Several OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n","/**\n * @module gmf\n */\nconst exports = {};\n\n/**\n * The default template base URL for modules, used as-is by the template cache.\n * @type {string}\n */\n\n/**\n * @const\n * @export\n */\nexports.DATALAYERGROUP_NAME = 'data';\n\n/**\n * @const\n * @export\n */\nexports.EXTERNALLAYERGROUP_NAME = 'external';\n\n/**\n * @const\n * @export\n */\nexports.COORDINATES_LAYER_NAME = 'gmfCoordinatesLayerName';\n\n\n/**\n * @enum {string}\n */\nexports.PermalinkParam = {\n  BG_LAYER: 'baselayer_ref',\n  EXTERNAL_DATASOURCES_NAMES: 'eds_n',\n  EXTERNAL_DATASOURCES_URLS: 'eds_u',\n  FEATURES: 'rl_features',\n  MAP_CROSSHAIR: 'map_crosshair',\n  MAP_TOOLTIP: 'map_tooltip',\n  MAP_X: 'map_x',\n  MAP_Y: 'map_y',\n  MAP_Z: 'map_zoom',\n  TREE_GROUPS: 'tree_groups',\n  WFS_LAYER: 'wfs_layer',\n  WFS_NGROUPS: 'wfs_ngroups',\n  WFS_SHOW_FEATURES: 'wfs_showFeatures'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.CustomEvent\n */\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach((child) => {\n    child.setStateInternal_(this.state_);\n  });\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport * as olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle, {toFunction as toStyleFunction, createDefaultStyle as olStyleDefaultFunction} from 'ol/style/Style.js';\n\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleDefaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : toStyleFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.WMSTime\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * ngeo - WMS time service\n * @extends {ngeo.misc.Time}\n * @param {angular.$filter} $filter angular filter service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoWMSTime\n */\nconst exports = function($filter, gettextCatalog) {\n\n  /**\n   * @private\n   * @type {angular.$filter}\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  ngeoMiscTime.call(this);\n};\n\nolBase.inherits(exports, ngeoMiscTime);\n\n\n/**\n * Format time regarding a resolution\n * @param  {number} time (in ms format) timestamp to format\n * @param  {(ngeox.TimePropertyResolutionEnum|undefined)} resolution resolution to use\n * @param  {boolean=} opt_useISOFormat True to a ISO-8601 date string that can be used\n *     as a WMS-T Parameter. Otherwise, use a localized date format.\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} Date string regarding the resolution.\n */\nexports.prototype.formatTimeValue = function(time, resolution, opt_useISOFormat, opt_toUTC) {\n  const date = new Date(time);\n  const utc = opt_toUTC ? 'UTC' : undefined;\n\n  // ISO-8601 format to use date as a WMS-T Parameter.\n  let yearResolution = 'yyyy';\n  let monthResolution = 'yyyy-MM';\n  let dayResolution = 'yyyy-MM-dd';\n\n  // Localized format.\n  if (!opt_useISOFormat) {\n    const gettextCatalog = this.gettextCatalog_;\n    yearResolution = gettextCatalog.getString('yyyy');\n    monthResolution = gettextCatalog.getString('M/yyyy');\n    dayResolution = gettextCatalog.getString('M/d/yyyy');\n  }\n\n  switch (resolution) {\n    case 'year':\n      return this.$filter_('date')(date, yearResolution, utc);\n    case 'month':\n      return this.$filter_('date')(date, monthResolution, utc);\n    case 'day':\n      return this.$filter_('date')(date, dayResolution, utc);\n    default:\n      //case \"second\":\n      return date.toISOString().replace(/\\.\\d{3}/, '');\n  }\n};\n\n\n/**\n * Format time to be used as a WMS Time query parameter\n * @param  {ngeox.TimeProperty} wmsTimeProperty a wmstime property from a node\n * @param  {{start : number, end : (number|undefined)}} times start & end time selected (in ms format)\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} ISO-8601 date string ready to be used as a query parameter for a\n * WMS request\n * @export\n */\nexports.prototype.formatWMSTimeParam = function(wmsTimeProperty, times, opt_toUTC) {\n  googAsserts.assert(wmsTimeProperty.resolution !== undefined);\n  if (wmsTimeProperty.mode === 'range') {\n    googAsserts.assert(times.end !== undefined);\n    return (\n      `${this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC)}/${\n        this.formatTimeValue(times.end, wmsTimeProperty.resolution, true, opt_toUTC)}`\n    );\n  } else {\n    return this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC);\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoWMSTime', [\n  ngeoMiscTime.module.name,\n]);\nexports.module.service('ngeoWMSTime', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is available through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach((grp) => {\n      this.root.children.unshift(grp);\n    });\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach((childNode) => {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  });\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object information.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS, {optionsFromCapabilities} from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @param {number} ngeoTilesPreloadingLimit Load tiles up to preload levels. By default preload is Infinity,\n *     which means load all tiles on the top of the visible level. See also preload value\n *     in documentation for ol.Layer.Tile.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http, ngeoTilesPreloadingLimit) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * The Tiles Preloading Limit value\n   * @type {number}\n   * @private\n   */\n  this.tilesPreloadingLimit_ = ngeoTilesPreloadingLimit;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {string=} opt_matrixSet Optional WMTS matrix set.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_matrixSet, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: this.tilesPreloadingLimit_\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = optionsFromCapabilities(result, {\n        matrixSet: opt_matrixSet,\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach((l) => {\n      this.getFlatLayers_(l, array);\n    });\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some((layer) => {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  });\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Set ZIndex property to first level children elements\n * @param {ol.layer.Group|ol.layer.Base} element The group of layer with first level children layers.\n * @param {number} ZIndex The ZIndex for children element.\n */\nexports.prototype.setZIndexToFirstLevelChildren = function(element, ZIndex) {\n  if (!(element instanceof olLayerGroup)) {\n    return;\n  }\n  const innerGroupLayers = element.getLayers();\n  innerGroupLayers.forEach(innerLayer => innerLayer.setZIndex(ZIndex));\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', [])\n  .service('ngeoLayerHelper', exports)\n  .value('ngeoTilesPreloadingLimit', Infinity);\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.DataSources\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport olView from 'ol/View.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoDataSources\n   * @ngInject\n   */\n  constructor() {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = new olCollection();\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_ === map) {\n      return;\n    }\n\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.collection_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.service('ngeoDataSources', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.Manager\n */\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.DataSource\n */\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.SyncLayertreeMap\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * Service to create layer based on a ngeo.layertree.Controller with a\n * GMFThemesGroup or a GMFThemesLeaf as node object.\n * This layer is also used to synchronise a state of ngeo.layertree.Controller\n * and its corresponding layer in the map.\n *\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSyncLayertreeMap\n */\nconst exports = function($rootScope, ngeoLayerHelper, ngeoWMSTime,\n  gmfThemes) {\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {gmfThemes.GmfOgcServers}\n   * @private\n   */\n  this.ogcServersObject_;\n\n  gmfThemes.getOgcServersObject().then((ogcServersObject) => {\n    this.ogcServersObject_ = ogcServersObject;\n  });\n\n  $rootScope.$on('ngeo-layertree-state', (map, treeCtrl, firstParent) => {\n    this.sync_(/** @type ol.Map */ (map), firstParent);\n  });\n};\n\n\n/**\n * Create, insert (or update) and return a layer from the GmfGroup or the\n * GmfLayer of the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Base|ol.layer.Group} a new layer.\n * @public\n */\nexports.prototype.createLayer = function(treeCtrl, map, dataLayerGroup, opt_position) {\n  /**\n   * @type {ol.layer.Base|ol.layer.Group}\n   */\n  let layer = null;\n  if (treeCtrl.node.children !== undefined && treeCtrl.node.mixed) {\n    // Mixed groups\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  } else if (treeCtrl.node.children === undefined && treeCtrl.parent.node.mixed) {\n    // Layers in a mixed group\n    layer = this.createLeafInAMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.node.children === undefined) {\n    // Layers in a non mixed group\n    this.initGmfLayerInANotMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.depth === 1 && !treeCtrl.node.mixed) {\n    // First level group non mix\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  }\n\n  if (layer && treeCtrl.node.metadata.opacity) {\n    layer.setOpacity(treeCtrl.node.metadata.opacity);\n  }\n\n  return layer;\n};\n\n\n/**\n * Synchronise the state of each layers corresponding to the given tree and\n * all its children.\n * @param {ol.Map} map A map that contains the layers.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.sync_ = function(map, treeCtrl) {\n  treeCtrl.traverseDepthFirst((treeCtrl) => {\n    if (treeCtrl.layer && !treeCtrl.node.mixed) {\n      this.updateLayerState_(/** @type ol.layer.Image|ol.layer.Tile */ (treeCtrl.layer), treeCtrl);\n    }\n  });\n};\n\n\n/**\n * Set the active state of a layer based on its treeCtrl state.\n * @param {ol.layer.Tile|ol.layer.Image} layer A layer.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.updateLayerState_ = function(layer, treeCtrl) {\n  const active = treeCtrl.getState() === 'on';\n  if (treeCtrl.node.type === 'WMTS') {\n    layer.setVisible(active);\n  } else if (!treeCtrl.node.mixed && treeCtrl.depth === 1) {\n    // First level non mixed group\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    const names = [];\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.getState() === 'on') {\n        names.push(treeCtrl.node.layers);\n      }\n    });\n    if (names.length === 0) {\n      layer.setVisible(false);\n    }\n    /** @type {ol.source.ImageWMS} */ (layer.getSource()).updateParams({\n      'LAYERS': names.reverse().join(',')\n    });\n    if (names.length !== 0) {\n      layer.setVisible(true);\n    }\n  } else {\n    // WMS mixed layer\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    layer.setVisible(active);\n  }\n};\n\n\n/**\n * Create insert and return a layer group (for not mixed case) or a wmsLayer (for\n * mixed case). Take care about the insertion order in the map in case of first\n * level group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createGroup_ = function(treeCtrl, map,\n  dataLayerGroup, opt_position) {\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  let layer = null;\n  const isFirstLevelGroup = treeCtrl.parent.isRoot;\n\n  let printNativeAngle = true;\n  if (groupNode.metadata.printNativeAngle !== undefined) {\n    printNativeAngle = groupNode.metadata.printNativeAngle;\n  }\n\n  if (isFirstLevelGroup) { // First level group\n    layer = this.createLayerFromGroup_(treeCtrl, !!groupNode.mixed);\n    // Insert the layer at the right place\n    const position = opt_position | 0;\n    dataLayerGroup.getLayers().insertAt(position, layer);\n\n  } else { // Other Groups, create a group layer only in mixed groups\n    const inAMixedGroup = !this.isOneParentNotMixed_(treeCtrl);\n    if (inAMixedGroup) {\n      layer = this.createLayerFromGroup_(treeCtrl, true);\n      const layerGroup = /** @type {ol.layer.Group} */ (\n        exports.getLayer(treeCtrl.parent));\n      layerGroup.getLayers().insertAt(0, layer);\n    }\n  }\n\n  layer.set('printNativeAngle', printNativeAngle);\n  return layer;\n};\n\n\n/**\n * Create, insert and return a layer group (for not mixed case) or a wmsLayer\n * for mixed case).\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {boolean} mixed True for a group layer, false for a WMS layer.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createLayerFromGroup_ = function(treeCtrl,\n  mixed) {\n  let layer;\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  if (mixed) { // Will be one ol.layer per each node.\n    layer = this.layerHelper_.createBasicGroup();\n  } else { // Will be one ol.layer for multiple WMS nodes.\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[groupNode.ogcServer || ''];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      '',\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n    let hasActiveChildren = false;\n    treeCtrl.traverseDepthFirst((ctrl) => {\n      // Update layer information and tree state.\n      this.updateLayerReferences_(/** @type gmfThemes.GmfLayer */ (ctrl.node), layer);\n      if (ctrl.node.metadata.isChecked) {\n        ctrl.setState('on', false);\n        this.updateLayerState_(/** @type {ol.layer.Image} */ (layer), ctrl);\n        hasActiveChildren = true;\n      }\n    });\n    layer.setVisible(hasActiveChildren);\n    layer.set('layerNodeName', groupNode.name); //Really useful ?\n  }\n  return layer;\n};\n\n\n/**\n * Create and insert a layer from a leaf in a mixed group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the layer.\n * @return {ol.layer.Tile|ol.layer.Image} a new layer.\n * @private\n */\nexports.prototype.createLeafInAMixedGroup_ = function(treeCtrl, map) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  let layer;\n  // Make layer.\n  if (gmfLayer.type === 'WMTS') {\n    layer = this.createWMTSLayer_(/** @type gmfThemes.GmfLayerWMTS */ (gmfLayer));\n  } else {\n    const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[/** @type string */ (gmfLayerWMS.ogcServer)];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(gmfLayerWMS.layers);\n    googAsserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      gmfLayerWMS.layers,\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n  }\n  // Update layer information and tree state.\n  layer.set('layerNodeName', gmfLayer.name); // Really useful ?\n  this.updateLayerReferences_(gmfLayer, layer);\n  const checked = gmfLayer.metadata.isChecked === true;\n  if (checked) {\n    treeCtrl.setState('on', false);\n  }\n  layer.setVisible(checked);\n  // Insert layer in the map.\n  const layerGroup = /** @type {ol.layer.Group} */ (\n    exports.getLayer(treeCtrl.parent));\n  layerGroup.getLayers().insertAt(0, layer);\n  return layer;\n};\n\n\n/**\n * Update a WMS layer with the given treeCtrl node information. Assumes that\n * the first parent with ogcServer information is linked to the layer to update\n * and that this treeCtrl node is a leafNode.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the layer to update.\n * @private\n */\nexports.prototype.initGmfLayerInANotMixedGroup_ = function(treeCtrl, map) {\n  const leafNode = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const firstLevelGroup = this.getFirstLevelGroupCtrl_(treeCtrl);\n  googAsserts.assert(firstLevelGroup);\n  const layer = /** @type {ol.layer.Image} */ (firstLevelGroup.layer);\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  // Update layer information and tree state.\n  this.updateLayerReferences_(leafNode, layer);\n  if (leafNode.metadata.isChecked) {\n    treeCtrl.setState('on', false);\n    this.updateLayerState_(layer, firstLevelGroup);\n  } else {\n    treeCtrl.parent.refreshState();\n  }\n};\n\n\n/**\n * Create and return a Tile layer.\n * @param {gmfThemes.GmfLayerWMTS} gmfLayerWMTS A leaf node.\n * @return {ol.layer.Tile} a Tile WMTS layer. (Source and capabilities can come\n *     later).\n * @private\n */\nexports.prototype.createWMTSLayer_ = function(gmfLayerWMTS) {\n  const newLayer = new olLayerTile();\n  googAsserts.assert(gmfLayerWMTS.url);\n  googAsserts.assert(gmfLayerWMTS.layer);\n  this.layerHelper_.createWMTSLayerFromCapabilitites(gmfLayerWMTS.url,\n    gmfLayerWMTS.layer, gmfLayerWMTS.matrixSet, gmfLayerWMTS.dimensions).then((layer) => {\n    newLayer.setSource(layer.getSource());\n    newLayer.set('capabilitiesStyles', layer.get('capabilitiesStyles'));\n  });\n  return newLayer;\n};\n\n\n/**\n * Update properties of a layer with the node of a given leafNode.\n * @param {gmfThemes.GmfLayer} leafNode a leaf node.\n * @param {ol.layer.Base} layer A layer.\n * @private\n */\nexports.prototype.updateLayerReferences_ = function(leafNode, layer) {\n  const id = olBase.getUid(leafNode);\n  const querySourceIds = layer.get('querySourceIds') || [];\n  querySourceIds.push(id);\n  layer.set('querySourceIds', querySourceIds);\n\n  const disclaimer = leafNode.metadata.disclaimer;\n  if (disclaimer) {\n    const disclaimers = layer.get('disclaimers') || [];\n    disclaimers.push(leafNode.metadata.disclaimer);\n    layer.set('disclaimers', disclaimers);\n  }\n};\n\n\n/**\n * Get the time parameter for a WMS Layer. If it's a group and it doesn't have\n * time, get the first time parameter available in any child.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {string|undefined} A wms time param.\n * @private\n */\nexports.prototype.getTimeParam_ = function(treeCtrl) {\n  let wmsTime;\n  let timeParam;\n  const node = treeCtrl.node;\n  if (node.time) {\n    wmsTime = node.time;\n  } else if (node.children) {\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.node.time) {\n        wmsTime = treeCtrl.node.time;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  if (wmsTime) {\n    const timeValues = this.ngeoWMSTime_.getOptions(wmsTime)['values'];\n    timeParam = this.ngeoWMSTime_.formatWMSTimeParam(wmsTime, {\n      start: timeValues[0] || timeValues,\n      end: timeValues[1]\n    });\n  }\n  return timeParam;\n};\n\n\n/**\n * Return true if a parent tree is mixed, based on its node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {boolean} True is any parent is mixed. False Otherwise.\n * @private\n */\nexports.prototype.isOneParentNotMixed_ = function(treeCtrl) {\n  let tree = treeCtrl.parent;\n  let isOneParentNotMix = false;\n  do {\n    isOneParentNotMix = tree.node.mixed === false;\n    tree = tree.parent;\n  }\n  while (tree.parent && !isOneParentNotMix);\n  return isOneParentNotMix;\n};\n\n\n/**\n * Return the first parent, from the root parent, that is not mixed.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} The first not mixed parent.\n * @private\n */\nexports.prototype.getFirstLevelGroupCtrl_ = function(\n  treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * Return the layer used by the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ol.layer.Base} The layer.\n * @public\n */\nexports.getLayer = function(treeCtrl) {\n  let tree = treeCtrl;\n  let layer = null;\n  while (!tree.isRoot && layer === null) {\n    if (tree.layer) {\n      layer = tree.layer;\n    }\n    tree = tree.parent;\n  }\n  return layer;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSyncLayertreeMap', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfSyncLayertreeMap', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Notification\n */\nimport 'bootstrap/js/alert.js';\nimport googAsserts from 'goog/asserts.js';\n\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.Time\n */\n/**\n * ngeo - Time service\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoTime\n */\nconst exports = function() {};\n\n/**\n * @param {number|string|null} value The value\n * @param {Date} defaultValue The default value\n * @return {Date} the date\n */\nexports.prototype.createDate = function(value, defaultValue = null) {\n  return value !== null ? new Date(value) : defaultValue;\n};\n\n/**\n * @param {Date} date The date\n * @param {number|null=} defaultValue The default value\n * @return {number|null} the time\n */\nexports.prototype.getTime = function(date, defaultValue = null) {\n  return date ? date.getTime() : defaultValue;\n};\n\n/**\n * Get options regarding the time property of a node;\n *\n * @param {ngeox.TimeProperty} time the time property of a node\n * @return {{\n *  minDate : number,\n *  maxDate : number,\n *  values : (Array<number>|number)\n * }} - Configuration for the UI components\n * @export\n */\nexports.prototype.getOptions = function(time) {\n\n  const minDate = this.createDate(time.minValue);\n  const maxDate = this.createDate(time.maxValue);\n\n  const minDefaultDate = this.createDate(time.minDefValue, minDate);\n  const maxDefaultDate = this.createDate(time.maxDefValue, maxDate);\n\n  const defaultValues = (time.mode === 'range') ?\n    [this.getTime(minDefaultDate), this.getTime(maxDefaultDate)] :\n    this.getTime(minDefaultDate);\n\n  return {\n    minDate: this.getTime(minDate),\n    maxDate: this.getTime(maxDate),\n    values: defaultValues\n  };\n};\n\n\n/**\n * Time.prototype.getUTCDate - Get UTC date from a local date object\n *\n * @param  {Object} localDate loacl date object in\n * @return {Object} UTC date\n * @export\n */\nexports.prototype.getUTCDate = function(localDate) {\n  return new Date(\n    localDate.getUTCFullYear(),\n    localDate.getUTCMonth(),\n    localDate.getUTCDate());\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoTime', []);\nexports.module.service('ngeoTime', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach((feature) => {\n      this.addFeature(feature);\n    });\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.debounce\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.EventHelper\n */\nimport * as olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.DataSourceBeingFiltered\n */\nconst exports = {};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourceBeingFiltered', []);\n// type gmfx.datasource.DataSourceBeingFiltered\nexports.module.value('gmfDataSourceBeingFiltered', {\n  dataSource: null\n});\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.Service\n */\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\n\n/**\n * An \"authentication\" service for a GeoMapFish application. Upon loading, it\n * launches a request to determine whether a user is currently logged in or\n * not.\n *\n * The possible API requests it supports, which are all self-explanatory, are:\n *\n * - changePassword\n * - login\n * - logout\n * - resetPassword\n *\n * @extends {ol.events.EventTarget}\n */\nconst exports = class extends olEventsEventTarget {\n\n  /**\n   * @param {angular.$http} $http Angular http service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angular.Scope} $rootScope The directive's scope.\n   * @param {string} authenticationBaseUrl URL to \"authentication\" web service.\n   * @param {gmfx.User} gmfUser User.\n   * @ngInject\n   */\n  constructor($http, $injector, $rootScope, authenticationBaseUrl, gmfUser) {\n\n    super();\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.$http_ = $http;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$rootScope_ = $rootScope;\n\n    /**\n     * The authentication url without trailing slash\n     * @type {string}\n     * @private\n     */\n    this.baseUrl_ = authenticationBaseUrl.replace(/\\/$/, '');\n\n    /**\n     * @type {gmfx.User}\n     * @private\n     */\n    this.user_ = gmfUser;\n\n    /**\n      * Don't request a new user object from the back-end after\n      * logging out if the logged-in user's role has this role.\n      * @type {?string}\n      * @private\n      */\n    this.noReloadRole_ =  $injector.has('gmfAuthenticationNoReloadRole')\n      ? $injector.get('gmfAuthenticationNoReloadRole')\n      : null;\n\n    this.load_();\n  }\n\n  /**\n   * Load the authentication service, which sends an asynch request to\n   * determine whether the user is currently connected or not.\n   * @private\n   */\n  load_() {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.IS_LOGGED_IN}`;\n    this.$http_.get(url, {withCredentials: true}).then(\n      this.handleLogin_.bind(this, true)\n    );\n  }\n\n  /**\n   * @param {string} oldPwd Old password.\n   * @param {string} newPwd New password.\n   * @param {string} confPwd New password confirmation.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  changePassword(oldPwd, newPwd, confPwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.CHANGE_PASSWORD}`;\n\n    return this.$http_.post(url, $.param({\n      'oldPassword': oldPwd,\n      'newPassword': newPwd,\n      'confirmNewPassword': confPwd\n    }), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    }).then(((response) => {\n      this.user_.is_password_changed = true;\n      this.$rootScope_.$digest();\n    }).bind(this));\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @param {string} pwd Password.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  login(login, pwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGIN}`;\n\n    return this.$http_.post(url, $.param({'login': login, 'password': pwd}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    }).then(\n      this.handleLogin_.bind(this, false));\n  }\n\n  /**\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  logout() {\n    const noReload = this.user_['role_name'] === this.noReloadRole_;\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGOUT}`;\n    return this.$http_.get(url, {withCredentials: true}).then(() => {\n      this.resetUser_(noReload);\n    });\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  resetPassword(login) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.RESET_PASSWORD}`;\n\n    /**\n     * @param {angular.$http.Response} resp Ajax response.\n     * @return {gmfx.AuthenticationDefaultResponse} Response.\n     */\n    const successFn = function(resp) {\n      const respData = /** @type gmfx.AuthenticationDefaultResponse} */ (\n        resp.data);\n      return respData;\n    }.bind(this);\n\n    return this.$http_.post(url, $.param({'login': login}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n    }).then(successFn);\n  }\n\n  /**\n   * @return {?gmfx.AuthenticationFunctionalities} The role functionalities.\n   */\n  getFunctionalities() {\n    return this.user_.functionalities;\n  }\n\n  /**\n   * @return {number|null} The role ID.\n   */\n  getRoleId() {\n    return this.user_.role_id;\n  }\n\n  /**\n   * @param {boolean} checkingLoginStatus Checking the login status?\n   * @param {angular.$http.Response} resp Ajax response.\n   * @return {angular.$http.Response} Response.\n   * @private\n   */\n  handleLogin_(checkingLoginStatus, resp) {\n    const respData = /** @type {gmfx.AuthenticationLoginResponse} */ (resp.data);\n    this.setUser_(respData, !checkingLoginStatus);\n    if (checkingLoginStatus) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('ready', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n    return resp;\n  }\n\n  /**\n   * @param {gmfx.AuthenticationLoginResponse} respData Response.\n   * @param {boolean} emitEvent Emit a login event?\n   * @private\n   */\n  setUser_(respData, emitEvent) {\n    for (const key in respData) {\n      this.user_[key] = respData[key];\n    }\n    if (emitEvent && respData.username !== undefined) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('login', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @private\n   * @param {boolean} noReload Don't request a new user object from\n   * the back-end after logging out, defaults to false.\n   */\n  resetUser_(noReload) {\n    noReload = noReload || false;\n    for (const key in this.user_) {\n      this.user_[key] = null;\n    }\n    /** @type {gmfx.AuthenticationEvent} */\n    const event = new ngeoCustomEvent('logout', {user: this.user_});\n    this.dispatchEvent(event);\n    if (!noReload) {\n      this.load_();\n    }\n  }\n};\n\n/**\n * @enum {string}\n */\nexports.RouteSuffix = {\n  CHANGE_PASSWORD: 'loginchange',\n  IS_LOGGED_IN: 'loginuser',\n  LOGIN: 'login',\n  LOGOUT: 'logout',\n  RESET_PASSWORD: 'loginresetpassword'\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfAuthenticationService', []);\nexports.module.service('gmfAuthenticationService', exports);\n\nexports.module.value('gmfUser', {\n  'functionalities': null,\n  'is_password_changed': null,\n  'role_id': null,\n  'role_name': null,\n  'username': null\n});\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.ShareService\n */\n/**\n * Service to handle the sharing of the permalink.\n * @param {angular.$http} $http Angular http service.\n * @param  {string} gmfShortenerCreateUrl URL for the shortener API\n * @constructor\n * @struct\n * @ngInject\n * @export\n * @ngname gmfShareService\n */\nconst exports = function($http, gmfShortenerCreateUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.gmfShortenerCreateUrl_ = gmfShortenerCreateUrl;\n\n};\n\n\n/**\n * Get a short URL of the permalink by calling the url shortener service.\n * - If no shortener API url have been specified, it returns the permalink itself.\n * @param  {string} url the permalink\n * @return {gmfx.ShortenerAPIResponse|angular.$http.HttpPromise} an object containing the permalink not shortened or\n * the promise attached to the shortener API request\n */\nexports.prototype.getShortUrl = function(url) {\n  const params = /** @type {gmfx.ShortenerAPIRequestParams} */ ({\n    url\n  });\n\n  if (!this.gmfShortenerCreateUrl_) {\n    return {\n      data: {\n        short_url: url\n      },\n      status: 200\n    };\n  }\n\n  return this.postShortUrl_(params);\n};\n\n\n/**\n * Send the short permalink to the email provided\n * - If email is provided, the short permalink will be sent to this email\n * @param  {string} shortUrl the short permalink to send\n * @param  {string} email the email to which the short url must be send\n * @param  {string=} opt_message message for the email\n * @return {angular.$http.HttpPromise} the promise attached to the shortener API request\n */\nexports.prototype.sendShortUrl = function(shortUrl, email, opt_message) {\n  const params = /** @type {gmfx.ShortenerAPIRequestParams} */ ({\n    url: shortUrl,\n    email: email\n  });\n\n  if (opt_message) {\n    params['message'] = opt_message;\n  }\n\n  return this.postShortUrl_(params);\n};\n\n\n/**\n * @param  {gmfx.ShortenerAPIRequestParams} params parameters for the request\n * @return {angular.$http.HttpPromise} the promise attached to the shortener API request\n * @private\n */\nexports.prototype.postShortUrl_ = function(params) {\n  // Override default behavior of $http.post method (sending data in json format)\n  return this.$http_.post(this.gmfShortenerCreateUrl_, $.param(params), {\n    headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n  });\n};\n\n\n/**\n * Max length defined for the complete url.\n * Check IE limits, see {@link http://support.microsoft.com/kb/208427}\n * @constant\n * @type {number}\n */\nexports.URL_MAX_LEN = 2083;\n\n/**\n * Max length defined for the url parth section.\n * Check IE limits, see {@link http://support.microsoft.com/kb/208427}\n * @constant\n * @type {number}\n */\nexports.URL_PATH_MAX_LEN = 2048;\n\nexports.module = angular.module('gmfShareService', []);\n\nexports.module.service('gmfShareService', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.File\n */\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source that contains vector features that were loaded from a file.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @private\n     */\n    this.featuresCollection_ = options.features || new olCollection();\n\n    /**\n     * @type {!ol.source.Vector}\n     * @private\n     */\n    this.source_ = new olSourceVector({\n      features: this.featuresCollection_,\n      wrapX: false\n    });\n\n    /**\n     * @type {!ol.layer.Vector}\n     * @private\n     */\n    this.layer_ = new olLayerVector({\n      source: this.source_\n    });\n  }\n\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ol.Feature>} Features\n   * @export\n   */\n  get features() {\n    return this.featuresCollection_.getArray();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {!ol.Collection.<!ol.Feature>} Features collection\n   * @export\n   */\n  get featuresCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * @return {!ol.layer.Vector} Vector layer.\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {ol.Extent} Extent.\n   * @export\n   */\n  get extent() {\n    return this.source_.getExtent();\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.FileGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A FileGroup data source combines multiple `ngeo.datasource.File` objects.\n   * Its main goal is to synchronize the added data source 'visible' properties\n   * with the visibility of their layer 'visible' property.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.unregister_ = {};\n  }\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    this.unregister_[dataSource.id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this, dataSource)\n    );\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source.\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(dataSource, value, oldValue) {\n    if (value !== undefined) {\n      dataSource.layer.setVisible(value);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    this.unregister_[dataSource.id]();\n    delete this.unregister_[dataSource.id];\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper the ngeo map LayerHelper service.\n   */\n  constructor(options, ngeoLayerHelper) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.ExternalDataSourcesManager\n */\n// TODO - MaxScaleDenominator\n// TODO - MinScaleDenominator\n\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceFileGroup from 'ngeo/datasource/FileGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\n\nconst exports = class {\n\n  /**\n   * External data sources come remote online resources, such as WMS/WMTS\n   * servers, and also files such as KML/GXP. This service is responsible of\n   * creating, storing and managing them.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog service.\n   * @param {!angular.$injector} $injector Main injector.\n   * @param {!angular.$q} $q The Angular $q service.\n   * @param {!angular.Scope} $rootScope The rootScope provider.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {!ngeo.misc.File} ngeoFile Ngeo file.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo layer helper service\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfExternalDataSourcesManager\n   */\n  constructor(gettextCatalog, $injector, $q, $rootScope, ngeoDataSources,\n    ngeoFile, ngeoLayerHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angular.$injector}\n     * @private\n     */\n    this.injector_ = $injector;\n\n    /**\n     * @type {!angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * The collection of DataSources from ngeo. When this service creates\n     * a data source, its gets added to that collection.\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.misc.File}\n     * @private\n     */\n    this.ngeoFile_ = ngeoFile;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * All external data sources that are created are stored here. The key\n     * is the data source id.\n     *\n     * Note: This cache is never cleaned and elements are never removed from it.\n     * If a data source with an id already exists in this cache, it is used\n     * instead of being re-created.\n     *\n     * @type {Object.<number, !ngeo.datasource.OGC|!ngeo.datasource.File>}\n     * @private\n     */\n    this.extDataSources_ = {};\n\n    /**\n     * File external data sources, with the key being the file name.\n     * @type {Object.<string, !ngeo.datasource.File>}\n     * @private\n     */\n    this.files_ = {};\n\n    /**\n     * @type {?ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * Group that contains file data sources.\n     * @type {!ngeo.datasource.FileGroup}\n     * @private\n     */\n    this.fileGroup_ = new ngeoDatasourceFileGroup({\n      dataSources: [],\n      injector: this.injector_,\n      title: gettextCatalog.getString('Local files')\n    });\n\n    /**\n     * Collection of WMS groups.\n     * @type {!ol.Collection.<!ngeo.datasource.WMSGroup>}\n     * @private\n     */\n    this.wmsGroupsCollection_ = new olCollection();\n\n    /**\n     * Collection of groups for WMTS data sources.\n     * @type {!ol.Collection.<!ngeo.datasource.OGCGroup>}\n     * @private\n     */\n    this.wmtsGroupsCollection_ = new olCollection();\n\n    /**\n     * Cache that stores the information of a WMTS data source. The key is the\n     * data source id.\n     * @type {!Object.<number, gmfx.datasource.ExternalDataSourcesManagerWMTSCacheItem>}\n     * @private\n     */\n    this.wmtsCache_ = {};\n\n    olEvents.listen(this.dataSources_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n\n  // === File Group ===\n\n  /**\n   * @return {!ngeo.datasource.FileGroup} File group.\n   * @export\n   */\n  get fileGroup() {\n    return this.fileGroup_;\n  }\n\n\n  // === WMS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  addWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.push(wmsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  removeWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.remove(wmsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.WMSGroup} WMS group.\n   */\n  getWMSGroup(url) {\n    let found = null;\n    for (const wmsGroup of this.wmsGroups) {\n      if (wmsGroup.url === url) {\n        found = wmsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.WMSGroup>} List of WMS groups.\n   * @export\n   */\n  get wmsGroups() {\n    return this.wmsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.WMSGroup>} Collection of WMS\n   *     groups.\n   * @export\n   */\n  get wmsGroupsCollection() {\n    return this.wmsGroupsCollection_;\n  }\n\n\n  // === WMTS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  addWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.push(wmtsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  removeWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.remove(wmtsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.OGCGroup} WMTS group.\n   */\n  getWMTSGroup(url) {\n    let found = null;\n    for (const wmtsGroup of this.wmtsGroups) {\n      if (wmtsGroup.url === url) {\n        found = wmtsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.OGCGroup>} List of groups for WMTS data\n   *     sources.\n   * @export\n   */\n  get wmtsGroups() {\n    return this.wmtsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.OGCGroup>} Collection of groups\n   *     for WMTS data sources.\n   * @export\n   */\n  get wmtsGroupsCollection() {\n    return this.wmtsGroupsCollection_;\n  }\n\n\n  // === Other methods ===\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source\n   * @return {boolean} Whether the given data source is external or not. To\n   *     be considered external, it needs to be in the external data source\n   *     hash (cache).\n   */\n  isExternalDataSource(dataSource) {\n    return !!this.extDataSources_[dataSource.id];\n  }\n\n  /**\n   * @return {ol.layer.Group} Layer group where to push layers created by\n   *     this service.\n   */\n  get layerGroup() {\n    const map = this.map_;\n    googAsserts.assert(map);\n    return this.ngeoLayerHelper_.getGroupFromMap(\n      map,\n      gmfBase.EXTERNALLAYERGROUP_NAME\n    );\n  }\n\n  /**\n   * @param {?ol.Map} map Map\n   */\n  set map(map) {\n    this.map_ = map;\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  addLayer_(layer) {\n    this.layerGroup.getLayers().push(layer);\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  removeLayer_(layer) {\n    this.layerGroup.getLayers().remove(layer);\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object.\n   * @param {!Object} capabilities  WMS Capabilities definition\n   * @param {string} url The WMS service url.\n   * @export\n   */\n  createAndAddDataSourceFromWMSCapability(layer, capabilities, url) {\n\n    const id = exports.getId(layer);\n    const service = capabilities['Service'];\n\n    let dataSource;\n\n    // (1) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n      const req = capabilities['Capability']['Request'];\n\n      // ogcImageType\n      const formats = req['GetMap']['Format'];\n      const imagePngType = 'image/png';\n      const ogcImageType = formats.includes(imagePngType) ?\n        imagePngType : formats[0];\n\n      // wmsInfoFormat\n      const infoFormats = req['GetFeatureInfo']['Format'];\n      const wmsInfoFormat = infoFormats.includes(\n        ngeoDatasourceOGC.WMSInfoFormat.GML\n      ) ? ngeoDatasourceOGC.WMSInfoFormat.GML : undefined;\n\n      // queryable\n      const queryable = layer['queryable'] === true &&\n          wmsInfoFormat !== undefined;\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: layer['Title'],\n        ogcImageType: ogcImageType,\n        ogcLayers: [{\n          name: layer['Name'],\n          queryable: queryable\n        }],\n        ogcType: ngeoDatasourceOGC.Type.WMS,\n        visible: true,\n        wmsInfoFormat: wmsInfoFormat,\n        wmsUrl: url\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n\n    // (2) Add data source in WMS group, unless it's already in there.\n    //     Will also add the data source to the `ngeo.DataSources` collection.\n    //     If the group is created, its inner OL layer is also added to the map.\n    let wmsGroup = this.getWMSGroup(url);\n    if (wmsGroup) {\n      if (!wmsGroup.dataSources.includes(dataSource)) {\n        wmsGroup.addDataSource(dataSource);\n        this.dataSources_.push(dataSource);\n      }\n    } else {\n      wmsGroup = new ngeoDatasourceWMSGroup({\n        dataSources: [dataSource],\n        injector: this.injector_,\n        title: service['Title'],\n        url: url\n      }, this.ngeoLayerHelper_);\n      this.addLayer_(wmsGroup.layer);\n      this.addWMSGroup_(wmsGroup);\n      this.dataSources_.push(dataSource);\n    }\n  }\n\n  /**\n   * @param {!Object} layer WTMS Capability Layer object.\n   * @param {!Object} capabilities  WMTS Capabilities definition\n   * @param {string} wmtsUrl The WMTS capabilities url\n   * @export\n   */\n  createAndAddDataSourceFromWMTSCapability(layer, capabilities, wmtsUrl) {\n    const id = exports.getId(layer);\n\n    // (1) No need to do anything if there's already a WMTS data source (and its\n    // layer in the map)\n    if (this.wmtsCache_[id]) {\n      return;\n    }\n\n    let dataSource;\n\n    // (2) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n\n      const name = googAsserts.assertString(layer['Title']);\n      const wmtsLayer = googAsserts.assertString(layer['Identifier']);\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: name,\n        ogcType: ngeoDatasourceOGC.Type.WMTS,\n        visible: true,\n        wmtsLayer: wmtsLayer,\n        wmtsUrl: wmtsUrl\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n    // (3) Get/Create group, then add data source to group\n    let wmtsGroup = this.getWMTSGroup(wmtsUrl);\n    if (!wmtsGroup) {\n      wmtsGroup = new ngeoDatasourceOGCGroup({\n        dataSources: [],\n        title: capabilities['ServiceIdentification']['Title'],\n        url: wmtsUrl\n      });\n      this.addWMTSGroup_(wmtsGroup);\n    }\n    wmtsGroup.addDataSource(dataSource);\n\n    // (4) Create and add the OL layer\n    const layerObj = this.ngeoLayerHelper_.createWMTSLayerFromCapabilititesObj(\n      capabilities,\n      layer\n    );\n    this.addLayer_(layerObj);\n\n    // (5) Add data source to ngeo collection\n    this.dataSources_.push(dataSource);\n\n    // (6) Create and set WMTS cache item\n    this.wmtsCache_[id] = {\n      layerObj: layerObj,\n      // This watcher synchronizes the data source visible property to\n      // the OL layer object visible property\n      unregister: this.rootScope_.$watch(\n        () => dataSource.visible,\n        this.handleWMTSDataSourceVisibleChange_.bind(this, layerObj)\n      )\n    };\n  }\n\n  /**\n   * @param {!File} file File.\n   * @export\n   */\n  createAndAddDataSourceFromFile(file) {\n    this.getFileDataSource_(file).then(\n      (dataSource) => {\n        const fileGroup = this.fileGroup_;\n\n        // (1) No need to do anything if the file has already been added...\n        if (fileGroup.dataSources.includes(dataSource)) {\n          return;\n        }\n\n        // (2) Okay, we need to add this data source. First, add its layer\n        //     to the map.\n        this.addLayer_(dataSource.layer);\n\n        // (3) Add it to the file group\n        fileGroup.addDataSource(dataSource);\n\n        // (4) Recenter the map view onto its extent\n        this.map_.getView().fit(dataSource.extent);\n\n        // (5) Finally, add it to the ngeo collection\n        this.dataSources_.push(dataSource);\n      },\n      (rejections) => {\n        googAsserts.fail(`Failed to load file: ${file.name}`);\n      }\n    );\n  }\n\n  /**\n   * Get file data source from cache, else create, store and return a new one.\n   * @param {!File} file File.\n   * @return {!angular.$q.Promise} Promise\n   * @private\n   */\n  getFileDataSource_(file) {\n\n    const defer = this.q_.defer();\n\n    if (this.files_[file.name]) {\n      defer.resolve(this.files_[file.name]);\n    } else {\n      const ngeoFile = this.ngeoFile_;\n      ngeoFile.read(file).then((content) => {\n        let features;\n        const readOptions = {\n          featureProjection: this.map_.getView().getProjection()\n        };\n\n        if (ngeoFile.isKml(content)) {\n          features = new olFormatKML().readFeatures(content, readOptions);\n        } else if (ngeoFile.isGpx(content)) {\n          features = new olFormatGPX().readFeatures(content, readOptions);\n        }\n\n        if (features) {\n          const id = exports.getId(file);\n\n          const dataSource = new ngeoDatasourceFile({\n            features: new olCollection(features),\n            id: id,\n            name: file.name,\n            visible: true\n          });\n\n          // Keep a reference if both caches\n          this.files_[file.name] = dataSource;\n          this.extDataSources_[id] = dataSource;\n\n          defer.resolve(dataSource);\n        } else {\n          defer.reject();\n        }\n      });\n    }\n\n    return defer.promise;\n  }\n\n  /**\n   * @param {!ol.layer.Tile} layer WMTS layer\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleWMTSDataSourceVisibleChange_(layer, value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      layer.setVisible(value);\n    }\n  }\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If it's an external data source, remove it from its WMS Group\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (this.extDataSources_[dataSource.id] === dataSource) {\n      if (dataSource instanceof ngeoDatasourceFile) {\n        this.removeFileDataSource_(dataSource);\n      } else if (dataSource instanceof ngeoDatasourceOGC) {\n        this.removeOGCDataSource_(dataSource);\n      }\n    }\n  }\n\n  /**\n   * Remove a data source from its group. Remove its layer from the map as well.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.File} dataSource External File data source.\n   * @private\n   */\n  removeFileDataSource_(dataSource) {\n    this.removeLayer_(dataSource.layer);\n    this.fileGroup_.removeDataSource(dataSource);\n  }\n\n  /**\n   * Remove the data source from its group. If the group no longer has\n   * any data source in it, it is removed then destroyed and its layer is\n   * removed from the map.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.OGC} dataSource External OGC data source.\n   * @private\n   */\n  removeOGCDataSource_(dataSource) {\n    if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMS) {\n      // WMS data source\n      const url = dataSource.wmsUrl;\n      googAsserts.assert(url);\n\n      const wmsGroup = this.getWMSGroup(url);\n      if (wmsGroup && wmsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmsGroup.removeDataSource(dataSource);\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the group, and remove the layer from the map as well.\n        if (!wmsGroup.dataSources.length) {\n          this.removeLayer_(wmsGroup.layer);\n          wmsGroup.destroy();\n          this.removeWMSGroup_(wmsGroup);\n        }\n      }\n    } else if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMTS) {\n      // WMTS data source\n      const url = dataSource.wmtsUrl;\n      googAsserts.assert(url);\n\n      const wmtsGroup = this.getWMTSGroup(url);\n      if (wmtsGroup && wmtsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmtsGroup.removeDataSource(dataSource);\n\n        // Remove the cache item, in addition to removing the layer from the\n        // map and unregister the watcher\n        const id = dataSource.id;\n        this.removeLayer_(this.wmtsCache_[id].layerObj);\n        this.wmtsCache_[id].unregister();\n        delete this.wmtsCache_[id];\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the groug.\n        if (!wmtsGroup.dataSources.length) {\n          wmtsGroup.destroy();\n          this.removeWMTSGroup_(wmtsGroup);\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * Get the data source id from a WMS or WMTS Capability Layer object, or\n * from a File object.\n *\n * Please, note that this is used to generate a unique id for the created\n * external data sources and since a WMS/WMTS Capability Layer objects don't\n * natively contains an id by themselves, then it is programmatically generated\n * using the `ol.getUid` method, plus a million.\n *\n * @param {!Object} layer WMS/WMTS Capability Layer object.\n * @return {number} Data source id.\n * @export\n */\nexports.getId = function(layer) {\n  return olBase.getUid(layer) + 1000000;\n};\n\n\nexports.module = angular.module('gmfExternalDataSourcesManager', [\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscFile.module.name,\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('gmfExternalDataSourcesManager',\n  exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.somerc\n */\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\n\nproj4.Proj.projections.add(somerc);\nconst exports = 'somerc';\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.EPSG21781\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\nimport somerc from 'ngeo/proj/somerc.js';\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  `+proj=${somerc}`,\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.AutoProjection\n */\nimport * as olProj from 'ol/proj.js';\nimport * as olExtent from 'ol/extent.js';\n\n/**\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoAutoProjection\n */\nconst exports = function() {};\n\n\n/**\n * Parse a string and return a coordinate if the result is valid. Given string\n * must be a two numbers separated by a space.\n * @param {string} str the string to parse.\n * @return {?ol.Coordinate} A coordinate or null if the format is not valid.\n * @export\n */\nexports.prototype.stringToCoordinates = function(str) {\n  const coords = str.match(/([\\d\\.']+)[\\s,]+([\\d\\.']+)/);\n  if (coords) {\n    const x = parseFloat(coords[1].replace('\\'', ''));\n    const y = parseFloat(coords[2].replace('\\'', ''));\n    if (!isNaN(x) && !isNaN(y)) {\n      return [x, y];\n    }\n  }\n  return null;\n};\n\n\n/**\n * Get an array of projections corresponding to their EPSG codes. Log an error\n *     for each code that are not defined in ol projections.\n * @param {Array.<string>} projectionsCodes EPSG codes (e.g. 'EPSG:3857',\n *     'epsg:3857' or '3857').\n * @return {Array.<ol.proj.Projection>} An array of projections.\n * @export\n */\nexports.prototype.getProjectionList = function(projectionsCodes) {\n  let code, proj;\n  const projections = [];\n  projectionsCodes.forEach((projection) => {\n    code = projection.toUpperCase();\n    if (code.substr(0, 5) != 'EPSG:') {\n      code = `EPSG:${code}`;\n    }\n    proj = olProj.get(code);\n    if (proj !== null) {\n      projections.push(proj);\n    } else {\n      console.error(`The projection ${code} is not defined in ol.proj.`);\n    }\n  });\n  return projections;\n};\n\n\n/**\n * It projects the point using the projection array and finds the first one for\n * which it falls inside of the viewProjection extent.\n * @param {ol.Coordinate} coordinates The point to test.\n * @param {ol.Extent} extent Limits in which coordinates can be valid.\n * @param {ol.proj.Projection} viewProjection Target projection the point.\n * @param {Array.<ol.proj.Projection>=} opt_projections optional array of\n *     projections. The point is tested in each projection, in the order of\n *     the array.\n * @return {?ol.Coordinate} A coordinates in the view's projection if it matches\n *     in one of the given projections, or null else.\n * @export\n */\nexports.prototype.tryProjections = function(coordinates,\n  extent, viewProjection, opt_projections) {\n  let position;\n  if (opt_projections === undefined) {\n    opt_projections = [viewProjection];\n  }\n  opt_projections.some((projection) => {\n    try {\n      position = olProj.transform(coordinates, projection, viewProjection);\n      if (olExtent.containsCoordinate(extent, position)) {\n        return true;\n      }\n    } catch (e) {\n      // Wrong coordinate leads to a transform error and ol throw an exception that we won't log.\n    }\n    position = null;\n  });\n  return position;\n};\n\n\n/**\n * Same as AutoProjection.tryProjections but if tryProjections return null,\n * re-call it with coordinates in reverse order.\n * @param {ol.Coordinate} coordinates The point to test.\n * @param {ol.Extent} extent Limits in which coordinates can be valid.\n * @param {ol.proj.Projection} viewProjection Target projection the point.\n * @param {Array.<ol.proj.Projection>=} opt_projections optional array of\n *     projections. The point is tested in each projection, in the order of\n *     the array.\n * @return {?ol.Coordinate} A coordinates in the view's projection if it matches\n *     in one of the given projections, or null else.\n * @export\n */\nexports.prototype.tryProjectionsWithInversion = function(\n  coordinates, extent, viewProjection, opt_projections) {\n  let position = this.tryProjections(coordinates, extent, viewProjection,\n    opt_projections);\n  if (position === null) {\n    position = this.tryProjections(coordinates.reverse(), extent,\n      viewProjection, opt_projections);\n  }\n  return position;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoAutoProjection', []);\nexports.module.service('ngeoAutoProjection', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.search.FulltextSearch\n */\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides the c2c-geoportal full-text search.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngInject\n * @export\n * @ngname gmfFulltextSearch\n */\nconst exports = function($injector, $http) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = /** @type {string} **/ ($injector.get('fulltextsearchUrl'));\n\n  const url = this.url_.split('?');\n  /**\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = url[0];\n\n  const queryString = (url.length == 2) ? `?${url[1]}` : '';\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  this.defaultParams_ = ngeoUtils.decodeQueryString(queryString);\n};\n\n/**\n * Perform a search query on the c2c-geoportal full-text search.\n * @param {string} query Search query.\n * @param {Object.<string, string>} params Additional parameters.\n * @returns {Promise} Request promise with data array.\n */\nexports.prototype.search = function(query, params) {\n  const queryParams = Object.assign({}, this.defaultParams_, params);\n\n  queryParams['query'] = query;\n\n  const url = `${this.baseUrl_}?${ngeoUtils.encodeQueryString(queryParams)}`;\n\n  return new Promise((resolve, reject) => {\n    this.$http_.get(url)\n      .then(resp => resolve(resp['data']))\n      .catch(reject);\n  });\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSearchFulltextSearch', []);\nexports.module.service('gmfSearchFulltextSearch', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.datasourceGroupTreeComponent\n */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeDatasourceGroupTreeComponent', [\n  ngeoDatasourceDataSources.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree/datasourceGroupTreeComponent', require('./datasourceGroupTreeComponent.html'));\n});\n\n\nexports.value('gmfLayertreeDatasourceGroupTreeTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfLayertreeDatasourceGroupTreeTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/layertree/datasourceGroupTreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfLayertreeDatasourceGroupTreeTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfLayertreeDatasourceGroupTreeTemplateUrl($attrs, gmfLayertreeDatasourceGroupTreeTemplateUrl) {\n  return gmfLayertreeDatasourceGroupTreeTemplateUrl($attrs);\n}\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources\n   *     service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfDatasourcegrouptreeController\n   */\n  constructor($scope, ngeoDataSources) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.datasource.Group}\n     * @export\n     */\n    this.group;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n  }\n\n  /**\n   * @return {string} Group uid.\n   * @export\n   */\n  getGroupUid() {\n    return `datasourcegrouptree-${olBase.getUid(this.group)}`;\n  }\n\n  /**\n   * Toggle visibility of the group itself, i.e. its visibility state.\n   * @export\n   */\n  toggle() {\n    this.group.toggleVisibilityState();\n  }\n\n  /**\n   * Toggle visible property of a data source.\n   * @param {ngeo.datasource.DataSource} dataSource Data source to toggle the\n   * visibility\n   * @export\n   */\n  toggleDataSource(dataSource) {\n    dataSource.visible = !dataSource.visible;\n  }\n\n  /**\n   * Remove all data sources from the `ngeo.datasource.DataSources` collection, which\n   * will automatically remove them from the Group. The group itself\n   * is going to be removed as well, destroying this component in the process.\n   * @export\n   */\n  remove() {\n    for (let i = this.group.dataSources.length - 1, ii = 0; i >= ii; i--) {\n      this.dataSources_.remove(this.group.dataSources[i]);\n    }\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove from\n   *     the `ngeo.DataSources` collection.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSources_.remove(dataSource);\n  }\n};\n\n\nexports.component('gmfDatasourcegrouptree', {\n  bindings: {\n    'group': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfLayertreeDatasourceGroupTreeTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach((feature) => {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    });\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach((feature) => {\n        this.featureHelper_.setStyle(feature);\n      });\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoDrawFeatures.name,\n  ngeoLayertreeController.module.name,\n  ngeoMiscDebounce.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoStatemanagerModule.name,\n]);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoStatemanagerService.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.datepickerComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\n\nimport 'angular-ui-date';\nimport 'jquery-ui/themes/base/all.css';\n\n// FIXME: import the locales in the applications\nimport 'jquery-ui/ui/i18n/datepicker-fr.js';\nimport 'jquery-ui/ui/i18n/datepicker-en-GB.js';\nimport 'jquery-ui/ui/i18n/datepicker-de.js';\nimport 'jquery-ui/ui/i18n/datepicker-it.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDatePicker', [\n  ngeoMiscTime.module.name,\n  'ui.date',\n]);\n\n\nexports.value('ngeoDatePickerTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoDatePickerTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/misc/datepickerComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/misc/datepickerComponent', require('./datepickerComponent.html'));\n});\n\n\n/**\n * Provide a directive to select a single date or a range of dates. Requires\n * jQuery UI for the 'datepicker' widget.\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n * ngeoDatePickerTemplateUrl Template for the directive.\n * @param  {angular.$timeout} $timeout angular timeout service\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDatePicker\n */\nexports.component_ = function(ngeoDatePickerTemplateUrl,  $timeout) {\n  return {\n    scope: {\n      onDateSelected: '&',\n      time: '='\n    },\n    bindToController: true,\n    controller: 'ngeoDatePickerController as datepickerCtrl',\n    restrict: 'AE',\n    templateUrl: ngeoDatePickerTemplateUrl,\n    link: (scope, element, attrs, ctrl) => {\n      ctrl.init();\n\n      const lang =  ctrl.gettextCatalog_.getCurrentLanguage();\n      $['datepicker']['setDefaults']($['datepicker']['regional'][lang]);\n\n      ctrl.sdateOptions = angular.extend({}, ctrl.sdateOptions, {\n        'minDate': ctrl.initialMinDate,\n        'maxDate': ctrl.initialMaxDate,\n        'onClose': (selectedDate) => {\n          if (selectedDate) {\n            $(element[0]).find('input[name=\"edate\"]').datepicker('option', 'minDate', selectedDate);\n          }\n        }\n      });\n\n      ctrl.edateOptions = angular.extend({}, ctrl.edateOptions, {\n        'minDate': ctrl.initialMinDate,\n        'maxDate': ctrl.initialMaxDate,\n        'onClose': (selectedDate) => {\n          if (selectedDate) {\n            $(element[0]).find('input[name=\"sdate\"]').datepicker('option', 'maxDate', selectedDate);\n          }\n        }\n      });\n\n      angular.element('body').on('hidden.bs.popover', () => {\n        const dp = angular.element('#ui-datepicker-div');\n        if (dp && dp.css('display') === 'block') {\n          $(element[0]).find('input[name$=\"date\"]').datepicker('hide');\n        }\n      });\n\n      $timeout(() => {\n        angular.element('#ui-datepicker-div').on('mousedown', (e) => {\n          e.stopPropagation();\n        });\n      });\n    }\n  };\n};\n\nexports.directive('ngeoDatePicker', exports.component_);\n\n\n/**\n * DatePickerController - directive conttroller\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$injector} $injector injector.\n * @param {!ngeo.misc.Time} ngeoTime time service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDatePickerController\n */\nexports.Controller_ = function($scope, $injector,\n  ngeoTime, gettextCatalog) {\n\n  /**\n   * @type {!ngeo.misc.Time}\n   * @private\n   */\n  this.ngeoTime_ = ngeoTime;\n\n  /**\n   * @type {!ngeox.TimeProperty}\n   * @export\n   */\n  this.time;\n\n  /**\n   * The gettext catalog\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n\n  /**\n   * If the component is used to select a date range\n   * @type {boolean}\n   * @export\n   */\n  this.isModeRange;\n\n\n  /**\n   * Function called after date(s) changed/selected\n   * @type {function({time: {start: number, end: number}})}\n   * @export\n   */\n  this.onDateSelected;\n\n\n  /**\n   * Initial min date for the datepicker\n   * @type {!Date}\n   */\n  this.initialMinDate;\n\n  /**\n   * Initial max date for the datepickeronDateSelected\n   * @type {!Date}\n   */\n  this.initialMaxDate;\n\n  /**\n   * Datepicker options for the second datepicker (only for range mode)\n   * @type {Object}\n   * @export\n   */\n  this.edateOptions = {\n    'changeMonth': true,\n    'changeYear': true\n  };\n\n  /**\n   * Datepicker options for the first datepicker\n   * @type {Object}\n   * @export\n   */\n  this.sdateOptions = {\n    'changeMonth': true,\n    'changeYear': true\n  };\n\n  /**\n   * Start date model for the first date picker\n   * @type {Date}\n   * @export\n   */\n  this.sdate;\n\n  /**\n   * End date model for the second datepicker (only for range mode)\n   * @type {Date}\n   * @export\n   */\n  this.edate;\n\n  $scope.$watchGroup(['datepickerCtrl.sdate', 'datepickerCtrl.edate'], (newDates, oldDates) => {\n    const sDate = newDates[0];\n    const eDate = newDates[1];\n\n    if (angular.isDate(sDate) && (!this.isModeRange || angular.isDate(eDate))) {\n      this.onDateSelected({\n        time: {\n          start: this.ngeoTime_.getTime(sDate),\n          end: this.ngeoTime_.getTime(eDate)\n        }\n      });\n    }\n  });\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  //fetch the initial options for the component\n  const initialOptions_ = this.ngeoTime_.getOptions(this.time);\n  this.initialMinDate = this.ngeoTime_.createDate(initialOptions_.minDate);\n  this.initialMaxDate = this.ngeoTime_.createDate(initialOptions_.maxDate);\n  this.isModeRange = this.time.mode === 'range';\n\n  if (this.isModeRange) {\n    googAsserts.assertArray(initialOptions_.values);\n    this.sdate = this.ngeoTime_.createDate(initialOptions_.values[0]);\n    this.edate = this.ngeoTime_.createDate(initialOptions_.values[1]);\n  } else {\n    googAsserts.assertNumber(initialOptions_.values);\n    this.sdate = this.ngeoTime_.createDate(initialOptions_.values);\n  }\n};\n\nexports.controller('ngeoDatePickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.features\n */\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.File\n */\n/**\n * @constructor\n * @param {angular.$q} $q .\n * @param {angular.$http} $http .\n * @param {gettext} gettext .\n * @ngInject\n */\nconst exports = function($q, $http, gettext) {\n  let fileReader, canceler;\n\n  // Test the validity of the file size\n  this.isValidFileSize = function(fileSize) {\n    return !(fileSize > 20000000); // 20 Mo\n  };\n\n  this.isWmsGetCap = function(fileContent) {\n    return /<(WMT_MS_Capabilities|WMS_Capabilities)/.test(fileContent);\n  };\n\n  this.isWmtsGetCap = function(fileContent) {\n    return /<Capabilities/.test(fileContent);\n  };\n\n  this.isKml = function(fileContent) {\n    return /<kml/.test(fileContent) && /<\\/kml>/.test(fileContent);\n  };\n\n  this.isGpx = function(fileContent) {\n    return /<gpx/.test(fileContent) && /<\\/gpx>/.test(fileContent);\n  };\n\n  /**\n   * @param {!Blob} file .\n   * @return {angular.$q.Promise<string>} .\n   */\n  this.read = function(file) {\n    const defer = $q.defer();\n    if (fileReader && fileReader.readyState === FileReader.LOADING) {\n      fileReader.abort();\n    }\n    fileReader = new FileReader();\n    fileReader.onload = function(evt) {\n      defer.resolve(evt.target.result);\n    };\n    fileReader.onerror = function(evt) {\n      const err = evt.target.error;\n      console.error('Reading file failed: ', err);\n      defer.reject({\n        'message': err.code == 20 ? gettext('Operation canceled') : gettext('Read failed'),\n        'reason': err.message\n      });\n    };\n    fileReader.onprogress = function(evt) {\n      defer.notify(evt);\n    };\n    // Read the file\n    fileReader.readAsText(file);\n    return defer.promise;\n  };\n\n  /**\n   * @param {string} url .\n   * @param {angular.$q.Deferred=} opt_cancelP .\n   * @return {angular.$q.Promise<Blob>} .\n   */\n  this.load = function(url, opt_cancelP) {\n\n    if (canceler) {\n      canceler.resolve();\n    }\n    canceler = opt_cancelP || $q.defer();\n\n    // Angularjs doesn't handle onprogress event\n    const defer = $q.defer();\n    $http.get(url, {\n      timeout: canceler.promise\n    }).then((response) => {\n      defer.resolve(response.data);\n    }, (reason) => {\n      console.error('Uploading file failed: ', reason);\n      defer.reject({\n        'message': gettext('Upload failed'),\n        'reason': reason\n      });\n    });\n    return defer.promise;\n  };\n};\n\nexports.module = angular.module('ngeoFile', []);\n\nexports.module.service('ngeoFile', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport * as olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complete then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.search.searchDirective\n */\n\n/**\n * Provides the \"ngeoSearch\" directive, which uses Twitter's\n * typeahead component to change an input text into a search field.\n *\n * Example:\n *\n *      <input type=\"text\"\n *        ngeo-search=\"ctrl.typeaheadOptions\"\n *        ngeo-search-datasets=\"ctrl.typeaheadDatasets\"\n *        ngeo-search-listeners=\"crtl.typeaheadListeners\">\n *\n * See our live example: [../examples/search.html](../examples/search.html)\n *\n * @htmlAttribute {TypeaheadOptions} ngeo-search The options.\n * @htmlAttribute {Array.<TypeaheadDataset>} ngeo-search-datasets The sources datasets.\n * @htmlAttribute {ngeox.SearchDirectiveListeners} ngeo-search-listeners The listeners.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoSearch\n */\nconst exports = function() {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const typeaheadOptionsExpr = attrs['ngeoSearch'];\n      const typeaheadOptions = /** @type {TypeaheadOptions} */\n              (scope.$eval(typeaheadOptionsExpr));\n\n      const typeaheadDatasetsExpr = attrs['ngeoSearchDatasets'];\n      const typeaheadDatasets = /** @type {Array.<TypeaheadDataset>} */\n              (scope.$eval(typeaheadDatasetsExpr));\n\n      const args = typeaheadDatasets.slice();\n      args.unshift(typeaheadOptions);\n\n      element.typeahead(...args);\n\n      const typeaheadListenersExpr = attrs['ngeoSearchListeners'];\n      const typeaheadListeners_ =\n              /** @type {ngeox.SearchDirectiveListeners} */\n              (scope.$eval(typeaheadListenersExpr));\n\n      /**\n       * @type {ngeox.SearchDirectiveListeners}\n       */\n      const typeaheadListeners = exports.adaptListeners_(\n        typeaheadListeners_);\n\n      element.on('typeahead:open', () => {\n        scope.$apply(() => {\n          typeaheadListeners.open();\n        });\n      });\n\n      element.on('typeahead:close', () => {\n        scope.$apply(() => {\n          typeaheadListeners.close();\n        });\n      });\n\n      element.on('typeahead:cursorchange',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.cursorchange(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:select',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.select(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:autocomplete',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.autocomplete(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:asyncreceive',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {TypeaheadDataset} dataset Dataset.\n         * @param {string} query Query.\n         */\n        (event, dataset, query) => {\n          scope.$apply(() => {\n            const empty = element.data('tt-typeahead')['menu']['_allDatasetsEmpty']();\n            typeaheadListeners.datasetsempty(event, query, empty);\n          });\n        });\n\n    }\n  };\n};\n\n\n/**\n * Create a real ngeox.SearchDirectiveListeners object out of the object\n * returned by $eval.\n * @param {ngeox.SearchDirectiveListeners} object Object.\n * @return {ngeox.SearchDirectiveListeners} The listeners object.\n * @private\n */\nexports.adaptListeners_ = function(object) {\n  /** @type {ngeox.SearchDirectiveListeners} */\n  let typeaheadListeners;\n  if (object === undefined) {\n    typeaheadListeners = {\n      open() {},\n      close() {},\n      cursorchange() {},\n      datasetsempty() {},\n      select() {},\n      autocomplete() {}\n    };\n  } else {\n    typeaheadListeners = {\n      open: object.open !== undefined ?\n        object.open : () => {},\n      close: object.close !== undefined ?\n        object.close : () => {},\n      cursorchange: object.cursorchange !== undefined ?\n        object.cursorchange : () => {},\n      datasetsempty: object.datasetsempty !== undefined ?\n        object.datasetsempty : () => {},\n      select: object.select !== undefined ?\n        object.select : () => {},\n      autocomplete: object.autocomplete !== undefined ?\n        object.autocomplete : () => {}\n    };\n  }\n  return typeaheadListeners;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSearchDirective', []);\n\n\n// Register the directive in the module\nexports.module.directive('ngeoSearch', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.search.createGeoJSONBloodhound\n */\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olObj from 'ol/obj.js';\n\nimport 'corejs-typeahead';\n\n\n/**\n * @param {string} url an URL to a search service.\n * @param {(function(GeoJSONFeature): boolean)=} opt_filter function to filter\n *     results.\n * @param {ol.proj.Projection=} opt_featureProjection Feature projection.\n * @param {ol.proj.Projection=} opt_dataProjection Data projection.\n * @param {BloodhoundOptions=} opt_options optional Bloodhound options. If\n *     undefined, the default Bloodhound config will be used.\n * @param {BloodhoundRemoteOptions=} opt_remoteOptions optional Bloodhound\n * remote options. Effective only if `remote` is not defined in `opt_options`.\n * @return {Bloodhound} The Bloodhound object.\n */\nconst exports = function(url, opt_filter, opt_featureProjection,\n  opt_dataProjection, opt_options, opt_remoteOptions) {\n  const geojsonFormat = new olFormatGeoJSON();\n  const bloodhoundOptions = /** @type {BloodhoundOptions} */ ({\n    remote: {\n      url,\n      prepare(query, settings) {\n        settings.url = settings.url.replace('%QUERY', query);\n        return settings;\n      },\n      transform(parsedResponse) {\n        /** @type {GeoJSONFeatureCollection} */\n        let featureCollection = /** @type {GeoJSONFeatureCollection} */\n            (parsedResponse);\n        if (opt_filter !== undefined) {\n          featureCollection = /** @type {GeoJSONFeatureCollection} */ ({\n            type: 'FeatureCollection',\n            features: featureCollection.features.filter(opt_filter)\n          });\n        }\n\n        return geojsonFormat.readFeatures(featureCollection, {\n          featureProjection: opt_featureProjection,\n          dataProjection: opt_dataProjection\n        });\n      }\n    },\n    // datumTokenizer is required by the Bloodhound constructor but it\n    // is not used when only a remote is passsed to Bloodhound.\n    datumTokenizer: () => {},\n    queryTokenizer: Bloodhound.tokenizers.whitespace\n  });\n\n  // the options objects are cloned to avoid updating the passed object\n  const options = olObj.assign({}, opt_options || {});\n  const remoteOptions = olObj.assign({}, opt_remoteOptions || {});\n\n  if (options.remote) {\n    // move the remote options to opt_remoteOptions\n    olObj.assign(remoteOptions, options.remote);\n    delete options.remote;\n  }\n\n  olObj.assign(bloodhoundOptions, options);\n  olObj.assign(bloodhoundOptions.remote, remoteOptions);\n\n  return new Bloodhound(bloodhoundOptions);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSearchCreategeojsonbloodhound', []);\n\nexports.module.value(\n  'ngeoSearchCreateGeoJSONBloodhound',\n  exports);\n\n\n/**\n * Provides a function that creates a Bloodhound engine\n * expecting GeoJSON responses from the search web service, which creates\n * `ol.Feature` objects as suggestions.\n *\n * Example:\n *\n *     let bloodhound = createGeoJSONBloodhound(\n *       'http://example.com/fulltextsearch?query=%QUERY',\n *       aFilterFunction,\n *       ol.proj.get('EPSG:3857'));\n *     bloodhound.initialize();\n *\n *     let bloodhound = createGeoJSONBloodhound(\n *       '',\n *       undefined,\n *       ol.proj.get('EPSG:3857'),\n *       ol.proj.get('EPSG:21781'),\n *       {\n *         remote: {\n *           url: mySearchEngineUrl,\n *           replace: function(url, query) {\n *             return url +\n *                 '?qtext=' + encodeURIComponent(query) +\n *                 '&lang=' + gettextCatalog.currentLanguage;\n *           }\n *         }\n *       }\n *     );\n *     bloodhound.initialize();\n *\n * @typedef {function(string, (function(GeoJSONFeature): boolean)=,\n * ol.proj.Projection=, ol.proj.Projection=, BloodhoundOptions=,\n * BloodhoundRemoteOptions=):Bloodhound}\n * @ngdoc service\n * @ngname search.createGeoJSONBloodhound\n */\nexports.Function;\n\n\nexport default exports;\n","/**\n * @module ngeo.search.createLocationSearchBloodhound\n */\nimport * as olObj from 'ol/obj.js';\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olFeature from 'ol/Feature.js';\n\nimport 'corejs-typeahead';\n\n\n/**\n * @param {ngeox.search.LocationSearchOptions=} opt_options Options.\n * @return {Bloodhound} The Bloodhound object.\n */\nconst exports = function(opt_options) {\n  const options = opt_options || {};\n\n  const sourceProjection = olProj.get(ngeoProjEPSG21781);\n  const targetProjection = options.targetProjection;\n\n  /**\n   * @param {string} bbox Bbox string.\n   * @return {?ol.Extent} Parsed extent.\n   */\n  const parseBbox = (bbox) => {\n    const regex = /BOX\\((.*?) (.*?),(.*?) (.*?)\\)/g;\n    const match = regex.exec(bbox);\n    if (match !== null) {\n      return [\n        parseFloat(match[1]),\n        parseFloat(match[2]),\n        parseFloat(match[3]),\n        parseFloat(match[4])\n      ];\n    } else {\n      return null;\n    }\n  };\n\n  const removeHtmlTags = label => label.replace(/<\\/?[ib]>/g, '');\n\n  const extractName = (label) => {\n    const regex = /<b>(.*?)<\\/b>/g;\n    const match = regex.exec(label);\n    if (match !== null) {\n      return match[1];\n    } else {\n      return label;\n    }\n  };\n\n  const bloodhoundOptions = /** @type {BloodhoundOptions} */ ({\n    remote: {\n      url: 'https://api3.geo.admin.ch/rest/services/api/SearchServer?type=locations&searchText=%QUERY',\n      prepare: (query, settings) => {\n        settings.url = settings.url.replace('%QUERY', query);\n        if (options.limit !== undefined) {\n          settings.url += `&limit=${options.limit}`;\n        }\n        if (options.origins !== undefined) {\n          settings.url += `&origins=${options.origins}`;\n        }\n\n        return (options.prepare !== undefined) ?\n          options.prepare(query, settings) : settings;\n      },\n      transform: (/** @type {geoAdminx.SearchLocationResponse} */ parsedResponse) => {\n        const features = parsedResponse.results.map((/** @type {geoAdminx.SearchLocationResult} */ result) => {\n          const attrs = result.attrs;\n\n          // note that x and y are switched!\n          const point = new olGeomPoint([attrs.y, attrs.x]);\n          let bbox = parseBbox(attrs.geom_st_box2d);\n          if (targetProjection !== undefined) {\n            point.transform(sourceProjection, targetProjection);\n            if (bbox !== null) {\n              bbox = olProj.transformExtent(bbox, sourceProjection, targetProjection);\n            }\n          }\n\n          attrs['geometry'] = point;\n          attrs['bbox'] = bbox;\n\n          // create a label without HTML tags\n          const label = attrs.label;\n          attrs['label_no_html'] = removeHtmlTags(label);\n          attrs['label_simple'] = extractName(label);\n\n          const feature = new olFeature(attrs);\n          feature.setId(attrs.featureId);\n\n          return feature;\n        });\n\n        return features;\n      }\n    },\n    // datumTokenizer is required by the Bloodhound constructor but it\n    // is not used when only a remote is passsed to Bloodhound.\n    datumTokenizer: () => {},\n    queryTokenizer: Bloodhound.tokenizers.whitespace\n  });\n\n  // the options objects are cloned to avoid updating the passed object\n  const bhOptions = olObj.assign({}, options.options || {});\n  const remoteOptions = olObj.assign({}, options.remoteOptions || {});\n\n  if (bhOptions.remote) {\n    // move the remote options to opt_remoteOptions\n    olObj.assign(remoteOptions, bhOptions.remote);\n    delete bhOptions.remote;\n  }\n\n  olObj.assign(bloodhoundOptions, bhOptions);\n  olObj.assign(bloodhoundOptions.remote, remoteOptions);\n\n  return new Bloodhound(bloodhoundOptions);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoCreateLocationSearchBloodhound', []);\n\nexports.module.value(\n  'ngeoCreateLocationSearchBloodhound',\n  exports);\n\n\n/**\n * Provides a function that creates a Bloodhound engine\n * for the GeoAdmin Location Search API, which creates `ol.Feature` objects\n * as suggestions.\n *\n * See: http://api3.geo.admin.ch/services/sdiservices.html#search\n *\n * Example:\n *\n *     let bloodhound = ngeoCreateLocationSearchBloodhound({\n *       targetProjection: ol.proj.get('EPSG:3857'),\n *       limit: 10\n *     });\n *     bloodhound.initialize();\n *\n * @typedef {function(ngeox.search.LocationSearchOptions=):Bloodhound}\n * @ngdoc service\n * @ngname search.createLocationSearchBloodhound\n */\nexports.Function;\n\n\nexport default exports;\n","/**\n * @module ngeo.search.module\n */\nimport ngeoSearchSearchDirective from 'ngeo/search/searchDirective.js';\nimport ngeoSearchCreateGeoJSONBloodhound from 'ngeo/search/createGeoJSONBloodhound.js';\nimport ngeoSearchCreateLocationSearchBloodhound from 'ngeo/search/createLocationSearchBloodhound.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoSearchModule', [\n  ngeoSearchSearchDirective.module.name,\n  ngeoSearchCreateGeoJSONBloodhound.module.name,\n  ngeoSearchCreateLocationSearchBloodhound.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.mobile.navigation.component\n */\nimport googAsserts from 'goog/asserts.js';\nconst exports = angular.module('gmfMobileNav', []);\n\n\n/**\n * An \"gmf-mobile-nav\" directive defining the behavior of a tree-structured menu.\n *\n * The directive is to be placed on a `nav` element, with the following\n * structure:\n * <nav gmf-mobile-nav>\n *   <header>\n *     <a class=\"gmf-mobile-nav-go-back\" href=\"#\"></a>\n *   </header>\n *   <div class=\"gmf-mobile-nav-active gmf-mobile-nav-slide\">\n *     <ul>\n *       <li>\n *         <a href data-target=\"#devices\">Devices</a>\n *       </li>\n *       <li>\n *         <a href data-target=\"#vehicles\">Vehicles</a>\n *       </li>\n *     </ul>\n *   </div>\n *   <div id=\"devices\" class=\"gmf-mobile-nav-slide\" data-header-title=\"Devices\">\n *     <ul>\n *       <li>Mobile Phones</li>\n *       <li>Televisions</li>\n *     </ul>\n *   </div>\n *   <div id=\"vehicles\" class=\"gmf-mobile-nav-slide\" data-header-title=\"Vehicles\">\n *     <ul>\n *       <li>Cars</li>\n *       <li>Planes</li>\n *       <li>Bicycles</li>\n *     </ul>\n *   </div>\n * </nav>\n *\n * When an element slides in the directive changes the text in the header.\n *\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    controller: 'gmfMobileNavController as navCtrl',\n    bindToController: true,\n    scope: true,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {gmf.mobile.navigation.component.Controller_} navCtrl Controller.\n     */\n    link: (scope, element, attrs, navCtrl) => {\n      navCtrl.init(element);\n    }\n  };\n};\n\nexports.directive('gmfMobileNav', exports.component_);\n\n\n/**\n* @constructor\n* @private\n* @ngInject\n* @ngdoc controller\n* @ngname gmfMobileNavController\n*/\nexports.Controller_ = function() {\n  /**\n   * Stack of slid-in items.\n   * @private\n   * @type {Array.<!jQuery>}\n   */\n  this.slid_ = [];\n\n  /**\n   * Currently active sliding box.\n   * @private\n   * @type {jQuery}\n   */\n  this.active_ = null;\n\n  /**\n   * The navigation header.\n   * @private\n   * @type {jQuery}\n   */\n  this.header_ = null;\n\n  /**\n   * The back button in the navigation header.\n   * @private\n   * @type {jQuery}\n   */\n  this.backButton_ = null;\n\n  /**\n   * Export the back function already bound to `this`. This makes sure that\n   * the function is called on the right context, when it is passed to an\n   * attribute in a template\n   * @export\n   */\n  this.back = this.back_.bind(this);\n};\n\nexports.controller('gmfMobileNavController', exports.Controller_);\n\n\n/**\n * Initialize the directive with the linked element.\n * @param {angular.JQLite} element Element.\n */\nexports.Controller_.prototype.init = function(element) {\n  const cls = exports.Controller_.ClassName_;\n  this.active_ = $(element.find(`.${cls.ACTIVE}.${cls.SLIDE}`));\n  this.header_ = $(element.find('> header'));\n  this.backButton_ = $(element.find(`header > .${cls.GO_BACK}`));\n\n  // watch for clicks on \"slide-in\" elements\n  element.find('[data-toggle=slide-in]').on('click', (evt) => {\n\n    const cls = exports.Controller_.ClassName_;\n\n    // the element to slide out is the div.slide parent\n    const slideOut = $(evt.currentTarget).parents(`.${cls.SLIDE}`);\n    googAsserts.assert(slideOut.length === 1);\n\n    // push the item to the selected stack\n    this.slid_.push(slideOut);\n\n    // slide the \"old\" element out\n    slideOut.addClass(cls.SLIDE_OUT).removeClass(cls.ACTIVE);\n\n    // element to slide in\n    const slideIn = $($(evt.currentTarget).attr('data-target'));\n    googAsserts.assert(slideIn.length === 1);\n\n    // slide the \"new\" element in\n    slideIn.addClass(cls.ACTIVE);\n\n    // update the navigation header\n    this.updateNavigationHeader_(slideIn, false);\n\n    this.active_ = slideIn;\n  });\n\n  // watch for clicks on the header \"go-back\" link\n  this.backButton_.click(this.back.bind(this));\n};\n\n\n/**\n * @param {!jQuery} active The currently active sliding box.\n * @param {boolean} back Whether to move back.\n * @private\n */\nexports.Controller_.prototype.updateNavigationHeader_ = function(\n  active, back) {\n  const cls = exports.Controller_.ClassName_;\n  this.header_.toggleClass(cls.BACK, back);\n\n  // remove any inactive nav\n  this.header_.find(`nav:not(.${cls.ACTIVE} +)`).remove();\n\n  // deactivate the currently active nav\n  this.header_.find(`nav.${cls.ACTIVE}`).removeClass(cls.ACTIVE)\n    .addClass(cls.SLIDE_OUT);\n\n  // show the back button when relevant\n  this.backButton_.toggleClass(cls.ACTIVE, this.slid_.length > 0);\n\n  // create a new nav\n  const nav = $('<nav>');\n  nav.append($('<span>', {\n    text: active.attr('data-header-title')\n  }));\n  this.header_.append(nav);\n\n  // Delay the activation of the new navigation so that the previous\n  // one is properly deactivated. This prevents weird animation\n  // effects.\n  window.setTimeout(() => {\n    // fix for safari: the following 3 lines force that the position\n    // of the newly inserted element is calculated.\n    // see http://stackoverflow.com/a/3485654/119937\n    nav.css('display', 'none');\n    nav.offset();\n    nav.css('display', '');\n\n    window.setTimeout(() => {\n      // fix: calling `position()` makes sure that the animation\n      // is always run\n      nav.position();\n      nav.addClass(exports.Controller_.ClassName_.ACTIVE);\n    }, 0);\n  }, 0);\n};\n\n\n/**\n * Return to the previous slide.\n * @private\n */\nexports.Controller_.prototype.back_ = function() {\n  if (this.slid_.length <= 0) {\n    return;\n  }\n\n  const cls = exports.Controller_.ClassName_;\n\n  // slide active item to the right\n  this.active_.removeClass(cls.ACTIVE);\n\n  // get the previously active item\n  const slideBack = this.slid_.pop();\n\n  // slide previous item to the right\n  slideBack.addClass(cls.ACTIVE).removeClass(cls.SLIDE_OUT);\n\n  // update the navigation header\n  this.updateNavigationHeader_(slideBack, true);\n\n  this.active_ = slideBack;\n};\n\n\n/**\n * Return to the previous slide if the given element is active.\n *\n * @param {Element} element The element to check.\n */\nexports.Controller_.prototype.backIfActive = function(element) {\n  if (this.active_ !== null && this.active_.is(element)) {\n    this.back_();\n  }\n};\n\n\n/**\n * CSS class names toggled by the controller.\n * @enum {string}\n * @private\n */\n\nexports.Controller_.ClassName_ = {\n  ACTIVE: 'gmf-mobile-nav-active',\n  BACK: 'gmf-mobile-nav-back',\n  GO_BACK: 'gmf-mobile-nav-go-back',\n  SLIDE: 'gmf-mobile-nav-slide',\n  SLIDE_OUT: 'gmf-mobile-nav-slide-out'\n};\n\n\n/**\n * A directive to be used in conjunction with {@link gmf.mobile.navigation.component}.\n * The directive can be set on a slide element of {@link gmf.mobile.navigation.component}\n * with an expression. When the value of the expression changes and becomes\n * true, the navigation returns to the previous slide, if the slide is\n * currently active.\n *\n * Example:\n *\n *    <nav class=\"gmf-mobile-nav-left\" gmf-mobile-nav>\n *      ...\n *      <gmf-authentication class=\"gmf-mobile-nav-slide\"\n *         gmf-mobile-nav-back=\"authCtrl.gmfUser.username !== null\">\n *      </gmf-authentication>\n *\n * If `mainCtrl.gmfUser.username` becomes true and the login-slide is currently\n * active, the navigation will go back to the last slide.\n *\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n */\nexports.backDirective = function() {\n  return {\n    require: '^^gmfMobileNav',\n    restrict: 'A',\n    scope: false,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {gmf.mobile.navigation.component.Controller_} navCtrl Controller.\n     */\n    link: (scope, element, attrs, navCtrl) => {\n      scope.$watch(attrs['gmfMobileNavBack'], (newVal, oldVal) => {\n        if (newVal === true) {\n          navCtrl.backIfActive(element[0]);\n        }\n      });\n    }\n  };\n};\n\nexports.directive('gmfMobileNavBack', exports.backDirective);\n\n\n/**\n * A directive to be used in conjunction with {@link gmf.mobile.navigation.component}.\n * The directive can be set on a slide element of {@link gmf.mobile.navigation.component}.\n * When the element is clicked, the navigation returns to the previous slide if\n * the slide is currently active.\n *\n * Example:\n *\n *    <nav class=\"gmf-mobile-nav-left\" gmf-mobile-nav>\n *      ...\n *      <gmf-themeselector\n *         gmf-mobile-nav-back-on-click\n *         gmf-themeselector-currenttheme=\"mainCtrl.theme\">\n *      </gmf-themeselector>\n *\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n */\nexports.backOnClickDirective = function() {\n  return {\n    require: '^^gmfMobileNav',\n    restrict: 'A',\n    scope: false,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {gmf.mobile.navigation.component.Controller_} navCtrl Controller.\n     */\n    link: (scope, element, attrs, navCtrl) => {\n      element.on('click', () => {\n        navCtrl.backIfActive(element[0]);\n      });\n    }\n  };\n};\n\nexports.directive('gmfMobileNavBackOnClick', exports.backOnClickDirective);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.sortableComponent\n */\nimport 'jquery-ui/ui/widgets/sortable.js';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoSortable', []);\n\n\n/**\n * Provides a directive that allows drag-and-dropping DOM items between them.\n * It also changes the order of elements in the given array.\n *\n * It is typically used together with `ng-repeat`, for example for re-ordering\n * layers in a map.\n *\n * Example:\n *\n *     <ul ngeo-sortable=\"ctrl.layers\"\n *         ngeo-sortable-options=\"{handleClassName: 'ngeo-sortable-handle'}\">\n *       <li ng-repeat=\"layer in ctrl.layers\">\n *         <span class=\"ngeo-sortable-handle\">handle</span>{{layer.get('name')}}\n *       </li>\n *     </ul>\n *\n * The value of the \"ngeo-sortable\" attribute is an expression which evaluates\n * to an array (an array of layers in the above example). This is the array\n * that is re-ordered after a drag-and-drop.\n *\n * The element with the class \"ngeo-sortable-handle\" is the \"drag handle\".\n * It is required.\n *\n * This directives uses `$watchCollection` to watch the \"sortable\" array. So\n * if some outside code adds/removes elements to/from the \"sortable\" array,\n * the \"ngeoSortable\" directive will pick it up.\n *\n * See our live example: [../examples/layerorder.html](../examples/layerorder.html)\n *\n * @htmlAttribute {Array.<ol.layer.Base>} ngeo-sortable The layers to sort.\n * @htmlAttribute {!ngeox.miscSortableOptions} ngeo-sortable-options The options.\n * @htmlAttribute {Function(angular.JQLite, Array)?} ngeo-sortable-callback\n *     Callback function called after the move end. The Function will be called\n *     with the element and the sort array as arguments.\n * @htmlAttribute {Object?} ngeo-sortable-callback-ctx Context to apply at\n *     the call of the callback function.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoSortable\n */\nexports.component_ = function($timeout) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const sortable = /** @type {Array} */\n              (scope.$eval(attrs['ngeoSortable'])) || [];\n      googAsserts.assert(Array.isArray(sortable));\n\n      scope.$watchCollection(() => sortable, () => {\n        sortable.length && $timeout(resetUpDragDrop, 0);\n      });\n\n      const optionsObject = scope.$eval(attrs['ngeoSortableOptions']);\n      const options = getOptions(optionsObject);\n\n      const callbackFn = scope.$eval(attrs['ngeoSortableCallback']);\n      const callbackCtx = scope.$eval(attrs['ngeoSortableCallbackCtx']);\n\n      /**\n       * This function resets drag&drop for the list. It is called each\n       * time the sortable array changes (see $watchCollection above).\n       */\n      function resetUpDragDrop() {\n        // Add an index to the sortable to allow sorting of the\n        // underlying data.\n        const children = element.children();\n        for (let i = 0; i < children.length; ++i) {\n          angular.element(children[i]).data('idx', i);\n        }\n\n        const sortableElement = $(element);\n\n        // the element is already sortable; reset it.\n        if (sortableElement.data('ui-sortable')) {\n          sortableElement.off('sortupdate');\n          sortableElement.sortable('destroy');\n        }\n\n        const sortableOptions = {\n          'axis': 'y',\n          'classes': {\n            'ui-sortable-helper': options['draggerClassName']\n          }\n        };\n\n        // CSS class of the handle\n        if (options['handleClassName']) {\n          sortableOptions['handle'] = `.${options['handleClassName']}`;\n        }\n\n        // Placeholder for the item being dragged in the sortable list\n        if (options['placeholderClassName']) {\n          sortableOptions['placeholder'] = options['placeholderClassName'];\n          sortableOptions['forcePlaceholderSize'] = true;\n        }\n\n        sortableElement.sortable(sortableOptions);\n\n        // This event is triggered when the user stopped sorting and\n        // the DOM position (i.e. order in the sortable list) has changed.\n        sortableElement.on('sortupdate', (event, ui) => {\n          const oldIndex = $(ui.item[0]).data('idx');\n          const newIndex = ui.item.index();\n\n          // Update (data)-index on dom element to its new position\n          $(ui.item[0]).data('idx', newIndex);\n\n          // Move dragged item to new position\n          scope.$apply(() => {\n            sortable.splice(newIndex, 0, sortable.splice(oldIndex, 1)[0]);\n          });\n\n          // Call the callback function if it exists.\n          if (callbackFn instanceof Function) {\n            callbackFn.apply(callbackCtx, [element, sortable]);\n          }\n        });\n      }\n\n      /**\n       * @param {?} options Options after expression evaluation.\n       * @return {!ngeox.miscSortableOptions} Options object.\n       * @private\n       */\n      function getOptions(options) {\n        let ret;\n        const defaultHandleClassName = 'ngeo-sortable-handle';\n        if (options === undefined) {\n          ret = {'handleClassName': defaultHandleClassName};\n        } else {\n          if (options['handleClassName'] === undefined) {\n            options['handleClassName'] = defaultHandleClassName;\n          }\n          ret = /** @type {ngeox.miscSortableOptions} */ (options);\n        }\n        return ret;\n      }\n\n    }\n  };\n};\n\nexports.directive('ngeoSortable', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.popoverComponent\n */\nimport 'bootstrap/js/tooltip.js';\nimport 'bootstrap/js/popover.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoPopover', []);\n\n\n/**\n * Provides a directive used to display a Bootstrap popover.\n *\n *<div ngeo-popover>\n *  <a ngeo-popover-anchor class=\"btn btn-info\">anchor 1</a>\n *  <div ngeo-popover-content>\n *    <ul>\n *      <li>action 1:\n *        <input type=\"range\"/>\n *      </li>\n *    </ul>\n *  </div>\n *</div>\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopover\n * @return {angular.Directive} The Directive Definition Object.\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoPopoverController as popoverCtrl',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.anchorElm.on('hidden.bs.popover', () => {\n        /**\n         * @type {{inState : Object}}\n         */\n        const popover = ngeoPopoverCtrl.anchorElm.data('bs.popover');\n        popover['inState'].click = false;\n      });\n\n      ngeoPopoverCtrl.anchorElm.on('inserted.bs.popover', () => {\n        ngeoPopoverCtrl.bodyElm.show();\n        ngeoPopoverCtrl.shown = true;\n      });\n\n      ngeoPopoverCtrl.anchorElm.popover({\n        container: 'body',\n        html: true,\n        content: ngeoPopoverCtrl.bodyElm,\n        placement: attrs['ngeoPopoverPlacement'] || 'right'\n      });\n\n      if (attrs['ngeoPopoverDismiss']) {\n        $(attrs['ngeoPopoverDismiss']).on('scroll', () => {\n          ngeoPopoverCtrl.dismissPopover();\n        });\n      }\n\n      scope.$on('$destroy', () => {\n        ngeoPopoverCtrl.anchorElm.popover('destroy');\n        ngeoPopoverCtrl.anchorElm.unbind('inserted.bs.popover');\n        ngeoPopoverCtrl.anchorElm.unbind('hidden.bs.popover');\n      });\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopoverAnchor\n * @return {angular.Directive} The Directive Definition Object\n */\nexports.anchorComponent = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoPopover',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.anchorElm = elem;\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopoverContent\n * @return {angular.Directive} The Directive Definition Object\n */\nexports.contentComponent = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoPopover',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.bodyElm = elem;\n      elem.hide();\n    }\n  };\n};\n\n/**\n * The controller for the 'popover' directive.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoPopoverController\n * @param {angular.Scope} $scope Scope.\n */\nexports.PopoverController_ = function($scope) {\n  /**\n   * The state of the popover (displayed or not)\n   * @type {boolean}\n   * @export\n   */\n  this.shown = false;\n\n  /**\n   * @type {angular.JQLite|undefined}\n   * @export\n   */\n  this.anchorElm = undefined;\n\n  /**\n   * @type {angular.JQLite|undefined}\n   * @export\n   */\n  this.bodyElm = undefined;\n\n  function onMouseDown(clickEvent) {\n    if (this.anchorElm[0] !== clickEvent.target &&\n      this.bodyElm.parent()[0] !== clickEvent.target &\n      this.bodyElm.parent().find(clickEvent.target).length === 0 && this.shown) {\n      this.dismissPopover();\n    }\n  }\n\n  angular.element('body').on('mousedown', onMouseDown.bind(this));\n\n  $scope.$on('$destroy', () => {\n    angular.element('body').off('mousedown', onMouseDown);\n  });\n};\n\n\n/**\n * Dissmiss popover function\n * @export\n */\nexports.PopoverController_.prototype.dismissPopover = function() {\n  this.shown = false;\n  this.anchorElm.popover('hide');\n};\n\n\nexports.controller('NgeoPopoverController', exports.PopoverController_);\nexports.directive('ngeoPopover', exports.component_);\nexports.directive('ngeoPopoverAnchor', exports.anchorComponent);\nexports.directive('ngeoPopoverContent', exports.contentComponent);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.colorpickerComponent\n */\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoColorpicker', []);\n\n\nexports.value('ngeoColorpickerTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoColorpickerTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/misc/colorpickerComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/misc/colorpickerComponent', require('./colorpickerComponent.html'));\n});\n\n\n/**\n * Provides the \"ngeoColorpicker\" directive, a widget for\n * selecting a color among predefined ones.\n *\n * Example:\n *\n *     <div ngeo-colorpicker=\"ctrl.colors\">\n *     </div>\n *\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoColorpickerTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoColorpicker\n */\nexports.component_ = function(ngeoColorpickerTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: {\n      colors: '<?ngeoColorpicker',\n      color: '=?ngeoColorpickerColor'\n    },\n    controller: 'NgeoColorpickerController as ctrl',\n    bindToController: true,\n    templateUrl: ngeoColorpickerTemplateUrl\n  };\n};\n\nexports.directive('ngeoColorpicker',\n  exports.component_);\n\n/**\n * Fefault colors for the colorpicker\n * @type {Array.<Array.<string>>}\n * @const\n * @export\n */\nexports.DEFAULT_COLORS = [\n  ['#F4EB37', '#CDDC39', '#62AF44', '#009D57', '#0BA9CC', '#4186F0', '#3F5BA9', '#7C3592', '#A61B4A', '#DB4436', '#F8971B', '#F4B400', '#795046'],\n  ['#F9F7A6', '#E6EEA3', '#B7DBAB', '#7CCFA9', '#93D7E8', '#9FC3FF', '#A7B5D7', '#C6A4CF', '#D698AD', '#EE9C96', '#FAD199', '#FFDD5E', '#B29189'],\n  ['#ffffff', '#CCCCCC', '#777', '#000000']\n];\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.Controller_ = function($scope, $element, $attrs) {\n\n  /**\n   * The set of color\n   * @type {Array.<Array.<string>>}\n   * @export\n   */\n  this.colors = this.colors || exports.DEFAULT_COLORS;\n\n  /**\n   * The selected color\n   * @type {undefined|string}\n   * @export\n   */\n  this.color;\n};\n\n/**\n * @param {string} color The color to select.\n * @export\n */\nexports.Controller_.prototype.setColor = function(color) {\n  this.color = color;\n};\n\nexports.controller('NgeoColorpickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.search.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfSearchFulltextSearch from 'gmf/search/FulltextSearch.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscAutoProjection from 'ngeo/misc/AutoProjection.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopoverComponent from 'ngeo/message/popoverComponent.js';\n\nimport ngeoSearchModule from 'ngeo/search/module.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olObj from 'ol/obj.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfSearch', [\n  gmfLayertreeTreeManager.module.name,\n  gmfSearchFulltextSearch.module.name,\n  gmfThemeThemes.module.name,\n  ngeoMiscAutoProjection.module.name,\n  ngeoMiscColorpickerComponent.name,\n  ngeoSearchModule.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessagePopoverComponent.name,\n]);\n\n\n/**\n * @param {angular.JQLite} element Element.\n * @param {angular.Attributes} attrs Attributes.\n * @return {string} Template URL.\n */\nexports.gmfSearchTemplateUrl_ = (element, attrs) => {\n  const templateUrl = attrs['gmfSearchTemplateurl'];\n  return templateUrl !== undefined ? templateUrl :\n    'gmf/search';\n};\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/search', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfSearchTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfSearchTemplateUrl($element, $attrs, gmfSearchTemplateUrl) {\n  return gmfSearchTemplateUrl($element, $attrs);\n}\n\n\n/**\n * A component that allows to search and recenter on a selected\n * result's feature.\n * It can search in multiple GeoJSON datasources.\n * It can filter and group results by a feature's property.\n *\n * This component uses the {@link ngeo.map.FeatureOverlayMgr} to create a\n * feature overlay for drawing features on the map. The application\n * is responsible to initialize the {@link ngeo.map.FeatureOverlayMgr}\n * with the map.\n *\n * Example flat results:\n *\n *      <gmf-search gmf-search-map=\"::ctrl.map\"\n *        gmf-search-options=\"::ctrl.searchOptions\"\n *        gmf-search-styles=\"::ctrl.searchStyles\"\n *        gmf-search-datasources=\"::ctrl.searchDatasources\"\n *        gmf-search-coordinatesprojections=\"::ctrl.searchCoordinatesProjections\">\n *      </gmf-search>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('fulltextsearchUrl', '${request.route_url('fulltextsearch', _query={\"limit\": 20}) | n}');\n *          module.value('gmfSearchGroups', []);\n *          module.constant('gmfSearchActions', [\n *                {action: 'add_theme', title: 'Add a theme'},\n *                {action: 'add_group', title: 'Add a sub theme'},\n *                {action: 'add_layer', title: 'Add a layer'}\n *          ]);\n *        })();\n *      </script>\n *\n * Example with categories:\n *\n *      <gmf-search gmf-search-map=\"::ctrl.map\"\n *        gmf-search-options=\"::ctrl.searchOptions\"\n *        gmf-search-styles=\"::ctrl.searchStyles\"\n *        gmf-search-datasources=\"::ctrl.searchDatasources\"\n *        gmf-search-coordinatesprojections=\"::ctrl.searchCoordinatesProjections\">\n *      </gmf-search>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('fulltextsearchUrl', '${request.route_url('fulltextsearch', _query={\"limit\": 30, \"partitionlimit\": 5}) | n}');\n *          module.value('gmfSearchGroups', ${dumps(fulltextsearch_groups) | n});\n *          module.value('gmfSearchActions', []);\n *        })();\n *     </scriptrchUrl' value in the examples above set three \"_query\" parameters: \"limit\",\n *\n * The 'fulltextsearchUrl' value in the examples above set three \"_query\" parameters: \"limit\",\n * \"partitionlimit\" and \"ranksystem\". For this last one \"ts_rank_cd\" is the only effective value. It's used to\n * order your search results with the \"ts_rank_cd\" ranking system from PostgreSQL module pg_trgm. Without\n * this value, the PostgreSQL function \"similarity\" (module pg_trgm) is used for the ranking. Read the\n * full-text search c2cgeoportal documentation to know more.\n * You can also add these parameters to the \"url\" variable of one (or more) of the\n * gmfx.SearchDirectiveDatasource given to this component (here within the \"ctrl.searchDatasources\"). That\n * allows you to have multiples configurations on one search component.\n *\n * @htmlAttribute {string} gmf-search-input-value The input value (read only).\n * @htmlAttribute {ol.Map} gmf-search-map The map.\n * @htmlAttribute {TypeaheadOptions|undefined} gmf-search-options Addition Typeahead options.\n * @htmlAttribute {gmfx.SearchComponentDatasource} gmf-search-datasource\n *      The datasources.\n * @htmlAttribute {Object.<string, ol.style.Style>}\n *      gmf-search-styles A map of styles to apply on searched features. Keys\n *      must be the 'layer_name' property of features except for coordinates\n *      where the key ifor its style is the value of the constant\n *      'gmf.COORDINATES_LAYER_NAME'. The 'default' key is used to apply the\n *      default style.\n * @htmlAttribute {Array.<string>} gmf-search-coordinatesprojections codes\n *      of supported projections for coordinates search (projections must be\n *      defined in ol3). If not provided, only the map's view projection\n *      format will be supported.\n * @htmlAttribute {ngeox.SearchComponentListeners} gmf-search-listeners\n *      The listeners.\n * @htmlAttribute {boolean=} gmf-search-clearbutton Optional clear button in the input search. Default to true.\n * @htmlAttribute {number=} gmf-search-delay Optional bloodhound request delay in ms. Default to 50 ms.\n * @htmlAttribute {boolean=} gmf-search-colorchooser Optional. Whether to let the user\n *      change the style of the feature on the map. Default is false.\n * @htmlAttribute {number=} gmf-search-maxzoom Optional maximum zoom we will zoom on result, default is 16.\n * @htmlAttribute {function=} gmf-search-on-init Optional function called when the component is initialized.\n * @ngdoc component\n * @ngname gmfSearch\n */\nexports.component_ = {\n  bindings: {\n    'inputValue': '=?gmfSearchInputValue',\n    'placeholder': '@?gmfSearchPlaceholder',\n    'map': '<gmfSearchMap',\n    'datasources': '<gmfSearchDatasources',\n    'typeaheadOptions': '<?gmfSearchOptions',\n    'featuresStyles': '<?gmfSearchStyles',\n    'clearButton': '=?gmfSearchClearbutton',\n    'colorChooser': '<?gmfSearchColorchooser',\n    'coordinatesProjections': '<?gmfSearchCoordinatesprojections',\n    'additionalListeners': '<gmfSearchListeners',\n    'maxZoom': '<?gmfSearchMaxzoom',\n    'delay': '<?gmfSearchDelay',\n    'onInitCallback': '<?gmfSearchOnInit'\n  },\n  controller: 'gmfSearchController',\n  templateUrl: gmfSearchTemplateUrl\n};\n\n\nexports.value('gmfSearchTemplateUrl', exports.gmfSearchTemplateUrl_);\n\n\n// Register the controller in the module\nexports.component('gmfSearch', exports.component_);\n\n\n/**\n * @private\n */\nexports.SearchController_ = class {\n\n  /**\n   * @private\n   * @param {jQuery} $element Element.\n   * @param {angular.Scope} $scope The component's scope.\n   * @param {angular.$compile} $compile Angular compile service.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {ngeo.misc.AutoProjection} ngeoAutoProjection The ngeo coordinates service.\n   * @param {ngeo.search.createGeoJSONBloodhound.Function} ngeoSearchCreateGeoJSONBloodhound The ngeo\n   *     create GeoJSON Bloodhound service.\n   * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n   *     overlay manager service.\n   * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n   * @param {gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n   * @param {gmf.search.FulltextSearch} gmfSearchFulltextSearch gmf Full text search service.\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfSearchController\n   */\n  constructor($element, $scope, $compile, $timeout, $injector,\n    gettextCatalog, ngeoAutoProjection, ngeoSearchCreateGeoJSONBloodhound,\n    ngeoFeatureOverlayMgr, gmfThemes, gmfTreeManager, gmfSearchFulltextSearch) {\n\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {angular.$compile}\n     * @private\n     */\n    this.compile_ = $compile;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    /**\n     * @type {gmf.layertree.TreeManager}\n     * @private\n     */\n    this.gmfTreeManager_ = gmfTreeManager;\n\n    /**\n     * @type {gmf.search.FulltextSearch}\n     * @private\n     */\n    this.fullTextSearch_ = gmfSearchFulltextSearch;\n\n    /**\n     * @type {ngeo.search.createGeoJSONBloodhound.Function}\n     * @private\n     */\n    this.ngeoSearchCreateGeoJSONBloodhound_ = ngeoSearchCreateGeoJSONBloodhound;\n\n    /**\n     * @type {ngeo.map.FeatureOverlayMgr}\n     * @private\n     */\n    this.ngeoFeatureOverlayMgr = ngeoFeatureOverlayMgr;\n\n    /**\n     * @type {ngeo.statemanager.Location|undefined}\n     * @private\n     */\n    this.ngeoLocation_;\n\n    if ($injector.has('ngeoLocation')) {\n      this.ngeoLocation_ = $injector.get('ngeoLocation');\n    }\n\n    /**\n     * @type {ngeo.misc.AutoProjection}\n     * @private\n     */\n    this.ngeoAutoProjection_ = ngeoAutoProjection;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {Object}\n     * @private\n     */\n    this.styles_ = {};\n\n    /**\n     * @type {function()}\n     * @export\n     */\n    this.onInitCallback;\n\n    /**\n     * Whether or not to show a button to clear the search text.\n     * Default to true.\n     * @type {boolean}\n     * @export\n     */\n    this.clearButton;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.colorChooser;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.placeholder;\n\n    /**\n     * @type {number}\n     * @export\n     */\n    this.delay;\n\n    /**\n     * The maximum zoom we will zoom on result.\n     * @type {number}\n     * @export\n     */\n    this.maxZoom = 16;\n\n    /**\n     * Supported projections for coordinates search.\n     * @type {Array.<ol.proj.Projection>}\n     * @export\n     */\n    this.coordinatesProjections;\n\n    /**\n     * @type {ngeo.map.FeatureOverlay}\n     * @private\n     */\n    this.featureOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n    /**\n     * @type {Array.<gmfx.SearchComponentDatasource>}\n     * @export\n     */\n    this.datasources = [];\n\n    /**\n     * @type {TypeaheadOptions}\n     * @export\n     */\n    this.typeaheadOptions;\n\n    /**\n     * @type {TypeaheadOptions}\n     * @export\n     */\n    this.options = /** @type {TypeaheadOptions} */ ({\n      highlight: true\n    });\n\n    /**\n     * @type {Object.<string, ol.style.Style>}\n     * @export\n     */\n    this.featuresStyles;\n\n    /**\n     * @type {Array.<TypeaheadDataset>}\n     * @export\n     */\n    this.datasets = [];\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.inputValue = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.color;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.displayColorPicker = false;\n\n    /**\n     * @type {ngeox.SearchDirectiveListeners}\n     * @export\n     */\n    this.listeners;\n\n    /**\n     * @type {ngeox.SearchDirectiveListeners}\n     * @export\n     */\n    this.additionalListeners;\n  }\n\n\n  /**\n   * Called on initialization of the controller.\n   */\n  $onInit() {\n    const gettextCatalog = this.gettextCatalog_;\n    this.clearButton = this.clearButton !== false;\n    this.colorChooser = this.colorChooser === true;\n    if (this.delay === undefined) {\n      this.delay = 50;\n    }\n    this.placeholder = this.placeholder !== undefined ? this.placeholder :\n      gettextCatalog.getString('Search…');\n\n    // Init coordinates projections\n    let coordProj = this.coordinatesProjections;\n    if (coordProj === undefined) {\n      coordProj = [this.map.getView().getProjection()];\n    } else {\n      coordProj = this.ngeoAutoProjection_.getProjectionList(\n        /** @type {Array.<string>} */ (coordProj)\n      );\n    }\n    this.coordinatesProjections = coordProj;\n\n    if (!this.clearButton) {\n      // Empty the search field on focus and blur.\n      this.element_.find('input').on('focus blur', () => {\n        this.clear();\n      });\n    }\n\n    if (this.onInitCallback) {\n      this.onInitCallback();\n    }\n\n    this.initStyles_();\n\n    this.featureOverlay_.setStyle(this.getSearchStyle_.bind(this));\n\n    if (this.typeaheadOptions) {\n      olObj.assign(this.options, this.typeaheadOptions);\n    }\n\n    this.initDatasets_();\n\n    this.scope_.$watch(\n      () => this.color,\n      this.setStyleColor.bind(this)\n    );\n\n    this.listeners = this.mergeListeners_(\n      this.additionalListeners,\n      /** @type {ngeox.SearchDirectiveListeners} */ ({\n        select: this.select_.bind(this),\n        close: this.close_.bind(this),\n        datasetsempty: this.datasetsempty_.bind(this)\n      })\n    );\n\n    if (this.ngeoLocation_) {\n      const searchQuery = this.ngeoLocation_.getParam('search');\n      if (searchQuery) {\n        let resultIndex = 1;\n        if (this.ngeoLocation_.getParam('search-select-index')) {\n          resultIndex = parseInt(this.ngeoLocation_.getParam('search-select-index'), 10);\n        }\n        let mapZoom;\n        if (this.ngeoLocation_.getParam('search-maxzoom')) {\n          mapZoom = parseInt(this.ngeoLocation_.getParam('search-maxzoom'), 10);\n        } else if (this.ngeoLocation_.getParam('map_zoom')) {\n          mapZoom = parseInt(this.ngeoLocation_.getParam('map_zoom'), 10);\n        }\n        this.fulltextsearch_(searchQuery, resultIndex, mapZoom);\n      }\n    }\n  }\n\n\n  /**\n   * Merges the custom listeners received via the component attributes and the\n   * listeners that are needed for this controller to function (close and select).\n   * @param {ngeox.SearchDirectiveListeners} additionalListeners Custom provided\n   *    listeners.\n   * @param {ngeox.SearchDirectiveListeners} listeners Default listeners.\n   * @return {ngeox.SearchDirectiveListeners} Merged listeners.\n   * @private\n   */\n  mergeListeners_(additionalListeners, listeners) {\n    if (additionalListeners === undefined) {\n      return listeners;\n    }\n    return {\n      open: additionalListeners.open,\n      close: additionalListeners.close === undefined ?\n        listeners.close : function() {\n          listeners.close();\n          additionalListeners.close();\n        },\n      cursorchange: additionalListeners.cursorchange,\n      datasetsempty: additionalListeners.datasetsempty,\n      select: additionalListeners.select === undefined ?\n        listeners.select : function(evt, obj, dataset) {\n          listeners.select(evt, obj, dataset);\n          additionalListeners.select(evt, obj, dataset);\n        },\n      autocomplete: additionalListeners.autocomplete\n    };\n  }\n\n\n  /**\n   * Initialize datasets for the search\n   * @private\n   */\n  initDatasets_() {\n    const gettextCatalog = this.gettextCatalog_;\n    for (let i = 0; i < this.datasources.length; i++) {\n      const datasource = this.datasources[i];\n\n      /** @type {Array.<string>} */\n      const groupValues = datasource.groupValues !== undefined ? datasource.groupValues : [];\n      /** @type {Array.<string>} */\n      const groupActions = datasource.groupActions ? datasource.groupActions : [];\n      const filters = [];\n\n      if (groupValues.length === 0) {\n        filters.push({\n          'title': '',\n          'filter': this.filterLayername_()\n        });\n      } else {\n        groupValues.forEach(function(layerName) {\n          filters.push({\n            'title': layerName,\n            'filter': this.filterLayername_(layerName)\n          });\n        }, this);\n      }\n\n      groupActions.forEach(function(action) {\n        filters.push({\n          'title': gettextCatalog.getString(action['title']),\n          'filter': this.filterAction_(action['action'])\n        });\n      }, this);\n\n      filters.forEach(function(filter) {\n        this.datasets.push(this.createDataset_({\n          bloodhoundOptions: datasource.bloodhoundOptions,\n          datasetTitle: filter['title'],\n          groupsKey: 'layer_name',\n          labelKey: datasource.labelKey,\n          projection: datasource.projection,\n          typeaheadDatasetOptions: datasource.typeaheadDatasetOptions,\n          url: datasource.url\n        }, filter['filter']));\n      }, this);\n    }\n\n    // For searching coordinates\n    this.datasets.push({\n      source: this.createSearchCoordinates_(this.map.getView()),\n      name: 'coordinates',\n      display: 'label',\n      templates: {\n        header: () => {\n          const header = gettextCatalog.getString('Recenter to');\n          return `<div class=\"gmf-search-header\" translate>${header}</div>`;\n        },\n        suggestion: (suggestion) => {\n          const coordinates = suggestion['label'];\n\n          let html = `<p class=\"gmf-search-label\">${coordinates}</p>`;\n          html = `<div class=\"gmf-search-datum\">${html}</div>`;\n          return html;\n        }\n      }\n    });\n  }\n\n\n  /**\n   * @param {gmfx.SearchComponentDatasource} config The config of the dataset.\n   * @param {(function(GeoJSONFeature): boolean)=} opt_filter A filter function\n   *     based on a GeoJSONFeaturesCollection's array.\n   * @return {TypeaheadDataset} A typeahead dataset.\n   * @private\n   */\n  createDataset_(config, opt_filter) {\n    const gettextCatalog = this.gettextCatalog_;\n    const componentScope = this.scope_;\n    const compile = this.compile_;\n    const bloodhoundEngine = this.createAndInitBloodhound_(config, opt_filter);\n    const typeaheadDataset = /** @type {TypeaheadDataset} */ ({\n      limit: Infinity,\n      source: bloodhoundEngine.ttAdapter(),\n      display: (suggestion) => {\n        const feature = /** @type {ol.Feature} */ (suggestion);\n        return feature.get(config.labelKey);\n      },\n      templates: /* TypeaheadTemplates */ ({\n        header: () => {\n          if (config.datasetTitle === undefined) {\n            return '';\n          } else {\n            const header = gettextCatalog.getString(config.datasetTitle);\n            return `<div class=\"gmf-search-header\">${header}</div>`;\n          }\n        },\n        suggestion: (suggestion) => {\n          const feature = /** @type {ol.Feature} */ (suggestion);\n\n          const scope = componentScope.$new(true);\n          scope['feature'] = feature;\n\n          let html = `<p class=\"gmf-search-label\" translate>${\n            feature.get(config.labelKey)}</p>`;\n          html += `<p class=\"gmf-search-group\" translate>${feature.get('layer_name') ||\n                  config.datasetTitle}</p>`;\n          html = `<div class=\"gmf-search-datum\">${html}</div>`;\n          return compile(html)(scope);\n        }\n      })\n    });\n    if (config.typeaheadDatasetOptions) {\n      olObj.assign(typeaheadDataset, config.typeaheadDatasetOptions);\n    }\n    return typeaheadDataset;\n  }\n\n\n  /**\n   * @param {string} action The action to keep.\n   * @return {(function(GeoJSONFeature): boolean)} A filter function based on a\n   *     GeoJSONFeaturesCollection's array.\n   * @private\n   */\n  filterAction_(action) {\n    return (\n    /**\n         * @param {GeoJSONFeature} feature\n         * @return {boolean}\n         */\n      function(feature) {\n        const properties = feature['properties'];\n        if (properties['actions']) {\n          // result is an action (add_theme, add_group, ...)\n          // add it to the corresponding group\n          return !properties['layer_name'] && properties['actions'].some(act => act.action === action);\n        } else {\n          return false;\n        }\n      }\n    );\n  }\n\n\n  /**\n   * @param {string=} opt_layerName The layerName to keep. If null, keep all layers\n   *     (In all cases, except actions layers).\n   * @return {(function(GeoJSONFeature): boolean)} A filter function based on a\n   *     GeoJSONFeaturesCollection's array.\n   * @private\n   */\n  filterLayername_(opt_layerName) {\n    return (\n    /**\n         * @param {GeoJSONFeature} feature\n         * @return {boolean}\n         */\n      function(feature) {\n        const featureLayerName = feature['properties']['layer_name'];\n        // Keep only layers with layer_name (don't keep action layers).\n        if (featureLayerName === undefined) {\n          return false;\n        }\n        if (opt_layerName === undefined) {\n          return true;\n        }\n        return featureLayerName === opt_layerName;\n      }\n    );\n  }\n\n\n  /**\n   * @param {gmfx.SearchComponentDatasource} config The config of the dataset.\n   * @param {(function(GeoJSONFeature): boolean)=} opt_filter Afilter function\n   *     based on a GeoJSONFeaturesCollection's array.\n   * @return {Bloodhound} The bloodhound engine.\n   * @private\n   */\n  createAndInitBloodhound_(config, opt_filter) {\n    const mapProjectionCode = this.map.getView().getProjection().getCode();\n    const remoteOptions = this.getBloodhoudRemoteOptions_();\n    const bloodhound = this.ngeoSearchCreateGeoJSONBloodhound_(config.url, opt_filter,\n      olProj.get(mapProjectionCode), olProj.get(config.projection),\n      config.bloodhoundOptions, remoteOptions);\n    bloodhound.initialize();\n    return bloodhound;\n  }\n\n\n  /**\n   * @return {BloodhoundRemoteOptions} Options.\n   * @private\n   */\n  getBloodhoudRemoteOptions_() {\n    const gettextCatalog = this.gettextCatalog_;\n    return {\n      rateLimitWait: this.delay,\n      prepare: (query, settings) => {\n        const url = settings.url;\n        const lang = gettextCatalog.currentLanguage;\n        const interfaceName = 'mobile'; // FIXME dynamic interfaces\n        settings.xhrFields = {\n          withCredentials: true\n        };\n        settings.url = olUri.appendParams(url, {\n          'query': query,\n          'lang': lang,\n          'interface': interfaceName\n        });\n        return settings;\n      }\n    };\n  }\n\n\n  /**\n   * @param {ol.View} view View.\n   * @return {function(string, function(Object))} function defining parameters for the search suggestions.\n   * @private\n   */\n  createSearchCoordinates_(view) {\n    const viewProjection = view.getProjection();\n    const extent = viewProjection.getExtent();\n    return function(query, callback) {\n      const suggestions = [];\n      const coordinates = this.ngeoAutoProjection_.stringToCoordinates(query);\n      if (coordinates === null) {\n        return;\n      }\n      const position = this.ngeoAutoProjection_.tryProjectionsWithInversion(coordinates,\n        extent, viewProjection, this.coordinatesProjections);\n      if (position === null) {\n        return;\n      }\n      suggestions.push({\n        label: coordinates.join(' '),\n        position: position,\n        'tt_source': 'coordinates'\n      });\n      callback(suggestions);\n    }.bind(this);\n  }\n\n\n  /**\n   * Init the style object for the search results. It set defaults for the\n   * coordinates and the polygon styles, and both can be overloaded from component\n   * attributes. The styles from component attributes can specify custom styles\n   * for each search group.\n   * @private\n   */\n  initStyles_() {\n    this.styles_[gmfBase.COORDINATES_LAYER_NAME] = new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({color: [0, 0, 0, 0.7], width: 2}),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    });\n    const fill = new olStyleFill({\n      color: [65, 134, 240, 0.5]\n    });\n    const stroke = new olStyleStroke({\n      color: [65, 134, 240, 1],\n      width: 2\n    });\n    this.styles_['default'] = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke\n    });\n    const customStyles = this.featuresStyles || {};\n    olObj.assign(this.styles_, customStyles);\n  }\n\n  /**\n   * Style for search results.\n   * @param {null|ol.Feature|ol.render.Feature} feature The searched feature.\n   * @param {number} resolution The current resolution of the map.\n   * @return {ol.style.Style} A style for this kind of features.\n   * @private\n   */\n  getSearchStyle_(feature, resolution) {\n    googAsserts.assert(feature);\n    const style = this.styles_[feature.get('layer_name')] || this.styles_['default'];\n    if (this.color) {\n      const color = olColor.asArray(this.color);\n\n      const strokeColor = color.slice();\n      // 100% opacity for the stroke color\n      strokeColor[3] = 1;\n\n      const fillColor = color.slice();\n      // 50% opacity for the fill color\n      fillColor[3] = 0.5;\n\n      const strokeStyle = style.getStroke();\n      if (strokeStyle) {\n        strokeStyle.setColor(strokeColor);\n      }\n      const fillStyle = style.getFill();\n      if (fillStyle) {\n        fillStyle.setColor(fillColor);\n      }\n      const image = style.getImage();\n      if (image) {\n        style.setImage(new olStyleCircle({\n          fill: new olStyleFill({color: fillColor}),\n          radius: 5,\n          stroke: new olStyleStroke({color: strokeColor})\n        }));\n      }\n    }\n    return style;\n  }\n\n  /**\n   * Set a new color for the search feature style.\n   * @param {string} color The color to set.\n   * @export\n   */\n  setStyleColor(color) {\n    if (color) {\n      this.color = color;\n      this.ngeoFeatureOverlayMgr.getLayer().changed();\n    }\n  }\n\n  /**\n   * @private\n   */\n  setTTDropdownVisibility_() {\n    if (this.clearButton) {\n      const ttDropdown = this.element_.find('.twitter-typeahead .tt-menu');\n      (this.inputValue) ? ttDropdown.show() : ttDropdown.hide();\n    }\n  }\n\n\n  /**\n   * @export\n   */\n  onClearButton() {\n    this.featureOverlay_.clear();\n    this.clear();\n  }\n\n\n  /**\n   * @export\n   */\n  clear() {\n    const typeahead = this.element_.find('.twitter-typeahead');\n    const ttmenu = typeahead.children('.tt-menu');\n    const inputs = typeahead.children('input');\n    // clear model value, the 'real' input value and tt's suggestions\n    this.inputValue = '';\n    $(inputs[1]).typeahead('val', '');\n    ttmenu.children('.tt-dataset').empty();\n    this.setTTDropdownVisibility_();\n    this.displayColorPicker = false;\n  }\n\n\n  /**\n   * @export\n   */\n  blur() {\n    const typeahead = this.element_.find('.twitter-typeahead');\n    const inputs = typeahead.children('input');\n    // Blur as soon as possible in digest loops\n    this.timeout_(() => {\n      $(inputs[1]).blur();\n    });\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {Object|ol.Feature} suggestion Suggestion.\n   * @param {TypeaheadDataset} dataset Dataset.\n   * @private\n   */\n  select_(event, suggestion, dataset) {\n    if (suggestion['tt_source'] === 'coordinates') {\n      const geom = new olGeomPoint(suggestion['position']);\n\n      this.featureOverlay_.clear();\n      this.featureOverlay_.addFeature(new olFeature({\n        geometry: geom,\n        'layer_name': gmfBase.COORDINATES_LAYER_NAME\n      }));\n      this.map.getView().setCenter(suggestion['position']);\n      this.leaveSearch_();\n    } else {\n      googAsserts.assertInstanceof(suggestion, olFeature);\n      this.selectFromGMF_(event, suggestion, dataset);\n    }\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {ol.Feature} feature Feature.\n   * @param {TypeaheadDataset} dataset Dataset.\n   * @private\n   */\n  selectFromGMF_(event, feature, dataset) {\n    const actions = feature.get('actions');\n    const featureGeometry = /** @type {ol.geom.SimpleGeometry} */\n        (feature.getGeometry());\n    if (actions) {\n      for (let i = 0, ii = actions.length; i < ii; i++) {\n        const action = actions[i];\n        const actionName = action['action'];\n        const actionData = action['data'];\n        if (actionName == 'add_theme') {\n          this.gmfThemes_.getThemesObject().then((themes) => {\n            const theme = gmfThemeThemes.findThemeByName(themes, actionData);\n            if (theme) {\n              this.gmfTreeManager_.addFirstLevelGroups(theme.children);\n            }\n          });\n        } else if (actionName == 'add_group') {\n          this.gmfTreeManager_.addGroupByName(actionData, true);\n        } else if (actionName == 'add_layer') {\n          const groupActions = /** @type {Array.<string>} */ (\n            this.datasources[0].groupActions);\n          let datasourcesActionsHaveAddLayer;\n          groupActions.forEach((groupAction) => {\n            if (groupAction['action'] === 'add_layer') {\n              return datasourcesActionsHaveAddLayer = true;\n            }\n          });\n          if (datasourcesActionsHaveAddLayer) {\n            const silent = !!featureGeometry;\n            this.gmfTreeManager_.addGroupByLayerName(actionData, true, silent);\n          }\n        }\n      }\n    }\n\n    const size = this.map.getSize();\n    if (featureGeometry && size) {\n      const view = this.map.getView();\n      this.featureOverlay_.clear();\n      this.featureOverlay_.addFeature(feature);\n      this.displayColorPicker = true;\n      const fitArray = featureGeometry.getType() === 'GeometryCollection' ?\n        featureGeometry.getExtent() : featureGeometry;\n      view.fit(fitArray, {\n        size: size,\n        maxZoom: this.maxZoom\n      });\n    }\n    this.leaveSearch_();\n  }\n\n\n  /**\n   * @private\n   */\n  leaveSearch_() {\n    if (!this.clearButton) {\n      this.clear();\n    }\n    this.blur();\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @private\n   */\n  close_(event) {\n    if (!this.clearButton) {\n      this.setTTDropdownVisibility_();\n    }\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {string} query Query.\n   * @param {boolean} empty Empty.\n   * @private\n   */\n  datasetsempty_(event, query, empty) {\n    // workaround to display a 'no result found' in the search result when all of\n    // the datasets are empty.\n    // based on https://github.com/twitter/typeahead.js/issues/780#issuecomment-251554452\n    // FIXME: remove this workaround when https://github.com/corejavascript/typeahead.js/issues/60 is fixed\n\n    const menu = this.element_.find('.twitter-typeahead .tt-menu');\n    const message = menu.children('.gmf-search-no-results');\n    if (message.length == 0) {\n      const div = $('<div class=\"gmf-search-no-results\" translate>No result found</div>');\n      menu.append(div);\n    }\n    if (empty) {\n      message.show();\n      menu.addClass('gmf-search-no-results');\n    } else {\n      menu.removeClass('gmf-search-no-results');\n      message.hide();\n    }\n  }\n\n\n  /**\n   * Performs a full-text search and centers the map on the first search result.\n   * @param {string} query Search query.\n   * @param {number} resultIndex Return nth result instead.\n   * @param {number=} opt_zoom Optional zoom level.\n   * @private\n   */\n  fulltextsearch_(query, resultIndex, opt_zoom) {\n    if (resultIndex < 1) { // can't be lower than one\n      resultIndex = 1;\n    }\n    this.fullTextSearch_.search(query, {'limit': resultIndex})\n      .then((data) => {\n        if (data && data.features[resultIndex - 1]) {\n          const format = new olFormatGeoJSON();\n          const feature = format.readFeature(data.features[resultIndex - 1]);\n          this.featureOverlay_.addFeature(feature);\n          const fitOptions = /** @type {olx.view.FitOptions} */ ({});\n          if (opt_zoom !== undefined) {\n            fitOptions.maxZoom = opt_zoom;\n            fitOptions.size = this.map.getSize();\n          }\n          this.map.getView().fit(feature.getGeometry().getExtent(), fitOptions);\n          this.inputValue = /** @type {string} */ (feature.get('label'));\n        }\n      });\n  }\n};\n\n\n// Register the controller in the module\nexports.controller('gmfSearchController', exports.SearchController_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.recenter\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.syncArrays\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * Provides a function that synchronizes two arrays, arr1 and\n * arr2. arr2 is a subset of arr1, it includes the elements of arr1 that passes\n * the filter. When elements are added to/removed from arr1, arr2 is updated to\n * include the elements of arr1 that pass the filter. When the order of\n * elements in arr2 changes, arr1 is reordered to have the same order as arr2.\n *\n * This can for example be used to synchronize the array of layers in the map\n * with the array of selected layers, where layers may be added to/removed from\n * the map, and the order of selected layers may change.\n *\n *     let dereg = ngeoSyncArrays(map.getLayers().getArray(), selectedLayers,\n *         true, scope, function(layer) {\n *           // exclude the layer at index 0 in the map\n *           return map.getLayers().indexOf(layer) !== 0;\n *         });\n *\n * This will return a function that can be called to cancel synchronization.\n *\n * @param {Array.<T>} arr1 Array 1.\n * @param {Array.<T>} arr2 Array 2.\n * @param {boolean} reverse `true` if arr2 is in reverse order, `false`\n *     otherwise.\n * @param {angular.Scope} scope Angular scope. Used to watch arr1 and arr2\n *     using $watchCollection.\n * @param {function(T):boolean} filter Filter function.\n * @return {function()} Function to call to stop synchronization\n * @template T\n */\nconst exports = function(arr1, arr2, reverse, scope, filter) {\n\n\n  // Update arr2 when elements are added to, or removed from, arr1.\n\n  const dereg1 = scope.$watchCollection(() => arr1, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = arr1.length - 1, j = 0; i >= 0; --i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    }\n    arr2.length = j;\n  });\n\n\n  // Update arr1 when the order of elements changes in arr2.\n\n  const dereg2 = scope.$watchCollection(() => arr2, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = 0, ii = arr1.length, j = arr2.length - 1; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j--];\n        }\n      }\n      googAsserts.assert(j == -1);\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j++];\n        }\n      }\n      googAsserts.assert(j == arr2.length);\n    }\n  });\n\n  return function() {\n    dereg1();\n    dereg2();\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.layertree.component\n */\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\n\nimport 'bootstrap/js/collapse.js'; // needed to collapse a layertree\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoLayertree', [\n  ngeoLayertreeController.module.name\n]);\n\n\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoLayertreeTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/layertree';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/layertree', require('./component.html'));\n});\n\n\n/**\n * Provides the \"ngeoLayertree\" directive, a directive for\n * creating layer trees in application.\n *\n * The directive assumes that tree nodes that are not leaves have a \"children\"\n * property referencing an array of child nodes.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\">\n *      </div>\n *\n * The \"ngeo-layertree\", \"ngeo-layertree-map\" and\n * \"ngeo-layertree-nodelayer\" attributes are mandatory attributes.\n *\n * - \"ngeo-layertree\" specifies an expression providing the tree. The\n *   directive watches that expression, making it possible to retrieve\n *   the tree data through Ajax.\n *\n * - \"ngeo-layertree-map\" specifies an expression providing the OpenLayers\n *   map. The directive doesn't watch that expression.\n *\n * - The \"ngeo-layertree-nodelayer\" specifies an expression providing the\n *   layer for a given node. In most cases that expression will be function\n *   call with \"node\" as the argument to the function call. E.g.\n *   \"ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\".\n *\n * - The \"ngeo-layertree-listeners\" specifies an expression providing a function\n *   to bind scope events to customs functions. You'll must set the listener on\n *   the \"treeScope\" and probably use \"treeCtrl\" as context. E.g.\n *   \"ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\".\n *\n * The directive comes with a default template. That template assumes that\n * tree nodes that are not leaves have a \"children\" property referencing an\n * array of child nodes. It also assumes that nodes have a \"name\" property.\n *\n * By default the directive uses \"layertree.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoLayertreeTemplateUrl\" value (using\n * app.module.value('ngeoLayertreeTemplateUrl', 'path/layertree.html'), or\n * by adding an \"ngeo-layertree-templateurl\" attribute to the element.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-templateurl=\"path/to/layertree.html\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\"\n *      </div>\n *\n * The directive has its own scope, but it is not an isolate scope. That scope\n * has a \"layertreeCtrl\" property which is a reference to the directive's\n * controller: \"layertreeCtrl\". You can refer to that property in a custom\n * template for example.\n *\n * See our live example: [../examples/layertree.html](../examples/layertree.html)\n *\n * @htmlAttribute {Object} ngeo-layertree One theme (JSON).\n * @htmlAttribute {string} ngeo-layertree-templateurl The template URL.\n * @htmlAttribute {ol.Map} ngeo-layertree-map The map.\n * @htmlAttribute {string} ngeo-layertree-nodelayer Expression that will be parsed\n *      to be a {@link Function} that return a {@link ol.layer.Layer}\n *      with the argument:\n *      {\n *          'node': {@link Object}|undefined,\n *          'depth': {@link number}\n *      }\n * @htmlAttribute {string} ngeo-layertree-nodelayerexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-nodelayer}.\n * @htmlAttribute {string} ngeo-layertree-listeners Expression that will be parsed\n *      to be a {@link Function} with the argument:\n *      {\n *          'treeScope': !{@link angular.Scope},\n *          'treeCtrl': {@link ngeo.layertree.Controller}\n *      }\n * @htmlAttribute {string} ngeo-layertree-listenersexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-listeners}.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoLayertreeTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoLayertree\n */\nexports.directive_ = function(ngeoLayertreeTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: ngeoLayertreeTemplateUrl,\n    controller: ngeoLayertreeController\n  };\n};\n\n\nexports.directive('ngeoLayertree', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\n\n/** @suppress {extraRequire} */\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\n\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoLayertreeComponent from 'ngeo/layertree/component.js';\n\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscSyncArrays from 'ngeo/misc/syncArrays.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\nimport 'bootstrap/js/collapse.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeComponent', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfPermalinkPermalink.module.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeComponent.name,\n  ngeoLayertreeController.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\n\n// Overrides the path to the layertree template (used by each node, except\n// the root node that path is defined by the gmfLayertreeTemplate value.\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => 'gmf/layertree');\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree', require('./component.html'));\n});\n\n\nexports.value('gmfLayertreeTemplate',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const subTemplateUrl = 'gmf/layertree';\n    return '<div ngeo-layertree=\"gmfLayertreeCtrl.root\" ' +\n          'ngeo-layertree-map=\"gmfLayertreeCtrl.map\" ' +\n          'ngeo-layertree-nodelayer=\"gmfLayertreeCtrl.getLayer(treeCtrl)\" ' +\n          'ngeo-layertree-listeners=\"gmfLayertreeCtrl.listeners(treeScope, treeCtrl)\" ' +\n          `ngeo-layertree-templateurl=\"${subTemplateUrl}\">` +\n          '</div>';\n  }\n);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfLayertreeTemplate Template function.\n * @return {string} Template.\n * @ngInject\n */\nfunction gmfLayertreeTemplate($element, $attrs, gmfLayertreeTemplate) {\n  return gmfLayertreeTemplate($element, $attrs);\n}\n\n\n/**\n * This component creates a layertree based on the c2cgeoportal JSON themes\n * source and a {@link ngeo.layertreeComponent}. The controller used by this\n * component defines some functions for each node that are created by a default\n * template. This default template can be overridden by setting the value\n * 'gmf.layertreeTemplateUrl' but you will have to adapt the\n * ngeoLayertreeTemplateUrl value too (to define the children's nodes template\n * path).\n *\n * Example:\n *\n *      <gmf-layertree\n *        gmf-layertree-dimensions=\"ctrl.dimensions\"\n *        gmf-layertree-map=\"ctrl.map\">\n *      </gmf-layertree>\n *\n * You can add an attribute 'gmf-layertree-openlinksinnewwindow=\"::true\"' to open\n * metadata URLs in a new window. By default, and in the default template,\n * links will be opened in a popup (The window.gmfx.openIframePopup function must be available !)\n *\n * Used UI metadata:\n *\n *  * isChecked: if 'false' the layer visibility will be set to false.\n *  * iconUrl: layer icon full URL.\n *  * legendRule: WMS rule used to get a layer icon.\n *  * isLegendExpanded: if 'true' the legend is expanded by default.\n *  * metadataUrl: Display a popup with the content of the given URL if\n *    possible also open a new window.\n *\n * @htmlAttribute {ol.Map} gmf-layertree-map The map.\n * @htmlAttribute {Object<string, string>|undefined} gmf-layertree-dimensions Global dimensions object.\n * @htmlAttribute {boolean|undefined} gmf-layertree-openlinksinnewwindow if true, open\n *     metadataURLs in a new window. Otherwise open them in a popup.\n *\n * @ngdoc component\n * @ngname gmfLayertreeComponent\n */\nexports.component_ = {\n  controller: 'GmfLayertreeController as gmfLayertreeCtrl',\n  bindings: {\n    'map': '=gmfLayertreeMap',\n    'dimensions': '=?gmfLayertreeDimensions',\n    'openLinksInNewWindow': '<?gmfLayertreeOpenlinksinnewwindow',\n  },\n  template: gmfLayertreeTemplate\n};\n\nexports.component('gmfLayertree', exports.component_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n *     The Gmf value service that determines the data source currently being\n *     filtered.\n * @param {!gmf.datasource.ExternalDataSourcesManager}\n *     gmfExternalDataSourcesManager The Gmf external data sources manager\n *     service. Used here to fetch the external WMS groups.\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n * @param {!gmf.layertree.SyncLayertreeMap} gmfSyncLayertreeMap gmfSyncLayertreeMap service.\n * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {!gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname gmfLayertreeController\n */\nexports.Controller_ = function($element, $scope, ngeoLayerHelper, gmfDataSourceBeingFiltered,\n  gmfExternalDataSourcesManager, gmfPermalink, gmfTreeManager, gmfSyncLayertreeMap, ngeoWMSTime, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {?Object<string, string>}\n   * @export\n   */\n  this.dimensions;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {gmfx.datasource.DataSourceBeingFiltered}\n   * @export\n   */\n  this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n  /**\n   * @type {!gmf.datasource.ExternalDataSourcesManager}\n   * @export\n   */\n  this.gmfExternalDataSourcesManager = gmfExternalDataSourcesManager;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  const root = gmfTreeManager.root;\n  googAsserts.assert(root);\n\n  /**\n   * @type {!gmfThemes.GmfRootNode}\n   * @export\n   */\n  this.root = root;\n\n  /**\n   * @type {!gmf.layertree.SyncLayertreeMap}\n   * @private\n   */\n  this.gmfSyncLayertreeMap_ = gmfSyncLayertreeMap;\n\n  /**\n   * @type {!ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {!Object.<number, !Array.<string>>}\n   * @private\n   */\n  this.groupNodeStates_ = {};\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.openLinksInNewWindow;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n\n  /**\n   * @type {!Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.layers = [];\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  // enter digest cycle on node collapse\n  $element.on('shown.bs.collapse', () => {\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * Init the controller,\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.openLinksInNewWindow = this.openLinksInNewWindow === true;\n  this.dataLayerGroup_ = this.layerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n\n  ngeoMiscSyncArrays(this.dataLayerGroup_.getLayers().getArray(), this.layers, true, this.scope_, () => true);\n\n  // watch any change on layers array to refresh the map\n  this.scope_.$watchCollection(() => this.layers,\n    () => {\n      this.map.render();\n    });\n\n  // watch any change on dimensions object to refresh the layers\n  this.scope_.$watchCollection(() => {\n    if (this.gmfTreeManager_.rootCtrl) {\n      return this.dimensions;\n    }\n  }, (dimensions) => {\n    if (dimensions) {\n      this.updateDimensions_(this.gmfTreeManager_.rootCtrl);\n    }\n  });\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl Layer tree controller.\n * @private\n */\nexports.Controller_.prototype.updateDimensions_ = function(treeCtrl) {\n  treeCtrl.traverseDepthFirst((ctrl) => {\n    if (ctrl.node.dimensions) {\n      const layer = ctrl.layer;\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      this.updateLayerDimensions_(layer, /** @type gmfThemes.GmfGroup|gmfThemes.GmfLayer */ (ctrl.node));\n    }\n  });\n};\n\n\n/**\n * @param {ol.layer.Layer} layer Layer to update.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layer tree node.\n * @private\n */\nexports.Controller_.prototype.updateLayerDimensions_ = function(layer, node) {\n  if (this.dimensions && node.dimensions) {\n    const dimensions = {};\n    for (const key in node.dimensions) {\n      if (node.dimensions[key] === null) {\n        const value = this.dimensions[key];\n        if (value !== undefined) {\n          dimensions[key] = value;\n        }\n      } else {\n        dimensions[key] = node.dimensions[key];\n      }\n    }\n    if (!olObj.isEmpty(dimensions)) {\n      const source = layer.getSource();\n      if (source instanceof olSourceWMTS) {\n        source.updateDimensions(dimensions);\n      } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n        source.updateParams(dimensions);\n      } else {\n        // the source is not ready yet\n        layer.once('change:source', () => {\n          googAsserts.assertInstanceof(layer, olLayerLayer);\n          this.updateLayerDimensions_(layer, node);\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Use the gmfSyncLayertreeMap_ to create and get layer corresponding to this\n * treeCtrl. The layer will be inserted into the map. The layer can be null\n * if the treeCtrl is based on a node inside a mixed node. It this case, the\n * layer will be in the first parent declared as a mixed node.\n * @param {ngeo.layertree.Controller} treeCtrl tree controller of the node\n * @return {ol.layer.Base|ol.layer.Group|null} The OpenLayers layer or group\n *     for the node.\n * @export\n */\nexports.Controller_.prototype.getLayer = function(treeCtrl) {\n  let opt_position;\n  if (treeCtrl.parent.isRoot) {\n    this.gmfTreeManager_.rootCtrl = treeCtrl.parent;\n    // Precise the index to add first level groups.\n    opt_position = this.gmfTreeManager_.root.children.length -\n        this.gmfTreeManager_.numberOfGroupsToAddInThisDigestLoop || 0;\n  }\n\n  const layer = this.gmfSyncLayertreeMap_.createLayer(treeCtrl, this.map,\n    this.dataLayerGroup_, opt_position);\n\n  if (layer instanceof olLayerLayer) {\n    const node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n    this.updateLayerDimensions_(layer, node);\n  }\n\n  return layer;\n};\n\n\n/**\n * Remove layer from this component's layergroup (and then, from the map) on\n * a ngeo layertree destroy event.\n * @param {angular.Scope} scope treeCtrl scope.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.listeners = function(scope, treeCtrl) {\n  const dataLayerGroup = this.dataLayerGroup_;\n  scope.$on('$destroy', () => {\n    // Remove the layer from the map.\n    dataLayerGroup.getLayers().remove(treeCtrl.layer);\n  });\n};\n\n/**\n * Toggle the state of treeCtrl's node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.toggleActive = function(treeCtrl) {\n  treeCtrl.setState(treeCtrl.getState() === 'on' ? 'off' : 'on');\n};\n\n\n/**\n * Return the current state of the given treeCtrl's node.\n * Return a class name that match with the current node activation state.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string} 'on' or 'off' or 'indeterminate'.\n * @export\n */\nexports.Controller_.prototype.getNodeState = function(treeCtrl) {\n  return treeCtrl.getState();\n};\n\n\n/**\n * Update the `timeRangeValue` property of the data source bound to the\n * given tree controller using the given time. If the tree controller has\n * no data source, it means that it has children and they might have\n * data sources.\n *\n * The setting of the TIME parameter on the layer occurs in the\n * `gmf.datasource.Manager` service\n *\n * LayertreeController.prototype.updateWMSTimeLayerState - description\n * @param {ngeo.layertree.Controller} layertreeCtrl ngeo layertree controller\n * @param {{start : number, end : number}} time The start\n * and optionally the end datetime (for time range selection) selected by user\n * @export\n */\nexports.Controller_.prototype.updateWMSTimeLayerState = function(\n  layertreeCtrl, time) {\n  if (!time) {\n    return;\n  }\n  const dataSource = layertreeCtrl.getDataSource();\n  if (dataSource) {\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    dataSource.timeRangeValue = time;\n  } else if (layertreeCtrl.children) {\n    for (let i = 0, ii = layertreeCtrl.children.length; i < ii; i++) {\n      this.updateWMSTimeLayerState(layertreeCtrl.children[i], time);\n    }\n  }\n};\n\n\n/**\n * Get the icon image URL for the given treeCtrl's layer. It can only return a\n * string for internal WMS layers without multiple childlayers in the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string|undefined} The icon legend URL or undefined.\n * @export\n */\nexports.Controller_.prototype.getLegendIconURL = function(treeCtrl) {\n  const iconUrl = treeCtrl.node.metadata.iconUrl;\n\n  if (iconUrl !== undefined) {\n    return iconUrl;\n  }\n\n  if (treeCtrl.node.children !== undefined) {\n    return undefined;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (gmfLayer.type !== 'WMS') {\n    return undefined;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  const legendRule = gmfLayerWMS.metadata.legendRule;\n\n  if (legendRule === undefined) {\n    return undefined;\n  }\n\n  //In case of multiple layers for a gmfLayerWMS, always take the first layer\n  //name to get the icon\n  const layerName = gmfLayerWMS.layers.split(',')[0];\n  const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n  return this.layerHelper_.getWMSLegendURL(\n    gmfOgcServer.url, layerName, undefined, legendRule\n  );\n};\n\n\n/**\n * Get the legends object (<LayerName: url> for each layer) for the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {Object.<string, string>} A <layerName: url> object that provides a\n *     layer for each layer.\n * @export\n */\nexports.Controller_.prototype.getLegendsObject = function(treeCtrl) {\n  const legendsObject = {};\n  if (/** @type gmfThemes.GmfGroup */ (treeCtrl.node).children !== undefined) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const gmfLayerDefaultName = gmfLayer.name;\n  if (gmfLayer.metadata.legendImage) {\n    legendsObject[gmfLayerDefaultName] = gmfLayer.metadata.legendImage;\n    return legendsObject;\n  }\n\n  const layer = treeCtrl.layer;\n  if (gmfLayer.type === 'WMTS') {\n    googAsserts.assertInstanceof(layer, olLayerTile);\n    const wmtsLegendURL = this.layerHelper_.getWMTSLegendURL(layer);\n    legendsObject[gmfLayerDefaultName] = wmtsLegendURL;\n    return wmtsLegendURL ? legendsObject : null;\n  } else {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n    let layersNames = gmfLayerWMS.layers;\n    const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n    const scale = this.getScale_();\n    // QGIS can handle multiple layers natively. Use Multiple URLs for other map\n    // servers\n    if (gmfOgcServer.type === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      layersNames = [layersNames];\n    } else {\n      layersNames = layersNames.split(',');\n    }\n    layersNames.forEach((layerName) => {\n      legendsObject[layerName] = this.layerHelper_.getWMSLegendURL(gmfOgcServer.url, layerName, scale);\n    });\n    return legendsObject;\n  }\n};\n\n\n/**\n * Get the number of legends object for this layertree controller.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {number} The number of Legends object.\n * @export\n */\nexports.Controller_.prototype.getNumberOfLegendsObject = function(treeCtrl) {\n  const legendsObject = this.getLegendsObject(treeCtrl);\n  return legendsObject ? Object.keys(legendsObject).length : 0;\n};\n\n\n/**\n * Return the current scale of the map.\n * @return {number} Scale.\n * @private\n */\nexports.Controller_.prototype.getScale_ = function() {\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const mpu = view.getProjection().getMetersPerUnit();\n  const dpi = 25.4 / 0.28;\n  return resolution * mpu * 39.37 * dpi;\n};\n\n\n/**\n * Opens a gmfx.openIframePopup with the content of the metadata url of a node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.displayMetadata = function(treeCtrl) {\n  const node = treeCtrl.node;\n  const metadataURL = node.metadata['metadataUrl'];\n  if (metadataURL !== undefined) {\n    // FIXME layertree should not rely on a window function.\n    const gmfx = window.gmfx;\n    if (gmfx.openIframePopup) {\n      gmfx.openIframePopup(metadataURL, node.name, undefined, undefined, false);\n    }\n  }\n};\n\n\n/**\n * Update the layers order in the map and the treeCtrl in the treeManager after\n * a reorder of the first-level groups. Then update the permalink.\n * @export\n */\nexports.Controller_.prototype.afterReorder = function() {\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const currentTreeCtrls = this.gmfTreeManager_.rootCtrl.children;\n  const treeCtrls = [];\n\n  // Get order of first-level groups for treectrl and layers;\n  groupNodes.forEach((node) => {\n    currentTreeCtrls.some((treeCtrl) => {\n      if (treeCtrl.node === node) {\n        treeCtrls.push(treeCtrl);\n        return;\n      }\n    });\n  });\n\n  // Update gmfTreeManager rootctrl children order\n  this.gmfTreeManager_.rootCtrl.children = treeCtrls;\n\n  // Update map 'data' groupe layers order\n  this.layers.length = 0;\n  this.gmfTreeManager_.rootCtrl.children.forEach((child) => {\n    this.layers.push(child.layer);\n  });\n\n  // Update the permalink order\n  this.gmfPermalink_.refreshFirstLevelGroups();\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup} node Layer tree node to remove.\n * @export\n */\nexports.Controller_.prototype.removeNode = function(node) {\n  this.gmfTreeManager_.removeGroup(node);\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.removeAllNodes = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @return {number} first level node count.\n * @export\n */\nexports.Controller_.prototype.nodesCount = function() {\n  return this.gmfTreeManager_.root.children.length;\n};\n\n/**\n * Return 'out-of-resolution' if the current resolution of the map is out of\n * the min/max resolution in the node.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {string|undefined} 'out-of-resolution' or undefined.\n * @export\n */\nexports.Controller_.prototype.getResolutionStyle = function(gmfLayer) {\n  const resolution = this.map.getView().getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    return 'out-of-resolution';\n  }\n  const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n  if (maxResolution !== undefined && resolution > maxResolution) {\n    return 'out-of-resolution';\n  }\n  return undefined;\n};\n\n\n/**\n * Set the resolution of the map with the max or min resolution of the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.zoomToResolution = function(treeCtrl) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    view.setResolution(view.constrainResolution(minResolution, 0, 1));\n  } else {\n    const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n    if (maxResolution !== undefined && resolution > maxResolution) {\n      view.setResolution(view.constrainResolution(maxResolution, 0, -1));\n    }\n  }\n};\n\n\n/**\n * Toggle the legend for a node\n * @param {string} legendNodeId The DOM node legend id to toggle\n * @export\n */\nexports.Controller_.prototype.toggleNodeLegend = function(legendNodeId) {\n  $(legendNodeId).toggle({\n    toggle: true\n  });\n};\n\n\n/**\n * @param {gmf.datasource.OGC} ds Data source to filter.\n * @export\n */\nexports.Controller_.prototype.toggleFiltrableDataSource = function(ds) {\n  this.gmfDataSourceBeingFiltered.dataSource = ds;\n};\n\n\n/**\n * @param {string} legendNodeId The DOM node legend id\n * @return {boolean} Whenever the legend is currently displayed.\n * @export\n */\nexports.Controller_.prototype.isNodeLegendVisible = function(legendNodeId) {\n  return $(legendNodeId).is(':visible');\n};\n\n\n/**\n * Determines whether the layer tree controller supports being customized.\n * For example, having its layer opacity changed, displaying its legend, etc.\n *\n * If any requirement is met, then the treeCtrl is considered supporting\n * \"customization\", regardless of what it actually is.\n *\n * The requirements are:\n *\n * - must not be the root controller, any of the following:\n *   - it supports legend\n *   - it supports having the layer opacity being changed\n *\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports being\n *     \"customized\" or not.\n * @export\n */\nexports.Controller_.prototype.supportsCustomization = function(treeCtrl) {\n  return !treeCtrl.isRoot &&\n    (\n      this.supportsLegend(treeCtrl) ||\n      this.supportsOpacityChange(treeCtrl)\n    );\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having a\n *     legend being shown.\n * @export\n */\nexports.Controller_.prototype.supportsLegend = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  return !!node.metadata &&\n    !!node.metadata.legend &&\n    !!this.getLegendsObject(treeCtrl);\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having its\n *     layer opacity being changed or not.\n * @export\n */\nexports.Controller_.prototype.supportsOpacityChange = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  const parentNode = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  return !!treeCtrl.layer &&\n    (\n      (\n        treeCtrl.depth === 1 && !node.mixed\n      ) ||\n      (\n        treeCtrl.depth > 1 && parentNode.mixed\n      )\n    );\n};\n\nexports.controller('GmfLayertreeController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.Menu\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olOverlay from 'ol/Overlay.js';\nimport olOverlayPositioning from 'ol/OverlayPositioning.js';\n\n/**\n * @classdesc\n * An OpenLayers overlay that shows a contextual menu with configurable actions\n * anchored from its top left to a specific location. An event is fired when\n * any of the action is clicked.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {ngeox.MenuOptions=} menuOptions Menu options.\n * @param {olx.OverlayOptions=} opt_overlayOptions Overlay options.\n */\nconst exports = function(menuOptions, opt_overlayOptions) {\n\n  const options = opt_overlayOptions !== undefined ? opt_overlayOptions : {};\n\n  options.positioning = olOverlayPositioning.TOP_LEFT;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.clickOutListenerKey_ = null;\n\n  const contentEl = $('<div/>', {\n    'class': 'panel panel-default'\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoClose_ = menuOptions.autoClose !== undefined ?\n    menuOptions.autoClose : true;\n\n  // titleEl\n  if (menuOptions.title) {\n    const headerEl = $('<div>', {\n      'class': 'panel-heading'\n    }).appendTo(contentEl);\n\n    $('<span>', {\n      text: menuOptions.title\n    }).appendTo(headerEl);\n  }\n\n  // actionsEl\n  const actionsEl = $('<div>', {\n    'class': 'list-group'\n  }).appendTo(contentEl);\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.actions_ = [];\n\n  menuOptions.actions.forEach((action) => {\n    this.actions_.push(\n      $('<button>', {\n        'class': 'list-group-item',\n        'data-name': action.name,\n        'text': [\n          ' ',\n          (action.label) !== undefined ? action.label : action.name\n        ].join('')\n      })\n        .appendTo(actionsEl)\n        .prepend($('<span>', {\n          'class': action.cls !== undefined ? action.cls : ''\n        }))\n    );\n  });\n\n  options.element = contentEl[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @param {ol.PluggableMap|undefined} map Map.\n * @export\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.actions_.forEach((action) => {\n      const data = action.data();\n      this.listenerKeys_.push(\n        olEvents.listen(\n          action[0],\n          'click',\n          this.handleActionClick_.bind(this, data.name)\n        )\n      );\n    });\n\n    // Autoclose the menu when clicking anywhere else than the menu\n    this.listenerKeys_.push(\n      olEvents.listen(\n        map,\n        'pointermove',\n        this.handleMapPointerMove_,\n        this\n      )\n    );\n  }\n\n};\n\n\n/**\n * Opens the menu at the desited coordinate. Also starts listening for the\n * clickout if autoClose is enabled.\n * @param {ol.Coordinate} coordinate Where to open the menu.\n * @export\n */\nexports.prototype.open = function(coordinate) {\n  this.setPosition(coordinate);\n  if (this.autoClose_) {\n    this.clickOutListenerKey_ = olEvents.listen(\n      document.documentElement,\n      'mousedown',\n      this.handleClickOut_,\n      this\n    );\n  }\n\n};\n\n\n/**\n * @export\n */\nexports.prototype.close = function() {\n  this.setPosition(undefined);\n\n  if (this.clickOutListenerKey_ !== null) {\n    olEvents.unlistenByKey(this.clickOutListenerKey_);\n  }\n};\n\n\n/**\n * @param {string} action The action name that was clicked.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleActionClick_ = function(action, evt) {\n\n  this.dispatchEvent(new ngeoCustomEvent('actionclick', {\n    action: action\n  }));\n\n  if (this.autoClose_) {\n    this.close();\n  }\n\n  evt.stopPropagation();\n};\n\n\n/**\n * Handles clicks out of the menu. If the menu is visible, close it.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleClickOut_ = function(evt) {\n  const element = this.getElement();\n  if (element && $(evt.target).closest(element).length === 0) {\n    this.close();\n  }\n};\n\n\n/**\n * When the mouse is hovering the menu, set the event coordinate and pixel\n * values to Infinity to do as if the mouse had been move out of range of the\n * map. This prevents behaviours such as vertex still appearing while mouse\n * hovering edges of features bound to an active modify control while the\n * cursor is on top of the menu.\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handleMapPointerMove_ = function(evt) {\n  const target = evt.originalEvent.target;\n  googAsserts.assertInstanceof(target, Element);\n\n  const element = this.getElement();\n  googAsserts.assertInstanceof(element, Element);\n\n  if (element.contains(target)) {\n    evt.coordinate = [Infinity, Infinity];\n    evt.pixel = [Infinity, Infinity];\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.message.modalComponent\n */\nimport 'jquery-ui/ui/widgets/draggable.js';\nimport 'bootstrap/js/modal.js';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoModal', []);\n\n/**\n * Provides the \"ngeoModal\" component.\n *\n * This component shows a Bootstrap modal when the `ngModel` expression\n * evaluates to `true`, and it hides it when the `ngModel` expression\n * evaluates to `false`.\n *\n * The components also changes the `ngModel` value when the user manually\n * closes the modal.\n *\n * This component is based on Bootstrap's `modal` classes and associated\n * jQuery plugin.\n *\n *     <ngeo-modal ng-model=\"modalShown\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *         <h4 class=\"modal-title\">The Title</h4>\n *       </div>\n *       <div class=\"modal-body\">Some content</div>\n *     </ngeo-modal>\n *\n * Note: for z-indexing purpose, the modal DOM element is automatically moved\n * to document body element.\n *\n * See our live example: [../examples/modal.html](../examples/modal.html)\n *\n * @htmlAttribute {boolean} ngeo-modal-resizable Whether the modal can be\n *     resized or not. Defaults to `false`.\n * @htmlAttribute {boolean} ngeo-modal-closable Whether the modal can be\n *     closed by clicking outside it or by hiting the `escape` keyboard key. Defaults to `true`.\n * @ngdoc component\n * @ngname ngeoModal\n * @type {!angular.Component}\n */\nexports.component_ = {\n  template: `<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <ng-transclude></ng-transclude>\n      </div>\n    </div>\n  </div>`,\n  require: {\n    'ngModel': 'ngModel'\n  },\n  transclude: true,\n  controller: 'ngeoModalController',\n  bindings: {\n    'resizable': '<ngeoModalResizable',\n    'closable': '<ngeoModalClosable'\n  }\n};\n\nexports.component('ngeoModal', exports.component_);\n\nexports.Controller_ = class {\n  /**\n   * @ngInject\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!jQuery} $element Element.\n   */\n  constructor($scope, $element) {\n    /**\n     * @private\n     * @type {!jQuery}\n     */\n    this.$element_ = $element;\n\n    /**\n     * @private\n     * @type {!angular.Scope}\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @private\n     * @type {jQuery}\n     */\n    this.modal_;\n\n    /**\n     * @export\n     * @type {boolean}\n     */\n    this.closable;\n\n    /**\n     * @export\n     * @type {boolean}\n     */\n    this.resizable;\n\n    /**\n     * @export\n     * @type {angular.NgModelController|null}\n     */\n    this.ngModel;\n  }\n\n  $onInit() {\n    this.closable = this.closable !== false;\n\n    this.modal_ = this.$element_.children();\n\n    if (!this.closable) {\n      this.modal_.attr('data-keyboard', false);\n      this.modal_.attr('data-backdrop', 'static');\n    }\n\n    this.resizable = !!this.resizable;\n\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable();\n    if (this.resizable) {\n      dialog.resizable();\n    }\n\n    this.ngModel.$render = () => {\n      this.modal_.modal(this.ngModel.$viewValue ? 'show' : 'hide');\n    };\n\n    this.modal_.on('shown.bs.modal hidden.bs.modal', (e) => {\n      const type = e.type;\n      googAsserts.assert(type == 'shown' || type == 'hidden');\n      this.ngModel.$setViewValue(type == 'shown');\n    });\n  }\n\n  $onDestroy() {\n    // Force close the modal.\n    this.modal_.modal('hide');\n    this.modal_.modal('removeBackdrop');\n    // Destroy the children's plugins.\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable('destroy');\n    if (this.resizable) {\n      dialog.resizable('destroy');\n    }\n  }\n};\n\nexports.controller('ngeoModalController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.component\n */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfAuthentication', [\n  gmfAuthenticationService.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoMessageModalComponent.name,\n]);\n\n\n/**\n * @param {angular.JQLite} element Element.\n * @param {angular.Attributes} attrs Attributes.\n * @return {string} Template URL.\n */\nexports.gmfAuthenticationTemplateUrl_ = (element, attrs) => {\n  const templateUrl = attrs['gmfAuthenticationTemplateurl'];\n  return templateUrl !== undefined ? templateUrl :\n    'gmf/authentication';\n};\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/authentication', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfAuthenticationTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfAuthenticationTemplateUrl($element, $attrs, gmfAuthenticationTemplateUrl) {\n  return gmfAuthenticationTemplateUrl($element, $attrs);\n}\n\n\n/**\n * An \"authentication\" component for a GeoMapFish application. With the\n * use of the \"authentication\" service, it features a complete interface\n * for the user to be able to login, logout, change or reset his or her\n * password.  The `gmfUser` angular value is also used to keep track of\n * the user information. When empty, that means that the user isn't connected\n * yet.\n *\n * While not logged in, the \"login\" form is shown, which allows the user to\n * either log in or ask for a password reset.\n *\n * Once logged in, the \"logout\" form is shown, which allows the user to either\n * log out or change his or her password.\n *\n * Example:\n *\n *      <gmf-authentication\n *        gmf-authentication-allow-password-change=\"::true\">\n *      </gmf-authentication>\n *\n * @htmlAttribute {boolean} gmf-authentication-allow-password-reset Whether to\n *     show the password forgotten link. Default to true.\n * @htmlAttribute {boolean|function} gmf-authentication-allow-password-change Whether to\n *     show the change password button. Default to true. You can also specify a gmfx.PasswordValidator Object\n *     to add constraint on user's new password.\n * @htmlAttribute {gmfx.PasswordValidator} gmf-authentication-password-validator A gmfx.PasswordValidator\n *     Object to add constraint on user's new password. The gmf-authentication-allow-password-change. To use\n *     it you must also allow the user to change its password.\n * @htmlAttribute {boolean} gmf-authentication-force-password-change Force the\n *     user to change its password. Default to false. If you set it to true, you\n *     should also allow the user to change its password. Don't add this option alone, use\n *     it in a dedicated authentication component, in a ngeo-modal, directly in\n *     your index.html (see example 2.)\n *\n * Example 2:\n *\n *     <ngeo-modal\n *         ngeo-modal-closable=\"false\"\n *         ng-model=\"mainCtrl.userMustChangeItsPassword()\"\n *         ng-model-options=\"{getterSetter: true}\">\n *       <div class=\"modal-header\">\n *         <h4 class=\"modal-title\">\n *           {{'You must change your password' | translate}}\n *         </h4>\n *       </div>\n *       <div class=\"modal-body\">\n *         <gmf-authentication\n *           gmf-authentication-force-password-change=\"::true\">\n *         </gmf-authentication>\n *       </div>\n *     </ngeo-modal>\n *\n * @ngdoc component\n * @ngname gmfAuthentication\n */\nexports.component_ = {\n  bindings: {\n    'allowPasswordReset': '<?gmfAuthenticationAllowPasswordReset',\n    'allowPasswordChange': '<?gmfAuthenticationAllowPasswordChange',\n    'passwordValidator': '<?gmfAuthenticationPasswordValidator',\n    'forcePasswordChange': '<?gmfAuthenticationForcePasswordChange'\n  },\n  controller: 'GmfAuthenticationController',\n  templateUrl: gmfAuthenticationTemplateUrl\n};\n\nexports.value('gmfAuthenticationTemplateUrl',\n  exports.gmfAuthenticationTemplateUrl_);\n\nexports.component('gmfAuthentication', exports.component_);\n\n\n/**\n * @private\n */\nexports.AuthenticationController_ = class {\n  /**\n   * @private\n   * @param {!angular.JQLite} $element Element.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {gmf.authentication.Service} gmfAuthenticationService GMF Authentication service\n   * @param {gmfx.User} gmfUser User.\n   * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfAuthenticationController\n   */\n  constructor($element, gettextCatalog, gmfAuthenticationService, gmfUser, ngeoNotification) {\n\n    /**\n     * @type {!angular.JQLite}\n     * @private\n     */\n    this.$element_ = $element;\n\n    /**\n     * @type {gmfx.User}\n     * @export\n     */\n    this.gmfUser = gmfUser;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog = gettextCatalog;\n\n    /**\n     * @type {gmf.authentication.Service}\n     * @private\n     */\n    this.gmfAuthenticationService_ = gmfAuthenticationService;\n\n    /**\n     * @type {ngeo.message.Notification}\n     * @private\n     */\n    this.notification_ = ngeoNotification;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordReset;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordChange;\n\n    /**\n     * @type {gmfx.PasswordValidator?}\n     * @export\n     */\n    this.passwordValidator = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.forcePasswordChange;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.changingPassword = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.changePasswordModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.resetPasswordModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.error = false;\n\n    // LOGIN form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.loginVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.pwdVal = '';\n\n    // CHANGE PASSWORD form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.oldPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdConfVal = '';\n  }\n\n  /**\n   * Initialise the controller.\n   */\n  $onInit() {\n    this.allowPasswordReset = this.allowPasswordReset !== false;\n    this.allowPasswordChange = this.allowPasswordChange !== false;\n    this.forcePasswordChange = this.forcePasswordChange === true;\n    if (this.forcePasswordChange) {\n      this.changingPassword = true;\n    }\n  }\n\n\n  // METHODS THAT CALL THE AUTHENTICATION SERVICE METHODS\n\n  /**\n   * Calls the authentication service changePassword method.\n   * @export\n   */\n  changePassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const oldPwd = this.oldPwdVal;\n    const newPwd = this.newPwdVal;\n    const confPwd = this.newPwdConfVal;\n\n    const errors = [];\n    // Validation - Passwords are required.\n    if (oldPwd === '') {\n      errors.push(gettextCatalog.getString('The old password is required.'));\n    }\n    if (newPwd === '') {\n      errors.push(gettextCatalog.getString('The new password is required.'));\n    }\n    if (confPwd === '') {\n      errors.push(gettextCatalog.getString('The password confirmation is required.'));\n    }\n\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      // Default validation - Passwords must be new and must also match.\n      if (oldPwd === newPwd) {\n        errors.push(gettextCatalog.getString('The old and new passwords are the same.'));\n      }\n      if (newPwd !== confPwd) {\n        errors.push(gettextCatalog.getString('The passwords don\\'t match.'));\n      }\n      // Custom validation - If a passwordValidator is set, use it to validate the new password.\n      if (this.passwordValidator) {\n        if (!this.passwordValidator.isPasswordValid(oldPwd)) {\n          errors.push(gettextCatalog.getString(this.passwordValidator.notValidMessage));\n        }\n      }\n\n      if (errors.length) {\n        this.setError_(errors);\n      } else {\n        // Send request with current credentials, which may fail if the old password given is incorrect.\n        const error = gettextCatalog.getString('Incorrect old password.');\n        this.gmfAuthenticationService_.changePassword(oldPwd, newPwd, confPwd).then(\n          () => {\n            this.changePasswordModalShown = true;\n            this.changePasswordReset();\n          },\n          this.setError_.bind(this, error));\n      }\n    }\n  }\n\n  /**\n   * Calls the authentication service login method.\n   * @export\n   */\n  login() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const errors = [];\n    if (this.loginVal === '') {\n      errors.push(gettextCatalog.getString('The username is required.'));\n    }\n    if (this.pwdVal === '') {\n      errors.push(gettextCatalog.getString('The password is required.'));\n    }\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      const error = gettextCatalog.getString('Incorrect credentials or disabled account.');\n      this.gmfAuthenticationService_.login(this.loginVal, this.pwdVal).then(\n        this.resetError_.bind(this),\n        this.setError_.bind(this, error));\n    }\n  }\n\n  /**\n   * Calls the authentication service logout method.\n   * @export\n   */\n  logout() {\n    const gettextCatalog = this.gettextCatalog;\n    const error = gettextCatalog.getString('Could not log out.');\n    this.gmfAuthenticationService_.logout().then(\n      this.resetError_.bind(this),\n      this.setError_.bind(this, error));\n  }\n\n  /**\n   * Calls the authentication service resetPassword method.\n   * @export\n   */\n  resetPassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    if (!this.loginVal) {\n      this.setError_(gettextCatalog.getString('Please, input a login...'));\n      return;\n    }\n\n    const error = gettextCatalog.getString('An error occurred while resetting the password.');\n\n    /**\n     * @param {gmfx.AuthenticationDefaultResponse} respData Response.\n     */\n    const resetPasswordSuccessFn = function(respData) {\n      this.resetPasswordModalShown = true;\n      this.resetError_();\n    }.bind(this);\n\n    this.gmfAuthenticationService_.resetPassword(this.loginVal).then(\n      resetPasswordSuccessFn,\n      this.setError_.bind(this, error)\n    );\n  }\n\n\n  // OTHER METHODS\n\n  /**\n   * Reset the changePassword values and error.\n   * @export\n   */\n  changePasswordReset() {\n    this.resetError_();\n    this.changingPassword = false;\n    this.oldPwdVal = '';\n    this.newPwdVal = '';\n    this.newPwdConfVal = '';\n  }\n\n  /**\n   * @return {boolean} True if the user must change is password and if the \"forcePasswordChange\" option of\n   *    this component is set to true.\n   * @export\n   */\n  userMustChangeItsPassword() {\n    return (this.gmfUser.is_password_changed === false && this.forcePasswordChange);\n  }\n\n  /**\n   * @param {string|Array.<string>} errors Errors.\n   * @private\n   */\n  setError_(errors) {\n    if (this.error) {\n      this.resetError_();\n    }\n\n    this.error = true;\n\n    const container = this.$element_.find('.gmf-authentication-error');\n\n    if (!Array.isArray(errors)) {\n      errors = [errors];\n    }\n\n    errors.forEach(function(error) {\n      this.notification_.notify({\n        msg: error,\n        target: container,\n        type: ngeoMessageMessage.Type.ERROR\n      });\n    }, this);\n  }\n\n  /**\n   * @private\n   */\n  resetError_() {\n    this.notification_.clear();\n    this.error = false;\n  }\n};\n\nexports.controller('GmfAuthenticationController',\n  exports.AuthenticationController_);\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.module\n */\nimport gmfAuthenticationComponent from 'gmf/authentication/component.js';\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfAuthenticationModule', [\n  gmfAuthenticationComponent.name,\n  gmfAuthenticationService.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.BackgroundLayerMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport ngeoLayerHelper from 'ngeo/map/LayerHelper.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function(ngeoLayerHelper) {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? this.ngeoLayerHelper_.getGroupFromMap(map,\n    exports.BACKGROUNDLAYERGROUP_NAME).getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const ZIndex = -200;\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (layer !== null) {\n    layer.setZIndex(ZIndex);\n    this.ngeoLayerHelper_.setZIndexToFirstLevelChildren(layer, ZIndex);\n  }\n\n  const bgGroup = this.ngeoLayerHelper_.getGroupFromMap(map, exports.BACKGROUNDLAYERGROUP_NAME);\n\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      bgGroup.getLayers().setAt(0, layer);\n    } else {\n      bgGroup.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    bgGroup.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * Return the current background layer overlay of a given map, used by the opacity slider.\n * `null` is returned if the map does not have an opacity background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.prototype.getOpacityBgLayer = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? this.ngeoLayerHelper_.getGroupFromMap(map,\n    exports.BACKGROUNDLAYERGROUP_NAME).getLayers().item(1) : null;\n};\n\n/**\n * Set an background layer overlay, used by the opacity slider.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.prototype.setOpacityBgLayer = function(map, layer) {\n  const ZIndex = -100;\n  layer.setOpacity(0);\n  layer.setVisible(true);\n  layer.setZIndex(ZIndex);\n  this.ngeoLayerHelper_.setZIndexToFirstLevelChildren(layer, ZIndex);\n  const bgGroup = this.ngeoLayerHelper_.getGroupFromMap(map, exports.BACKGROUNDLAYERGROUP_NAME);\n\n  const index = bgGroup.getLayers().getArray().indexOf(layer);\n  if (index === -1) {\n    bgGroup.getLayers().push(layer);\n  }\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', [\n  ngeoLayerHelper.module.name\n]);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\n\n/**\n * @const\n */\nexports.BACKGROUNDLAYERGROUP_NAME = 'background';\n\n\nexport default exports;\n","/**\n * @module gmf.backgroundlayerselector.component\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfBackgroundlayerselector', [\n  gmfThemeThemes.module.name,\n  ngeoMapBackgroundLayerMgr.module.name,\n]);\n\n\nexports.value('gmfBackgroundlayerselectorTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfBackgroundlayerselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/backgroundlayerselector';\n  }\n);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/backgroundlayerselector', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfBackgroundlayerselectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfBackgroundlayerselectorTemplateUrl($element, $attrs, gmfBackgroundlayerselectorTemplateUrl) {\n  return gmfBackgroundlayerselectorTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a \"background layer selector\" component.\n *\n * Example:\n *\n *      <gmf-backgroundlayerselector\n *        gmf-backgroundlayerselector-map=\"::ctrl.map\"\n *        gmf-backgroundlayer-opacity-options=\"::ctrl.bgOpacityOptions\"\n *        gmf-backgroundlayerselector-select=\"onBackgroundSelected()\">\n *      </gmf-backgroundlayerselector>\n *\n * Used UI metadata:\n *\n *  * thumbnail: The URL used for the icon.\n *\n * @htmlAttribute {ol.Map=} gmf-backgroundlayerselector-map The map.\n * @htmlAttribute {string} gmf-backgroundlayer-opacity-options The opacity slider options.\n * @htmlAttribute {Function} gmf-backgroundlayerselector-select Function called\n *     when a layer was selected by the user.\n *\n * @ngdoc component\n * @ngname gmfBackgroundlayerselector\n */\nexports.component_ = {\n  controller: 'GmfBackgroundlayerselectorController as ctrl',\n  bindings: {\n    'map': '=gmfBackgroundlayerselectorMap',\n    'opacityOptions': '=gmfBackgroundlayerOpacityOptions',\n    'select': '&?gmfBackgroundlayerselectorSelect'\n  },\n  templateUrl: gmfBackgroundlayerselectorTemplateUrl\n};\n\n\nexports.component('gmfBackgroundlayerselector',\n  exports.component_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer manager.\n * @param {!gmf.theme.Themes} gmfThemes Themes service.\n * @ngInject\n * @ngdoc controller\n * @ngname GmfBackgroundlayerselectorController\n */\nexports.Controller_ = function($scope, ngeoBackgroundLayerMgr, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!string|undefined}\n   * @export\n   */\n  this.opacityOptions;\n\n  /**\n   * Function called when a layer was selected by the user.\n   * @type {?Function}\n   * @export\n   */\n  this.select;\n\n  /**\n   * @type {?ol.layer.Base}\n   * @export\n   */\n  this.bgLayer;\n\n  /**\n   * @type {?Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.bgLayers;\n\n  /**\n   * @type {ol.layer.Base}\n   * @export\n   */\n  this.opacityLayer;\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(gmfThemes, 'change', this.handleThemesChange_, this));\n\n  /**\n   * @type {!ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n\n  this.listenerKeys_.push(olEvents.listen(this.backgroundLayerMgr_, 'change',\n    /**\n     * @param {!ngeox.BackgroundEvent} event Event.\n     */\n    (event) => {\n      this.bgLayer = event.detail.current;\n    }));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.handleThemesChange_();\n};\n\n\n/**\n * Called when the themes changes. Set (or reset) the backround layers.\n * @private\n */\nexports.Controller_.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getBgLayers().then((layers) => {\n    this.bgLayers = layers;\n\n    if (this.opacityOptions !== undefined) {\n      const opacityLayer = layers.find(layer => layer.get('label') === this.opacityOptions);\n      if (opacityLayer !== undefined) {\n        this.setOpacityBgLayer(opacityLayer);\n        this.opacityLayer = opacityLayer;\n\n        // Reorder for the UI the bgArray copy with the opacity layer at the end\n        this.bgLayers = this.bgLayers.slice();\n        const indexOpa = this.bgLayers.findIndex(layer => layer === this.opacityLayer);\n        this.bgLayers.splice(indexOpa, 1);\n        this.bgLayers.push(opacityLayer);\n      }\n    }\n  });\n};\n\n/**\n * Getter/setter for background layer overlay, used by opacity slider.\n * @param {?number} val The opacity.\n * @returns {number} The background layer opacity.\n * @export\n */\nexports.Controller_.prototype.getSetBgLayerOpacity = function(val) {\n  if (val) {\n    this.opacityLayer.setOpacity(val);\n  }\n  return this.opacityLayer.getOpacity();\n};\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @param {boolean=} opt_silent Do not notify listeners.\n * @export\n */\nexports.Controller_.prototype.setLayer = function(layer, opt_silent) {\n  this.bgLayer = layer;\n  this.backgroundLayerMgr_.set(this.map, layer);\n  if (!opt_silent && this.select) {\n    this.select();\n  }\n};\n\n/**\n * Set a background layer overlay, used by the opacity slider.\n * @param {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.Controller_.prototype.setOpacityBgLayer = function(layer) {\n  this.backgroundLayerMgr_.setOpacityBgLayer(this.map, layer);\n};\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('GmfBackgroundlayerselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.EnumerateAttribute\n */\nconst exports = class {\n\n  /**\n   * The EnumerateAttribute is responsible of fetching all possible of a given\n   * attribute of a given data source (gmf layer).\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfEnumerateAttribute\n   */\n  constructor($http, gmfLayersUrl) {\n\n    // === Injected services ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.baseUrl_ = gmfLayersUrl;\n\n    /**\n     * @type {Object.<string, !angular.$q.Promise>}\n     * @private\n     */\n    this.promises_ = {};\n  }\n\n  /**\n   * @param {gmf.datasource.OGC} dataSource Data source.\n   * @param {string} attribute Attribute name.\n   * @return {angular.$q.Promise} Promise.\n   */\n  getAttributeValues(dataSource, attribute) {\n    const promiseId = `${dataSource.id}_${attribute}`;\n    const name = dataSource.name;\n    if (!this.promises_[promiseId]) {\n      const url = `${this.baseUrl_}/${name}/values/${attribute}`;\n      this.promises_[promiseId] = this.http_.get(url).then(\n        this.handleGetAttributeValues_.bind(this));\n    }\n    return this.promises_[promiseId];\n  }\n\n  /**\n   * @param {angular.$http.Response} resp Ajax response.\n   * @return {Array.<gmfThemes.GmfLayerAttributeValue>} List of the attribute\n   *     values.\n   * @export\n   */\n  handleGetAttributeValues_(resp) {\n    const data = /** @type {gmfThemes.GmfLayerAttributeValuesResponse} */ (\n      resp.data);\n    return data.items;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfEnumerateAttribute', []);\nexports.module.service('gmfEnumerateAttribute', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.Attribute\n */\nconst exports = {};\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\n\n\n/**\n * Set the `type` and `geomType` properties of an attribute if the given\n * type is a geometry one.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type Type.\n * @return {boolean} Whether both attribute type and geomType were set.\n */\nexports.setGeometryType = function(attribute, type) {\n  const geomRegex =\n    /gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/;\n  if (geomRegex.exec(type)) {\n    attribute.type = ngeoFormatAttributeType.GEOMETRY;\n    if (/^gml:Point/.exec(type)) {\n      attribute.geomType = 'Point';\n    } else if (/^gml:LineString|^gml:Curve/.exec(type)) {\n      attribute.geomType = 'LineString';\n    } else if (/^gml:Polygon|^gml:Surface/.exec(type)) {\n      attribute.geomType = 'Polygon';\n    } else if (/^gml:MultiPoint/.exec(type)) {\n      attribute.geomType = 'MultiPoint';\n    } else if (/^gml:MultiLineString|^gml:MultiCurve/.exec(type)) {\n      attribute.geomType = 'MultiLineString';\n    } else if (/^gml:MultiPolygon|^gml:MultiSurface/.exec(type)) {\n      attribute.geomType = 'MultiPolygon';\n    }\n  }\n  return !!attribute.type && !!attribute.geomType;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.XSDAttribute\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttribute from 'ngeo/format/Attribute.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\n\n/**\n * @classdesc\n * Reads attributes that are defined in XSD format and return them as a list.\n *\n * @constructor\n * @struct\n * @extends {ol.format.XML}\n */\nconst exports = function() {\n  olFormatXML.call(this);\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Array.<ngeox.Attribute>} The parsed result.\n * @override\n */\nexports.prototype.read = function(source) {\n  return (\n    /** @type {Array.<ngeox.Attribute>} */ olFormatXML.prototype.read.call(this, source)\n  );\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromDocument = function(doc) {\n  googAsserts.assert(doc.nodeType == Node.DOCUMENT_NODE,\n    'doc.nodeType should be DOCUMENT');\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromNode = function(node) {\n  googAsserts.assert(node.nodeType == Node.ELEMENT_NODE,\n    'node.nodeType should be ELEMENT');\n  googAsserts.assert(node.localName == 'schema',\n    'localName should be schema');\n\n  let elements = node.getElementsByTagName('element');\n  if (!elements.length) {\n    elements = node.getElementsByTagName('xsd:element');\n  }\n  const attributes = [];\n\n  let attribute;\n  for (let i = 0, ii = elements.length; i < ii; i++) {\n    attribute = this.readFromElementNode_(elements[i]);\n    if (attribute) {\n      attributes.push(attribute);\n    }\n  }\n\n  return attributes;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {?ngeox.Attribute} An attribute object.\n * @private\n */\nexports.prototype.readFromElementNode_ = function(node) {\n\n  const name = node.getAttribute('name');\n  googAsserts.assertString(name, 'name should be defined in element node.');\n\n  const alias = node.getAttribute('alias');\n  const nillable = node.getAttribute('nillable');\n  const required = !(nillable === true || nillable === 'true');\n\n  const attribute = {\n    name,\n    alias,\n    required\n  };\n\n  const type = node.getAttribute('type');\n  if (type) {\n    if (!ngeoFormatAttribute.setGeometryType(attribute, type)) {\n      this.setAttributeByXsdType_(attribute, type);\n    }\n  } else {\n\n    // Attribute has no type defined on 'element' node.  Try:\n\n    // (1) Enumerations\n    let enumerations = node.getElementsByTagName('enumeration');\n    if (!enumerations.length) {\n      enumerations = node.getElementsByTagName('xsd:enumeration');\n    }\n    if (enumerations.length) {\n      attribute.type = ngeoFormatAttributeType.SELECT;\n      const choices = [];\n      for (let i = 0, ii = enumerations.length; i < ii; i++) {\n        choices.push(enumerations[i].getAttribute('value'));\n      }\n      attribute.choices = choices;\n    } else {\n      // (2) Other types with restrictions\n      let restrictions = node.getElementsByTagName('restriction');\n      if (!restrictions.length) {\n        restrictions = node.getElementsByTagName('xsd:restriction');\n      }\n      if (restrictions.length && restrictions[0]) {\n        const restrictionNode = restrictions[0];\n        this.setAttributeByXsdType_(\n          attribute,\n          restrictionNode.getAttribute('base')\n        );\n        // MaxLength\n        let maxLengths = node.getElementsByTagName('maxLength');\n        if (!maxLengths.length) {\n          maxLengths = node.getElementsByTagName('xsd:maxLength');\n        }\n        if (maxLengths.length && maxLengths[0]) {\n          attribute.maxLength = Number(maxLengths[0].getAttribute('value'));\n        }\n      }\n    }\n  }\n\n  if (!attribute.type) {\n    return null;\n  }\n\n  googAsserts.assert(attribute.type);\n\n  return attribute;\n};\n\n\n/**\n * Set the `type` and `numType` properties of an attribute depending on the\n * given xsdType.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type The xsd type.\n * @private\n */\nexports.prototype.setAttributeByXsdType_ = function(\n  attribute, type\n) {\n  if (type === 'xsd:boolean') {\n    attribute.type = ngeoFormatAttributeType.BOOLEAN;\n  } else if (type === 'xsd:date') {\n    attribute.type = ngeoFormatAttributeType.DATE;\n  } else if (type === 'xsd:dateTime') {\n    attribute.type = ngeoFormatAttributeType.DATETIME;\n  } else if (type === 'xsd:time') {\n    attribute.type = ngeoFormatAttributeType.TIME;\n  } else if (type === 'xsd:decimal' || type === 'xsd:double') {\n    attribute.type = ngeoFormatAttributeType.NUMBER;\n    attribute.numType = exports.NumberType.FLOAT;\n  } else if (type === 'xsd:integer') {\n    attribute.type = ngeoFormatAttributeType.NUMBER;\n    attribute.numType = exports.NumberType.INTEGER;\n  } else if (type === 'xsd:string') {\n    attribute.type = ngeoFormatAttributeType.TEXT;\n  }\n};\n\n\n/**\n * Returns the first geometry attribute among a given list of attributes.\n * @param {Array.<ngeox.Attribute>} attributes The list of attributes.\n * @return {?ngeox.Attribute} A geometry attribute object.\n */\nexports.getGeometryAttribute = function(attributes) {\n  let geomAttribute = null;\n  for (let i = 0, ii = attributes.length; i < ii; i++) {\n    if (attributes[i].type === ngeoFormatAttributeType.GEOMETRY) {\n      geomAttribute = attributes[i];\n      break;\n    }\n  }\n  return geomAttribute;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.NumberType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  FLOAT: 'float',\n  /**\n   * @type {string}\n   * @export\n   */\n  INTEGER: 'integer'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.WFSAttribute\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttribute from 'ngeo/format/Attribute.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\n\nconst exports = class {\n\n\n  /**\n   * A format that reads the complexType from a WFS DescribeFeatureType\n   * response for a single set of attributes and return an array of\n   * `ngeox.Attribute`.\n   */\n\n\n  /**\n   * @param {Array.<Object>} complexTypeElements Complex type element\n   * @return {Array.<ngeox.Attribute>} Attributes\n   */\n  read(complexTypeElements) {\n    return complexTypeElements.map(this.readFromComplexTypeElement_);\n  }\n\n\n  /**\n   * @param {Object} object Complex type element\n   * @return {ngeox.Attribute} Attribute\n   * @private\n   */\n  readFromComplexTypeElement_(object) {\n\n    const name = googAsserts.assertString(object['name']);\n    const alias = 'alias' in object ?\n      googAsserts.assertString(object['alias']) : null;\n    const required = object['minOccurs'] != '0';\n\n    const attribute = {\n      name,\n      alias,\n      required\n    };\n\n    const type = googAsserts.assertString(object['type']);\n\n    if (!ngeoFormatAttribute.setGeometryType(attribute, type)) {\n      if (type === 'gml:TimeInstantType' || type === 'dateTime') {\n        attribute.type = ngeoFormatAttributeType.DATETIME;\n      } else if (type === 'date') {\n        attribute.type = ngeoFormatAttributeType.DATE;\n      } else if (type === 'time') {\n        attribute.type = ngeoFormatAttributeType.TIME;\n      } else if (type === 'decimal' || type === 'double') {\n        attribute.type = ngeoFormatAttributeType.NUMBER;\n        attribute.numType = ngeoFormatXSDAttribute.NumberType.FLOAT;\n      } else if (type === 'integer' || type === 'long') {\n        attribute.type = ngeoFormatAttributeType.NUMBER;\n        attribute.numType = ngeoFormatXSDAttribute.NumberType.INTEGER;\n      } else if (type === 'boolean') {\n        attribute.type = ngeoFormatAttributeType.BOOLEAN;\n      } else {\n        attribute.type = ngeoFormatAttributeType.TEXT;\n      }\n    }\n\n    return attribute;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.filters\n */\nimport * as olMath from 'ol/math.js';\nimport * as olString from 'ol/string.js';\nconst exports = angular.module('ngeoAngularFilters', []);\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nexports.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nexports.filter('ngeoScalify', exports.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nexports.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nexports.filter('ngeoNumber', exports.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nexports.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nexports.filter('ngeoUnitPrefix', exports.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nexports.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nexports.filter('ngeoNumberCoordinates', exports.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nexports.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nexports.filter('ngeoDMSCoordinates', exports.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * If you use it, you don't require the \"ngSanitize\".\n * @return {function(?):string} The filter function.\n * @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nexports.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nexports.filter('ngeoTrustHtml', exports.trustHtmlFilter);\n\n\n/**\n * A filter used to format a time duration in seconds into a more\n * readable form.\n * Only the two largest units will be shown.\n *\n * Examples:\n *      {{42 | ngeoDuration}} => 42 seconds\n *      {{132 | ngeoDuration}} => 2 minutes 12 seconds\n *      {{3910 | ngeoDuration}} => 1 hour 5 minutes\n *        -> Note: the remaining 10 seconds will be dropped\n *\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @return {ngeox.duration} Function used to format a time duration in seconds into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDuration\n */\nexports.Duration = function(gettextCatalog) {\n  // time unit enum\n  const TimeUnits = Object.freeze({\n    SECONDS: Symbol('seconds'),\n    MINUTES: Symbol('minutes'),\n    HOURS: Symbol('hours'),\n    DAYS: Symbol('days')\n  });\n\n  /**\n   * @param {number} amount Amount of time.\n   * @param {symbol} unit Unit of time.\n   * @return {string} formatted and translated string\n   */\n  const pluralize = function(amount, unit) {\n    let formattedUnit = '';\n    switch (unit) {\n      case TimeUnits.SECONDS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'second', 'seconds');\n        break;\n      case TimeUnits.MINUTES:\n        formattedUnit = gettextCatalog.getPlural(amount, 'minute', 'minutes');\n        break;\n      case TimeUnits.HOURS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'hour', 'hours');\n        break;\n      case TimeUnits.DAYS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'day', 'days');\n        break;\n      default:\n        break;\n    }\n    return `${amount} ${formattedUnit}`;\n  };\n\n  /**\n   * @param {number} duration The duration in seconds.\n   * @return {string} The formatted string.\n   */\n  const result = function(duration) {\n    // round to next integer\n    duration = Math.round(duration);\n\n    // just seconds\n    let output;\n    if (duration < 60) {\n      return pluralize(duration, TimeUnits.SECONDS);\n    }\n\n    // minutes (+ seconds)\n    let remainder = duration % 60; // seconds\n    duration = Math.floor(duration / 60); // minutes\n    if (duration < 60) { // less than an hour\n      output = pluralize(duration, TimeUnits.MINUTES);\n      if (remainder > 0) {\n        output += ` ${pluralize(remainder, TimeUnits.SECONDS)}`;\n      }\n      return output;\n    }\n\n    // hours (+ minutes)\n    remainder = duration % 60; // minutes\n    duration = Math.floor(duration / 60); // hours\n    if (duration < 24) { // less than a day\n      output = pluralize(duration, TimeUnits.HOURS);\n      if (remainder > 0) {\n        output += ` ${pluralize(remainder, TimeUnits.MINUTES)}`;\n      }\n      return output;\n    }\n\n    // days (+ hours)\n    remainder = duration % 24; // hours\n    duration = Math.floor(duration / 24); // days\n    output = pluralize(duration, TimeUnits.DAYS);\n    if (remainder > 0) {\n      output += ` ${pluralize(remainder, TimeUnits.HOURS)}`;\n    }\n    return output;\n  };\n\n  return result;\n};\n\nexports.filter('ngeoDuration', exports.Duration);\n\n\nexport default exports;\n","/**\n * @module ngeo.download.service\n */\nimport ngeoUtils from 'ngeo/utils.js';\n\nimport {saveAs} from 'file-saver';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDownload', []);\n\n/**\n * A service to start a download for a file.\n *\n * @return {ngeox.Download} The download function.\n * @ngdoc service\n * @ngname ngeoDownload\n */\nexports.factory_ = function() {\n  /**\n   * @param {string} content The file content.\n   * @param {string} fileName The file name.\n   * @param {string=} opt_fileType The file type. If not given,\n   *    `text/plain;charset=utf-8` is used.\n   */\n  function download(content, fileName, opt_fileType) {\n    // Safari does not properly work with FileSaver. Using the the type 'text/plain'\n    // makes it a least possible to show the file content so that users can\n    // do a manual download with \"Save as\".\n    // See also: https://github.com/eligrey/FileSaver.js/issues/12\n    /** @type {string} */\n    const fileType = opt_fileType !== undefined && !ngeoUtils.isSafari() ?\n      opt_fileType : 'text/plain;charset=utf-8';\n\n    const blob = new Blob([content], {type: fileType});\n    saveAs(blob, fileName);\n  }\n\n  return download;\n};\n\nexports.factory('ngeoDownload', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.GeometryType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  CIRCLE: 'Circle',\n  /**\n   * @type {string}\n   * @export\n   */\n  LINE_STRING: 'LineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_LINE_STRING: 'MultiLineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POINT: 'MultiPoint',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POLYGON: 'MultiPolygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  POINT: 'Point',\n  /**\n   * @type {string}\n   * @export\n   */\n  POLYGON: 'Polygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  RECTANGLE: 'Rectangle',\n  /**\n   * @type {string}\n   * @export\n   */\n  TEXT: 'Text'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Measure\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olDom from 'ol/dom.js';\nimport * as olProj from 'ol/proj.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olSphere from 'ol/sphere.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} options Options\n */\nconst exports = function(options = /** @type {ngeo.interaction.MeasureBaseOptions} */ ({})) {\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ? options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (polygon.clone().transform(projection, 'EPSG:4326'));\n  const area = Math.abs(olSphere.getArea(geom, {'projection': 'EPSG:4326'}));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection, precision, format) {\n  let length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = olProj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = olProj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n    length += olSphere.getDistance(c1, c2);\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  const helpMsg = this.sketchFeature === null ? this.startMsg : this.continueMsg;\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event|ngeox.DrawEvent} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature || evt.detail.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event|ngeox.DrawEvent} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  this.unlistenerEvent_();\n};\n\n/**\n * Handle unlistener events for 'end of drawing' interaction\n * @private\n */\nexports.prototype.unlistenerEvent_ = function() {\n  if (this.changeEventKey_ !== null && this.postcomposeEventKey_ !== null) {\n    olEvents.unlistenByKey(this.changeEventKey_);\n    olEvents.unlistenByKey(this.postcomposeEventKey_);\n    this.changeEventKey_ = null;\n    this.postcomposeEventKey_ = null;\n  }\n};\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n    this.unlistenerEvent_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.common\n */\nconst exports = {};\nimport {createEditingStyle} from 'ol/style/Style.js';\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultDrawStyleFunction = function() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultModifyStyleFunction = function() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[/**@type {ol.geom.GeometryType} */ ('Point')];\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.DrawAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionPointer, {handleEvent as pointerHandleEvent} from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultDrawStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return pointerHandleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  /** @type {ngeox.DrawEvent} */\n  const evt = new ngeoCustomEvent('drawstart', {feature: this.sketchFeature_});\n  this.dispatchEvent(evt);\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  /** @type {ngeox.DrawEvent} */\n  const event = new ngeoCustomEvent('drawend', {feature: this.sketchFeature_});\n  this.dispatchEvent(event);\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olProjProjection from 'ol/proj/Projection.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ngeox.MeasureEvent\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, options = /** @type {ngeox.interaction.MeasureOptions} */({})) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), olProjProjection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.FeatureHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olArray from 'ol/array.js';\nimport * as olColor from 'ol/color.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Provides methods for features, such as:\n *  - style setting / getting\n *  - measurement\n *  - export\n *\n * @constructor\n * @struct\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.$filter} $filter Angular filter.\n * @ngdoc service\n * @ngname ngeoFeatureHelper\n * @ngInject\n */\nconst exports = function($injector, $filter) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.decimals_ = undefined;\n  if ($injector.has('ngeoMeasureDecimals')) {\n    this.decimals_ = $injector.get('ngeoMeasureDecimals');\n  }\n\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.precision_ = undefined;\n  if ($injector.has('ngeoMeasurePrecision')) {\n    this.precision_ = $injector.get('ngeoMeasurePrecision');\n  }\n\n  /**\n   * @type {!ngeox.number}\n   */\n  this.numberFormat_ = /** @type {ngeox.number} */ ($filter('number'));\n\n  /**\n   * @type {!ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ ($filter('ngeoUnitPrefix'));\n\n  /**\n   * @type {!ngeox.numberCoordinates}\n   */\n  this.ngeoNumberCoordinates_ = /** @type {ngeox.numberCoordinates} */ ($filter('ngeoNumberCoordinates'));\n\n  /**\n   * Filter function to display point coordinates or null to don't use any filter.\n   * @type {function(*):string|null}\n   * @private\n   */\n  this.pointFilterFn_ = null;\n\n  /**\n   * Arguments to apply to the point filter function.\n   * @type {Array.<*>}\n   * @private\n   */\n  this.pointFilterArgs_ = [];\n\n  if ($injector.has('ngeoPointfilter')) {\n    const filterElements = $injector.get('ngeoPointfilter').split(':');\n    const filterName = filterElements.shift();\n    const filter = this.$filter_(filterName);\n    googAsserts.assertFunction(filter);\n    this.pointFilterFn_ = filter;\n    this.pointFilterArgs_ = filterElements;\n  } else {\n    this.pointFilterFn_ = null;\n  }\n\n  /**\n   * @type {!ol.proj.Projection}\n   * @private\n   */\n  this.projection_;\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n\n};\n\n\n/**\n * @param {!ol.proj.Projection} projection Projection.\n * @export\n */\nexports.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n// === STYLE METHODS ===\n\n\n/**\n * Set the style of a feature using its inner properties and depending on\n * its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @param {boolean=} opt_select Whether the feature should be rendered as\n *     selected, which includes additional vertex and halo styles.\n * @export\n */\nexports.prototype.setStyle = function(feature, opt_select) {\n  const styles = this.getStyle(feature);\n  if (opt_select) {\n    if (this.supportsVertex_(feature)) {\n      styles.push(this.getVertexStyle());\n    }\n    styles.unshift(this.getHaloStyle_(feature));\n  }\n  feature.setStyle(styles);\n};\n\n\n/**\n * Create and return a style object from a given feature using its inner\n * properties and depending on its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @return {!Array.<!ol.style.Style>} The style object.\n * @export\n */\nexports.prototype.getStyle = function(feature) {\n  const type = this.getType(feature);\n  let style;\n\n  switch (type) {\n    case ngeoGeometryType.LINE_STRING:\n      style = this.getLineStringStyle_(feature);\n      break;\n    case ngeoGeometryType.POINT:\n      style = this.getPointStyle_(feature);\n      break;\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      style = this.getPolygonStyle_(feature);\n      break;\n    case ngeoGeometryType.TEXT:\n      style = this.getTextStyle_(feature);\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  let styles;\n  if (style.constructor === Array) {\n    styles = /** @type {!Array.<!ol.style.Style>}*/ (style);\n  } else {\n    styles = [style];\n  }\n\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with linestring geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getLineStringStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n\n  const styles = [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPointStyle_ = function(feature) {\n  const size = this.getSizeProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const styles = [new olStyleStyle({\n    image: new olStyleCircle({\n      radius: size,\n      fill: new olStyleFill({\n        color: color\n      })\n    })\n  })];\n  // Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    const font_size = 10;\n    // https://reeddesign.co.uk/test/points-pixels.html\n    const point_to_px = 1.3;\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue,\n        size: font_size,\n        offsetY: -(size + (font_size / 2) * textLabelValues.length * point_to_px + 4)\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * Get an optional number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number|undefined}, The attribute value\n */\nexports.prototype.optNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (value !== undefined) {\n    if (typeof value == 'string') {\n      return +value;\n    } else {\n      return googAsserts.assertNumber(value);\n    }\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Get a number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number}, The attribute value\n */\nexports.prototype.getNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (typeof value == 'string') {\n    return +value;\n  } else {\n    return googAsserts.assertNumber(value);\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with polygon geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPolygonStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const opacity = this.getOpacityProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n\n  // fill color with opacity\n  const fillColor = color.slice();\n  fillColor[3] = opacity;\n\n  const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n\n  const styles = [new olStyleStyle({\n    fill: new olStyleFill({\n      color: fillColor\n    }),\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  if (showMeasure || showLabel) {\n    if (showMeasure && azimut !== undefined) {\n      // Radius style:\n      const line = this.getRadiusLine(feature, azimut);\n      const length = ngeoInteractionMeasure.getFormattedLength(\n        line, this.projection_, this.precision_, this.unitPrefixFormat_);\n\n      styles.push(new olStyleStyle({\n        geometry: line,\n        fill: new olStyleFill({\n          color: fillColor\n        }),\n        stroke: new olStyleStroke({\n          color: color,\n          width: strokeWidth\n        }),\n        text: this.createTextStyle_({\n          text: length,\n          angle: ((azimut % 180) + 180) % 180 - 90\n        })\n      }));\n\n      // Azimut style\n      styles.push(new olStyleStyle({\n        geometry: new olGeomPoint(line.getLastCoordinate()),\n        text: this.createTextStyle_({\n          text: `${this.numberFormat_(azimut, this.decimals_)}°`,\n          size: 10,\n          offsetX: Math.cos((azimut - 90) * Math.PI / 180) * 20,\n          offsetY: Math.sin((azimut - 90) * Math.PI / 180) * 20\n        })\n      }));\n\n      //Label Style\n      if (showLabel) {\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: this.getNameProperty(feature),\n            offsetY: -8,\n            exceedLength: true\n          })\n        }));\n      }\n    } else {\n      //Label Style\n      const textLabelValues = [];\n      if (showMeasure) {\n        textLabelValues.push(this.getMeasure(feature));\n      }\n      if (showLabel) {\n        textLabelValues.push(this.getNameProperty(feature));\n      }\n      if (showLabel ||  showMeasure) {\n        // display both label using  \\n\n        const textLabelValue = textLabelValues.join('\\n');\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: textLabelValue,\n            exceedLength: true\n          })\n        }));\n      }\n    }\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry, rendered as text.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getTextStyle_ = function(feature) {\n\n  return new olStyleStyle({\n    text: this.createTextStyle_({\n      text: this.getNameProperty(feature),\n      size: this.getSizeProperty(feature),\n      angle: this.getAngleProperty(feature),\n      color: this.getRGBAColorProperty(feature),\n      width: this.getStrokeProperty(feature)\n    })\n  });\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature to create the editing styles with.\n * @return {!Array.<!ol.style.Style>} List of style.\n * @export\n */\nexports.prototype.createEditingStyles = function(feature) {\n  // (1) Style definition depends on geometry type\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  const styles = [];\n\n  const geom = feature.getGeometry();\n  console.assert(geom);\n  const type = geom.getType();\n\n  if (type === 'Point') {\n    styles.push(\n      new olStyleStyle({\n        image: new olStyleCircle({\n          radius: width * 2,\n          fill: new olStyleFill({\n            color: blue\n          }),\n          stroke: new olStyleStroke({\n            color: white,\n            width: width / 2\n          })\n        }),\n        zIndex: Infinity\n      })\n    );\n  } else {\n    if (type === 'LineString') {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: white,\n            width: width + 2\n          })\n        })\n      );\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width\n          })\n        })\n      );\n    } else {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width / 2\n          }),\n          fill: new olStyleFill({\n            color: [255, 255, 255, 0.5]\n          })\n        })\n      );\n    }\n\n    // (2) Anything else than 'Point' requires the vertex style as well\n    styles.push(this.getVertexStyle(true));\n  }\n\n  return styles;\n};\n\n\n/**\n * Create and return a style object to be used for vertex.\n * @param {boolean=} opt_incGeomFunc Whether to include the geometry function\n *     or not. One wants to use the geometry function when you want to draw\n *     the vertex of features that don't have point geometries. One doesn't\n *     want to include the geometry function if you just want to have the\n *     style object itself to be used to draw features that have point\n *     geometries. Defaults to `true`.\n * @return {!ol.style.Style} Style.\n * @export\n */\nexports.prototype.getVertexStyle = function(opt_incGeomFunc) {\n  const incGeomFunc = opt_incGeomFunc !== undefined ? opt_incGeomFunc : true;\n\n  const options = {\n    image: new olStyleRegularShape({\n      radius: 6,\n      points: 4,\n      angle: Math.PI / 4,\n      fill: new olStyleFill({\n        color: [255, 255, 255, 0.5]\n      }),\n      stroke: new olStyleStroke({\n        color: [0, 0, 0, 1]\n      })\n    })\n  };\n\n  if (incGeomFunc) {\n    options.geometry = function(feature) {\n      const geom = feature.getGeometry();\n\n      if (geom.getType() == 'Point') {\n        return;\n      }\n\n      let innerMultiCoordinates;\n      let multiCoordinates = [];\n      let coordinates = [];\n      let i, ii;\n      if (geom instanceof olGeomLineString) {\n        coordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomMultiLineString) {\n        multiCoordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomPolygon) {\n        coordinates = geom.getCoordinates()[0];\n      } else if (geom instanceof olGeomMultiPolygon) {\n        innerMultiCoordinates = geom.getCoordinates();\n      }\n\n      if (innerMultiCoordinates) {\n        for (i = 0, ii = innerMultiCoordinates.length; i < ii; i++) {\n          multiCoordinates = multiCoordinates.concat(innerMultiCoordinates[i]);\n        }\n      }\n      for (i = 0, ii = multiCoordinates.length; i < ii; i++) {\n        coordinates = coordinates.concat(multiCoordinates[i]);\n      }\n\n      if (coordinates.length) {\n        return new olGeomMultiPoint(coordinates);\n      } else {\n        return geom;\n      }\n    };\n  }\n\n  return new olStyleStyle(options);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Whether the feature supports vertex or not.\n * @private\n */\nexports.prototype.supportsVertex_ = function(feature) {\n  const supported = [\n    ngeoGeometryType.LINE_STRING,\n    ngeoGeometryType.POLYGON,\n    ngeoGeometryType.RECTANGLE\n  ];\n  const type = this.getType(feature);\n  return olArray.includes(supported, type);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getHaloStyle_ = function(feature) {\n  const type = this.getType(feature);\n  let style;\n  const haloSize = 3;\n\n  switch (type) {\n    case ngeoGeometryType.POINT:\n      const size = this.getSizeProperty(feature);\n      style = new olStyleStyle({\n        image: new olStyleCircle({\n          radius: size + haloSize,\n          fill: new olStyleFill({\n            color: [255, 255, 255, 1]\n          })\n        })\n      });\n      break;\n    case ngeoGeometryType.LINE_STRING:\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      const strokeWidth = this.getStrokeProperty(feature);\n      style = new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: strokeWidth + haloSize * 2\n        })\n      });\n      break;\n    case ngeoGeometryType.TEXT:\n      style = new olStyleStyle({\n        text: this.createTextStyle_({\n          text: this.getNameProperty(feature),\n          size: this.getSizeProperty(feature),\n          angle: this.getAngleProperty(feature),\n          width: haloSize * 3\n        })\n      });\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  return style;\n};\n\n\n// === PROPERTY GETTERS ===\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * Also delete the 'ngeo_feature_type_' from the ngeo query system.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Filtered properties of the current feature.\n * @export\n */\nexports.getFilteredFeatureValues = function(feature) {\n  const properties = feature.getProperties();\n  delete properties['boundedBy'];\n  delete properties[feature.getGeometryName()];\n  delete properties['ngeo_feature_type_'];\n  return properties;\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {number} Angle.\n * @export\n */\nexports.prototype.getAngleProperty = function(feature) {\n  const angle = +(/** @type {string} */ (\n    feature.get(ngeoFormatFeatureProperties.ANGLE)));\n  googAsserts.assertNumber(angle);\n  return angle;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Color.\n * @export\n */\nexports.prototype.getColorProperty = function(feature) {\n\n  const color = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.COLOR));\n\n  googAsserts.assertString(color);\n\n  return color;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {ol.Color} Color.\n * @export\n */\nexports.prototype.getRGBAColorProperty = function(feature) {\n  return olColor.fromString(this.getColorProperty(feature));\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Name.\n * @export\n */\nexports.prototype.getNameProperty = function(feature) {\n  const name = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.NAME));\n  googAsserts.assertString(name);\n  return name;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Opacity.\n * @export\n */\nexports.prototype.getOpacityProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.OPACITY);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show measure.\n * @export\n */\nexports.prototype.getShowMeasureProperty = function(feature) {\n  let showMeasure = feature.get(ngeoFormatFeatureProperties.SHOW_MEASURE);\n  if (showMeasure === undefined) {\n    showMeasure = false;\n  } else if (typeof showMeasure === 'string') {\n    showMeasure = (showMeasure === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showMeasure);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show feature label.\n * @export\n */\nexports.prototype.getShowLabelProperty = function(feature) {\n  let showLabel = feature.get(ngeoFormatFeatureProperties.SHOW_LABEL);\n  if (showLabel === undefined) {\n    showLabel = false;\n  } else if (typeof showLabel === 'string') {\n    showLabel = (showLabel === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showLabel);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Size.\n * @export\n */\nexports.prototype.getSizeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.SIZE);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Stroke.\n * @export\n */\nexports.prototype.getStrokeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.STROKE);\n};\n\n\n// === EXPORT ===\n\n\n/**\n * Export features in the given format. The projection of the exported features\n * is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {string} formatType Format type to export the features.\n * @export\n */\nexports.prototype.export = function(features, formatType) {\n  switch (formatType) {\n    case exports.FormatType.GPX:\n      this.exportGPX(features);\n      break;\n    case exports.FormatType.KML:\n      this.exportKML(features);\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * Export features in GPX and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportGPX = function(features) {\n  const format = new olFormatGPX();\n  const mimeType = 'application/gpx+xml';\n  const fileName = 'export.gpx';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features in KML and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportKML = function(features) {\n  const format = new olFormatKML();\n  const mimeType = 'application/vnd.google-earth.kml+xml';\n  const fileName = 'export.kml';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features using a given format to a specific filename and download\n * the result to the browser. The projection of the exported features is:\n * `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {!ol.format.Feature} format Format\n * @param {string} fileName Name of the file.\n * @param {string=} opt_mimeType Mime type. Defaults to 'text/plain'.\n * @private\n */\nexports.prototype.export_ = function(features, format, fileName, opt_mimeType) {\n  const mimeType = opt_mimeType !== undefined ? opt_mimeType : 'text/plain';\n\n  // clone the features to apply the original style to the clone\n  // (the original may have select style active)\n  const clones = [];\n  let clone;\n  features.forEach((feature) => {\n    clone = new olFeature(feature.getProperties());\n    this.setStyle(clone, false);\n    clones.push(clone);\n  });\n\n  const writeOptions = this.projection_ ? {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.projection_\n  } : {};\n\n  const data = format.writeFeatures(clones, writeOptions);\n  this.download_(\n    data, fileName, `${mimeType};charset=utf-8`);\n};\n\n\n// === OTHER UTILITY METHODS ===\n\n\n/**\n * @param {!ngeox.style.TextOptions} options Options.\n * @return {!ol.style.Text} Style.\n * @private\n */\nexports.prototype.createTextStyle_ = function(options) {\n  if (options.angle) {\n    const angle = options.angle !== undefined ? options.angle : 0;\n    const rotation = angle * Math.PI / 180;\n    options.rotation = rotation;\n    delete options.angle;\n  }\n\n  options.font = ['normal', `${options.size || 10}pt`, 'Arial'].join(' ');\n\n  if (options.color) {\n    options.fill = new olStyleFill({color: options.color || [0, 0, 0, 1]});\n    delete options.color;\n  }\n\n  options.stroke = new olStyleStroke({\n    color: [255, 255, 255, 1],\n    width: options.width || 3\n  });\n  delete options.width;\n\n  return new olStyleText(options);\n};\n\n\n/**\n * Get the measure of the given feature as a string. For points, you can format\n * the result by setting a filter to apply on the coordinate with the function\n * {@link ngeo.misc.FeatureHelper.prototype.setPointFilterFn}.\n * @param {!ol.Feature} feature Feature.\n * @return {string} Measure.\n * @export\n */\nexports.prototype.getMeasure = function(feature) {\n\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be truthy');\n\n  let measure = '';\n\n  if (geometry instanceof olGeomPolygon) {\n    if (this.getType(feature) === ngeoGeometryType.CIRCLE) {\n      const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n      googAsserts.assertNumber(azimut);\n      const line = this.getRadiusLine(feature, azimut);\n\n      measure = ngeoInteractionMeasureAzimut.getFormattedAzimutRadius(\n        line, this.projection_, this.decimals_, this.precision_, this.unitPrefixFormat_, this.numberFormat_);\n    } else {\n      measure = ngeoInteractionMeasure.getFormattedArea(\n        geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n    }\n  } else if (geometry instanceof olGeomLineString) {\n    measure = ngeoInteractionMeasure.getFormattedLength(\n      geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n  } else if (geometry instanceof olGeomPoint) {\n    if (this.pointFilterFn_ === null) {\n      measure = ngeoInteractionMeasure.getFormattedPoint(\n        geometry, this.decimals_, this.ngeoNumberCoordinates_);\n    } else {\n      const coordinates = geometry.getCoordinates();\n      const args = this.pointFilterArgs_.slice(0);\n      args.unshift(coordinates);\n      measure = this.pointFilterFn_(...args);\n    }\n  }\n\n  return measure;\n};\n\n\n/**\n * Return the type of geometry of a feature using its geometry property and\n * some inner properties.\n * @param {!ol.Feature} feature Feature.\n * @return {string} The type of geometry.\n * @export\n */\nexports.prototype.getType = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n  let type;\n\n  if (geometry instanceof olGeomPoint) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_TEXT)) {\n      type = ngeoGeometryType.TEXT;\n    } else {\n      type = ngeoGeometryType.POINT;\n    }\n  } else if (geometry instanceof olGeomMultiPoint) {\n    type = ngeoGeometryType.MULTI_POINT;\n  } else if (geometry instanceof olGeomPolygon) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n      type = ngeoGeometryType.CIRCLE;\n    } else if (feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE)) {\n      type = ngeoGeometryType.RECTANGLE;\n    } else {\n      type = ngeoGeometryType.POLYGON;\n    }\n  } else if (geometry instanceof olGeomMultiPolygon) {\n    type = ngeoGeometryType.MULTI_POLYGON;\n  } else if (geometry instanceof olGeomLineString) {\n    type = ngeoGeometryType.LINE_STRING;\n  } else if (geometry instanceof olGeomMultiLineString) {\n    type = ngeoGeometryType.MULTI_LINE_STRING;\n  }\n\n  googAsserts.assert(type, 'Type should be thruthy');\n\n  return type;\n};\n\n\n/**\n * This method first checks if a feature's extent intersects with the map view\n * extent. If it doesn't, then the view gets recentered with an animation to\n * the center of the feature.\n * @param {!ol.Feature} feature Feature.\n * @param {!ol.Map} map Map.\n * @param {number=} opt_panDuration Pan animation duration. Defaults to `250`.\n * @export\n */\nexports.prototype.panMapToFeature = function(feature, map,\n  opt_panDuration) {\n\n  const panDuration = opt_panDuration !== undefined ? opt_panDuration : 250;\n  const size = map.getSize();\n  googAsserts.assertArray(size);\n  const view = map.getView();\n  const extent = view.calculateExtent(size);\n  const geometry = feature.getGeometry();\n\n  if (!geometry.intersectsExtent(extent)) {\n    const mapCenter = view.getCenter();\n    googAsserts.assertArray(mapCenter);\n\n    let featureCenter;\n    if (geometry instanceof olGeomLineString) {\n      featureCenter = geometry.getCoordinateAt(0.5);\n    } else if (geometry instanceof olGeomPolygon) {\n      featureCenter = geometry.getInteriorPoint().getCoordinates();\n    } else if (geometry instanceof olGeomPoint) {\n      featureCenter = geometry.getCoordinates();\n    } else {\n      featureCenter = olExtent.getCenter(geometry.getExtent());\n    }\n\n    view.animate({\n      center: mapCenter,\n      duration: panDuration\n    }, {\n      center: featureCenter,\n      duration: panDuration\n    });\n  }\n};\n\n\n/**\n * This method generates a line string geometry that represents the radius for\n * a given azimut. It expects the input geometry to be a circle.\n * @param {!ol.Feature} feature Feature.\n * @param {number} azimut Azimut in degrees.\n * @return {!ol.geom.LineString} The line geometry.\n */\nexports.prototype.getRadiusLine = function(feature, azimut) {\n  const geometry = feature.getGeometry();\n  // Determine the radius for the circle\n  const extent = geometry.getExtent();\n  const radius = (extent[3] - extent[1]) / 2;\n\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const x = Math.cos((azimut - 90) * Math.PI / 180) * radius;\n  const y = -Math.sin((azimut - 90) * Math.PI / 180) * radius;\n  const endPoint = [x + center[0], y + center[1]];\n  return new olGeomLineString([center, endPoint]);\n};\n\n\n/**\n * Return the properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Object.\n * @export\n */\nexports.prototype.getNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const nonSpatialProperties = {};\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      nonSpatialProperties[key] = properties[key];\n    }\n  }\n  return nonSpatialProperties;\n};\n\n\n/**\n * Clear all properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @export\n */\nexports.prototype.clearNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      feature.set(key, undefined);\n    }\n  }\n};\n\n\n// === FORMAT TYPES ===\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.FormatType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GPX: 'GPX',\n  /**\n   * @type {string}\n   * @export\n   */\n  KML: 'KML'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureHelper', [\n  ngeoDownloadService.name,\n  ngeoMiscFilters.name,\n]);\nexports.module.service('ngeoFeatureHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Rule\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @implements {ngeox.rule.Rule}\n */\nconst exports = class {\n\n  /**\n   * The abstract class for all filter rules.\n   *\n   * Rules are used to define filters that can be applied on data sources.\n   * A rule is usually a combination of 3 things:\n   *\n   * - a property name, for example 'city_name'\n   * - an operator, for example 'is equal to'\n   * - and an expression, for example 'Chicoutimi'.\n   *\n   * A rule is useful to hold those properties and change them on the fly.\n   * For example, changing an operator from 'is equal to' to 'like'.\n   *\n   * Also, a rule is especially useful for its `value` getter, which returns\n   * the combination of properties described above or `null` if there are some\n   * missing.  The `value` getter can be watched and used when the value is\n   * not null.\n   *\n   * When the operator is `between`, the `lowerBoundary` and `upperBoundary`\n   * properties are used instead of `expression`.\n   *\n   * @struct\n   * @param {!ngeox.rule.RuleOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * Whether the rule is active or not. Used by the `ngeo-rule` component.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.active_ = options.active === true;\n\n    /**\n     * The expression of the rule. The expression and boundaries are mutually\n     * exclusives.\n     *\n     * Note: exported (instead of private) due to the problem with the\n     * compiler. See the getter/setter methods below...  As a setter, the\n     * `expression` property would support being bond to an `ng-model`. Without\n     * it, it can't unless we expose the property directly.\n     *\n     * @type {?number|string}\n     * @export\n     */\n    this.expression = options.expression !== undefined ?\n      options.expression : null;\n\n    /**\n     * The lower boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.lowerBoundary_ = options. lowerBoundary !== undefined ?\n      options.lowerBoundary : null;\n\n    /**\n     * The rule operator.\n     * @type {?string}\n     * @private\n     */\n    this.operator_ = options.operator || null;\n\n    /**\n     * The upper boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.upperBoundary_ = options. upperBoundary !== undefined ?\n      options.upperBoundary : null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the rule is a custom one or not.\n     * @type {boolean}\n     * @private\n     */\n    this.isCustom_ = options.isCustom !== false;\n\n    /**\n     * The human-readable name of the rule.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n\n    /**\n     * A list of rule operators.\n     * @type {?Array.<string>}\n     * @private\n     */\n    this.operators_ = options.operators || null;\n\n    /**\n     * The property name (a.k.a. the attribute name).\n     * @type {string}\n     * @private\n     */\n    this.propertyName_ = options.propertyName;\n\n    /**\n     * The type of rule.\n     * @type {string}\n     * @private\n     */\n    this.type_ = googAsserts.assert(options.type);\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Array.<!ol.EventsKey>}\n     * @protected\n     */\n    this.listenerKeys = [];\n\n  }\n\n  // === Dynamic property getters/setters ===\n\n  /**\n   * @return {boolean} Active\n   * @export\n   */\n  get active() {\n    return this.active_;\n  }\n\n  /**\n   * @param {boolean} active Active\n   * @export\n   */\n  set active(active) {\n    this.active_ = active;\n  }\n\n  /**\n   * The `expression` property does not have conventionnal getter/setters\n   * method because of a limitation of the compiler. It doesn't support\n   * yet having such methods being extended in child classes.\n   *\n   * See: https://github.com/google/closure-compiler/issues/1089\n   *\n   * @return {?number|string} Expression\n   * @export\n   */\n  getExpression() {\n    return this.expression;\n  }\n\n  /**\n   * @param {?number|string} expression Expression\n   * @export\n   */\n  setExpression(expression) {\n    this.expression = expression;\n  }\n\n  /**\n   * @return {?number} Lower boundary\n   * @export\n   */\n  get lowerBoundary() {\n    return this.lowerBoundary_;\n  }\n\n  /**\n   * @param {?number} lowerBoundary Lower boundary\n   * @export\n   */\n  set lowerBoundary(lowerBoundary) {\n    this.lowerBoundary_ = lowerBoundary;\n  }\n\n  /**\n   * @return {?string} Operator\n   * @export\n   */\n  get operator() {\n    return this.operator_;\n  }\n\n  /**\n   * @param {?string} operator Operator\n   * @export\n   */\n  set operator(operator) {\n    this.operator_ = operator;\n  }\n\n  /**\n   * @return {?number} Upper boundary\n   * @export\n   */\n  get upperBoundary() {\n    return this.upperBoundary_;\n  }\n\n  /**\n   * @param {?number} upperBoundary Upper boundary\n   * @export\n   */\n  set upperBoundary(upperBoundary) {\n    this.upperBoundary_ = upperBoundary;\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {boolean} Is custom.\n   * @export\n   */\n  get isCustom() {\n    return this.isCustom_;\n  }\n\n  /**\n   * @return {string} name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n  /**\n   * @return {?Array.<string>} Operators\n   * @export\n   */\n  get operators() {\n    return this.operators_;\n  }\n\n  /**\n   * @return {string} Property name\n   * @export\n   */\n  get propertyName() {\n    return this.propertyName_;\n  }\n\n  /**\n   * @return {string} Type\n   * @export\n   */\n  get type() {\n    return this.type_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {?ngeox.rule.RuleSimpleValue|ngeox.rule.RuleRangeValue} Value.\n   * @export\n   */\n  get value() {\n    let value = null;\n\n    const expression = this.getExpression();\n    const lowerBoundary = this.lowerBoundary;\n    const operator = this.operator;\n    const propertyName = this.propertyName;\n    const upperBoundary = this.upperBoundary;\n\n    if (operator) {\n      if (operator === exports.OperatorType.BETWEEN ||\n          operator === exports.TemporalOperatorType.DURING) {\n        if (lowerBoundary !== null && upperBoundary !== null) {\n          value = {\n            operator,\n            lowerBoundary,\n            propertyName,\n            upperBoundary\n          };\n        }\n      } else {\n        if (expression !== null) {\n          value = {\n            expression,\n            operator,\n            propertyName\n          };\n        }\n      }\n    }\n\n    return value;\n  }\n\n  // === Other utility methods ===\n\n  /**\n   * Reset the following properties to `null`: expression, lowerBoundary,\n   * upperBoundary.\n   * @export\n   */\n  reset() {\n    if (this.getExpression() !== null) {\n      this.setExpression(null);\n    }\n    if (this.lowerBoundary !== null) {\n      this.lowerBoundary = null;\n    }\n    if (this.upperBoundary !== null) {\n      this.upperBoundary = null;\n    }\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.listenerKeys.forEach(olEvents.unlistenByKey);\n    this.listenerKeys.length = 0;\n  }\n\n};\n\n\n/**\n * @enum {string}\n */\nexports.OperatorType = {\n  BETWEEN: '..',\n  EQUAL_TO: '=',\n  GREATER_THAN: '>',\n  GREATER_THAN_OR_EQUAL_TO: '>=',\n  LESSER_THAN: '<',\n  LESSER_THAN_OR_EQUAL_TO: '<=',\n  LIKE: '~',\n  NOT_EQUAL_TO: '!='\n};\n\n\n/**\n * @enum {string}\n */\nexports.SpatialOperatorType = {\n  CONTAINS: 'contains',\n  INTERSECTS: 'intersects',\n  WITHIN: 'within'\n};\n\n\n/**\n * @enum {string}\n */\nexports.TemporalOperatorType = {\n  BEGINS: 'time_start',\n  DURING: 'time_during',\n  ENDS: 'time_end',\n  EQUALS: 'time_equal'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Date\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A date rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.DateOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = options.type || ngeoFormatAttributeType.DATE;\n\n    super(options);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Geometry\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A rule bound to the geometry of a `ol.Feature` object. Changes made\n   * to the geometry are applied to the `expression` property of the rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.GeometryOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = ngeoFormatAttributeType.GEOMETRY;\n\n    super(options);\n\n    // === STATIC properties ===\n\n    const properties = options.featureProperties || {};\n\n    /**\n     * @type {!ol.Feature}\n     * @private\n     */\n    this.feature_ = new olFeature(properties);\n\n    /**\n     * @type {!ol.format.GeoJSON}\n     * @private\n     */\n    this.format_ = new olFormatGeoJSON();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingExpression_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingGeometry_ = false;\n\n    /**\n     * @type {?ol.EventsKey}\n     * @private\n     */\n    this.geometryChangeListenerKey_ = null;\n\n    this.listenerKeys.push(\n      olEvents.listen(\n        this.feature_,\n        `change:${this.feature.getGeometryName()}`,\n        this.handleFeatureGeometryChange_,\n        this\n      )\n    );\n\n    this.setGeometryFromExpression_();\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {!ol.Feature} Feature.\n   * @export\n   */\n  get feature() {\n    return this.feature_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setExpression(expression) {\n    this.updatingExpression_ = true;\n    super.setExpression(expression);\n\n    if (!this.updatingGeometry_) {\n      this.setGeometryFromExpression_();\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingExpression_ = false;\n  }\n\n  // === Calculated property getters/setters ===\n\n  /**\n   * @return {?ol.geom.Geometry} Geometry\n   * @export\n   */\n  get geometry() {\n    return this.feature_.getGeometry() || null;\n  }\n\n  /**\n   * @param {?ol.geom.Geometry} geometry Geometry\n   * @export\n   */\n  set geometry(geometry) {\n    this.feature_.setGeometry(geometry);\n  }\n\n  // === Other methods ===\n\n  /**\n   * Called when the geometry property in the feature changes. Update the\n   * expression accordingly.\n   * @private\n   */\n  handleFeatureGeometryChange_() {\n    if (this.updatingExpression_) {\n      return;\n    }\n\n    this.updatingGeometry_ = true;\n\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.expression = this.format_.writeGeometry(geometry);\n    } else {\n      this.expression = null;\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Called when the geometry of the features changes. Update the expression\n   * accordingly.\n   * @param {ol.Object.Event} evt Event\n   * @private\n   */\n  handleGeometryChange_(evt) {\n    const geometry = googAsserts.assertInstanceof(\n      evt.target, olGeomGeometry\n    );\n    this.updatingGeometry_ = true;\n    this.expression = this.format_.writeGeometry(geometry);\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Set geometry property using the expression property.\n   * @private\n   */\n  setGeometryFromExpression_() {\n    let geometry = null;\n    if (this.expression) {\n      // An expression can only have a string value with a geometry rule.\n      const expression = googAsserts.assertString(this.expression);\n      geometry = this.format_.readGeometry(expression);\n    }\n    this.geometry = geometry;\n  }\n\n  /**\n   * Unlisten the feature geometry change event, then listen to it if the\n   * feature has a geometry.\n   * @private\n   */\n  registerGeometryChange_() {\n\n    // (1) Unlisten\n    if (this.geometryChangeListenerKey_ !== null) {\n      olEvents.unlistenByKey(this.geometryChangeListenerKey_);\n      this.geometryChangeListenerKey_ = null;\n    }\n\n    // (2) Listen, if geom\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.geometryChangeListenerKey_ = olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      );\n    }\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Select\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A select rule, which allows the selection of multiple values among a list\n   * of choices.\n   *\n   * The expression property holds the list of selected choices, which is\n   * comma-separated.\n   *\n   * @struct\n   * @param {!ngeox.rule.SelectOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = ngeoRuleRule.OperatorType.EQUAL_TO;\n    options.type = ngeoFormatAttributeType.SELECT;\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.choices_ = options.choices;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {Array.<string>} Choices\n   * @export\n   */\n  get choices() {\n    return this.choices_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {Array.<string>} Selected choices\n   * @export\n   */\n  get selectedChoices() {\n    let selectedChoices;\n    if (this.expression) {\n      const stringExpression = String(this.expression);\n      selectedChoices = stringExpression.split(',');\n    } else {\n      selectedChoices = [];\n    }\n    return selectedChoices;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Text\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A text rule, which always compares the value with the LIKE operator, by\n   * default.\n   *\n   * @struct\n   * @param {!ngeox.rule.TextOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = options.operator || ngeoRuleRule.OperatorType.LIKE;\n    options.type = ngeoFormatAttributeType.TEXT;\n\n    super(options);\n\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.RuleHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport ngeoRuleDate from 'ngeo/rule/Date.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport ngeoRuleText from 'ngeo/rule/Text.js';\nimport {writeFilter} from 'ol/format/WFS.js';\nimport * as olFormatFilter from 'ol/format/filter.js';\nimport * as olArray from 'ol/array.js';\n\nimport moment from 'moment';\n\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to create `ngeo.rule.Rule`\n   * objects.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoRuleHelper\n   * @ngInject\n   */\n  constructor(gettextCatalog, ngeoFeatureHelper, ngeoWMSTime) {\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.Attribute>} attributes Attributes.\n   * @param {boolean=} opt_isCustom Whether the created rules should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRulesFromAttributes(attributes, opt_isCustom) {\n    const rules = [];\n    for (const attribute of attributes) {\n      rules.push(this.createRuleFromAttribute(attribute, opt_isCustom));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.Attribute} attribute Attribute.\n   * @param {boolean=} opt_isCustom Whether the created rule should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRuleFromAttribute(attribute, opt_isCustom) {\n\n    let rule;\n    const isCustom = opt_isCustom === true;\n\n    /**\n     * @type {string}\n     */\n    const name = this.gettextCatalog_.getString(attribute.name);\n\n    // Todo: support geometry\n\n    switch (attribute.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        if (isCustom) {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.EQUALS,\n            operators: [\n              ngeoRuleRule.TemporalOperatorType.EQUALS,\n              ngeoRuleRule.TemporalOperatorType.BEGINS,\n              ngeoRuleRule.TemporalOperatorType.ENDS\n            ],\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        } else {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.DURING,\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry({\n          name: name,\n          operator: ngeoRuleRule.SpatialOperatorType.WITHIN,\n          operators: [\n            ngeoRuleRule.SpatialOperatorType.CONTAINS,\n            ngeoRuleRule.SpatialOperatorType.INTERSECTS,\n            ngeoRuleRule.SpatialOperatorType.WITHIN\n          ],\n          propertyName: attribute.name,\n          type: attribute.type\n        });\n        break;\n      case ngeoFormatAttributeType.NUMBER:\n        if (isCustom) {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.EQUAL_TO,\n            operators: [\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.GREATER_THAN,\n              ngeoRuleRule.OperatorType.GREATER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.LESSER_THAN,\n              ngeoRuleRule.OperatorType.LESSER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        } else {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.BETWEEN,\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        rule = new ngeoRuleSelect({\n          choices: googAsserts.assert(attribute.choices),\n          name: name,\n          propertyName: attribute.name\n        });\n        break;\n      default:\n        if (isCustom) {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            operators: [\n              ngeoRuleRule.OperatorType.LIKE,\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name\n          });\n        } else {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            propertyName: attribute.name\n          });\n        }\n        break;\n    }\n\n    return rule;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions>} optionsList List of options\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRules(optionsList) {\n    const rules = [];\n    for (const options of optionsList) {\n      rules.push(this.createRule(options));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions} options Options\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRule(options) {\n    let rule;\n    switch (options.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        rule = new ngeoRuleDate(options);\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry(options);\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        const selectOptions = /** @type {!ngeox.rule.SelectOptions} */ (\n          options);\n        googAsserts.assert(selectOptions.choices);\n        rule = new ngeoRuleSelect(selectOptions);\n        break;\n      default:\n        rule = new ngeoRuleText(options);\n        break;\n    }\n    return rule;\n  }\n\n  /**\n   * Create a new `ngeo.rule.Rule` object using an other given rule.\n   *\n   * @param {!ngeo.rule.Rule} rule Original rule to clone.\n   * @return {!ngeo.rule.Rule} A clone rule.\n   * @export\n   */\n  cloneRule(rule) {\n\n    let clone;\n\n    let expression = rule.getExpression();\n    if (expression === null) {\n      expression = undefined;\n    }\n    const isCustom = rule.isCustom;\n    const lowerBoundary = rule.lowerBoundary !== null ? rule.lowerBoundary :\n      undefined;\n    const name = rule.name;\n    const operator = rule.operator !== null ? rule.operator : undefined;\n    const operators = rule.operators ? rule.operators.slice(0) : undefined;\n    const propertyName = rule.propertyName;\n    const type = rule.type !== null ? rule.type : undefined;\n    const upperBoundary = rule.upperBoundary !== null ? rule.upperBoundary :\n      undefined;\n\n    const options = {\n      expression,\n      isCustom,\n      lowerBoundary,\n      name,\n      operator,\n      operators,\n      propertyName,\n      type,\n      upperBoundary\n    };\n\n    if (rule instanceof ngeoRuleDate) {\n      clone = new ngeoRuleDate(options);\n    } else if (rule instanceof ngeoRuleGeometry) {\n      clone = new ngeoRuleGeometry(options);\n      clone.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(rule.feature)\n      );\n    } else if (rule instanceof ngeoRuleSelect) {\n      options.choices = rule.choices.slice(0);\n      clone = new ngeoRuleSelect(options);\n    } else if (rule instanceof ngeoRuleText) {\n      clone = new ngeoRuleText(options);\n    } else {\n      clone = new ngeoRuleRule(options);\n    }\n\n    return clone;\n  }\n\n  /**\n   * Extend the dynamic properties from a source rule to destination rule.\n   * The source rule remains unchanged, while the destination rule changes.\n   *\n   * @param {!ngeo.rule.Rule} sourceRule Source rule to collect the dynamic\n   *     properties from.\n   * @param {!ngeo.rule.Rule} destRule Destination rule where the dynamic\n   *     properties are set.\n   * @export\n   */\n  extendRule(sourceRule, destRule) {\n\n    if (destRule.getExpression() !== sourceRule.getExpression()) {\n      destRule.setExpression(sourceRule.getExpression());\n    }\n\n    if (destRule.lowerBoundary !== sourceRule.lowerBoundary) {\n      destRule.lowerBoundary = sourceRule.lowerBoundary;\n    }\n\n    if (destRule.operator !== sourceRule.operator) {\n      destRule.operator = sourceRule.operator;\n    }\n\n    if (destRule.upperBoundary !== sourceRule.upperBoundary) {\n      destRule.upperBoundary = sourceRule.upperBoundary;\n    }\n\n    if (sourceRule instanceof ngeoRuleGeometry &&\n       destRule instanceof ngeoRuleGeometry\n    ) {\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(destRule.feature);\n      destRule.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(sourceRule.feature)\n      );\n    }\n  }\n\n  /**\n   * @param {!Array.<!ngeo.rule.Rule>} rules Rules\n   * @return {!Array.<!ngeox.rule.AnyOptions>} List of serialized rule options.\n   * @export\n   */\n  serializeRules(rules) {\n    return rules.map((rule) => {\n      const serializedRule = this.serializeRule(rule);\n      return serializedRule;\n    });\n  }\n\n  /**\n   * Selialize a rule into options to re-create it later.\n   * @param {!ngeo.rule.Rule} rule Rule to serialize.\n   * @return {!ngeox.rule.AnyOptions} Serialized rule options.\n   * @export\n   */\n  serializeRule(rule) {\n    const obj = {\n      name: rule.name,\n      propertyName: rule.propertyName,\n      type: rule.type\n    };\n\n    if (rule.expression !== null) {\n      obj.expression = rule.expression;\n    }\n\n    if (rule.lowerBoundary !== null) {\n      obj.lowerBoundary = rule.lowerBoundary;\n    }\n\n    if (rule.operator !== null) {\n      obj.operator = rule.operator;\n    }\n\n    if (rule.operators !== null) {\n      obj.operators = rule.operators.slice(0);\n    }\n\n    if (rule.upperBoundary !== null) {\n      obj.upperBoundary = rule.upperBoundary;\n    }\n\n    if (rule instanceof ngeoRuleGeometry) {\n      obj.featureProperties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        rule.feature);\n    }\n\n    if (rule instanceof ngeoRuleSelect) {\n      obj.choices = rule.choices;\n    }\n\n    return obj;\n  }\n\n  /**\n   * Create a `ol.format.filter.Filter` object for a given data source.\n   * See the `ngeox.CreateFilterOptions` to learn more.\n   *\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?ol.format.filter.Filter} Filter.\n   * @export\n   */\n  createFilter(options) {\n\n    const dataSource = /** @type {ngeo.datasource.OGC} */ (options.dataSource);\n    let mainFilter = null;\n\n    if (options.filter) {\n      mainFilter = options.filter;\n    } else {\n      const rules = options.filterRules || dataSource.filterRules;\n      const conditions = [];\n\n      if (rules && rules.length) {\n        for (const rule of rules) {\n          const filter = this.createFilterFromRule_(\n            rule,\n            dataSource,\n            options.srsName\n          );\n          if (filter) {\n            conditions.push(filter);\n          }\n        }\n      }\n\n      const condition = dataSource.filterCondition;\n      if (conditions.length === 1) {\n        mainFilter = conditions[0];\n      } else if (conditions.length >= 2) {\n        if (condition === ngeoFilterCondition.AND) {\n          mainFilter = olFormatFilter.and.apply(null, conditions);\n        } else if (condition === ngeoFilterCondition.OR ||\n                   condition === ngeoFilterCondition.NOT\n        ) {\n          mainFilter = olFormatFilter.or.apply(null, conditions);\n        }\n      }\n      if (mainFilter && condition === ngeoFilterCondition.NOT) {\n        mainFilter = olFormatFilter.not(mainFilter);\n      }\n    }\n\n    if (options.incTime) {\n      const timeFilter = this.createTimeFilterFromDataSource_(dataSource);\n      if (timeFilter) {\n        if (mainFilter) {\n          mainFilter = olFormatFilter.and.apply(\n            null,\n            [\n              mainFilter,\n              timeFilter\n            ]\n          );\n        } else {\n          mainFilter = timeFilter;\n        }\n      }\n    }\n\n    return mainFilter;\n  }\n\n  /**\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?string} Filter string.\n   * @export\n   */\n  createFilterString(options) {\n    let filterString = null;\n    const filter = this.createFilter(options);\n    if (filter) {\n      const filterNode = writeFilter(filter);\n      const xmlSerializer = new XMLSerializer();\n      filterString = xmlSerializer.serializeToString(filterNode);\n    }\n    return filterString;\n  }\n\n  /**\n   * @param {ngeo.rule.Rule} rule Rule.\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @param {string=} opt_srsName SRS name. No srsName attribute will be\n   *     set on geometries when this is not provided.\n   * @return {?ol.format.filter.Filter} filter Filter;\n   * @private\n   */\n  createFilterFromRule_(rule, dataSource, opt_srsName) {\n\n    let filter = null;\n\n    const value = rule.value;\n    if (!value) {\n      return null;\n    }\n\n    const expression = value.expression;\n    const lowerBoundary = value.lowerBoundary;\n    const operator = value.operator;\n    const propertyName = value.propertyName;\n    const upperBoundary = value.upperBoundary;\n\n    const rot =  ngeoRuleRule.OperatorType;\n    const rsot = ngeoRuleRule.SpatialOperatorType;\n    const rtot = ngeoRuleRule.TemporalOperatorType;\n\n    const spatialTypes = [\n      rsot.CONTAINS,\n      rsot.INTERSECTS,\n      rsot.WITHIN\n    ];\n\n    const numericTypes = [\n      rot.GREATER_THAN,\n      rot.GREATER_THAN_OR_EQUAL_TO,\n      rot.LESSER_THAN,\n      rot.LESSER_THAN_OR_EQUAL_TO\n    ];\n\n    if (rule instanceof ngeoRuleDate) {\n      let beginValue;\n      let endValue;\n\n      if (operator === rtot.DURING) {\n        beginValue = moment(lowerBoundary).format('YYYY-MM-DD');\n        endValue = moment(upperBoundary).format('YYYY-MM-DD');\n      } else if (operator === rtot.EQUALS) {\n        beginValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD HH:mm:ss'\n        );\n        endValue = moment(\n          expression\n        ).add(\n          1, 'days'\n        ).subtract(\n          1, 'seconds'\n        ).format(\n          'YYYY-MM-DD HH:mm:ss'\n        );\n      } else if (operator === rtot.BEGINS) {\n        beginValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD'\n        );\n        // NOTE: end value is CURRENT + 30 years\n        endValue = moment(\n          expression\n        ).add(\n          30, 'years'\n        ).format(\n          'YYYY-MM-DD'\n        );\n      } else if (operator === rtot.ENDS) {\n        // NOTE: begin value is hardcoded to 1970-01-01\n        beginValue = '1970-01-01';\n        endValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD'\n        );\n      }\n      if (beginValue && endValue) {\n        filter = olFormatFilter.during(\n          propertyName,\n          beginValue,\n          endValue\n        );\n      }\n    } else if (rule instanceof ngeoRuleSelect) {\n      const selectedChoices = rule.selectedChoices;\n      if (selectedChoices.length === 1) {\n        filter = olFormatFilter.equalTo(\n          propertyName,\n          selectedChoices[0]\n        );\n      } else if (selectedChoices.length >= 2) {\n        const conditions = [];\n        for (const selectedChoice of selectedChoices) {\n          conditions.push(\n            olFormatFilter.equalTo(\n              propertyName,\n              selectedChoice\n            )\n          );\n        }\n        filter = olFormatFilter.or.apply(null, conditions);\n      }\n    } else if (olArray.includes(spatialTypes, operator)) {\n      const geometryName = dataSource.geometryName;\n      googAsserts.assertInstanceof(rule, ngeoRuleGeometry);\n      const geometry = googAsserts.assert(rule.geometry);\n      if (operator === rsot.CONTAINS) {\n        filter = olFormatFilter.contains(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.INTERSECTS) {\n        filter = olFormatFilter.intersects(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.WITHIN) {\n        filter = olFormatFilter.within(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      }\n    } else if (olArray.includes(numericTypes, operator)) {\n      const numericExpression = googAsserts.assertNumber(expression);\n      if (operator === rot.GREATER_THAN) {\n        filter = olFormatFilter.greaterThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.GREATER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.greaterThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN) {\n        filter = olFormatFilter.lessThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.lessThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      }\n    } else if (operator === rot.BETWEEN) {\n      filter = olFormatFilter.between(\n        propertyName,\n        lowerBoundary,\n        upperBoundary\n      );\n    } else if (operator === rot.EQUAL_TO) {\n      filter = olFormatFilter.equalTo(\n        propertyName,\n        expression\n      );\n    } else if (operator === rot.LIKE) {\n      const stringExpression = String(expression)\n        .replace(/!/g, '!!')\n        .replace(/\\./g, '!.')\n        .replace(/\\*/g, '!*');\n      filter = olFormatFilter.like(\n        propertyName,\n        `*${stringExpression}*`,\n        '*', /* wildCard */\n        '.', /* singleChar */\n        '!', /* escapeChar */\n        false /* matchCase */\n      );\n    } else if (operator === rot.NOT_EQUAL_TO) {\n      filter = olFormatFilter.notEqualTo(\n        propertyName,\n        expression\n      );\n    }\n\n    return filter;\n  }\n\n  /**\n   * Create and return an OpenLayers filter object using the available\n   * time properties within the data source.\n   * @param {ngeo.datasource.OGC} dataSource Data source from which to\n   *     create the filter.\n   * @return {?ol.format.filter.Filter} Filter\n   * @private\n   */\n  createTimeFilterFromDataSource_(dataSource) {\n    let filter = null;\n    const range = dataSource.timeRangeValue;\n    const timeProperty = dataSource.timeProperty;\n    const name = dataSource.timeAttributeName;\n\n    if (range && timeProperty && name) {\n\n      if (range.end !== undefined) {\n        // Case 1: the range has both 'start' and 'end' values.  Use them to\n        //         create a During filter.\n\n        const values = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        ).split('/');\n\n        filter = olFormatFilter.during(name, values[0], values[1]);\n      } else {\n\n        // Case 2: we only have a 'start' value. We need to calculate the 'end'\n        //         using the resolution of the time property.\n\n        const resolution = timeProperty.resolution || 'seconds';\n        const value = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        );\n        let momentEnd;\n\n        switch (resolution) {\n          case 'year':\n            momentEnd = moment(value).add(1, 'years').subtract(1, 'seconds');\n            break;\n          case 'month':\n            momentEnd = moment(value).add(1, 'months').subtract(1, 'seconds');\n            break;\n          case 'day':\n            momentEnd = moment(value).add(1, 'days').subtract(1, 'seconds');\n            break;\n          default:\n            //case \"second\":\n            // This would require a TContains filter, which neither OpenLayers\n            // and MapServer support. Skip...\n        }\n\n        if (momentEnd) {\n          const startValue = moment(value).format('YYYY-MM-DD HH:mm:ss');\n          const endValue = momentEnd.format('YYYY-MM-DD HH:mm:ss');\n          filter = olFormatFilter.during(name, startValue, endValue);\n        }\n      }\n    }\n\n    return filter;\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRuleHelper', [\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoRuleHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.WFSDescribeFeatureType\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\nimport * as olXml from 'ol/xml.js';\n\n/**\n * @classdesc\n * Format for reading WFS DescribeFeatureType data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst exports = function() {\n\n  olFormatXML.call(this);\n\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * Read a WFS DescribeFeatureType document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WFS DescribeFeatureType.\n * @api\n */\nexports.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromNode = function(node) {\n  let result = {};\n  result = olXml.pushParseAndPop(\n    result,\n    exports.PARSERS_,\n    node,\n    []\n  );\n  return result;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Attributes.\n */\nexports.readElement_ = function(node, objectStack) {\n  const attributes = {};\n  for (let i = 0, len = node.attributes.length; i < len; i++) {\n    const attribute = node.attributes.item(i);\n    attributes[attribute.name] = attribute.value;\n  }\n  if (objectStack.length === 1) {\n    // remove namespace from type\n    attributes['type'] = attributes['type'].split(':').pop();\n  }\n  return attributes;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexType_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const object = olXml.pushParseAndPop(\n    {'name': name},\n    exports.COMPLEX_TYPE_PARSERS_,\n    node, objectStack\n  );\n  // flatten\n  object['complexContent'] =\n    object['complexContent']['extension']['sequence']['element'];\n  return object;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexContent_ = function(\n  node, objectStack\n) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.COMPLEX_CONTENT_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readExtension_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.EXTENSION_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readSequence_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.SEQUENCE_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nexports.NAMESPACE_URIS_ = [\n  null,\n  'http://www.w3.org/2001/XMLSchema'\n];\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    ),\n    'complexType': olXml.makeObjectPropertyPusher(\n      exports.readComplexType_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_TYPE_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'complexContent': olXml.makeObjectPropertySetter(\n      exports.readComplexContent_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_CONTENT_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'extension': olXml.makeObjectPropertySetter(\n      exports.readExtension_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.EXTENSION_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'sequence': olXml.makeObjectPropertySetter(\n      exports.readSequence_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.SEQUENCE_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    )\n  }));\n\n\nexport default exports;\n","/**\n * @module ngeo.query.Querent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport ngeoWFSDescribeFeatureType from 'ngeo/WFSDescribeFeatureType.js';\nimport olFormatWMSCapabilities from 'ol/format/WMSCapabilities.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport * as olObj from 'ol/obj.js';\nimport * as olUri from 'ol/uri.js';\nimport * as olExtent from 'ol/extent.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Querent is a service that issues all sorts of queries using\n   * ngeo data sources. It does not store the result. Instead, it returns it\n   * using promises. Any component that inject this service can use it to\n   * make it issue its own queries and do whatever it wants with the result.\n   *\n   * It supports sending OGC requests and parse the response, such as:\n   * - WFS DescribeFeatureType\n   * - WFS GetFeature\n   * - WMS GetCapabilites\n   * - WMS GetFeatureInfo\n   * - WMTS GetCapabilities\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($http, $q, ngeoRuleHelper, ngeoWMSTime) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n\n    // === Other properties ===\n\n    /**\n     * Promises that can be resolved to cancel started requests.\n     * @type {!Array.<angular.$q.Deferred>}\n     * @private\n     */\n    this.requestCancelers_ = [];\n\n    /**\n     * Cache of promises for WMS GetCapabilities requests. They key is the\n     * online resource base url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmsGetCapabilitiesPromises_ = {};\n\n    /**\n     * Cache of promises for WMST GetCapabilities requests. They key is the\n     * url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmtsGetCapabilitiesPromises_ = {};\n  }\n\n\n  // === PUBLIC methods ===\n\n  /**\n   * Issue WMS GetFeatureInfo and/or WFS GetFeature requests using the given\n   * data sources, map and optional filters.\n   *\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  issue(options) {\n\n    const promises = [];\n    const map = options.map;\n\n    // (1) Cancel requests that are still running\n    this.cancelStillRunningRequests_();\n\n    // (2) Get queryable data sources\n    let queryableDataSources;\n    if (options.queryableDataSources) {\n      queryableDataSources = options.queryableDataSources;\n    } else {\n      const dataSources = options.dataSources;\n      googAsserts.assert(dataSources, 'DataSources should be set');\n      queryableDataSources = this.getQueryableDataSources(dataSources, map);\n    }\n\n    // (3) Combine data sources that support WFS and issue WFS queries.\n    //     The 'bbox' ('extent' option) is not required for WFS requests to\n    //     be issued.\n    const combinedWFSDataSources = this.getCombinableWFSDataSources_(\n      queryableDataSources.wfs);\n    promises.push(this.issueCombinedWFS_(combinedWFSDataSources, options));\n\n    // (4) Combine data sources that support WMS and issue WMS queries.\n    //     Only occurs if the `coordinate` option is set, because it's required\n    //     by WMS GetFeatureInfo requests.\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const combinedWMSDataSources = this.getCombinableWMSDataSources_(\n        queryableDataSources.wms);\n      promises.push(this.issueCombinedWMS_(combinedWMSDataSources, options));\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Browse a given list of data sources. Return 2 lists of data sources that\n   * are queryable, the first one being those that support WFS and the other\n   * WMS only. This means that WFS is always favored first, then WMS.\n   *\n   * The map view resolution determines if the inner ogc layers are in range.\n   *\n   * @param {!Array.<!ngeo.datasource.DataSource>} dataSources Data sources\n   * @param {ol.Map} map Map.\n   * @return {!ngeox.QueryableDataSources} Queryable data sources.\n   * @export\n   */\n  getQueryableDataSources(dataSources, map) {\n\n    const queryableDataSources = {\n      wfs: [],\n      wms: []\n    };\n    const resolution = googAsserts.assertNumber(map.getView().getResolution());\n\n    for (const dataSource of dataSources) {\n\n      // (1) Skip data source that can't be queried\n      if (!this.isDataSourceQueryable_(dataSource, resolution)) {\n        continue;\n      }\n\n      if (dataSource instanceof ngeoDatasourceOGC) {\n        // (2) Split data sources\n        if (dataSource.supportsWFS) {\n          queryableDataSources.wfs.push(dataSource);\n        } else {\n          queryableDataSources.wms.push(dataSource);\n        }\n      }\n    }\n\n    return queryableDataSources;\n  }\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  wfsDescribeFeatureType(dataSource) {\n\n    googAsserts.assert(\n      dataSource.supportsAttributes,\n      `The data source must support WFS, have a single OGCLayer that\n      is queryable in order to issue WFS DescribeFeatureType requests`\n    );\n\n    const ogcLayerNames = dataSource.getOGCLayerNames();\n\n    const url = olUri.appendParams(\n      googAsserts.assertString(dataSource.wfsUrl),\n      {\n        'REQUEST': 'DescribeFeatureType',\n        'SERVICE': 'WFS',\n        'VERSION': '2.0.0',\n        'TYPENAME': ogcLayerNames\n      }\n    );\n\n    return this.http_.get(url).then((response) => {\n      const format = new ngeoWFSDescribeFeatureType();\n      return format.read(response.data);\n    });\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMS layer capabilities\n   * @param {string} layerName Name of the WMS layer\n   * @return {?Object} Found WMS layer capability\n   * @export\n   */\n  wmsFindLayerCapability(layerCapabilities, layerName) {\n\n    let found = null;\n\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Name'] === layerName) {\n        found = layerCapability;\n        break;\n      } else if (layerCapability['Layer']) {\n        found = this.wmsFindLayerCapability(\n          layerCapability['Layer'], layerName);\n        if (found) {\n          break;\n        }\n      }\n    }\n\n    return found;\n  }\n\n  /**\n   * @param {string} baseUrl Base url of the WMS server.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmsGetCapabilities(baseUrl, opt_cache) {\n\n    const cache = opt_cache !== false;\n\n    const params = {\n      'REQUEST': 'GetCapabilities',\n      'SERVICE': 'WMS',\n      'VERSION': '1.3.0'\n    };\n\n    const url = olUri.appendParams(baseUrl, params);\n    let promise;\n\n    if (!cache || !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.wmsGetCapabilitiesPromises_[baseUrl];\n    }\n\n    googAsserts.assert(promise);\n\n    if (cache && !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      this.wmsGetCapabilitiesPromises_[baseUrl] = promise;\n    }\n\n    return promise;\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMTS layer capabilities\n   * @param {string} layerName Name of the WMTS layer, a.k.a. the identifier.\n   * @return {?Object} Found WTMS layer capability\n   * @export\n   */\n  wmtsFindLayerCapability(layerCapabilities, layerName) {\n    let found = null;\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Identifier'] === layerName) {\n        found = layerCapability;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @param {string} url Url of the WMTS server. Note that it must contain\n   *     all required arguments.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmtsGetCapabilities(url, opt_cache) {\n\n    const cache = opt_cache !== false;\n    let promise;\n\n    if (!cache || !this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMTSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.wmtsGetCapabilitiesPromises_[url];\n    }\n\n    googAsserts.assert(promise);\n\n    if (cache && !this.wmtsGetCapabilitiesPromises_[url]) {\n      this.wmtsGetCapabilitiesPromises_[url] = promise;\n    }\n\n    return promise;\n  }\n\n\n  // === PRIVATE methods ===\n\n  /**\n   * Handles the response of multiple promises that did either\n   * WMS GetFeatureInfo or WFS GetFeature requests, in which the result is\n   * a hash with key being the data source id and value the array of features.\n   *\n   * The response object itself is an array, one item being one result per\n   * promise. The idea is to return a single hash by combining the result\n   * objects.\n   *\n   * The keys are always unique, i.e. there can be multiple result objects for\n   * the same data source id.\n   *\n   * @param {!Array.<ngeox.QuerentResult>} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleCombinedQueryResult_(response) {\n    const combinedHash = {};\n    for (const hash of response) {\n      for (const dataSourceIdStr in hash) {\n        const dataSourceId = Number(dataSourceIdStr);\n        combinedHash[dataSourceId] = hash[dataSourceId];\n      }\n    }\n    return combinedHash;\n  }\n\n\n  /**\n   * Handles the result of a single WMS GetFeatureInfo or WFS GetFeature\n   * request. Read features from the response and return them.\n   *\n   * @param {!Array.<!ngeo.datasource.OGC>} dataSources List of\n   *     queryable data sources that were used to do the query.\n   * @param {number} limit The maximum number of features to get with the query.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {angular.$http.Response|number} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleQueryResult_(dataSources, limit, wfs, response) {\n    const hash = {};\n\n    for (const dataSource of dataSources) {\n      let features;\n      let tooManyFeatures;\n      let totalFeatureCount;\n\n      if (typeof response === 'number') {\n        features = [];\n        tooManyFeatures = true;\n        totalFeatureCount = response;\n      } else {\n        if (dataSource instanceof ngeoDatasourceOGC) {\n          features = this.readAndTypeFeatures_(dataSource, response.data, wfs);\n        } else {\n          features = [];\n        }\n      }\n      const dataSourceId = dataSource.id;\n      this.setUniqueIds_(features, dataSource.id);\n      hash[dataSourceId] = {\n        features,\n        limit,\n        tooManyFeatures,\n        totalFeatureCount\n      };\n    }\n\n    return hash;\n  }\n\n  /**\n   * Read and assign the type of the feature to each feature in the data.\n   * The type will be stocked in the properties of the features as\n   * \"ngeo_feature_type_\".\n   * @param {ngeo.datasource.OGC} dataSource used to read the features.\n   * @param {Document | Node | Object | string} data the response data.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @return {Array.<ol.Feature>} returned features with a type in each features.\n   * @private\n   */\n  readAndTypeFeatures_(dataSource, data, wfs) {\n    const features = [];\n    let readFeatures;\n    // Copy the types to be able to set it AND iterate on it.\n    const featureTypes = this.getSetOlFormatTypes_(dataSource, wfs).slice();\n    featureTypes.forEach((type) => {\n      // Assign temporarily a single feature type to read features separately.\n      this.getSetOlFormatTypes_(dataSource, wfs, [type]);\n      if (wfs) {\n        readFeatures = dataSource.wfsFormat.readFeatures(data);\n      } else {\n        readFeatures = dataSource.wmsFormat.readFeatures(data);\n      }\n      if (readFeatures.length > 0) {\n        readFeatures.forEach((feature) => {\n          feature.set('ngeo_feature_type_', type);\n          features.push(feature);\n        });\n      }\n    });\n    // Re-set the value to the datasource.xxxFormat to be able to re-use\n    // it later (in another query);\n    this.getSetOlFormatTypes_(dataSource, wfs, featureTypes);\n    return features;\n  }\n\n  /**\n   * Return the types defined in the format of the datasource. Can set the\n   * types if one is given.\n   * @param {ngeo.datasource.OGC} dataSource that contains the format object.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {Array.<string>=} opt_types An array of type if you want to set the\n   *     type of the format object.\n   * @return {Array.<string>} The types defined in the format.\n   * @private\n   */\n  getSetOlFormatTypes_(dataSource, wfs, opt_types) {\n    let types;\n    if (wfs) {\n      if (opt_types) {\n        dataSource.wfsFormat.setFeatureType(opt_types);\n      }\n      types = dataSource.wfsFormat.getFeatureType();\n    } else {\n      if (opt_types) {\n        dataSource.wmsFormat.setLayers(opt_types);\n      }\n      types = dataSource.wmsFormat.getLayers();\n    }\n    if (!types) {\n      return [];\n    }\n    return (Array.isArray(types)) ? types : [types];\n  }\n\n  /**\n   * Issue WFS GetFeature requests using the given combined data sources, map\n   * and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWFS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const maxFeatures = googAsserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = googAsserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const srsName = projection.getCode();\n    const wfsCount = options.wfsCount === true;\n\n    // (1) Extent (bbox), which is optional, i.e. its value can stay undefined\n    let bbox;\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const tolerancePx = options.tolerancePx;\n      googAsserts.assert(tolerancePx);\n      const tolerance = tolerancePx * resolution;\n      bbox = olExtent.buffer(\n        olExtent.createOrUpdateFromCoordinate(coordinate),\n        tolerance\n      );\n    } else {\n      bbox = options.extent;\n    }\n\n    // (2) Launch one request per combinaison of data sources\n    const wfsFormat = new olFormatWFS();\n    const xmlSerializer = new XMLSerializer();\n    for (const dataSources of combinedDataSources) {\n\n      let getFeatureCommonOptions;\n      let featureNS;\n      let featureTypes = [];\n      let url;\n      const params = {};\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!getFeatureCommonOptions) {\n          featureNS = dataSource.wfsFeatureNS;\n          const featurePrefix = dataSource.wfsFeaturePrefix;\n          const geometryName = dataSource.geometryName;\n          const outputFormat = dataSource.wfsOutputFormat;\n\n          getFeatureCommonOptions = {\n            bbox,\n            featureNS,\n            featurePrefix,\n            geometryName,\n            outputFormat,\n            srsName\n          };\n\n          url = dataSource.wfsUrl;\n\n          // All data sources combined share the same active dimensions\n          olObj.assign(params, dataSource.activeDimensions);\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        featureTypes = featureTypes.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Add filter, if any. If the case, then only one data source\n        //     is expected to be used for this request.\n        let filter;\n        if (options.filter) {\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            filter: options.filter,\n            incTime: true\n          });\n        } else if ((dataSource.filterRules && dataSource.filterRules.length) ||\n            dataSource.timeRangeValue) {\n\n          googAsserts.assert(\n            dataSources.length === 1,\n            `A data source having filterRules or timeRangeValue should issue\n            a single query, alone.`\n          );\n\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            incTime: true,\n            srsName: srsName\n          });\n        }\n\n        if (filter) {\n          getFeatureCommonOptions['filter'] = filter;\n        }\n      }\n\n      googAsserts.assert(getFeatureCommonOptions);\n      getFeatureCommonOptions.featureTypes = featureTypes;\n      googAsserts.assert(url);\n\n      // (4) Build query then launch\n      //\n      //     If we require to do a WFS GetFeature request with\n      //     `resultType: 'hits'` first, do so. In that case, if there would\n      //     be too many features returned, no GetFeature is done thereafter\n      //     and the data sources will return empty arrays in the returned\n      //     response.\n      //\n      //     If we do not need to count features first, then proceed with\n      //     an normal WFS GetFeature request.\n      const getFeatureDefer = this.q_.defer();\n      promises.push(\n        getFeatureDefer.promise.then(\n          this.handleQueryResult_.bind(this, dataSources, maxFeatures, true)\n        )\n      );\n\n      // (4.1) Count, if required\n      let countPromise;\n      if (wfsCount) {\n        const getCountOptions = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n          olObj.assign(\n            {\n              resultType: 'hits'\n            },\n            getFeatureCommonOptions\n          )\n        );\n        const featureCountXml = wfsFormat.writeGetFeature(getCountOptions);\n        const featureCountRequest = xmlSerializer.serializeToString(\n          featureCountXml);\n        const canceler = this.registerCanceler_();\n        countPromise = this.http_.post(\n          url,\n          featureCountRequest,\n          {\n            params: params,\n            headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n            timeout: canceler.promise\n          }\n        ).then(((response) => {\n          const meta = dataSources[0].wfsFormat.readFeatureCollectionMetadata(\n            response.data\n          );\n          return meta['numberOfFeatures'];\n        }).bind(this));\n      } else {\n        countPromise = this.q_.resolve();\n      }\n\n      // (4.2) After count, do GetFeature (if required)\n      countPromise.then((numberOfFeatures) => {\n        // `true` is returned if a count request was made AND there would\n        // be too many features.\n        if (numberOfFeatures === undefined || numberOfFeatures < maxFeatures) {\n\n          const getFeatureOptions = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n            olObj.assign(\n              {\n                maxFeatures\n              },\n              getFeatureCommonOptions\n            )\n          );\n          const featureRequestXml = wfsFormat.writeGetFeature(\n            getFeatureOptions);\n          const featureRequest = xmlSerializer.serializeToString(\n            featureRequestXml);\n          googAsserts.assertString(url);\n          const canceler = this.registerCanceler_();\n          this.http_.post(\n            url,\n            featureRequest,\n            {\n              params: params,\n              headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n              timeout: canceler.promise\n            }\n          ).then((response) => {\n            getFeatureDefer.resolve(response);\n          });\n\n        } else {\n          getFeatureDefer.resolve(numberOfFeatures);\n        }\n      });\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Issue WMS GetFeatureInfo requests using the given combined data sources,\n   * map and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWMS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const FEATURE_COUNT = googAsserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = googAsserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const projCode = projection.getCode();\n\n    // (1) Coordinate, which is required to issue WMS GetFeatureInfo requests\n    const coordinate = options.coordinate;\n    googAsserts.assert(coordinate);\n\n    // (2) Launch one request per combinaison of data sources\n    for (const dataSources of combinedDataSources) {\n\n      let url;\n      let LAYERS = [];\n      let INFO_FORMAT;\n      let activeDimensionsSet = false;\n      const params = {};\n      let filterString = null;\n      let filtrableLayerName = null;\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!INFO_FORMAT) {\n          INFO_FORMAT = dataSource.wmsInfoFormat;\n          url = dataSource.wmsUrl;\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        LAYERS = LAYERS.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Manage active dimensions, which are added directly to the\n        //     query parameters. Note that this occurs only ONCE, i.e.\n        //     for the first data source, because all data sources here have\n        //     been combined together, therefore they share the same active\n        //     dimensions.\n        if (!activeDimensionsSet) {\n          olObj.assign(params, dataSource.activeDimensions);\n          activeDimensionsSet = true;\n        }\n\n        // (d) Add filter, if any. If there is a filter on the data source,\n        //     then it is expected that one request will be sent for this\n        //     data source only.\n        if (dataSource.filterRules && dataSource.filterRules.length) {\n          googAsserts.assert(dataSources.length === 1);\n          filtrableLayerName = dataSource.getFiltrableOGCLayerName();\n          filterString = this.ngeoRuleHelper_.createFilterString({\n            dataSource: dataSource,\n            srsName: projCode\n          });\n        }\n\n        // (e) Add TIME parameter if the data source has a time range value.\n        //     If that's the case, then it is expected that one request will be\n        //     sent for this data source only.\n        if (dataSource.timeRangeValue !== null && dataSource.timeProperty) {\n          googAsserts.assert(dataSources.length === 1);\n          params['TIME'] = this.ngeoWMSTime_.formatWMSTimeParam(\n            dataSource.timeProperty,\n            dataSource.timeRangeValue\n          );\n        }\n      }\n\n      params['LAYERS'] = LAYERS;\n      params['QUERY_LAYERS'] = LAYERS;\n\n      // Manage 'FILTER' parameter\n      if (filterString && filtrableLayerName) {\n        let filterParamValue = null;\n        if (LAYERS.length === 1) {\n          // When there's only one layer in the `LAYERS` parameters, then\n          // the filter string is given as-is.\n          filterParamValue = filterString;\n        } else {\n          // When there's more then one layer, then each filter must be wrapped\n          // between parenthesis and the order must also match the `LAYERS`\n          // parameter as well.\n          const filterParamValues = [];\n          for (let i = 0, ii = LAYERS.length; i < ii; i++) {\n            if (LAYERS[i] === filtrableLayerName) {\n              filterParamValues.push(`(${filterString})`);\n            } else {\n              filterParamValues.push('()');\n            }\n          }\n          filterParamValue = filterParamValues.join('');\n        }\n        params['FILTER'] = filterParamValue;\n      }\n\n      googAsserts.assert(url);\n      const wmsSource = new olSourceImageWMS({\n        params,\n        url\n      });\n\n      // (4) Build query url, then launch\n      const wmsGetFeatureInfoUrl = googAsserts.assertString(\n        wmsSource.getGetFeatureInfoUrl(\n          coordinate, resolution, projCode, {\n            // Without extern, quoting is necessary\n            'FEATURE_COUNT': FEATURE_COUNT,\n            'INFO_FORMAT': INFO_FORMAT\n          }\n        )\n      );\n\n      const canceler = this.registerCanceler_();\n      promises.push(\n        this.http_.get(\n          wmsGetFeatureInfoUrl,\n          {\n            timeout: canceler.promise\n          }\n        ).then(\n          this.handleQueryResult_.bind(this, dataSources, FEATURE_COUNT, false)\n        )\n      );\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WFS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWFSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWFS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWFS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WMS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWMSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWMS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWMS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * Checks if a data source can be queried, which requires it to be:\n   * - visible\n   * - in range\n   * - queryable (using the native getter)\n   * - have at least one OGC layer in range of current map view resolution.\n   *\n   * @param {ngeo.datasource.DataSource} ds Data source\n   * @param {number} res Resolution.\n   * @return {boolean} Whether the data source is queryable\n   * @private\n   */\n  isDataSourceQueryable_(ds, res) {\n    let queryable = ds.visible && ds.inRange && ds.queryable;\n    if (queryable && ds instanceof ngeoDatasourceOGC) {\n      const ogcDS = /** @type {!ngeo.datasource.OGC} */ (ds);\n      queryable = ogcDS.isAnyOGCLayerInRange(res, true);\n    }\n    return queryable;\n  }\n\n  /**\n   * Make sure that feature ids are unique, because the same features might\n   * be returned for different layers.\n   * @param {Array.<ol.Feature>} features Features\n   * @param {number} dataSourceId Data source id.\n   * @private\n   */\n  setUniqueIds_(features, dataSourceId) {\n    features.forEach((feature) => {\n      if (feature.getId() !== undefined) {\n        const id = `${dataSourceId}_${feature.getId()}`;\n        feature.setId(id);\n      }\n    });\n  }\n\n  /**\n   * @return {angular.$q.Deferred} A deferred that can be resolved to cancel a\n   *    HTTP request.\n   * @private\n   */\n  registerCanceler_() {\n    const canceler = this.q_.defer();\n    this.requestCancelers_.push(canceler);\n    return canceler;\n  }\n\n  /**\n   * @private\n   */\n  cancelStillRunningRequests_() {\n    for (const canceler of this.requestCancelers_) {\n      canceler.resolve();\n    }\n    this.requestCancelers_.length = 0;\n  }\n};\n\n\n/**\n * @typedef {!Array.<!Array.<!ngeo.datasource.OGC>>}\n */\nexports.CombinedDataSources;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoQuerent', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoQuerent', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.Helper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoFormatWFSAttribute from 'ngeo/format/WFSAttribute.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport * as olEvents from 'ol/events.js';\n\nconst exports = class {\n  /**\n   * A service that provides utility methods to manipulate or get data sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data source\n   *     service.\n   * @param {ngeo.query.Querent} ngeoQuerent Ngeo querent service.\n   * @ngdoc service\n   * @ngname ngeoDataSourcesHelper\n   * @ngInject\n   */\n  constructor($q, ngeoDataSources, ngeoQuerent) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Object.<number, ngeo.datasource.DataSource>}\n     * @private\n     */\n    this.cache_ = {};\n\n    // Events\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n    olEvents.listen(this.collection_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n  /**\n   * @return {ngeox.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?ngeo.datasource.DataSource} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return this.cache_[id] || null;\n  }\n\n  /**\n   * Get the attributes of a data source. If they are not set, they are obtained\n   * from the querent service using a WFS DescribeFeatureType request, then set\n   * in the data source.\n   *\n   * Please, note that in order to be dynamically set, the data source must\n   * only have 1 ogcLayer set and be queryable.\n   *\n   * @param {ngeo.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  getDataSourceAttributes(dataSource) {\n\n    const wfsDescribeFeatureTypeDefer = this.q_.defer();\n\n    if (dataSource.attributes) {\n      wfsDescribeFeatureTypeDefer.resolve(dataSource.attributes);\n    } else {\n      this.ngeoQuerent_.wfsDescribeFeatureType(\n        dataSource\n      ).then((featureType) => {\n        // We know, at this point, that there's only one definition that\n        // was returned.  Just to be sure, let's do a bunch of assertions.\n        const ogcLayerName = dataSource.getOGCLayerNames()[0];\n        googAsserts.assertString(\n          ogcLayerName, 'The data source should have only one ogcLayer.');\n        const element = featureType.element[0];\n        googAsserts.assert(element.name === ogcLayerName);\n        googAsserts.assert(\n          featureType.complexType[0].name === element.type);\n\n        const complexContent = featureType['complexType'][0]['complexContent'];\n        const attributes = new ngeoFormatWFSAttribute().read(complexContent);\n\n        // Set the attributes in the data source\n        dataSource.setAttributes(attributes);\n\n        wfsDescribeFeatureTypeDefer.resolve(attributes);\n      });\n    }\n\n    return wfsDescribeFeatureTypeDefer.promise;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. Add it\n   * to the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = googAsserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    this.cache_[dataSource.id] = dataSource;\n  }\n\n  /**\n   * Called when a data source is removed from the ngeo collection. Remove it\n   * from the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = googAsserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    delete this.cache_[dataSource.id];\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSourcesHelper', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoDataSourcesHelper', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.Helper\n */\nimport gmfEditingEnumerateAttribute from 'gmf/editing/EnumerateAttribute.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to manipulate or get GMF data\n   * sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {gmf.editing.EnumerateAttribute} gmfEnumerateAttribute The Gmf enumerate\n   *     attribute service.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     source helper service.\n   * @ngdoc service\n   * @ngname gmfDataSourcesHelper\n   * @ngInject\n   */\n  constructor($q, gmfEnumerateAttribute, ngeoDataSourcesHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {gmf.editing.EnumerateAttribute}\n     * @private\n     */\n    this.gmfEnumerateAttribute_ = gmfEnumerateAttribute;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {gmfx.datasource.DataSources}\n     * @protected\n     */\n    this.collection_;\n\n    /**\n     * @type {Object.<number, gmf.datasource.OGC>}\n     * @protected\n     */\n    this.cache_;\n  }\n\n  /**\n   * @return {gmfx.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return /** @type {gmfx.datasource.DataSources} */ (\n      this.ngeoDataSourcesHelper_.collection\n    );\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?gmf.datasource.OGC} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return /** @type {?gmf.datasource.OGC} */ (\n      this.ngeoDataSourcesHelper_.getDataSource(id)\n    );\n  }\n\n  /**\n   * @param {gmf.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  prepareFiltrableDataSource(dataSource) {\n\n    const prepareFiltrableDataSourceDefer = this.q_.defer();\n\n    // (1) Get the attributes. The first time, they will be asynchronously\n    //     obtained using a WFS DescribeFeatureType request.\n    this.ngeoDataSourcesHelper_.getDataSourceAttributes(\n      dataSource\n    ).then((attributes) => {\n      // (2) The attribute names that are in the `enumeratedAttributes`\n      //     metadata are the ones that need to have their values fetched.\n      //     Do that once then set the type to SELECT and the choices.\n      const meta = dataSource.gmfLayer.metadata || {};\n      const enumAttributes = meta.enumeratedAttributes;\n      if (enumAttributes && enumAttributes.length) {\n        const promises = [];\n        for (const attribute of attributes) {\n          if (olArray.includes(enumAttributes, attribute.name) &&\n             attribute.type !== ngeoFormatAttributeType.SELECT &&\n             (!attribute.choices || !attribute.choices.length)) {\n            promises.push(\n              this.gmfEnumerateAttribute_.getAttributeValues(\n                dataSource, attribute.name\n              ).then((values) => {\n                const choices = values.map(choice => choice.value);\n                attribute.type = ngeoFormatAttributeType.SELECT;\n                attribute.choices = choices;\n              })\n            );\n          }\n        }\n        return this.q_.all(promises).then(\n          prepareFiltrableDataSourceDefer.resolve(dataSource)\n        );\n      } else {\n        prepareFiltrableDataSourceDefer.resolve(dataSource);\n      }\n    });\n\n    return prepareFiltrableDataSourceDefer.promise;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourcesHelper', [\n  ngeoDatasourceHelper.module.name,\n  gmfEditingEnumerateAttribute.module.name,\n]);\nexports.module.service('gmfDataSourcesHelper', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.OGC\n */\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\nconst exports = class extends ngeoDatasourceOGC {\n\n  /**\n   * A `gmf.datasource.OGC` extends a `ngeo.datasource.OGC` and\n   * adds some properties that are proper to GMF only.\n   *\n   * @struct\n   * @param {gmfx.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {gmfThemes.GmfLayer}\n     * @private\n     */\n    this.gmfLayer_ = options.gmfLayer;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {gmfThemes.GmfLayer} GMF layer\n   * @export\n   */\n  get gmfLayer() {\n    return this.gmfLayer_;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.WFSAliases\n */\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\n\nconst exports = class {\n\n  /**\n   * Service that provides methods to get additional information and actions\n   * when performing WFS requests.\n   *\n   * @struct\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     source helper service.\n   * @ngdoc service\n   * @ngname gmfWFSAliases\n   * @ngInject\n   */\n  constructor(ngeoDataSourcesHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n  }\n\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @export\n   */\n  describe(dataSource) {\n    // Only QGIS Server supports WFS aliases\n    if (dataSource.ogcServerType === 'qgisserver' && !dataSource.attributes) {\n      // Trigger an additional WFS DescribeFeatureType request to get\n      // datasource attributes, including aliases.\n      this.ngeoDataSourcesHelper_.getDataSourceAttributes(dataSource);\n    }\n  }\n};\n\n\nexports.module = angular.module('gmfDatasourceWFSAliases', [\n  ngeoDatasourceHelper.module.name,\n]);\nexports.module.service('gmfWFSAliases', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.Manager\n */\nimport gmfDatasourceOGC from 'gmf/datasource/OGC.js';\nimport gmfDatasourceWFSAliases from 'gmf/datasource/WFSAliases.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\n\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\n\nconst exports = class {\n\n  /**\n   * The GeoMapFish DataSources Manager is responsible of listenening to the\n   * c2cgeoportal's themes to create instances of `ngeo.datasource.DataSource`\n   * objects with the layer definitions found and push them in the\n   * `ngeox.datasource.DataSources` collection. The Manager must be initialized\n   * with the app's map using the setDatasourcseMap() method.\n   *\n   * When changing theme, these data sources are cleared then re-created.\n   *\n   * @struct\n   * @param {angular.$q} $q Angular q service\n   * @param {!angular.Scope} $rootScope Angular rootScope.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n   * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n   * @param {!ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer\n   *     manager.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   *     data sources service.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @param {!gmf.datasource.WFSAliases} gmfWFSAliases Gmf WFS aliases service.\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfDataSourcesManager\n   */\n  constructor($q, $rootScope, $timeout, gmfThemes, gmfTreeManager,\n    ngeoBackgroundLayerMgr, ngeoDataSources, ngeoLayerHelper, ngeoRuleHelper,\n    ngeoWMSTime, gmfWFSAliases\n  ) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    /**\n     * @type {gmf.layertree.TreeManager}\n     * @private\n     */\n    this.gmfTreeManager_ = gmfTreeManager;\n\n    /**\n     * @type {!ngeo.map.BackgroundLayerMgr}\n     * @private\n     */\n    this.ngeoBackgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * The collection of DataSources from ngeo, which gets updated by this\n     * service. When the theme changes, first we remove all data sources, then\n     * the 'active' data source are added here.\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n    /**\n     * @type {!gmf.datasource.WFSAliases}\n     * @private\n     */\n    this.gmfWFSAliases_ = gmfWFSAliases;\n\n\n    // === Inner properties ===\n\n    /**\n     * While loading a new theme, this is where all of the created data sources\n     * are put using the id as key for easier find in the future.\n     * @type {Object.<number, gmf.datasource.OGC>}\n     * @private\n     */\n    this.dataSourcesCache_ = {};\n\n    /**\n     * A reference to the dimensions object.\n     * @type {ngeox.Dimensions|undefined}\n     * @private\n     */\n    this.dimensions_;\n\n    /**\n     * The cache of layertree leaf controller, i.e. those that are added to\n     * the tree manager. When treeCtrl is added in this cache, it's given\n     * a reference to its according data source.\n     * @type {gmfx.datasource.ManagerTreeCtrlCache}\n     * @private\n     */\n    this.treeCtrlCache_ = {};\n\n    /**\n     * The function to call to unregister the `watchCollection` event on\n     * the root layer tree controller children.\n     * @type {?Function}\n     * @private\n     */\n    this.treeCtrlsUnregister_ = null;\n\n    // === Events ===\n\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleNgeoBackgroundLayerChange_,\n      this\n    );\n    olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n  }\n\n\n  /**\n   * Set the map to use with your datasources.\n   * @param {!ol.Map} map The map to use.\n   * @export\n   */\n  setDatasourceMap(map) {\n    this.ngeoDataSources_.map = map;\n  }\n\n  /**\n   * @param {!ngeox.Dimensions} dimensions A reference to the dimensions\n   *     object to keep a reference of in this service.\n   */\n  setDimensions(dimensions) {\n    this.dimensions_ = dimensions;\n  }\n\n  /**\n   * Called when the themes change. Remove any existing data sources first,\n   * then create and add data sources from the loaded themes.\n   * @private\n   */\n  handleThemesChange_() {\n    // (1) Clear\n    this.clearDataSources_();\n    if (this.treeCtrlsUnregister_) {\n      this.treeCtrlsUnregister_();\n    }\n    this.clearTreeCtrlCache_();\n\n    // (2) Re-create data sources and event listeners\n    this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n      const promiseThemes = this.gmfThemes_.getThemesObject().then((themes) => {\n        // Create a DataSources for each theme\n        for (const theme of themes) {\n          for (const child of theme.children) {\n            googAsserts.assert(child);\n            this.createDataSource_(child, child, ogcServers);\n          }\n        }\n      });\n\n      const promiseBgLayers = this.gmfThemes_.getBackgroundLayersObject().then(\n        (backgroundLayers) => {\n          // Create a DataSource for each background layer\n          for (const backgroundLayer of backgroundLayers) {\n            this.createDataSource_(null, backgroundLayer, ogcServers);\n          }\n        }\n      );\n\n      // Then add the data sources that are active in the ngeo collection\n      this.q_.all([promiseThemes, promiseBgLayers]).then(() => {\n        this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(\n          () => {\n            if (this.gmfTreeManager_.rootCtrl) {\n              return this.gmfTreeManager_.rootCtrl.children;\n            }\n          },\n          this.handleTreeManagerRootChildrenChange_.bind(this)\n        );\n      });\n    });\n  }\n\n  /**\n   * Called when the list of tree controllers within the tree manager\n   * root controller changes. In other words, this method is called\n   * after nodes are being added added or removed from the tree,\n   * i.e. from the child nodes collection.\n   *\n   * A timeout is required  because the collection event is fired before\n   * the leaf nodes are created and they are the ones we're looking for here.\n   *\n   * This method handles the registration/unregistration of tree nodes that\n   * are added or removed, pushing it to the cache or removing it from the\n   * cache.\n   *\n   * @param {Array.<ngeo.layertree.Controller>|undefined} value List of tree\n   *     controllers.\n   * @private\n   */\n  handleTreeManagerRootChildrenChange_(value) {\n\n    this.timeout_(() => {\n\n      // (1) No need to do anything if the value is not set\n      if (!value) {\n        return;\n      }\n\n      // (2) Collect 'leaf' treeCtrls\n      const newTreeCtrls = [];\n      const visitor = (treeCtrls, treeCtrl) => {\n        const node = /** @type {!gmfThemes.GmfGroup|!gmfThemes.GmfLayer} */ (\n          treeCtrl.node);\n        const children = node.children;\n        if (!children) {\n          treeCtrls.push(treeCtrl);\n        }\n      };\n      for (let i = 0, ii = value.length; i < ii; i++) {\n        value[i].traverseDepthFirst(visitor.bind(this, newTreeCtrls));\n      }\n\n      // (3) Add new 'treeCtrls'\n      for (let i = 0, ii = newTreeCtrls.length; i < ii; i++) {\n        const newTreeCtrl = newTreeCtrls[i];\n        const cacheItem = this.getTreeCtrlCacheItem_(newTreeCtrl);\n        if (!cacheItem) {\n          this.addTreeCtrlToCache_(newTreeCtrl);\n        }\n      }\n\n      // (4) Remove treeCtrls that are no longer in the newTreeCtrl\n      const cache = this.treeCtrlCache_;\n      for (const id in this.treeCtrlCache_) {\n        const item = cache[id];\n        if (!newTreeCtrls.includes(item.treeCtrl)) {\n          this.removeTreeCtrlCacheItem_(item);\n        }\n      }\n    });\n  }\n\n  /**\n   * Remove the data sources from the ngeo collection that are in the cache,\n   * i.e. those created by this service, then clear the cache.\n   * @private\n   */\n  clearDataSources_() {\n\n    // (1) Remove data sources from ngeo collection\n    const dataSources = this.dataSources_.getArray();\n    for (let i = dataSources.length - 1, ii = 0; i >= ii; i--) {\n      if (this.dataSourcesCache_[dataSources[i].id]) {\n        // Use the `remove` method of the `ol.Collection` object for it\n        // to update its length accordingly and trigger the REMOVE event as\n        // well.\n        this.dataSources_.remove(dataSources[i]);\n      }\n    }\n\n    // (2) Clear the cache\n    olObj.clear(this.dataSourcesCache_);\n  }\n\n  /**\n   * Create a data source using the information on the node, group node\n   * and OGC servers. If the node has children, then we loop in those to get\n   * leaf nodes. Only leaf nodes end up creating a data source. If a data\n   * source with the same id already exists, then the node is skipped.\n   *\n   * Once a data source is created, it is added to the data sources cache.\n   *\n   * @param {gmfThemes.GmfGroup} firstLevelGroup The first level group node.\n   * @param {!gmfThemes.GmfGroup|!gmfThemes.GmfLayer} node The node, which\n   *     may have children or not.\n   * @param {!gmfThemes.GmfOgcServers} ogcServers OGC servers.\n   * @private\n   */\n  createDataSource_(firstLevelGroup, node, ogcServers) {\n\n    const children = node.children;\n\n    // (1) Group node (node that has children). Loop in the children\n    //     individually and create a data source for each one of them. The\n    //     group node itself is **skipped**.\n    if (children) {\n      for (const child of children) {\n        googAsserts.assert(child);\n        this.createDataSource_(firstLevelGroup, child, ogcServers);\n      }\n      return;\n    }\n\n    // From there on, the node is a layer node.\n    const gmfLayer = /** @type gmfThemes.GmfLayer */ (node);\n\n    // (2) Skip layer node if a data source with the same id exists\n    const id = olBase.getUid(gmfLayer);\n    if (this.dataSourcesCache_[id]) {\n      return;\n    }\n\n    // From there on, a data source will be created\n    const meta = gmfLayer.metadata;\n    const ogcType = gmfLayer.type;\n    let maxResolution;\n    let minResolution;\n    let ogcLayers;\n    let ogcServer;\n    let wmtsLayer;\n    let wmtsUrl;\n    let ogcImageType;\n    let timeProperty;\n\n    if (ogcType === gmfThemeThemes.NodeType.WMTS) {\n      // (3) Manage WMTS\n      const gmfLayerWMTS = /** @type {gmfThemes.GmfLayerWMTS} */ (gmfLayer);\n\n      // Common options for WMTS\n      wmtsLayer = gmfLayerWMTS.layer;\n      wmtsUrl = gmfLayerWMTS.url;\n      maxResolution = meta.maxResolution;\n      minResolution = meta.minResolution;\n\n      // OGC Layers\n      const layers = meta.queryLayers || meta.wmsLayers;\n      if (layers) {\n        ogcLayers = layers.split(',').map((layer) => {\n          return {\n            maxResolution: maxResolution,\n            minResolution: minResolution,\n            name: layer,\n            queryable: true\n          };\n        });\n      }\n\n      // OGC Server\n      if (meta.ogcServer && ogcServers[meta.ogcServer]) {\n        ogcServer = ogcServers[meta.ogcServer];\n      }\n      ogcImageType = gmfLayerWMTS.imageType;\n    } else if (ogcType === gmfThemeThemes.NodeType.WMS) {\n      // (4) Manage WMS\n      const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n      // Common options for WMS\n      maxResolution = gmfLayerWMS.maxResolutionHint;\n      minResolution = gmfLayerWMS.minResolutionHint;\n\n      // OGC Layers\n      ogcLayers = gmfLayerWMS.childLayers.map((childLayer) => {\n        return {\n          maxResolution: childLayer.maxResolutionHint,\n          minResolution: childLayer.minResolutionHint,\n          name: childLayer.name,\n          queryable: childLayer.queryable\n        };\n      });\n\n      // OGC Server\n      const ogcServerName = (!firstLevelGroup || firstLevelGroup.mixed) ?\n        gmfLayerWMS.ogcServer : firstLevelGroup.ogcServer;\n      googAsserts.assert(ogcServerName);\n      ogcServer = ogcServers[ogcServerName];\n      ogcImageType = ogcServer.imageType;\n\n      // Time property\n      if (gmfLayerWMS.time) {\n        timeProperty = gmfLayerWMS.time;\n      } else if (firstLevelGroup && firstLevelGroup.time) {\n        timeProperty = firstLevelGroup.time;\n      }\n    }\n\n    // (5) ogcServer\n    const ogcServerType = ogcServer ? ogcServer.type : undefined;\n    const wmsIsSingleTile = ogcServer ? ogcServer.isSingleTile : undefined;\n    const wfsUrl = ogcServer && ogcServer.wfsSupport ?\n      ogcServer.urlWfs : undefined;\n    const wmsUrl = ogcServer ? ogcServer.url : undefined;\n\n    let wfsOutputFormat = ngeoDatasourceOGC.WFSOutputFormat.GML3;\n    // qgis server only supports GML2 output\n    if (ogcServerType === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      wfsOutputFormat = ngeoDatasourceOGC.WFSOutputFormat.GML2;\n    }\n\n    // (6) Snapping\n    const snappable = !!meta.snappingConfig;\n    const snappingTolerance = meta.snappingConfig ?\n      meta.snappingConfig.tolerance : undefined;\n    const snappingToEdges = meta.snappingConfig ?\n      meta.snappingConfig.edge : undefined;\n    const snappingToVertice = meta.snappingConfig ?\n      meta.snappingConfig.vertex : undefined;\n\n    // (7) Dimensions\n    const dimensions = this.dimensions_;\n    const dimensionsConfig = node.dimensions || firstLevelGroup.dimensions;\n\n    // (8) Time values (lower or lower/upper)\n    let timeLowerValue;\n    let timeUpperValue;\n    if (timeProperty) {\n      const timeValues = this.ngeoWMSTime_.getOptions(timeProperty)['values'];\n      if (Array.isArray(timeValues)) {\n        timeLowerValue = timeValues[0];\n        timeUpperValue = timeValues[1];\n      } else {\n        timeLowerValue = timeValues;\n      }\n    }\n\n    // (9) Common options\n    const copyable = meta.copyable;\n    const identifierAttribute = meta.identifierAttributeField;\n    const name = gmfLayer.name;\n    const timeAttributeName = meta.timeAttribute;\n    const visible = meta.isChecked === true;\n\n    // Create the data source and add it to the cache\n    this.dataSourcesCache_[id] = new gmfDatasourceOGC({\n      copyable,\n      dimensions,\n      dimensionsConfig,\n      gmfLayer,\n      id,\n      identifierAttribute,\n      maxResolution,\n      minResolution,\n      name,\n      ogcImageType,\n      ogcLayers,\n      ogcServerType,\n      ogcType,\n      snappable,\n      snappingTolerance,\n      snappingToEdges,\n      snappingToVertice,\n      timeAttributeName,\n      timeLowerValue,\n      timeProperty,\n      timeUpperValue,\n      visible,\n      wfsOutputFormat,\n      wfsUrl,\n      wmsIsSingleTile,\n      wmsUrl,\n      wmtsLayer,\n      wmtsUrl\n    });\n  }\n\n  /**\n   * If the given Layertree controller is a 'leaf', add it to the cache.\n   * Also, set its according data source. Finally, add the data source to\n   * the ngeo collection.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to add\n   * @private\n   */\n  addTreeCtrlToCache_(treeCtrl) {\n\n    const id = olBase.getUid(treeCtrl.node);\n    const dataSource = this.dataSourcesCache_[id];\n    googAsserts.assert(dataSource, 'DataSource should be set');\n    treeCtrl.setDataSource(dataSource);\n\n    const stateWatcherUnregister = this.rootScope_.$watch(\n      () => treeCtrl.getState(),\n      this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n    );\n\n    const filterRulesWatcherUnregister = this.rootScope_.$watch(\n      () => {\n        const hasFilters = dataSource.filterRules !== null;\n        const isVisible = dataSource.visible;\n        return hasFilters && isVisible;\n      },\n      this.handleDataSourceFilterRulesChange_.bind(this, dataSource)\n    );\n\n    // Watch for time values change to update the WMS layer\n    let timeLowerValueWatcherUnregister;\n    let timeUpperValueWatcherUnregister;\n    let wmsLayer;\n    if (dataSource.timeProperty &&\n        dataSource.ogcType === ngeoDatasourceOGC.Type.WMS\n    ) {\n      timeLowerValueWatcherUnregister = this.rootScope_.$watch(\n        () => dataSource.timeLowerValue,\n        this.handleDataSourceTimeValueChange_.bind(this, dataSource)\n      );\n\n      if (dataSource.timeProperty.mode === 'range') {\n        timeUpperValueWatcherUnregister = this.rootScope_.$watch(\n          () => dataSource.timeUpperValue,\n          this.handleDataSourceTimeValueChange_.bind(this, dataSource)\n        );\n      }\n\n      wmsLayer = googAsserts.assertInstanceof(\n        gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl),\n        olLayerImage\n      );\n    }\n\n    this.treeCtrlCache_[id] = {\n      filterRulesWatcherUnregister,\n      stateWatcherUnregister,\n      timeLowerValueWatcherUnregister,\n      timeUpperValueWatcherUnregister,\n      treeCtrl,\n      wmsLayer\n    };\n\n    this.dataSources_.push(dataSource);\n\n    this.gmfWFSAliases_.describe(dataSource);\n  }\n\n  /**\n   * Remove a treeCtrl cache item. Unregister event listeners and remove the\n   * data source from the ngeo collection.\n   *\n   * @param {gmfx.datasource.ManagerTreeCtrlCacheItem} item Layertree\n   *     controller cache item\n   * @private\n   */\n  removeTreeCtrlCacheItem_(item) {\n\n    // (1) Remove data source\n    const dataSource = item.treeCtrl.getDataSource();\n    googAsserts.assert(dataSource, 'DataSource should be set');\n    this.dataSources_.remove(dataSource);\n\n    // (2) Remove item and clear event listeners\n    item.treeCtrl.setDataSource(null);\n    item.filterRulesWatcherUnregister();\n    item.stateWatcherUnregister();\n    if (item.timeLowerValueWatcherUnregister) {\n      item.timeLowerValueWatcherUnregister();\n    }\n    if (item.timeUpperValueWatcherUnregister) {\n      item.timeUpperValueWatcherUnregister();\n    }\n    delete this.treeCtrlCache_[olBase.getUid(item.treeCtrl.node)];\n  }\n\n  /**\n   * Clears the layer tree controller cache. At the same time, each item gets\n   * its data source reference unset and state watcher unregistered.\n   *\n   * The data source gets also removed from the ngeo data sources collection.\n   * @private\n   */\n  clearTreeCtrlCache_() {\n    for (const id in this.treeCtrlCache_) {\n      this.removeTreeCtrlCacheItem_(this.treeCtrlCache_[id]);\n    }\n  }\n\n  /**\n   * Called when the state of a 'leaf' layertree controller changes.\n   * Update the `visible` property of the data source according to the\n   * state of the layertree controller.\n   *\n   * Note: The possible states can only be 'on' or 'off', because the\n   * layertree controller being a 'leaf'.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n   * @param {string|undefined} newVal New state value\n   * @private\n   */\n  handleTreeCtrlStateChange_(treeCtrl, newVal) {\n    const treeDataSource = treeCtrl.getDataSource();\n    googAsserts.assert(treeDataSource, 'DataSource should be set');\n    const visible = newVal === 'on';\n    treeDataSource.visible = visible;\n\n    // In GMF, multiple data sources can be combined into one ol.layer.Layer\n    // object. When changing the state of a data source, we need to make\n    // sure that the FILTER param match order of the current LAYERS param.\n    //\n    // Note: we only need to do this ONCE, as there can be only one\n    // data source being filtered at a time\n    const siblingDataSourceIds = gmfLayertreeSyncLayertreeMap.getLayer(\n      treeCtrl).get('querySourceIds');\n    if (Array.isArray(siblingDataSourceIds)) {\n      const dataSources = this.dataSources_.getArray();\n      for (const dataSource of dataSources) {\n        if (dataSource instanceof gmfDatasourceOGC &&\n            dataSource.filterRules !== null &&\n            dataSource.id !== treeDataSource.id &&\n            siblingDataSourceIds.includes(dataSource.id) &&\n            dataSource.visible\n        ) {\n          this.handleDataSourceFilterRulesChange_(dataSource, true);\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Returns a layertree controller cache item, if it exists.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n   * @return {gmfx.datasource.ManagerTreeCtrlCacheItem} Cache item\n   * @private\n   */\n  getTreeCtrlCacheItem_(treeCtrl) {\n    return this.treeCtrlCache_[olBase.getUid(treeCtrl.node)] || null;\n  }\n\n  /**\n   * Called when both the 'visible' and 'filterRules' properties of a data\n   * source change.\n   *\n   * If the data source is filtrable, then make sure that when it gets rules\n   * set to apply them as OGC filters to the OpenLayers layer, more precisely\n   * as a `FILTER` parameter in the layer's source parameters.\n   *\n   * @param {!gmf.datasource.OGC} dataSource Data source.\n   * @param {boolean} value Value.\n   * @private\n   */\n  handleDataSourceFilterRulesChange_(dataSource, value) {\n\n    // Skip data sources that are not filtrables OR those that do not have\n    // the WMS ogcType, i.e. those that do not have an OpenLayers layer\n    // to update\n    if (dataSource.filtrable !== true ||\n        dataSource.ogcType !== ngeoDatasourceOGC.Type.WMS\n    ) {\n      return;\n    }\n\n    const id = olBase.getUid(dataSource.gmfLayer);\n    const item = this.treeCtrlCache_[id];\n    googAsserts.assert(item);\n    const treeCtrl = item.treeCtrl;\n\n    const layer = gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl);\n    googAsserts.assert(\n      layer instanceof olLayerImage ||\n      layer instanceof olLayerTile\n    );\n\n    const source = layer.getSource();\n    googAsserts.assert(\n      source instanceof olSourceImageWMS ||\n      source instanceof olSourceTileWMS\n    );\n\n    const filtrableLayerName = dataSource.getFiltrableOGCLayerName();\n    const projCode = treeCtrl.map.getView().getProjection().getCode();\n    const filterString = dataSource.visible ?\n      this.ngeoRuleHelper_.createFilterString({\n        dataSource,\n        projCode\n      }) :\n      null;\n\n    const filterParam = 'FILTER';\n    let filterParamValue = null;\n\n    if (filterString) {\n      const params = source.getParams();\n      const layersParam = params['LAYERS'];\n      const layersList = layersParam.split(',');\n      googAsserts.assert(layersList.length >= 1);\n\n      if (layersList.length === 1) {\n        // When there's only one layer in the `LAYERS` parameters, then\n        // the filter string is given as-is.\n        filterParamValue = filterString;\n      } else {\n        // When there's more then one layer, then each filter must be wrapped\n        // between parenthesis and the order must also match the `LAYERS`\n        // parameter as well.\n        const filterParamValues = [];\n        for (let i = 0, ii = layersList.length; i < ii; i++) {\n          if (layersList[i] === filtrableLayerName) {\n            filterParamValues.push(`(${filterString})`);\n          } else {\n            filterParamValues.push('()');\n          }\n        }\n        filterParamValue = filterParamValues.join('');\n      }\n    }\n\n    source.updateParams({\n      [filterParam]: filterParamValue\n    });\n  }\n\n  /**\n   * Called when either the `timeLowerValue` or `timeUpperValue` property of a\n   * data source changes.\n   *\n   * Get the range value from the data source, then update the WMS layer\n   * thereafter.\n   *\n   * @param {!gmf.datasource.OGC} dataSource Data source.\n   * @private\n   */\n  handleDataSourceTimeValueChange_(dataSource) {\n\n    const id = olBase.getUid(dataSource.gmfLayer);\n    const item = this.treeCtrlCache_[id];\n    googAsserts.assert(item);\n    const wmsLayer = googAsserts.assert(item.wmsLayer);\n    const wmsSource = googAsserts.assertInstanceof(\n      wmsLayer.getSource(),\n      olSourceImageWMS\n    );\n\n    const timeProperty = googAsserts.assert(dataSource.timeProperty);\n    let timeParam;\n    const range = dataSource.timeRangeValue;\n    if (range) {\n      timeParam = this.ngeoWMSTime_.formatWMSTimeParam(timeProperty, range);\n    }\n\n    // No need to update the TIME param if already the same value;\n    const params = wmsSource.getParams();\n    const currentTimeParam = params['TIME'];\n    if (currentTimeParam === timeParam) {\n      return;\n    }\n\n    // The `timeParam` can be undefined, which means that the TIME property\n    // gets reset.\n    this.ngeoLayerHelper_.updateWMSLayerState(\n      wmsLayer,\n      wmsSource.getParams()['LAYERS'],\n      timeParam\n    );\n  }\n\n  /**\n   * Called when the background layer changes. Add/Remove the according data\n   * sources to/from the ngeo data sources collection. Update the data source\n   * `visible` property as well.\n   *\n   * The `querySourceIds` property in the layer is used to determine the\n   * data sources that are bound to the layer.\n   *\n   * @param {!ngeox.BackgroundEvent} evt Event.\n   * @private\n   */\n  handleNgeoBackgroundLayerChange_(evt) {\n\n    const previousBackgroundLayer = evt.detail.previous;\n    const currentBackgroundLayer = evt.detail.current;\n    const cache = this.dataSourcesCache_;\n\n    // Remove data sources linked to previous background layer\n    if (previousBackgroundLayer) {\n      const ids = previousBackgroundLayer.get('querySourceIds');\n      if (Array.isArray(ids)) {\n        for (const id of ids) {\n          const dataSource = cache[id];\n          if (dataSource) {\n            dataSource.visible = false;\n            this.dataSources_.remove(dataSource);\n          }\n        }\n      }\n    }\n\n    // Add data sources linked to current background layer\n    if (currentBackgroundLayer) {\n      const ids = currentBackgroundLayer.get('querySourceIds');\n      if (Array.isArray(ids)) {\n        for (const id of ids) {\n          const dataSource = cache[id];\n          if (dataSource) {\n            dataSource.visible = true;\n            this.dataSources_.push(dataSource);\n          }\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourcesManager', [\n  gmfDatasourceWFSAliases.module.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoDatasourceDataSources.module.name,\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfDataSourcesManager', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.module\n */\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfDatasourceHelper from 'gmf/datasource/Helper.js';\nimport gmfDatasourceManager from 'gmf/datasource/Manager.js';\nimport gmfDatasourceWFSAliases from 'gmf/datasource/WFSAliases.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDatasourceModule', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfDatasourceHelper.module.name,\n  gmfDatasourceManager.module.name,\n  gmfDatasourceWFSAliases.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.popupComponent\n */\n\nimport 'angular-sanitize';\n\n\nconst exports = angular.module('ngeoPopup', [\n  'ngSanitize',\n]);\n\n\nexports.value('ngeoPopupTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoPopupTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/message/popupcomponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/message/popupcomponent', require('./popupcomponent.html'));\n});\n\n\n/**\n * Provides a directive used to show a popup over the page with\n * a title and content.\n *\n *\n * Things to know about this directive:\n *\n * - This directive is intended to be used along with the popup service.\n *\n * - By default the directive uses \"popup.html\" as its templateUrl. This can be\n *   changed by redefining the \"ngeoPopupTemplateUrl\" value.\n *\n * - The directive doesn't create any scope but relies on its parent scope.\n *   Properties like 'content', 'title' or 'open' come from the parent scope.\n *\n * @private\n * @param {string} ngeoPopupTemplateUrl URL to popup template.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoPopup\n */\nexports.directive_ = function(ngeoPopupTemplateUrl) {\n  return {\n    restrict: 'A',\n    templateUrl: ngeoPopupTemplateUrl,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      element.addClass('popover');\n\n      /**\n       * @param {jQuery.Event} evt Event.\n       */\n      scope.close = function(evt) {\n        if (evt) {\n          evt.stopPropagation();\n          evt.preventDefault();\n        }\n        element.addClass('hidden');\n      };\n\n      // Watch the open property\n      scope.$watch('open', (newVal, oldVal) => {\n        element.css('display', newVal ? 'block' : 'none');\n      });\n    }\n  };\n};\n\nexports.directive('ngeoPopup', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Popup\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * This goog.require is needed because of 'ngeo-popup' used in\n * the template.\n * @suppress {extraRequire}\n */\nimport ngeoMessagePopupComponent from 'ngeo/message/popupComponent.js';\n\n/**\n * Provides a factory to create a popup in the page.\n * The factory returns a ngeo.message.Popup object.\n *\n * Example:\n *\n *     let popup = ngeoCreatePopup();\n *     popup.setTitle(\"A title\");\n *     popup.setContent(\"Some content\");\n *     popup.setOpen(true);\n *\n * @constructor\n * @struct\n * @param {angular.$compile} $compile The compile provider.\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoCreatePopup\n */\nconst exports = function($compile, $rootScope, $sce, $timeout) {\n\n  /**\n   * The scope the compiled element is link to.\n   * @type {angular.Scope}\n   * @export\n   */\n  this.scope = $rootScope.$new(true);\n\n  // manage the auto destruction of the popup\n  this.scope.$watch(\n    () => this.scope['open'],\n    (open) => {\n      if (!open && this.autoDestroy_) {\n        this.timeout_(() => {\n          this.destroy();\n        });\n      }\n    }\n  );\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * The element.\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = angular.element('<div ngeo-popup></div>');\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoDestroy_ = false;\n\n\n  // Compile the element, link it to the scope and add it to the document.\n  $compile(this.element_)(this.scope);\n  angular.element(document.body).append(this.element_);\n};\n\n\n/**\n * Get the current popup state.\n * @return {boolean} `true` if the popup is currently, otherwise `false`.\n * @export\n */\nexports.prototype.getOpen = function() {\n  return this.scope['open'];\n};\n\n\n/**\n * Show/hide the popup.\n * @param {boolean} open `true` to show the popup, `false` to hide it.\n * @export\n */\nexports.prototype.setOpen = function(open) {\n  this.scope['open'] = open;\n};\n\n\n/**\n * Destroy the popup.\n * @export\n */\nexports.prototype.destroy = function() {\n  this.scope.$destroy();\n  this.element_.remove();\n};\n\n\n/**\n * Set the popup's title.\n * @param {string} title The title.\n * @export\n */\nexports.prototype.setTitle = function(title) {\n  const trustedTitle = this.sce_.trustAsHtml(title);\n  this.scope['title'] = trustedTitle;\n};\n\n\n/**\n * Set the popup's content.\n * Note: the type of the `content` param is `*` instead of `string`, this\n * is because the content may be trusted using `$sce.trustAsHtml`.\n * @param {*} content The content.\n * @param {boolean=} opt_trusted Whether the content can be trusted.\n *     Default is false.\n * @export\n */\nexports.prototype.setContent = function(content, opt_trusted) {\n  this.scope['content'] = opt_trusted ? this.sce_.trustAsHtml(/** @type {string} */ (content)) : content;\n};\n\n\n/**\n * Set the popup's content with an iframe using the given url.\n * @param {string} url The url of the page.\n * @export\n */\nexports.prototype.setUrl = function(url) {\n  const content = this.sce_.trustAsHtml(\n    `<iframe src=\"${url}\" width=\"100%\" height=\"100%\"></iframe>`\n  );\n  this.setContent(content);\n};\n\n\n/**\n * Set the popup's width.\n * @param {string} width Width the popup should have.\n * @export\n */\nexports.prototype.setWidth = function(width) {\n  this.element_.width(width);\n};\n\n\n/**\n * Set the popup's height.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setHeight = function(height) {\n  this.element_.height(height);\n};\n\n\n/**\n * Set the popup's width and height.\n * @param {string} width Width the popup should have.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setSize = function(width, height) {\n  this.setWidth(width);\n  this.setHeight(height);\n};\n\n\n/**\n * Set the popup's autoDestroy property.\n * @param {boolean} autoDestroy Whether to automatically destroy the popup when\n *     being closed or not.\n * @export\n */\nexports.prototype.setAutoDestroy = function(autoDestroy) {\n  this.autoDestroy_ = autoDestroy;\n};\n\n\n/**\n * Add an extra CSS class name to the popup.\n * @param {string} cls Class name to add to the popup element.\n * @export\n */\nexports.prototype.addClass = function(cls) {\n  this.element_.addClass(cls);\n};\n\n\n/**\n * Open a popup with the given properties.\n * @param {ngeox.PopupOptions} options Options.\n * @export\n */\nexports.prototype.open = function(options) {\n\n  if (options.url) {\n    this.setUrl(options.url);\n  } else if (options.content) {\n    this.setContent(options.content);\n  } else {\n    googAsserts.fail('ngeo.message.Popup options requirest \"url\" or \"content\".');\n  }\n\n  if (options.autoDestroy !== undefined) {\n    this.setAutoDestroy(options.autoDestroy);\n  }\n\n  if (options.cls !== undefined) {\n    this.addClass(options.cls);\n  }\n\n  if (options.height !== undefined) {\n    this.setHeight(options.height);\n  }\n\n  if (options.title !== undefined) {\n    this.setTitle(options.title);\n  }\n\n  if (options.width !== undefined) {\n    this.setWidth(options.width);\n  }\n\n  this.setOpen(true);\n};\n\n\n/**\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.Scope} $rootScope Angular rootScope service.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.PopupFactory} The function to create a popup.\n * @ngInject\n */\nexports.Factory = function($compile, $rootScope, $sce, $timeout) {\n  return (\n    /**\n     * @return {!ngeo.message.Popup} The popup instance.\n     */\n    function() {\n      return new exports($compile, $rootScope, $sce, $timeout);\n    }\n  );\n};\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoCreatePopup', [\n  ngeoMessagePopupComponent.name,\n]);\nexports.module.factory('ngeoCreatePopup', exports.Factory);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Disclaimer\n */\nimport 'bootstrap/js/alert.js';\nimport googAsserts from 'goog/asserts.js';\n\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * Provides methods to display any sort of messages, disclaimers, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @ngdoc service\n * @ngname ngeoDisclaimer\n * @ngInject\n */\nconst exports = function($sce, gettextCatalog, ngeoCreatePopup) {\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @private\n   * @type {ngeox.PopupFactory}\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  ngeoMessageMessage.call(this);\n\n  const container = angular.element('<div class=\"ngeo-disclaimer\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * Cache of messages.\n   * @type {Object.<string, angular.JQLite|ngeo.message.Popup>}\n   * @private\n   */\n  this.messages_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Show disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.alert = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Close disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.close = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.closeMessage_, this);\n};\n\n\n/**\n * Show the message.\n * @param {ngeox.Message} message Message.\n * @protected\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const gettextCatalog = this.gettextCatalog_;\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  // No need to do anything if message already exist.\n  const uid = this.getMessageUid_(message);\n  if (this.messages_[uid] !== undefined) {\n    return;\n  }\n\n  const showInPopup = message.popup === true;\n\n  if (showInPopup) {\n    // display the message in a popup, i.e. using the ngeo create popup\n    const popup = this.createPopup_();\n    const content = this.sce_.trustAsHtml(message.msg);\n    popup.open({\n      autoDestroy: true,\n      content: content,\n      title: '&nbsp;'\n    });\n\n    // Watch the open property\n    popup.scope.$watch('open', (newVal, oldVal) => {\n      if (!newVal) {\n        this.closeMessage_(message);\n      }\n    });\n\n    this.messages_[uid] =  popup;\n\n  } else {\n    // display the message using a boostrap dismissible alert\n    const classNames = ['alert', 'fade', 'alert-dismissible'];\n    switch (type) {\n      case ngeoMessageMessage.Type.ERROR:\n        classNames.push('alert-danger');\n        break;\n      case ngeoMessageMessage.Type.INFORMATION:\n        classNames.push('alert-info');\n        break;\n      case ngeoMessageMessage.Type.SUCCESS:\n        classNames.push('alert-success');\n        break;\n      case ngeoMessageMessage.Type.WARNING:\n        classNames.push('alert-warning');\n        break;\n      default:\n        break;\n    }\n\n    const el = angular.element(\n      `<div role=\"alert\" class=\"${classNames.join(' ')}\"></div>`);\n    const button = angular.element(\n      `<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"${\n        gettextCatalog.getString('Close')\n      }\"><span aria-hidden=\"true\" class=\"fa fa-times\"></span></button>`);\n    const msg = angular.element('<span />').html(message.msg);\n    el.append(button).append(msg);\n\n    let container;\n\n    if (message.target) {\n      container = angular.element(message.target);\n    } else {\n      container = this.container_;\n    }\n\n    container.append(el);\n    el.addClass('in');\n\n    // Listen when the message gets closed to cleanup the cache of messages\n    el.on('closed.bs.alert', () => {\n      this.closeMessage_(message);\n    });\n\n    this.messages_[uid] =  el;\n  }\n};\n\n\n/**\n * @param {ngeox.Message} message Message.\n * @return {string} The uid.\n * @private\n */\nexports.prototype.getMessageUid_ = function(message) {\n  return `${message.msg}-${message.type}`;\n};\n\n\n/**\n * Close the message.\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.closeMessage_ = function(message) {\n  const uid = this.getMessageUid_(message);\n  const obj = this.messages_[uid];\n\n  // (1) No need to do anything if message doesn't exist\n  if (obj === undefined) {\n    return;\n  }\n\n  // (2) Close message (popup or alert)\n  if (obj instanceof ngeoMessagePopup) {\n    // (2.1) Close popup, if not already closed\n    if (obj.getOpen()) {\n      obj.setOpen(false);\n    }\n  } else {\n    // (2.2) Check if the message hasn't been closed using the UI, i.e. by\n    //       clicking the close button. If not, then close it.\n    if (obj.hasClass('in')) {\n      obj.alert('close');\n    }\n  }\n\n  // (3) Remove message from cache since it's closed now.\n  delete this.messages_[uid];\n};\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoDisclaimer', [\n  ngeoMessagePopup.module.name,\n]);\n\nexports.module.service('ngeoDisclaimer', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.disclaimer.component\n */\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageDisclaimer from 'ngeo/message/Disclaimer.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\n\nimport 'angular-sanitize';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfDisclaimer', [\n  'ngSanitize',\n  ngeoMapLayerHelper.module.name,\n  ngeoMessageDisclaimer.module.name,\n  ngeoMiscEventHelper.module.name,\n]);\n\n\n/**\n * @constructor\n * @private\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$sce} $sce Angular sce service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @param {!ngeo.message.Disclaimer} ngeoDisclaimer Ngeo Disclaimer service.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo Event Helper.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisclaimerController\n */\nexports.Controller_ = function($element, $scope, $sce, $timeout,\n  gettextCatalog, ngeoCreatePopup, ngeoDisclaimer, ngeoEventHelper, ngeoLayerHelper) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.external;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.popup;\n\n  /**\n   * Visibility that is set to true when a new msg is there.\n   * @type {boolean}\n   * @export\n   */\n  this.visibility = false;\n\n  /**\n   * Trusted html messages that can be displayed as html.\n   * @type {string|undefined}\n   * @export\n   */\n  this.msg;\n\n  /**\n   * @type {!Array<string>}\n   * @export\n   */\n  this.msgs_ = [];\n\n  /**\n   * @type {!angular.$sce}\n   * @private\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {!ngeox.PopupFactory}\n   * @private\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  /**\n   * @type {!ngeo.message.Disclaimer}\n   * @private\n   */\n  this.disclaimer_ = ngeoDisclaimer;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.eventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.dataLayerGroup_ = this.ngeoLayerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n  this.registerLayer_(this.dataLayerGroup_);\n};\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersAdd_ = function(evt) {\n  this.timeout_(() => {\n    const layer = evt.element;\n    googAsserts.assertInstanceof(layer, olLayerBase);\n    this.registerLayer_(layer);\n  });\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersRemove_ = function(evt) {\n  const layer = evt.element;\n  googAsserts.assertInstanceof(layer, olLayerBase);\n  this.unregisterLayer_(layer);\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.registerLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Listen to added/removed layers to this group\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'add',\n        this.handleLayersAdd_,\n        this\n      )\n    );\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'remove',\n        this.handleLayersRemove_,\n        this\n      )\n    );\n\n    // (2) Register existing layers in the group\n    layer.getLayers().forEach((layer) => {\n      this.registerLayer_(layer);\n    });\n\n  } else {\n\n    // Show disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach((disclaimer) => {\n        this.showDisclaimerMessage_(disclaimer);\n      });\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.unregisterLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Clear event listeners\n    this.eventHelper_.clearListenerKey(layerUid);\n\n    // (2) Unregister existing layers in the group\n    layer.getLayers().forEach(layer => this.unregisterLayer_(layer));\n\n  } else {\n\n    // Close disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach((disclaimer) => {\n        this.closeDisclaimerMessage_(disclaimer);\n      });\n    }\n  }\n\n};\n\n\nexports.Controller_.prototype.$onDestroy = function() {\n  this.unregisterLayer_(this.dataLayerGroup_);\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.showDisclaimerMessage_ = function(msg) {\n  msg = this.gettextCatalog_.getString(msg);\n  if (this.external) {\n    if (this.msgs_.indexOf(msg) < 0) {\n      this.msgs_.push(msg);\n    }\n    this.msg = `${this.sce_.trustAsHtml(this.msgs_.join('<br />'))}`;\n    this.visibility = true;\n  } else {\n    this.disclaimer_.alert({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.closeDisclaimerMessage_ = function(msg) {\n  msg = this.gettextCatalog_.getString(msg);\n  if (this.external) {\n    this.visibility = false;\n    this.msgs_.length = 0;\n    this.msg = '';\n  } else {\n    this.disclaimer_.close({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * Provide a \"disclaimer\" component for GeoMapFish that is bound to the\n * layers added and removed from a map.\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\">\n *      </gmf-disclaimer>\n *\n * You can also display the disclaimer messages in popups or use them in another\n * context. The example below show you how to display the disclaimer messages\n * in a ngeo-modal window (external case).\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\"\n *        gmf-disclaimer-external=\"::true\"\n *        gmf-disclaimer-external-msg=\"disclaimerMsg\"\n *        gmf-disclaimer-external-visibility=\"disclaimerVisibility\">\n *      </gmf-disclaimer>\n *      <ngeo-modal ng-model=\"disclaimerVisibility\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *       </div>\n *       <div class=\"modal-body\">\n *         <div ng-bind-html=\"disclaimerMsg\"></div>\n *       </div>\n *     </ngeo-modal>\n *\n * @htmlAttribute {boolean} gmf-disclaimer-popup Whether to show the disclaimer\n *     messages in popups or not. Defaults to `false`.\n * @htmlAttribute {boolean?} gmf-disclaimer-external Whether to use disclaimer\n *     messages elsewhere or not. Default to `false`. If true, you should use\n *     the gmf-disclaimer-external-msg and the\n *     gmf-disclaimer-external-visibility too.\n * @htmlAttribute {boolean?} gmf-disclaimer-external-visibility variable that\n *     will be set to true if the disclaimers contain a new message. To uses it,\n *     you must set the gmf-disclaimer-external to true.\n * @htmlAttribute {string?} gmf-disclaimer-external-msg variable that will\n *     contains the disclaimer messages. To uses it, you must set the\n *     gmf-disclaimer-external to true.\n * @htmlAttribute {ol.Map=} gmf-disclaimer-map The map.\n *\n * @ngdoc component\n * @ngname gmfDisclaimer\n */\nexports.component_ = {\n  controller: exports.Controller_,\n  bindings: {\n    'popup': '<?gmfDisclaimerPopup',\n    'map': '=gmfDisclaimerMap',\n    'external': '<?gmfDisclaimerExternal',\n    'visibility': '=?gmfDisclaimerExternalVisibility',\n    'msg': '=?gmfDisclaimerExternalMsg'\n  }\n};\n\n\nexports.component('gmfDisclaimer', exports.component_);\n\n\nexport default exports;\n","/**\n * @module gmf.filters.SavedFilters\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * The GeoMapFish service responsible of storing filters that can be applied\n   * to data sources. A filter consists of:\n   *\n   * - a condition\n   * - a list of directed rules\n   * - a list of custom rules\n   * - a data source\n   * - a name\n   *\n   * The filters are saved in the browser local storage, if available.\n   * Otherwise, they are kept in this service for the duration of the visit.\n   *\n   * @param {!angular.Scope} $rootScope Angular rootScope.\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfSavedFilters\n   */\n  constructor($rootScope) {\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * This service can have a data source id bound to it, which automatically\n     * populates an array of items that are only bound to this data source.\n     * @type {?number}\n     * @private\n     */\n    this.currentDataSourceId_ = null;\n\n    /**\n     * @type {!Array.<!gmf.filters.SavedFilters.Item>}\n     * @private\n     */\n    this.currentDataSourceItems_ = [];\n\n    /**\n     * The used by this service to save in the local storage.\n     * @type {string}\n     * @private\n     */\n    this.localStorageKey_ = 'gmf_savedfilters';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.useLocalStorage_ = true;\n\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n\n    /**\n     * @type {!Array.<!gmf.filters.SavedFilters.Item>}\n     * @private\n     */\n    this.items_ = [];\n\n    this.rootScope_.$watchCollection(\n      () => this.items,\n      () => {\n        this.rePopulateCurrentDataSourceItems_();\n      }\n    );\n\n    if (this.useLocalStorage_) {\n      this.loadItemsFromLocalStorage_();\n    }\n\n  }\n\n  /**\n   * @return {!Array.<!gmf.filters.SavedFilters.Item>} Items\n   * @export\n   */\n  get currentDataSourceItems() {\n    return this.currentDataSourceItems_;\n  }\n\n  /**\n   * @param {?number} id Current data source id.\n   * @export\n   */\n  set currentDataSourceId(id) {\n    this.currentDataSourceId_ = id;\n    this.rePopulateCurrentDataSourceItems_();\n  }\n\n  /**\n   * @return {!Array.<!gmf.filters.SavedFilters.Item>} Items\n   * @export\n   */\n  get items() {\n    return this.items_;\n  }\n\n  /**\n   * Read the filter items that are saved in the local storage and set them\n   * as this service's items.\n   * @private\n   */\n  loadItemsFromLocalStorage_() {\n    if (window.localStorage[this.localStorageKey_]) {\n      const items = JSON.parse(window.localStorage[this.localStorageKey_]);\n      googAsserts.assertArray(items);\n      this.items_ = items;\n    }\n  }\n\n  /**\n   * Search for an item using a given name and data source id. Returns the\n   * index if it exists, otherwise -1 is returned.\n   * @param {string} name Name.\n   * @param {number} id Data source id.\n   * @return {number} The index of the item, if it exists.\n   * @export\n   */\n  indexOfItem(name, id) {\n\n    let item;\n    let idx = -1;\n    for (let i = 0, ii = this.items_.length; i < ii; i++) {\n      item = this.items[i];\n      if (item.dataSourceId === id && item.name === name) {\n        idx = i;\n        break;\n      }\n    }\n\n    return idx;\n  }\n\n  /**\n   * @param {!gmf.filters.SavedFilters.Item} item Item.\n   * @export\n   */\n  save(item) {\n\n    // (1) Add or replace item\n    const idx = this.indexOfItem(item.name, item.dataSourceId);\n    if (idx !== -1) {\n      this.items[idx] = item;\n    } else {\n      this.items.push(item);\n    }\n\n    // (2) Update local storage\n    if (this.useLocalStorage_) {\n      this.saveItemsInLocalStorage_();\n    }\n  }\n\n  /**\n   * @param {!gmf.filters.SavedFilters.Item} item Item.\n   * @export\n   */\n  remove(item) {\n\n    // (1) Remove the item\n    const found = olArray.remove(this.items, item);\n\n    // (2) Update local storage\n    if (found && this.useLocalStorage_) {\n      this.saveItemsInLocalStorage_();\n    }\n  }\n\n  /**\n   * Save all items in the local storage.\n   * @private\n   */\n  saveItemsInLocalStorage_() {\n    window.localStorage[this.localStorageKey_] = JSON.stringify(this.items);\n  }\n\n  /**\n   * @private\n   */\n  rePopulateCurrentDataSourceItems_() {\n    // (1) Clear existing items\n    this.currentDataSourceItems_.length = 0;\n\n    // (2) Populate\n    if (this.currentDataSourceId_ !== null) {\n      for (const item of this.items) {\n        if (item.dataSourceId === this.currentDataSourceId_) {\n          this.currentDataSourceItems_.push(item);\n        }\n      }\n    }\n  }\n\n};\n\n\nexports.module = angular.module('gmfSavedFilters', []);\n\nexports.module.service('gmfSavedFilters', exports);\n\n\n/**\n * The definition of a saved filter item.\n * @constructor\n * @struct\n * @export\n */\nexports.Item = function() {};\n\n\n/**\n * The condition of the saved filter item.\n * @type {string}\n * @export\n */\nexports.Item.prototype.condition;\n\n\n/**\n * The list of custom rules of the saved filter item.\n * @type {!Array.<!ngeox.rule.AnyOptions>}\n * @export\n */\nexports.Item.prototype.customRules;\n\n\n/**\n * The data source id related to the filter.\n * @type {number}\n * @export\n */\nexports.Item.prototype.dataSourceId;\n\n\n/**\n * The list of directed rules of the saved filter item.\n * @type {!Array.<!ngeox.rule.AnyOptions>}\n * @export\n */\nexports.Item.prototype.directedRules;\n\n\n/**\n * A human-readable name given to the saved filter item.\n * @type {string}\n * @export\n */\nexports.Item.prototype.name;\n\n\nexport default exports;\n","/**\n * @module ngeo.query.MapQuerent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport * as olObj from 'ol/obj.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Map Querent is the service bound to a map that issues\n   * queries using the Querent service. The result is stored inside this\n   * service.\n   *\n   * @struct\n   * @param {angular.$injector} $injector Main injector.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     sources helper service.\n   * @param {ngeo.query.Querent} ngeoQuerent The ngeo querent service.\n   * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($injector, ngeoDataSources, ngeoDataSourcesHelper, ngeoQuerent,\n    ngeoQueryResult) {\n\n    const options = /** @type {ngeox.QueryOptions} */ (\n      $injector.has('ngeoQueryOptions') ?\n        $injector.get('ngeoQueryOptions') : {});\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n    /**\n     * @type {ngeox.QueryResult}\n     * @private\n     */\n    this.result_ = ngeoQueryResult;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.limit_ = options.limit !== undefined ? options.limit : 50;\n\n    /**\n     * When set, before making WFS GetFeature requests to fetch features,\n     * WFS GetFeature requests with `resultType = 'hits'` are made first. If\n     * the number of records for the request would exceed the limit, then\n     * no features are returned.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.queryCountFirst_ = options.queryCountFirst !== undefined ?\n      options.queryCountFirst : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.tolerancePx_ = options.tolerance !== undefined ?\n      options.tolerance : 3;\n\n    /**\n     * A hash of data source names classified by ids.\n     * @type {Object.<number, string>}\n     * @private\n     */\n    this.dataSourceNames_ = {};\n  }\n\n  /**\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @export\n   */\n  issue(options) {\n    // (1) Clear previous result\n    this.clear();\n\n    // (2) Get queryable data sources, unless they are already set\n    let queryableDataSources;\n    if (options.dataSources === undefined &&\n        options.queryableDataSources === undefined\n    ) {\n      queryableDataSources = this.ngeoQuerent_.getQueryableDataSources(\n        this.dataSources_.getArray(),\n        options.map\n      );\n    }\n\n    // (3) Update query options, update the pending property and issue the\n    //     request.\n    const limit = options.limit !== undefined ? options.limit : this.limit_;\n    olObj.assign(options, {\n      queryableDataSources: queryableDataSources,\n      limit: limit,\n      tolerancePx: this.tolerancePx_,\n      wfsCount: this.queryCountFirst_\n    });\n    this.result_.pending = true;\n    this.ngeoQuerent_.issue(options).then(this.handleResult_.bind(this));\n  }\n\n  /**\n   * Clear result, i.e. clear all 'result source' from their features and other\n   * information.\n   * @export\n   */\n  clear() {\n    this.result_.total = 0;\n    for (const source of this.result_.sources) {\n      source.features.length = 0;\n      source.pending = false;\n      source.queried = false;\n      source.tooManyResults = false;\n      source.totalFeatureCount = undefined;\n    }\n    this.result_.sources.length = 0; // Clear previous result sources\n    this.result_.pending = false;\n  }\n\n  /**\n   * Called after a request to the querent service. Update the result.\n   *\n   * @param {ngeox.QuerentResult} response Response\n   * @private\n   */\n  handleResult_(response) {\n    let total = 0;\n\n    // (1) Update result sources, i.e. add them\n    for (const idStr in response) {\n      const id = Number(idStr);\n      const dataSource = this.ngeoDataSourcesHelper_.getDataSource(id);\n      let label = dataSource.name;\n      googAsserts.assert(dataSource);\n\n      const querentResultItem = response[id];\n      const features = querentResultItem.features;\n      const limit = querentResultItem.limit;\n      const tooManyResults = querentResultItem.tooManyFeatures === true;\n      const totalFeatureCount = querentResultItem.totalFeatureCount;\n\n      const typeSeparatedFeatures = {};\n      features.forEach((feature) => {\n        const type = googAsserts.assertString(feature.get('ngeo_feature_type_'));\n        if (!typeSeparatedFeatures[type]) {\n          typeSeparatedFeatures[type] = [];\n        }\n        // Use properties aliases if any\n        if (dataSource.attributes && dataSource.attributes.length) {\n          const properties = feature.getProperties();\n          const filteredProperties = {};\n          dataSource.attributes.forEach((attribute) => {\n            if (attribute.alias) {\n              filteredProperties[attribute.alias] = properties[attribute.name];\n              feature.unset(attribute.name, /* silent */ true);\n            } else {\n              // No alias is available => use the attribute as is.\n              filteredProperties[attribute.name] = properties[attribute.name];\n            }\n          });\n          feature.setProperties(filteredProperties, /* silent */ true);\n        }\n        typeSeparatedFeatures[type].push(feature);\n      });\n\n      for (const type in typeSeparatedFeatures) {\n        label = type ? type : label;\n        const featuresByType = typeSeparatedFeatures[type];\n        this.result_.sources.push({\n          features: featuresByType,\n          id: id,\n          label: label,\n          limit: limit,\n          pending: false,\n          queried: true,\n          tooManyResults: tooManyResults,\n          totalFeatureCount: totalFeatureCount\n        });\n        total += features.length;\n      }\n    }\n\n    // (2) Update total & pending\n    this.result_.total = total;\n    this.result_.pending = false;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoMapQuerent', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoDatasourceHelper.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoMapQuerent', exports);\n\n\n/**\n * The `ngeoQueryResult` is the value service where the features of the query\n * result are added.\n */\nexports.module.value('ngeoQueryResult', /** @type {ngeox.QueryResult} */ ({\n  sources: [],\n  total: 0,\n  pending: false\n}));\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.btnComponent\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Attributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach((expressionFn, i) => {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  });\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Attributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.Controller\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {ol.Collection.<ol.Feature>} ngeoFeatures Collection of features.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDrawfeatureController\n */\nconst exports = function($scope, $sce, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * Alternate collection of features in which to push the drawn features.\n   * If not defined, then `ngeoFeatures` is used instead.\n   * @type {!ol.Collection.<!ol.Feature>|undefined}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showMeasure;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n  // Fill the string collection\n  gettextCatalog.getString('Point');\n  gettextCatalog.getString('LineString');\n  gettextCatalog.getString('Polygon');\n  gettextCatalog.getString('Circle');\n  gettextCatalog.getString('Rectangle');\n  gettextCatalog.getString('Text');\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = ngeoFeatures;\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawPoint;\n\n  /**\n   * @type {ngeo.interaction.MeasureLength}\n   * @export\n   */\n  this.measureLength;\n\n  /**\n   * @type {ngeo.interaction.MeasureArea}\n   * @export\n   */\n  this.measureArea;\n\n  /**\n   * @type {ngeo.interaction.MeasureAzimut}\n   * @export\n   */\n  this.measureAzimut;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawRectangle;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawText;\n\n\n  // Watch the \"active\" property, and disable the draw interactions\n  // when \"active\" gets set to false.\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      if (newVal === false) {\n        this.interactions_.forEach((interaction) => {\n          interaction.setActive(false);\n        });\n      }\n    }\n  );\n\n};\n\n\n/**\n * Register a draw|measure interaction by setting it inactive, decorating it\n * and adding it to the map\n * @param {ol.interaction.Interaction} interaction Interaction to register.\n * @export\n */\nexports.prototype.registerInteraction = function(\n  interaction) {\n  this.interactions_.push(interaction);\n  interaction.setActive(false);\n  ngeoMiscDecorate.interaction(interaction);\n  this.map.addInteraction(interaction);\n};\n\n\n/**\n * Called when any of the draw or measure interaction active property changes.\n * Set the active property of this directive accordingly, i.e. if at least\n * one of the draw or measure is active then the active property is set to true.\n * @param {ol.Object.Event} event Event.\n * @export\n */\nexports.prototype.handleActiveChange = function(event) {\n  this.active = this.interactions_.some(interaction => interaction.getActive(), this);\n};\n\n\n/**\n * Called when a feature is finished being drawn. Set the default properties\n * for its style, then set its style and add it to the features collection.\n * @param {string} type Type of geometry being drawn.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.prototype.handleDrawEnd = function(type, event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  googAsserts.assert(sketch);\n\n  const azimut = sketch.get('azimut');\n\n  const features = this.features || this.ngeoFeatures_;\n\n  const feature = new olFeature(sketch.getGeometry());\n\n  const prop = ngeoFormatFeatureProperties;\n\n  switch (type) {\n    case ngeoGeometryType.CIRCLE:\n      feature.set(prop.IS_CIRCLE, true);\n      if (azimut !== undefined) {\n        feature.set(prop.AZIMUT, azimut);\n      }\n      break;\n    case ngeoGeometryType.TEXT:\n      feature.set(prop.IS_TEXT, true);\n      break;\n    case ngeoGeometryType.RECTANGLE:\n      feature.set(prop.IS_RECTANGLE, true);\n      break;\n    default:\n      break;\n  }\n\n  /**\n   * @type {string}\n   */\n  const name = this.gettextCatalog_.getString(type);\n  feature.set(prop.NAME, `${name} ${features.getLength() + 1}`);\n\n  /**\n   * @type {string}\n   */\n  const color = type !== ngeoGeometryType.TEXT ? '#DB4436' : '#000000';\n  feature.set(prop.COLOR, color);\n\n  feature.set(prop.ANGLE, 0);\n  feature.set(prop.OPACITY, 0.2);\n  feature.set(prop.SHOW_MEASURE, this.showMeasure ? true : false);\n  feature.set(prop.SHOW_LABEL, false);\n  feature.set(prop.SIZE, 10);\n  feature.set(prop.STROKE, 2);\n\n  // set style\n  this.featureHelper_.setStyle(feature);\n\n  // push in collection\n  features.push(feature);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDrawfeatureController', [\n  ngeoDrawFeatures.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\nexports.module.controller('ngeoDrawfeatureController', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.point\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawpoint', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawPoint = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawPoint);\n      drawFeatureCtrl.drawPoint = drawPoint;\n\n      olEvents.listen(\n        drawPoint,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POINT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawPoint,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawpoint', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.rectangle\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawrectangle', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawrectangle\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawRectangle = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n        geometryFunction: (coordinates, geometry) => {\n          if (!geometry) {\n            geometry = new olGeomPolygon(null);\n          }\n          const start = coordinates[0];\n          const end = coordinates[1];\n          geometry.setCoordinates([\n            [start, [start[0], end[1]], end, [end[0], start[1]], start]\n          ]);\n          return geometry;\n        },\n        maxPoints: 2\n      });\n\n      drawFeatureCtrl.registerInteraction(drawRectangle);\n      drawFeatureCtrl.drawRectangle = drawRectangle;\n\n      olEvents.listen(\n        drawRectangle,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.RECTANGLE),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawRectangle,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawrectangle', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.text\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawtext', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawtext\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawText = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawText);\n      drawFeatureCtrl.drawText = drawText;\n\n      olEvents.listen(\n        drawText,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.TEXT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawText,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawtext', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureArea\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, gettextCatalog, options = {}) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = gettextCatalog.getString('Click to continue drawing the polygon.');\n    const br = document.createElement('br');\n    br.textContent = gettextCatalog.getString('Double-click or click starting point to finish.');\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('Polygon'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomPolygon);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedArea(geom, proj, this.precision, this.format);\n  const verticesCount = geom.getCoordinates()[0].length;\n  let coord = null;\n  if (verticesCount > 3) {\n    coord = geom.getInteriorPoint().getCoordinates();\n  }\n  callback(output, coord);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.area\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurearea', [\n  ngeoDrawController.module.name\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing polygon');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br>' +\n          'Double-click or click starting point to finish');\n\n      const measureArea = new ngeoInteractionMeasureArea($filter('ngeoUnitPrefix'), gettextCatalog, {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureArea);\n      drawFeatureCtrl.measureArea = measureArea;\n\n      olEvents.listen(\n        measureArea,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POLYGON),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureArea,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurearea', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.azimut\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport {fromCircle} from 'ol/geom/Polygon.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasureazimut', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing circle');\n      const contMsg = gettextCatalog.getString('Click to finish');\n\n      const measureAzimut = new ngeoInteractionMeasureAzimut(\n        $filter('ngeoUnitPrefix'), $filter('number'), {\n          style: new olStyleStyle(),\n          startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n          continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n          precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined,\n          decimals: $injector.has('ngeoMeasureDecimals') ? $injector.get('ngeoMeasureDecimals') : undefined\n        });\n\n      drawFeatureCtrl.registerInteraction(measureAzimut);\n      drawFeatureCtrl.measureAzimut = measureAzimut;\n\n      olEvents.listen(\n        measureAzimut,\n        'measureend',\n        /**\n         * @param {ngeox.MeasureEvent} event Event.\n         */\n        (event) => {\n          // In the case of azimut measure interaction, the feature's\n          // geometry is actually a collection (line + circle)\n          // For our purpose here, we only need the circle, which gets\n          // transformed into a polygon with 64 sides.\n          const geometry = /** @type {ol.geom.GeometryCollection} */\n                (event.detail.feature.getGeometry());\n          const circle = /** @type {ol.geom.Circle} */ (\n            geometry.getGeometries()[1]);\n          const polygon = fromCircle(circle, 64);\n          event.detail.feature = new olFeature(polygon);\n          const azimut = ngeoInteractionMeasureAzimut.getAzimut(\n            /** @type {ol.geom.LineString} */ (geometry.getGeometries()[0])\n          );\n          event.detail.feature.set('azimut', azimut);\n\n          drawFeatureCtrl.handleDrawEnd(ngeoGeometryType.CIRCLE, event);\n        },\n        drawFeatureCtrl\n      );\n\n      olEvents.listen(\n        measureAzimut,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasureazimut', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureLength\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, gettextCatalog, options = /** @type {ngeox.interaction.MeasureOptions} */({})) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = gettextCatalog.getString('Click to continue drawing the line.');\n    const br = document.createElement('br');\n    br.textContent = gettextCatalog.getString('Double-click or click last point to finish.');\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomLineString);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedLength(geom, proj, this.precision, this.format);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.length\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurelength', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing line');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br>' +\n          'Double-click or click last point to finish');\n\n      const measureLength = new ngeoInteractionMeasureLength($filter('ngeoUnitPrefix'), gettextCatalog, {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureLength);\n      drawFeatureCtrl.measureLength = measureLength;\n\n      olEvents.listen(\n        measureLength,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.LINE_STRING),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureLength,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurelength', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.component\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawPoint from 'ngeo/draw/point.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawRectangle from 'ngeo/draw/rectangle.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawText from 'ngeo/draw/text.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureArea from 'ngeo/measure/area.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureAzimut from 'ngeo/measure/azimut.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureLength from 'ngeo/measure/length.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawfeature', [\n  ngeoDrawController.module.name,\n  ngeoDrawPoint.name,\n  ngeoDrawRectangle.name,\n  ngeoDrawText.name,\n  ngeoMeasureArea.name,\n  ngeoMeasureAzimut.name,\n  ngeoMeasureLength.name,\n]);\n\n\n/**\n * Directive used to draw vector features on a map.\n * Example:\n *\n *     <ngeo-drawfeature\n *         ngeo-btn-group\n *         class=\"btn-group\"\n *         ngeo-drawfeature-active=\"ctrl.drawActive\"\n *         ngeo-drawfeature-map=\"::ctrl.map\">\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawpoint\n *         class=\"btn btn-default ngeo-drawfeature-point\"\n *         ng-class=\"{active: dfCtrl.drawPoint.active}\"\n *         ng-model=\"dfCtrl.drawPoint.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurelength\n *         class=\"btn btn-default ngeo-drawfeature-linestring\"\n *         ng-class=\"{active: dfCtrl.measureLength.active}\"\n *         ng-model=\"dfCtrl.measureLength.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurearea\n *         class=\"btn btn-default ngeo-drawfeature-polygon\"\n *         ng-class=\"{active: dfCtrl.measureArea.active}\"\n *         ng-model=\"dfCtrl.measureArea.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measureazimut\n *         class=\"btn btn-default ngeo-drawfeature-circle\"\n *         ng-class=\"{active: dfCtrl.measureAzimut.active}\"\n *         ng-model=\"dfCtrl.measureAzimut.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawrectangle\n *         class=\"btn btn-default ngeo-drawfeature-rectangle\"\n *         ng-class=\"{active: dfCtrl.drawRectangle.active}\"\n *         ng-model=\"dfCtrl.drawRectangle.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawtext\n *         class=\"btn btn-default ngeo-drawfeature-text\"\n *         ng-class=\"{active: dfCtrl.drawText.active}\"\n *         ng-model=\"dfCtrl.drawText.active\"></a>\n *     </ngeo-drawfeature>\n *\n * @htmlAttribute {boolean} ngeo-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {!ol.Collection=} ngeo-drawfeature-features The features\n *     collection in which to push the drawn features. If none is provided,\n *     then the `ngeoFeatures` collection is used.\n * @htmlAttribute {ol.Map} ngeo-drawfeature-map The map.\n * @htmlAttribute {boolean} ngeo-drawfeature-showmeasure. Checks the\n *      checkbox in order to display the feature measurements as a label.\n *      Default to false.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawfeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoDrawfeatureController as dfCtrl',\n    scope: true,\n    bindToController: {\n      'active': '=ngeoDrawfeatureActive',\n      'features': '=?ngeoDrawfeatureFeatures',\n      'map': '=ngeoDrawfeatureMap',\n      'showMeasure': '=?ngeoDrawfeatureShowmeasure'\n    }\n  };\n};\n\nexports.directive('ngeoDrawfeature', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.ModifyCircle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport * as olCoordinate from 'ol/coordinate.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olExtent from 'ol/extent.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport {fromCircle} from 'ol/geom/Polygon.js';\nimport olInteractionPointer, {handleEvent as pointerHandleEvent} from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStructsRBush from 'ol/structs/RBush.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleDragEvent: exports.handleDragEvent_,\n    handleEvent: exports.handleEvent,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * Editing vertex.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {ol.structs.RBush.<ol.ModifySegmentDataType>}\n   * @private\n   */\n  this.rBush_ = new olStructsRBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  this.features_.forEach(feature => this.addFeature_(feature));\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  if (feature.getGeometry().getType() === 'Polygon' &&\n      !!feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n    const geometry = /** @type {ol.geom.Polygon}*/ (feature.getGeometry());\n    this.writeCircleGeometry_(feature, geometry);\n\n    const map = this.getMap();\n    if (map) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<ol.ModifySegmentDataType>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n       * @param {ol.ModifySegmentDataType} node RTree node.\n       */\n    (node) => {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nexports.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = rings.length; j < jj; ++j) {\n    coordinates = rings[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(olExtent.boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates Coordinates.\n * @return {ol.Feature} Vertex feature.\n * @private\n */\nexports.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new olFeature(new olGeomPoint(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} a The first segment data.\n * @param {ol.ModifySegmentDataType} b The second segment data.\n * @return {number} The difference in indexes.\n * @private\n */\nexports.compareIndexes_ = function(a, b) {\n  return a.index - b.index;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDownEvent_ = function(evt) {\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  this.dragSegments_ = [];\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = olExtent.boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(exports.compareIndexes_);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = olBase.getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += `-${depth.join('-')}`; // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (olCoordinate.equals(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (olCoordinate.equals(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      }\n    }\n  }\n  return !!this.vertexFeature_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDragEvent_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const vertex = evt.coordinate;\n  const geometry = /** @type {ol.geom.Polygon}*/ (this.dragSegments_[0][0].geometry);\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const line = new olGeomLineString([center, vertex]);\n\n\n  /**\n   * @type {ol.geom.Circle}\n   */\n  const circle = new olGeomCircle(center, line.getLength());\n  const coordinates = fromCircle(circle, 64).getCoordinates();\n  this.setGeometryCoordinates_(geometry, coordinates);\n\n\n  const azimut = ngeoInteractionMeasureAzimut.getAzimut(line);\n  this.features_.getArray()[0].set(ngeoFormatFeatureProperties.AZIMUT, azimut);\n\n  this.createOrUpdateVertexFeature_(vertex);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleUpEvent_ = function(evt) {\n  this.rBush_.clear();\n  this.writeCircleGeometry_(this.dragSegments_[0][0].feature,\n    this.dragSegments_[0][0].geometry);\n\n  if (this.modified_) {\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifyend', {features: this.features_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.ModifyCircle}\n * @api\n */\nexports.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof olMapBrowserPointerEvent)) {\n    return true;\n  }\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == 'pointermove' && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n\n  return pointerHandleEvent.call(this, mapBrowserEvent) &&\n      !handled;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.PluggableMap} map Map.\n * @private\n */\nexports.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return olCoordinate.squaredDistanceToSegment(pixelCoordinate, a.segment) -\n        olCoordinate.squaredDistanceToSegment(pixelCoordinate, b.segment);\n  };\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = olExtent.boundingExtent([lowerLeft, upperRight]);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = (olCoordinate.closestOnSegment(pixelCoordinate,\n      closestSegment));\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    if (Math.sqrt(olCoordinate.squaredDistance(pixel, vertexPixel)) <=\n        this.pixelTolerance_) {\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = olCoordinate.squaredDistance(vertexPixel, pixel1);\n      const squaredDist2 = olCoordinate.squaredDistance(vertexPixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      this.snappedToVertex_ = dist <= this.pixelTolerance_;\n      if (this.snappedToVertex_) {\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        this.createOrUpdateVertexFeature_(vertex);\n        const vertexSegments = {};\n        vertexSegments[olBase.getUid(closestSegment)] = true;\n        let segment;\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          segment = nodes[i].segment;\n          if ((olCoordinate.equals(closestSegment[0], segment[0]) &&\n              olCoordinate.equals(closestSegment[1], segment[1]) ||\n              (olCoordinate.equals(closestSegment[0], segment[1]) &&\n              olCoordinate.equals(closestSegment[1], segment[0])))) {\n            vertexSegments[olBase.getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n        return;\n      }\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nexports.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.ModifyRectangle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorPoints_ = new olLayerVector({\n    source: new olSourceVector({\n      wrapX: !!options.wrapX\n    }),\n    visible: this.getActive(),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {Object.<number, ngeo.interaction.ModifyRectangle.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {?ngeo.interaction.ModifyRectangle.ModifyParams}\n   * @private\n   */\n  this.params_ = null;\n\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n  this.features_.forEach((feature) => {\n    this.addFeature_(feature);\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionPointer.prototype.setActive.call(this, active);\n  if (this.vectorPoints_) {\n    this.vectorPoints_.setVisible(active);\n  }\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const featureGeom = feature.getGeometry();\n  if (featureGeom instanceof olGeomPolygon) {\n\n    // If the feature's corners are already set, no need to set them again\n    const uid = olBase.getUid(feature);\n    let item = this.cache_[uid];\n    if (item) {\n      return;\n    }\n\n    const pointSource = this.vectorPoints_.getSource();\n\n    // from each corners, create a point feature and add it to the point layer.\n    // each point is then associated with 2 siblings in order to update the\n    // siblings geometry at the same time when a point gets dragged around.\n    // mark each one as 'corner'\n    const corners = featureGeom.getCoordinates()[0];\n    while (corners.length > 4) {\n      if (corners[0][0] < corners[1][0] && corners[0][1] <= corners[1][1]) {\n        corners.pop();\n      } else {\n        corners.shift();\n      }\n    }\n    const pointFeatures = [];\n    let cornerPoint;\n    let cornerFeature;\n    corners.forEach((corner) => {\n      cornerPoint = new olGeomPoint(corner);\n      cornerFeature = new olFeature({\n        'corner': true,\n        'geometry': cornerPoint,\n        'siblingX': null,\n        'siblingY': null,\n        'boxFeature': feature\n      });\n\n      pointFeatures.push(cornerFeature);\n    }, this);\n    item = /** @type {ngeo.interaction.ModifyRectangle.CacheItem} */ ({\n      corners: pointFeatures\n    });\n    this.cache_[uid] = item;\n\n    let previousFeature;\n    let nextFeature;\n    pointFeatures.forEach((cornerFeature, index) => {\n      previousFeature = pointFeatures[index - 1];\n      if (!previousFeature) {\n        previousFeature = pointFeatures[pointFeatures.length - 1];\n      }\n\n      nextFeature = pointFeatures[index + 1];\n      if (!nextFeature) {\n        nextFeature = pointFeatures[0];\n      }\n\n      if (index % 2 === 0) {\n        cornerFeature.set('siblingX', nextFeature);\n        cornerFeature.set('siblingY', previousFeature);\n      } else {\n        cornerFeature.set('siblingX', previousFeature);\n        cornerFeature.set('siblingY', nextFeature);\n      }\n\n    }, this);\n    pointSource.addFeatures(pointFeatures);\n  }\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n    this.params_ = this.initializeParams_();\n  }\n};\n\n\n/**\n * @return {ngeo.interaction.ModifyRectangle.ModifyParams} The initialised params\n * @private\n */\nexports.prototype.initializeParams_ = function() {\n  const feature = this.feature_;\n\n  // 1. Find the origin (opposite) point for the modify operation\n  // siblingY relative to the origin is siblingX relative to the opposite\n  const siblingY = feature.get('siblingX');\n  googAsserts.assertInstanceof(siblingY, olFeature);\n\n  const origin = siblingY.get('siblingY');\n  googAsserts.assertInstanceof(origin, olFeature);\n  const originPoint = origin.getGeometry();\n  googAsserts.assertInstanceof(originPoint, olGeomPoint);\n  const originCoordinate = originPoint.getCoordinates();\n  const originPixel = this.getMap().getPixelFromCoordinate(originCoordinate);\n\n  // 2. Find the origin's X sibling and the normal vector from the origin to it\n  const siblingX = origin.get('siblingX');\n  googAsserts.assertInstanceof(siblingX, olFeature);\n  const siblingXPoint = siblingX.getGeometry();\n  googAsserts.assertInstanceof(siblingXPoint, olGeomPoint);\n  const siblingXCoordinate = siblingXPoint.getCoordinates();\n  const siblingXPixel = this.getMap().getPixelFromCoordinate(siblingXCoordinate);\n  let vectorX = [\n    siblingXPixel[0] - originPixel[0],\n    siblingXPixel[1] - originPixel[1]\n  ];\n  const vectorXMagnitude = Math.sqrt(vectorX[0] * vectorX[0] + vectorX[1] * vectorX[1]);\n  vectorX[0] /= vectorXMagnitude;\n  vectorX[1] /= vectorXMagnitude;\n\n  // 3. Find the origin's Y sibling and the normal vector from the origin to it\n  const siblingYPoint = siblingY.getGeometry();\n  googAsserts.assertInstanceof(siblingYPoint, olGeomPoint);\n  const siblingYCoordinate = siblingYPoint.getCoordinates();\n  const siblingYPixel = this.getMap().getPixelFromCoordinate(siblingYCoordinate);\n  let vectorY = [\n    siblingYPixel[0] - originPixel[0],\n    siblingYPixel[1] - originPixel[1]\n  ];\n  const vectorYMagnitude = Math.sqrt(vectorY[0] * vectorY[0] + vectorY[1] * vectorY[1]);\n  vectorY[0] /= vectorYMagnitude;\n  vectorY[1] /= vectorYMagnitude;\n\n  // 4. Validate the vectors.\n  if (isNaN(vectorX[0]) && isNaN(vectorY[0])) {\n    // Both vector are invalid. Rotation information has already been lost\n    vectorX = [0, 1];\n    vectorY = [1, 0];\n  } else if (isNaN(vectorX[0])) {\n    vectorX = [vectorY[1], -vectorY[0]];\n  } else if (isNaN(vectorY[0])) {\n    vectorY = [vectorX[1], -vectorX[0]];\n  }\n\n  return {\n    originCoordinate,\n    originPixel,\n    siblingXPoint,\n    siblingYPoint,\n    vectorX,\n    vectorY\n  };\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const item = this.cache_[uid];\n  const corners = item.corners;\n  for (let i = 0; i < corners.length; i++) {\n    this.vectorPoints_.getSource().removeFeature(corners[i]);\n  }\n  this.feature_ = null;\n  corners.length = 0;\n  delete this.cache_[uid];\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.vectorPoints_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  const feature = map.forEachFeatureAtPixel(evt.pixel, feature =>\n    (feature.get('siblingX') && feature.get('siblingY') ? feature : undefined)\n  );\n\n  if (feature) {\n    this.feature_ = feature;\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const feature = this.feature_;\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (feature.getGeometry());\n\n  if (geometry instanceof olGeomPoint) {\n    geometry.setCoordinates(evt.coordinate);\n\n    const destinationPixel = evt.pixel;\n\n    const originPixel = this.params_.originPixel;\n    const siblingXPoint = this.params_.siblingXPoint;\n    const siblingYPoint = this.params_.siblingYPoint;\n    const vectorX = this.params_.vectorX;\n    const vectorY = this.params_.vectorY;\n    const originCoordinate = this.params_.originCoordinate;\n\n    // Calculate new positions of siblings\n    const b2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorX);\n    const b2Coordinate = this.getMap().getCoordinateFromPixel(b2Pixel);\n    siblingXPoint.setCoordinates(b2Coordinate);\n\n    const c2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorY);\n    const c2Coordinate = this.getMap().getCoordinateFromPixel(c2Pixel);\n    siblingYPoint.setCoordinates(c2Coordinate);\n\n\n    // Resize the box\n    const boxFeature = feature.get('boxFeature');\n    const geom = boxFeature.getGeometry();\n    googAsserts.assertInstanceof(geom, olGeomPolygon);\n    geom.setCoordinates([[evt.coordinate, b2Coordinate, originCoordinate, c2Coordinate, evt.coordinate]]);\n  }\n};\n\n\n/**\n * Calculate the new position of a point as projected on a vector from origin to\n * destination.\n * @param {ol.Pixel} origin Pixel of origin (opposite of the drag handle)\n * @param {ol.Pixel} destination Pixel of destination (the handle we dragged)\n * @param {ol.Pixel} vector The normalized vector to the point\n * @return {ol.Pixel} The new pixel of the point\n * @private\n */\nexports.prototype.calculateNewPixel_ = function(\n  origin, destination, vector) {\n\n  const aVector = [destination[0] - origin[0], destination[1] - origin[1]];\n\n  const abScalarProduct = aVector[0] * vector[0] + aVector[1] * vector[1];\n\n  const deltaVector = [\n    (vector[0] * abScalarProduct),\n    (vector[1] * abScalarProduct)\n  ];\n\n  return [deltaVector[0] + origin[0], deltaVector[1] + origin[1]];\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifyend', {features: this.features_});\n    this.dispatchEvent(event);\n    this.params_ = null;\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * @typedef {{\n *     corners: Array.<ol.Feature>\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     originCoordinate: ol.Coordinate,\n *     originPixel: ol.Pixel,\n *     siblingXPoint: ol.geom.Point,\n *     siblingYPoint: ol.geom.Point,\n *     vectorX: Array.<number>,\n *     vectorY: Array.<number>\n * }}\n */\nexports.ModifyParams;\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Modify\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModifyCircle from 'ngeo/interaction/ModifyCircle.js';\nimport ngeoInteractionModifyRectangle from 'ngeo/interaction/ModifyRectangle.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olCollection from 'ol/Collection.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * This interaction combines multiple kind of feature modification interactions\n * in order to be able to modify vector features depending on their geometry\n * type. The different kind of interactions supported are:\n *\n * - `ol.interaction.Modify`\n * - `ngeo.interaction.ModifyCircle`\n * - `ngeo.interaction.ModifyRectangle`\n *\n * This interaction receives a collection of features. Its job is to listen\n * to added/removed features to and from it and add them in the proper\n * collection that is uniquely used for each inner interaction. Those inner\n * interactions follow the `active` property of this interaction, i.e. when\n * this interaction is activated, so do the inner interactions. Since they will\n * never share the same feature, they don't collide with one an other.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Interaction}\n * @param {olx.interaction.ModifyOptions} options Options.\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.otherFeatures_ = new olCollection();\n\n  this.interactions_.push(new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.otherFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.circleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyCircle({\n    features: this.circleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.rectangleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyRectangle({\n    features: this.rectangleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionInteraction.prototype.setActive.call(this, active);\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const interactions = this.interactions_;\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    interactions.forEach((interaction) => {\n      currentMap.removeInteraction(interaction);\n    });\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    interactions.forEach((interaction) => {\n      map.addInteraction(interaction);\n    });\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Toggle interactions.\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const interactions = this.interactions_;\n  const keys = this.listenerKeys_;\n\n  interactions.forEach((interaction) => {\n    interaction.setActive(active && !!map);\n  });\n\n  if (active && map) {\n    this.features_.forEach(feature => this.addFeature_(feature));\n    keys.push(\n      olEvents.listen(this.features_, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.features_.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.push(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.remove(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {ol.Collection.<ol.Feature>} Collection of features for this feature.\n * @private\n */\nexports.prototype.getFeatureCollection_ = function(feature) {\n  let features;\n  const isCircle = feature.get(ngeoFormatFeatureProperties.IS_CIRCLE);\n  const isRectangle = feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE);\n  if (isCircle === true || isCircle === 'true') {\n    features = this.circleFeatures_;\n  } else if (isRectangle === true || isRectangle === 'true') {\n    features = this.rectangleFeatures_;\n  } else {\n    features = this.otherFeatures_;\n  }\n  return features;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Rotate\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction to rotate features.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.coordinate_ = null;\n\n  /**\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.centerCoordinate_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionPointer.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n    this.features_.forEach(feature => this.addFeature_(feature));\n    this.listenerKeys_.push(\n      olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this)\n    );\n\n  } else {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n    this.features_.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  feature.set('angle', 0);\n\n  // Add the center icon to the overlay\n  const uid = olBase.getUid(feature);\n  const point = new olGeomPoint(this.getCenterCoordinate_(geometry));\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.overlay_.getSource().addFeature(centerFeature);\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.feature_ = null;\n  //this.overlay_.getSource().removeFeature(feature);\n\n  if (feature) {\n    const uid = olBase.getUid(feature);\n\n    if (this.centerFeatures_[uid]) {\n      this.overlay_.getSource().removeFeature(this.centerFeatures_[uid]);\n      delete this.centerFeatures_[uid];\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  let feature = map.forEachFeatureAtPixel(evt.pixel,\n    (feature, layer) => feature, undefined);\n\n  if (feature) {\n    let found = false;\n    this.features_.forEach((f) => {\n      if (olBase.getUid(f) == olBase.getUid(feature)) {\n        found = true;\n      }\n    });\n    if (!found) {\n      feature = null;\n    }\n  }\n\n  if (feature) {\n    this.coordinate_ = evt.coordinate;\n    this.feature_ = feature;\n    const geometry = (this.feature_.getGeometry());\n    if (geometry !== undefined) {\n      this.centerCoordinate_ = this.getCenterCoordinate_(geometry);\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.Coordinate} The center coordinate of the geometry.\n * @private\n */\nexports.prototype.getCenterCoordinate_ = function(\n  geometry) {\n\n  let center;\n\n  if (geometry instanceof olGeomLineString) {\n    center = geometry.getFlatMidpoint();\n  } else if (geometry instanceof olGeomPolygon) {\n    center = geometry.getFlatInteriorPoint();\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  return center;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (this.feature_.getGeometry());\n\n  const oldX = this.coordinate_[0];\n  const oldY = this.coordinate_[1];\n\n  const centerX = this.centerCoordinate_[0];\n  const centerY = this.centerCoordinate_[1];\n\n  const dx1 = oldX - centerX;\n  const dy1 = oldY - centerY;\n  const dx0 = evt.coordinate[0] - centerX;\n  const dy0 = evt.coordinate[1] - centerY;\n\n  this.coordinate_[0] = evt.coordinate[0];\n  this.coordinate_[1] = evt.coordinate[1];\n\n  const a0 = Math.atan2(dy0, dx0);\n  const a1 = Math.atan2(dy1, dx1);\n  const angle = a1 - a0;\n\n  geometry.rotate(-angle, [centerX, centerY]);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.RotateEvent} */\n    const event = new ngeoCustomEvent('rotateend', {feature: this.feature_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n    this.setActive(false);\n  }\n  return false;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Translate\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionTranslate from 'ol/interaction/Translate.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * An extension of the OpenLayers Translate interaction that adds the following\n * features to it:\n *\n * - show a small arrow icon in the middle of the features allowing a visual\n *   aspect that tells the user \"this feature can be moved\"\n * - pressing the ESC key automatically deactivate the interaction.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Translate}\n * @param {ngeox.interaction.TranslateOptions} options Options.\n */\nconst exports = function(options) {\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {!Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = {};\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.myFeatures_ = options.features !== undefined ? options.features : null;\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.vectorSource_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: this.vectorSource_,\n    style: options.style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionTranslate.call(\n    this, /** @type {olx.interaction.TranslateOptions} */ (options));\n};\n\nolBase.inherits(exports, olInteractionTranslate);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionTranslate.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.vectorLayer_.setMap(null);\n  }\n\n  olInteractionTranslate.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.vectorLayer_.setMap(map);\n  }\n\n  this.setState_();\n};\n\n\n/**\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const features = this.myFeatures_;\n  const keys = this.listenerKeys_;\n\n  if (map && active && features) {\n    features.forEach(feature => this.addFeature_(feature));\n    keys.push(\n      olEvents.listen(features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(features, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n\n    if (map) {\n      const elem = map.getTargetElement();\n      elem.style.cursor = 'default';\n    }\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    features.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  this.featureListenerKeys_[uid] = olEvents.listen(\n    geometry,\n    'change',\n    this.handleGeometryChange_.bind(this, feature),\n    this\n  );\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.vectorSource_.addFeature(centerFeature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  if (this.featureListenerKeys_[uid]) {\n    olEvents.unlistenByKey(this.featureListenerKeys_[uid]);\n    delete this.featureListenerKeys_[uid];\n\n    this.vectorSource_.removeFeature(this.centerFeatures_[uid]);\n    delete this.centerFeatures_[uid];\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature being moved.\n * @param {ol.events.Event} evt Event.\n * @private\n */\nexports.prototype.handleGeometryChange_ = function(feature,\n  evt) {\n  const geometry = evt.target;\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const uid = olBase.getUid(feature);\n  this.centerFeatures_[uid].setGeometry(point);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.geom.Point} The center point of the geometry.\n * @private\n */\nexports.prototype.getGeometryCenterPoint_ = function(\n  geometry) {\n\n  let center;\n  let point;\n\n  if (geometry instanceof olGeomPolygon) {\n    point = geometry.getInteriorPoint();\n  } else if (geometry instanceof olGeomLineString) {\n    center = geometry.getCoordinateAt(0.5);\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  if (!point && center) {\n    point = new olGeomPoint(center);\n  }\n\n  googAsserts.assert(point, 'Point should be thruthy');\n\n  return point;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.ToolActivate\n */\n/**\n * A simple object that can be managed by `ngeo.misc.ToolActivateMgr`.\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {Object} toolContext An object which acts as the context for the tool.\n * @param {string} activePropertyName The name of a boolean property on\n *      `toolContext` which represents the active state of the tool.\n * @constructor\n * @struct\n * @ngname ngeoToolActivate\n * @export\n */\nconst exports = function(toolContext, activePropertyName) {\n\n  /**\n   * A getter function to get the active state of the tool.\n   * @return {boolean} Is active.\n   * @export\n   */\n  this.getActive = function() {\n    return toolContext[activePropertyName];\n  };\n\n  /**\n   * A setter function to set the active state of the tool.\n   * @param {boolean} newVal New active state.\n   * @export\n   */\n  this.setActive = function(newVal) {\n    toolContext[activePropertyName] = newVal;\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.ToolActivateMgr\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * Provides a service to manage the activation of `ngeo.misc.ToolActivate` objects.\n *\n * Example:\n *\n * Each tool must be registered before using it.\n *\n *     let tool = new ngeo.misc.ToolActivate(interaction, 'active');\n *     ngeoToolActivateMgr.registerTool('mapTools', tool);\n *\n * A tool will be registered in a group identified by a group name.\n * Once registered a tool can be activated and deactivated. When activating a\n * tool, all others tools in the same group will be deactivated.\n *\n *     ngeoToolActivateMgr.activateTool(tool);\n *     ngeoToolActivateMgr.deactivateTool(tool);\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoToolActivateMgr\n * @ngInject\n */\nconst exports = function($rootScope) {\n\n  /**\n   * @type {!Object.<string, Array.<ngeox.miscToolActivateMgrEntry>>}\n   * @private\n   */\n  this.groups_ = {};\n\n  /**\n   * The scope.\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $rootScope;\n};\n\n\n/**\n * Register a tool.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to register.\n * @param {boolean=} opt_defaultActivate If true, this tool will be activated\n *     when all other tools in the group are deactivated.\n * @export\n */\nexports.prototype.registerTool = function(groupName, tool,\n  opt_defaultActivate) {\n  let entries = this.groups_[groupName];\n  if (!entries) {\n    entries = this.groups_[groupName] = [];\n  }\n\n  const unlisten = this.scope_.$watch(\n    tool.getActive,\n    (newVal, oldVal) => {\n      if (newVal === oldVal) {\n        return;\n      }\n      if (newVal) {\n        this.deactivateTools_(groupName, tool);\n      } else {\n        this.activateDefault_(groupName);\n      }\n    });\n\n  entries.push({\n    tool: tool,\n    defaultTool: opt_defaultActivate || false,\n    unlisten: unlisten\n  });\n\n  if (googAsserts.ENABLE_ASSERTS) {\n    // check that only one default tool per group exists\n    let defaultTools = 0;\n    entries.forEach((entry) => {\n      if (entry.defaultTool) {\n        defaultTools++;\n      }\n    });\n    googAsserts.assert(\n      defaultTools <= 1, `more than one default tool in group ${groupName}`);\n  }\n};\n\n\n/**\n * Unregister a tool from a group.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to unregister.\n * @export\n */\nexports.prototype.unregisterTool = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      if (entries[i].tool == tool) {\n        entries[i].unlisten();\n        entries.splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * Unregister each tool from a group.\n * @param {string} groupName Name of the group of tools to unregister.\n * @export\n */\nexports.prototype.unregisterGroup = function(groupName) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      entries[i].unlisten();\n    }\n    delete this.groups_[groupName];\n  }\n};\n\n\n/**\n * Activate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @export\n */\nexports.prototype.activateTool = function(tool) {\n  tool.setActive(true);\n};\n\n\n/**\n * Deactivate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to deactivate.\n * @export\n */\nexports.prototype.deactivateTool = function(tool) {\n  tool.setActive(false);\n};\n\n\n/**\n * Deactivate all tools except the given one.\n *\n * @param {string} groupName Name of the group.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @private\n */\nexports.prototype.deactivateTools_ = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  for (let i = 0; i < entries.length; i++) {\n    if (tool != entries[i].tool) {\n      entries[i].tool.setActive(false);\n    }\n  }\n};\n\n\n/**\n * Activate the default tool in the given group if no other tool is active.\n *\n * @param {string} groupName Name of the group.\n * @private\n */\nexports.prototype.activateDefault_ = function(groupName) {\n  const entries = this.groups_[groupName];\n  let defaultTool = null;\n  let hasActiveTool = false;\n\n  for (let i = 0; i < entries.length; i++) {\n    hasActiveTool = hasActiveTool || entries[i].tool.getActive();\n\n    if (entries[i].defaultTool) {\n      defaultTool = entries[i].tool;\n    }\n  }\n\n  if (!hasActiveTool && defaultTool !== null) {\n    defaultTool.setActive(true);\n  }\n};\n\n\nexports.module = angular.module('ngeoToolActivateMgr', []);\nexports.module.service('ngeoToolActivateMgr', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.ruleComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMenu from 'ngeo/Menu.js';\nimport ngeoDrawComponent from 'ngeo/draw/component.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionModify from 'ngeo/interaction/Modify.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDatepickerComponent from 'ngeo/misc/datepickerComponent.js';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olArray from 'ol/array.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoRule', [\n  ngeoDrawComponent.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoMapFeatureOverlay.module.name,\n  ngeoMiscDatepickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/filter/rulecomponent', require('./rulecomponent.html'));\n});\n\n\nexports.value('ngeoRuleTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoRuleTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/filter/rulecomponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoRuleTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoRuleTemplateUrl($attrs, ngeoRuleTemplateUrl) {\n  return ngeoRuleTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.RuleController_ = class {\n\n  /**\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate\n   *     manager service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoRuleController\n   */\n  constructor(gettextCatalog, $scope, $timeout, ngeoFeatureHelper,\n    ngeoRuleHelper, ngeoToolActivateMgr) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * The original rule.\n     * @type {!ngeo.rule.Rule}\n     * @export\n     */\n    this.rule;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // Injected properties\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.ToolActivateMgr}\n     * @private\n     */\n    this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n\n    // Inner properties\n\n    /**\n     * The cloned rule. Changes in the UI are applied to the clone 'on-the-fly'.\n     * Changes in the clone are applied back in the original rule when the\n     * apply button is clicked.\n     * @type {!ngeo.rule.Rule}\n     * @export\n     */\n    this.clone;\n\n    const operatorType = ngeoRuleRule.OperatorType;\n    const spatialOperatorType = ngeoRuleRule.SpatialOperatorType;\n    const temporalOperatorType = ngeoRuleRule.TemporalOperatorType;\n\n    /**\n     * @type {Object.<string, string>}\n     * @export\n     */\n    this.operators = {\n      [operatorType.EQUAL_TO]: gettextCatalog.getString('Is equal to'),\n      [operatorType.GREATER_THAN]: gettextCatalog.getString('Is greater than'),\n      [operatorType.GREATER_THAN_OR_EQUAL_TO]: gettextCatalog.getString(\n        'Is greater than or equal to'),\n      [operatorType.LESSER_THAN]: gettextCatalog.getString('Is lesser than'),\n      [operatorType.LESSER_THAN_OR_EQUAL_TO]: gettextCatalog.getString(\n        'Is lesser than or equal to'),\n      [operatorType.NOT_EQUAL_TO]: gettextCatalog.getString('Is not equal to'),\n      [operatorType.LIKE]: gettextCatalog.getString('Contains'),\n      [spatialOperatorType.CONTAINS]: gettextCatalog.getString('Contains'),\n      [spatialOperatorType.INTERSECTS]: gettextCatalog.getString('Intersects'),\n      [spatialOperatorType.WITHIN]: gettextCatalog.getString('Is inside of'),\n      [temporalOperatorType.BEGINS]: gettextCatalog.getString('Begins at'),\n      [temporalOperatorType.DURING]: gettextCatalog.getString('During'),\n      [temporalOperatorType.ENDS]: gettextCatalog.getString('Ends at'),\n      [temporalOperatorType.EQUALS]: gettextCatalog.getString('Is equal to')\n    };\n\n    /**\n     * @type {Object.<string, string>}\n     * @export\n     */\n    this.operatorsShortFormat = {\n      [operatorType.EQUAL_TO]: '=',\n      [operatorType.GREATER_THAN]: '>',\n      [operatorType.GREATER_THAN_OR_EQUAL_TO]: '>=',\n      [operatorType.LESSER_THAN]: '<',\n      [operatorType.LESSER_THAN_OR_EQUAL_TO]: '<=',\n      [operatorType.NOT_EQUAL_TO]: '!=',\n      [operatorType.LIKE]: '~',\n      [temporalOperatorType.BEGINS]: '>=',\n      [temporalOperatorType.ENDS]: '<=',\n      [temporalOperatorType.EQUALS]: '='\n    };\n\n    /**\n     * Time property used when the rule is of type 'date|datetime' and uses\n     * a range of date.\n     * @type {!ngeox.TimeProperty}\n     * @export\n     */\n    this.timeRangeMode = {\n      widget: 'datepicker',\n      maxValue: null,\n      minValue: null,\n      maxDefValue: this.createDate_(),\n      minDefValue: this.createWeekAgoDate_(),\n      mode: 'range',\n      interval: [0, 1, 0, 0]\n    };\n\n    /**\n     * Time property used when the rule is of type 'date|datetime' and uses\n     * a single date.\n     * @type {!ngeox.TimeProperty}\n     * @export\n     */\n    this.timeValueMode = {\n      widget: 'datepicker',\n      maxValue: null,\n      minValue: null,\n      maxDefValue: this.createDate_(),\n      minDefValue: this.createDate_(),\n      mode: 'value',\n      interval: [0, 1, 0, 0]\n    };\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @private\n     */\n    this.toolActivate_;// = new ngeo.misc.ToolActivate(this.rule, 'active');\n\n    /**\n     * @type {!Array.<Function>}\n     * @private\n     */\n    this.unlisteners_ = [];\n\n\n    // Inner properties when dealing with a `ngeo.rule.Geometry`\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.drawActive = false;\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.drawToolActivate = new ngeoMiscToolActivate(this, 'drawActive');\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @export\n     */\n    this.drawnFeatures = new olCollection();\n\n    /**\n     * @type {?ngeo.Menu}\n     * @private\n     */\n    this.menu_ = null;\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @export\n     */\n    this.selectedFeatures = new olCollection();\n\n    /**\n     * @type {!ol.Collection.<!ol.interaction.Interaction>}\n     * @private\n     */\n    this.interactions_ = new olCollection();\n\n    /**\n     * @type {!ngeo.interaction.Modify}\n     * @private\n     */\n    this.modify_ = new ngeoInteractionModify({\n      features: this.selectedFeatures,\n      style: ngeoFeatureHelper.getVertexStyle(false)\n    });\n    this.interactions_.push(this.modify_);\n\n    /**\n     * @type {ngeo.interaction.Rotate}\n     * @private\n     */\n    this.rotate_ = new ngeoInteractionRotate({\n      features: this.selectedFeatures,\n      style: new olStyleStyle({\n        text: new olStyleText({\n          text: '\\uf01e',\n          font: 'normal 18px FontAwesome',\n          fill: new olStyleFill({\n            color: '#7a7a7a'\n          })\n        })\n      })\n    });\n    this.interactions_.push(this.rotate_);\n\n    /**\n     * @type {ngeo.interaction.Translate}\n     * @private\n     */\n    this.translate_ = new ngeoInteractionTranslate({\n      features: this.selectedFeatures,\n      style: new olStyleStyle({\n        text: new olStyleText({\n          text: '\\uf047',\n          font: 'normal 18px FontAwesome',\n          fill: new olStyleFill({\n            color: '#7a7a7a'\n          })\n        })\n      })\n    });\n    this.interactions_.push(this.translate_);\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    this.initializeInteractions_();\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.modifyToolActivate = new ngeoMiscToolActivate(\n      this.modify_,\n      'active'\n    );\n\n    /**\n     * @type {ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.rotateToolActivate = new ngeoMiscToolActivate(\n      this.rotate_,\n      'active'\n    );\n\n    /**\n     * @type {ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.translateToolActivate = new ngeoMiscToolActivate(\n      this.translate_,\n      'active'\n    );\n\n    /**\n     * The geometry type used by the clone feature.\n     * @type {?string}\n     * @export\n     */\n    this.geomType = null;\n  }\n\n  /**\n   * Called on initialization of the controller.\n   *\n   * Clone the rule to be able to work with the clone directly.\n   */\n  $onInit() {\n    this.clone = this.ngeoRuleHelper_.cloneRule(this.rule);\n\n    this.toolActivate_ = new ngeoMiscToolActivate(this.rule, 'active');\n\n    this.ngeoToolActivateMgr_.registerTool(\n      this.toolGroup, this.toolActivate_);\n\n    this.scope_.$watch(\n      () => this.rule.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    // If the rule is a DATE or DATETIME, then a datepicker directive is used.\n    // It is not possible to set the current values to the datepicker, but you\n    // can set the initial values. This is why it is created when the rule\n    // becomes active (see the partials/rule.html).\n    //\n    // This chunk of code ensures that the rule properties are synchronized\n    // with the TimeProperty objects required to build the datepickers.\n    if (this.clone.type === ngeoFormatAttributeType.DATE ||\n        this.clone.type === ngeoFormatAttributeType.DATETIME\n    ) {\n      // Watch 'expression'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.getExpression(),\n        (newVal) => {\n          this.timeValueMode.minValue = newVal;\n        }\n      ));\n      // Watch 'lowerBoundary'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.lowerBoundary,\n        (newVal) => {\n          this.timeRangeMode.minValue = newVal;\n        }\n      ));\n      // Watch 'upperBoundary'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.upperBoundary,\n        (newVal) => {\n          this.timeRangeMode.maxValue = newVal;\n        }\n      ));\n    } else if (this.clone.type === ngeoFormatAttributeType.GEOMETRY) {\n\n      // Watch 'operator' of clone. Make sure any existing geometry is\n      // supported by the newly selected operator. If it doesn't, reset\n      // the expression, i.e. geometry.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.operator,\n        (newVal) => {\n          if (newVal &&\n              newVal === ngeoRuleRule.SpatialOperatorType.CONTAINS\n          ) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            const geometry = clone.feature.getGeometry();\n            if (geometry) {\n              const geomType = this.ngeoFeatureHelper_.getType(clone.feature);\n              const supportedTypes = [\n                ngeoGeometryType.CIRCLE,\n                ngeoGeometryType.POLYGON,\n                ngeoGeometryType.RECTANGLE\n              ];\n              if (!olArray.includes(supportedTypes, geomType)) {\n                this.clone.setExpression(null);\n              }\n            }\n          }\n        }\n      ));\n\n      // Watch 'expression' of clone. Set 'geomType' property accordingly.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.expression,\n        (newVal) => {\n          if (newVal) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            this.geomType = this.ngeoFeatureHelper_.getType(clone.feature);\n          } else {\n            this.geomType = null;\n          }\n        }\n      ));\n\n      // Watch both 'expression', 'active' and the modify control to be all\n      // thruthy. When that's the case, the clone feature is added to the\n      // selection collection.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => {\n          const hasExpression = this.clone.getExpression() !== null;\n          const isActive = this.rule.active === true;\n          const editToolIsActive = this.modify_.getActive() ||\n                this.rotate_.getActive() ||\n                this.translate_.getActive();\n          return hasExpression && isActive && editToolIsActive;\n        },\n        (newVal) => {\n          if (newVal) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            this.selectedFeatures.push(clone.feature);\n          } else {\n            this.selectedFeatures.clear();\n          }\n        }\n      ));\n    }\n  }\n\n  /**\n   * Called on destruction of the controller.\n   */\n  $onDestroy() {\n    if (this.rule.active) {\n      this.rule.active = false;\n      // in $onDestroy, setting active to false will not call the handler. Call\n      // it manually to let it do its magic\n      this.handleActiveChange_(false, true);\n    }\n    this.ngeoToolActivateMgr_.unregisterTool(\n      this.toolGroup, this.toolActivate_);\n    for (let i = 0, ii = this.unlisteners_.length; i < ii; i++) {\n      this.unlisteners_[i]();\n    }\n    this.unlisteners_.length = 0;\n    this.clone.destroy();\n  }\n\n  /**\n   * @export\n   */\n  toggle() {\n    if (this.rule.active) {\n      this.cancel();\n    } else {\n      this.rule.active = true;\n    }\n  }\n\n  /**\n   * Apply the changes that were made in the original rule.\n   * @export\n   */\n  apply() {\n    this.ngeoRuleHelper_.extendRule(this.clone, this.rule);\n    this.rule.active = false;\n  }\n\n  /**\n   * Revert the changes that were made in the clone rule.\n   * @export\n   */\n  cancel() {\n    this.ngeoRuleHelper_.extendRule(this.rule, this.clone);\n    this.rule.active = false;\n  }\n\n  /**\n   * Reset both original and clone rules.\n   * @export\n   */\n  reset() {\n    this.clone.reset();\n    this.rule.reset();\n  }\n\n  /**\n   * Called when a choice is clicked, when using a `ngeo.rule.Select` rule type.\n   * Add/remove the choice to/from the `expression` of the rule.\n   * @param {string|number} choice Choice that has been clicked.\n   * @export\n   */\n  toggleChoiceSelection(choice) {\n    const rule = googAsserts.assertInstanceof(this.clone, ngeoRuleSelect);\n    const choices = rule.getExpression() ? rule.getExpression().split(',') : [];\n    const idx = choices.indexOf(choice);\n    if (idx > -1) {\n      choices.splice(idx, 1);\n    } else {\n      choices.push(choice);\n    }\n    rule.setExpression(choices.length ? choices.join(',') : null);\n  }\n\n\n  /**\n   * @param {Object} date Date\n   * @export\n   */\n  onDateSelected(date) {\n    this.clone.setExpression(date['start']);\n  }\n\n  /**\n   * @param {Object} date Date\n   * @export\n   */\n  onDateRangeSelected(date) {\n    this.clone.lowerBoundary = date['start'];\n    this.clone.upperBoundary = date['end'];\n  }\n\n  /**\n   * @param {number=} opt_timeDelta Time delta to go back in the past.\n   * @return {string} ISO string of the date\n   * @private\n   */\n  createDate_(opt_timeDelta) {\n\n    const date = new Date();\n\n    if (opt_timeDelta !== undefined) {\n      const time = date.getTime() - opt_timeDelta;\n      date.setTime(time);\n    }\n\n    return date.toISOString();\n  }\n\n  /**\n   * @return {string} ISO string of the date\n   * @private\n   */\n  createWeekAgoDate_() {\n    return this.createDate_(1000 * 60 * 60 * 24 * 7); // A week ago date\n  }\n\n  /**\n   * @param {number} time Time.\n   * @return {string} Date\n   * @export\n   */\n  timeToDate(time) {\n    const date = new Date(time);\n    return date.toLocaleDateString();\n  }\n\n\n  // === Methods used when bound to a `ngeo.rule.Geometry`\n\n\n  /**\n   * Called when the active property of a rule changes. Only used when this\n   * component is bound to a geometry rule.\n   *\n   * Manage the activation/deactivation of the interactions.\n   *\n   * @param {boolean} active Whether the rule is active or not.\n   * @param {boolean} oldActive Whether the rule was active or not.\n   * @private\n   */\n  handleActiveChange_(active, oldActive) {\n\n    if (!(this.rule instanceof ngeoRuleGeometry) ||\n        !(this.clone instanceof ngeoRuleGeometry) ||\n        active === oldActive\n    ) {\n      return;\n    }\n\n    const keys = this.listenerKeys_;\n    const uid = ['ngeo-rule-', olBase.getUid(this)].join('-');\n    const toolMgr = this.ngeoToolActivateMgr_;\n\n    const ruleFeature = this.rule.feature;\n    const cloneFeature = this.clone.feature;\n\n    const mapDiv = this.map.getViewport();\n    googAsserts.assertElement(mapDiv);\n\n    if (active) {\n      keys.push(\n        olEvents.listen(\n          this.drawnFeatures,\n          'add',\n          this.handleFeaturesAdd_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          mapDiv,\n          'contextmenu',\n          this.handleMapContextMenu_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          this.translate_,\n          'translateend',\n          this.handleTranslateEnd_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          this.rotate_,\n          'rotateend',\n          this.handleRotateEnd_,\n          this\n        )\n      );\n\n      this.featureOverlay.removeFeature(ruleFeature);\n      this.featureOverlay.addFeature(cloneFeature);\n\n      this.registerInteractions_();\n\n      toolMgr.registerTool(uid, this.drawToolActivate, false);\n      toolMgr.registerTool(uid, this.modifyToolActivate, true);\n      toolMgr.registerTool(uid, this.rotateToolActivate, false);\n      toolMgr.registerTool(uid, this.translateToolActivate, false);\n\n      this.modify_.setActive(true);\n\n      if (cloneFeature.getGeometry()) {\n        this.ngeoFeatureHelper_.setStyle(cloneFeature, true);\n      }\n\n    } else {\n      cloneFeature.setStyle(null);\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n\n      this.drawActive = false;\n\n      toolMgr.unregisterTool(uid, this.drawToolActivate);\n      toolMgr.unregisterTool(uid, this.modifyToolActivate);\n      toolMgr.unregisterTool(uid, this.rotateToolActivate);\n      toolMgr.unregisterTool(uid, this.translateToolActivate);\n\n      this.modify_.setActive(false);\n\n      this.unregisterInteractions_();\n\n      if (this.selectedFeatures.getLength()) {\n        this.featureOverlay.removeFeature(cloneFeature);\n      }\n      this.featureOverlay.addFeature(ruleFeature);\n\n      this.selectedFeatures.clear();\n    }\n  }\n\n  /**\n   * Initialize interactions by setting them inactive and decorating them\n   * @private\n   */\n  initializeInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      interaction.setActive(false);\n      ngeoMiscDecorate.interaction(interaction);\n    });\n  }\n\n  /**\n   * Register interactions by adding them to the map\n   * @private\n   */\n  registerInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      this.map.addInteraction(interaction);\n    });\n  }\n\n  /**\n   * Register interactions by removing them to the map\n   * @private\n   */\n  unregisterInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      this.map.removeInteraction(interaction);\n    });\n  }\n\n  /**\n   * @param {ol.Collection.Event} evt Event.\n   * @private\n   */\n  handleFeaturesAdd_(evt) {\n    // timeout to prevent double-click to zoom the map\n    this.timeout_(() => {\n\n      const clone = googAsserts.assertInstanceof(\n        this.clone, ngeoRuleGeometry);\n      const feature = clone.feature;\n\n      // (1) Apply geometry\n      const drawnFeature = googAsserts.assertInstanceof(\n        evt.element,\n        olFeature\n      );\n      const geometry = googAsserts.assertInstanceof(\n        drawnFeature.getGeometry(),\n        olGeomGeometry\n      );\n      clone.geometry = geometry;\n\n      // (2) Deactivate draw tools\n      this.drawActive = false;\n\n      // (3) Set properties, then style\n      const properties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        drawnFeature);\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(feature);\n      feature.setProperties(properties);\n      this.ngeoFeatureHelper_.setStyle(feature, true);\n\n      this.scope_.$apply();\n    });\n  }\n\n  /**\n   * Return the type of geometry used by the rule feature. Used in the template.\n   * @return {string} Geometry type.\n   * @export\n   */\n  getRuleGeometryType() {\n    const rule = googAsserts.assertInstanceof(this.rule, ngeoRuleGeometry);\n    return this.ngeoFeatureHelper_.getType(rule.feature);\n  }\n\n  /**\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleMapContextMenu_(evt) {\n\n    // (1) Remove previous menu, if any\n    this.removeMenu_();\n\n    // (2) Get feature at pixel\n    const pixel = this.map.getEventPixel(evt);\n    const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n    let feature = this.map.forEachFeatureAtPixel(\n      pixel,\n      (feature) => {\n        let ret = false;\n        if (olArray.includes(this.selectedFeatures.getArray(), feature)) {\n          ret = feature;\n        }\n        return ret;\n      }\n    );\n\n    feature = feature ? feature : null;\n\n    // (3) If the clicked feature is the selected one, plus if it has a certain\n    //     type of geometry, then show the menu\n    const actions = [];\n    if (feature) {\n\n      const type = this.ngeoFeatureHelper_.getType(feature);\n      const  gettextCatalog = this.gettextCatalog_;\n\n      if (type == ngeoGeometryType.CIRCLE ||\n          type == ngeoGeometryType.LINE_STRING ||\n          type == ngeoGeometryType.POLYGON ||\n          type == ngeoGeometryType.RECTANGLE) {\n        actions.push({\n          cls: 'fa fa-arrows',\n          label: gettextCatalog.getString('Move'),\n          name: 'move'\n        });\n      }\n      if (type == ngeoGeometryType.LINE_STRING ||\n          type == ngeoGeometryType.POLYGON ||\n          type == ngeoGeometryType.RECTANGLE) {\n        actions.push({\n          cls: 'fa fa-rotate-right',\n          label: gettextCatalog.getString('Rotate'),\n          name: 'rotate'\n        });\n      }\n    }\n\n    if (actions.length) {\n      // (4) Create and show menu\n      this.menu_ = new ngeoMenu({\n        actions\n      });\n\n      olEvents.listen(\n        this.menu_,\n        'actionclick',\n        this.handleMenuActionClick_,\n        this\n      );\n      this.map.addOverlay(this.menu_);\n\n      this.menu_.open(coordinate);\n\n      evt.preventDefault();\n      evt.stopPropagation();\n\n      this.scope_.$apply();\n    }\n  }\n\n  /**\n   * Remove contextual menu, if any.\n   * @private\n   */\n  removeMenu_() {\n    if (this.menu_) {\n      olEvents.unlisten(\n        this.menu_,\n        'actionclick',\n        this.handleMenuActionClick_,\n        this\n      );\n      this.map.removeOverlay(this.menu_);\n      this.menu_ = null;\n    }\n  }\n\n  /**\n   * @param {ngeox.MenuEvent} evt Event.\n   * @private\n   */\n  handleMenuActionClick_(evt) {\n    const action = evt.detail.action;\n\n    switch (action) {\n      case 'move':\n        this.translate_.setActive(true);\n        this.scope_.$apply();\n        break;\n      case 'rotate':\n        this.rotate_.setActive(true);\n        this.scope_.$apply();\n        break;\n      default:\n        console.log(`FIXME - support: ${action}`);\n        break;\n    }\n  }\n\n  /**\n   * @param {ngeox.RotateEvent} evt Event.\n   * @private\n   */\n  handleRotateEnd_(evt) {\n    this.rotate_.setActive(false);\n    this.scope_.$apply();\n  }\n\n  /**\n   * @param {ol.interaction.Translate.Event} evt Event.\n   * @private\n   */\n  handleTranslateEnd_(evt) {\n    this.translate_.setActive(false);\n    this.scope_.$apply();\n  }\n\n};\n\n\n/**\n * The rule component is bound to a `ngeo.rule.Rule` object and shows UI\n * components to be able to edit its properties, such as: operator, expression,\n * etc. The actual properties depend on the type of rule.\n *\n * Also, changes are not made on-the-fly. A button must be clicked for the\n * changes to be applied to the rule.\n */\nexports.component('ngeoRule', {\n  bindings: {\n    'featureOverlay': '<',\n    'map': '<',\n    'rule': '<',\n    'toolGroup': '<'\n  },\n  controller: exports.RuleController_,\n  templateUrl: ngeoRuleTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleComponent from 'ngeo/filter/ruleComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFilter', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoFilterRuleComponent.name,\n  ngeoMapFeatureOverlay.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/filter', require('./component.html'));\n});\n\n\nexports.value('ngeoFilterTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoFilterTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/filter';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoFilterTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoFilterTemplateUrl($attrs, ngeoFilterTemplateUrl) {\n  return ngeoFilterTemplateUrl($attrs);\n}\n\n\nexports.component('ngeoFilter', {\n  bindings: {\n    'aRuleIsActive': '=',\n    'customRules': '<',\n    // It's 'datasource' instead of 'dataSource', because that would require\n    // the attribute to be 'data-source', and Angular strips the 'data-'.\n    'datasource': '<',\n    'directedRules': '<',\n    'featureOverlay': '<',\n    'map': '<',\n    'toolGroup': '<'\n  },\n  controller: 'ngeoFilterController',\n  templateUrl: ngeoFilterTemplateUrl\n});\n\n/**\n * @private\n */\nexports.FilterController_ = class {\n\n  /**\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoFilterController\n   */\n  constructor(gettextCatalog, $scope, $timeout, ngeoMapQuerent,\n    ngeoRuleHelper) {\n\n    // === Binding properties ===\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.aRuleIsActive;\n\n    /**\n     * @type {Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.customRules;\n\n    /**\n     * @type {!ngeo.datasource.OGC}\n     * @export\n     */\n    this.datasource;\n\n    /**\n     * @type {Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.directedRules;\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!ngeo.query.MapQuerent}\n     * @private\n     */\n    this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * @type {Array.<!ngeox.FilterCondition>}\n     * @export\n     */\n    this.conditions = [\n      {\n        text: gettextCatalog.getString('All'),\n        value: ngeoFilterCondition.AND\n      },\n      {\n        text: gettextCatalog.getString('At least one'),\n        value: ngeoFilterCondition.OR\n      },\n      {\n        text: gettextCatalog.getString('None'),\n        value: ngeoFilterCondition.NOT\n      }\n    ];\n\n    /**\n     * List of geometry attributes.\n     * @type {Array.<!ngeox.Attribute>}\n     * @export\n     */\n    this.geometryAttributes = [];\n\n    /**\n     * List of other attribute names.\n     * @type {Array.<!ngeox.Attribute>}\n     * @export\n     */\n    this.otherAttributes = [];\n\n    /**\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.ruleUnlisteners_ = {};\n  }\n\n\n  /**\n   * Called on initialization of the controller.\n   *\n   * Loop through the attributes of the data source and separated them in 2\n   * lists: geometry and the others. Then, apply the filters to the data source.\n   */\n  $onInit() {\n\n    this.scope_.$watch(\n      () => this.aRuleIsActive,\n      this.handleARuleIsActiveChange_.bind(this)\n    );\n\n    // (1) Separate the attributes in 2: geometry and the others.\n    const attributes = googAsserts.assert(this.datasource.attributes);\n    for (const attribute of attributes) {\n      if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n        this.geometryAttributes.push(attribute);\n      } else {\n        this.otherAttributes.push(attribute);\n      }\n    }\n\n    // (2) All rules that have geometry are added in the featureOverlay\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      this.registerRule_(rule);\n    }\n\n    // (3) Apply the filters\n    this.apply();\n  }\n\n\n  /**\n   * Called on destruction of the controller.\n   *\n   * Reset the `filterRules` of the data source back to `null`.\n   * Clear the feature overlay.\n   */\n  $onDestroy() {\n    if (this.datasource.filterRules !== null) {\n      this.datasource.filterRules = null;\n    }\n    this.featureOverlay.clear();\n  }\n\n\n  /**\n   * @return {boolean} True if at least one rule is currently defined.\n   * @export\n   */\n  hasARule() {\n    return [].concat(this.customRules, this.directedRules).length > 0;\n  }\n\n\n  /**\n   * Loop in all directed and custom rules. Apply the rules that have a proper\n   * value inside the data source, in the `filterRules` property.\n   * @export\n   */\n  apply() {\n    // (1) Reset\n    this.datasource.filterRules = null;\n\n    // (2) Then set if there are filter rules with value.\n    this.timeout_(() => {\n      const filterRules = this.getRulesWithValue_();\n      if (filterRules.length) {\n        this.datasource.filterRules = filterRules;\n        // The current query results are cleared when we apply a filter.\n        this.ngeoMapQuerent_.clear();\n      }\n    });\n  }\n\n\n  /**\n   * Loop in all directed and custom rules. Issue a request to obtain the data\n   * and show the result.\n   * @export\n   */\n  getData() {\n    const filterRules = this.getRulesWithValue_();\n\n    // No need to do anything if there's no rules.\n    if (!filterRules.length) {\n      return;\n    }\n\n    const dataSource = this.datasource;\n    const limit = 1000;\n    const map = this.map;\n    const projCode = map.getView().getProjection().getCode();\n    const filter = this.ngeoRuleHelper_.createFilter({\n      dataSource: dataSource,\n      filterRules: filterRules,\n      srsName: projCode\n    });\n    googAsserts.assert(filter);\n\n    this.ngeoMapQuerent_.issue({\n      dataSources: [dataSource],\n      filter: filter,\n      limit: limit,\n      map: map\n    });\n  }\n\n\n  /**\n   * Loop in all directed and custom rules and collect those with a value.\n   * @return {Array.<!ngeo.rule.Rule>} Rules with value.\n   * @private\n   */\n  getRulesWithValue_() {\n    const filterRules = [];\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.value) {\n        filterRules.push(rule);\n      }\n    }\n    return filterRules;\n  }\n\n\n  /**\n   * Create and add a new custom rule using an attribute. The rule is activated\n   * after being created.\n   * @param {!ngeox.Attribute} attribute Attribute to use to create the custom\n   * rule.\n   * @export\n   */\n  createAndAddCustomRule(attribute) {\n    const rule = this.ngeoRuleHelper_.createRuleFromAttribute(attribute, true);\n    this.registerRule_(rule);\n    this.customRules.push(rule);\n\n    // Activate asynchronously allows the toolActivate manager to do its magic,\n    this.timeout_(() => {\n      rule.active = true;\n    }, 1);\n  }\n\n\n  /**\n   * @param {!ngeox.FilterCondition} condition Condition to set.\n   * @export\n   */\n  setCondition(condition) {\n    if (this.datasource.filterCondition !== condition.value) {\n      this.datasource.filterCondition = condition.value;\n    }\n  }\n\n  /**\n   * Remove a custom rule. Deactivate it first, then give time to the\n   * `ngeo-rule` directive to manage the deactivation of the rule.\n   * @param {!ngeo.rule.Rule} rule Custom rule to remove.\n   * @export\n   */\n  removeCustomRule(rule) {\n    rule.active = false;\n    this.timeout_(() => {\n      olArray.remove(this.customRules, rule);\n      this.unregisterRule_(rule);\n      rule.destroy();\n    });\n  }\n\n  /**\n   * @param {!ngeo.rule.Rule} rule Rule.\n   * @export\n   */\n  registerRule_(rule) {\n    const uid = olBase.getUid(rule);\n    this.ruleUnlisteners_[uid] = this.scope_.$watch(\n      () => rule.active,\n      this.handleRuleActiveChange_.bind(this)\n    );\n\n    if (rule instanceof ngeoRuleGeometry) {\n      this.featureOverlay.addFeature(rule.feature);\n    }\n  }\n\n  /**\n   * @param {!ngeo.rule.Rule} rule Rule.\n   * @export\n   */\n  unregisterRule_(rule) {\n    const uid = olBase.getUid(rule);\n    const unlistener = this.ruleUnlisteners_[uid];\n    googAsserts.assert(unlistener);\n    unlistener();\n    delete this.ruleUnlisteners_[uid];\n\n    if (rule instanceof ngeoRuleGeometry) {\n      this.featureOverlay.removeFeature(rule.feature);\n    }\n  }\n\n  /**\n   * Called when the active property of a rule changes. Set the `aRuleIsActive`\n   * property accordingly.\n   * @private\n   */\n  handleRuleActiveChange_() {\n    let aRuleIsActive = false;\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.active) {\n        aRuleIsActive = true;\n        break;\n      }\n    }\n    this.aRuleIsActive = aRuleIsActive;\n  }\n\n  /**\n   * Called when the `aRuleIsActive` property changes. Make sure that\n   * no rule is still active if the property is `false`.\n   * @private\n   */\n  handleARuleIsActiveChange_() {\n    if (this.aRuleIsActive) {\n      return;\n    }\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.active) {\n        rule.active = false;\n        break;\n      }\n    }\n  }\n\n};\n\nexports.controller('ngeoFilterController', exports.FilterController_);\n\n\nexport default exports;\n","/**\n * @module gmf.filters.filterselectorComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceHelper from 'gmf/datasource/Helper.js';\n\nimport gmfDatasourceOGC from 'gmf/datasource/OGC.js';\nimport gmfFiltersSavedFilters from 'gmf/filters/SavedFilters.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFilterComponent from 'ngeo/filter/component.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olArray from 'ol/array.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\nconst exports = angular.module('gmfFilterselector', [\n  gmfAuthenticationService.module.name,\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceHelper.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoMessageModalComponent.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoFilterComponent.name,\n  gmfFiltersSavedFilters.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/filters/filterselectorcomponent', require('./filterselectorcomponent.html'));\n});\n\nexports.value('gmfFilterselectorTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfFilterselectorTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/filters/filterselectorcomponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfFilterselectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfFilterselectorTemplateUrl($attrs, gmfFilterselectorTemplateUrl) {\n  return gmfFilterselectorTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n   *     The Gmf value service that determines the data source currently being\n   *     filtered.\n   * @param {gmf.datasource.Helper} gmfDataSourcesHelper Gmf data\n   *     sources helper service.\n   * @param {gmf.filters.SavedFilters} gmfSavedFilters Gmf saved filters service.\n   * @param {gmfx.User} gmfUser User.\n   * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n   * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo FeatureOverlay\n   *     manager\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfFilterselectorController\n   */\n  constructor($scope, $timeout, gettextCatalog, gmfDataSourceBeingFiltered,\n    gmfDataSourcesHelper, gmfSavedFilters, gmfUser, ngeoNotification,\n    ngeoFeatureOverlayMgr, ngeoRuleHelper\n  ) {\n\n    // Binding properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.active;\n\n    $scope.$watch(\n      () => this.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * The data source that can either be selected from the list or have\n     * its value set from an external source (for example: the layertree)\n     * and that requires to be ready before it can be filtered.\n     * @type {gmfx.datasource.DataSourceBeingFiltered}\n     * @export\n     */\n    this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n    $scope.$watch(\n      () => this.gmfDataSourceBeingFiltered.dataSource,\n      this.handleSelectedDataSourceChange_.bind(this)\n    );\n\n    /**\n     * @type {gmf.datasource.Helper}\n     * @private\n     */\n    this.gmfDataSourcesHelper_ = gmfDataSourcesHelper;\n\n    /**\n     * @type {gmf.filters.SavedFilters}\n     * @export\n     */\n    this.gmfSavedFilters = gmfSavedFilters;\n\n    // Close manage modal if the last item is removed.\n    $scope.$watchCollection(\n      () => this.gmfSavedFilters.currentDataSourceItems,\n      () => {\n        if (this.gmfSavedFilters.currentDataSourceItems.length === 0 &&\n           this.saveFilterManageModalShown) {\n          this.saveFilterManageModalShown = false;\n        }\n      }\n    );\n\n    /**\n     * @type {gmfx.User}\n     * @private\n     */\n    this.gmfUser_ = gmfUser;\n\n    $scope.$watch(\n      () => this.gmfUser_.functionalities,\n      this.handleGmfUserFunctionalitiesChange_.bind(this)\n    );\n\n    /**\n     * @type {ngeo.message.Notification}\n     * @private\n     */\n    this.ngeoNotification_ = ngeoNotification;\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay = googAsserts.assert(\n      ngeoFeatureOverlayMgr.getFeatureOverlay()\n    );\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n\n    // Inner properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.aRuleIsActive = false;\n\n    /**\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.customRules = null;\n\n    /**\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.directedRules = null;\n\n    /**\n     * @type {Array.<gmf.datasource.OGC>}\n     * @export\n     */\n    this.filtrableDataSources = [];\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.filtrableLayerNodeNames_ = null;\n\n    /**\n     * @type {gmfx.datasource.DataSources}\n     * @private\n     */\n    this.gmfDataSources_ = gmfDataSourcesHelper.collection;\n\n    /**\n     * @type {Array.<ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * The data source ready to be filtered, after it has been selected and\n     * prepared.\n     * @type {?gmf.datasource.OGC}\n     * @export\n     */\n    this.readyDataSource = null;\n\n    /**\n     * @type {!gmf.filters.filterselectorComponent.Controller_.RuleCache}\n     * @private\n     */\n    this.ruleCache_ = {};\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.saveFilterSaveModalShown = false;\n\n    // When the modal closes, reset name\n    $scope.$watch(\n      () => this.saveFilterSaveModalShown,\n      () => {\n        this.saveFilterName = '';\n      }\n    );\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.saveFilterName = '';\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.saveFilterManageModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.enableDataSourceRegistration_ = false;\n\n    $scope.$watch(\n      () => this.enableDataSourceRegistration_,\n      this.handleEnableDataSourceRegistrationChange_.bind(this)\n    );\n\n    /**\n     * The name of the data source that should be automatically selected\n     * by this component.\n     * @type {string|undefined}\n     * @private\n     */\n    this.defaultFiltrableDataSourceName_;\n\n    // Initialize the data sources registration\n    this.toggleDataSourceRegistration_();\n  }\n\n\n  /**\n   * @private\n   */\n  handleGmfUserFunctionalitiesChange_() {\n    const usrFunc = this.gmfUser_.functionalities;\n    if (usrFunc && usrFunc['filterable_layers']) {\n      this.filtrableLayerNodeNames_ = usrFunc['filterable_layers'];\n    } else {\n      this.filtrableLayerNodeNames_ = null;\n    }\n    if (usrFunc &&\n        usrFunc['preset_layer_filter'] &&\n        usrFunc['preset_layer_filter'][0]\n    ) {\n      this.defaultFiltrableDataSourceName_ = usrFunc['preset_layer_filter'][0];\n    } else {\n      this.defaultFiltrableDataSourceName_ = undefined;\n    }\n    this.toggleDataSourceRegistration_();\n  }\n\n\n  /**\n   * @private\n   */\n  toggleDataSourceRegistration_() {\n    const newDataSourceRegistration = !!this.filtrableLayerNodeNames_;\n    if (this.enableDataSourceRegistration_ !== newDataSourceRegistration) {\n      this.enableDataSourceRegistration_ = newDataSourceRegistration;\n    }\n  }\n\n\n  /**\n   * Called when the active property changes. Toggle data source registration.\n   * Also, when deactivated, deselect data source.\n   * @param {boolean} active Active.\n   * @private\n   */\n  handleActiveChange_(active) {\n    if (!active) {\n      this.aRuleIsActive = false;\n      this.timeout_(() => {\n        this.gmfDataSourceBeingFiltered.dataSource = null;\n      });\n    }\n  }\n\n\n  /**\n   * @param {boolean} register Whether register the data sources or not.\n   * @private\n   */\n  handleEnableDataSourceRegistrationChange_(register) {\n    const keys = this.listenerKeys_;\n\n    if (register) {\n      // Listen to data sources being added/removed\n      keys.push(\n        olEvents.listen(this.gmfDataSources_, 'add', this.handleDataSourcesAdd_, this),\n        olEvents.listen(this.gmfDataSources_, 'remove', this.handleDataSourcesRemove_, this)\n      );\n\n      // Manage the data sources that are already in the collection\n      this.gmfDataSources_.forEach(this.registerDataSource_, this);\n\n    } else {\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n\n      // Remove data sources that are in the collection\n      this.filtrableDataSources.length = 0;\n    }\n  }\n\n\n  /**\n   * Called when a data source is added to the collection of ngeo data sources.\n   * If the data source is 'valid', add it to the list of filtrable data\n   * sources.\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = evt.element;\n    if (dataSource instanceof gmfDatasourceOGC) {\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If the data source is 'valid', remove it from the list of\n   * filtrable data sources.\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (dataSource instanceof gmfDatasourceOGC) {\n      this.unregisterDataSource_(dataSource);\n    }\n  }\n\n\n  /**\n   * Register a data source if filtrable.  If it's the first time that the\n   * data source is about to be registered, then the `filtrable` property\n   * is set. Otherwise, it's used.\n   *\n   * @param {gmf.datasource.OGC} dataSource Data source\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    if (dataSource.filtrable === null) {\n      dataSource.filtrable = this.isDataSourceFiltrable_(dataSource);\n    }\n\n    if (dataSource.filtrable) {\n      this.filtrableDataSources.push(dataSource);\n\n      if (this.defaultFiltrableDataSourceName_ !== undefined &&\n          dataSource.name === this.defaultFiltrableDataSourceName_\n      ) {\n        this.gmfDataSourceBeingFiltered.dataSource = dataSource;\n      }\n    }\n  }\n\n\n  /**\n   * Unregister a data source if it's filtrable. Also, if it's the one\n   * that was currently selected, deselect it.\n   * @param {gmf.datasource.OGC} dataSource Data source\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    if (dataSource.filtrable) {\n      olArray.remove(this.filtrableDataSources, dataSource);\n\n      if (this.gmfDataSourceBeingFiltered.dataSource === dataSource) {\n        this.gmfDataSourceBeingFiltered.dataSource = null;\n      }\n    }\n  }\n\n\n  /**\n   * Determines whether the data source is valid for addition (or removal) to\n   * the list of filtrable data sources or not.\n   *\n   * To be filtrable, the data source must:\n   *\n   *  1) have its name in the list of filtrable layer node names\n   *  2) support WFS\n   *  3) have only one ogcLayers defined\n   *  4) the ogcLayer must be queryable\n   *\n   * If 1) is true but not any of the others, then the server has not been\n   * configured properly. In this case, a warning notification can be shown.\n   *\n   * @param {gmf.datasource.OGC} dataSource GMF data source object\n   * @param {boolean=} opt_notify Whether to show a warning notification or not\n   *     in case of a data source that has its name is in the list of\n   *     filtrable layer node names but it doesn't match the other requirements.\n   *     Defaults to `true.`\n   * @return {boolean} Whether the data source is valid to add to the list or\n   *     not.\n   * @private\n   */\n  isDataSourceFiltrable_(dataSource, opt_notify) {\n    let filtrable = true;\n    const gettext = this.gettextCatalog_;\n    const notify = opt_notify !== false;\n    const names = googAsserts.assert(this.filtrableLayerNodeNames_);\n    const msgs = [];\n\n    // (1) The name of the DS must be in list of filtrable layer node names\n    if (olArray.includes(names, dataSource.name)) {\n\n      // (2) The DS must support WFS\n      if (!dataSource.supportsWFS) {\n        msgs.push(gettext.getString(\n          'The data source doesn\\'t support WFS, which is required ' +\n          'to fetch the attributes to build the filter rules.'\n        ));\n      }\n\n      // (3) The DS must have only one ogcLayer\n      if (!dataSource.ogcLayers || !dataSource.ogcLayers.length) {\n        msgs.push(gettext.getString(\n          'The data source must have only 1 ogcLayer defined.'\n        ));\n      } else if (!dataSource.ogcLayers[0].queryable) {\n        // (4) The ogcLayer must be queryable\n        msgs.push(gettext.getString(\n          'The ogcLayer within the data source must be queryable.'\n        ));\n      }\n\n      filtrable = !msgs.length;\n\n      // Notify if the name is in list of filtrable layer node names but\n      // there are missing requirements.\n      if (notify && !filtrable) {\n        const p1 = gettext.getString(\n          `The following data source is marked as being filtrable,\n          but is missing some requirements: `\n        );\n        const p2 = `${dataSource.name} (${dataSource.id}).`;\n        const p3 = gettext.getString(\n          `Please, contact your administrator about this.\n          Here are the reasons: `\n        );\n        msgs.unshift(`${p1} ${p2} ${p3}`);\n        console.warn(msgs.join(' '));\n        this.ngeoNotification_.notify({\n          msg: msgs.join(' '),\n          type: ngeoMessageMessage.Type.WARNING\n        });\n      }\n    } else {\n      filtrable = false;\n    }\n\n    return filtrable;\n  }\n\n  /**\n   * @param {?gmf.datasource.OGC} dataSource Newly selected data source\n   *     object.\n   * @private\n   */\n  handleSelectedDataSourceChange_(dataSource) {\n\n    this.aRuleIsActive = false;\n    this.customRules = null;\n    this.directedRules = null;\n    this.readyDataSource = null;\n    this.gmfSavedFilters.currentDataSourceId = null;\n\n    // No need to do anything if no data source is selected\n    if (!dataSource) {\n      return;\n    }\n\n    // A data source has been selected. Make sure the component is active.\n    if (!this.active) {\n      this.active = true;\n    }\n\n    this.gmfDataSourcesHelper_.prepareFiltrableDataSource(\n      dataSource\n    ).then((dataSource) => {\n\n      // Data source is ready. Get any existing rules or create new ones from\n      // the attributes\n      let item = this.getRuleCacheItem_(dataSource);\n      if (!item) {\n        item = {\n          customRules: [],\n          directedRules: []\n        };\n        this.setRuleCacheItem_(dataSource, item);\n        if (dataSource.gmfLayer.metadata &&\n            dataSource.gmfLayer.metadata.directedFilterAttributes &&\n            dataSource.gmfLayer.metadata.directedFilterAttributes.length\n        ) {\n          const directedAttributes =\n              dataSource.gmfLayer.metadata.directedFilterAttributes;\n          const attributes = googAsserts.assert(dataSource.attributes);\n          for (const attribute of attributes) {\n            if (olArray.includes(directedAttributes, attribute.name)) {\n              item.directedRules.push(\n                this.ngeoRuleHelper_.createRuleFromAttribute(attribute)\n              );\n            }\n          }\n        }\n      }\n\n      this.customRules = item.customRules;\n      this.directedRules = item.directedRules;\n      this.readyDataSource = dataSource;\n      this.gmfSavedFilters.currentDataSourceId = dataSource.id;\n\n    });\n  }\n\n  /**\n   * @param {ngeo.datasource.DataSource} dataSource Data source.\n   * @return {?gmf.filters.filterselectorComponent.Controller_.RuleCacheItem} Rule cache item.\n   * @private\n   */\n  getRuleCacheItem_(dataSource) {\n    return this.ruleCache_[dataSource.id] || null;\n  }\n\n  /**\n   * @param {ngeo.datasource.DataSource} dataSource Data source.\n   * @param {gmf.filters.filterselectorComponent.Controller_.RuleCacheItem} item Rule cache item.\n   * @private\n   */\n  setRuleCacheItem_(dataSource, item) {\n    this.ruleCache_[dataSource.id] = item;\n  }\n\n  /**\n   * @export\n   */\n  saveFilterShowModal() {\n    this.saveFilterSaveModalShown = true;\n  }\n\n  /**\n   * @export\n   */\n  saveFilterSave() {\n\n    const name = this.saveFilterName;\n    const dataSource = googAsserts.assert(this.readyDataSource);\n    const dataSourceId = dataSource.id;\n    const alreadyExist = (this.gmfSavedFilters.indexOfItem(\n      name, dataSourceId) !== -1);\n    const condition = dataSource.filterCondition;\n\n    const msg = this.gettextCatalog_.getString(\n      `A filter with the same name already exists.\n      Do you want to overwrite it?`\n    );\n    if (!alreadyExist || confirm(msg)) {\n      // (1) Serialize the existing custom and directed rules\n      const customRules = this.customRules ?\n        this.ngeoRuleHelper_.serializeRules(this.customRules) : [];\n      const directedRules = this.directedRules ?\n        this.ngeoRuleHelper_.serializeRules(this.directedRules) : [];\n\n      // (2) Ask the service to save it\n      const item = /** @type {!gmf.filters.SavedFilters.Item} */ ({\n        condition,\n        customRules,\n        dataSourceId,\n        directedRules,\n        name\n      });\n      this.gmfSavedFilters.save(item);\n\n      // (3) Close popup, which resets the name\n      this.saveFilterSaveModalShown = false;\n    }\n  }\n\n  /**\n   * Load a saved filter item, replacing the current rules.\n   * @param {!gmf.filters.SavedFilters.Item} filterItem Filter item.\n   * @export\n   */\n  saveFilterLoadItem(filterItem) {\n\n    const dataSource = googAsserts.assert(this.readyDataSource);\n\n    // (1) Reset current rules\n    this.customRules = null;\n    this.directedRules = null;\n\n    const customRules = this.ngeoRuleHelper_.createRules(\n      filterItem.customRules);\n    const directedRules = this.ngeoRuleHelper_.createRules(\n      filterItem.directedRules);\n\n    // Timeout, which ensures the destruction of the previous filter component\n    // and the creation of a new one\n    this.timeout_(() => {\n      // (2) Set rules\n      this.customRules = customRules;\n      this.directedRules = directedRules;\n\n      // (3) Set condition\n      dataSource.filterCondition = filterItem.condition;\n\n      // (4) Update cache item\n      const cacheItem = googAsserts.assert(this.getRuleCacheItem_(dataSource));\n      cacheItem.customRules = customRules;\n      cacheItem.directedRules = directedRules;\n    });\n  }\n\n  /**\n   * @export\n   */\n  saveFilterManage() {\n    this.saveFilterManageModalShown = true;\n  }\n\n  /**\n   * Remove a saved filter item.\n   * @param {!gmf.filters.SavedFilters.Item} item Filter item.\n   * @export\n   */\n  saveFilterRemoveItem(item) {\n    this.gmfSavedFilters.remove(item);\n  }\n\n};\n\n\n/**\n * @typedef {Object.<number, !gmf.filters.filterselectorComponent.Controller_.RuleCacheItem>}\n */\nexports.Controller_.RuleCache;\n\n\n/**\n * @typedef {{\n *     customRules: (Array.<ngeo.rule.Rule>),\n *     directedRules: (Array.<ngeo.rule.Rule>)\n * }}\n */\nexports.Controller_.RuleCacheItem;\n\n\nexports.component('gmfFilterselector', {\n  bindings: {\n    active: '=',\n    map: '<',\n    toolGroup: '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfFilterselectorTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.filters.module\n */\nimport gmfFiltersFilterselectorComponent from 'gmf/filters/filterselectorComponent.js';\nimport gmfFiltersSavedFilters from 'gmf/filters/SavedFilters.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfFiltersModule', [\n  gmfFiltersFilterselectorComponent.name,\n  gmfFiltersSavedFilters.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.timeSliderComponent\n */\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\n\nimport 'jquery-ui/ui/widgets/slider.js';\nimport 'angular-ui-slider';\nimport './timeslider.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeTimeSliderComponent', [\n  ngeoMiscWMSTime.module.name,\n  'ui.slider',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree/timesliderComponent', require('./timesliderComponent.html'));\n});\n\n\n/**\n * Provide a directive to select a single date or a range of dates with a slider\n * Example:\n *\n *      <gmf-time-slider\n *          gmf-time-slider-time=\"{\n *            maxValue: '2013-12-31T00:00:00Z',\n *            minValue: '2006-01-01T00:00:00Z',\n *            mode: 'range'}\"\n *          gmf-time-slider-on-date-selected=\"ctrl.onDateSelected(time)\">\n *      </gmf-time-slider>\n *\n * @htmlAttribute {ngeox.TimeProperty} gmf-time-slider-time parameter for initialization.\n * @htmlAttribute {function()} gmf-time-slider-on-date-selected Expression evaluated after\n * date(s) changed\n * @param {angular.$timeout} $timeout angular timeout service\n * @param {angular.$filter} $filter angular filter service\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfTimeSlider\n */\nexports.directive_ = function($timeout, $filter) {\n  return {\n    scope: {\n      onDateSelected: '&gmfTimeSliderOnDateSelected',\n      time: '=gmfTimeSliderTime'\n    },\n    bindToController: true,\n    controller: 'gmfTimeSliderController as sliderCtrl',\n    restrict: 'AE',\n    templateUrl: 'gmf/layertree/timesliderComponent',\n    link: /** @type {!angular.LinkingFunctions} */ ({\n      pre: function preLink(scope, element, attrs, ctrl) {\n        ctrl.init();\n\n        ctrl.sliderOptions['stop'] = onSliderReleased_;\n        ctrl.sliderOptions['slide'] = computeDates_;\n\n        function onSliderReleased_(e, sliderUi) {\n          ctrl.onDateSelected({\n            time: computeDates_(e, sliderUi)\n          });\n          scope.$apply();\n        }\n\n        function computeDates_(e, sliderUi) {\n          let sDate, eDate, wmstime;\n          if (sliderUi.values) {\n            sDate = new Date(ctrl.getClosestValue_(sliderUi.values[0]));\n            eDate = new Date(ctrl.getClosestValue_(sliderUi.values[1]));\n            ctrl.dates = [sDate, eDate];\n            wmstime = {\n              start: sDate.getTime(),\n              end: eDate.getTime()\n            };\n          } else {\n            sDate = new Date(ctrl.getClosestValue_(sliderUi.value));\n            ctrl.dates = sDate;\n            wmstime = {\n              start: sDate.getTime()\n            };\n          }\n          scope.$apply();\n          return wmstime;\n        }\n      }\n    })\n  };\n};\n\n\nexports.directive('gmfTimeSlider', exports.directive_);\n\n\n/**\n * TimeSliderController - directive controller\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime WMSTime service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfTimeSliderController\n */\nexports.Controller_ = function($scope, ngeoWMSTime) {\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * Function called after date(s) changed/selected\n   * @function\n   * @export\n   */\n  this.onDateSelected;\n\n\n  /**\n   * A time object for directive initialization\n   * @type {ngeox.TimeProperty}\n   * @export\n   */\n  this.time;\n\n  /**\n   * If the component is used to select a date range\n   * @type {boolean}\n   * @export\n   */\n  this.isModeRange;\n\n  /**\n   * Minimal value of the slider (time in ms)\n   * @type {number}\n   * @export\n   */\n  this.minValue;\n\n  /**\n   * Maximal value of the slider (time in ms)\n   * @type {number}\n   * @export\n   */\n  this.maxValue;\n\n  /**\n   * Used when WMS time object has a property 'values' instead of an interval\n   * @type (?Array<number>)\n   */\n  this.timeValueList;\n\n  /**\n   * Default Slider options (used by ui-slider directive)\n   * @type {{\n   *  range : boolean,\n   *  min : number,\n   *  max : number\n   * }}\n   * @export\n   */\n  this.sliderOptions;\n\n  /**\n   * Model for the ui-slider directive (date in ms format)\n   * @type {Array.<number>|number}\n   * @export\n   */\n  this.dates;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  this.timeValueList = this.getTimeValueList_();\n\n  // Fetch the initial options for the component\n  const initialOptions_ = this.ngeoWMSTime_.getOptions(this.time);\n  this.isModeRange = this.time.mode === 'range';\n  this.minValue = initialOptions_.minDate;\n  this.maxValue = initialOptions_.maxDate;\n  this.dates = this.isModeRange ? [initialOptions_.values[0], initialOptions_.values[1]] :\n    initialOptions_.values;\n  this.sliderOptions = {\n    range: this.isModeRange,\n    min: this.minValue,\n    max: this.maxValue\n  };\n};\n\n/**\n * TimeSliderController.prototype.getTimeValueList_ - Get a list of time value instead\n * of using the wmstime interval as a list of possibles values\n * @private\n * @return {Array<number>}  - List of timestamp representing possible values\n */\nexports.Controller_.prototype.getTimeValueList_ = function() {\n  const wmsTime = this.time;\n  let timeValueList = null;\n  const minDate = new Date(this.minValue);\n  const maxDate = new Date(this.maxValue);\n\n  if (wmsTime.values) {\n    timeValueList = [];\n    wmsTime.values.forEach((date) => {\n      timeValueList.push(new Date(date).getTime());\n    });\n  } else {\n    const maxNbValues = 1024;\n    const endDate = new Date(minDate.getTime());\n    endDate.setFullYear(minDate.getFullYear() + maxNbValues * wmsTime.interval[0]);\n    endDate.setMonth(minDate.getMonth() + maxNbValues * wmsTime.interval[1],\n      minDate.getDate() + maxNbValues * wmsTime.interval[2]);\n    endDate.setSeconds(minDate.getSeconds() + maxNbValues * wmsTime.interval[3]);\n\n    if (endDate > maxDate) {\n      // Transform interval to a list of values when the number\n      // of values is below a threshold (maxNbValues)\n      timeValueList = [];\n      for (let i = 0; ; i++) {\n        const nextDate = new Date(minDate.getTime());\n        nextDate.setFullYear(minDate.getFullYear() + i * wmsTime.interval[0]);\n        nextDate.setMonth(minDate.getMonth() + i * wmsTime.interval[1],\n          minDate.getDate() + i * wmsTime.interval[2]);\n        nextDate.setSeconds(minDate.getSeconds() + i * wmsTime.interval[3]);\n        if (nextDate <= maxDate) {\n          timeValueList.push(nextDate.getTime());\n        } else {\n          break;\n        }\n      }\n    }\n  }\n  return timeValueList;\n};\n\n\n/**\n * Compute the closest available date from the given timestamp\n * @param  {number} timestamp selected datetime (in ms format)\n * @return {number} the closest available datetime (in ms format) from the timestamp\n * @private\n */\nexports.Controller_.prototype.getClosestValue_ = function(timestamp) {\n  if (timestamp <= this.minValue) {\n    return this.minValue;\n  }\n\n  if (timestamp >= this.maxValue) {\n    return this.maxValue;\n  }\n\n  if (this.timeValueList) {\n    // Time stops are defined as a list of values\n    let index;\n    let leftIndex = 0;\n    let rightIndex = this.timeValueList.length - 1;\n\n    while ((rightIndex - leftIndex) > 1) {\n      index = Math.floor((leftIndex + rightIndex) / 2);\n      if (this.timeValueList[index] >= timestamp) {\n        rightIndex = index;\n      } else {\n        leftIndex = index;\n      }\n    }\n\n    const leftDistance = Math.abs(this.timeValueList[leftIndex] - timestamp);\n    const rightDistance = Math.abs(this.timeValueList[rightIndex] - timestamp);\n\n    return this.timeValueList[leftDistance < rightDistance ? leftIndex : rightIndex];\n  } else {\n    // Time stops are defined by a start date plus an interval\n    const targetDate = new Date(timestamp);\n    const startDate = new Date(this.minValue);\n    let bestDate = new Date(this.minValue);\n    const maxDate = new Date(this.maxValue);\n    let bestDistance = Math.abs(targetDate - bestDate);\n\n    for (let i = 1; ; i++) {\n      // The start date should always be used as a reference\n      // because adding a month twice could differ from adding\n      // two months at once\n      const next = new Date(startDate.getTime());\n      next.setFullYear(startDate.getFullYear() + i * this.time.interval[0]);\n      next.setMonth(startDate.getMonth() + i *  this.time.interval[1],\n        startDate.getDate() + i * this.time.interval[2]);\n      next.setSeconds(startDate.getSeconds() + i * this.time.interval[3]);\n\n      if (next > maxDate) {\n        break;\n      }\n\n      const distance = Math.abs(targetDate - next);\n      if (distance <= bestDistance) {\n        bestDate = next;\n        bestDistance = distance;\n      } else {\n        break;\n      }\n    }\n\n    return bestDate.getTime();\n  }\n};\n\n\n/**\n * Format and localize time regarding a resolution.\n * @param {number} time (in ms format) timestamp to format and localize.\n * @return {string} Localized date string regarding the resolution.\n * @export\n */\nexports.Controller_.prototype.getLocalizedDate = function(time) {\n  return this.ngeoWMSTime_.formatTimeValue(time, this.time.resolution);\n};\n\n\nexports.controller('gmfTimeSliderController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.module\n */\nimport gmfLayertreeComponent from 'gmf/layertree/component.js';\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTimeSliderComponent from 'gmf/layertree/timeSliderComponent.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\n\nimport './common.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeModule', [\n  gmfLayertreeComponent.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTimeSliderComponent.name,\n  gmfLayertreeTreeManager.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.shareComponent\n */\nimport gmfPermalinkShareService from 'gmf/permalink/ShareService.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\nconst exports = angular.module('gmfPermalinkShareComponent', [\n  gmfPermalinkShareService.module.name,\n  ngeoStatemanagerLocation.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/permalink/shareComponent', require('./shareComponent.html'));\n});\n\n\nexports.value('gmfPermalinkShareTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfPermalinkShareTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/permalink/shareComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfPermalinkShareTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfPermalinkShareTemplateUrl($attrs, gmfPermalinkShareTemplateUrl) {\n  return gmfPermalinkShareTemplateUrl($attrs);\n}\n\n\n/**\n * Component to display a shortened permalink and share it by email\n * Example:\n *\n *      <gmf-share\n *        gmf-share-email=\"true\">\n *      </gmf-share>\n *\n * @htmlAttribute {boolean} gmf-share-email Enable emailing capability.\n * @type {!angular.Component}\n */\nexports.component_ = {\n  bindings: {\n    'enableEmail': '<gmfShareEmail'\n  },\n  controller: 'GmfShareController',\n  templateUrl: gmfPermalinkShareTemplateUrl\n};\nexports.component('gmfShare', exports.component_);\n\n\nclass ShareComponentController {\n  /**\n   * The controller for the share component\n   * @param {angular.Scope} $scope Scope.\n   * @param {ngeo.statemanager.Location} ngeoLocation ngeo Location service.\n   * @param {gmf.permalink.ShareService} gmfShareService service for sharing map.\n   * @param {angular.$q} $q Angular q service\n   * @param {angular.Attributes} $attrs Attributes.\n   * @constructor\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfShareController\n   */\n  constructor($scope, ngeoLocation, gmfShareService, $q, $attrs) {\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @type {gmf.permalink.ShareService}\n     * @private\n     */\n    this.gmfShareService_ = gmfShareService;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.$q_ = $q;\n\n    /**\n     * @type {ngeo.statemanager.Location}\n     * @private\n     */\n    this.ngeoLocation_ = ngeoLocation;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.enableEmail;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.shortLink;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.email;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.message;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.permalink_ = this.ngeoLocation_.getUriString();\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.showLengthWarning = this.permalink_.length > gmfPermalinkShareService.URL_MAX_LEN ||\n    ngeoLocation.getPath() > gmfPermalinkShareService.URL_PATH_MAX_LEN;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.successfullySent = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.errorOnsend = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.errorOnGetShortUrl = false;\n\n    this.getShortUrl();\n  }\n\n  /**\n   * Get the short version of the permalink if the email is not provided\n   * @export\n   */\n  getShortUrl() {\n    this.$q_.when(this.gmfShareService_.getShortUrl(this.permalink_))\n      .then((resp) => {\n        this.shortLink = resp.data.short_url;\n        this.errorOnGetShortUrl = false;\n      }, (resp) => {\n        this.shortLink = this.permalink;\n        this.errorOnGetShortUrl = true;\n      });\n  }\n\n  /**\n   * Send the short version of the permalink if the email is provided\n   * @export\n   */\n  sendShortUrl() {\n    if (this.$scope_['gmfShareForm'].$valid) {\n      this.$q_.when(this.gmfShareService_.sendShortUrl(this.permalink_, this.email, this.message))\n        .then((resp) => {\n          this.successfullySent = true;\n        }, (resp) => {\n          this.errorOnsend = true;\n        });\n    }\n  }\n}\n\nexports.controller('GmfShareController', ShareComponentController);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.module\n */\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfPermalinkShareService from 'gmf/permalink/ShareService.js';\nimport gmfPermalinkShareComponent from 'gmf/permalink/shareComponent.js';\n\nimport './share.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfPermalinkModule', [\n  gmfPermalinkPermalink.module.name,\n  gmfPermalinkShareService.module.name,\n  gmfPermalinkShareComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.Snapping\n */\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optional. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.resizemap\n */\nimport googAsserts from 'goog/asserts.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.scaleselector\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport * as olEvents from 'ol/events.js';\nimport 'bootstrap/js/dropdown.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/map/scaleselector';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/map/scaleselector', require('./scaleselector.html'));\n});\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optional. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nconst directive = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', directive);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nconst ScaleselectorController = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  googAsserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = ScaleselectorController.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nScaleselectorController.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nScaleselectorController.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nScaleselectorController.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nScaleselectorController.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nScaleselectorController.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nScaleselectorController.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController', ScaleselectorController);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.module\n */\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.map.component\n */\nimport gmfPermalinkModule from 'gmf/permalink/module.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkModule.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapModule.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/map', require('./component.html'));\n});\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: 'gmf/map'\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.map.mousepositionComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport olControlMousePosition from 'ol/control/MousePosition.js';\nimport * as olProj from 'ol/proj.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapMouseposition', [\n  ngeoMiscFilters.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/map/mousepositionComponent', require('./mousepositionComponent.html'));\n});\n\n\nexports.value('gmfMapMousepositionTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfMapMousepositionTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/map/mousepositionComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfMapMousepositionTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfMapMousepositionTemplateUrl($attrs, gmfMapMousepositionTemplateUrl) {\n  return gmfMapMousepositionTemplateUrl($attrs);\n}\n\n/**\n * Provide a component to display the mouse position coordinates depending\n * on the chosen projection. The component also provides a projection picker\n * to choose how the coordinates are displayed.\n * service.\n *\n * Example:\n *  <gmf-mouseposition gmf-mouseposition-map=\"ctrl.map\"\n *     gmf-mouseposition-projections=\"ctrl.projections\">\n *  </gmf-mouseposition>\n *\n * @htmlAttribute {ol.Map} gmf-mouseposition-map The map.\n * @htmlAttribute {Array.<gmfx.MousePositionProjection>}\n *    gmf-mouseposition-projection The list of the projections.\n *\n * @ngdoc component\n * @ngname gmfMouseposition\n */\nexports.component_ = {\n  controller: 'gmfMousepositionController as ctrl',\n  bindings: {\n    'map': '<gmfMousepositionMap',\n    'projections': '<gmfMousepositionProjections'\n  },\n  templateUrl: gmfMapMousepositionTemplateUrl\n};\n\nexports.component('gmfMouseposition',\n  exports.component_);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfMousepositionController\n */\nexports.Controller_ = function($element, $filter, $scope, gettextCatalog) {\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!Array.<!gmfx.MousePositionProjection>}\n   * @export\n   */\n  this.projections;\n\n  /**\n   * @type {!gmfx.MousePositionProjection}\n   * @export\n   */\n  this.projection;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type  {?ol.control.MousePosition}\n   * @private\n   */\n  this.control_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.$scope_.$on('gettextLanguageChanged', () => {\n    this.initOlControl_();\n  });\n\n  // Init control once, in case of applications that never set the language.\n  this.initOlControl_();\n};\n\n\n/**\n * Init the ol.control.MousePosition\n * @private\n */\nexports.Controller_.prototype.initOlControl_ = function() {\n  if (this.control_ !== null) {\n    this.map.removeControl(this.control_);\n  }\n\n  // function that apply the filter.\n  const formatFn = function(coordinates) {\n    const filterAndArgs = this.projection.filter.split(':');\n    const filter = this.$filter_(filterAndArgs.shift());\n    googAsserts.assertFunction(filter);\n    const args = filterAndArgs;\n    args.unshift(coordinates);\n    return filter.apply(this, args);\n  };\n\n  const gettextCatalog = this.gettextCatalog_;\n  this.control_ = new olControlMousePosition({\n    className: 'gmf-mouseposition-control',\n    coordinateFormat: formatFn.bind(this),\n    target: angular.element('.gmf-mouseposition-control-target', this.$element_)[0],\n    undefinedHTML: gettextCatalog.getString('Coordinates')\n  });\n\n  this.setProjection(this.projections[0]);\n\n  this.map.addControl(this.control_);\n};\n\n\n/**\n * @param {gmfx.MousePositionProjection} projection The new projection to use.\n * @export\n */\nexports.Controller_.prototype.setProjection = function(projection) {\n  this.control_.setProjection(olProj.get(projection.code));\n  this.projection = projection;\n};\n\nexports.controller('gmfMousepositionController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.map.module\n */\nimport gmfMapComponent from 'gmf/map/component.js';\nimport gmfMapMousepositionComponent from 'gmf/map/mousepositionComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapModule', [\n  gmfMapComponent.name,\n  gmfMapMousepositionComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.download.Csv\n */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\n/**\n * Service to generate and download a CSV file from tabular data.\n * Column headers are translated using {@link angularGettext.Catalog}.\n *\n * @param {angular.$injector} $injector Main injector.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoCsvDownload\n * @ngInject\n */\nconst exports = function($injector, gettextCatalog) {\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * File extension of the CSV file.\n   * @type {string}\n   * @private\n   */\n  this.encoding_ = $injector.has('ngeoCsvEncoding') ?\n    $injector.get('ngeoCsvEncoding') : 'utf-8';\n\n  /**\n   * File extension of the CSV file.\n   * @type {string}\n   * @private\n   */\n  this.extension_ = $injector.has('ngeoCsvExtension') ?\n    $injector.get('ngeoCsvExtension') : '.csv';\n\n  /**\n   * Whether to include the header in the exported file or not.\n   * @type {boolean}\n   * @private\n   */\n  this.includeHeader_ = $injector.has('ngeoCsvIncludeHeader') ?\n    $injector.get('ngeoCsvIncludeHeader') : true;\n\n  /**\n   * Quote character.\n   * @type {string}\n   * @private\n   */\n  this.quote_ = $injector.has('ngeoCsvQuote') ?\n    $injector.get('ngeoCsvQuote') : '\"';\n\n  /**\n   * Separator character.\n   * @type {string}\n   * @private\n   */\n  this.separator_ = $injector.has('ngeoCsvSeparator') ?\n    $injector.get('ngeoCsvSeparator') : ',';\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n};\n\n\n/**\n * Generate a CSV.\n *\n * @param {Array.<Object>} data Entries/objects to include in the CSV.\n * @param {Array.<ngeox.GridColumnDef>} columnDefs Column definitions.\n * @return {string} The CSV file as string.\n * @export\n */\nexports.prototype.generateCsv = function(data, columnDefs) {\n  if (data.length == 0 || columnDefs.length == 0) {\n    return '';\n  }\n\n  const translatedColumnHeaders = columnDefs.map(columnHeader => this.gettextCatalog_.getString(columnHeader.name));\n\n  const header = this.getRow_(translatedColumnHeaders);\n  const dataRows = data.map((values) => {\n    const rowValues = columnDefs.map(columnHeader => values[columnHeader.name]);\n    return this.getRow_(rowValues);\n  });\n\n  return this.includeHeader_ ? header + dataRows.join('') : dataRows.join('');\n};\n\n\n/**\n * @param {Array.<?>} values Values.\n * @return {string} CSV row.\n * @private\n */\nexports.prototype.getRow_ = function(values) {\n  const matchAllQuotesRegex = new RegExp(this.quote_, 'g');\n  const doubleQuote = this.quote_ + this.quote_;\n\n  const rowValues = values.map((value) => {\n    if (value !== undefined && value !== null) {\n      value = `${value}`;\n      // wrap each value into quotes and escape quotes with double quotes\n      return this.quote_ + value.replace(matchAllQuotesRegex, doubleQuote) + this.quote_;\n    } else {\n      return '';\n    }\n  });\n\n  return `${rowValues.join(this.separator_)}\\n`;\n};\n\n\n/**\n * Generate a CSV and start a download with the generated file.\n *\n * @param {Array.<Object>} data Entries/objects to include in the CSV.\n * @param {Array.<ngeox.GridColumnDef>} columnDefs Column definitions.\n * @param {string} fileName The CSV file name, without the extension.\n * @export\n */\nexports.prototype.startDownload = function(data, columnDefs, fileName) {\n  const fileContent = this.generateCsv(data, columnDefs);\n  this.download_(\n    fileContent, fileName, `text/csv;charset=${this.encoding_}`);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoCsvDownload', [\n  ngeoDownloadService.name\n]);\nexports.module.service('ngeoCsvDownload', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.grid.Config\n */\nimport * as olBase from 'ol/index.js';\n\n/**\n * @param {Array.<Object>|undefined} data Entries/objects to be shown in a grid.\n * @param {Array.<ngeox.GridColumnDef>|undefined} columnDefs Column definition of a grid.\n * @constructor\n * @struct\n * @export\n */\nconst exports = function(data, columnDefs) {\n  /**\n   * @type {Array.<Object>|undefined}\n   * @export\n   */\n  this.data = data;\n\n  /**\n   * @type {Array.<ngeox.GridColumnDef>|undefined}\n   * @export\n   */\n  this.columnDefs = columnDefs;\n\n  /**\n   * @type {!Object.<string, Object>}\n   * @export\n   */\n  this.selectedRows = {};\n};\n\n\n/**\n * Get an ID for a row.\n * @param {Object} attributes An entry/row.\n * @return {string} Unique id for this object.\n * @export\n */\nexports.getRowUid = function(attributes) {\n  return `${olBase.getUid(attributes)}`;\n};\n\n\n/**\n * Is the given row selected?\n * @param {Object} attributes An entry/row.\n * @return {boolean} True if already selected. False otherwise.\n * @export\n */\nexports.prototype.isRowSelected = function(attributes) {\n  return !!this.selectedRows[exports.getRowUid(attributes)];\n};\n\n\n/**\n * Returns the number of selected rows.\n * @return {number} Number of selected rows.\n * @export\n */\nexports.prototype.getSelectedCount = function() {\n  return Object.keys(this.selectedRows).length;\n};\n\n\n/**\n * Returns the selected rows.\n * @return {Array.<Object>} Selected rows in the current ordering.\n * @export\n */\nexports.prototype.getSelectedRows = function() {\n  return this.data.filter(row => this.isRowSelected(row));\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @public\n */\nexports.prototype.selectRow = function(attributes) {\n  const uid = exports.getRowUid(attributes);\n  this.selectedRows[uid] = attributes;\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @public\n */\nexports.prototype.toggleRow = function(attributes) {\n  const uid = exports.getRowUid(attributes);\n  const isSelected = this.isRowSelected(attributes);\n  if (isSelected) {\n    delete this.selectedRows[uid];\n  } else {\n    this.selectedRows[uid] = attributes;\n  }\n};\n\n\n/**\n * Select all rows.\n * @export\n */\nexports.prototype.selectAll = function() {\n  this.data.forEach((attributes) => {\n    this.selectRow(attributes);\n  });\n};\n\n\n/**\n * Deselect all rows.\n * @export\n */\nexports.prototype.unselectAll = function() {\n  for (const rowId in this.selectedRows) {\n    delete this.selectedRows[rowId];\n  }\n};\n\n\n/**\n * Invert selection.\n * @export\n */\nexports.prototype.invertSelection = function() {\n  this.data.forEach((attributes) => {\n    this.toggleRow(attributes);\n  });\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoGridConfig', []);\n\n\nexport default exports;\n","/**\n * @module ngeo.grid.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGridConfig from 'ngeo/grid/Config.js';\nimport * as olHas from 'ol/has.js';\n\nimport 'floatthead';\nimport 'angular-float-thead';\nimport 'font-awesome/css/font-awesome.css';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGrid', [\n  ngeoGridConfig.module.name,\n  ngeoMiscFilters.name,\n  'floatThead',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/grid', require('./component.html'));\n});\n\n\nexports.value('ngeoGridTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoGridTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/grid';\n  }\n);\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoGridTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoGridTemplateUrl($attrs, ngeoGridTemplateUrl) {\n  return ngeoGridTemplateUrl($attrs);\n}\n\n\n/**\n * A grid component for displaying tabular data. The columns of the grid\n * are sortable, rows can be selected with a single click (also in combination\n * with SHIFT and CTRL/Meta).\n *\n * Example:\n *\n *     <ngeo-grid\n *       ngeo-grid-configuration=\"::ctrl.gridConfiguration\"\n *     </ngeo-grid>\n *\n * @htmlAttribute {ngeo.grid.Config} ngeo-grid-configuration The\n * configuration to use.\n *\n * @ngdoc component\n * @ngname ngeoGrid\n */\nexports.component_ = {\n  controller: 'ngeoGridController as ctrl',\n  bindings: {\n    'configuration': '=ngeoGridConfiguration'\n  },\n  templateUrl: ngeoGridTemplateUrl\n};\n\nexports.component('ngeoGrid', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoGridController\n */\nexports.Controller_ = function($scope) {\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.grid.Config}\n   * @export\n   */\n  this.configuration;\n\n  /**\n   * @type {Object.<string, Object>}\n   * @export\n   */\n  this.selectedRows;\n\n  /**\n   * The name of the column used to sort the grid.\n   * @type {string}\n   * @export\n   */\n  this.sortedBy;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.sortAscending = true;\n\n  /**\n   * Configuration object for float-thead.\n   * @type {Object}\n   * @export\n   */\n  this.floatTheadConfig = {\n    'scrollContainer': function($table) {\n      return $table.closest('.ngeo-grid-table-container');\n    }\n  };\n};\n\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.selectedRows = this.configuration.selectedRows;\n};\n\n\n/**\n * Sort function that always puts undefined values to the bottom of the grid.\n * A new call will sort ascending. A next one will sort descending (and so\n * on).\n * @param {string} columnName The name of the column that should be used to\n *    sort the data.\n * @export\n */\nexports.Controller_.prototype.sort = function(columnName) {\n  this.sortAscending = this.sortedBy === columnName ? !this.sortAscending : true;\n  this.sortedBy = columnName;\n\n  const asc = this.sortAscending ? 1 : -1;\n  this.configuration.data.sort((attributes1, attributes2) => {\n    if (!attributes1[columnName]) {\n      return 1;\n    }\n    if (!attributes2[columnName]) {\n      return -1;\n    }\n    return attributes1[columnName] > attributes2[columnName] ? asc : -asc;\n  });\n};\n\n\n/**\n * Handler for clicks on a row.\n * @param {Object} attributes An entry/row.\n * @param {jQuery.Event} event Event.\n * @export\n */\nexports.Controller_.prototype.clickRow = function(attributes, event) {\n  const shiftKey = this.isShiftKeyOnly_(event);\n  const platformModifierKey = this.isPlatformModifierKeyOnly_(event);\n\n  this.clickRow_(attributes, shiftKey, platformModifierKey);\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @param {boolean} shiftKey Shift pressed?\n * @param {boolean} platformModifierKey CTRL/Meta pressed?\n * @private\n */\nexports.Controller_.prototype.clickRow_ = function(\n  attributes, shiftKey, platformModifierKey) {\n\n  if (shiftKey && !platformModifierKey) {\n    this.selectRange_(attributes);\n  } else if (!shiftKey && platformModifierKey) {\n    this.configuration.toggleRow(attributes);\n  } else {\n    const isSelected = this.configuration.isRowSelected(attributes);\n    this.configuration.unselectAll();\n    if (!isSelected) {\n      this.configuration.selectRow(attributes);\n    }\n  }\n};\n\n\n/**\n * Selects all rows between the given row and the closest already selected row.\n * @param {Object} attributes An entry/row.\n * @private\n */\nexports.Controller_.prototype.selectRange_ = function(attributes) {\n  const targetUid = ngeoGridConfig.getRowUid(attributes);\n  const data = this.configuration.data;\n\n  if (this.configuration.isRowSelected(attributes)) {\n    return;\n  }\n\n  // get the position of the clicked and all already selected rows\n  /** @type {number|undefined} */\n  let posClickedRow = undefined;\n  const posSelectedRows = [];\n  for (let i = 0; i < data.length; i++) {\n    const currentRow = data[i];\n    const currentUid = ngeoGridConfig.getRowUid(currentRow);\n\n    if (targetUid === currentUid) {\n      posClickedRow = i;\n    } else if (this.configuration.isRowSelected(currentRow)) {\n      posSelectedRows.push(i);\n    }\n  }\n  googAsserts.assert(posClickedRow !== undefined);\n\n  if (posSelectedRows.length == 0) {\n    // if no other row is selected, select the clicked one and stop\n    this.configuration.selectRow(attributes);\n  }\n\n  // find the selected row which is the closest to the clicked row\n  let distance = Infinity;\n  let posClosestRow = posSelectedRows[0];\n  for (let j = 0; j < posSelectedRows.length; j++) {\n    const currentPos = posSelectedRows[j];\n    const currentDistance = Math.abs(currentPos - posClickedRow);\n    if (distance > currentDistance) {\n      distance = currentDistance;\n      posClosestRow = currentPos;\n    }\n    // note: this could be optimized because `posSelectedRows` is ordered.\n  }\n\n  // then select all rows between the clicked one and the closest\n  const rangeStart = (posClickedRow < posClosestRow) ? posClickedRow : posClosestRow;\n  const rangeEnd = (posClickedRow > posClosestRow) ? posClickedRow : posClosestRow;\n\n  for (let l = rangeStart; l <= rangeEnd; l++) {\n    this.configuration.selectRow(data[l]);\n  }\n};\n\n\n/**\n * Prevent the default browser behaviour of selecting text\n * when selecting multiple rows with SHIFT or CTRL/Meta.\n * @param {jQuery.Event} event Event.\n * @export\n */\nexports.Controller_.prototype.preventTextSelection = function(event) {\n  const shiftKey = this.isShiftKeyOnly_(event);\n  const platformModifierKey = this.isPlatformModifierKeyOnly_(event);\n\n  if (shiftKey || platformModifierKey) {\n    event.preventDefault();\n  }\n};\n\n\n/**\n * Same as `ol.events.condition.platformModifierKeyOnly`.\n * @param {jQuery.Event} event Event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @private\n */\nexports.Controller_.prototype.isPlatformModifierKeyOnly_ = function(event) {\n  return !event.altKey &&\n    (olHas.MAC ? event.metaKey : event.ctrlKey) &&\n    !event.shiftKey;\n};\n\n\n/**\n * Same as `ol.events.condition.shiftKeyOnly`.\n * @param {jQuery.Event} event Event.\n * @return {boolean} True if only the shift key is pressed.\n * @private\n */\nexports.Controller_.prototype.isShiftKeyOnly_ = function(event) {\n  return (\n    !event.altKey &&\n      !(event.metaKey || event.ctrlKey) &&\n      event.shiftKey);\n};\n\n\nexports.controller('ngeoGridController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.query.gridComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadCsv from 'ngeo/download/Csv.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\n/** @suppress {extraRequire} */\nimport ngeoGridComponent from 'ngeo/grid/component.js';\n\nimport ngeoGridConfig from 'ngeo/grid/Config.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/** @suppress {extraRequire} - required for `ngeoQueryResult` */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olCollection from 'ol/Collection.js';\nimport * as olExtent from 'ol/extent.js';\nimport olMap from 'ol/Map.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryGridComponent', [\n  ngeoDownloadCsv.module.name,\n  ngeoDownloadService.name,\n  ngeoGridComponent.name,\n  ngeoGridConfig.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.value('gmfDisplayquerygridTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfDisplayquerygridTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/query/gridComponent';\n  }\n);\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/query/gridComponent', require('./gridComponent.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfDisplayquerygridTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfDisplayquerygridTemplateUrl($element, $attrs, gmfDisplayquerygridTemplateUrl) {\n  return gmfDisplayquerygridTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provides a component to display results of the {@link ngeo.queryResult} in a\n * grid and shows related features on the map using\n * the {@link ngeo.map.FeatureOverlayMgr}.\n *\n * You can override the default component's template by setting the\n * value `gmfDisplayquerygridTemplateUrl`.\n *\n * Features displayed on the map use a default style but you can override these\n * styles by passing ol.style.Style objects as attributes of this component.\n *\n * Note: the following ng-class need to be present in the interface <body> element to display the footer\n * when the grid is active (initially there should be the code for the profile tool):\n *      <body ng-class=\"{'gmf-profile-chart-active': !!profileChartActive, 'gmf-query-grid-active': !!queryGridActive}\">\n *\n * Example:\n *\n *      <gmf-displayquerygrid\n *        gmf-displayquerygrid-map=\"ctrl.map\"\n *        gmf-displayquerygrid-featuresstyle=\"ctrl.styleForAllFeatures\"\n *        gmf-displayquerygrid-selectedfeaturestyle=\"ctrl.styleForTheCurrentFeature\">\n *      </gmf-displayquerygrid>\n *\n * @htmlAttribute {boolean} gmf-displayquerygrid-active The active state of the component.\n * @htmlAttribute {ol.style.Style} gmf-displayquerygrid-featuresstyle A style\n *     object for all features from the result of the query.\n * @htmlAttribute {ol.style.Style} gmf-displayquerygrid-selectedfeaturestyle A style\n *     object for the currently selected features.\n * @htmlAttribute {ol.Map} gmf-displayquerygrid-map The map.\n * @htmlAttribute {boolean?} gmf-displayquerygrid-removeemptycolumns Optional. Should\n *     empty columns be hidden? Default: `false`.\n * @htmlAttribute {number?} gmf-displayquerygrid-maxrecenterzoom Optional. Maximum\n *     zoom-level to use when zooming to selected features.\n * @htmlAttribute {gmfx.GridMergeTabs?} gmf-displayquerygrid-gridmergetabs Optional.\n *     Configuration to merge grids with the same attributes into a single grid.\n *\n * @ngdoc component\n * @ngname gmfDisplayquerygrid\n */\nexports.component_ = {\n  controller: 'GmfDisplayquerygridController as ctrl',\n  bindings: {\n    'active': '=?gmfDisplayquerygridActive',\n    'featuresStyleFn': '&gmfDisplayquerygridFeaturesstyle',\n    'selectedFeatureStyleFn': '&gmfDisplayquerygridSelectedfeaturestyle',\n    'getMapFn': '&gmfDisplayquerygridMap',\n    'removeEmptyColumnsFn': '&?gmfDisplayquerygridRemoveemptycolumns',\n    'maxResultsFn': '&?gmfDisplayquerygridMaxresults',\n    'maxRecenterZoomFn': '&?gmfDisplayquerygridMaxrecenterzoom',\n    'mergeTabs': '<?gmfDisplayquerygridMergetabs'\n  },\n  templateUrl: gmfDisplayquerygridTemplateUrl\n};\n\n\nexports.component('gmfDisplayquerygrid', exports.component_);\n\n\n/**\n * Controller for the query grid.\n *\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.QueryResult} ngeoQueryResult ngeo query result.\n * @param {!ngeo.query.MapQuerent} ngeoMapQuerent ngeo map querent service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.download.Csv} ngeoCsvDownload CSV download service.\n * @param {!angular.JQLite} $element Element.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisplayquerygridController\n */\nexports.Controller_ = function($injector, $scope, ngeoQueryResult, ngeoMapQuerent,\n  ngeoFeatureOverlayMgr, $timeout, ngeoCsvDownload, $element) {\n\n  const queryOptions = /** @type {ngeox.QueryOptions} */ (\n    $injector.has('ngeoQueryOptions') ?\n      $injector.get('ngeoQueryOptions') : {});\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {!ngeox.QueryResult}\n   * @export\n   */\n  this.ngeoQueryResult = ngeoQueryResult;\n\n  /**\n   * @type {!ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n  /**\n   * @type {!ngeo.download.Csv}\n   * @private\n   */\n  this.ngeoCsvDownload_ = ngeoCsvDownload;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.maxResults = queryOptions.limit !== undefined ? queryOptions.limit : 50;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.pending = false;\n\n  /**\n   * @type {!Object.<string, gmfx.GridSource>}\n   * @export\n   */\n  this.gridSources = {};\n\n  /**\n   * IDs of the grid sources in the order they were loaded.\n   * @type {!Array.<string>}\n   * @export\n   */\n  this.loadedGridSources = [];\n\n  /**\n   * The id of the currently shown query source.\n   * @type {string|number|null}\n   * @export\n   */\n  this.selectedTab = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.removeEmptyColumns_ = false;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.maxRecenterZoom;\n\n  /**\n   * @type {!gmfx.GridMergeTabs}\n   * @export\n   */\n  this.mergeTabs = {};\n\n  /**\n   * A mapping between row uid and the corresponding feature for each\n   * source.\n   * @type {!Object.<string, Object.<string, ol.Feature>>}\n   * @private\n   */\n  this.featuresForSources_ = {};\n\n  // Styles for displayed features (features) and selected features\n  // (highlightFeatures_) (user can set both styles).\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.highlightFeatures_ = new olCollection();\n\n  /**\n   * Filename\n   * @type {string}\n   * @private\n   */\n  this.filename_ = $injector.has('gmfCsvFilename') ?\n    $injector.get('gmfCsvFilename') : 'query-results.csv';\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  // Watch the ngeo query result service.\n  this.$scope_.$watchCollection(\n    () => ngeoQueryResult,\n    (newQueryResult, oldQueryResult) => {\n      if (newQueryResult !== oldQueryResult) {\n        this.updateData_();\n      }\n    });\n\n  /**\n   * An unregister function returned from `$scope.$watchCollection` for\n   * \"on-select\" changes (when rows are selected/unselected).\n   * @type {?function()}\n   * @private\n   */\n  this.unregisterSelectWatcher_ = null;\n};\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.removeEmptyColumns_ = this['removeEmptyColumnsFn'] ? this['removeEmptyColumnsFn']() === true : false;\n  this.maxRecenterZoom = this['maxRecenterZoomFn'] ? this['maxRecenterZoomFn']() : undefined;\n\n  const featuresOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  featuresOverlay.setFeatures(this.features_);\n  const featuresStyle = this['featuresStyleFn']();\n  if (featuresStyle !== undefined) {\n    googAsserts.assertInstanceof(featuresStyle, olStyleStyle);\n    featuresOverlay.setStyle(featuresStyle);\n  }\n\n  const highlightFeaturesOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  highlightFeaturesOverlay.setFeatures(this.highlightFeatures_);\n  let highlightFeatureStyle = this['selectedFeatureStyleFn']();\n  if (highlightFeatureStyle !== undefined) {\n    googAsserts.assertInstanceof(highlightFeatureStyle, olStyleStyle);\n  } else {\n    const fill = new olStyleFill({color: [255, 0, 0, 0.6]});\n    const stroke = new olStyleStroke({color: [255, 0, 0, 1], width: 2});\n    highlightFeatureStyle = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke,\n      zIndex: 10\n    });\n  }\n  highlightFeaturesOverlay.setStyle(highlightFeatureStyle);\n\n  const mapFn = this['getMapFn'];\n  if (mapFn) {\n    const map = mapFn();\n    googAsserts.assertInstanceof(map, olMap);\n    this.map_ = map;\n  }\n};\n\n/**\n * Returns a list of grid sources in the order they were loaded.\n * @export\n * @return {Array.<gmfx.GridSource>} Grid sources.\n */\nexports.Controller_.prototype.getGridSources = function() {\n  return this.loadedGridSources.map(sourceLabel => this.gridSources[sourceLabel]);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateData_ = function() {\n  // close if there are no results\n  if (this.ngeoQueryResult.total === 0 && !this.hasOneWithTooManyResults_()) {\n    const oldActive = this.active;\n    this.clear();\n    if (oldActive) {\n      // don't close if there are pending queries\n      this.active = this.ngeoQueryResult.pending;\n      this.pending = this.ngeoQueryResult.pending;\n    }\n    return;\n  }\n\n  this.active = true;\n  this.pending = false;\n  let sources = this.ngeoQueryResult.sources;\n  // merge sources if requested\n  if (Object.keys(this.mergeTabs).length > 0) {\n    sources = this.getMergedSources_(sources);\n  }\n\n  // create grids (only for source with features or with too many results)\n  sources.forEach((source) => {\n    if (source.tooManyResults) {\n      this.makeGrid_(null, source);\n    } else {\n      source.id = this.escapeValue(source.id);\n      const features = source.features;\n      if (features.length > 0) {\n        this.collectData_(source);\n      }\n    }\n  });\n\n  if (this.loadedGridSources.length === 0) {\n    // if no grids were created, do not show\n    this.active = false;\n    return;\n  }\n\n  // keep the first existing navigation tab open\n  if (this.selectedTab === null || !((`${this.selectedTab}`) in this.gridSources)) {\n    // selecting the tab is done in a timeout, because otherwise in rare cases\n    // `ng-class` might set the `active` class on multiple tabs.\n    this.$timeout_(() => {\n      const firstSourceId = this.loadedGridSources[0];\n      this.selectTab(this.gridSources[firstSourceId]);\n    }, 0);\n  }\n};\n\n\n/**\n * @private\n * @return {boolean} If one of the source has too many results.\n */\nexports.Controller_.prototype.hasOneWithTooManyResults_ = function() {\n  return this.ngeoQueryResult.sources.some(source => source.tooManyResults);\n};\n\n/**\n * Returns the value with all symbols and spaces replaced by an underscore.\n * @param {string|number} value A value to escape.\n * @returns {string|number} value An escaped value.\n * @export\n */\nexports.Controller_.prototype.escapeValue = function(value) {\n  // Work-around for Number.isInteger() when not always getting a number ...\n  if (Number.isInteger(/** @type {number} */ (value))) {\n    return value;\n  } else {\n    const toEscape = /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\ |]/g;\n    if (value.match(toEscape) !== null) {\n      return value.replace(toEscape, '_');\n    } else {\n      return value;\n    }\n  }\n};\n\n\n/**\n * Returns if the given grid source is selected?\n * @export\n * @param {gmfx.GridSource} gridSource Grid source.\n * @return {boolean} Is selected?\n */\nexports.Controller_.prototype.isSelected = function(gridSource) {\n  return this.selectedTab === gridSource.source.label;\n};\n\n\n/**\n * Try to merge the mergable sources.\n * @param {Array.<ngeox.QueryResultSource>} sources Sources.\n * @return {Array.<ngeox.QueryResultSource>} The merged sources.\n * @private\n */\nexports.Controller_.prototype.getMergedSources_ = function(sources) {\n  const allSources = [];\n  /** @type {Object.<string, ngeox.QueryResultSource>} */\n  const mergedSources = {};\n\n  sources.forEach((source) => {\n    // check if this source can be merged\n    const mergedSource = this.getMergedSource_(source, mergedSources);\n\n    if (mergedSource === null) {\n      // this source should not be merged, add as is\n      allSources.push(source);\n    }\n  });\n\n  for (const mergedSourceId in mergedSources) {\n    allSources.push(mergedSources[mergedSourceId]);\n  }\n\n  return allSources;\n};\n\n\n/**\n * Check if the given source should be merged. If so, an artificial source\n * that will contain the features of all mergable sources is returned. If not,\n * `null` is returned.\n * @param {ngeox.QueryResultSource} source Source.\n * @param {Object.<string, ngeox.QueryResultSource>} mergedSources Merged sources.\n * @return {?ngeox.QueryResultSource} A merged source of null if the source should\n *    not be merged.\n * @private\n */\nexports.Controller_.prototype.getMergedSource_ = function(source, mergedSources) {\n  let mergeSourceId = null;\n\n  for (const currentMergeSourceId in this.mergeTabs) {\n    const sourceLabels = this.mergeTabs[currentMergeSourceId];\n    const containsSource = sourceLabels.some(sourceLabel => sourceLabel == source.label);\n    if (containsSource) {\n      mergeSourceId = currentMergeSourceId;\n      break;\n    }\n  }\n\n  if (mergeSourceId === null) {\n    // this source should not be merged\n    return null;\n  }\n\n  /** @type {ngeox.QueryResultSource} */\n  let mergeSource;\n  if (mergeSourceId in mergedSources) {\n    mergeSource = mergedSources[mergeSourceId];\n  } else {\n    mergeSource = {\n      features: [],\n      id: mergeSourceId,\n      label: mergeSourceId,\n      limit: this.maxResults,\n      pending: false,\n      queried: true,\n      tooManyResults: false,\n      totalFeatureCount: undefined\n    };\n    mergedSources[mergeSourceId] = mergeSource;\n  }\n\n  // add features of source to merge source\n  source.features.forEach((feature) => {\n    mergeSource.features.push(feature);\n  });\n\n  // if one of the source has too many results, the resulting merged source will\n  // also be marked with `tooManyResults` and will not contain any features.\n  mergeSource.tooManyResults = mergeSource.tooManyResults || source.tooManyResults;\n  if (mergeSource.tooManyResults) {\n    mergeSource.totalFeatureCount = (mergeSource.totalFeatureCount !== undefined) ?\n      mergeSource.totalFeatureCount + mergeSource.features.length : mergeSource.features.length;\n    mergeSource.features = [];\n  }\n  if (source.totalFeatureCount !== undefined) {\n    mergeSource.totalFeatureCount = (mergeSource.totalFeatureCount !== undefined) ?\n      mergeSource.totalFeatureCount + source.totalFeatureCount : source.totalFeatureCount;\n  }\n\n  return mergeSource;\n};\n\n\n/**\n * Collect all features in the queryResult object.\n * @param {ngeox.QueryResultSource} source Result source.\n * @private\n */\nexports.Controller_.prototype.collectData_ = function(source) {\n  const features = source.features;\n  const allProperties = [];\n  const featureGeometriesNames = [];\n  const featuresForSource = {};\n  let properties, featureGeometryName;\n  features.forEach((feature) => {\n    properties = feature.getProperties();\n    if (properties !== undefined) {\n      // Keeps distinct geometry names to remove theme later.\n      featureGeometryName = feature.getGeometryName();\n      if (featureGeometriesNames.indexOf(featureGeometryName) === -1) {\n        featureGeometriesNames.push(featureGeometryName);\n      }\n\n      allProperties.push(properties);\n      featuresForSource[ngeoGridConfig.getRowUid(properties)] = feature;\n    }\n  });\n\n  this.cleanProperties_(allProperties, featureGeometriesNames);\n  if (allProperties.length > 0) {\n    const gridCreated = this.makeGrid_(allProperties, source);\n    if (gridCreated) {\n      this.featuresForSources_[`${source.label}`] = featuresForSource;\n    }\n  }\n};\n\n\n/**\n * Remove all unwanted columns.\n * @param {Array.<Object>} allProperties A row.\n * @param {Array.<string>} featureGeometriesNames Geometry names.\n * @private\n */\nexports.Controller_.prototype.cleanProperties_ = function(\n  allProperties, featureGeometriesNames) {\n  allProperties.forEach((properties) => {\n    featureGeometriesNames.forEach((featureGeometryName) => {\n      delete properties[featureGeometryName];\n    });\n    delete properties['boundedBy'];\n    delete properties['ngeo_feature_type_'];\n  });\n\n  if (this.removeEmptyColumns_ === true) {\n    this.removeEmptyColumnsFn_(allProperties);\n  }\n};\n\n\n/**\n * Remove columns that will be completely empty between each properties.\n * @param {Array.<Object>} allProperties A row.\n * @private\n */\nexports.Controller_.prototype.removeEmptyColumnsFn_ = function(\n  allProperties) {\n  // Keep all keys that correspond to at least one value in a properties object.\n  const keysToKeep = [];\n  let i, key;\n  for (key in allProperties[0]) {\n    for (i = 0; i < allProperties.length; i++) {\n      if (allProperties[i][key] !== undefined) {\n        keysToKeep.push(key);\n        break;\n      }\n    }\n  }\n  // Get all keys that previously always refers always to an empty value.\n  let keyToRemove;\n  allProperties.forEach((properties) => {\n    keyToRemove = [];\n    for (key in properties) {\n      if (keysToKeep.indexOf(key) === -1) {\n        keyToRemove.push(key);\n      }\n    }\n    // Remove these keys.\n    keyToRemove.forEach((key) => {\n      delete properties[key];\n    });\n  });\n};\n\n\n/**\n * @param {?Array.<Object>} data Grid rows.\n * @param {ngeox.QueryResultSource} source Query source.\n * @return {boolean} Returns true if a grid was created.\n * @private\n */\nexports.Controller_.prototype.makeGrid_ = function(data, source) {\n  const sourceLabel = `${source.label}`;\n  let gridConfig = null;\n  if (data !== null) {\n    gridConfig = this.getGridConfiguration_(data);\n    if (gridConfig === null) {\n      return false;\n    }\n  }\n  if (this.loadedGridSources.indexOf(sourceLabel) == -1) {\n    this.loadedGridSources.push(sourceLabel);\n  }\n  this.gridSources[sourceLabel] = {\n    configuration: gridConfig,\n    source: source\n  };\n  return true;\n};\n\n\n/**\n * @param {Array.<!Object>} data Grid rows.\n * @return {?ngeo.grid.Config} Grid config.\n * @private\n */\nexports.Controller_.prototype.getGridConfiguration_ = function(\n  data) {\n  googAsserts.assert(data.length > 0);\n  const clone = {};\n  Object.assign(clone, data[0]);\n  delete clone.ol_uid;\n  const columns = Object.keys(clone);\n\n  /** @type {Array.<ngeox.GridColumnDef>} */\n  const columnDefs = [];\n  columns.forEach((column) => {\n    columnDefs.push(/** @type {ngeox.GridColumnDef} */ ({\n      name: column\n    }));\n  });\n\n  if (columnDefs.length > 0) {\n    return new ngeoGridConfig(data, columnDefs);\n  } else {\n    // no columns, do not show grid\n    return null;\n  }\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.active = false;\n  this.pending = false;\n  this.gridSources = {};\n  this.loadedGridSources = [];\n  this.selectedTab = null;\n  this.tooManyResults = false;\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n  this.ngeoMapQuerent_.clear();\n  this.featuresForSources_ = {};\n  if (this.unregisterSelectWatcher_) {\n    this.unregisterSelectWatcher_();\n  }\n};\n\n\n/**\n * Select the tab for the given grid source.\n * @param {gmfx.GridSource} gridSource Grid source.\n * @export\n */\nexports.Controller_.prototype.selectTab = function(gridSource) {\n  const source = gridSource.source;\n  this.selectedTab = source.label;\n\n  if (this.unregisterSelectWatcher_) {\n    this.unregisterSelectWatcher_();\n    this.unregisterSelectWatcher_ = null;\n  }\n\n  if (gridSource.configuration !== null) {\n    this.unregisterSelectWatcher_ = this.$scope_.$watchCollection(\n      () => gridSource.configuration.selectedRows,\n      (newSelected, oldSelectedRows) => {\n        if (Object.keys(newSelected) !== Object.keys(oldSelectedRows)) {\n          this.onSelectionChanged_();\n        }\n      });\n  }\n  this.updateFeatures_(gridSource);\n\n  this.reflowGrid_();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.reflowGrid_ = function() {\n  // This is a \"work-around\" to make sure that the grid is rendered correctly.\n  // When a pane is activated by setting `this.selectedTab`, the class `active`\n  // is not yet set on the pane. That's why the class is set manually, and\n  // after the pane is shown (in the next digest loop), the grid table can\n  // be refreshed.\n  const id = this.escapeValue(this.selectedTab || '');\n  const activePane = this.$element_.find(`div.tab-pane#${id}`);\n  activePane.removeClass('active').addClass('active');\n  this.$timeout_(() => {\n    activePane.find('div.ngeo-grid-table-container table')['trigger']('reflow');\n  });\n};\n\n\n/**\n * Called when the row selection has changed.\n * @private\n */\nexports.Controller_.prototype.onSelectionChanged_ = function() {\n  if (this.selectedTab === null) {\n    return;\n  }\n\n  const gridSource = this.gridSources[`${this.selectedTab}`];\n  this.updateFeatures_(gridSource);\n};\n\n\n/**\n * @param {gmfx.GridSource} gridSource Grid source\n * @private\n */\nexports.Controller_.prototype.updateFeatures_ = function(gridSource) {\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n\n  if (gridSource.configuration === null) {\n    return;\n  }\n\n  const sourceLabel = `${gridSource.source.label}`;\n  const featuresForSource = this.featuresForSources_[sourceLabel];\n  const selectedRows = gridSource.configuration.selectedRows;\n\n  for (const rowId in featuresForSource) {\n    const feature = featuresForSource[rowId];\n    if (rowId in selectedRows) {\n      this.highlightFeatures_.push(feature);\n    } else {\n      this.features_.push(feature);\n    }\n  }\n};\n\n\n/**\n * Get the currently shown grid source.\n * @export\n * @return {gmfx.GridSource|null} Grid source.\n */\nexports.Controller_.prototype.getActiveGridSource = function() {\n  if (this.selectedTab === null) {\n    return null;\n  } else {\n    return this.gridSources[`${this.selectedTab}`];\n  }\n};\n\n\n/**\n * Returns if a row of the currently active grid is selected?\n * @export\n * @return {boolean} Is one selected?\n */\nexports.Controller_.prototype.isOneSelected = function() {\n  const source = this.getActiveGridSource();\n  if (source === null || source.configuration === null) {\n    return false;\n  } else {\n    return source.configuration.getSelectedCount() > 0;\n  }\n};\n\n\n/**\n * Returns the number of selected rows of the currently active grid.\n * @export\n * @return {number} The number of selected rows.\n */\nexports.Controller_.prototype.getSelectedRowCount = function() {\n  const source = this.getActiveGridSource();\n  if (source === null || source.configuration === null) {\n    return 0;\n  } else {\n    return source.configuration.getSelectedCount();\n  }\n};\n\n\n/**\n * Select all rows of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.selectAll = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.selectAll();\n  }\n};\n\n\n/**\n * Deselect all rows of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.unselectAll = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.unselectAll();\n  }\n};\n\n\n/**\n * Invert the selection of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.invertSelection = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.invertSelection();\n  }\n};\n\n\n/**\n * Zoom to the selected features.\n * @export\n */\nexports.Controller_.prototype.zoomToSelection = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    const extent = olExtent.createEmpty();\n    this.highlightFeatures_.forEach((feature) => {\n      olExtent.extend(extent, feature.getGeometry().getExtent());\n    });\n    const size = this.map_.getSize();\n    googAsserts.assert(size !== undefined);\n    const maxZoom = this.maxRecenterZoom;\n    this.map_.getView().fit(extent, {size, maxZoom});\n  }\n};\n\n\n/**\n * Start a CSV download for the selected features.\n * @export\n */\nexports.Controller_.prototype.downloadCsv = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    const columnDefs = source.configuration.columnDefs;\n    googAsserts.assert(columnDefs !== undefined);\n    const selectedRows = source.configuration.getSelectedRows();\n\n    this.ngeoCsvDownload_.startDownload(\n      selectedRows, columnDefs, this.filename_);\n  }\n};\n\n\nexports.controller('GmfDisplayquerygridController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.swipe\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMiscSwipe', []);\n\n\n/**\n * ===========================================\n * NOTE: It is an inversed copy of ngSwipe.\n * Angular ngSwipe assumes that vertical\n * swipe is a scroll.\n * For more details:\n * https://docs.angularjs.org/api/ngTouch/service/$swipe\n * ===========================================\n */\n\n/**\n * @ngdoc service\n * @name $verticalSwipe\n *\n * @description\n * The `$verticalSwipe` service is a service that abstracts the messier details of hold-and-drag swipe\n * behavior, to make implementing swipe-related directives more convenient.\n *\n * Requires the {@link ngTouch `ngTouch`} module to be installed.\n *\n * `$verticalSwipe` is used by the `ngeoSwipeUp` and `ngeoSwipeDown` directives.\n *\n * # Usage\n * The `$verticalSwipe` service is an object with a single method: `bind`. `bind` takes an element\n * which is to be watched for swipes, and an object with four handler functions. See the\n * documentation for `bind` below.\n */\n\nexports.factory('$verticalSwipe', [function() {\n  // The total distance in any direction before we make the call on swipe vs. scroll.\n  const MOVE_BUFFER_RADIUS = 10;\n\n  const POINTER_EVENTS = {\n    'mouse': {\n      start: 'mousedown',\n      move: 'mousemove',\n      end: 'mouseup'\n    },\n    'touch': {\n      start: 'touchstart',\n      move: 'touchmove',\n      end: 'touchend',\n      cancel: 'touchcancel'\n    },\n    'pointer': {\n      start: 'pointerdown',\n      move: 'pointermove',\n      end: 'pointerup',\n      cancel: 'pointercancel'\n    }\n  };\n\n  function getCoordinates(event) {\n    const originalEvent = event.originalEvent || event;\n    const touches = originalEvent.touches && originalEvent.touches.length ? originalEvent.touches : [originalEvent];\n    const e = (originalEvent.changedTouches && originalEvent.changedTouches[0]) || touches[0];\n\n    return {\n      x: e.clientX,\n      y: e.clientY\n    };\n  }\n\n  function getEvents(pointerTypes, eventType) {\n    const res = [];\n    angular.forEach(pointerTypes, (pointerType) => {\n      const eventName = POINTER_EVENTS[pointerType][eventType];\n      if (eventName) {\n        res.push(eventName);\n      }\n    });\n    return res.join(' ');\n  }\n\n  return {\n    /**\n     * @ngdoc method\n     * @name $verticalSwipe#bind\n     * @param {!angular.JQLite} element Element.\n     * @param {Object} eventHandlers - Event handlers object with `start`, `cancel` and `end` callbacks\n     * @param {Array<string>} pointerTypes - Types of pointer\n     *\n     * @description\n     * The main method of `$verticalSwipe`. It takes an element to be watched for swipe motions, and an\n     * object containing event handlers.\n     * The pointer types that should be used can be specified via the optional\n     * third argument, which is an array of strings `'mouse'`, `'touch'` and `'pointer'`. By default,\n     * `$verticalSwipe` will listen for `mouse`, `touch` and `pointer` events.\n     *\n     * The four events are `start`, `move`, `end`, and `cancel`. `start`, `move`, and `end`\n     * receive as a parameter a coordinates object of the form `{ x: 150, y: 310 }` and the raw\n     * `event`. `cancel` receives the raw `event` as its single parameter.\n     *\n     * `start` is called on either `mousedown`, `touchstart` or `pointerdown`. After this event, `$verticalSwipe` is\n     * watching for `touchmove`, `mousemove` or `pointermove` events. These events are ignored until the total\n     * distance moved in either dimension exceeds a small threshold.\n     *\n     * Once this threshold is exceeded, either the vertical or vertical delta is greater.\n     * - If the vertical distance is greater, this is a swipe and `move` and `end` events follow.\n     * - If the horizontal distance is greater, this is a scroll, and we let the browser take over.\n     *   A `cancel` event is sent.\n     *\n     * `move` is called on `mousemove`, `touchmove` and `pointermove` after the above logic has determined that\n     * a swipe is in progress.\n     *\n     * `end` is called when a swipe is successfully completed with a `touchend`, `mouseup` or `pointerup`.\n     *\n     * `cancel` is called either on a `touchcancel` or `pointercancel`  from the browser, or when we begin scrolling\n     * as described above.\n     *\n     */\n    bind(element, eventHandlers, pointerTypes) {\n      // Absolute total movement, used to control swipe vs. scroll.\n      let totalX, totalY;\n      // Coordinates of the start position.\n      let startCoords;\n      // Last event's position.\n      let lastPos;\n      // Whether a swipe is active.\n      let active = false;\n\n      pointerTypes = pointerTypes || ['mouse', 'touch', 'pointer'];\n      element.on(getEvents(pointerTypes, 'start'), (event) => {\n        startCoords = getCoordinates(event);\n        active = true;\n        totalX = 0;\n        totalY = 0;\n        lastPos = startCoords;\n        if (eventHandlers['start']) {\n          eventHandlers['start'](startCoords, event);\n        }\n      });\n      const events = getEvents(pointerTypes, 'cancel');\n      if (events) {\n        element.on(events, (event) => {\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n        });\n      }\n\n      element.on(getEvents(pointerTypes, 'move'), (event) => {\n        if (!active) {\n          return;\n        }\n\n        // Android will send a touchcancel if it thinks we're starting to scroll.\n        // So when the total distance (+ or - or both) exceeds 10px in either direction,\n        // we either:\n        // - On totalX > totalY, we send preventDefault() and treat this as a swipe.\n        // - On totalY > totalX, we let the browser handle it as a scroll.\n\n        if (!startCoords) {\n          return;\n        }\n        const coords = getCoordinates(event);\n\n        totalX += Math.abs(coords.x - lastPos.x);\n        totalY += Math.abs(coords.y - lastPos.y);\n\n        lastPos = coords;\n\n        if (totalX < MOVE_BUFFER_RADIUS && totalY < MOVE_BUFFER_RADIUS) {\n          return;\n        }\n\n        // One of totalX or totalY has exceeded the buffer, so decide on swipe vs. scroll.\n        if (totalX > totalY) {\n          // Allow native scrolling to take over.\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n          return;\n        } else {\n          // Prevent the browser from scrolling.\n          event.preventDefault();\n          if (eventHandlers['move']) {\n            eventHandlers['move'](coords, event);\n          }\n        }\n      });\n\n      element.on(getEvents(pointerTypes, 'end'), (event) => {\n        if (!active) {\n          return;\n        }\n        active = false;\n        if (eventHandlers['end']) {\n          eventHandlers['end'](getCoordinates(event), event);\n        }\n      });\n    }\n  };\n}]);\n\nexports.makeSwipeDirective_ = function(directiveName, direction, eventName) {\n  exports.directive(directiveName, ['$parse', '$verticalSwipe', function($parse, $verticalSwipe) {\n    // The maximum horizontal delta for a swipe should be less than 75px.\n    const MAX_HORIZONTAL_DISTANCE = 75;\n    // Horizontal distance should not be more than a fraction of the vertical distance.\n    const MAX_HORIZONTAL_RATIO = 0.3;\n    // At least a 30px lateral motion is necessary for a swipe.\n    const MIN_VERTICAL_DISTANCE = 30;\n\n    return function(scope, element, attr) {\n      const swipeHandler = $parse(attr[directiveName]);\n\n      let startCoords, valid;\n\n      function validSwipe(coords) {\n        // Check that it's within the coordinates.\n        // Absolute vertical distance must be within tolerances.\n        // Horizontal distance, we take the current X - the starting X.\n        // This is negative for downward swipes and positive for upward swipes.\n        // After multiplying by the direction (-1 for down, +1 for up), legal swipes\n        // (ie. same direction as the directive wants) will have a positive delta and\n        // illegal ones a negative delta.\n        // Therefore this delta must be positive, and larger than the minimum.\n        if (!startCoords) {\n          return false;\n        }\n        const deltaY = (coords.y - startCoords.y) * direction;\n        const deltaX = Math.abs(coords.x - startCoords.x);\n        return valid && // Short circuit for already-invalidated swipes.\n            deltaX < MAX_HORIZONTAL_DISTANCE &&\n            deltaY > 0 &&\n            deltaY > MIN_VERTICAL_DISTANCE &&\n            deltaX / deltaY < MAX_HORIZONTAL_RATIO;\n      }\n\n      const pointerTypes = ['touch'];\n      if (!angular.isDefined(attr['ngeoSwipeDisableMouse'])) {\n        pointerTypes.push('mouse');\n      }\n      $verticalSwipe.bind(element, {\n        'start': function(coords, event) {\n          startCoords = coords;\n          valid = true;\n        },\n        'cancel': function(event) {\n          valid = false;\n        },\n        'end': function(coords, event) {\n          if (validSwipe(coords)) {\n            scope.$apply(() => {\n              element.triggerHandler(eventName);\n              swipeHandler(scope, {$event: event});\n            });\n          }\n        }\n      }, pointerTypes);\n    };\n  }]);\n};\n\n// Down is negative Y-coordinate, up is positive.\nexports.makeSwipeDirective_('ngeoSwipeDown', 1, 'swipedown');\nexports.makeSwipeDirective_('ngeoSwipeUp', -1, 'swipeup');\n\n\nexport default exports;\n","/**\n * @module gmf.query.windowComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscSwipe from 'ngeo/misc/swipe.js';\n\n/** @suppress {extraRequire} - required for `ngeoQueryResult` */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olCollection from 'ol/Collection.js';\nimport * as olObj from 'ol/obj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport 'jquery-ui/ui/widgets/resizable.js';\nimport 'angular-animate';\nimport 'angular-touch';\nimport 'bootstrap/js/collapse.js';\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryWindowComponent', [\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscSwipe.name,\n  ngeoQueryMapQuerent.module.name,\n  'ngAnimate',\n  'ngTouch',\n]);\n\n\nexports.config(['$animateProvider',\n  /**\n   * For performance reason, only perform animation on elements that have the\n   * `gmf-animatable` css class.\n   * @param {angular.$animateProvider} $animateProvider animate provider.\n   */\n  function($animateProvider) {\n    $animateProvider.classNameFilter(/gmf-animatable/);\n  }\n]);\n\n\nexports.value('gmfDisplayquerywindowTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfDisplayquerywindowTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/query/windowComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/query/windowComponent', require('./windowComponent.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfDisplayquerywindowTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfDisplayquerywindowTemplateUrl($element, $attrs, gmfDisplayquerywindowTemplateUrl) {\n  return gmfDisplayquerywindowTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component to display results of the {@link ngeo.queryResult}\n * and shows related features on the map using the {@link ngeo.map.FeatureOverlayMgr}.\n *\n * You can override the default component's template by setting the\n * value `gmfDisplayquerywindowTemplateUrl`.\n *\n * Features displayed on the map use a default style but you can override these\n * styles by passing ol.style.Style objects as attributes of this component.\n *\n * Example:\n *\n *      <gmf-displayquerywindow\n *        gmf-displayquerywindow-featuresstyle=\"ctrl.styleForAllFeatures\"\n *        gmf-displayquerywindow-selectedfeaturestyle=\"ctrl.styleForTheCurrentFeature\">\n *      </gmf-displayquerywindow>\n *\n * @htmlAttribute {ol.style.Style} gmf-displayquerywindow-featuresstyle A style\n *     object for all features from the result of the query.\n * @htmlAttribute {ol.style.Style} selectedfeaturestyle A style\n *     object for the current displayed feature.\n * @htmlAttribute {boolean=} defaultcollapsed If the query result window is\n *     collapsed.\n * @htmlAttribute {boolean} desktop If the component is used in the desktop\n *     application.\n * @htmlAttribute {boolean} showunqueriedlayers If also layers, that have not\n *     been queried for the last query, should be shown in the filter.\n *\n * @ngdoc component\n * @ngname gmfDisplayquerywindow\n */\nexports.component_ = {\n  controller: 'GmfDisplayquerywindowController as ctrl',\n  bindings: {\n    'draggableContainment': '<?gmfDisplayquerywindowDraggableContainment',\n    'featuresStyleFn': '&gmfDisplayquerywindowFeaturesstyle',\n    'selectedFeatureStyleFn': '&gmfDisplayquerywindowSelectedfeaturestyle',\n    'defaultCollapsedFn': '&?gmfDisplayquerywindowDefaultcollapsed',\n    'desktop': '=gmfDisplayquerywindowDesktop',\n    'showUnqueriedLayers': '=gmfDisplayquerywindowShowunqueriedlayers'\n  },\n  templateUrl: gmfDisplayquerywindowTemplateUrl\n};\n\n\nexports.component('gmfDisplayquerywindow', exports.component_);\n\n\n/**\n * @param {!jQuery} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.QueryResult} ngeoQueryResult ngeo query result.\n * @param {!ngeo.query.MapQuerent} ngeoMapQuerent ngeo map querent service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisplayquerywindowController\n */\nexports.Controller_ = function($element, $scope, ngeoQueryResult, ngeoMapQuerent,\n  ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {Element|string}\n   * @export\n   */\n  this.draggableContainment;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.desktop = false;\n\n  /**\n   * Is the window currently collapsed?\n   * When used for Desktop, it is shown non-collapsed.\n   * @type {boolean}\n   * @export\n   */\n  this.collapsed = !this.desktop;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.showUnqueriedLayers_ = false;\n\n  /**\n   * Object that is used to filter the source list in the template.\n   * @type {Object}\n   * @export\n   */\n  this.sourcesFilter = {'queried': true};\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @export\n   */\n  this.ngeoQueryResult = {\n    sources: [],\n    total: 0,\n    pending: false\n  };\n\n  /**\n   * @type {!ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.selectedSource = null;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.highlightFeatures_ = new olCollection();\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.source = null;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature = null;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.currentResult = -1;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isNext = true;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.animate = 0;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.open = false;\n\n  /**\n   * @const {!jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  $scope.$watchCollection(\n    () => ngeoQueryResult,\n    (newQueryResult, oldQueryResult) => {\n      this.updateQueryResult_(newQueryResult);\n      if (newQueryResult.total > 0) {\n        this.show();\n      } else if (oldQueryResult !== newQueryResult) {\n        this.close();\n      }\n    });\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.draggableContainment = this.draggableContainment || 'document';\n  this.desktop = this.desktop;\n  this.collapsed = this['defaultCollapsedFn'] ?\n    this['defaultCollapsedFn']() === true : !this.desktop;\n\n  this.showUnqueriedLayers_ = this['showUnqueriedLayers'] ?\n    this['showUnqueriedLayers'] === true : false;\n\n  this.sourcesFilter = this.showUnqueriedLayers_ ? {} : {'queried': true};\n\n  const featuresOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  featuresOverlay.setFeatures(this.features_);\n  const featuresStyle = this['featuresStyleFn']();\n  if (featuresStyle !== undefined) {\n    googAsserts.assertInstanceof(featuresStyle, olStyleStyle);\n    featuresOverlay.setStyle(featuresStyle);\n  }\n\n  const highlightFeaturesOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  highlightFeaturesOverlay.setFeatures(this.highlightFeatures_);\n  let highlightFeatureStyle = this['selectedFeatureStyleFn']();\n  if (highlightFeatureStyle !== undefined) {\n    googAsserts.assertInstanceof(highlightFeatureStyle, olStyleStyle);\n  } else {\n    const fill = new olStyleFill({color: [255, 0, 0, 0.6]});\n    const stroke = new olStyleStroke({color: [255, 0, 0, 1], width: 2});\n    highlightFeatureStyle = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke\n    });\n  }\n  highlightFeaturesOverlay.setStyle(highlightFeatureStyle);\n\n  if (this.desktop) {\n    this.element_.find('.gmf-displayquerywindow .windowcontainer').draggable({\n      'cancel': 'input,textarea,button,select,option,tr',\n      'containment': this.draggableContainment\n    });\n    this.element_.find('.gmf-displayquerywindow .windowcontainer').resizable({\n      'minHeight': 240,\n      'minWidth': 240\n    });\n  }\n};\n\n\n/**\n * Remove current displayed results then get new results from the\n * ngeoQueryResult service. Display all results on the map and display,\n * highlight the first feature.\n * @export\n */\nexports.Controller_.prototype.show = function() {\n  this.clear();\n  this.updateFeatures_();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateFeatures_ = function() {\n  this.setCurrentResult_(0, false);\n  if (this.source !== null) {\n    this.collectFeatures_();\n    this.highlightCurrentFeature_();\n    this.open = true;\n  }\n};\n\n/**\n * Select a source and a feature depending of the given position.\n * @param {number} position The index of the feature. If the position is bigger\n * than the length of the first source, get it in the next source. Etc.\n * @param {boolean} setHighlight True to set the highlight automatically.\n * @return {boolean} True if result has changed. False else.\n * @private\n */\nexports.Controller_.prototype.setCurrentResult_ = function(\n  position, setHighlight) {\n  let hasChanged = false;\n  if (position !== this.currentResult) {\n    let i, source, features;\n    const lastFeature = this.feature;\n    const sources = this.ngeoQueryResult.sources;\n    this.currentResult = position;\n    for (i = 0; i < sources.length; i++) {\n      source = sources[i];\n      if (this.selectedSource !== null && this.selectedSource !== source) {\n        // when filtering on a source, only consider features of the selected source\n        continue;\n      }\n      features = source.features;\n      if (position >= features.length) {\n        position -= features.length;\n      } else {\n        this.source = source;\n        this.feature = source.features[position];\n        hasChanged = true;\n        break;\n      }\n    }\n    if (setHighlight) {\n      this.highlightCurrentFeature_(lastFeature);\n    }\n  }\n  return hasChanged;\n};\n\n\n/**\n * Select the logical previous source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.previous = function() {\n  let position = this.currentResult - 1;\n  if (position < 0) {\n    position = this.getResultLength() - 1;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(false);\n  }\n};\n\n\n/**\n * Select the logical next source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.next = function() {\n  let position = this.currentResult + 1;\n  const positionMax = this.getResultLength() - 1;\n  if (position > positionMax) {\n    position = 0;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(true);\n  }\n};\n\n\n/**\n * Remove features without properties from the query result.\n * @param {ngeox.QueryResult} queryResult ngeo query result.\n * @private\n */\nexports.Controller_.prototype.updateQueryResult_ = function(queryResult) {\n  this.ngeoQueryResult.total = 0;\n  this.ngeoQueryResult.sources.length = 0;\n  for (let i = 0; i < queryResult.sources.length; i++) {\n    const source = queryResult.sources[i];\n    source.features = source.features.filter((feature) => {\n      googAsserts.assert(feature);\n      return !olObj.isEmpty(ngeoMiscFeatureHelper.getFilteredFeatureValues(feature));\n    });\n    this.ngeoQueryResult.sources.push(source);\n    this.ngeoQueryResult.total += source.features.length;\n  }\n};\n\n/**\n * Get the total count of features in the result of the query. If a source\n * has been select, only the number of features of that source are returned.\n * @return {number} Total number of features.\n * @export\n */\nexports.Controller_.prototype.getResultLength = function() {\n  if (this.selectedSource === null) {\n    return this.ngeoQueryResult.total;\n  } else {\n    return this.selectedSource.features.length;\n  }\n};\n\n\n/**\n * @return {boolean} If the first result is active.\n * @export\n */\nexports.Controller_.prototype.isFirst = function() {\n  return this.currentResult == 0;\n};\n\n\n/**\n * @return {boolean} If the last result is active.\n * @export\n */\nexports.Controller_.prototype.isLast = function() {\n  return this.currentResult == this.getResultLength() - 1;\n};\n\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * @return {Object?} Filtered properties of the current feature or null.\n * @export\n */\nexports.Controller_.prototype.getFeatureValues = function() {\n  if (!this.feature) {\n    return null;\n  }\n  return ngeoMiscFeatureHelper.getFilteredFeatureValues(this.feature);\n};\n\n\n/**\n * Special function that's used to set the \"animation\" value after to set the\n * \"isNext\" value. The aim is to wait on Angular to add a class (corresponding\n * to \"isNext\") on the DOM before to set the \"animation\" value and do the\n * animation.\n * @param {boolean} isNext used to indicate if the user wants to see the next\n * or the previous result.\n * @private\n */\nexports.Controller_.prototype.animate_ = function(isNext) {\n  this.isNext = isNext;\n  this.animate++;\n};\n\n\n/**\n * Collect all features in the queryResult object.\n * @private\n */\nexports.Controller_.prototype.collectFeatures_ = function() {\n  const sources = this.ngeoQueryResult.sources;\n  this.features_.clear();\n  for (let i = 0; i < sources.length; i++) {\n    const source = sources[i];\n    if (this.selectedSource !== null && this.selectedSource !== source) {\n      // when filtering on a source, only add features of the selected source\n      continue;\n    }\n    const features = source.features;\n    for (let ii = 0; ii < features.length; ii++) {\n      this.features_.push(features[ii]);\n    }\n  }\n};\n\n\n/**\n * Highlight the current displayed feature.\n * @param {ol.Feature=} opt_lastFeature last highlighted feature. Require if\n * it exists because it must be added to the 'non-selected' features collection.\n * @private\n */\nexports.Controller_.prototype.highlightCurrentFeature_ =\nfunction(opt_lastFeature) {\n  this.highlightFeatures_.clear();\n  this.features_.remove(this.feature);\n  this.highlightFeatures_.push(this.feature);\n  if (opt_lastFeature !== undefined) {\n    this.features_.push(opt_lastFeature);\n  }\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.close = function() {\n  this.open = false;\n  this.clear();\n  this.ngeoMapQuerent_.clear();\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.feature = null;\n  this.source = null;\n  this.currentResult = -1;\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n  this.selectedSource = null;\n};\n\n\n/**\n * @param {ngeox.QueryResultSource} source The source to select.\n * @export\n */\nexports.Controller_.prototype.setSelectedSource = function(source) {\n  if (source !== null && source.features.length <= 0) {\n    // sources with no results can not be selected\n    return;\n  }\n  this.clear();\n  this.selectedSource = source;\n  this.updateFeatures_();\n};\n\n\nexports.controller('GmfDisplayquerywindowController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.query.extraModule\n */\nimport gmfQueryGridComponent from 'gmf/query/gridComponent.js';\nimport gmfQueryWindowComponent from 'gmf/query/windowComponent.js';\n\nimport './grid.less';\nimport './window.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryExtraModule', [\n  gmfQueryGridComponent.name,\n  gmfQueryWindowComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.search.module\n */\nimport gmfSearchComponent from 'gmf/search/component.js';\nimport gmfSearchFulltextSearch from 'gmf/search/FulltextSearch.js';\n\nimport './search.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfSearchModule', [\n  gmfSearchComponent.name,\n  gmfSearchFulltextSearch.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.selectorComponent\n */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport * as olEvents from 'ol/events.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeSelectorComponent', [\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/theme/selectorComponent', require('./selectorComponent.html'));\n});\n\n\nexports.value('gmfThemeSelectorTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfThemeSelectorTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/theme/selectorComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfThemeSelectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfThemeSelectorTemplateUrl($attrs, gmfThemeSelectorTemplateUrl) {\n  return gmfThemeSelectorTemplateUrl($attrs);\n}\n\n\n/**\n * Note that this component works with the {@link gmf.layertree.TreeManager}.\n * Setting the theme will update the \"tree\" object of\n * this {@link gmf.layertree.TreeManager}.\n *\n * Example:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span ng-if=\"mainCtrl.gmfThemeManager.modeFlush\">\n *            <span translate>Theme:</span>\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.getThemeName()\" translate>Loading...</b>\n *            <b ng-if=\"mainCtrl.gmfThemeManager.getThemeName()\">{{mainCtrl.gmfThemeManager.getThemeName()|translate}}</b>\n *          </span>\n *          <span ng-if=\"!mainCtrl.gmfThemeManager.modeFlush\">\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.themeName\" translate>Themes</b>\n *          </span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *\n * The theme selector can operate in a 'flush' (as above) or 'add' mode. For more information\n * about these modes, refer to the documentation of {@link gmf.layertree.TreeManager}.\n *\n * Example in 'add' mode:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span translate>Themes</span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('gmfTreeManagerModeFlush', false);\n *        })();\n *      </script>\n *\n * @htmlAttribute {Function} gmf-themeselector-filter The themes filter.\n *\n * @type {!angular.Component}\n */\nexports.component_ = {\n  bindings: {\n    'filter': '<gmfThemeselectorFilter'\n  },\n  controller: 'gmfThemeselectorController',\n  templateUrl: gmfThemeSelectorTemplateUrl\n};\n\nexports.component('gmfThemeselector', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {gmf.theme.Manager} gmfThemeManager Tree manager service.\n * @param {gmf.theme.Themes} gmfThemes Themes service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfThemeselectorController\n */\nexports.Controller_ = function($scope, gmfThemeManager, gmfThemes) {\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = gmfThemeManager;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {Array.<Object>}\n   * @export\n   */\n  this.themes;\n\n  /**\n   * @type {Function|undefined}\n   * @export\n   */\n  this.filter;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(this.gmfThemes_, 'change', this.setThemes_, this));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n\n};\n\n/**\n * Store the loaded themes locally applying a filter (if any), then set the\n * current theme.\n * @private\n */\nexports.Controller_.prototype.setThemes_ = function() {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    // Keep only the themes dedicated to the theme switcher\n    this.themes = this.filter ? themes.filter(this.filter) : themes;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfTheme} theme Theme.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.Controller_.prototype.setTheme = function(theme, opt_silent) {\n  if (theme) {\n    this.gmfThemeManager.addTheme(theme, opt_silent);\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('gmfThemeselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.module\n */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeSelectorComponent from 'gmf/theme/selectorComponent.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeModule', [\n  gmfThemeSelectorComponent.name,\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.displaywindowComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\nimport 'font-awesome/css/font-awesome.css';\nimport 'jquery-ui/ui/widgets/resizable.js';\nimport 'jquery-ui/ui/widgets/draggable.js';\nimport 'angular-sanitize';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMessageDisplaywindowComponent', [\n  'ngSanitize',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/message/displaywindowComponent', require('./displaywindowComponent.html'));\n});\n\n\nexports.value('ngeoMessageDisplaywindowTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoMessageDisplaywindowTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/message/displaywindowComponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoMessageDisplaywindowTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoMessageDisplaywindowTemplateUrl($attrs, ngeoMessageDisplaywindowTemplateUrl) {\n  return ngeoMessageDisplaywindowTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!jQuery} $element Element.\n   * @param {!angular.$sce} $sce Angular sce service.\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!angular.$compile} $compile The compile provider.\n   * @private\n   * @ngInject\n   * @ngdoc controller\n   * @ngname ngeoDisplaywindowComponentController\n   */\n  constructor($element, $sce, $scope, $compile) {\n\n    // === Binding Properties ===\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.clearOnClose;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.content = null;\n\n    /**\n     * @type {?string}\n     */\n    this.contentTemplate = null;\n\n    /**\n     * @type {?angular.Scope}\n     */\n    this.contentScope = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.draggable;\n\n    /**\n     * @type {Element|string}\n     * @export\n     */\n    this.draggableContainment;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.desktop;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.height = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.open;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.resizable;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.title = null;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.url = null;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.width = null;\n\n\n    // === Injected Properties ===\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {!angular.$sce}\n     * @private\n     */\n    this.sce_ = $sce;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {angular.$compile}\n     * @private\n     */\n    this.compile_ = $compile;\n  }\n\n  /**\n   * Called on initialization of the component.\n   */\n  $onInit() {\n\n    // Initialize binding properties\n    this.clearOnClose = this.clearOnClose !== false;\n    this.content = this.content || null;\n    this.contentTemplate = this.contentTemplate || null;\n    this.contentScope = this.contentScope || null;\n    this.desktop = this.desktop !== false;\n    this.draggableContainment = this.draggableContainment || 'document';\n    this.open = this.open === true;\n\n    this.draggable = this.draggable !== undefined ?\n      this.draggable : this.desktop;\n    this.resizable = this.resizable !== undefined ?\n      this.resizable : this.desktop;\n\n    // Draggable\n    if (this.draggable) {\n      this.element_.find('.ngeo-displaywindow .windowcontainer').draggable({\n        'containment': this.draggableContainment,\n        'handle': 'div.header'\n      });\n    }\n\n    // Resizable\n    if (this.resizable) {\n      this.element_.find('.ngeo-displaywindow .windowcontainer').resizable({\n        'minHeight': 240,\n        'minWidth': 240\n      });\n    }\n\n    if (this.contentTemplate) {\n      const scope = googAsserts.assert(this.contentScope || this.scope_);\n      const compiled = this.compile_(this.contentTemplate)(scope);\n      const displayWindow = this.element_.find('.ngeo-displaywindow .windowcontainer .animation-container');\n      displayWindow.append(/** @type {?} */ (compiled));\n    }\n  }\n\n  /**\n   * @export\n   */\n  close() {\n    this.open = false;\n    if (this.clearOnClose) {\n      this.clear_();\n    }\n  }\n\n  /**\n   * @return {!Object.<string, string>} CSS style when using width/height\n   * @export\n   */\n  get style() {\n    return {\n      'height': this.height || '240px',\n      'width': this.width || '240px'\n    };\n  }\n\n  /**\n   * @return {string|undefined} Trusted url.\n   * @export\n   */\n  get urlTrusted() {\n    if (this.url) {\n      return /** @type {string} */ (this.sce_.trustAsResourceUrl(this.url));\n    }\n  }\n\n  /**\n   * @export\n   */\n  clear_() {\n    this.content = null;\n    this.height = null;\n    this.title = null;\n    this.url = null;\n    this.width = null;\n  }\n};\n\n\n/**\n * The `ngeo-displaywindow` component is an alternative to the `ngeo.message.Popup`.\n * What they have in common:\n *\n * - support title\n * - support url to be shown in an iframe\n * - support plain HTML content\n * - support sizing, i.e. height and width.\n * - support being opened/closed\n *\n * The differences with the `ngeo.message.Popup` are:\n *\n * - it supports being dragged\n * - it supports being resized\n * - support angularjs template content\n *\n * Example:\n *      <ngeo-displaywindow\n *        class=\"window1\"\n *        url=\"::ctrl.window1Content\"\n *        desktop=\"::false\"\n *        open=\"::true\"\n *        title=\"'Window 1 - The simplest window (close kills it)'\">\n *      </ngeo-displaywindow>\n *\n * @htmlAttribute {boolean=} ngeo-displaywindow-clear-on-close Whether to clear the content on close or not.\n * @htmlAttribute {string=} ngeo-displaywindow-content The html content. If not provided, you must provide\n *     an url.\n * @htmlAttribute {string=} ngeo-displaywindow-content-template AngularJS template. It gets compiled during runtime\n * with the supplied scope (ngeo-displaywindow-content-scope).\n * @htmlAttribute {angular.Scope=} ngeo-displaywindow-content-scope Scope used for ngeo-displaywindow-content-template.\n * @htmlAttribute {boolean=} ngeo-displaywindow-desktop If true, the window is draggable and resizable. If\n *     not set, you must set manually both parameter.\n * @htmlAttribute {boolean=} ngeo-displaywindow-draggable Whether the window is draggable or not.\n * @htmlAttribute {string=} ngeo-displaywindow-draggable-containment The zone (CSS selector) where the window\n *     is authorized to be dragged.\n * @htmlAttribute {string=} ngeo-displaywindow-height The default height of the window.\n * @htmlAttribute {boolean=} ngeo-displaywindow-open Whether the window is open or not.\n * @htmlAttribute {string=} ngeo-displaywindow-title The html title of the window.\n * @htmlAttribute {string=} ngeo-displaywindow-url The URL to open in an iframe, in the window. The content\n *     attribute must not be provided.\n * @htmlAttribute {string=} ngeo-displaywindow-width The default width of the window.\n * @ngdoc component\n * @ngname ngeoDisplaywindow\n */\nexports.component('ngeoDisplaywindow', {\n  bindings: {\n    'clearOnClose': '<?',\n    'content': '=?',\n    'contentTemplate': '<?',\n    'contentScope': '<?',\n    'desktop': '<?',\n    'draggable': '<?',\n    'draggableContainment': '<?',\n    'height': '=?',\n    'open': '=?',\n    'resizable': '<?',\n    'title': '=?',\n    'url': '=?',\n    'width': '=?'\n  },\n  controller: exports.Controller_,\n  templateUrl: ngeoMessageDisplaywindowTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.controlComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport olMap from 'ol/Map.js';\nimport olControlControl from 'ol/control/Control.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoControl', []);\n\n\n/**\n * Provides a directive that can be used to add a control to the map\n * using a DOM element.\n *\n * Example:\n *\n *     <div ngeo-control=\"ctrl.control\" ngeo-control-map=\"ctrl.map\"></div>\n *\n * The expression passed to \"ngeo-control\" should evaluate to a control\n * instance, and the expression passed to \"ngeo-control-map\" should\n * evaluate to a map instance.\n *\n * See our live example: [../examples/control.html](../examples/control.html)\n *\n * @htmlAttribute {ol.Map} ngeo-control-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoControl\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const control = /** @type {ol.control.Control} */\n              (scope.$eval(attrs['ngeoControl']));\n      googAsserts.assertInstanceof(control, olControlControl);\n\n      const map = /** @type {ol.Map} */\n              (scope.$eval(attrs['ngeoControlMap']));\n      googAsserts.assertInstanceof(map, olMap);\n\n      control.setTarget(element[0]);\n      map.addControl(control);\n    }\n  };\n};\n\n\nexports.directive('ngeoControl', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.filereaderComponent\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFilereader', []);\n\n/**\n * This directive is to used on an input file element. When a file is selected\n * the directive uses the browser `FileReader` API to read the file. The file\n * content is provided to the directive user through the assignable expression.\n * Only works for text files (`readAsText` used for reading the file). And does\n * not work in Internet Explorer 9.\n *\n * Example:\n *\n *      <input type=\"file\" ngeo-filereader=\"ctrl.fileContent\"\n *        ngeo-filereader-supported=\"ctrl.supported\"/>\n *\n * See our live example: [../examples/importfeatures.html](../examples/importfeatures.html)\n *\n * @htmlAttribute {string} ngeo-filereader The content of the file read.\n * @htmlAttribute {boolean=} ngeo-filereader-supported Whether the FileReader API is supported.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoFilereader\n */\nexports.component_ = function($window) {\n  return {\n    restrict: 'A',\n    scope: {\n      'fileContent': '=ngeoFilereader',\n      'supported': '=?ngeoFilereaderSupported'\n    },\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      const supported = 'FileReader' in $window;\n      scope['supported'] = supported;\n      if (!supported) {\n        return;\n      }\n      element.on('change', (changeEvent) => {\n        /** @type {!FileReader} */\n        const fileReader = new $window.FileReader();\n        fileReader.onload = (\n          /**\n                 * @param {!ProgressEvent} evt Event.\n                 */\n          function(evt) {\n            scope.$apply(() => {\n              scope['fileContent'] = evt.target.result;\n            });\n          });\n        fileReader.readAsText(changeEvent.target.files[0]);\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoFilereader',\n  exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.getBrowserLanguage\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGetBrowserLanguage', []);\n\n\n/**\n * Provides a function that returns the most appropriate 2-letter\n * language code depending on the list of available languages and the browser\n * languages settings.\n *\n * @param {angular.$window} $window Angular $window service.\n * @return {ngeox.miscGetBrowserLanguage} The \"GetBrowserLanguage\" function.\n *\n * @ngdoc service\n * @ngname ngeoGetBrowserLanguage\n * @ngInject\n */\nexports.factory_ = function($window) {\n  return (\n    /**\n     * @param {Array.<string>} availableLanguages Available languages.\n     * @return {string} The \"best\" language code.\n     */\n    function(availableLanguages) {\n      const nav = $window.navigator;\n      let browserLanguages = nav.languages || nav.language ||\n            nav.browserLanguage || nav.systemLanguage || nav.userLanguage;\n      if (!Array.isArray(browserLanguages)) {\n        browserLanguages = [browserLanguages];\n      }\n      browserLanguages = browserLanguages.map(item => item.substring(0, 2));\n      // remove duplicated language codes\n      browserLanguages = browserLanguages.filter((item, index, arr) => arr.indexOf(item) == index);\n      const supportedLanguages = browserLanguages.filter(item => availableLanguages.indexOf(item) != -1);\n      return supportedLanguages[0];\n    });\n};\n\nexports.factory('ngeoGetBrowserLanguage', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.extraModule\n */\nimport ngeoMiscAutoProjection from 'ngeo/misc/AutoProjection.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\nimport ngeoMiscControlComponent from 'ngeo/misc/controlComponent.js';\nimport ngeoMiscDatepickerComponent from 'ngeo/misc/datepickerComponent.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoMiscFilereaderComponent from 'ngeo/misc/filereaderComponent.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoMiscGetBrowserLanguage from 'ngeo/misc/getBrowserLanguage.js';\nimport ngeoMiscSortableComponent from 'ngeo/misc/sortableComponent.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMiscExtraModule', [\n  ngeoMiscAutoProjection.module.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscControlComponent.name,\n  ngeoMiscDatepickerComponent.name,\n  ngeoMiscDebounce.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscFile.module.name,\n  ngeoMiscFilereaderComponent.name,\n  ngeoMiscFilters.name,\n  ngeoMiscGetBrowserLanguage.name,\n  ngeoMiscSortableComponent.name,\n  ngeoMiscTime.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.query.mapQueryComponent\n */\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport * as olEvents from 'ol/events.js';\n\nconst exports = angular.module('ngeoMapQuery', [\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\n/**\n * Provides a \"map query\" directive.\n *\n * This directive is responsible of binding a map and the ngeo query service\n * together. While active, clicks made on the map are listened by the directive\n * and a request gets issued to the query service.\n *\n * This directive doesn't require to be rendered in a visible DOM element, but\n * it could be used with a ngeo-btn to manage the activation of the directive.\n * See below an example without any use of UI:\n *\n * Example:\n *\n *      <span\n *        ngeo-map-query=\"\"\n *        ngeo-map-query-map=\"::ctrl.map\"\n *        ngeo-map-query-active=\"ctrl.queryActive\"\n *        ngeo-map-query-autoclear=\"ctrl.queryAutoClear\">\n *      </span>\n *\n * See our live example: [../examples/mapquery.html](../examples/mapquery.html)\n *\n * @param {ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n * @param {angular.$injector} $injector Main injector.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoMapQuery\n */\nexports.directive_ = function(ngeoMapQuerent, $injector) {\n  return {\n    restrict: 'A',\n    scope: false,\n    link: (scope, elem, attrs) => {\n      const map = scope.$eval(attrs['ngeoMapQueryMap']);\n      let clickEventKey_ = null;\n      let pointerMoveEventKey_ = null;\n\n      /**\n       * Called when the map is clicked while this controller is active. Issue\n       * a request to the query service using the coordinate that was clicked.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handleMapClick_ = function(evt) {\n        const coordinate = evt.coordinate;\n        ngeoMapQuerent.issue({\n          coordinate,\n          map\n        });\n      };\n\n      /**\n       * Called when the pointer is moved while this controller is active.\n       * Change the mouse pointer when hovering a non-transparent pixel on the\n       * map.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handlePointerMove_ = function(evt) {\n        if (!evt.dragging) {\n          const pixel = map.getEventPixel(evt.originalEvent);\n          const queryable = function(layer) {\n            const visible = layer.get('visible');\n            const sourceids = layer.get('querySourceIds');\n            return visible && !!sourceids;\n          };\n          const hit = map.forEachLayerAtPixel(pixel, () => true, undefined, queryable);\n          map.getTargetElement().style.cursor = hit ? 'pointer' : '';\n        }\n      };\n\n      /**\n       * Listen to the map events.\n       */\n      const activate_ = function() {\n        clickEventKey_ = olEvents.listen(map, 'singleclick', handleMapClick_);\n        const queryOptions = /** @type {ngeox.QueryOptions} */ (\n          $injector.has('ngeoQueryOptions') ? $injector.get('ngeoQueryOptions') : {}\n        );\n        if (queryOptions.cursorHover) {\n          pointerMoveEventKey_ = olEvents.listen(map, 'pointermove', handlePointerMove_);\n        }\n      };\n\n      /**\n       * Unlisten the map events.\n       */\n      const deactivate_ = function() {\n        if (clickEventKey_ !== null) {\n          olEvents.unlistenByKey(clickEventKey_);\n          clickEventKey_ = null;\n        }\n        if (pointerMoveEventKey_ !== null) {\n          olEvents.unlistenByKey(pointerMoveEventKey_);\n          pointerMoveEventKey_ = null;\n        }\n        if (scope.$eval(attrs['ngeoMapQueryAutoclear']) !== false) {\n          ngeoMapQuerent.clear();\n        }\n      };\n\n      // watch 'active' property -> activate/deactivate accordingly\n      scope.$watch(attrs['ngeoMapQueryActive'],\n        (newVal, oldVal) => {\n          if (newVal) {\n            activate_();\n          } else {\n            deactivate_();\n          }\n        }\n      );\n    }\n  };\n};\n\nexports.directive('ngeoMapQuery', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.WfsPermalink\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olExtent from 'ol/extent.js';\nimport * as olFormatFilter from 'ol/format/filter.js';\nimport olFormatWFS from 'ol/format/WFS.js';\n\n/**\n * WFS permalink service that can be used to load features with a WFS\n * GetFeature request given query parameters.\n *\n * Resulting features are then highlighted and\n * the map is zoomed to the nearest map extent.\n *\n * Parameters:\n *\n * - ``wfs_layer`` tells what layer will be queried\n * - ``wfs_showFeatures`` (boolean) tells if the features should be\n *   highlighted and listed (when true) or if the map should only be\n *   recentered on the features (when false). Default is true.\n * - other parameters will be considered as WFS attribute/values filters and\n *   must be of the form:\n *   ``wfs_<layer attribute name>=<a comma-separated list of values>``\n *\n * Example:\n * http://example.com?wfs_layer=parcels&wfs_city=Oslo&wfs_number=12,34,56\n * will load parcels #12, 34 and 56 of the city of Oslo.\n *\n * It is possible to define several groups of filtering parameters by:\n *\n * - adding a ``wfs_ngroups`` parameter telling how many groups are defined\n * - prefixing all filtering parameters by the number of each group,\n *   starting at 0. For instance ``wfs_0_<layer attribute name>``\n *\n * Example:\n * http://example.com?wfs_layer=parcels&wfs_ngroups=2\n * &wfs_0_city=Oslo&wfs_0_number=12,34,56&wfs_1_city=Paris&wfs_1_number=78,90\n * will load parcels #12, 34 and 56 of the city of Oslo as well as\n * parcels #78 and 90 of the city of Paris.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular $http service.\n * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n * @param {ngeox.WfsPermalinkOptions} ngeoWfsPermalinkOptions The options to\n *     configure the ngeo wfs permalink service with.\n * @ngdoc service\n * @ngname ngeoWfsPermalink\n * @ngInject\n */\nconst WfsPermalinkService = function($http, ngeoQueryResult, ngeoWfsPermalinkOptions) {\n\n  const options = ngeoWfsPermalinkOptions;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = options.url;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxFeatures_ = options.maxFeatures !== undefined ? options.maxFeatures : 50;\n\n  /**\n   * @type {Object<string, ngeox.WfsType>}\n   * @private\n   */\n  this.wfsTypes_ = {};\n\n  googAsserts.assertArray(options.wfsTypes, 'wfsTypes is not correctly set');\n  options.wfsTypes.forEach((wfsType) => {\n    this.wfsTypes_[wfsType.featureType] = wfsType;\n  });\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.defaultFeatureNS_ = options.defaultFeatureNS;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.defaultFeaturePrefix_ = options.defaultFeaturePrefix;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.pointRecenterZoom_ = options.pointRecenterZoom;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @private\n   */\n  this.result_ = ngeoQueryResult;\n};\n\n\n/**\n * Clear the results.\n * @export\n */\nWfsPermalinkService.prototype.clear = function() {\n  this.clearResult_();\n};\n\n\n/**\n * Build a WFS GetFeature request for the given query parameter data, send the\n * request and add the received features to {@link ngeox.QueryResult}.\n *\n * @param {ngeox.WfsPermalinkData} queryData Query data for the WFS request.\n * @param {ol.Map} map The ol3 map object to get the current projection from.\n * @export\n */\nWfsPermalinkService.prototype.issue = function(queryData, map) {\n  googAsserts.assert(this.url_,\n    'url is not set. to use the wfs permalink service, ' +\n      'set the value `ngeoWfsPermalinkOptions`');\n  this.clearResult_();\n\n  const typeName = queryData.wfsType;\n  if (!this.wfsTypes_.hasOwnProperty(typeName)) {\n    return;\n  }\n  const wfsType = this.wfsTypes_[typeName];\n\n  const filters = this.createFilters_(queryData.filterGroups);\n  if (filters === null) {\n    return;\n  }\n\n  this.issueRequest_(wfsType, filters, map, queryData.showFeatures);\n};\n\n\n/**\n * @param {ngeox.WfsType} wfsType Type.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {ol.Map} map The ol3 map object to get the current projection from.\n * @param {boolean} showFeatures Show features or only zoom to feature extent?\n * @private\n */\nWfsPermalinkService.prototype.issueRequest_ = function(wfsType, filter, map, showFeatures) {\n  const wfsFormat = new olFormatWFS();\n  const featureRequestXml = wfsFormat.writeGetFeature({\n    srsName: map.getView().getProjection().getCode(),\n    featureNS: (wfsType.featureNS !== undefined) ?\n      wfsType.featureNS : this.defaultFeatureNS_,\n    featurePrefix: (wfsType.featurePrefix !== undefined) ?\n      wfsType.featurePrefix : this.defaultFeaturePrefix_,\n    featureTypes: [wfsType.featureType],\n    outputFormat: 'GML3',\n    filter: filter,\n    maxFeatures: this.maxFeatures_\n  });\n\n  const featureRequest = new XMLSerializer().serializeToString(featureRequestXml);\n  const config = {\n    headers: {'Content-Type': 'text/xml; charset=UTF-8'}\n  };\n  this.$http_.post(this.url_, featureRequest, config).then((response) => {\n    const features = wfsFormat.readFeatures(response.data);\n    if (features.length == 0) {\n      return;\n    }\n\n    // zoom to features\n    const size = map.getSize();\n    if (size !== undefined) {\n      const maxZoom = this.pointRecenterZoom_;\n      const padding = [10, 10, 10, 10];\n      map.getView().fit(this.getExtent_(features), {size, maxZoom, padding});\n    }\n\n    // then show if requested\n    if (showFeatures) {\n      const resultSource = /** @type {ngeox.QueryResultSource} */ ({\n        'features': features,\n        'id': wfsType.featureType,\n        'identifierAttributeField': wfsType.label,\n        'label': wfsType.featureType,\n        'pending': false\n      });\n\n      this.result_.sources.push(resultSource);\n      this.result_.total = features.length;\n    }\n  });\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @return {ol.Extent} The extent of all features.\n * @private\n */\nWfsPermalinkService.prototype.getExtent_ = function(features) {\n  return features.reduce((extent, feature) => olExtent.extend(extent, feature.getGeometry().getExtent()), olExtent.createEmpty());\n};\n\n/**\n * Create OGC filters for the filter groups extracted from the query params.\n *\n * @param {Array.<ngeox.WfsPermalinkFilterGroup>} filterGroups Filter groups.\n * @return {ol.format.filter.Filter} OGC filters.\n * @private\n */\nWfsPermalinkService.prototype.createFilters_ = function(filterGroups) {\n  if (filterGroups.length == 0) {\n    return null;\n  }\n  const f = olFormatFilter;\n  const createFiltersForGroup = function(filterGroup) {\n    const filters = filterGroup.filters.map((filterDef) => {\n      const condition = filterDef.condition;\n      if (Array.isArray(condition)) {\n        return WfsPermalinkService.or_(condition.map(cond => f.equalTo(filterDef.property, cond)));\n      } else {\n        return f.equalTo(filterDef.property, filterDef.condition);\n      }\n    });\n    return WfsPermalinkService.and_(filters);\n  };\n  return WfsPermalinkService.or_(filterGroups.map(createFiltersForGroup));\n};\n\n\n/**\n * Join a list of filters with `and(...)`.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.and_ = function(filters) {\n  return WfsPermalinkService.joinFilters_(filters, olFormatFilter.and);\n};\n\n\n/**\n * Join a list of filters with `or(...)`.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.or_ = function(filters) {\n  return WfsPermalinkService.joinFilters_(filters, olFormatFilter.or);\n};\n\n\n/**\n * Join a list of filters with a given join function.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @param {function(!ol.format.filter.Filter, !ol.format.filter.Filter):\n *    ol.format.filter.Filter} joinFn The function to join two filters.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.joinFilters_ = function(filters, joinFn) {\n  return filters.reduce((combinedFilters, currentFilter) => {\n    if (combinedFilters === null) {\n      return currentFilter;\n    } else {\n      googAsserts.assert(currentFilter !== null);\n      return joinFn(combinedFilters, currentFilter);\n    }\n  }, null);\n};\n\n\n/**\n * Clear every features for all result sources and reset the total counter\n * as well.\n * @private\n */\nWfsPermalinkService.prototype.clearResult_ = function() {\n  this.result_.total = 0;\n  this.result_.sources.forEach((source) => {\n    source.features.length = 0;\n  });\n};\n\n\n/**\n * @type {!angular.Module}\n */\nWfsPermalinkService.module = angular.module('ngeoWfsPermalink', [\n  // FIXME add dependencies\n]);\n\n\n/**\n * Value that is supposed to be set in applications to enable the WFS\n * permalink functionality.\n */\nWfsPermalinkService.module.value('ngeoWfsPermalinkOptions',\n  /** @type {ngeox.WfsPermalinkOptions} */ ({\n    url: '',\n    wfsTypes: [],\n    defaultFeatureNS: '',\n    defaultFeaturePrefix: ''\n  })\n);\n\n\nWfsPermalinkService.module.service('ngeoWfsPermalink', WfsPermalinkService);\n\n\nexport default WfsPermalinkService;\n","/**\n * @module gmf.controllers.AbstractAppController\n */\nimport 'jquery';\nimport 'angular';\nimport 'angular-gettext';\nimport 'angular-dynamic-locale';\nimport gmfAuthenticationModule from 'gmf/authentication/module.js';\n\nimport gmfBackgroundlayerselectorComponent from 'gmf/backgroundlayerselector/component.js';\nimport gmfDatasourceModule from 'gmf/datasource/module.js';\nimport gmfDisclaimerComponent from 'gmf/disclaimer/component.js';\nimport gmfFiltersModule from 'gmf/filters/module.js';\nimport gmfLayertreeModule from 'gmf/layertree/module.js';\nimport gmfMapModule from 'gmf/map/module.js';\nimport gmfQueryExtraModule from 'gmf/query/extraModule.js';\nimport gmfSearchModule from 'gmf/search/module.js';\nimport gmfThemeModule from 'gmf/theme/module.js';\nimport ngeoMessageDisplaywindowComponent from 'ngeo/message/displaywindowComponent.js';\nimport ngeoMiscExtraModule from 'ngeo/misc/extraModule.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport ngeoQueryMapQueryComponent from 'ngeo/query/mapQueryComponent.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerWfsPermalink from 'ngeo/statemanager/WfsPermalink.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * Application abstract controller.\n *\n * This file includes `goog.require` for base components/directives used\n * by the HTML page and the controller to provide the configuration.\n *\n * @param {gmfx.Config} config A part of the application config.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @ngdoc controller\n * @ngInject\n * @export\n */\nconst exports = function(config, $scope, $injector) {\n\n  /**\n   * Location service\n   * @type {ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = $injector.get('ngeoLocation');\n  if (this.ngeoLocation.hasParam('debug')) {\n    // make the injector globally available\n    window.injector = $injector;\n  }\n\n  googAsserts.assertInstanceof(this.map, olMap);\n\n  /**\n   * Ngeo FeatureHelper service\n   * @type {ngeo.misc.FeatureHelper}\n   */\n  const ngeoFeatureHelper = $injector.get('ngeoFeatureHelper');\n  ngeoFeatureHelper.setProjection(googAsserts.assert(this.map.getView().getProjection()));\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = $injector.get('gmfThemeManager');\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.get('gmfTreeManager');\n\n  /**\n   * Themes service\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.get('gmfThemes');\n\n  /**\n   * Permalink service\n   * @type {gmf.permalink.Permalink}\n   * @private\n   */\n  this.permalink_ = $injector.get('gmfPermalink');\n\n  /**\n   * Authentication service\n   * @type {gmf.authentication.Service}\n   */\n  const gmfAuthentication = $injector.get('gmfAuthenticationService');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.hasEditableLayers = false;\n\n  /**\n   * @private\n   */\n  this.updateHasEditableLayers_ = function() {\n    this.gmfThemes_.hasEditableLayers().then((hasEditableLayers) => {\n      this.hasEditableLayers = hasEditableLayers;\n    });\n  };\n\n  /**\n   * @param {gmfx.AuthenticationEvent} evt Event.\n   */\n  const userChange = (evt) => {\n    const user = evt.detail.user;\n    const roleId = (user.username !== null) ? user.role_id : undefined;\n\n    // Open filter panel if 'open_panel' is set in functionalities and\n    // has 'layer_filter' as first value\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      const functionalities = this.gmfUser.functionalities;\n      if (functionalities &&\n          functionalities.open_panel &&\n          functionalities.open_panel[0] === 'layer_filter') {\n        this.filterSelectorActive = true;\n      }\n    });\n\n    // Reload theme and background layer when login status changes.\n    const previousThemeName = this.gmfThemeManager.getThemeName();\n    this.gmfThemeManager.setThemeName('', true);\n    if (evt.type !== 'ready') {\n      this.updateCurrentTheme_(previousThemeName);\n    }\n    // Reload themes when login status changes.\n    this.gmfThemes_.loadThemes(roleId);\n    this.updateHasEditableLayers_();\n  };\n\n  olEvents.listen(gmfAuthentication, 'ready', userChange);\n  olEvents.listen(gmfAuthentication, 'login', userChange);\n  olEvents.listen(gmfAuthentication, 'logout', userChange);\n\n  /**\n   * @type {Array.<gmfx.SearchComponentDatasource>}\n   * @export\n   */\n  this.searchDatasources = [{\n    labelKey: 'label',\n    groupValues: /** @type {Array.<string>} **/ ($injector.get('gmfSearchGroups')),\n    groupActions: /** @type {Array.<string>} **/ ($injector.get('gmfSearchActions')),\n    projection: `EPSG:${config.srid || 21781}`,\n    url: /** @type {string} **/ ($injector.get('fulltextsearchUrl'))\n  }];\n\n  /**\n   * @type {!Object.<string, string>}\n   * @export\n   */\n  this.dimensions = {};\n\n  // watch any change on dimensions object to refresh the url\n  this.permalink_.setDimensions(this.dimensions);\n\n  // Injecting the gmfDataSourcesManager service creates the data sources\n  const gmfDataSourcesManager = $injector.get('gmfDataSourcesManager');\n  // Init the datasources with our map.\n  gmfDataSourcesManager.setDatasourceMap(this.map);\n  // Give the dimensions to the gmfDataSourcesManager\n  gmfDataSourcesManager.setDimensions(this.dimensions);\n\n  if ($injector.has('gmfDefaultDimensions')) {\n    // Set defaults\n    const defaultDimensions = $injector.get('gmfDefaultDimensions');\n    for (const dim in defaultDimensions) {\n      if (this.dimensions[dim] === undefined) {\n        this.dimensions[dim] = defaultDimensions[dim];\n      }\n    }\n  }\n\n  /**\n   * @type {ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = $injector.get('ngeoBackgroundLayerMgr');\n\n  // watch any change on dimensions object to refresh the background layer\n  $scope.$watchCollection(() => this.dimensions, () => {\n    this.backgroundLayerMgr_.updateDimensions(this.map, this.dimensions);\n  });\n\n  this.backgroundLayerMgr_.on('change', () => {\n    this.backgroundLayerMgr_.updateDimensions(this.map, this.dimensions);\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.leftNavVisible = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.rightNavVisible = false;\n\n  const queryFill = new olStyleFill({color: [255, 170, 0, 0.6]});\n  const queryStroke = new olStyleStroke({color: [255, 170, 0, 1], width: 2});\n\n  /**\n   * FeatureStyle used by the gmf.query.windowComponent\n   * @type {ol.style.Style}\n   * @export\n   */\n  this.queryFeatureStyle = new olStyleStyle({\n    fill: queryFill,\n    image: new olStyleCircle({\n      fill: queryFill,\n      radius: 5,\n      stroke: queryStroke\n    }),\n    stroke: queryStroke\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.filterSelectorActive = false;\n\n  /**\n   * The active state of the ngeo query directive.\n   * @type {boolean}\n   * @export\n   */\n  this.queryActive = true;\n\n  /**\n   * Set the clearing of the ngeoQuery after the deactivation of the query\n   * @type {boolean}\n   * @export\n   */\n  this.queryAutoClear = true;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.printPanelActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.printActive = false;\n\n  /**\n   * @type {ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = $injector.get('ngeoMapQuerent');\n\n  // Don't deactivate ngeoQuery on print activation\n  $scope.$watch(() => this.printPanelActive, (newVal) => {\n    // Clear queries if another panel is open but not if user go back to the\n    // map form the print.\n    if (!newVal && !this.queryActive) {\n      this.ngeoMapQuerent_.clear();\n    }\n    this.queryAutoClear = !newVal;\n    this.printActive = newVal;\n  });\n\n  /**\n   * The active state of the directive responsible of point measurements.\n   * @type {boolean}\n   * @export\n   */\n  this.measurePointActive = false;\n\n  /**\n   * The active state of the directive responsible of length measurements.\n   * @type {boolean}\n   * @export\n   */\n  this.measureLengthActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawFeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawProfilePanelActive = false;\n\n  /**\n   * @type {gmfx.User}\n   * @export\n   */\n  this.gmfUser = $injector.get('gmfUser');\n\n  /**\n   * @type {ngeox.miscGetBrowserLanguage}\n   */\n  this.getBrowserLanguage = $injector.get('ngeoGetBrowserLanguage');\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   */\n  this.stateManager = $injector.get('ngeoStateManager');\n\n  /**\n   * @type {tmhDynamicLocale}\n   */\n  this.tmhDynamicLocale = $injector.get('tmhDynamicLocale');\n\n  /**\n   * @type {angular.Scope}\n   */\n  this.$scope = $scope;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.lang;\n\n  /**\n   * Default language\n   * @type {string}\n   */\n  this.defaultLang = $injector.get('defaultLang');\n\n  /**\n   * Languages URL\n   * @type {!Object.<string, string>}\n   */\n  this.langUrls = $injector.get('langUrls');\n\n  /**\n   * The gettext catalog\n   * @type {angularGettext.Catalog}\n   */\n  this.gettextCatalog = $injector.get('gettextCatalog');\n\n  this.initLanguage();\n\n  const mapTools = 'mapTools';\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.mapToolsGroup = mapTools;\n\n  /**\n   * The ngeo feature overlay manager service\n   * @type {ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.get('ngeoFeatureOverlayMgr');\n  ngeoFeatureOverlayMgr.init(this.map);\n\n  /**\n   * The ngeo ToolActivate manager service.\n   * @type {ngeo.misc.ToolActivateMgr}\n   */\n  const ngeoToolActivateMgr = $injector.get('ngeoToolActivateMgr');\n\n  const queryToolActivate = new ngeoMiscToolActivate(this, 'queryActive');\n  ngeoToolActivateMgr.registerTool(mapTools, queryToolActivate, true);\n\n  const measurePointActivate = new ngeoMiscToolActivate(this, 'measurePointActive');\n  ngeoToolActivateMgr.registerTool(mapTools, measurePointActivate, false);\n\n  const measureLengthActivate = new ngeoMiscToolActivate(this, 'measureLengthActive');\n  ngeoToolActivateMgr.registerTool(mapTools, measureLengthActivate, false);\n\n  const drawFeatureActivate = new ngeoMiscToolActivate(this, 'drawFeatureActive');\n  ngeoToolActivateMgr.registerTool(mapTools, drawFeatureActivate, false);\n\n  const drawProfilePanelActivate = new ngeoMiscToolActivate(this, 'drawProfilePanelActive');\n  ngeoToolActivateMgr.registerTool(mapTools, drawProfilePanelActivate, false);\n\n  const printPanelActivate = new ngeoMiscToolActivate(this, 'printPanelActive');\n  ngeoToolActivateMgr.registerTool(mapTools, printPanelActivate, false);\n\n  $scope.$root.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n    this.gmfThemes_.getThemeObject(name).then((theme) => {\n      this.setDefaultBackground_(theme);\n    });\n  });\n\n  /**\n   * @param {boolean} skipPermalink If True, don't use permalink\n   * background layer.\n   * @private\n   */\n  this.updateCurrentBackgroundLayer_ = function(skipPermalink) {\n    this.gmfThemes_.getBgLayers().then((layers) => {\n      let background;\n      if (!skipPermalink) {\n        // get the background from the permalink\n        background = this.permalink_.getBackgroundLayer(layers);\n      }\n      if (!background) {\n        // get the background from the user settings\n        const functionalities = this.gmfUser.functionalities;\n        if (functionalities) {\n          const defaultBasemapArray = functionalities.default_basemap;\n          if (defaultBasemapArray.length > 0) {\n            const defaultBasemapLabel = defaultBasemapArray[0];\n            background = olArray.find(layers, layer => layer.get('label') === defaultBasemapLabel);\n          }\n        }\n      }\n      if (!background && layers[1]) {\n        // fallback to the layers list, use the second one because the first\n        // is the blank layer\n        background = layers[1];\n      }\n\n      if (background) {\n        this.backgroundLayerMgr_.set(this.map, background);\n      }\n    });\n  }.bind(this);\n\n  this.updateCurrentBackgroundLayer_(false);\n\n  // Static \"not used\" functions should be in the window because otherwise\n  // closure remove them. \"export\" tag doesn't work on static function below,\n  // we \"export\" them as externs in the gmfx options file.\n  const gmfx = window.gmfx || {};\n  /**\n   * @export\n   */\n  window.gmfx = gmfx;\n\n  /**\n   * Static function to create a popup with an iframe.\n   * @param {string} url an url.\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width.\n   * @param {number=} opt_height CSS height.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  gmfx.openIframePopup = (\n    url, title, opt_width, opt_height, opt_apply\n  ) => {\n    this.displaywindowUrl = url;\n    gmfx.openPopup_(title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * Static function to create a popup with html content.\n   * @param {string} content (text or html).\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  gmfx.openTextPopup = (\n    content, title, opt_width, opt_height, opt_apply\n  ) => {\n    this.displaywindowContent = content;\n    gmfx.openPopup_(title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   */\n  gmfx.openPopup_ = (title, opt_width, opt_height, opt_apply) => {\n\n    this.displaywindowTitle = title;\n    this.displaywindowOpen = true;\n\n    if (opt_width) {\n      this.displaywindowWidth = `${opt_width}px`;\n    }\n    if (opt_height) {\n      this.displaywindowHeight = `${opt_height}px`;\n    }\n    if (opt_apply !== false) {\n      this.$scope.$apply();\n    }\n  };\n\n  /**\n   * Whether to update the size of the map on browser window resize.\n   * @type {boolean}\n   * @export\n   */\n  this.manageResize = false;\n\n  /**\n   * The duration (milliseconds) of the animation that may occur on the div\n   * containing the map. Used to smoothly resize the map while the animation\n   * is in progress.\n   * @type {number|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n  const cgxp = window.cgxp || {};\n  /**\n   * @export\n   */\n  window.cgxp = cgxp;\n  /**\n   * @export\n   */\n  cgxp.tools = window.cgxp.tools || {};\n  /**\n   * Static function to create a popup with an iframe.\n   * @param {string} url an url.\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  cgxp.tools.openInfoWindow = function(url, title, opt_width, opt_height, opt_apply) {\n    gmfx.openIframePopup(url, title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowContent = null;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.displaywindowDraggableContainment = '.gmf-map';\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowHeight = null;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.displaywindowOpen = false;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowTitle = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowUrl = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowWidth = null;\n};\n\n\n/**\n * @return {boolean} Return true if a user exists and its 'is_password_changed' value is explicitly set\n *     to false.\n * @export\n */\nexports.prototype.userMustChangeItsPassword = function() {\n  return this.gmfUser.is_password_changed === false;\n};\n\n\n/**\n * @param {Array.<ol.layer.Base>} layers Layers list.\n * @param {Array.<string>} labels default_basemap list.\n * @return {ol.layer.Base} layer or null\n */\nexports.getLayerByLabels = function(layers, labels) {\n  if (labels && labels.length > 0) {\n    return olArray.find(layers, layer => layer.get('label') === labels[0]);\n  }\n  return null;\n};\n\n\n/**\n * @param {string} lang Language code.\n * @export\n */\nexports.prototype.switchLanguage = function(lang) {\n  googAsserts.assert(lang in this.langUrls);\n  this.gettextCatalog.setCurrentLanguage(lang);\n  this.gettextCatalog.loadRemote(this.langUrls[lang]);\n  this.tmhDynamicLocale.set(lang);\n  this.lang = lang;\n};\n\n\n/**\n */\nexports.prototype.initLanguage = function() {\n  this.$scope.$watch(() => this.lang, (newValue) => {\n    this.stateManager.updateState({\n      'lang': newValue\n    });\n  });\n\n  const browserLanguage = /** @type {string|undefined} */\n      (this.getBrowserLanguage(Object.keys(this.langUrls)));\n  const urlLanguage = /** @type {string|undefined} */\n      (this.stateManager.getInitialValue('lang'));\n\n  if (urlLanguage !== undefined && urlLanguage in this.langUrls) {\n    this.switchLanguage(urlLanguage);\n    return;\n  } else if (browserLanguage !== undefined && browserLanguage in this.langUrls) {\n    this.switchLanguage(browserLanguage);\n    return;\n  } else {\n    // if there is no information about language preference,\n    // fallback to default language\n\n    this.switchLanguage(this.defaultLang);\n    return;\n  }\n};\n\n\n/**\n * @param {gmfThemes.GmfTheme} theme Theme.\n * @private\n */\nexports.prototype.setDefaultBackground_ = function(theme) {\n  this.gmfThemes_.getBgLayers().then((layers) => {\n    let layer;\n\n    // get the background from the permalink\n    layer = this.permalink_.getBackgroundLayer(layers);\n\n    if (!layer && this.gmfUser.functionalities) {\n      // get the background from the user settings\n      layer = exports.getLayerByLabels(layers, this.gmfUser.functionalities.default_basemap);\n    }\n\n    if (!layer && theme) {\n      // get the background from the theme\n      layer = exports.getLayerByLabels(layers, theme.functionalities.default_basemap);\n    }\n\n    if (!layer) {\n      // fallback to the layers list, use the second one because the first is the blank layer.\n      layer = layers[layers.length > 1 ? 1 : 0];\n    }\n\n    googAsserts.assert(layer);\n    this.backgroundLayerMgr_.set(this.map, layer);\n  });\n};\n\n/**\n * @param {string} fallbackThemeName fallback theme name.\n * @private\n */\nexports.prototype.updateCurrentTheme_ = function(fallbackThemeName) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.permalink_.defaultThemeNameFromFunctionalities();\n    if (themeName) {\n      const theme = gmfThemeThemes.findThemeByName(themes, /** @type {string} */ (themeName));\n      if (theme) {\n        this.gmfThemeManager.addTheme(theme, true);\n      }\n    } else {\n      this.gmfThemeManager.setThemeName(fallbackThemeName);\n    }\n  });\n};\n\n/**\n * @protected\n * @return {Element} Span element with font-awesome inside of it\n */\nexports.prototype.getLocationIcon = function() {\n  const arrow = document.createElement('span');\n  arrow.className = 'fa fa-location-arrow';\n  arrow.style.transform = 'rotate(-0.82rad)';\n  const arrowWrapper = document.createElement('span');\n  arrowWrapper.appendChild(arrow);\n  return arrowWrapper;\n};\n\n\nexports.module = angular.module('GmfAbstractAppControllerModule', [\n  'gettext',\n  'tmh.dynamicLocale',\n  gmfAuthenticationModule.name,\n  gmfBackgroundlayerselectorComponent.name,\n  gmfDatasourceModule.name,\n  gmfDisclaimerComponent.name,\n  gmfFiltersModule.name,\n  gmfLayertreeModule.name,\n  gmfMapModule.name,\n  gmfQueryExtraModule.name,\n  gmfSearchModule.name,\n  gmfThemeModule.name,\n  ngeoMessageDisplaywindowComponent.name,\n  ngeoMiscExtraModule.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoQueryMapQuerent.module.name,\n  ngeoQueryMapQueryComponent.name,\n  ngeoStatemanagerModule.name,\n  ngeoStatemanagerWfsPermalink.module.name,\n]);\n\n\nexports.module.controller('AbstractController', exports);\n\n\nexports.module.value('ngeoExportFeatureFormats', [\n  ngeoMiscFeatureHelper.FormatType.KML,\n  ngeoMiscFeatureHelper.FormatType.GPX\n]);\n\nexports.module.config(['tmhDynamicLocaleProvider', 'angularLocaleScript',\n  /**\n   * @param {tmhDynamicLocaleProvider} tmhDynamicLocaleProvider angular-dynamic-locale provider.\n   * @param {string} angularLocaleScript the script.\n   */\n  function(tmhDynamicLocaleProvider, angularLocaleScript) {\n    // configure the script URL\n    tmhDynamicLocaleProvider.localeLocationPattern(angularLocaleScript);\n  }\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MobileDraw\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomSimpleGeometry from 'ol/geom/SimpleGeometry.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries from a mobile device using the\n * center of the map view as entry for points added.\n *\n * Supports:\n * - point\n * - line string\n *\n * @constructor\n * @struct\n * @fires ngeox.DrawEvent\n * @extends {ol.interaction.Interaction}\n * @param {ngeox.interaction.MobileDrawOptions} options Options\n */\nconst exports = function(options) {\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n  /**\n   * The key for view center change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = options.type;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.type_ === 'Polygon' ? 3 : 2);\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Previous sketch points, saved to be able to display them on the layer.\n   * @type {Array.<ol.Feature>}\n   * @private\n   */\n  this.sketchPoints_ = [];\n\n  /**\n   * Current sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultDrawStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n\n  this.set('dirty', false);\n  this.set('drawing', false);\n  this.set('valid', false);\n\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    if (this.changeEventKey_) {\n      olEvents.unlistenByKey(this.changeEventKey_);\n    }\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.changeEventKey_ = olEvents.listen(map.getView(),\n      'change:center',\n      this.handleViewCenterChange_, this);\n  }\n\n  this.updateState_();\n};\n\n\n// === PUBLIC METHODS - PROPERTY GETTERS ===\n\n\n/**\n * Return whether the interaction is currently dirty. It is if the sketch\n * feature has its geometry last coordinate set to the center without the\n * use of the `addToDrawing` method.\n * @return {boolean} `true` if the interaction is dirty, `false` otherwise.\n * @observable\n */\nexports.prototype.getDirty = function() {\n  return /** @type {boolean} */ (\n    this.get('dirty'));\n};\n\n\n/**\n * Return whether the interaction is currently drawing.\n * @return {boolean} `true` if the interaction is drawing, `false` otherwise.\n * @observable\n */\nexports.prototype.getDrawing = function() {\n  return /** @type {boolean} */ (\n    this.get('drawing'));\n};\n\n\n/**\n * Return whether the interaction as a valid sketch feature, i.e. its geometry\n * is valid.\n * @return {boolean} `true` if the interaction has a valid sketch feature,\n *     `false` otherwise.\n * @observable\n */\nexports.prototype.getValid = function() {\n  return /** @type {boolean} */ (\n    this.get('valid'));\n};\n\n\n/**\n * Returns the current sketch feature.\n * @return {?ol.Feature} The sketch feature, or null if none.\n */\nexports.prototype.getFeature = function() {\n  return this.sketchFeature_;\n};\n\n\n// === PUBLIC METHODS ===\n\n\n/**\n * Add current sketch point to sketch feature if the latter exists, else create\n * it.\n */\nexports.prototype.addToDrawing = function() {\n\n  // no need to do anything if interaction is not active, nor drawing\n  const active = this.getActive();\n  const drawing = this.getDrawing();\n\n  if (!active || !drawing) {\n    return;\n  }\n\n  let sketchFeatureGeom;\n  const sketchPointGeom = this.getSketchPointGeometry_();\n  const coordinate = sketchPointGeom.getCoordinates();\n  let coordinates;\n\n  // == point ==\n  if (this.type_ === 'Point') {\n    if (!this.sketchFeature_) {\n      this.sketchFeature_ = new olFeature(new olGeomPoint(coordinate));\n      /** @type {ngeox.DrawEvent} */\n      const event = new ngeoCustomEvent('drawstart', {feature: this.sketchFeature_});\n      this.dispatchEvent(event);\n    }\n    sketchFeatureGeom = this.sketchFeature_.getGeometry();\n    googAsserts.assertInstanceof(sketchFeatureGeom, olGeomSimpleGeometry);\n    sketchFeatureGeom.setCoordinates(coordinate);\n    return;\n  }\n\n  // == line string ==\n  if (this.type_ === 'LineString') {\n    this.sketchPoints_.push(this.sketchPoint_);\n    if (!this.sketchFeature_) {\n      coordinates = [coordinate.slice(), coordinate.slice()];\n      this.sketchFeature_ = new olFeature(new olGeomLineString(coordinates));\n      /** @type {ngeox.DrawEvent} */\n      const event = new ngeoCustomEvent('drawstart', {feature: this.sketchFeature_});\n      this.dispatchEvent(event);\n    } else {\n      sketchFeatureGeom = this.sketchFeature_.getGeometry();\n      googAsserts.assertInstanceof(sketchFeatureGeom, olGeomSimpleGeometry);\n      coordinates = sketchFeatureGeom.getCoordinates();\n      coordinates.push(coordinate.slice());\n      sketchFeatureGeom.setCoordinates(coordinates);\n    }\n  }\n\n  const dirty = this.getDirty();\n  if (dirty) {\n    this.set('dirty', false);\n  }\n\n  // minPoints validation\n  const valid = this.getValid();\n  if (this.type_ === 'LineString') {\n    if (coordinates.length >= this.minPoints_) {\n      if (!valid) {\n        this.set('valid', true);\n      }\n    } else {\n      if (valid) {\n        this.set('valid', false);\n      }\n    }\n  }\n\n  // reset sketch point\n  this.sketchPoint_ = null;\n\n  // update sketch features\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Clear the drawing\n */\nexports.prototype.clearDrawing = function() {\n  this.setActive(false);\n  this.setActive(true);\n};\n\n\n/**\n * Finish drawing. If there's a sketch point, it's added first.\n */\nexports.prototype.finishDrawing = function() {\n\n  // no need to do anything if interaction is not active, nor drawing\n  const active = this.getActive();\n  const drawing = this.getDrawing();\n\n  if (!active || !drawing) {\n    return;\n  }\n\n  if (this.sketchPoint_) {\n    this.addToDrawing();\n  }\n\n  this.set('drawing', false);\n\n  /** @type {ngeox.DrawEvent} */\n  const event = new ngeoCustomEvent('drawend', {feature: this.sketchFeature_});\n  this.dispatchEvent(event);\n};\n\n\n// === PRIVATE METHODS ===\n\n\n/**\n * Start drawing by adding the sketch point first.\n * @private\n */\nexports.prototype.startDrawing_ = function() {\n  this.set('drawing', true);\n  this.createOrUpdateSketchPoint_();\n  this.updateSketchFeatures_();\n\n  if (this.type_ === 'Point') {\n    this.addToDrawing();\n  }\n};\n\n\n/**\n * Modify the geometry of the sketch feature to have its last coordinate\n * set to the center of the map.\n * @private\n */\nexports.prototype.modifyDrawing_ = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n\n  const center = this.getCenter_();\n\n  if (this.type_ === 'LineString') {\n    const sketchFeatureGeom = this.sketchFeature_.getGeometry();\n    googAsserts.assertInstanceof(sketchFeatureGeom, olGeomSimpleGeometry);\n    const coordinates = sketchFeatureGeom.getCoordinates();\n    coordinates.pop();\n    coordinates.push(center);\n    sketchFeatureGeom.setCoordinates(coordinates);\n  }\n\n  const dirty = this.getDirty();\n  if (!dirty) {\n    this.set('dirty', true);\n  }\n\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {?ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature || this.sketchPoints_.length > 0) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  this.sketchPoints_ = [];\n  this.set('dirty', false);\n  this.set('drawing', false);\n  this.set('valid', false);\n  return sketchFeature;\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  } else {\n    this.startDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * @param {ol.Object.Event} evt Event.\n * @private\n */\nexports.prototype.handleViewCenterChange_ = function(evt) {\n  // no need to do anything if interaction is not active, nor drawing\n  const active = this.getActive();\n  const drawing = this.getDrawing();\n\n  if (!active || !drawing) {\n    return;\n  }\n\n  this.createOrUpdateSketchPoint_();\n\n  if (this.type_ === 'Point') {\n    this.addToDrawing();\n  } else {\n    this.modifyDrawing_();\n    this.updateSketchFeatures_();\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function() {\n  const center = this.getCenter_();\n\n  if (this.sketchPoint_) {\n    const geometry = this.getSketchPointGeometry_();\n    geometry.setCoordinates(center);\n  } else {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(center));\n  }\n\n};\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n  overlaySource.addFeatures(this.sketchPoints_);\n};\n\n\n/**\n * Returns the geometry of the sketch point feature.\n * @return {ol.geom.Point} Point.\n * @private\n */\nexports.prototype.getSketchPointGeometry_ = function() {\n  googAsserts.assert(this.sketchPoint_, 'sketch point should be thruty');\n  const geometry = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  return geometry;\n};\n\n\n/**\n * Returns the center of the map view\n * @return {ol.Coordinate} Coordinate.\n * @private\n */\nexports.prototype.getCenter_ = function() {\n  const center = this.getMap().getView().getCenter();\n  googAsserts.assertArray(center);\n  return center;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureLengthMobile\n */\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport ngeoInteractionMobileDraw from 'ngeo/interaction/MobileDraw.js';\nimport * as olBase from 'ol/index.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length on mobile devices.\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.MeasureLength}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(format, gettextCatalog, opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  olObj.assign(options, {displayHelpTooltip: false});\n\n  ngeoInteractionMeasureLength.call(this, format, gettextCatalog, options);\n\n};\n\nolBase.inherits(\n  exports, ngeoInteractionMeasureLength);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new ngeoInteractionMobileDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    style: style,\n    source: source\n  });\n};\n\n\nexport default exports;\n","/**\n * @module gmf.mobile.measure.lengthComponent\n */\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoInteractionMeasureLengthMobile from 'ngeo/interaction/MeasureLengthMobile.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nconst exports = angular.module('gmfMobileMeasureLength', [\n  ngeoMiscFilters.name,\n]);\n\n\nexports.value('gmfMobileMeasureLengthTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} The template url.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['gmfMobileMeasureLengthTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/measure/lengthComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/measure/lengthComponent', require('./lengthComponent.html'));\n});\n\n\n/**\n * Provide a directive to do a length measure on the mobile devices.\n *\n * Example:\n *\n *      <div gmf-mobile-measurelength\n *        gmf-mobile-measurelength-active=\"ctrl.measureLengthActive\"\n *        gmf-mobile-measurelength-map=\"::ctrl.map\">\n *      </div>\n *\n * @htmlAttribute {boolean} gmf-mobile-measurelength-active Used to active\n * or deactivate the component.\n * @htmlAttribute {number=} gmf-mobile-measurelength-precision the number of significant digits to display.\n * @htmlAttribute {ol.Map} gmf-mobile-measurelength-map The map.\n * @htmlAttribute {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction=}\n *     gmf-mobile-measurelength-sketchstyle A style for the measure length.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     gmfMobileMeasureLengthTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMobileMeasureLength\n */\nexports.component_ =\n    function(gmfMobileMeasureLengthTemplateUrl) {\n      return {\n        restrict: 'A',\n        scope: {\n          'active': '=gmfMobileMeasurelengthActive',\n          'precision': '<?gmfMobileMeasurelengthPrecision',\n          'map': '=gmfMobileMeasurelengthMap',\n          'sketchStyle': '=?gmfMobileMeasurelengthSketchstyle'\n        },\n        controller: 'GmfMobileMeasureLengthController as ctrl',\n        bindToController: true,\n        templateUrl: gmfMobileMeasureLengthTemplateUrl,\n        /**\n         * @param {angular.Scope} scope Scope.\n         * @param {angular.JQLite} element Element.\n         * @param {angular.Attributes} attrs Attributes.\n         * @param {gmf.mobile.measure.lengthComponent.Controller_} controller Controller.\n         */\n        link: (scope, element, attrs, controller) => {\n          controller.init();\n        }\n      };\n    };\n\n\nexports.directive('gmfMobileMeasurelength',\n  exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMobileMeasureLengthController\n */\nexports.Controller_ = function($scope, $filter, gettextCatalog) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {angular.$filter}\n   * @private\n   */\n  this.filter_ = $filter;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  this.scope_.$watch(() => this.active, (newVal) => {\n    this.measure.setActive(newVal);\n  });\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.precision;\n\n  /**\n   * @type {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction}\n   * @export\n   */\n  this.sketchStyle = new olStyleStyle({\n    fill: new olStyleFill({\n      color: 'rgba(255, 255, 255, 0.2)'\n    }),\n    stroke: new olStyleStroke({\n      color: 'rgba(0, 0, 0, 0.5)',\n      lineDash: [10, 10],\n      width: 2\n    }),\n    image: new olStyleRegularShape({\n      stroke: new olStyleStroke({\n        color: 'rgba(0, 0, 0, 0.7)',\n        width: 2\n      }),\n      points: 4,\n      radius: 8,\n      radius2: 0,\n      angle: 0\n    })\n  });\n\n  /**\n   * @type {ngeo.interaction.MeasureLengthMobile}\n   * @export\n   */\n  this.measure;\n\n  /**\n   * @type {ngeo.interaction.MobileDraw}\n   * @export\n   */\n  this.drawInteraction;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.dirty = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawing = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.valid = false;\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n\n  this.measure = new ngeoInteractionMeasureLengthMobile(this.filter_('ngeoUnitPrefix'), this.gettextCatalog_, {\n    precision: this.precision,\n    sketchStyle: this.sketchStyle\n  });\n\n  this.measure.setActive(this.active);\n  ngeoMiscDecorate.interaction(this.measure);\n\n\n  this.drawInteraction = /** @type {ngeo.interaction.MobileDraw} */ (\n    this.measure.getDrawInteraction());\n\n  const drawInteraction = this.drawInteraction;\n  ngeoMiscDecorate.interaction(drawInteraction);\n\n  Object.defineProperty(this, 'hasPoints', {\n    get() {\n      return this.drawInteraction.getFeature() !== null;\n    }\n  });\n\n  olEvents.listen(\n    drawInteraction,\n    'change:dirty',\n    function() {\n      this.dirty = drawInteraction.getDirty();\n\n      // this is where the angular scope is forced to be applied. We\n      // only need to do this when dirty, as going to \"no being dirty\"\n      // is made by a click on a button where Angular is within scope\n      if (this.dirty) {\n        this.scope_.$apply();\n      }\n    },\n    this\n  );\n\n  olEvents.listen(\n    drawInteraction,\n    'change:drawing',\n    function() {\n      this.drawing = drawInteraction.getDrawing();\n    },\n    this\n  );\n\n  olEvents.listen(\n    drawInteraction,\n    'change:valid',\n    function() {\n      this.valid = drawInteraction.getValid();\n    },\n    this\n  );\n\n  this.map.addInteraction(this.measure);\n};\n\n/**\n * Add current sketch point to line measure\n * @export\n */\nexports.Controller_.prototype.addPoint = function() {\n  this.drawInteraction.addToDrawing();\n};\n\n\n/**\n * Clear the sketch feature\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.drawInteraction.clearDrawing();\n};\n\n\n/**\n * Finish line measure\n * @export\n */\nexports.Controller_.prototype.finish = function() {\n  this.drawInteraction.finishDrawing();\n};\n\n\n/**\n * Deactivate the directive.\n * @export\n */\nexports.Controller_.prototype.deactivate = function() {\n  this.active = false;\n};\n\n\nexports.controller('GmfMobileMeasureLengthController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.raster.RasterService\n */\n/**\n * The Raster service.\n * Uses the c2cgeoportal's raster to obtain different kinds of\n * information at a specific coordinate.\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfRasterUrl URL to a the c2cgeoportal raster service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfRaster\n */\nconst exports = function($http, gmfRasterUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = gmfRasterUrl;\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Object=} opt_params Optional parameters for the request.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getRaster = function(coordinate, opt_params) {\n\n  const params = opt_params || {};\n  params[exports.Param.X] = coordinate[0];\n  params[exports.Param.Y] = coordinate[1];\n\n  return this.$http_.get(this.url_, {\n    params\n  }).then(this.handleGetRaster_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Object.<string, number>} The response object.\n * @private\n */\nexports.prototype.handleGetRaster_ = function(resp) {\n  return resp.data;\n};\n\n\n/**\n * @enum {string}\n */\nexports.Param = {\n  X: 'lon',\n  Y: 'lat'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfRaster', []);\nexports.module.service('gmfRaster', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasurePointMobile\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMobileDraw from 'ngeo/interaction/MobileDraw.js';\nimport * as olBase from 'ol/index.js';\nimport * as olObj from 'ol/obj.js';\nimport olGeomPoint from 'ol/geom/Point.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure by coordinate (point) on mobile devices.\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {ngeox.numberCoordinates} format the number formatter\n * @param {string} coordFormat the coordinates formatter\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, coordFormat, options = /** @type {ngeox.interaction.MeasureOptions} */ ({})) {\n\n  olObj.assign(options, {displayHelpTooltip: false});\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */(options));\n\n  /**\n   * @type {ngeox.numberCoordinates}\n   * @private\n   */\n  this.format_ = format;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.coordFormat_ = coordFormat;\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new ngeoInteractionMobileDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('Point'),\n    style: style,\n    source: source\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomPoint);\n  const dec = this.decimals;\n  const output = ngeoInteractionMeasure.getFormattedPoint(geom, dec, this.format_, this.coordFormat_);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n\nexport default exports;\n","/**\n * @module gmf.mobile.measure.pointComponent\n */\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasurePointMobile from 'ngeo/interaction/MeasurePointMobile.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nconst exports = angular.module('gmfMobileMeasurePoint', [\n  gmfRasterRasterService.module.name,\n  ngeoMiscDebounce.name,\n]);\n\n\nexports.value('gmfMobileMeasurePointTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} The template url.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['gmfMobileMeasurePointTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/measure/pointComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/measure/pointComponent', require('./pointComponent.html'));\n});\n\n\n/**\n * Provide a directive to do a point (coordinate and elevation) measure on the\n * mobile devices.\n *\n * Example:\n *\n *      <div gmf-mobile-measurepoint\n *        gmf-mobile-measurepoint-active=\"ctrl.measurePointActive\"\n *        gmf-mobile-measurepoint-layersconfig=\"::ctrl.measurePointLayers\"\n *        gmf-mobile-measurepoint-map=\"::ctrl.map\">\n *      </div>\n *\n * Where ctrl.measurePointLayers is an object like this:\n *\n *      this.measurePointLayers = [\n *        {name: 'srtm', unit: 'm', decimals: 2},\n *        {name: 'wind', {unit: 'km/h'},\n *        {name: 'humidity'}\n *      ];\n *\n * @htmlAttribute {boolean} gmf-mobile-measurepoint-active Used to active\n * or deactivate the component.\n * @htmlAttribute {number=} gmf-mobile-measurepoint-coordinatedecimals number\n *     of decimal to display for the coordinate.\n * @htmlAttribute {Array.<gmf.mobile.measure.pointComponent.LayerConfig>}\n *     gmf-mobile-measurepoint-layersconfig Raster elevation layers to get\n *     information under the point and its configuaration.\n * @htmlAttribute {ol.Map} gmf-mobile-measurepoint-map The map.\n * @htmlAttribute {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction=}\n *     gmf-mobile-measurepoint-sketchstyle A style for the measure point.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     gmfMobileMeasurePointTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMobileMeasurePoint\n */\nexports.component_ =\n    function(gmfMobileMeasurePointTemplateUrl) {\n      return {\n        restrict: 'A',\n        scope: {\n          'active': '=gmfMobileMeasurepointActive',\n          'getCoordinateDecimalsFn': '&?gmfMobileMeasurepointCoordinatedecimals',\n          'getLayersConfigFn': '&gmfMobileMeasurepointLayersconfig',\n          'map': '=gmfMobileMeasurepointMap',\n          'sketchStyle': '=?gmfMobileMeasurepointSketchstyle',\n          'format': '<gmfMobileMeasurepointFormat'\n        },\n        controller: 'GmfMobileMeasurePointController as ctrl',\n        bindToController: true,\n        templateUrl: gmfMobileMeasurePointTemplateUrl,\n        /**\n         * @param {!angular.Scope} scope Scope.\n         * @param {!angular.JQLite} element Element.\n         * @param {!angular.Attributes} attrs Attributes.\n         * @param {!gmf.mobile.measure.pointComponent.Controller_} controller Controller.\n         */\n        link: (scope, element, attrs, controller) => {\n          controller.init();\n        }\n      };\n    };\n\n\nexports.directive('gmfMobileMeasurepoint',\n  exports.component_);\n\n\n/**\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$filter} $filter Angular filter service.\n * @param {gmf.raster.RasterService} gmfRaster gmf Raster service.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMobileMeasurePointController\n */\nexports.Controller_ = function(gettextCatalog, $scope, $filter,\n  gmfRaster, ngeoDebounce) {\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  $scope.$watch(() => this.active, (newVal) => {\n    this.measure.setActive(newVal);\n    this.handleMeasureActiveChange_();\n  });\n\n  const coordinateDecimalsFn = this['getCoordinateDecimalsFn'];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.coordinateDecimals = coordinateDecimalsFn ? coordinateDecimalsFn() : 0;\n\n  /**\n   * @type {!Array.<gmf.mobile.measure.pointComponent.LayerConfig>}\n   * @private\n   */\n  this.layersConfig;\n\n  /**\n   * @type {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction}\n   * @export\n   */\n  this.sketchStyle;\n\n  if (this.sketchStyle === undefined) {\n    this.sketchStyle = new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      }),\n      stroke: new olStyleStroke({\n        color: 'rgba(0, 0, 0, 0.5)',\n        lineDash: [10, 10],\n        width: 2\n      }),\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(0, 0, 0, 0.7)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    });\n  }\n\n  /**\n   * @type {string}\n   */\n  this.format;\n\n  /**\n   * @type {ngeo.interaction.MeasurePointMobile}\n   * @export\n   */\n  this.measure;\n\n  /**\n   * @type {ngeo.interaction.MobileDraw}\n   * @export\n   */\n  this.drawInteraction;\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  this.measure = new ngeoInteractionMeasurePointMobile(\n    /** @type {ngeox.numberCoordinates} */ (this.$filter_('ngeoNumberCoordinates')),\n    this.format || '{x}, {y}',\n    {\n      decimals: this.coordinateDecimals,\n      sketchStyle: this.sketchStyle\n    }\n  );\n  this.measure.setActive(this.active);\n  ngeoMiscDecorate.interaction(this.measure);\n  this.drawInteraction = /** @type {ngeo.interaction.MobileDraw} */ (this.measure.getDrawInteraction());\n  ngeoMiscDecorate.interaction(this.drawInteraction);\n\n  const layersConfig = this['getLayersConfigFn']();\n  googAsserts.assert(Array.isArray(layersConfig));\n  this.layersConfig = layersConfig;\n\n  this.map.addInteraction(this.measure);\n};\n\n\n/**\n * Deactivate the directive.\n * @export\n */\nexports.Controller_.prototype.deactivate = function() {\n  this.active = false;\n};\n\n\n/**\n * @param {string} str String to translate.\n * @return {string} The translated text.\n * @export\n */\nexports.Controller_.prototype.translate = function(str) {\n  return this.gettextCatalog_.getString(str);\n};\n\n\n/**\n * Called when the measure becomes active or inactive. Act accordingly:\n * - on activate, listen to the map property changes to call for the elevation\n *   service.\n * - on deactivate, unlisten\n * @private\n */\nexports.Controller_.prototype.handleMeasureActiveChange_ = function() {\n  if (this.measure.getActive()) {\n    const view = this.map.getView();\n    this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n      view,\n      'propertychange',\n      this.ngeoDebounce_(\n        this.getMeasure_.bind(this), 300, /* invokeApply */ true),\n      this);\n    this.getMeasure_();\n  } else if (this.mapViewPropertyChangeEventKey_) {\n    olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n    this.mapViewPropertyChangeEventKey_ = null;\n  }\n};\n\n\n/**\n * Call the elevation service to get information about the measure at\n * the current map center location.\n * @private\n */\nexports.Controller_.prototype.getMeasure_ = function() {\n  const center = this.map.getView().getCenter();\n  googAsserts.assertArray(center);\n  const params = {\n    'layers': this.layersConfig.map(config => config.name).join(',')\n  };\n  this.gmfRaster_.getRaster(center, params).then((object) => {\n    const el = this.measure.getTooltipElement();\n    const ctn = document.createElement('div');\n    const className = 'gmf-mobile-measure-point';\n    ctn.className = className;\n\n    for (const config of this.layersConfig) {\n      const key = config.name;\n      if (key in object) {\n        let value = object[key];\n        const childEl = document.createElement('div');\n        childEl.className = `gmf-mobile-measure-point-${key}`;\n        const unit = config.unit || '';\n        const decimals = config.decimals && config.decimals > 0 || 0;\n        value = this.$filter_('number')(value, decimals);\n        childEl.innerHTML = [this.translate(key), ': ', value, ' ', unit].join('');\n        ctn.appendChild(childEl);\n      }\n    }\n\n    const previousCtn = el.getElementsByClassName(className);\n    if (previousCtn[0]) {\n      previousCtn[0].remove();\n    }\n    el.appendChild(ctn);\n\n  });\n};\n\n\nexports.controller('GmfMobileMeasurePointController',\n  exports.Controller_);\n\n/**\n * @typedef {{\n *     name: string,\n *     decimals: (number|undefined),\n *     unit: (string|undefined)\n * }}\n */\nexports.LayerConfig;\n\n\nexport default exports;\n","/**\n * @module gmf.mobile.measure.module\n */\nimport gmfMobileMeasureLengthComponent from 'gmf/mobile/measure/lengthComponent.js';\nimport gmfMobileMeasurePointComponent from 'gmf/mobile/measure/pointComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMobileMeasureModule', [\n  gmfMobileMeasureLengthComponent.name,\n  gmfMobileMeasurePointComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.mobile.navigation.module\n */\nimport gmfMobileNavigationComponent from 'gmf/mobile/navigation/component.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMobileNavigationModule', [\n  gmfMobileNavigationComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.geolocation.mobile\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport * as olEasing from 'ol/easing.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeolocation from 'ol/Geolocation.js';\nimport olMap from 'ol/Map.js';\nimport olGeomPoint from 'ol/geom/Point.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMobileGeolocation', [\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessageNotification.module.name,\n]);\n\n/**\n * @enum {string}\n */\nexports.GeolocationEventType = {\n  /**\n   * Triggered when an error occurs.\n   */\n  ERROR: 'mobile-geolocation-error'\n};\n\n/**\n * Provide a \"mobile geolocation\" directive.\n *\n * Example:\n *\n *      <button ngeo-mobile-geolocation\n *        ngeo-mobile-geolocation-map=\"ctrl.map\"\n *        ngeo-mobile-geolocation-options=\"ctrl.mobileGeolocationOptions\">\n *      </button>\n *\n * See our live example: [../examples/mobilegeolocation.html](../examples/mobilegeolocation.html)\n *\n * @htmlAttribute {ol.Map} ngeo-mobile-geolocation-map The map.\n * @htmlAttribute {ngeox.MobileGeolocationDirectiveOptions} ngeo-mobile-geolocation-options The options.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoMobileGeolocation\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    scope: {\n      'getMobileMapFn': '&ngeoMobileGeolocationMap',\n      'getMobileGeolocationOptionsFn': '&ngeoMobileGeolocationOptions'\n    },\n    controller: 'ngeoGeolocationMobileController'\n  };\n};\n\n\nexports.directive('ngeoMobileGeolocation', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope The directive's scope.\n * @param {angular.JQLite} $element Element.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoMobileGeolocationController\n */\nexports.Controller_ = function($scope, $element,\n  gettextCatalog, ngeoFeatureOverlayMgr, ngeoNotification) {\n\n  $element.on('click', this.toggleTracking.bind(this));\n\n  const map = $scope['getMobileMapFn']();\n  googAsserts.assertInstanceof(map, olMap);\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {!ol.Map}\n   * @private\n   */\n  this.map_ = map;\n\n  const options = $scope['getMobileGeolocationOptionsFn']() || {};\n  googAsserts.assertObject(options);\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.notification_ = ngeoNotification;\n\n  /**\n   * @type {ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n  /**\n   * @type {ol.Geolocation}\n   * @private\n   */\n  this.geolocation_ = new olGeolocation({\n    projection: map.getView().getProjection(),\n    trackingOptions: /** @type {GeolocationPositionOptions} */ ({\n      enableHighAccuracy: true\n    })\n  });\n\n  if (options.autorotate) {\n    this.autorotateListener();\n  }\n\n  // handle geolocation error.\n  this.geolocation_.on('error', function(error) {\n    this.untrack_();\n    let msg;\n    switch (error.code) {\n      case 1:\n        msg = gettextCatalog.getString('User denied the request for Geolocation.');\n        break;\n      case 2:\n        msg = gettextCatalog.getString('Location information is unavailable.');\n        break;\n      case 3:\n        msg = gettextCatalog.getString('The request to get user location timed out.');\n        break;\n      default:\n        msg = gettextCatalog.getString('Geolocation: An unknown error occurred.');\n        break;\n    }\n    this.notification_.error(msg);\n    $scope.$emit(exports.GeolocationEventType.ERROR, error);\n  }, this);\n\n  /**\n   * @type {ol.Feature}\n   * @private\n   */\n  this.positionFeature_ = new olFeature();\n\n  if (options.positionFeatureStyle) {\n    this.positionFeature_.setStyle(options.positionFeatureStyle);\n  }\n\n  /**\n   * @type {ol.Feature}\n   * @private\n   */\n  this.accuracyFeature_ = new olFeature();\n\n  if (options.accuracyFeatureStyle) {\n    this.accuracyFeature_.setStyle(options.accuracyFeatureStyle);\n  }\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.zoom_ = options.zoom;\n\n  /**\n   * Whether to recenter the map at the position it gets updated\n   * @type {boolean}\n   * @private\n   */\n  this.follow_ = false;\n\n  /**\n   * A flag used to determine whether the view was changed by me or something\n   * else. In the latter case, stop following.\n   * @type {boolean}\n   * @private\n   */\n  this.viewChangedByMe_ = false;\n\n  olEvents.listen(this.geolocation_, 'change:accuracyGeometry', () => {\n    this.accuracyFeature_.setGeometry(this.geolocation_.getAccuracyGeometry());\n    this.setPosition_();\n  });\n\n  olEvents.listen(this.geolocation_, 'change:position', () => {\n    this.setPosition_();\n  });\n\n  const view = map.getView();\n\n  olEvents.listen(view, 'change:center', this.handleViewChange_, this);\n\n  olEvents.listen(view, 'change:resolution', this.handleViewChange_, this);\n\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.toggleTracking = function() {\n  if (this.geolocation_.getTracking()) {\n    // if map center is different than geolocation position, then track again\n    const currentPosition = this.geolocation_.getPosition();\n    // if user is using Firefox and selects the \"not now\" option, OL geolocation\n    // doesn't return an error\n    if (currentPosition === undefined) {\n      this.untrack_();\n      this.$scope_.$emit(exports.GeolocationEventType.ERROR, null);\n      return;\n    }\n    googAsserts.assert(currentPosition !== undefined);\n    // stop tracking if the position is close to the center of the map.\n    const center = this.map_.getView().getCenter();\n    const diff = Math.abs(currentPosition[0] - center[0]) + Math.abs(currentPosition[1] - center[1]);\n    if (diff < 2) {\n      this.untrack_();\n    } else {\n      this.untrack_();\n      this.track_();\n    }\n  } else {\n    this.track_();\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.track_ = function() {\n  this.featureOverlay_.addFeature(this.positionFeature_);\n  this.featureOverlay_.addFeature(this.accuracyFeature_);\n  this.follow_ = true;\n  this.geolocation_.setTracking(true);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.untrack_ = function() {\n  this.featureOverlay_.clear();\n  this.follow_ = false;\n  this.geolocation_.setTracking(false);\n  this.notification_.clear();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.setPosition_ = function() {\n  const position = /** @type {ol.Coordinate} */ (this.geolocation_.getPosition());\n  const point = new olGeomPoint(position);\n\n  this.positionFeature_.setGeometry(point);\n  const accuracy = this.accuracyFeature_.getGeometry();\n\n  if (this.follow_) {\n    this.viewChangedByMe_ = true;\n    if (this.zoom_ !== undefined) {\n      this.map_.getView().setCenter(position);\n      this.map_.getView().setZoom(this.zoom_);\n    } else if (accuracy) {\n      const size = /** @type {!ol.Size} */ (this.map_.getSize());\n      this.map_.getView().fit(/** @type {!ol.geom.Polygon} */ (accuracy), size);\n    }\n    this.viewChangedByMe_ = false;\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleViewChange_ = function(event) {\n  if (this.follow_ && !this.viewChangedByMe_) {\n    this.follow_ = false;\n  }\n};\n\n\n// Orientation control events\nexports.Controller_.prototype.autorotateListener = function() {\n  let currentAlpha = 0;\n  if (window.hasOwnProperty('ondeviceorientationabsolute')) {\n    window.addEventListener('deviceorientationabsolute', (evt) => {\n      currentAlpha = this.handleRotate_(evt.alpha, currentAlpha);\n    }, true);\n  } else if (window.hasOwnProperty('ondeviceorientation')) {\n    window.addEventListener('deviceorientation', (evt) => {\n      if (evt.webkitCompassHeading) { // check for iOS property\n        currentAlpha = this.handleRotate_(-evt.webkitCompassHeading, currentAlpha);\n      } else { // non iOS\n        currentAlpha = this.handleRotate_(evt.alpha - 270, currentAlpha);\n      }\n    }, true);\n  } else {\n    console.error('Orientation is not supported on this device');\n  }\n};\n\n/**\n * Handle rotation.\n * @param {number} eventAlpha .\n * @param {number} currentAlpha .\n * @return {number} .\n * @private\n */\nexports.Controller_.prototype.handleRotate_ = function(eventAlpha, currentAlpha) {\n  if (this.geolocation_.getTracking() && Math.abs(eventAlpha - currentAlpha) > 0.2) {\n    currentAlpha = eventAlpha;\n    const radAlpha = currentAlpha * Math.PI / 180;\n    this.map_.getView().animate({\n      rotation: radAlpha,\n      duration: 350,\n      easing: olEasing.linear\n    });\n  }\n  return currentAlpha;\n};\n\n\nexports.controller('ngeoGeolocationMobileController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.controllers.AbstractMobileController\n */\nimport gmfControllersAbstractAppController from 'gmf/controllers/AbstractAppController.js';\nimport gmfMobileMeasureModule from 'gmf/mobile/measure/module.js';\nimport gmfMobileNavigationModule from 'gmf/mobile/navigation/module.js';\nimport gmfQueryWindowComponent from 'gmf/query/windowComponent.js';\nimport ngeoGeolocationMobile from 'ngeo/geolocation/mobile.js';\nimport * as olBase from 'ol/index.js';\nimport * as olObj from 'ol/obj.js';\nimport * as olProj from 'ol/proj.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olControlScaleLine from 'ol/control/ScaleLine.js';\nimport olControlZoom from 'ol/control/Zoom.js';\nimport olControlRotate from 'ol/control/Rotate.js';\nimport * as olInteraction from 'ol/interaction.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Mobile application abstract controller.\n *\n * This file includes `goog.require`'s mobile components/directives used\n * by the HTML page and the controller to provide the configuration.\n *\n * @param {gmfx.Config} config A part of the application config.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @extends {gmf.controllers.AbstractAppController}\n * @ngdoc controller\n * @ngInject\n * @export\n */\nconst exports = function(config, $scope, $injector) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.leftNavVisible = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.rightNavVisible = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.searchOverlayVisible = false;\n\n  /**\n   * @type {ngeox.SearchDirectiveListeners}\n   * @export\n   */\n  this.searchListeners = /** @type {ngeox.SearchDirectiveListeners} */ ({\n    open: function() {\n      this.searchOverlayVisible = true;\n    }.bind(this),\n    close: function() {\n      this.searchOverlayVisible = false;\n    }.bind(this)\n  });\n\n  const positionFeatureStyle = config.positionFeatureStyle || new olStyleStyle({\n    image: new olStyleCircle({\n      radius: 6,\n      fill: new olStyleFill({color: 'rgba(230, 100, 100, 1)'}),\n      stroke: new olStyleStroke({color: 'rgba(230, 40, 40, 1)', width: 2})\n    })\n  });\n\n  const accuracyFeatureStyle = config.accuracyFeatureStyle || new olStyleStyle({\n    fill: new olStyleFill({color: 'rgba(100, 100, 230, 0.3)'}),\n    stroke: new olStyleStroke({color: 'rgba(40, 40, 230, 1)', width: 2})\n  });\n\n  /**\n   * @type {ngeox.MobileGeolocationDirectiveOptions}\n   * @export\n   */\n  this.mobileGeolocationOptions = {\n    positionFeatureStyle: positionFeatureStyle,\n    accuracyFeatureStyle: accuracyFeatureStyle,\n    zoom: config.geolocationZoom,\n    autorotate: config.autorotate\n  };\n\n  const viewConfig = {\n    projection: olProj.get(`EPSG:${config.srid || 21781}`)\n  };\n  olObj.assign(viewConfig, config.mapViewConfig || {});\n\n  const arrow = gmfControllersAbstractAppController.prototype.getLocationIcon();\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    pixelRatio: config.mapPixelRatio,\n    layers: [],\n    view: new olView(viewConfig),\n    controls: config.mapControls || [\n      new olControlScaleLine(),\n      new olControlZoom({\n        zoomInTipLabel: '',\n        zoomOutTipLabel: ''\n      }),\n      new olControlRotate({\n        label: arrow,\n        tipLabel: ''\n      })\n    ],\n    interactions:\n        config.mapInteractions ||\n        olInteraction.defaults({pinchRotate: true})\n  });\n\n  gmfControllersAbstractAppController.call(this, config, $scope, $injector);\n\n  this.manageResize = true;\n  this.resizeTransition = 500;\n\n  // Close right nave on successful login.\n  $scope.$watch(() => this.gmfUser.username, (newVal) => {\n    if (newVal !== null && this.navIsVisible()) {\n      this.rightNavVisible = false;\n    }\n  });\n\n  /**\n   * @const {string}\n   * @export\n   */\n  this.redirectUrl = $injector.get('redirectUrl');\n};\n\nolBase.inherits(exports, gmfControllersAbstractAppController);\n\n\n/**\n * @export\n */\nexports.prototype.toggleLeftNavVisibility = function() {\n  this.leftNavVisible = !this.leftNavVisible;\n};\n\n\n/**\n * @export\n */\nexports.prototype.toggleRightNavVisibility = function() {\n  this.rightNavVisible = !this.rightNavVisible;\n};\n\n\n/**\n * Hide both navigation menus.\n * @export\n */\nexports.prototype.hideNav = function() {\n  this.leftNavVisible = this.rightNavVisible = false;\n};\n\n\n/**\n * @return {boolean} Return true if one of the navigation menus is visible,\n * otherwise false.\n * @export\n */\nexports.prototype.navIsVisible = function() {\n  return this.leftNavVisible || this.rightNavVisible;\n};\n\n\n/**\n * Hide search overlay.\n * @export\n */\nexports.prototype.hideSearchOverlay = function() {\n  this.searchOverlayVisible = false;\n};\n\n\n/**\n * @return {boolean} Return true if the left navigation menus is visible,\n * otherwise false.\n * @export\n */\nexports.prototype.leftNavIsVisible = function() {\n  return this.leftNavVisible;\n};\n\n\n/**\n * @return {boolean} Return true if the right navigation menus is visible,\n * otherwise false.\n * @export\n */\nexports.prototype.rightNavIsVisible = function() {\n  return this.rightNavVisible;\n};\n\n\n/**\n * Open the menu with corresponding to the data-target attribute value.\n * @param {string} target the data-target value.\n * @export\n */\nexports.prototype.openNavMenu = function(target) {\n  const navElements = document.getElementsByClassName('gmf-mobile-nav-button');\n  for (let i = 0; i < navElements.length; i++) {\n    const element = navElements[i];\n    if (element.dataset && element.dataset.target === target) {\n      element.click();\n    }\n  }\n};\n\n\nexports.module = angular.module('GmfAbstractMobileControllerModule', [\n  gmfControllersAbstractAppController.module.name,\n  gmfMobileMeasureModule.name,\n  gmfMobileNavigationModule.name,\n  gmfQueryWindowComponent.name,\n  ngeoGeolocationMobile.name,\n]);\n\nexports.module.controller('AbstractMobileController', exports);\n\nexports.module.value('isMobile', true);\n\nexports.module.value('ngeoQueryOptions', {\n  'tolerance': 10\n});\n\n\nexport default exports;\n","/**\n * @module app\n */\nconst exports = {};\n\n/**\n * This file provides the \"app\" namespace, which is the\n * application's main namespace. And it defines the application's Angular\n * module.\n */\n\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('app', []);\n\nexports.module.config(['$compileProvider', function($compileProvider) {\n  if (!('debug' in ngeoUtils.decodeQueryString(window.location.search))) {\n    // Disable the debug info\n    $compileProvider.debugInfoEnabled(false);\n  }\n}]);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.EPSG2056\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\nimport somerc from 'ngeo/proj/somerc.js';\nimport proj4 from 'proj4';\n\nconst epsg2056def = [\n  `+proj=${somerc}`,\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=2600000',\n  '+y_0=1200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg2056extent = [2420000, 1030000, 2900000, 1350000];\n\nproj4.defs('EPSG:2056', epsg2056def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:2056').setExtent(epsg2056extent);\n\nconst exports = 'EPSG:2056';\n\n\nexport default exports;\n","/**\n * @module app.mobile_alt.Controller\n */\n/**\n * Application entry point.\n *\n * This file includes `goog.require`'s for all the components/directives used\n * by the HTML page and the controller to provide the configuration.\n */\n\nimport gmfControllersAbstractMobileController from 'gmf/controllers/AbstractMobileController.js';\nimport './less/main.less';\nimport appBase from '../appmodule.js';\nimport ngeoProjEPSG2056 from 'ngeo/proj/EPSG2056.js';\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\nimport * as olBase from 'ol/index.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport Raven from 'raven-js/src/raven.js';\nimport RavenPluginsAngular from 'raven-js/plugins/angular.js';\n\nif (!window.requestAnimationFrame) {\n  alert('Your browser is not supported, please update it or use another one. You will be redirected.\\n\\n'\n    + 'Votre navigateur n\\'est pas supporté, veuillez le mettre à jour ou en utiliser un autre. Vous allez être redirigé.\\n\\n'\n    + 'Ihr Browser wird nicht unterstützt, bitte aktualisieren Sie ihn oder verwenden Sie einen anderen. Sie werden weitergeleitet.');\n  window.location = 'http://geomapfish.org/';\n}\n\n/**\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @extends {gmf.controllers.AbstractMobileController}\n * @ngInject\n * @export\n */\nconst exports = function($scope, $injector) {\n  gmfControllersAbstractMobileController.call(this, {\n    autorotate: true,\n    mapPixelRatio: 1,\n    srid: 21781,\n    mapViewConfig: {\n      center: [632464, 185457],\n      zoom: 3,\n      resolutions: [250, 100, 50, 20, 10, 5, 2, 1, 0.5, 0.25, 0.1, 0.05]\n    }\n  }, $scope, $injector);\n\n  /**\n   * @type {Array.<gmf.mobile.measure.pointComponent.LayerConfig>}\n   * @export\n   */\n  this.elevationLayersConfig = [\n    {name: 'aster', unit: 'm'},\n    {name: 'srtm', unit: 'm'}\n  ];\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.searchDelay = 50;\n\n  /**\n   * @type {Array.<string>}\n   * @export\n   */\n  this.searchCoordinatesProjections = [ngeoProjEPSG21781, ngeoProjEPSG2056, 'EPSG:4326'];\n\n\n  /**\n   * @type {ol.style.Style}\n   * @export\n   */\n  this.customMeasureStyle = new olStyleStyle({\n    fill: new olStyleFill({\n      color: 'rgba(255, 128, 128, 0.2)'\n    }),\n    stroke: new olStyleStroke({\n      color: 'rgba(255, 0, 0, 0.5)',\n      lineDash: [10, 10],\n      width: 2\n    }),\n    image: new olStyleRegularShape({\n      stroke: new olStyleStroke({\n        color: 'rgba(255, 0, 0, 0.7)',\n        width: 2\n      }),\n      points: 4,\n      radius: 8,\n      radius2: 0,\n      angle: 0\n    })\n  });\n\n  if ($injector.has('sentryUrl')) {\n    const options = $injector.has('sentryOptions') ? $injector.get('sentryOptions') : undefined;\n    const raven = new Raven();\n    raven.config($injector.get('sentryUrl'), options)\n      .addPlugin(RavenPluginsAngular)\n      .install();\n  }\n};\n\nolBase.inherits(exports, gmfControllersAbstractMobileController);\n\n\nexports.module = angular.module('Appmobile_alt', [\n  appBase.module.name,\n  gmfControllersAbstractMobileController.module.name,\n]);\n\nexports.module.controller('AlternativeMobileController', exports);\n\nexport default exports;\n","module.exports = \"<a class=\\\"btn btn-default\\\" ng-if=ctrl.active ng-click=ctrl.deactivate()> <span class=\\\"fa fa-times\\\"></span> {{'Close' | translate}} </a> \";","module.exports = \"<a class=\\\"btn btn-default\\\" ng-if=\\\"ctrl.drawing && (!ctrl.valid)\\\" ng-click=ctrl.addPoint()> <span class=\\\"fa fa-check\\\"></span> {{'Set as starting point' | translate}} </a> <a class=\\\"btn btn-default\\\" ng-if=ctrl.dirty ng-click=ctrl.addPoint()> <span class=\\\"fa fa-plus\\\"></span> {{'Add new point' | translate}} </a> <a class=\\\"btn btn-default\\\" ng-if=\\\"ctrl.drawing && ctrl.valid && !ctrl.dirty\\\" ng-click=ctrl.finish()> <span class=\\\"fa fa-check\\\"></span> {{'Terminate' | translate}} </a> <a class=\\\"btn btn-default\\\" ng-if=ctrl.valid ng-click=ctrl.clear()> <span class=\\\"fa fa-repeat\\\"></span> {{'Clear' | translate}} </a> <a class=\\\"btn btn-default\\\" ng-if=ctrl.active ng-click=ctrl.deactivate()> <span class=\\\"fa fa-times\\\"></span> {{'Close' | translate}} </a> \";","module.exports = \"<div class=ngeo-displaywindow ng-show=$ctrl.open ng-style=$ctrl.style> <div class=windowcontainer> <button type=button class=\\\"btn fa-close close\\\" ng-click=$ctrl.close()> </button> <div class=animation-container> <div class=slide-animation> <div class=\\\"header ui-draggable-handle\\\" ng-if=\\\"$ctrl.title !== null\\\"> <p class=title>{{ $ctrl.title }}</p> </div> <div class=details ng-if=$ctrl.content ng-bind-html=$ctrl.content> </div> <div class=details ng-if=\\\"$ctrl.url !== null\\\"> <iframe frameborder=0 type=text/html height=100% width=100% ng-src=\\\"{{ $ctrl.urlTrusted }}\\\"></iframe> </div> </div> </div> </div> </div> \";","module.exports = \"<ul class=gmf-theme-selector> <li ng-repeat=\\\"theme in $ctrl.themes\\\" ng-click=$ctrl.setTheme(theme) ng-class=\\\"{'gmf-theme-selector-active': $ctrl.gmfThemeManager.getThemeName() == theme.name}\\\"> <img class=gmf-thumb ng-src={{::theme.icon}} /> <span class=gmf-text>{{theme.name | translate}}</span> </li> </ul> \";","module.exports = \"<div class=gmf-search> <input type=text ng-attr-placeholder={{$ctrl.placeholder|translate}} class=form-control ng-model=$ctrl.inputValue ngeo-search=$ctrl.options ngeo-search-datasets=$ctrl.datasets ngeo-search-listeners=$ctrl.listeners> <span class=\\\"gmf-clear-button ng-hide\\\" ng-hide=\\\"!$ctrl.clearButton || $ctrl.inputValue == ''\\\" ng-click=$ctrl.onClearButton()> </span> </div> <span ng-if=$ctrl.colorChooser> <span ng-show=$ctrl.displayColorPicker ngeo-popover ngeo-popover-placement=bottom> <button class=\\\"gmf-color-button fa fa-tint\\\" ngeo-popover-anchor data-original-title=\\\"{{'Change the color of the search result'|translate}}\\\"></button> <div ngeo-popover-content> <div ngeo-colorpicker ngeo-colorpicker-color=$ctrl.color></div> </div> </span> </span> \";","module.exports = \"<table class=ngeo-colorpicker-palette> <tr ng-repeat=\\\"colors in ::ctrl.colors\\\"> <td ng-repeat=\\\"color in ::colors\\\" ng-click=ctrl.setColor(color) ng-class=\\\"{'ngeo-colorpicker-selected': color == ctrl.color}\\\"> <div ng-style=\\\"::{'background-color': color}\\\"></div> </td> </tr> </table> \";","module.exports = \"<div class=gmf-displayquerywindow ng-class=\\\"{'desktop': ctrl.desktop, 'mobile': !ctrl.desktop}\\\" ng-show=ctrl.open ngeo-swipe-up=\\\"ctrl.collapsed = false\\\" ngeo-swipe-down=\\\"ctrl.collapsed = true\\\" ngeo-swipe-disable-mouse ng-swipe-disable-mouse ng-swipe-left=ctrl.next() ng-swipe-right=ctrl.previous()> <button class=collapse-button type=button ng-show=::!ctrl.desktop ng-click=\\\"ctrl.collapsed = !ctrl.collapsed\\\" ng-class=\\\"[ctrl.collapsed ? 'collapse-button-up' : 'collapse-button-down']\\\"> </button> <div class=windowcontainer> <button type=button class=\\\"btn fa-close close\\\" ng-click=ctrl.close()> </button> <div class=animation-container ng-class=\\\"[ctrl.collapsed ? '' : 'animation-container-detailed', ctrl.isNext ? 'next' : 'previous']\\\"> <div ng-animate-swap=ctrl.animate class=\\\"slide-animation gmf-animatable\\\"> <div class=header> <p class=title>{{ctrl.source.label | translate}}</p> <p class=subtitle>{{ctrl.getFeatureValues()[ctrl.source.identifierAttributeField]}}</p> </div> <div class=details> <table> <tr ng-repeat=\\\"(key, value) in ctrl.getFeatureValues()\\\" ng-if=\\\"value !== undefined\\\"> <td class=details-key ng-bind-html=\\\"key | translate | ngeoTrustHtml\\\"></td> <td class=details-value ng-bind-html=\\\"value | ngeoTrustHtml\\\"></td> </tr> </table> </div> </div> </div> <div class=navigate> <div class=placeholder> <button type=button class=\\\"previous btn\\\" ng-disabled=ctrl.isFirst() ng-show=\\\"ctrl.getResultLength() > 1\\\" ng-click=ctrl.previous()> <span ng-show=::ctrl.desktop>{{'Prev.' | translate}}</span> </button> </div> <div class=results> <span ng-show=::!ctrl.desktop>{{'Result' | translate}}</span> <span>{{ctrl.currentResult + 1}}</span> <span>/</span> <span>{{ctrl.getResultLength()}}</span> <div ng-show=::ctrl.desktop class=dropup> <button type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span class=\\\"fa fa-filter\\\"></span> <span class=\\\"fa fa-caret-up\\\"></span> </button> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li> <a href=# ng-click=ctrl.setSelectedSource(null)> <i class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedSource === null}\\\"> </i> <span>{{'All layers' | translate}} ({{ctrl.ngeoQueryResult.total}})</span> </a> </li> <li role=separator class=divider> </li> <li ng-repeat-start=\\\"source in ctrl.ngeoQueryResult.sources | filter: ctrl.sourcesFilter\\\" ng-repeat-end ng-class=\\\"{'disabled': source.features.length <= 0}\\\"> <a href=# ng-click=ctrl.setSelectedSource(source)> <i class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedSource === source}\\\"> </i> <span>{{source.label | translate}} ({{source.features.length}})</span> </a> </li> </ul> </div> </div> <div class=placeholder> <button type=button class=\\\"next btn\\\" ng-disabled=ctrl.isLast() ng-show=\\\"ctrl.getResultLength() > 1\\\" ng-click=ctrl.next()> <span ng-show=::ctrl.desktop>{{'Next' | translate}}</span> </button> </div> </div> </div> </div> \";","module.exports = \"<div class=\\\"gmf-displayquerygrid panel\\\" ng-show=ctrl.active> <div class=close ng-click=ctrl.clear()> &times; </div> <ul class=\\\"nav nav-pills\\\" role=tablist> <li ng-repeat=\\\"gridSource in ctrl.getGridSources() track by gridSource.source.label\\\" role=presentation ng-class=\\\"{'active' : ctrl.isSelected(gridSource)}\\\" ng-click=ctrl.selectTab(gridSource)> <a href=#{{ctrl.escapeValue(gridSource.source.label)}} data-target=#{{ctrl.escapeValue(gridSource.source.label)}} aria-controls={{ctrl.escapeValue(gridSource.source.label)}} role=tab data-toggle=tab> <span ng-if=\\\"gridSource.source.tooManyResults !== true\\\"> {{gridSource.source.label | translate}} ({{gridSource.source.features.length}}) </span> <span ng-if=\\\"gridSource.source.tooManyResults === true\\\"> {{gridSource.source.label | translate}} ({{gridSource.source.totalFeatureCount}}*) </span> </a> </li> </ul> <div class=tab-content> <div ng-repeat=\\\"gridSource in ctrl.getGridSources() track by gridSource.source.label\\\" role=tabpanel class=tab-pane ng-class=\\\"{'active' : ctrl.isSelected(gridSource)}\\\" id={{ctrl.escapeValue(gridSource.source.label)}}> <ngeo-grid ngeo-grid-configuration=gridSource.configuration ng-if=\\\"gridSource.source.tooManyResults !== true\\\"> </ngeo-grid> <div ng-if=\\\"gridSource.source.tooManyResults === true\\\"> <div class=\\\"gmf-displayquerygrid-message alert alert-warning\\\"> <p><span translate>The results can not be displayed because the maximum number has been reached</span> ({{gridSource.source.limit}}).</p> <p translate>Please refine your query.</p> </div> </div> </div> </div> <div class=navbar ng-show=\\\"!ctrl.pending && ctrl.getActiveGridSource() && ctrl.getActiveGridSource().configuration !== null\\\"> <ul class=\\\"nav navbar-nav navbar-right\\\"> <li class=ng-hide ng-show=ctrl.isOneSelected()> <p class=\\\"navbar-text ng-binding\\\"> {{ctrl.getSelectedRowCount()}} <span translate>selected element(s)</span> </p> </li> <li ng-show=ctrl.isOneSelected() class=ng-hide> <button class=\\\"btn btn-link btn-xs\\\" title=\\\"{{'Zoom to selection' | translate}}\\\" ng-click=ctrl.zoomToSelection()> <i class=\\\"fa fa-search-plus\\\"></i> <span translate>Zoom to</span> </button> </li> <li ng-show=ctrl.isOneSelected() class=ng-hide> <button class=\\\"btn btn-link btn-xs\\\" title=\\\"{{'Export selection as CSV' | translate}}\\\" ng-click=ctrl.downloadCsv()> <i class=\\\"fa fa-download\\\"></i> <span translate>Export as CSV</span> </button> </li> <li class=\\\"dropdown navbar-link dropup\\\"> <button type=button class=\\\"dropup btn btn-default btn-xs\\\" data-toggle=dropdown aria-haspopup=true aria-expanded=false> <span translate>Select</span> <span class=caret></span> </button> <ul class=dropdown-menu aria-labelledby=dLabel> <li> <a href=\\\"\\\" ng-click=ctrl.selectAll() translate>All</a> </li> <li> <a href=\\\"\\\" ng-click=ctrl.unselectAll() translate>None</a> </li> <li> <a href=\\\"\\\" ng-click=ctrl.invertSelection() translate>Reverse selection</a> </li> </ul> </li> </ul> </div> <div ng-show=ctrl.pending class=gmf-displayquerygrid-pending> <span class=\\\"fa fa-spinner fa-spin\\\"></span> </div> </div> \";","module.exports = \"<div class=ngeo-grid-table-container> <table float-thead=ctrl.floatTheadConfig ng-model=ctrl.configuration.data class=\\\"table table-bordered table-striped table-hover\\\"> <thead class=table-header> <tr> <th ng-repeat=\\\"columnDefs in ctrl.configuration.columnDefs\\\" ng-click=ctrl.sort(columnDefs.name) ng-bind-html=\\\"columnDefs.name | ngeoTrustHtml | translate\\\"> <i ng-show=\\\"ctrl.sortedBy !== columnDefs.name\\\" class=\\\"fa fa-fw\\\"></i> <i ng-show=\\\"ctrl.sortedBy === columnDefs.name && ctrl.sortAscending === true\\\" class=\\\"fa fa-caret-up\\\"></i> <i ng-show=\\\"ctrl.sortedBy === columnDefs.name && ctrl.sortAscending === false\\\" class=\\\"fa fa-caret-down\\\"></i> </th> </tr> </thead> <tbody> <tr ng-repeat=\\\"attributes in ctrl.configuration.data\\\" ng-class=\\\"['row-' + ctrl.configuration.getRowUid(attributes), ctrl.configuration.isRowSelected(attributes) ? 'ngeo-grid-active': '']\\\" ng-click=\\\"ctrl.clickRow(attributes, $event)\\\" ng-mousedown=ctrl.preventTextSelection($event)> <td ng-repeat=\\\"columnDefs in ctrl.configuration.columnDefs\\\" ng-bind-html=\\\"attributes[columnDefs.name] | ngeoTrustHtml\\\"></td> </tr> </tbody> </table> </div> \";","module.exports = \"<div class=\\\"btn-group dropup\\\"> <a type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span class=gmf-mouseposition-control-target></span> <span class=caret></span> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li class=dropdown-header translate>Coordinate systems</li> <li ng-repeat=\\\"projitem in ::ctrl.projections\\\"> <a href ng-click=ctrl.setProjection(projitem)> <span class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.projection == projitem}\\\"></span> {{::projitem.label}} </a> </li> </ul> </div> \";","module.exports = \"<div ngeo-map=ctrl.map ngeo-map-manage-resize=ctrl.manageResize ngeo-map-resize-transition=ctrl.resizeTransition> </div> \";","module.exports = \"<div class=\\\"btn-group btn-block\\\" ng-class=\\\"::{'dropup': scaleselectorCtrl.options.dropup}\\\"> <button type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span ng-bind-html=\\\"scaleselectorCtrl.currentScale | ngeoScalify | ngeoTrustHtml\\\"></span>&nbsp;<i class=caret></i> </button> <ul class=\\\"dropdown-menu btn-block\\\" role=menu> <li ng-repeat=\\\"zoomLevel in ::scaleselectorCtrl.zoomLevels\\\"> <a href ng-click=scaleselectorCtrl.changeZoom(zoomLevel) ng-bind-html=\\\"scaleselectorCtrl.getScale(zoomLevel) | ngeoScalify | ngeoTrustHtml\\\"> </a> </li> </ul> </div> \";","module.exports = \"<div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=Close><span aria-hidden=true>&times;</span></button> <h4 class=modal-title translate>Share this map</h4> </div> <div class=modal-body> <form role=form name=gmfShareForm novalidate> <div class=form-group> <label for=gmfShareInputShortLink translate>Permalink</label> <input type=text class=form-control id=gmfShareInputShortLink onclick=this.select() ng-model=$ctrl.shortLink readonly=True> <p class=help-block translate>Copy this link to share it.</p> <p class=text-danger ng-if=$ctrl.showLengthWarning> <span class=\\\"fa fa-exclamation-triangle\\\"></span> {{'You have a lot of drawn elements in this map. The above link may not be correctly supported by some browsers.' | translate}} </p> <p class=text-danger ng-if=$ctrl.errorOnGetShortUrl> <span class=\\\"fa fa-exclamation\\\"></span> {{'Error, cannot get the shortened URL.' | translate}} </p> </div> <hr> <div class=gmf-share-email ng-if=::$ctrl.enableEmail> <div class=form-group> <label for=gmfShareInputEmail translate>Send this link to</label> <input type=email class=form-control name=inputEmail id=gmfShareInputEmail placeholder=E-mail ng-model=$ctrl.email required> <span ng-show=\\\"gmfShareForm.$submitted || gmfShareForm.inputEmail.$touched\\\"> <span class=text-danger ng-show=\\\"gmfShareForm.inputEmail.$error.email || gmfShareForm.inputEmail.$error.required\\\"> <i class=\\\"fa fa-exclamation-triangle\\\" aria-hidden=true></i> {{'Invalid email.' | translate}}</span> </span> </div> <div class=form-group> <textarea class=form-control ng-attr-placeholder=\\\"{{'Message (optional)' | translate }}\\\" ng-model=$ctrl.message></textarea> </div> <span class=text-success ng-if=$ctrl.successfullySent> <i class=\\\"fa fa-check\\\" aria-hidden=true></i> {{ 'Link successfully sent.' | translate }} </span> <span class=text-danger ng-if=$ctrl.errorOnsend> <i class=\\\"fa fa-exclamation\\\" aria-hidden=true></i> {{ 'Error, the link has not been sent.' | translate }} </span> </div> <div class=text-right> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal translate>Close</button> <button ng-if=::$ctrl.enableEmail type=submit class=\\\"btn btn-default btn-primary\\\" ng-click=$ctrl.sendShortUrl() ng-disabled=!gmfShareForm.$valid translate>Send </button> </div> </form> </div> \";","module.exports = \"<div class=gmf-time-slider> <div ui-slider=sliderCtrl.sliderOptions ng-model=sliderCtrl.dates> <span class=\\\"ui-slider-handle ui-state-default ui-corner-all\\\" tabindex=0 data-toggle=tooltip title=\\\"\\\"> </span> </div> <div class=gmf-time-slider-displayed-dates> <div class=gmf-time-slider-start-date ng-if=\\\"::sliderCtrl.time.mode === 'range'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates[0])}}</span> </div> <div class=gmf-time-slider-start-date ng-if=\\\"::sliderCtrl.time.mode === 'value'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates)}}</span> </div> <div class=gmf-time-slider-end-date ng-if=\\\"::sliderCtrl.time.mode === 'range'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates[1])}}</span> </div> </div> </div> \";","module.exports = \"<div class=gmf-layertree-root-tools ng-if=layertreeCtrl.isRoot> <a href ng-if=\\\"gmfLayertreeCtrl.nodesCount() > 0\\\" ng-click=gmfLayertreeCtrl.removeAllNodes()> <span class=\\\"fa fa-trash\\\"></span> {{'Clear all' | translate}} </a> </div> <div ng-if=::!layertreeCtrl.isRoot id=gmf-layertree-node-{{::layertreeCtrl.uid}} ng-class=\\\"[layertreeCtrl.node.children ? 'gmf-layertree-group' : 'gmf-layertree-leaf', 'gmf-layertree-depth-' + layertreeCtrl.depth, gmfLayertreeCtrl.getResolutionStyle(layertreeCtrl.node), gmfLayertreeCtrl.getNodeState(layertreeCtrl)]\\\"> <div class=ngeo-sortable-handle ng-show=\\\"layertreeCtrl.depth === 1 && layertreeCtrl.parent.children.length > 1\\\"> <i class=\\\"gmf-layertree-sortable-handle-icon fa fa-ellipsis-v\\\"></i> </div> <a ng-if=::layertreeCtrl.node.children data-toggle=collapse href=#gmf-layertree-layer-group-{{::layertreeCtrl.uid}} aria-expanded={{::layertreeCtrl.node.metadata.isExpanded}} class=\\\"fa gmf-layertree-expand-node fa-fw\\\"> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) ng-if=::!layertreeCtrl.node.children ng-class=\\\"::{'gmf-layertree-no-layer-icon' : !gmfLayertreeCtrl.getLegendIconURL(layertreeCtrl)}\\\" class=gmf-layertree-layer-icon> <img ng-if=\\\"::(legendIconUrl=gmfLayertreeCtrl.getLegendIconURL(layertreeCtrl))\\\" ng-src={{::legendIconUrl}}>  </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) ng-if=::layertreeCtrl.node.children ng-class=\\\"['fa fa-fw', layertreeCtrl.node.children && !layertreeCtrl.layer.loading ? 'gmf-layertree-state' : 'fa-refresh fa-spin']\\\"> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) class=gmf-layertree-name data-toggle=tooltip data-placement=top title=\\\"{{layertreeCtrl.node.name | translate}}\\\"> {{layertreeCtrl.node.name | translate}} <i class=\\\"gmf-icon gmf-icon-search-go gmf-layertree-zoom\\\" data-toggle=tooltip data-placement=bottom data-title=\\\"{{'Not visible at current scale. Click to zoom.'|translate}}\\\" ng-click=\\\"::gmfLayertreeCtrl.zoomToResolution(layertreeCtrl); $event.preventDefault(); $event.stopPropagation();\\\" ng-if=\\\"gmfLayertreeCtrl.getNodeState(layertreeCtrl) == 'on'\\\"> </i> <span ngeo-popover ngeo-popover-dismiss=.content ng-if=\\\"gmfLayertreeCtrl.getNodeState(layertreeCtrl) !== 'off' && layertreeCtrl.node.time && layertreeCtrl.node.time.mode !== 'disabled'\\\"> <span ngeo-popover-anchor class=\\\"fa fa-clock-o\\\" ng-click=\\\"$event.preventDefault(); $event.stopPropagation()\\\"> </span> <div ngeo-popover-content> <ngeo-date-picker ng-if=\\\"::layertreeCtrl.node.time.widget === 'datepicker'\\\" time=layertreeCtrl.node.time on-date-selected=\\\"gmfLayertreeCtrl.updateWMSTimeLayerState(layertreeCtrl, time)\\\"> </ngeo-date-picker> <gmf-time-slider ng-if=\\\"::layertreeCtrl.node.time.widget === 'slider'\\\" gmf-time-slider-time=layertreeCtrl.node.time gmf-time-slider-on-date-selected=\\\"gmfLayertreeCtrl.updateWMSTimeLayerState(layertreeCtrl, time)\\\"> </gmf-time-slider> </div> </span> <span class=\\\"fa fa-pencil\\\" data-toggle=tooltip data-placement=right title=\\\"{{'Currently editing this layer'|translate}}\\\" ng-if=layertreeCtrl.properties.editing> </span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-if=\\\"::layertreeCtrl.depth == 1\\\" ng-click=gmfLayertreeCtrl.removeNode(layertreeCtrl.node)> <span class=\\\"fa fa-trash\\\"></span> </a> <a class=gmf-layertree-node-menu-btn href=\\\"\\\" ng-if=::gmfLayertreeCtrl.supportsCustomization(layertreeCtrl) ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-menu-' + layertreeCtrl.uid)\\\"> <span class=\\\"fa fa-cog\\\"></span> </a> <span ngeo-popover ng-if=\\\"::(layertreeCtrl.depth === 1 && !layertreeCtrl.node.mixed) || (layertreeCtrl.depth > 1 && layertreeCtrl.parent.node.mixed && !layertreeCtrl.node.children) || (gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend) || layertreeCtrl.getDataSource().filtrable\\\" ngeo-popover-dismiss=.content> <span ngeo-popover-anchor class=\\\"extra-actions fa fa-cog\\\"> </span> <div ngeo-popover-content> <ul> <li ng-if=\\\"::(layertreeCtrl.depth === 1 && !layertreeCtrl.node.mixed) || (layertreeCtrl.depth > 1 && layertreeCtrl.parent.node.mixed)\\\"> <i class=\\\"fa fa-tint fa-fw\\\"></i> <span for=layer-opactity>{{'Opacity'|translate}}</span> <input class=input-action name=layer-opactity type=range min=0 max=1 step=0.01 ng-model=layertreeCtrl.layer.opacity /> </li> <li ng-if=\\\"::gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend'); popoverCtrl.dismissPopover()\\\" data-toggle=collapse href=\\\"\\\"> {{'Show/hide legend'|translate}} </a> </li> <li ng-if=\\\"layertreeCtrl.getDataSource() && layertreeCtrl.getDataSource().filtrable\\\"> <i class=\\\"fa fa-filter fa-fw\\\"></i> <a ng-click=gmfLayertreeCtrl.toggleFiltrableDataSource(layertreeCtrl.getDataSource()) href=\\\"\\\"> {{'Filter'|translate}} </a> </li> </ul> </div> </span> <span class=gmf-layertree-metadata ng-if=::layertreeCtrl.node.metadata.metadataUrl> <span ng-if=\\\"::gmfLayertreeCtrl.openLinksInNewWindow === true\\\"> <a title=\\\"{{'More informations'|translate}}\\\" href={{::layertreeCtrl.node.metadata.metadataUrl}} target=blank_> </a> </span> <span ng-if=\\\"::gmfLayertreeCtrl.openLinksInNewWindow !== true\\\"> <a title=\\\"{{'More informations'|translate}}\\\" href=\\\"\\\" ng-click=gmfLayertreeCtrl.displayMetadata(layertreeCtrl)> </a> </span> </span> </span> </div> <div class=gmf-layertree-node-menu id=gmf-layertree-node-menu-{{::layertreeCtrl.uid}} style=display:none ng-if=::gmfLayertreeCtrl.supportsCustomization(layertreeCtrl)> <div ng-if=::gmfLayertreeCtrl.supportsOpacityChange(layertreeCtrl)> <i class=\\\"fa fa-tint fa-fw\\\"></i> <span for=layer-opactity>{{'Opacity'|translate}}</span> <input class=input-action name=layer-opactity type=range min=0 max=1 step=0.01 ng-model=layertreeCtrl.layer.opacity /> </div> <a class=gmf-layertree-node-menu-togglelegend ng-if=::gmfLayertreeCtrl.supportsLegend(layertreeCtrl) data-toggle=collapse ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\" href=\\\"\\\"> <span class=\\\"fa fa-th-list\\\"> </span> {{'Show/hide legend'|translate}} </a> </div> <div ng-if=\\\"::!layertreeCtrl.isRoot && gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend\\\" id=gmf-layertree-node-{{::layertreeCtrl.uid}}-legend class=\\\"collapse gmf-layertree-legend\\\" ng-class=\\\"::[layertreeCtrl.node.metadata.isLegendExpanded ? 'in' : '']\\\"> <a title=\\\"{{'Hide legend'|translate}}\\\" data-toggle=collapse ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\" href=\\\"\\\"> {{'Hide legend'|translate}} </a> <div ng-if=\\\"gmfLayertreeCtrl.isNodeLegendVisible('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\"> <div ng-repeat=\\\"(title, url) in ::gmfLayertreeCtrl.getLegendsObject(layertreeCtrl)\\\"> <p ng-if=\\\"::gmfLayertreeCtrl.getNumberOfLegendsObject(layertreeCtrl) > 1\\\">{{title|translate}}</p> <img ng-src={{url}}> </div> </div> </div> <ul class=gmf-layertree-root-external-datasources ng-if=\\\"layertreeCtrl.isRoot && (gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmsGroups.length || gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmtsGroups.length || gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup.dataSources.length)\\\"> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-repeat=\\\"wmtsGroup in gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmtsGroups\\\" group=wmtsGroup> </gmf-datasourcegrouptree> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-repeat=\\\"wmsGroup in gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmsGroups\\\" group=wmsGroup> </gmf-datasourcegrouptree> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-if=gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup.dataSources.length group=gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup> </gmf-datasourcegrouptree> </ul> <ul id=gmf-layertree-layer-group-{{::layertreeCtrl.uid}} ng-if=::layertreeCtrl.node.children ng-class=\\\"{collapse: !layertreeCtrl.isRoot, in : layertreeCtrl.node.metadata.isExpanded}\\\" ngeo-sortable=\\\"::layertreeCtrl.isRoot && layertreeCtrl.node.children\\\" ngeo-sortable-options=\\\"{handleClassName: 'ngeo-sortable-handle', draggerClassName: 'gmf-layertree-dragger', placeholderClassName : 'gmf-layertree-curr-drag-item'}\\\" ngeo-sortable-callback=::gmfLayertreeCtrl.afterReorder ngeo-sortable-callback-ctx=::gmfLayertreeCtrl> <li class=gmf-layertree-node ng-repeat=\\\"node in layertreeCtrl.node.children\\\" ng-class=\\\"'gmf-layertree-depth-' + layertreeCtrl.depth\\\" ngeo-layertree=node ngeo-layertree-notroot ngeo-layertree-map=layertreeCtrl.map ngeo-layertree-nodelayerexpr=layertreeCtrl.nodelayerExpr ngeo-layertree-listenersexpr=layertreeCtrl.listenersExpr> </li> </ul> \";","module.exports = \"<span ng-if=::!layertreeCtrl.isRoot>{{::layertreeCtrl.node.name}}</span> <input type=checkbox ng-if=\\\"::layertreeCtrl.node && !layertreeCtrl.node.children\\\" ng-model=layertreeCtrl.getSetActive ng-model-options=\\\"{getterSetter: true}\\\"/> <ul ng-if=::layertreeCtrl.node.children> <li ng-repeat=\\\"node in ::layertreeCtrl.node.children\\\" ngeo-layertree=::node ngeo-layertree-notroot ngeo-layertree-map=layertreeCtrl.map ngeo-layertree-nodelayerexpr=layertreeCtrl.nodelayerExpr ngeo-layertree-listenersexpr=layertreeCtrl.listenersExpr> </li> </ul> \";","module.exports = \"<div class=\\\"gmf-layertree-group gmf-layertree-depth-1 {{$ctrl.group.visibilityState}}\\\"> <a data-toggle=collapse href=#gmf-layertree-layer-group-{{::$ctrl.getGroupUid()}} aria-expanded=true class=\\\"fa gmf-layertree-expand-node fa-fw\\\"> </a> <a class=\\\"fa fa-fw gmf-layertree-state\\\" href ng-click=$ctrl.toggle()> </a> <a class=gmf-layertree-name href ng-click=$ctrl.toggle()> <span>{{$ctrl.group.title | translate}}</span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-click=$ctrl.remove()> <span class=\\\"fa fa-trash\\\"></span> </a> </span> </div> <ul id=gmf-layertree-layer-group-{{::$ctrl.getGroupUid()}} class=\\\"collapse in\\\"> <li class=\\\"gmf-layertree-node gmf-layertree-depth-2\\\" ng-class=\\\"[dataSource.visible ? 'on' : 'off']\\\" ng-repeat=\\\"dataSource in $ctrl.group.dataSources\\\"> <div class=gmf-layertree-leaf> <a href ng-click=$ctrl.toggleDataSource(dataSource) class=\\\"gmf-layertree-layer-icon gmf-layertree-no-layer-icon\\\"> </a> <a class=gmf-layertree-name href ng-click=$ctrl.toggleDataSource(dataSource)> <span>{{dataSource.name | translate}}</span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-click=$ctrl.removeDataSource(dataSource)> <span class=\\\"fa fa-trash\\\"></span> </a> </span> </div> </li> </ul> \";","module.exports = \"<div class=form-group ng-switch=$ctrl.filtrableDataSources.length> <span ng-switch-when=0 translate>No filtrable layer available!</span> <select class=form-control ng-disabled=$ctrl.aRuleIsActive ng-switch-default ng-model=$ctrl.gmfDataSourceBeingFiltered.dataSource ng-options=\\\"dataSource.name | translate for dataSource in $ctrl.filtrableDataSources\\\"> <option value=\\\"\\\" translate>-- Layer to filter --</option> </select> <div ng-if=\\\"$ctrl.customRules && $ctrl.directedRules && $ctrl.readyDataSource\\\"> <hr class=gmf-filterselector-separator /> <div class=\\\"dropdown gmf-filterselector-savedfilters\\\"> <a class=\\\"btn btn-link dropdown-toggle ngeo-filter-condition-button\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive || $ctrl.gmfSavedFilters.currentDataSourceItems.length === 0}\\\" type=button data-toggle=dropdown ng-disabled=\\\"$ctrl.aRuleIsActive || $ctrl.gmfSavedFilters.currentDataSourceItems.length === 0\\\"> <span translate>Saved</span> <span class=caret></span> </a> <ul class=dropdown-menu> <li ng-repeat=\\\"item in $ctrl.gmfSavedFilters.currentDataSourceItems\\\"> <a href ng-click=$ctrl.saveFilterLoadItem(item)> <span>{{::item.name}}</span> </a> </li> <li role=separator class=divider></li> <li> <a href ng-click=$ctrl.saveFilterManage()> <span translate>Manage saved filters</span> </a> </li> </ul> </div> <ngeo-filter a-rule-is-active=$ctrl.aRuleIsActive custom-rules=$ctrl.customRules datasource=$ctrl.readyDataSource directed-rules=$ctrl.directedRules feature-overlay=$ctrl.featureOverlay map=$ctrl.map tool-group=$ctrl.toolGroup> </ngeo-filter> <div> <a class=\\\"btn btn-link gmf-filterselector-savebtn\\\" type=button data-toggle=dropdown ng-click=\\\"!$ctrl.aRuleIsActive && $ctrl.saveFilterShowModal()\\\" ng-disabled=$ctrl.aRuleIsActive> <span class=\\\"fa fa-save\\\"></span> <span translate>Save</span> </a> </div> </div> <ngeo-modal ng-model=$ctrl.saveFilterSaveModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title>{{'Save filter' | translate}}</h4> </div> <div class=modal-body> <p class=gmf-filterselector-savefilter-desc translate> You can save the filter that you created to re-load it later. </p> <input type=text class=form-control name=name ng-model=$ctrl.saveFilterName placeholder=\\\"{{'Filter name' | translate}}\\\"/> </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'Cancel' | translate}}</button> <button type=button ng-click=$ctrl.saveFilterSave() ng-disabled=\\\"$ctrl.saveFilterName === ''\\\" class=\\\"btn btn-primary\\\">{{'Save' | translate}}</button> </div> </ngeo-modal> <ngeo-modal ng-model=$ctrl.saveFilterManageModalShown> <div class=gmf-filterselector-managefilter-modal> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title>{{'Manage filters' | translate}}</h4> </div> <div class=modal-body> <ul> <li ng-repeat=\\\"item in $ctrl.gmfSavedFilters.currentDataSourceItems\\\"> <span>{{::item.name}}</span> <a href ng-click=$ctrl.saveFilterRemoveItem(item)> {{ 'Delete' | translate }} </a> <div class=gmf-eol></div> </li> </ul> </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'Close' | translate}}</button> </div> </div> </ngeo-modal> </div> \";","module.exports = \"<div class=dropdown> <a class=\\\"btn btn-link dropdown-toggle ngeo-filter-condition-button\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive}\\\" type=button data-toggle=dropdown ng-disabled=$ctrl.aRuleIsActive> <span class=\\\"fa fa-cog\\\"></span> <span class=caret></span> </a> <ul class=dropdown-menu> <li class=ngeo-filter-condition-criteria-header translate>Criteria taken into account</li> <li ng-repeat=\\\"condition in ::$ctrl.conditions\\\"> <a href ng-click=$ctrl.setCondition(condition)> <span ng-class=\\\"{'ngeo-filter-condition-criteria-active': condition.value == $ctrl.datasource.filterCondition}\\\" class=\\\"fa fa-check ngeo-filter-condition-criteria\\\"> </span> <span>{{::condition.text | translate}}</span> </a> </li> </ul> </div> <ngeo-rule ng-repeat=\\\"rule in $ctrl.directedRules\\\" feature-overlay=::$ctrl.featureOverlay class=ngeo-filter-rule-directed map=$ctrl.map rule=rule tool-group=$ctrl.toolGroup> </ngeo-rule> <hr class=ngeo-filter-separator-rules /> <div ng-repeat=\\\"rule in $ctrl.customRules\\\"> <a class=\\\"btn btn-xs btn-link ngeo-filter-rule-custom-rm-btn\\\" ng-click=\\\"!$ctrl.aRuleIsActive && $ctrl.removeCustomRule(rule)\\\" ng-disabled=$ctrl.aRuleIsActive href> <span class=\\\"fa fa-remove\\\"></span> </a> <ngeo-rule feature-overlay=::$ctrl.featureOverlay class=ngeo-filter-rule-custom map=$ctrl.map rule=rule tool-group=$ctrl.toolGroup> </ngeo-rule> </div> <div class=dropdown> <a class=\\\"btn btn-link dropdown-toggle\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive}\\\" type=button data-toggle=dropdown ng-disabled=$ctrl.aRuleIsActive> <span translate>+ Add a new criteria</span> <span class=caret></span> </a> <ul class=dropdown-menu> <li ng-repeat=\\\"attribute in ::$ctrl.geometryAttributes\\\"> <a href ng-click=$ctrl.createAndAddCustomRule(attribute)> <span translate>Spatial filter</span> </a> </li> <li role=presentation class=divider></li> <li ng-repeat=\\\"attribute in ::$ctrl.otherAttributes\\\"> <a href ng-click=$ctrl.createAndAddCustomRule(attribute)> <span>{{::attribute.name | translate}}</span> </a> </li> </ul> </div> <hr class=ngeo-filter-separator-criteria /> <a class=\\\"btn btn-link\\\" type=button ng-click=$ctrl.apply() ng-disabled=\\\"$ctrl.hasARule() === false || $ctrl.datasource.visible === false\\\"> <span class=\\\"fa fa-check\\\"></span> <span translate>Apply filter</span> </a> <a class=\\\"btn btn-link\\\" type=button ng-click=$ctrl.getData() ng-disabled=\\\"$ctrl.hasARule() === false || $ctrl.datasource.visible === false\\\"> <span class=\\\"fa fa-chevron-right\\\"></span> <span translate>Get data</span> </a> \";","module.exports = \"<div class=dropdown ng-class=\\\"{open: $ctrl.rule.active}\\\"> <a class=\\\"btn btn-default btn-sm dropdown-toggle\\\" type=button ng-click=$ctrl.toggle()> <span>{{ ::$ctrl.clone.name | translate }}</span> <span class=caret></span> </a> <div class=\\\"dropdown-menu form-group\\\"> <select class=\\\"form-control ngeo-rule-operators-list\\\" ng-disabled=$ctrl.drawActive ng-if=::$ctrl.clone.operators ng-model=$ctrl.clone.operator ng-options=\\\"$ctrl.operators[operator] | translate for operator in ::$ctrl.clone.operators track by operator\\\"> </select> <div ng-switch=::$ctrl.clone.type> <div class=\\\"ngeo-rule-type-date form-group\\\" ng-if=$ctrl.rule.active ng-switch-when=date|datetime ng-switch-when-separator=|> <div ng-switch=$ctrl.clone.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <ngeo-date-picker time=$ctrl.timeRangeMode on-date-selected=$ctrl.onDateRangeSelected(time)> </ngeo-date-picker> </div> <div ng-switch-default> <ngeo-date-picker time=$ctrl.timeValueMode on-date-selected=$ctrl.onDateSelected(time)> </ngeo-date-picker> </div> </div> </div> <div class=\\\"ngeo-rule-type-geometry form-group\\\" ng-switch-when=geometry> <div ng-switch=$ctrl.geomType> <span class=\\\"gmf-icon gmf-icon-point\\\" ng-switch-when=Point> </span> <span class=\\\"gmf-icon gmf-icon-line\\\" ng-switch-when=LineString> </span> <span class=\\\"gmf-icon gmf-icon-polygon\\\" ng-switch-when=Polygon> </span> <span class=\\\"gmf-icon gmf-icon-circle\\\" ng-switch-when=Circle> </span> <span class=\\\"gmf-icon gmf-icon-rectangle\\\" ng-switch-when=Rectangle> </span> </div> <ngeo-drawfeature ngeo-drawfeature-active=$ctrl.drawActive ngeo-drawfeature-features=$ctrl.drawnFeatures ngeo-drawfeature-map=$ctrl.map> <div ngeo-btn-group class=btn-group> <a data-toggle=tooltip title=\\\"{{'Draw a point on the map' | translate}}\\\" href ngeo-btn ngeo-drawpoint class=\\\"btn btn-sm btn-default ngeo-drawfeature-point\\\" ng-show=\\\"['intersects', 'within'].indexOf($ctrl.clone.operator) !== -1\\\" ng-class=\\\"{active: dfCtrl.drawPoint.active}\\\" ng-model=dfCtrl.drawPoint.active> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a line on the map' | translate}}\\\" href ngeo-btn ngeo-measurelength class=\\\"btn btn-sm btn-default ngeo-drawfeature-linestring\\\" ng-show=\\\"['intersects', 'within'].indexOf($ctrl.clone.operator) !== -1\\\" ng-class=\\\"{active: dfCtrl.measureLength.active}\\\" ng-model=dfCtrl.measureLength.active> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a polygon on the map' | translate}}\\\" href ngeo-btn ngeo-measurearea class=\\\"btn btn-sm btn-default ngeo-drawfeature-polygon\\\" ng-class=\\\"{active: dfCtrl.measureArea.active}\\\" ng-model=dfCtrl.measureArea.active> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a circle on the map' | translate}}\\\" href ngeo-btn ngeo-measureazimut class=\\\"btn btn-sm btn-default ngeo-drawfeature-circle\\\" ng-class=\\\"{active: dfCtrl.measureAzimut.active}\\\" ng-model=dfCtrl.measureAzimut.active> <span class=\\\"gmf-icon gmf-icon-circle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a rectangle on the map' | translate}}\\\" href ngeo-btn ngeo-drawrectangle class=\\\"btn btn-sm btn-default ngeo-drawfeature-rectangle\\\" ng-class=\\\"{active: dfCtrl.drawRectangle.active}\\\" ng-model=dfCtrl.drawRectangle.active> <span class=\\\"gmf-icon gmf-icon-rectangle\\\"></span> </a> </div> <div class=ngeo-rule-type-geometry-instructions ng-if=$ctrl.drawActive> <span ng-if=dfCtrl.drawPoint.active> {{ 'Draw a point on the map.' | translate }} </span> <span ng-if=dfCtrl.measureLength.active> {{ 'Draw a line string on the map.' | translate }} </span> <span ng-if=dfCtrl.measureArea.active> {{ 'Draw a polygon on the map.' | translate }} </span> <span ng-if=dfCtrl.measureAzimut.active> {{ 'Draw a circle on the map.' | translate }} </span> <span ng-if=dfCtrl.drawRectangle.active> {{ 'Draw a rectangle on the map.' | translate }} </span> </div> </ngeo-drawfeature> </div> <div class=\\\"checkbox ngeo-rule-type-select\\\" ng-switch-when=select> <a ng-click=$ctrl.selectAllChoices() href>{{ All | translate}} </a> <label class=\\\"form-group ol-unselectable\\\" ng-repeat=\\\"choice in ::$ctrl.clone.choices\\\"> <input ng-checked=\\\"$ctrl.clone.getExpression() && $ctrl.clone.getExpression().split(',').indexOf(choice) > -1\\\" ng-click=$ctrl.toggleChoiceSelection(choice) type=checkbox value=choice /> <span>{{ choice | translate }}</span> </label> </div> <div class=\\\"form-group ngeo-rule-type-text\\\" ng-switch-default> <div ng-switch=$ctrl.clone.operator> <div ng-switch-when=..> <input type=number class=form-control ng-model=$ctrl.clone.lowerBoundary /> <input type=number class=form-control ng-model=$ctrl.clone.upperBoundary /> </div> <div ng-switch-default> <input type=number class=form-control ng-if=\\\"$ctrl.clone.type === 'number'\\\" ng-model=$ctrl.clone.expression /> <input type=text class=form-control ng-if=\\\"$ctrl.clone.type !== 'number'\\\" ng-model=$ctrl.clone.expression /> </div> </div> </div> <div class=ngeo-rule-btns> <button class=\\\"btn btn-xs btn-default\\\" ng-click=$ctrl.apply() type=button>{{'Apply' | translate}}</button> <button class=\\\"btn btn-xs btn-default\\\" ng-click=$ctrl.cancel() type=button>{{'Cancel' | translate}}</button> </div> </div> </div> </div> <div class=ngeo-rule-value ng-if=\\\"$ctrl.rule.value !== null\\\"> <a class=\\\"btn btn-xs btn-link\\\" ng-click=\\\"!$ctrl.rule.active && $ctrl.reset()\\\" ng-disabled=$ctrl.rule.active href> <span class=\\\"fa fa-remove\\\"></span> </a> <div ng-switch=::$ctrl.rule.type> <div ng-switch-when=date|datetime ng-switch-when-separator=|> <div ng-switch=$ctrl.rule.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <span translate>From </span> <span>{{ $ctrl.timeToDate($ctrl.rule.lowerBoundary) }}</span> <span translate> to </span> <span>{{ $ctrl.timeToDate($ctrl.rule.upperBoundary) }}</span> </div> <div ng-switch-default> <span>{{ $ctrl.operatorsShortFormat[$ctrl.rule.operator] }}</span> <span>{{ $ctrl.timeToDate($ctrl.rule.getExpression()) }}</span> </div> </div> </div> <div ng-switch-when=geometry> <span>{{ $ctrl.operators[$ctrl.rule.operator] }}</span> <span ng-switch=$ctrl.getRuleGeometryType()> <span class=\\\"gmf-icon gmf-icon-point\\\" ng-switch-when=Point> </span> <span class=\\\"gmf-icon gmf-icon-line\\\" ng-switch-when=LineString> </span> <span class=\\\"gmf-icon gmf-icon-polygon\\\" ng-switch-when=Polygon> </span> <span class=\\\"gmf-icon gmf-icon-circle\\\" ng-switch-when=Circle> </span> <span class=\\\"gmf-icon gmf-icon-rectangle\\\" ng-switch-when=Rectangle> </span> </span> </div> <div ng-switch-when=select> <span ng-repeat=\\\"choice in $ctrl.rule.getExpression().split(',')\\\"> {{ choice | translate }}{{ $last ? '' : ', ' }} </span> </div> <div ng-switch-default> <div ng-switch=$ctrl.rule.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <span translate>Between </span> <span>{{ $ctrl.rule.lowerBoundary }}</span> <span translate> and </span> <span>{{ $ctrl.rule.upperBoundary }}</span> </div> <div ng-switch-default> <span>{{ $ctrl.operatorsShortFormat[$ctrl.rule.operator] }}</span> <span>{{ $ctrl.rule.getExpression() }}</span> </div> </div> </div> </div> </div> \";","module.exports = \"<div class=ngeo-datepicker> <form name=dateForm class=ngeo-datepicker-form novalidate> <div ng-if=\\\"::datepickerCtrl.time.widget === 'datepicker'\\\"> <div class=ngeo-datepicker-start-date> <span ng-if=\\\"::datepickerCtrl.time.mode === 'range'\\\" translate>From:</span> <span ng-if=\\\"::datepickerCtrl.time.mode !== 'range'\\\" translate>Date:</span> <input name=sdate ui-date=datepickerCtrl.sdateOptions ng-model=datepickerCtrl.sdate required=\\\"\\\"/> </div> <div class=ngeo-datepicker-end-date ng-if=\\\"::datepickerCtrl.time.mode === 'range'\\\"> <span translate>To:</span> <input name=edate ui-date=datepickerCtrl.edateOptions ng-model=datepickerCtrl.edate required=\\\"\\\"/> </div> </div> </form> </div> \";","module.exports = \"<h4 class=\\\"popover-title ngeo-popup-title\\\"> <span ng-bind-html=title></span> <button type=button class=close ng-click=\\\"open = false\\\"> &times;</button> </h4> <div class=popover-content ng-bind-html=content></div> \";","module.exports = \"<ul class=gmf-backgroundlayerselector> <li ng-repeat=\\\"layer in ctrl.bgLayers\\\" ng-click=ctrl.setLayer(layer) ng-class=\\\"{'gmf-backgroundlayerselector-active': ctrl.bgLayer == layer, 'gmf-backgroundlayerselector-disabled': ctrl.opacityLayer == layer}\\\"> <img class=gmf-thumb ng-src=\\\"{{::layer.get('metadata')['thumbnail']}}\\\"/> <span class=gmf-text>{{layer.get(\\\"label\\\") | translate}}</span> <span ng-class=\\\"{'gmf-backgroundlayerselector-opacity-check': ctrl.opacityLayer == layer}\\\"></span> </li> <input ng-if=ctrl.opacityLayer class=\\\"input-action gmf-backgroundlayerselector-opacity-slider\\\" name=bg-layer-opacity type=range min=0 max=1 step=0.01 ng-model=ctrl.getSetBgLayerOpacity ng-model-options=\\\"{getterSetter: true}\\\"> </ul> \";","module.exports = \"<div ng-if=$ctrl.gmfUser.username> <div class=form-group> <span>{{'Logged in as' | translate}}</span> <strong>{{ ::$ctrl.gmfUser.username }}</strong>. </div> <form name=logoutForm role=form ng-submit=$ctrl.logout() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\" ng-if=!$ctrl.changingPassword> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Logout' | translate}}\\\"/> </div> <div class=form-group> <input ng-show=$ctrl.allowPasswordChange type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Change password' | translate}}\\\" ng-click=\\\"$ctrl.changingPassword = true\\\"/> </div> </form> <form name=changePasswordForm role=form ng-submit=$ctrl.changePassword() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\" ng-if=$ctrl.changingPassword> <div class=form-group> <input type=password class=form-control name=oldpassword ng-model=$ctrl.oldPwdVal ng-attr-placeholder=\\\"{{'Old password' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=newpassword ng-model=$ctrl.newPwdVal ng-attr-placeholder=\\\"{{'New password' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=newpasswordconfirm ng-model=$ctrl.newPwdConfVal ng-attr-placeholder=\\\"{{'Confirm new password' | translate}}\\\"/> </div> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Change password' | translate}}\\\"/> </div> <div class=form-group> <input type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Cancel' | translate}}\\\" ng-if=!$ctrl.userMustChangeItsPassword() ng-click=$ctrl.changePasswordReset() /> <input type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Logout' | translate}}\\\" ng-if=$ctrl.userMustChangeItsPassword() ng-click=$ctrl.logout() /> </div> </form> <div ng-show=$ctrl.error class=\\\"gmf-authentication-error help-block\\\"></div> <ngeo-modal ng-model=$ctrl.changePasswordModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Password Changed' | translate}} </h4> </div> <div class=modal-body> {{'Your password has successfully been changed.' | translate}} </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'OK' | translate}}</button> </div> </ngeo-modal> </div> <div ng-if=!$ctrl.gmfUser.username> <form name=loginForm role=form ng-submit=$ctrl.login() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\"> <div class=form-group> <input type=text class=form-control name=login ng-model=$ctrl.loginVal ng-attr-placeholder=\\\"{{'Username' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=password ng-model=$ctrl.pwdVal ng-attr-placeholder=\\\"{{'Password' | translate}}\\\"/> </div> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Connect' | translate}}\\\"/> </div> <div ng-show=$ctrl.allowPasswordReset class=form-group> <a ng-click=$ctrl.resetPassword() href=\\\"\\\">{{'Password forgotten?' | translate}}</a> </div> </form> <div ng-show=$ctrl.error class=\\\"gmf-authentication-error help-block\\\"></div> <ngeo-modal ng-model=$ctrl.resetPasswordModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Password forgotten?' | translate}} </h4> </div> <div class=modal-body translate> A new password has just been sent to you by e-mail. </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'OK' | translate}}</button> </div> </ngeo-modal> </div> \";"],"sourceRoot":""}